class com.android.server.wifi.WifiScanningServiceImpl$ClientHandler extends android.os.Handler
{
    final com.android.server.wifi.WifiScanningServiceImpl this$0;

    void <init>(com.android.server.wifi.WifiScanningServiceImpl, android.os.Looper)
    {
        com.android.server.wifi.WifiScanningServiceImpl$ClientHandler r0;
        com.android.server.wifi.WifiScanningServiceImpl r1;
        android.os.Looper r2;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$ClientHandler;

        r1 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>(r2);

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wifi.WifiScanningServiceImpl$ClientHandler r0;
        android.os.Message r1, $r55;
        com.android.internal.util.AsyncChannel r2, $r39, r62;
        com.android.server.wifi.WifiScanningServiceImpl$ClientInfo r3, $r19, r61, r63;
        int[] r4, $r51, r65;
        int i0, i1, i2, $i4, $i5, $i6, $i9, $i10, $i14;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r12, $r14, $r16, $r18, $r24, $r27, $r28, $r29, $r32, $r34, $r53, $r56, $r57;
        java.lang.String $r8, $r11, $r17, $r30, $r31, $r54;
        java.lang.Object $r13, $r40, $r49;
        android.os.Messenger $r15, $r21, $r22, $r33, $r36, $r41, $r43, $r52;
        com.android.server.wifi.WifiScanningServiceImpl $r20, $r23, $r37, $r38, $r42, $r45, $r46, $r50, $r59, $r60;
        java.util.HashMap $r25, $r35, $r48;
        android.content.Context $r44;
        com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine $r47;
        java.lang.SecurityException $r58;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$ClientHandler;

        r1 := @parameter0: android.os.Message;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ClientHandler got");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r8);

        $i4 = r1.<android.os.Message: int what>;

        tableswitch($i4)
        {
            case 69632: goto label01;
            case 69633: goto label08;
            case 69634: goto label09;
            case 69635: goto label09;
            case 69636: goto label04;
            default: goto label09;
        };

     label01:
        $i5 = r1.<android.os.Message: int arg1>;

        if $i5 != 0 goto label02;

        $r13 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.util.AsyncChannel) $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New client listening to asynchronous messages: ");

        $r15 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r17);

        $r19 = new com.android.server.wifi.WifiScanningServiceImpl$ClientInfo;

        $r23 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r22 = r1.<android.os.Message: android.os.Messenger replyTo>;

        specialinvoke $r19.<com.android.server.wifi.WifiScanningServiceImpl$ClientInfo: void <init>(com.android.server.wifi.WifiScanningServiceImpl,com.android.internal.util.AsyncChannel,android.os.Messenger)>($r23, r2, $r22);

        r3 = $r19;

        $r20 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r25 = $r20.<com.android.server.wifi.WifiScanningServiceImpl: java.util.HashMap mClients>;

        $r21 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r3);

        goto label03;

     label02:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client connection failure, error=");

        $i6 = r1.<android.os.Message: int arg1>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiScanningService", $r11);

     label03:
        return;

     label04:
        $i9 = r1.<android.os.Message: int arg1>;

        if $i9 != 2 goto label05;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiScanningService", "Send failed, client connection lost");

        goto label06;

     label05:
        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client connection lost with reason: ");

        $i10 = r1.<android.os.Message: int arg1>;

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r30);

     label06:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closing client ");

        $r33 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("WifiScanningService", $r31);

        $r37 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r35 = $r37.<com.android.server.wifi.WifiScanningServiceImpl: java.util.HashMap mClients>;

        $r36 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r40 = virtualinvoke $r35.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r36);

        r61 = (com.android.server.wifi.WifiScanningServiceImpl$ClientInfo) $r40;

        if r61 == null goto label07;

        virtualinvoke r61.<com.android.server.wifi.WifiScanningServiceImpl$ClientInfo: void cleanup()>();

     label07:
        return;

     label08:
        $r39 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r39.<com.android.internal.util.AsyncChannel: void <init>()>();

        r62 = $r39;

        $r38 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r44 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.content.Context access$000(com.android.server.wifi.WifiScanningServiceImpl)>($r38);

        $r43 = r1.<android.os.Message: android.os.Messenger replyTo>;

        virtualinvoke r62.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r44, r0, $r43);

        return;

     label09:
        $r42 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r48 = $r42.<com.android.server.wifi.WifiScanningServiceImpl: java.util.HashMap mClients>;

        $r41 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r49 = virtualinvoke $r48.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r41);

        r63 = (com.android.server.wifi.WifiScanningServiceImpl$ClientInfo) $r49;

        if r63 != null goto label10;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find client info for message ");

        $r52 = r1.<android.os.Message: android.os.Messenger replyTo>;

        $r53 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WifiScanningService", $r54);

        $r59 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        virtualinvoke $r59.<com.android.server.wifi.WifiScanningServiceImpl: void replyFailed(android.os.Message,int,java.lang.String)>(r1, -2, "Could not find listener");

        return;

     label10:
        $r50 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: void access$100(com.android.server.wifi.WifiScanningServiceImpl)>($r50);

     label11:
        goto label13;

     label12:
        $r58 := @caughtexception;

        $r60 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        virtualinvoke $r60.<com.android.server.wifi.WifiScanningServiceImpl: void replyFailed(android.os.Message,int,java.lang.String)>(r1, -4, "Not authorized");

        return;

     label13:
        $r51 = newarray (int)[8];

        $r51[0] = 159744;

        $r51[1] = 159746;

        $r51[2] = 159747;

        $r51[3] = 159750;

        $r51[4] = 159751;

        $r51[5] = 159757;

        $r51[6] = 159755;

        $r51[7] = 159756;

        r65 = $r51;

        r4 = r65;

        i0 = lengthof r4;

        i1 = 0;

     label14:
        if i1 >= i0 goto label16;

        i2 = r4[i1];

        $i14 = r1.<android.os.Message: int what>;

        if i2 != $i14 goto label15;

        $r46 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r47 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine access$200(com.android.server.wifi.WifiScanningServiceImpl)>($r46);

        $r55 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke $r47.<com.android.server.wifi.WifiScanningServiceImpl$WifiScanningStateMachine: void sendMessage(android.os.Message)>($r55);

        return;

     label15:
        i1 = i1 + 1;

        goto label14;

     label16:
        $r45 = r0.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        virtualinvoke $r45.<com.android.server.wifi.WifiScanningServiceImpl: void replyFailed(android.os.Message,int,java.lang.String)>(r1, -3, "Invalid request");

        return;

        catch java.lang.SecurityException from label10 to label11 with label12;
    }
}
