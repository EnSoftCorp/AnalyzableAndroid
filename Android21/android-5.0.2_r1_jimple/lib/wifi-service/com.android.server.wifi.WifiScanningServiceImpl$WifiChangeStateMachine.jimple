class com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine extends com.android.internal.util.StateMachine implements com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler
{
    private static final java.lang.String TAG;
    private static final int WIFI_CHANGE_CMD_NEW_SCAN_RESULTS;
    private static final int WIFI_CHANGE_CMD_CHANGE_DETECTED;
    private static final int WIFI_CHANGE_CMD_CHANGE_TIMEOUT;
    private static final int WIFI_CHANGE_CMD_ENABLE;
    private static final int WIFI_CHANGE_CMD_DISABLE;
    private static final int WIFI_CHANGE_CMD_CONFIGURE;
    private static final int MAX_APS_TO_TRACK;
    private static final int MOVING_SCAN_PERIOD_MS;
    private static final int STATIONARY_SCAN_PERIOD_MS;
    private static final int MOVING_STATE_TIMEOUT_MS;
    com.android.internal.util.State mDefaultState;
    com.android.internal.util.State mStationaryState;
    com.android.internal.util.State mMovingState;
    private static final java.lang.String ACTION_TIMEOUT;
    android.app.AlarmManager mAlarmManager;
    android.app.PendingIntent mTimeoutIntent;
    android.net.wifi.ScanResult[] mCurrentBssids;
    com.android.server.wifi.WifiScanningServiceImpl$ClientInfo mClientInfo;
    private static final int SCAN_COMMAND_ID;
    final com.android.server.wifi.WifiScanningServiceImpl this$0;

    void <init>(com.android.server.wifi.WifiScanningServiceImpl, android.os.Looper)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.server.wifi.WifiScanningServiceImpl r1;
        android.os.Looper r2;
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState $r3;
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState $r4;
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$MovingState $r5;
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$ClientInfoLocal $r6;
        com.android.server.wifi.WifiScanningServiceImpl$ClientInfo $r7;
        java.util.HashMap $r8;
        com.android.internal.util.State $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0> = r1;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>("SignificantChangeStateMachine", r2);

        $r3 = new com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState;

        specialinvoke $r3.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$DefaultState: void <init>(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mDefaultState> = $r3;

        $r4 = new com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState;

        specialinvoke $r4.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$StationaryState: void <init>(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mStationaryState> = $r4;

        $r5 = new com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$MovingState;

        specialinvoke $r5.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$MovingState: void <init>(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mMovingState> = $r5;

        $r6 = new com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$ClientInfoLocal;

        specialinvoke $r6.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$ClientInfoLocal: void <init>(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl$ClientInfo mClientInfo> = $r6;

        $r8 = r1.<com.android.server.wifi.WifiScanningServiceImpl: java.util.HashMap mClients>;

        $r7 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl$ClientInfo mClientInfo>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r7);

        $r10 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void addState(com.android.internal.util.State)>($r10);

        $r12 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mStationaryState>;

        $r11 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r12, $r11);

        $r14 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mMovingState>;

        $r13 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r14, $r13);

        $r15 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void setInitialState(com.android.internal.util.State)>($r15);

        return;
    }

    public void enable()
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.content.Intent r1, $r4;
        android.app.AlarmManager $r2, $r16;
        android.app.PendingIntent $r3, $r7;
        com.android.server.wifi.WifiScanningServiceImpl $r5, $r8, $r13;
        android.content.Context $r6, $r9, $r14;
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$1 $r10;
        android.content.IntentFilter $r11;
        java.lang.Object $r15;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        $r2 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.app.AlarmManager mAlarmManager>;

        if $r2 != null goto label1;

        $r13 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r14 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.content.Context access$000(com.android.server.wifi.WifiScanningServiceImpl)>($r13);

        $r15 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r16 = (android.app.AlarmManager) $r15;

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.app.AlarmManager mAlarmManager> = $r16;

     label1:
        $r3 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.app.PendingIntent mTimeoutIntent>;

        if $r3 != null goto label2;

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.WifiScanningServiceImpl.action.TIMEOUT", null);

        r1 = $r4;

        $r5 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r6 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.content.Context access$000(com.android.server.wifi.WifiScanningServiceImpl)>($r5);

        $r7 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r6, 0, r1, 0);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.app.PendingIntent mTimeoutIntent> = $r7;

        $r8 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r9 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: android.content.Context access$000(com.android.server.wifi.WifiScanningServiceImpl)>($r8);

        $r10 = new com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$1;

        specialinvoke $r10.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine$1: void <init>(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine)>(r0);

        $r11 = new android.content.IntentFilter;

        specialinvoke $r11.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.WifiScanningServiceImpl.action.TIMEOUT");

        virtualinvoke $r9.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, $r11);

     label2:
        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void sendMessage(int)>(3);

        return;
    }

    public void disable()
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void sendMessage(int)>(4);

        return;
    }

    public void configure(android.net.wifi.WifiScanner$WifiChangeSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.WifiScanner$WifiChangeSettings r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.WifiScanner$WifiChangeSettings;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void sendMessage(int,java.lang.Object)>(5, r1);

        return;
    }

    void reconfigureScan(android.net.wifi.ScanResult[], int)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.ScanResult[] r1, r3, r58;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, i38, i39, i40, i41, i42;
        java.util.HashMap r2, $r7;
        android.net.wifi.ScanResult r4, r5, $r19, $r20, $r22, $r23, $r36, $r42, $r43, $r44, $r45, $r47, r61;
        android.net.wifi.WifiScanner$BssidInfo r6, $r17;
        java.util.ArrayList $r8, r62;
        boolean $z0, z2;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r35, $r50, $r54, $r56, $r57;
        java.lang.String $r12, $r21, $r30, $r34, $r46, $r48, $r53, $r55;
        android.net.wifi.WifiScanner$ScanSettings $r14, r63;
        android.net.wifi.WifiScanner$ChannelSpec[] $r15, $r38;
        android.net.wifi.WifiScanner$WifiChangeSettings $r16, r64;
        android.net.wifi.WifiScanner$BssidInfo[] $r18, $r26;
        android.net.wifi.WifiScanner$ChannelSpec $r33;
        java.lang.Integer $r37, $r40;
        java.lang.Object $r39, $r41, $r52;
        java.util.Collection r59;
        java.util.Iterator r60;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.ScanResult[];

        i0 := @parameter1: int;

        $i5 = lengthof r1;

        if $i5 >= 3 goto label01;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too few APs (");

        $i37 = lengthof r1;

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") available to track wifi change");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", $r55);

        return;

     label01:
        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void removeScanRequest()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r2 = $r7;

        r3 = r1;

        i1 = lengthof r3;

        i2 = 0;

     label02:
        if i2 >= i1 goto label05;

        r4 = r3[i2];

        $r46 = r4.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r52 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r46);

        r5 = (android.net.wifi.ScanResult) $r52;

        if r5 != null goto label03;

        $r48 = r4.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r48, r4);

        goto label04;

     label03:
        $i35 = r5.<android.net.wifi.ScanResult: int level>;

        $i34 = r4.<android.net.wifi.ScanResult: int level>;

        if $i35 <= $i34 goto label04;

        $r53 = r4.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, r4);

     label04:
        i2 = i2 + 1;

        goto label02;

     label05:
        r58 = newarray (android.net.wifi.ScanResult)[3];

        r59 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        r60 = interfaceinvoke r59.<java.util.Collection: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r41 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        r61 = (android.net.wifi.ScanResult) $r41;

        i38 = 0;

     label07:
        $i27 = lengthof r58;

        if i38 >= $i27 goto label12;

        $r42 = r58[i38];

        if $r42 == null goto label08;

        $r45 = r58[i38];

        $i30 = $r45.<android.net.wifi.ScanResult: int level>;

        $i29 = r61.<android.net.wifi.ScanResult: int level>;

        if $i30 >= $i29 goto label11;

     label08:
        i3 = lengthof r58;

     label09:
        $i32 = i38 + 1;

        if i3 <= $i32 goto label10;

        $i33 = i3 - 1;

        $i31 = i3 - 2;

        $r47 = r58[$i31];

        r58[$i33] = $r47;

        i3 = i3 + -1;

        goto label09;

     label10:
        r58[i38] = r61;

        goto label12;

     label11:
        i38 = i38 + 1;

        goto label07;

     label12:
        goto label06;

     label13:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r62 = $r8;

        i39 = 0;

     label14:
        $i6 = lengthof r58;

        if i39 >= $i6 goto label19;

        z2 = 0;

        i40 = i39 + 1;

     label15:
        $i23 = lengthof r58;

        if i40 >= $i23 goto label17;

        $r43 = r58[i40];

        $i26 = $r43.<android.net.wifi.ScanResult: int frequency>;

        $r44 = r58[i39];

        $i28 = $r44.<android.net.wifi.ScanResult: int frequency>;

        if $i26 != $i28 goto label16;

        z2 = 1;

     label16:
        i40 = i40 + 1;

        goto label15;

     label17:
        if z2 != 0 goto label18;

        $r36 = r58[i39];

        $i24 = $r36.<android.net.wifi.ScanResult: int frequency>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        virtualinvoke r62.<java.util.ArrayList: boolean add(java.lang.Object)>($r37);

     label18:
        i39 = i39 + 1;

        goto label14;

     label19:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ");

        $i7 = virtualinvoke r62.<java.util.ArrayList: int size()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" channels");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", $r12);

        $r14 = new android.net.wifi.WifiScanner$ScanSettings;

        specialinvoke $r14.<android.net.wifi.WifiScanner$ScanSettings: void <init>()>();

        r63 = $r14;

        r63.<android.net.wifi.WifiScanner$ScanSettings: int band> = 0;

        $i9 = virtualinvoke r62.<java.util.ArrayList: int size()>();

        $r15 = newarray (android.net.wifi.WifiScanner$ChannelSpec)[$i9];

        r63.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels> = $r15;

        i41 = 0;

     label20:
        $i10 = virtualinvoke r62.<java.util.ArrayList: int size()>();

        if i41 >= $i10 goto label21;

        $r38 = r63.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels>;

        $r33 = new android.net.wifi.WifiScanner$ChannelSpec;

        $r39 = virtualinvoke r62.<java.util.ArrayList: java.lang.Object get(int)>(i41);

        $r40 = (java.lang.Integer) $r39;

        $i25 = virtualinvoke $r40.<java.lang.Integer: int intValue()>();

        specialinvoke $r33.<android.net.wifi.WifiScanner$ChannelSpec: void <init>(int)>($i25);

        $r38[i41] = $r33;

        i41 = i41 + 1;

        goto label20;

     label21:
        r63.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs> = i0;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void addScanRequest(android.net.wifi.WifiScanner$ScanSettings)>(r63);

        $r16 = new android.net.wifi.WifiScanner$WifiChangeSettings;

        specialinvoke $r16.<android.net.wifi.WifiScanner$WifiChangeSettings: void <init>()>();

        r64 = $r16;

        r64.<android.net.wifi.WifiScanner$WifiChangeSettings: int rssiSampleSize> = 3;

        r64.<android.net.wifi.WifiScanner$WifiChangeSettings: int lostApSampleSize> = 3;

        r64.<android.net.wifi.WifiScanner$WifiChangeSettings: int unchangedSampleSize> = 3;

        r64.<android.net.wifi.WifiScanner$WifiChangeSettings: int minApsBreachingThreshold> = 2;

        $i12 = lengthof r58;

        $r18 = newarray (android.net.wifi.WifiScanner$BssidInfo)[$i12];

        r64.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos> = $r18;

        i42 = 0;

     label22:
        $i11 = lengthof r58;

        if i42 >= $i11 goto label23;

        $r17 = new android.net.wifi.WifiScanner$BssidInfo;

        specialinvoke $r17.<android.net.wifi.WifiScanner$BssidInfo: void <init>()>();

        r6 = $r17;

        $r20 = r58[i42];

        $r21 = $r20.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        r6.<android.net.wifi.WifiScanner$BssidInfo: java.lang.String bssid> = $r21;

        $r19 = r58[i42];

        $i13 = $r19.<android.net.wifi.ScanResult: int level>;

        $i15 = 100 + $i13;

        $i16 = $i15 / 32;

        i4 = $i16 + 2;

        $r22 = r58[i42];

        $i14 = $r22.<android.net.wifi.ScanResult: int level>;

        $i19 = $i14 - i4;

        r6.<android.net.wifi.WifiScanner$BssidInfo: int low> = $i19;

        $r23 = r58[i42];

        $i17 = $r23.<android.net.wifi.ScanResult: int level>;

        $i18 = $i17 + i4;

        r6.<android.net.wifi.WifiScanner$BssidInfo: int high> = $i18;

        $r26 = r64.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $r26[i42] = r6;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting bssid=");

        $r30 = r6.<android.net.wifi.WifiScanner$BssidInfo: java.lang.String bssid>;

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("low=");

        $i21 = r6.<android.net.wifi.WifiScanner$BssidInfo: int low>;

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", high=");

        $i20 = r6.<android.net.wifi.WifiScanner$BssidInfo: int high>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", $r34);

        i42 = i42 + 1;

        goto label22;

     label23:
        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void trackSignificantWifiChange(android.net.wifi.WifiScanner$WifiChangeSettings)>(r64);

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.net.wifi.ScanResult[] mCurrentBssids> = r58;

        return;
    }

    void reconfigureScan(android.net.wifi.WifiScanner$WifiChangeSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.WifiScanner$WifiChangeSettings r1;
        java.util.HashSet r2, $r9;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12;
        android.net.wifi.ScanResult r3, $r16;
        java.util.Iterator r4;
        java.lang.Integer r5, $r21;
        android.net.wifi.WifiScanner$BssidInfo[] $r6, $r7, $r10, $r18, $r22, $r28;
        android.net.wifi.ScanResult[] $r8, $r19;
        android.net.wifi.WifiScanner$ScanSettings $r11, r30;
        android.net.wifi.WifiScanner$ChannelSpec[] $r12, $r14;
        boolean $z0;
        java.lang.Object $r13;
        android.net.wifi.WifiScanner$ChannelSpec $r15;
        android.net.wifi.WifiScanner$BssidInfo $r17, $r23;
        java.lang.String $r20, $r29;
        java.lang.StringBuilder $r24, $r25, $r26, $r27;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.WifiScanner$WifiChangeSettings;

        $r6 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $i1 = lengthof $r6;

        if $i1 >= 3 goto label1;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("too few APs (");

        $r28 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $i10 = lengthof $r28;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") available to track wifi change");

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", $r29);

        return;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", "Setting configuration specified by app");

        $r7 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $i3 = lengthof $r7;

        $r8 = newarray (android.net.wifi.ScanResult)[$i3];

        r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.net.wifi.ScanResult[] mCurrentBssids> = $r8;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>()>();

        r2 = $r9;

        i0 = 0;

     label2:
        $r10 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $i4 = lengthof $r10;

        if i0 >= $i4 goto label3;

        $r16 = new android.net.wifi.ScanResult;

        specialinvoke $r16.<android.net.wifi.ScanResult: void <init>()>();

        r3 = $r16;

        $r18 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $r17 = $r18[i0];

        $r20 = $r17.<android.net.wifi.WifiScanner$BssidInfo: java.lang.String bssid>;

        r3.<android.net.wifi.ScanResult: java.lang.String BSSID> = $r20;

        $r19 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: android.net.wifi.ScanResult[] mCurrentBssids>;

        $r19[i0] = r3;

        $r22 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: android.net.wifi.WifiScanner$BssidInfo[] bssidInfos>;

        $r23 = $r22[i0];

        $i9 = $r23.<android.net.wifi.WifiScanner$BssidInfo: int frequencyHint>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>($r21);

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void removeScanRequest()>();

        $r11 = new android.net.wifi.WifiScanner$ScanSettings;

        specialinvoke $r11.<android.net.wifi.WifiScanner$ScanSettings: void <init>()>();

        r30 = $r11;

        r30.<android.net.wifi.WifiScanner$ScanSettings: int band> = 0;

        $i5 = virtualinvoke r2.<java.util.HashSet: int size()>();

        $r12 = newarray (android.net.wifi.WifiScanner$ChannelSpec)[$i5];

        r30.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels> = $r12;

        i12 = 0;

        r4 = virtualinvoke r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Integer) $r13;

        $r14 = r30.<android.net.wifi.WifiScanner$ScanSettings: android.net.wifi.WifiScanner$ChannelSpec[] channels>;

        $i7 = i12;

        i12 = i12 + 1;

        $r15 = new android.net.wifi.WifiScanner$ChannelSpec;

        $i8 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        specialinvoke $r15.<android.net.wifi.WifiScanner$ChannelSpec: void <init>(int)>($i8);

        $r14[$i7] = $r15;

        goto label4;

     label5:
        $i6 = r1.<android.net.wifi.WifiScanner$WifiChangeSettings: int periodInMs>;

        r30.<android.net.wifi.WifiScanner$ScanSettings: int periodInMs> = $i6;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void addScanRequest(android.net.wifi.WifiScanner$ScanSettings)>(r30);

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void trackSignificantWifiChange(android.net.wifi.WifiScanner$WifiChangeSettings)>(r1);

        return;
    }

    public void onChangesFound(android.net.wifi.ScanResult[])
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.ScanResult[] r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.ScanResult[];

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void sendMessage(int,int,int,java.lang.Object)>(1, 0, 0, r1);

        return;
    }

    void addScanRequest(android.net.wifi.WifiScanner$ScanSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.WifiScanner$ScanSettings r1;
        android.os.Message r2;
        com.android.server.wifi.WifiScanningServiceImpl $r3;
        com.android.server.wifi.WifiScanningServiceImpl$ClientHandler $r4;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.WifiScanner$ScanSettings;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", "Starting scans");

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 159746;

        r2.<android.os.Message: int arg2> = 1;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r3 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r4 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: com.android.server.wifi.WifiScanningServiceImpl$ClientHandler access$2400(com.android.server.wifi.WifiScanningServiceImpl)>($r3);

        virtualinvoke $r4.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    void removeScanRequest()
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.os.Message r1;
        com.android.server.wifi.WifiScanningServiceImpl $r2;
        com.android.server.wifi.WifiScanningServiceImpl$ClientHandler $r3;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiChangeStateMachine", "Stopping scans");

        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = 159747;

        r1.<android.os.Message: int arg2> = 1;

        $r2 = r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: com.android.server.wifi.WifiScanningServiceImpl this$0>;

        $r3 = staticinvoke <com.android.server.wifi.WifiScanningServiceImpl: com.android.server.wifi.WifiScanningServiceImpl$ClientHandler access$2400(com.android.server.wifi.WifiScanningServiceImpl)>($r2);

        virtualinvoke $r3.<com.android.server.wifi.WifiScanningServiceImpl$ClientHandler: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void trackSignificantWifiChange(android.net.wifi.WifiScanner$WifiChangeSettings)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.net.wifi.WifiScanner$WifiChangeSettings r1;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter0: android.net.wifi.WifiScanner$WifiChangeSettings;

        staticinvoke <com.android.server.wifi.WifiNative: void untrackSignificantWifiChange()>();

        staticinvoke <com.android.server.wifi.WifiNative: boolean trackSignificantWifiChange(android.net.wifi.WifiScanner$WifiChangeSettings,com.android.server.wifi.WifiNative$SignificantWifiChangeEventHandler)>(r1, r0);

        return;
    }

    void untrackSignificantWifiChange()
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        staticinvoke <com.android.server.wifi.WifiNative: void untrackSignificantWifiChange()>();

        return;
    }

    static void access$1700(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$1800(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$1900(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$2000(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$2100(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$2200(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$2300(com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int SCAN_COMMAND_ID> = 1;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: java.lang.String ACTION_TIMEOUT> = "com.android.server.WifiScanningServiceImpl.action.TIMEOUT";

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int MOVING_STATE_TIMEOUT_MS> = 30000;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int STATIONARY_SCAN_PERIOD_MS> = 5000;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int MOVING_SCAN_PERIOD_MS> = 10000;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int MAX_APS_TO_TRACK> = 3;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_CONFIGURE> = 5;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_DISABLE> = 4;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_ENABLE> = 3;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_CHANGE_TIMEOUT> = 2;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_CHANGE_DETECTED> = 1;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: int WIFI_CHANGE_CMD_NEW_SCAN_RESULTS> = 0;

        <com.android.server.wifi.WifiScanningServiceImpl$WifiChangeStateMachine: java.lang.String TAG> = "WifiChangeStateMachine";

        return;
    }
}
