class com.android.server.wifi.WifiStateMachine$TetheredState extends com.android.internal.util.State
{
    final com.android.server.wifi.WifiStateMachine this$0;

    void <init>(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine$TetheredState r0;
        com.android.server.wifi.WifiStateMachine r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine$TetheredState;

        r1 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine$TetheredState r0;
        android.os.Message r1;
        com.android.server.wifi.WifiStateMachine$TetherStateChange r2;
        com.android.server.wifi.WifiStateMachine $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18;
        java.lang.Class $r4;
        java.lang.String $r5;
        int $i0;
        java.lang.Object $r6;
        java.util.ArrayList $r7;
        boolean $z0, $z1;
        com.android.internal.util.State $r15;

        r0 := @this: com.android.server.wifi.WifiStateMachine$TetheredState;

        r1 := @parameter0: android.os.Message;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <com.android.server.wifi.WifiStateMachine: void access$800(com.android.server.wifi.WifiStateMachine,android.os.Message,java.lang.String)>($r3, r1, $r5);

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 131096: goto label3;
            case 131101: goto label1;
            default: goto label5;
        };

     label1:
        $r6 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.server.wifi.WifiStateMachine$TetherStateChange) $r6;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        $r7 = r2.<com.android.server.wifi.WifiStateMachine$TetherStateChange: java.util.ArrayList active>;

        $z0 = staticinvoke <com.android.server.wifi.WifiStateMachine: boolean access$25200(com.android.server.wifi.WifiStateMachine,java.util.ArrayList)>($r8, $r7);

        if $z0 != 0 goto label2;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        virtualinvoke $r9.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Tethering reports wifi as untethered!, shut down soft Ap");

        $r10 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        virtualinvoke $r10.<com.android.server.wifi.WifiStateMachine: void setHostApRunning(android.net.wifi.WifiConfiguration,boolean)>(null, 0);

        $r11 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        virtualinvoke $r11.<com.android.server.wifi.WifiStateMachine: void setHostApRunning(android.net.wifi.WifiConfiguration,boolean)>(null, 1);

     label2:
        return 1;

     label3:
        $z1 = staticinvoke <com.android.server.wifi.WifiStateMachine: boolean access$700()>();

        if $z1 == 0 goto label4;

        $r17 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        virtualinvoke $r17.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>("Untethering before stopping AP");

     label4:
        $r12 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        staticinvoke <com.android.server.wifi.WifiStateMachine: void access$4400(com.android.server.wifi.WifiStateMachine,int)>($r12, 10);

        $r14 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        staticinvoke <com.android.server.wifi.WifiStateMachine: void access$25800(com.android.server.wifi.WifiStateMachine)>($r14);

        $r16 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        $r15 = staticinvoke <com.android.server.wifi.WifiStateMachine: com.android.internal.util.State access$25900(com.android.server.wifi.WifiStateMachine)>($r13);

        staticinvoke <com.android.server.wifi.WifiStateMachine: void access$26000(com.android.server.wifi.WifiStateMachine,com.android.internal.util.IState)>($r16, $r15);

        $r18 = r0.<com.android.server.wifi.WifiStateMachine$TetheredState: com.android.server.wifi.WifiStateMachine this$0>;

        staticinvoke <com.android.server.wifi.WifiStateMachine: void access$26100(com.android.server.wifi.WifiStateMachine,android.os.Message)>($r18, r1);

        goto label6;

     label5:
        return 0;

     label6:
        return 1;
    }
}
