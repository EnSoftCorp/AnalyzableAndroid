class com.android.server.wifi.WifiMonitor$WifiMonitorSingleton extends java.lang.Object
{
    private static final com.android.server.wifi.WifiMonitor$WifiMonitorSingleton sInstance;
    private final java.util.HashMap mIfaceMap;
    private boolean mConnected;
    private com.android.server.wifi.WifiNative mWifiNative;

    private void <init>()
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap> = $r1;

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

        return;
    }

    public synchronized void startMonitoring(java.lang.String)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, $r11, $r19, $r26;
        com.android.server.wifi.WifiMonitor r2;
        int i0, $i2;
        java.util.HashMap $r4, $r13;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r16, $r17, $r18, $r20, $r24, $r27, $r28;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.wifi.WifiNative $r12, $r21;
        com.android.internal.util.StateMachine $r14, $r22, $r25;
        com.android.server.wifi.WifiMonitor$MonitorThread $r23;
        java.lang.InterruptedException $r29;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.wifi.WifiMonitor) $r5;

        if r2 != null goto label01;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitor called with unknown iface=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r26);

        return;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitoring(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") with mConnected = ");

        $z0 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r11);

        $z2 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected>;

        if $z2 == 0 goto label02;

        staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$102(com.android.server.wifi.WifiMonitor,boolean)>(r2, 1);

        $r25 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        virtualinvoke $r25.<com.android.internal.util.StateMachine: void sendMessage(int)>(147457);

        goto label10;

     label02:
        $z1 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z1 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", "connecting to supplicant");

     label03:
        i0 = 0;

     label04:
        $r12 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiNative mWifiNative>;

        $z3 = virtualinvoke $r12.<com.android.server.wifi.WifiNative: boolean connectToSupplicant()>();

        if $z3 == 0 goto label05;

        staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$102(com.android.server.wifi.WifiMonitor,boolean)>(r2, 1);

        $r22 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        virtualinvoke $r22.<com.android.internal.util.StateMachine: void sendMessage(int)>(147457);

        $r23 = new com.android.server.wifi.WifiMonitor$MonitorThread;

        $r21 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiNative mWifiNative>;

        specialinvoke $r23.<com.android.server.wifi.WifiMonitor$MonitorThread: void <init>(com.android.server.wifi.WifiNative,com.android.server.wifi.WifiMonitor$WifiMonitorSingleton)>($r21, r0);

        virtualinvoke $r23.<com.android.server.wifi.WifiMonitor$MonitorThread: void start()>();

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 1;

        goto label10;

     label05:
        $i2 = i0;

        i0 = i0 + 1;

        if $i2 >= 5 goto label09;

     label06:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label07:
        goto label04;

     label08:
        $r29 := @caughtexception;

        goto label04;

     label09:
        $r13 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $r14 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        virtualinvoke $r14.<com.android.internal.util.StateMachine: void sendMessage(int)>(147458);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startMonitoring(");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed!");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r19);

        goto label10;

     label10:
        return;

        catch java.lang.InterruptedException from label06 to label07 with label08;
    }

    public synchronized void stopMonitoring(java.lang.String)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, $r12;
        com.android.server.wifi.WifiMonitor r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0;
        com.android.internal.util.StateMachine $r5, $r10;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.server.wifi.WifiMonitor) $r4;

        $z0 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopMonitoring(");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") = ");

        $r10 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r12);

     label1:
        staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$102(com.android.server.wifi.WifiMonitor,boolean)>(r2, 0);

        $r5 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        virtualinvoke $r5.<com.android.internal.util.StateMachine: void sendMessage(int)>(147458);

        return;
    }

    public synchronized void registerInterfaceMonitor(java.lang.String, com.android.server.wifi.WifiMonitor)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, $r14;
        com.android.server.wifi.WifiMonitor r2;
        boolean $z0;
        java.util.HashMap $r3;
        com.android.server.wifi.WifiNative $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12, $r13;
        com.android.internal.util.StateMachine $r11;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.server.wifi.WifiMonitor;

        $z0 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("registerInterface(");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r11 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r14);

     label1:
        $r3 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiNative mWifiNative>;

        if $r5 != null goto label2;

        $r6 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.server.wifi.WifiNative access$400(com.android.server.wifi.WifiMonitor)>(r2);

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiNative mWifiNative> = $r6;

     label2:
        return;
    }

    public synchronized void unregisterInterfaceMonitor(java.lang.String)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, $r12;
        com.android.server.wifi.WifiMonitor r2;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11;
        com.android.internal.util.StateMachine $r9;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (com.android.server.wifi.WifiMonitor) $r4;

        $z0 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unregisterInterface(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r9 = staticinvoke <com.android.server.wifi.WifiMonitor: com.android.internal.util.StateMachine access$200(com.android.server.wifi.WifiMonitor)>(r2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r12);

     label1:
        return;
    }

    public synchronized void stopSupplicant()
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        com.android.server.wifi.WifiNative $r1;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        $r1 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r1.<com.android.server.wifi.WifiNative: boolean stopSupplicant()>();

        return;
    }

    public synchronized void killSupplicant(boolean)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        boolean z0, $z2;
        java.util.Iterator r1;
        com.android.server.wifi.WifiMonitor r2;
        java.util.HashMap $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.server.wifi.WifiNative: boolean killSupplicant(boolean)>(z0);

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

        $r3 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.server.wifi.WifiMonitor) $r5;

        staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$102(com.android.server.wifi.WifiMonitor,boolean)>(r2, 0);

        goto label1;

     label2:
        return;
    }

    private synchronized boolean dispatchEvent(java.lang.String)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1, r2, $r14, $r16;
        int i0, $i4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Iterator r3;
        com.android.server.wifi.WifiMonitor r4, r20;
        java.util.HashMap $r5, $r7, $r19;
        java.lang.Object $r6, $r9;
        java.util.Collection $r8;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r15, $r17, $r18;

        r0 := @this: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter0: java.lang.String;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("IFNAME=");

        if $z1 == 0 goto label04;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(32);

        if i0 == -1 goto label02;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(7, i0);

        $r19 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $z9 = virtualinvoke $r19.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r2);

        if $z9 != 0 goto label01;

        $z10 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("p2p-");

        if $z10 == 0 goto label01;

        r2 = "p2p0";

     label01:
        $i4 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

        goto label03;

     label02:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping malformed event (unparsable iface): ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("WifiMonitor", $r16);

        return 0;

     label03:
        goto label05;

     label04:
        r2 = "p2p0";

     label05:
        $r5 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r20 = (com.android.server.wifi.WifiMonitor) $r6;

        if r20 == null goto label09;

        $z6 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$100(com.android.server.wifi.WifiMonitor)>(r20);

        if $z6 == 0 goto label07;

        $z8 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$500(com.android.server.wifi.WifiMonitor,java.lang.String,java.lang.String)>(r20, r1, r2);

        if $z8 == 0 goto label06;

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

        return 1;

     label06:
        return 0;

     label07:
        $z7 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z7 == 0 goto label08;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping event because (");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is stopped");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", $r14);

     label08:
        return 0;

     label09:
        $z2 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$300()>();

        if $z2 == 0 goto label10;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WifiMonitor", "Sending to all monitors because there\'s no matching iface");

     label10:
        z0 = 0;

        $r7 = r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: java.util.HashMap mIfaceMap>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.server.wifi.WifiMonitor) $r9;

        $z5 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$100(com.android.server.wifi.WifiMonitor)>(r4);

        if $z5 == 0 goto label12;

        $z4 = staticinvoke <com.android.server.wifi.WifiMonitor: boolean access$500(com.android.server.wifi.WifiMonitor,java.lang.String,java.lang.String)>(r4, r1, r2);

        if $z4 == 0 goto label12;

        z0 = 1;

     label12:
        goto label11;

     label13:
        if z0 == 0 goto label14;

        r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean mConnected> = 0;

     label14:
        return z0;
    }

    static com.android.server.wifi.WifiMonitor$WifiMonitorSingleton access$000()
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton $r0;

        $r0 = <com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton sInstance>;

        return $r0;
    }

    static boolean access$600(com.android.server.wifi.WifiMonitor$WifiMonitorSingleton, java.lang.String)
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: boolean dispatchEvent(java.lang.String)>(r1);

        return $z0;
    }

    static void <clinit>()
    {
        com.android.server.wifi.WifiMonitor$WifiMonitorSingleton $r0;

        $r0 = new com.android.server.wifi.WifiMonitor$WifiMonitorSingleton;

        specialinvoke $r0.<com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: void <init>()>();

        <com.android.server.wifi.WifiMonitor$WifiMonitorSingleton: com.android.server.wifi.WifiMonitor$WifiMonitorSingleton sInstance> = $r0;

        return;
    }
}
