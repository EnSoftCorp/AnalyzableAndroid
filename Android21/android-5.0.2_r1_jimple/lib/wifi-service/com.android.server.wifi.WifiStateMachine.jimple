public class com.android.server.wifi.WifiStateMachine extends com.android.internal.util.StateMachine
{
    private static final java.lang.String NETWORKTYPE;
    private static boolean DBG;
    private static boolean VDBG;
    private static boolean VVDBG;
    private static boolean mLogMessages;
    private static final int ONE_HOUR_MILLI;
    private static final java.lang.String GOOGLE_OUI;
    private static boolean PDBG;
    private boolean didBlackListBSSID;
    private com.android.server.wifi.WifiMonitor mWifiMonitor;
    private com.android.server.wifi.WifiNative mWifiNative;
    private com.android.server.wifi.WifiConfigStore mWifiConfigStore;
    private com.android.server.wifi.WifiAutoJoinController mWifiAutoJoinController;
    private android.os.INetworkManagementService mNwService;
    private android.net.ConnectivityManager mCm;
    private final boolean mP2pSupported;
    private final java.util.concurrent.atomic.AtomicBoolean mP2pConnected;
    private boolean mTemporarilyDisconnectWifi;
    private final java.lang.String mPrimaryDeviceType;
    private java.util.List mScanResults;
    private static final java.util.regex.Pattern scanResultPattern;
    private static final int SCAN_RESULT_CACHE_SIZE;
    private final android.util.LruCache mScanResultCache;
    private int mNumScanResultsKnown;
    private int mNumScanResultsReturned;
    private final java.util.List mBatchedScanResults;
    private int mBatchedScanOwnerUid;
    private int mExpectedBatchedScans;
    private long mBatchedScanMinPollTime;
    private boolean mScreenOn;
    private final boolean mBackgroundScanSupported;
    private java.lang.String mInterfaceName;
    private java.lang.String mTetherInterfaceName;
    private int mLastSignalLevel;
    private java.lang.String mLastBssid;
    private int mLastNetworkId;
    private boolean linkDebouncing;
    private boolean testNetworkDisconnect;
    private boolean mEnableRssiPolling;
    private boolean mEnableBackgroundScan;
    private int mRssiPollToken;
    private int mOperationalMode;
    private boolean mIsScanOngoing;
    private boolean mIsFullScanOngoing;
    private final java.util.Queue mBufferedScanMsg;
    private android.os.WorkSource mScanWorkSource;
    private static final int UNKNOWN_SCAN_SOURCE;
    private static final int SCAN_ALARM_SOURCE;
    private static final int ADD_OR_UPDATE_SOURCE;
    private static final int SCAN_REQUEST_BUFFER_MAX_SIZE;
    private static final java.lang.String CUSTOMIZED_SCAN_SETTING;
    private static final java.lang.String CUSTOMIZED_SCAN_WORKSOURCE;
    private static final java.lang.String SCAN_REQUEST_TIME;
    private static final java.lang.String BATCHED_SETTING;
    private static final java.lang.String BATCHED_WORKSOURCE;
    private java.util.concurrent.atomic.AtomicBoolean mScreenBroadcastReceived;
    private boolean mBluetoothConnectionActive;
    private android.os.PowerManager$WakeLock mSuspendWakeLock;
    private static final int POLL_RSSI_INTERVAL_MSECS;
    private static final int LINK_FLAPPING_DEBOUNCE_MSEC;
    private static final int SUPPLICANT_RESTART_INTERVAL_MSECS;
    private static final int SUPPLICANT_RESTART_TRIES;
    private int mSupplicantRestartCount;
    private int mSupplicantStopFailureToken;
    private static final int TETHER_NOTIFICATION_TIME_OUT_MSECS;
    private int mTetherToken;
    private static final int DRIVER_START_TIME_OUT_MSECS;
    private int mDriverStartToken;
    private android.net.LinkProperties mLinkProperties;
    private int mPeriodicScanToken;
    private android.os.PowerManager$WakeLock mWakeLock;
    private android.content.Context mContext;
    private final java.lang.Object mDhcpResultsLock;
    private android.net.DhcpResults mDhcpResults;
    private android.net.wifi.WifiInfo mWifiInfo;
    private android.net.NetworkInfo mNetworkInfo;
    private android.net.NetworkCapabilities mNetworkCapabilities;
    private com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker;
    private android.net.DhcpStateMachine mDhcpStateMachine;
    private boolean mDhcpActive;
    private int mWifiLinkLayerStatsSupported;
    private final java.util.concurrent.atomic.AtomicInteger mCountryCodeSequence;
    private int mAutoRoaming;
    private int mRoamFailCount;
    private java.lang.String mTargetRoamBSSID;
    private long mLastDriverRoamAttempt;
    private android.net.wifi.WifiConfiguration targetWificonfiguration;
    private android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt;
    private android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt;
    private com.android.server.net.NetlinkTracker mNetlinkTracker;
    private android.app.AlarmManager mAlarmManager;
    private android.app.PendingIntent mScanIntent;
    private android.app.PendingIntent mDriverStopIntent;
    private android.app.PendingIntent mBatchedScanIntervalIntent;
    private java.util.concurrent.atomic.AtomicInteger mFrequencyBand;
    private java.util.concurrent.atomic.AtomicBoolean mFilteringMulticastV4Packets;
    private com.android.internal.util.AsyncChannel mReplyChannel;
    private com.android.server.wifi.p2p.WifiP2pServiceImpl mWifiP2pServiceImpl;
    private com.android.internal.util.AsyncChannel mWifiP2pChannel;
    private com.android.internal.util.AsyncChannel mWifiApConfigChannel;
    private com.android.server.wifi.WifiStateMachine$WifiNetworkFactory mNetworkFactory;
    private com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent;
    private android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics;
    private final android.net.NetworkCapabilities mNetworkCapabilitiesFilter;
    static final int BASE;
    static final int CMD_START_SUPPLICANT;
    static final int CMD_STOP_SUPPLICANT;
    static final int CMD_START_DRIVER;
    static final int CMD_STOP_DRIVER;
    static final int CMD_STATIC_IP_SUCCESS;
    static final int CMD_STATIC_IP_FAILURE;
    static final int CMD_STOP_SUPPLICANT_FAILED;
    static final int CMD_DELAYED_STOP_DRIVER;
    static final int CMD_DRIVER_START_TIMED_OUT;
    static final int CMD_START_AP;
    static final int CMD_START_AP_SUCCESS;
    static final int CMD_START_AP_FAILURE;
    static final int CMD_STOP_AP;
    static final int CMD_SET_AP_CONFIG;
    static final int CMD_SET_AP_CONFIG_COMPLETED;
    static final int CMD_REQUEST_AP_CONFIG;
    static final int CMD_RESPONSE_AP_CONFIG;
    static final int CMD_TETHER_STATE_CHANGE;
    static final int CMD_TETHER_NOTIFICATION_TIMED_OUT;
    static final int CMD_BLUETOOTH_ADAPTER_STATE_CHANGE;
    static final int CMD_PING_SUPPLICANT;
    static final int CMD_ADD_OR_UPDATE_NETWORK;
    static final int CMD_REMOVE_NETWORK;
    static final int CMD_ENABLE_NETWORK;
    static final int CMD_ENABLE_ALL_NETWORKS;
    static final int CMD_BLACKLIST_NETWORK;
    static final int CMD_CLEAR_BLACKLIST;
    static final int CMD_SAVE_CONFIG;
    static final int CMD_GET_CONFIGURED_NETWORKS;
    static final int CMD_GET_CAPABILITY_FREQ;
    static final int CMD_GET_SUPPORTED_FEATURES;
    static final int CMD_GET_PRIVILEGED_CONFIGURED_NETWORKS;
    static final int CMD_GET_LINK_LAYER_STATS;
    static final int CMD_START_SCAN;
    static final int CMD_SET_OPERATIONAL_MODE;
    static final int CMD_DISCONNECT;
    static final int CMD_RECONNECT;
    static final int CMD_REASSOCIATE;
    static final int CMD_GET_CONNECTION_STATISTICS;
    static final int CMD_SET_HIGH_PERF_MODE;
    static final int CMD_SET_COUNTRY_CODE;
    static final int CMD_ENABLE_RSSI_POLL;
    static final int CMD_RSSI_POLL;
    static final int CMD_START_PACKET_FILTERING;
    static final int CMD_STOP_PACKET_FILTERING;
    static final int CMD_SET_SUSPEND_OPT_ENABLED;
    static final int CMD_DELAYED_NETWORK_DISCONNECT;
    static final int CMD_NO_NETWORKS_PERIODIC_SCAN;
    static final int CMD_TEST_NETWORK_DISCONNECT;
    private int testNetworkDisconnectCounter;
    static final int MULTICAST_V6;
    static final int MULTICAST_V4;
    static final int CMD_SET_FREQUENCY_BAND;
    static final int CMD_ENABLE_TDLS;
    static final int CMD_OBTAINING_IP_ADDRESS_WATCHDOG_TIMER;
    static final int OBTAINING_IP_ADDRESS_GUARD_TIMER_MSEC;
    int obtainingIpWatchdogCount;
    static final int CMD_RESET_SUPPLICANT_STATE;
    static final int ROAM_GUARD_TIMER_MSEC;
    int roamWatchdogCount;
    static final int CMD_ROAM_WATCHDOG_TIMER;
    static final int CMD_SCREEN_STATE_CHANGED;
    int disconnectingWatchdogCount;
    static final int DISCONNECTING_GUARD_TIMER_MSEC;
    static final int CMD_DISCONNECTING_WATCHDOG_TIMER;
    public static final int CMD_ENABLE_P2P;
    public static final int CMD_DISABLE_P2P_REQ;
    public static final int CMD_DISABLE_P2P_RSP;
    public static final int CMD_BOOT_COMPLETED;
    public static final int CMD_SET_BATCHED_SCAN;
    public static final int CMD_START_NEXT_BATCHED_SCAN;
    public static final int CMD_POLL_BATCHED_SCAN;
    static final int CMD_IP_CONFIGURATION_SUCCESSFUL;
    static final int CMD_IP_CONFIGURATION_LOST;
    static final int CMD_UPDATE_LINKPROPERTIES;
    static final int CMD_TARGET_BSSID;
    static final int CMD_RELOAD_TLS_AND_RECONNECT;
    static final int CMD_AUTO_CONNECT;
    static final int network_status_unwanted_disconnect;
    static final int network_status_unwanted_disable_autojoin;
    static final int CMD_UNWANTED_NETWORK;
    static final int CMD_AUTO_ROAM;
    static final int CMD_AUTO_SAVE_NETWORK;
    static final int CMD_ASSOCIATED_BSSID;
    public static final int CONNECT_MODE;
    public static final int SCAN_ONLY_MODE;
    public static final int SCAN_ONLY_WITH_WIFI_OFF_MODE;
    private static final int SUCCESS;
    private static final int FAILURE;
    private int mSuspendOptNeedsDisabled;
    private static final int SUSPEND_DUE_TO_DHCP;
    private static final int SUSPEND_DUE_TO_HIGH_PERF;
    private static final int SUSPEND_DUE_TO_SCREEN;
    private java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt;
    private final int mDefaultFrameworkScanIntervalMs;
    private int mDisconnectedScanPeriodMs;
    private long mSupplicantScanIntervalMs;
    private long lastFullBandConnectedTimeMilli;
    private long fullBandConnectedTimeIntervalMilli;
    private static final long maxFullBandConnectedTimeIntervalMilli;
    private static final int MIN_INTERVAL_ENABLE_ALL_NETWORKS_MS;
    private long mLastEnableAllNetworksTime;
    int mRunningBeaconCount;
    private final int mDriverStopDelayMs;
    private int mDelayedStopCounter;
    private boolean mInDelayedStop;
    private volatile java.lang.String mPersistedCountryCode;
    private java.lang.String mLastSetCountryCode;
    private com.android.internal.util.State mDefaultState;
    private com.android.internal.util.State mInitialState;
    private com.android.internal.util.State mSupplicantStartingState;
    private com.android.internal.util.State mSupplicantStartedState;
    private com.android.internal.util.State mSupplicantStoppingState;
    private com.android.internal.util.State mDriverStartingState;
    private com.android.internal.util.State mDriverStartedState;
    private com.android.internal.util.State mWaitForP2pDisableState;
    private com.android.internal.util.State mDriverStoppingState;
    private com.android.internal.util.State mDriverStoppedState;
    private com.android.internal.util.State mScanModeState;
    private com.android.internal.util.State mConnectModeState;
    private com.android.internal.util.State mL2ConnectedState;
    private com.android.internal.util.State mObtainingIpState;
    private com.android.internal.util.State mVerifyingLinkState;
    private com.android.internal.util.State mConnectedState;
    private com.android.internal.util.State mRoamingState;
    private com.android.internal.util.State mDisconnectingState;
    private com.android.internal.util.State mDisconnectedState;
    private com.android.internal.util.State mWpsRunningState;
    private com.android.internal.util.State mSoftApStartingState;
    private com.android.internal.util.State mSoftApStartedState;
    private com.android.internal.util.State mTetheringState;
    private com.android.internal.util.State mTetheredState;
    private com.android.internal.util.State mUntetheringState;
    private final java.util.concurrent.atomic.AtomicInteger mWifiState;
    private final java.util.concurrent.atomic.AtomicInteger mWifiApState;
    private static final int SCAN_REQUEST;
    private static final java.lang.String ACTION_START_SCAN;
    private static final java.lang.String DELAYED_STOP_COUNTER;
    private static final int DRIVER_STOP_REQUEST;
    private static final java.lang.String ACTION_DELAYED_DRIVER_STOP;
    private static final java.lang.String ACTION_REFRESH_BATCHED_SCAN;
    private boolean mIsRunning;
    private boolean mReportedRunning;
    private final android.os.WorkSource mRunningWifiUids;
    private final android.os.WorkSource mLastRunningWifiUids;
    private final com.android.internal.app.IBatteryStats mBatteryStats;
    private android.net.wifi.BatchedScanSettings mBatchedScanSettings;
    private android.os.WorkSource mBatchedScanWorkSource;
    private int mBatchedScanCsph;
    private android.os.WorkSource mNotedBatchedScanWorkSource;
    private int mNotedBatchedScanCsph;
    private java.lang.String mTcpBufferSizes;
    private static int sScanAlarmIntentCount;
    private int mVerboseLoggingLevel;
    private int mAggressiveHandover;
    private boolean mAlarmEnabled;
    private long mFrameworkScanIntervalMs;
    private long mCurrentScanAlarmMs;
    private static final boolean DEBUG_PARSE;
    private long mDisconnectedTimeStamp;
    private long lastStartScanTimeStamp;
    private long lastScanDuration;
    private long lastConnectAttempt;
    private java.lang.String lastScanFreqs;
    private static int MESSAGE_HANDLING_STATUS_PROCESSED;
    private static int MESSAGE_HANDLING_STATUS_OK;
    private static int MESSAGE_HANDLING_STATUS_UNKNOWN;
    private static int MESSAGE_HANDLING_STATUS_REFUSED;
    private static int MESSAGE_HANDLING_STATUS_FAIL;
    private static int MESSAGE_HANDLING_STATUS_BUFFERED;
    private static int MESSAGE_HANDLING_STATUS_DEFERRED;
    private static int MESSAGE_HANDLING_STATUS_DISCARD;
    private static int MESSAGE_HANDLING_STATUS_LOOPED;
    private static int MESSAGE_HANDLING_STATUS_HANDLING_ERROR;
    private int messageHandlingStatus;
    private int mOnTime;
    private int mTxTime;
    private int mRxTime;
    private int mOnTimeStartScan;
    private int mTxTimeStartScan;
    private int mRxTimeStartScan;
    private int mOnTimeScan;
    private int mTxTimeScan;
    private int mRxTimeScan;
    private int mOnTimeThisScan;
    private int mTxTimeThisScan;
    private int mRxTimeThisScan;
    private int mOnTimeScreenStateChange;
    private int mOnTimeAtLastReport;
    private long lastOntimeReportTimeStamp;
    private long lastScreenStateChangeTimeStamp;
    private int mOnTimeLastReport;
    private int mTxTimeLastReport;
    private int mRxTimeLastReport;
    private long lastLinkLayerStatsUpdate;
    private static final java.lang.String ID_STR;
    private static final java.lang.String BSSID_STR;
    private static final java.lang.String FREQ_STR;
    private static final java.lang.String LEVEL_STR;
    private static final java.lang.String TSF_STR;
    private static final java.lang.String FLAGS_STR;
    private static final java.lang.String SSID_STR;
    private static final java.lang.String DELIMITER_STR;
    private static final java.lang.String END_STR;
    int emptyScanResultCount;
    int mBadLinkspeedcount;
    java.lang.String wifiScoringReport;

    protected void loge(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    protected void log(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String getName()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    boolean isRoaming()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        if $i0 == 1 goto label1;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        if $i1 != 2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void autoRoamSetBSSID(int, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.String r1;
        com.android.server.wifi.WifiConfigStore $r2;
        android.net.wifi.WifiConfiguration $r3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r3 = virtualinvoke $r2.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>(i0);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean autoRoamSetBSSID(android.net.wifi.WifiConfiguration,java.lang.String)>($r3, r1);

        return;
    }

    public boolean autoRoamSetBSSID(android.net.wifi.WifiConfiguration, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.String r2, $r3, $r4, $r5, $r11, $r13, $r15, $r16;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.server.wifi.WifiConfigStore $r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r12;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 := @parameter1: java.lang.String;

        z0 = 1;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if $r3 != null goto label1;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID> = "any";

     label1:
        if r2 != null goto label2;

        r2 = "any";

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if $r4 == null goto label4;

        $r16 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if r2 != $r16 goto label4;

        $r15 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if r2 != $r15 goto label4;

        return 0;

     label4:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("any");

        if $z1 != 0 goto label5;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("any");

        if $z3 == 0 goto label5;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z4 = $r14.<com.android.server.wifi.WifiConfigStore: boolean roamOnAny>;

        if $z4 != 0 goto label5;

        z0 = 0;

     label5:
        $z2 = <com.android.server.wifi.WifiStateMachine: boolean VDBG>;

        if $z2 == 0 goto label6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autoRoamSetBSSID ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key=");

        $r11 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r13);

     label6:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID> = r2;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID> = r2;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        virtualinvoke $r6.<com.android.server.wifi.WifiConfigStore: void saveWifiConfigBSSID(android.net.wifi.WifiConfiguration)>(r1);

        return z0;
    }

    public void <init>(android.content.Context, java.lang.String, com.android.server.wifi.WifiTrafficPoller)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.content.Context r1, $r57, $r77, $r86, $r88, $r89, $r93, $r94, $r97, $r101, $r115, $r119, $r122, $r126, $r131, $r132, $r138, $r147, $r202;
        java.lang.String r2, $r60, $r84, $r104, $r140, $r149, $r199, $r201;
        com.android.server.wifi.WifiTrafficPoller r3;
        android.os.IBinder r4, r5, $r53;
        android.os.RemoteException r6, $r203;
        android.content.Intent r7, r10, $r90, $r91, $r205, r209;
        android.content.IntentFilter r8, $r114, $r118, $r129, $r135, $r144;
        android.os.PowerManager r9;
        java.util.concurrent.atomic.AtomicBoolean $r11, $r15, $r18, $r22, $r102;
        java.util.ArrayList $r12, $r13;
        java.util.LinkedList $r14;
        java.util.concurrent.atomic.AtomicInteger $r16, $r19, $r49, $r50;
        java.lang.Object $r17, $r80, $r148;
        android.net.wifi.WifiConnectionStatistics $r20, $r69;
        com.android.internal.util.AsyncChannel $r21;
        android.net.NetworkCapabilities $r23, $r98, $r105, $r106, $r107, $r108, $r110, $r112;
        com.android.server.wifi.WifiStateMachine$InitialState $r24;
        com.android.server.wifi.WifiStateMachine$DefaultState $r25;
        com.android.server.wifi.WifiStateMachine$SupplicantStartedState $r26;
        com.android.server.wifi.WifiStateMachine$SupplicantStartingState $r27;
        com.android.server.wifi.WifiStateMachine$DriverStartingState $r28;
        com.android.server.wifi.WifiStateMachine$SupplicantStoppingState $r29;
        com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState $r30;
        com.android.server.wifi.WifiStateMachine$DriverStartedState $r31;
        com.android.server.wifi.WifiStateMachine$ScanModeState $r32;
        com.android.server.wifi.WifiStateMachine$ConnectModeState $r33;
        com.android.server.wifi.WifiStateMachine$DriverStoppingState $r34;
        com.android.server.wifi.WifiStateMachine$DriverStoppedState $r35;
        com.android.server.wifi.WifiStateMachine$VerifyingLinkState $r36;
        com.android.server.wifi.WifiStateMachine$ConnectedState $r37;
        com.android.server.wifi.WifiStateMachine$L2ConnectedState $r38;
        com.android.server.wifi.WifiStateMachine$ObtainingIpState $r39;
        com.android.server.wifi.WifiStateMachine$DisconnectedState $r40;
        com.android.server.wifi.WifiStateMachine$WpsRunningState $r41;
        com.android.server.wifi.WifiStateMachine$RoamingState $r42;
        com.android.server.wifi.WifiStateMachine$DisconnectingState $r43;
        com.android.server.wifi.WifiStateMachine$TetheringState $r44;
        com.android.server.wifi.WifiStateMachine$TetheredState $r45;
        com.android.server.wifi.WifiStateMachine$SoftApStartingState $r46;
        com.android.server.wifi.WifiStateMachine$SoftApStartedState $r47;
        android.os.WorkSource $r48, $r55;
        com.android.server.wifi.WifiStateMachine$UntetheringState $r51;
        com.android.internal.app.IBatteryStats $r52;
        android.net.NetworkInfo $r54, $r72;
        android.content.pm.PackageManager $r56;
        android.os.INetworkManagementService $r58, $r78;
        com.android.server.wifi.WifiConfigStore $r59, $r62, $r74;
        com.android.server.wifi.WifiNative $r61, $r64, $r66, $r68;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.wifi.WifiMonitor $r63;
        android.net.wifi.WifiInfo $r65;
        com.android.server.wifi.WifiAutoJoinController $r67;
        android.net.wifi.p2p.IWifiP2pManager $r70;
        com.android.server.wifi.p2p.WifiP2pServiceImpl $r71;
        com.android.server.wifi.SupplicantStateTracker $r73;
        android.os.Handler $r75, $r125;
        android.net.LinkProperties $r76;
        android.app.AlarmManager $r79;
        com.android.server.wifi.WifiStateMachine$1 $r81;
        com.android.server.net.NetlinkTracker $r82, $r83;
        android.app.PendingIntent $r85, $r92;
        android.content.res.Resources $r87, $r95, $r96, $r103, $r139;
        int $i0, $i1, $i2;
        android.content.ContentResolver $r100, $r121;
        com.android.server.wifi.WifiStateMachine$3 $r116;
        com.android.server.wifi.WifiStateMachine$2 $r120;
        com.android.server.wifi.WifiStateMachine$6 $r123;
        android.net.Uri $r124;
        com.android.server.wifi.WifiStateMachine$7 $r127;
        com.android.server.wifi.WifiStateMachine$4 $r128;
        com.android.server.wifi.WifiStateMachine$5 $r133;
        android.os.PowerManager$WakeLock $r136, $r137, $r150;
        com.android.internal.util.State $r141, $r142, $r143, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197;
        android.util.LruCache $r146;
        java.lang.StringBuilder $r198, $r200, $r204;
        android.os.UserHandle $r208;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: com.android.server.wifi.WifiTrafficPoller;

        specialinvoke r0.<com.android.internal.util.StateMachine: void <init>(java.lang.String)>("WifiStateMachine");

        r0.<com.android.server.wifi.WifiStateMachine: boolean didBlackListBSSID> = 0;

        $r11 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r11.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mP2pConnected> = $r11;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mTemporarilyDisconnectWifi> = 0;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults> = $r13;

        r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanOwnerUid> = -1;

        r0.<com.android.server.wifi.WifiStateMachine: int mExpectedBatchedScans> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mScreenOn> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel> = -1;

        r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean testNetworkDisconnect> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableRssiPolling> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRssiPollToken> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOperationalMode> = 1;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing> = 0;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg> = $r14;

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource> = null;

        $r15 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r15.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mScreenBroadcastReceived> = $r15;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mBluetoothConnectionActive> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantRestartCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantStopFailureToken> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTetherToken> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mDriverStartToken> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mPeriodicScanToken> = 0;

        $r17 = new java.lang.Object;

        specialinvoke $r17.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock> = $r17;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mDhcpActive> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported> = 4;

        $r16 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r16.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mCountryCodeSequence> = $r16;

        r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRoamFailCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID> = "any";

        r0.<com.android.server.wifi.WifiStateMachine: long mLastDriverRoamAttempt> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration targetWificonfiguration> = null;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt> = null;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt> = null;

        $r19 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r19.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(0);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mFrequencyBand> = $r19;

        $r18 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r18.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mFilteringMulticastV4Packets> = $r18;

        $r21 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r21.<com.android.internal.util.AsyncChannel: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mReplyChannel> = $r21;

        $r20 = new android.net.wifi.WifiConnectionStatistics;

        specialinvoke $r20.<android.net.wifi.WifiConnectionStatistics: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics> = $r20;

        $r23 = new android.net.NetworkCapabilities;

        specialinvoke $r23.<android.net.NetworkCapabilities: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter> = $r23;

        r0.<com.android.server.wifi.WifiStateMachine: int testNetworkDisconnectCounter> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int obtainingIpWatchdogCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int roamWatchdogCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int disconnectingWatchdogCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled> = 0;

        $r22 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r22.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt> = $r22;

        r0.<com.android.server.wifi.WifiStateMachine: int mDisconnectedScanPeriodMs> = 10000;

        r0.<com.android.server.wifi.WifiStateMachine: int mRunningBeaconCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mInDelayedStop> = 0;

        $r25 = new com.android.server.wifi.WifiStateMachine$DefaultState;

        specialinvoke $r25.<com.android.server.wifi.WifiStateMachine$DefaultState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState> = $r25;

        $r24 = new com.android.server.wifi.WifiStateMachine$InitialState;

        specialinvoke $r24.<com.android.server.wifi.WifiStateMachine$InitialState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mInitialState> = $r24;

        $r27 = new com.android.server.wifi.WifiStateMachine$SupplicantStartingState;

        specialinvoke $r27.<com.android.server.wifi.WifiStateMachine$SupplicantStartingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartingState> = $r27;

        $r26 = new com.android.server.wifi.WifiStateMachine$SupplicantStartedState;

        specialinvoke $r26.<com.android.server.wifi.WifiStateMachine$SupplicantStartedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState> = $r26;

        $r29 = new com.android.server.wifi.WifiStateMachine$SupplicantStoppingState;

        specialinvoke $r29.<com.android.server.wifi.WifiStateMachine$SupplicantStoppingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStoppingState> = $r29;

        $r28 = new com.android.server.wifi.WifiStateMachine$DriverStartingState;

        specialinvoke $r28.<com.android.server.wifi.WifiStateMachine$DriverStartingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartingState> = $r28;

        $r31 = new com.android.server.wifi.WifiStateMachine$DriverStartedState;

        specialinvoke $r31.<com.android.server.wifi.WifiStateMachine$DriverStartedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartedState> = $r31;

        $r30 = new com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState;

        specialinvoke $r30.<com.android.server.wifi.WifiStateMachine$WaitForP2pDisableState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWaitForP2pDisableState> = $r30;

        $r34 = new com.android.server.wifi.WifiStateMachine$DriverStoppingState;

        specialinvoke $r34.<com.android.server.wifi.WifiStateMachine$DriverStoppingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppingState> = $r34;

        $r35 = new com.android.server.wifi.WifiStateMachine$DriverStoppedState;

        specialinvoke $r35.<com.android.server.wifi.WifiStateMachine$DriverStoppedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppedState> = $r35;

        $r32 = new com.android.server.wifi.WifiStateMachine$ScanModeState;

        specialinvoke $r32.<com.android.server.wifi.WifiStateMachine$ScanModeState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mScanModeState> = $r32;

        $r33 = new com.android.server.wifi.WifiStateMachine$ConnectModeState;

        specialinvoke $r33.<com.android.server.wifi.WifiStateMachine$ConnectModeState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState> = $r33;

        $r38 = new com.android.server.wifi.WifiStateMachine$L2ConnectedState;

        specialinvoke $r38.<com.android.server.wifi.WifiStateMachine$L2ConnectedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState> = $r38;

        $r39 = new com.android.server.wifi.WifiStateMachine$ObtainingIpState;

        specialinvoke $r39.<com.android.server.wifi.WifiStateMachine$ObtainingIpState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mObtainingIpState> = $r39;

        $r36 = new com.android.server.wifi.WifiStateMachine$VerifyingLinkState;

        specialinvoke $r36.<com.android.server.wifi.WifiStateMachine$VerifyingLinkState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mVerifyingLinkState> = $r36;

        $r37 = new com.android.server.wifi.WifiStateMachine$ConnectedState;

        specialinvoke $r37.<com.android.server.wifi.WifiStateMachine$ConnectedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState> = $r37;

        $r42 = new com.android.server.wifi.WifiStateMachine$RoamingState;

        specialinvoke $r42.<com.android.server.wifi.WifiStateMachine$RoamingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mRoamingState> = $r42;

        $r43 = new com.android.server.wifi.WifiStateMachine$DisconnectingState;

        specialinvoke $r43.<com.android.server.wifi.WifiStateMachine$DisconnectingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectingState> = $r43;

        $r40 = new com.android.server.wifi.WifiStateMachine$DisconnectedState;

        specialinvoke $r40.<com.android.server.wifi.WifiStateMachine$DisconnectedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectedState> = $r40;

        $r41 = new com.android.server.wifi.WifiStateMachine$WpsRunningState;

        specialinvoke $r41.<com.android.server.wifi.WifiStateMachine$WpsRunningState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWpsRunningState> = $r41;

        $r46 = new com.android.server.wifi.WifiStateMachine$SoftApStartingState;

        specialinvoke $r46.<com.android.server.wifi.WifiStateMachine$SoftApStartingState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartingState> = $r46;

        $r47 = new com.android.server.wifi.WifiStateMachine$SoftApStartedState;

        specialinvoke $r47.<com.android.server.wifi.WifiStateMachine$SoftApStartedState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState> = $r47;

        $r44 = new com.android.server.wifi.WifiStateMachine$TetheringState;

        specialinvoke $r44.<com.android.server.wifi.WifiStateMachine$TetheringState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheringState> = $r44;

        $r45 = new com.android.server.wifi.WifiStateMachine$TetheredState;

        specialinvoke $r45.<com.android.server.wifi.WifiStateMachine$TetheredState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheredState> = $r45;

        $r51 = new com.android.server.wifi.WifiStateMachine$UntetheringState;

        specialinvoke $r51.<com.android.server.wifi.WifiStateMachine$UntetheringState: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mUntetheringState> = $r51;

        $r50 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r50.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(1);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiState> = $r50;

        $r49 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r49.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(11);

        r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiApState> = $r49;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsRunning> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mReportedRunning> = 0;

        $r48 = new android.os.WorkSource;

        specialinvoke $r48.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids> = $r48;

        $r55 = new android.os.WorkSource;

        specialinvoke $r55.<android.os.WorkSource: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids> = $r55;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings> = null;

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanCsph> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTcpBufferSizes> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mVerboseLoggingLevel> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mAggressiveHandover> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mAlarmEnabled> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: long mFrameworkScanIntervalMs> = 10000L;

        r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs> = 10000L;

        r0.<com.android.server.wifi.WifiStateMachine: long mDisconnectedTimeStamp> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: long lastConnectAttempt> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String lastScanFreqs> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTime> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTime> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTime> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeStartScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeStartScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeStartScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeThisScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeThisScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeThisScan> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScreenStateChange> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeAtLastReport> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: long lastOntimeReportTimeStamp> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: long lastScreenStateChangeTimeStamp> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeLastReport> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeLastReport> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeLastReport> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: long lastLinkLayerStatsUpdate> = 0L;

        r0.<com.android.server.wifi.WifiStateMachine: int emptyScanResultCount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String wifiScoringReport> = null;

        r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext> = r1;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName> = r2;

        $r54 = new android.net.NetworkInfo;

        specialinvoke $r54.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>(1, 0, "WIFI", "");

        r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo> = $r54;

        $r53 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("batterystats");

        $r52 = staticinvoke <com.android.internal.app.IBatteryStats$Stub: com.android.internal.app.IBatteryStats asInterface(android.os.IBinder)>($r53);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats> = $r52;

        r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("network_management");

        $r58 = staticinvoke <android.os.INetworkManagementService$Stub: android.os.INetworkManagementService asInterface(android.os.IBinder)>(r4);

        r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService> = $r58;

        $r57 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r56 = virtualinvoke $r57.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $z0 = virtualinvoke $r56.<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>("android.hardware.wifi.direct");

        r0.<com.android.server.wifi.WifiStateMachine: boolean mP2pSupported> = $z0;

        $r61 = new com.android.server.wifi.WifiNative;

        $r60 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        specialinvoke $r61.<com.android.server.wifi.WifiNative: void <init>(java.lang.String)>($r60);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative> = $r61;

        $r59 = new com.android.server.wifi.WifiConfigStore;

        $r66 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        specialinvoke $r59.<com.android.server.wifi.WifiConfigStore: void <init>(android.content.Context,com.android.server.wifi.WifiNative)>(r1, $r66);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore> = $r59;

        $r67 = new com.android.server.wifi.WifiAutoJoinController;

        $r62 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r69 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics>;

        $r68 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        specialinvoke $r67.<com.android.server.wifi.WifiAutoJoinController: void <init>(android.content.Context,com.android.server.wifi.WifiStateMachine,com.android.server.wifi.WifiConfigStore,android.net.wifi.WifiConnectionStatistics,com.android.server.wifi.WifiNative)>(r1, r0, $r62, $r69, $r68);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiAutoJoinController mWifiAutoJoinController> = $r67;

        $r63 = new com.android.server.wifi.WifiMonitor;

        $r64 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        specialinvoke $r63.<com.android.server.wifi.WifiMonitor: void <init>(com.android.internal.util.StateMachine,com.android.server.wifi.WifiNative)>(r0, $r64);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiMonitor mWifiMonitor> = $r63;

        $r65 = new android.net.wifi.WifiInfo;

        specialinvoke $r65.<android.net.wifi.WifiInfo: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo> = $r65;

        $r73 = new com.android.server.wifi.SupplicantStateTracker;

        $r74 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r75 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r73.<com.android.server.wifi.SupplicantStateTracker: void <init>(android.content.Context,com.android.server.wifi.WifiStateMachine,com.android.server.wifi.WifiConfigStore,android.os.Handler)>(r1, r0, $r74, $r75);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker> = $r73;

        $r76 = new android.net.LinkProperties;

        specialinvoke $r76.<android.net.LinkProperties: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties> = $r76;

        r5 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("wifip2p");

        $r70 = staticinvoke <android.net.wifi.p2p.IWifiP2pManager$Stub: android.net.wifi.p2p.IWifiP2pManager asInterface(android.os.IBinder)>(r5);

        $r71 = (com.android.server.wifi.p2p.WifiP2pServiceImpl) $r70;

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.p2p.WifiP2pServiceImpl mWifiP2pServiceImpl> = $r71;

        $r72 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r72.<android.net.NetworkInfo: void setIsAvailable(boolean)>(0);

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId> = -1;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel> = -1;

        $r82 = new com.android.server.net.NetlinkTracker;

        $r84 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        $r81 = new com.android.server.wifi.WifiStateMachine$1;

        specialinvoke $r81.<com.android.server.wifi.WifiStateMachine$1: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        specialinvoke $r82.<com.android.server.net.NetlinkTracker: void <init>(java.lang.String,com.android.server.net.NetlinkTracker$Callback)>($r84, $r81);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.net.NetlinkTracker mNetlinkTracker> = $r82;

     label1:
        $r78 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        $r83 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.net.NetlinkTracker mNetlinkTracker>;

        interfaceinvoke $r78.<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>($r83);

     label2:
        goto label4;

     label3:
        $r203 := @caughtexception;

        r6 = $r203;

        $r204 = new java.lang.StringBuilder;

        specialinvoke $r204.<java.lang.StringBuilder: void <init>()>();

        $r198 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t register netlink tracker: ");

        $r199 = virtualinvoke r6.<android.os.RemoteException: java.lang.String toString()>();

        $r200 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r199);

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r201);

     label4:
        $r77 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r80 = virtualinvoke $r77.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r79 = (android.app.AlarmManager) $r80;

        r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager> = $r79;

        $r90 = new android.content.Intent;

        specialinvoke $r90.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.WifiManager.action.START_SCAN", null);

        r209 = $r90;

        $r89 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r92 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r89, 0, r209, 0);

        r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mScanIntent> = $r92;

        $r91 = new android.content.Intent;

        specialinvoke $r91.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.server.WifiManager.action.REFRESH_BATCHED_SCAN", null);

        r7 = $r91;

        $r86 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r85 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r86, 0, r7, 0);

        r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mBatchedScanIntervalIntent> = $r85;

        $r88 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r87 = virtualinvoke $r88.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r87.<android.content.res.Resources: int getInteger(int)>(17694759);

        r0.<com.android.server.wifi.WifiStateMachine: int mDefaultFrameworkScanIntervalMs> = $i1;

        $r97 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r96 = virtualinvoke $r97.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r96.<android.content.res.Resources: int getInteger(int)>(17694769);

        r0.<com.android.server.wifi.WifiStateMachine: int mDriverStopDelayMs> = $i0;

        $r94 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r95 = virtualinvoke $r94.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r95.<android.content.res.Resources: boolean getBoolean(int)>(17956887);

        r0.<com.android.server.wifi.WifiStateMachine: boolean mBackgroundScanSupported> = $z1;

        $r93 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r103 = virtualinvoke $r93.<android.content.Context: android.content.res.Resources getResources()>();

        $r104 = virtualinvoke $r103.<android.content.res.Resources: java.lang.String getString(int)>(17039386);

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mPrimaryDeviceType> = $r104;

        $r102 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $r101 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r100 = virtualinvoke $r101.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i2 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r100, "wifi_suspend_optimizations_enabled", 1);

        if $i2 != 1 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        virtualinvoke $r102.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z3);

        $r98 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        virtualinvoke $r98.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>(1);

        $r112 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        virtualinvoke $r112.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(12);

        $r110 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        virtualinvoke $r110.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(13);

        $r108 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        virtualinvoke $r108.<android.net.NetworkCapabilities: void setLinkUpstreamBandwidthKbps(int)>(1048576);

        $r107 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        virtualinvoke $r107.<android.net.NetworkCapabilities: void setLinkDownstreamBandwidthKbps(int)>(1048576);

        $r106 = new android.net.NetworkCapabilities;

        $r105 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        specialinvoke $r106.<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>($r105);

        r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilities> = $r106;

        $r119 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r120 = new com.android.server.wifi.WifiStateMachine$2;

        specialinvoke $r120.<com.android.server.wifi.WifiStateMachine$2: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        $r118 = new android.content.IntentFilter;

        specialinvoke $r118.<android.content.IntentFilter: void <init>(java.lang.String)>("android.net.conn.TETHER_STATE_CHANGED");

        virtualinvoke $r119.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r120, $r118);

        $r115 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r116 = new com.android.server.wifi.WifiStateMachine$3;

        specialinvoke $r116.<com.android.server.wifi.WifiStateMachine$3: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        $r114 = new android.content.IntentFilter;

        specialinvoke $r114.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.WifiManager.action.START_SCAN");

        virtualinvoke $r115.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r116, $r114);

        $r129 = new android.content.IntentFilter;

        specialinvoke $r129.<android.content.IntentFilter: void <init>()>();

        r8 = $r129;

        virtualinvoke r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_ON");

        virtualinvoke r8.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.SCREEN_OFF");

        virtualinvoke r8.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.server.WifiManager.action.REFRESH_BATCHED_SCAN");

        $r131 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r128 = new com.android.server.wifi.WifiStateMachine$4;

        specialinvoke $r128.<com.android.server.wifi.WifiStateMachine$4: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        virtualinvoke $r131.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r128, r8);

        $r132 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r133 = new com.android.server.wifi.WifiStateMachine$5;

        specialinvoke $r133.<com.android.server.wifi.WifiStateMachine$5: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        $r135 = new android.content.IntentFilter;

        specialinvoke $r135.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.server.WifiManager.action.DELAYED_DRIVER_STOP");

        virtualinvoke $r132.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r133, $r135);

        $r122 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r121 = virtualinvoke $r122.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r124 = staticinvoke <android.provider.Settings$Global: android.net.Uri getUriFor(java.lang.String)>("wifi_suspend_optimizations_enabled");

        $r123 = new com.android.server.wifi.WifiStateMachine$6;

        $r125 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r123.<com.android.server.wifi.WifiStateMachine$6: void <init>(com.android.server.wifi.WifiStateMachine,android.os.Handler)>(r0, $r125);

        virtualinvoke $r121.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r124, 0, $r123);

        $r126 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r127 = new com.android.server.wifi.WifiStateMachine$7;

        specialinvoke $r127.<com.android.server.wifi.WifiStateMachine$7: void <init>(com.android.server.wifi.WifiStateMachine)>(r0);

        $r144 = new android.content.IntentFilter;

        specialinvoke $r144.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BOOT_COMPLETED");

        virtualinvoke $r126.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r127, $r144);

        $r146 = new android.util.LruCache;

        specialinvoke $r146.<android.util.LruCache: void <init>(int)>(160);

        r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache> = $r146;

        $r147 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r148 = virtualinvoke $r147.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        r9 = (android.os.PowerManager) $r148;

        $r149 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String getName()>();

        $r150 = virtualinvoke r9.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, $r149);

        r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mWakeLock> = $r150;

        $r136 = virtualinvoke r9.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "WifiSuspend");

        r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mSuspendWakeLock> = $r136;

        $r137 = r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mSuspendWakeLock>;

        virtualinvoke $r137.<android.os.PowerManager$WakeLock: void setReferenceCounted(boolean)>(0);

        $r138 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r139 = virtualinvoke $r138.<android.content.Context: android.content.res.Resources getResources()>();

        $r140 = virtualinvoke $r139.<android.content.res.Resources: java.lang.String getString(int)>(17039421);

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTcpBufferSizes> = $r140;

        $r141 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State)>($r141);

        $r143 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mInitialState>;

        $r142 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r143, $r142);

        $r161 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartingState>;

        $r162 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r161, $r162);

        $r159 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        $r160 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r159, $r160);

        $r165 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartingState>;

        $r166 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r165, $r166);

        $r163 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartedState>;

        $r164 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r163, $r164);

        $r153 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mScanModeState>;

        $r154 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r153, $r154);

        $r151 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState>;

        $r152 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r151, $r152);

        $r157 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState>;

        $r158 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r157, $r158);

        $r155 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mObtainingIpState>;

        $r156 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r155, $r156);

        $r178 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mVerifyingLinkState>;

        $r177 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r178, $r177);

        $r176 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState>;

        $r175 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r176, $r175);

        $r182 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mRoamingState>;

        $r181 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mL2ConnectedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r182, $r181);

        $r180 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectingState>;

        $r179 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r180, $r179);

        $r170 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectedState>;

        $r169 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r170, $r169);

        $r168 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWpsRunningState>;

        $r167 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectModeState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r168, $r167);

        $r174 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWaitForP2pDisableState>;

        $r173 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r174, $r173);

        $r172 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppingState>;

        $r171 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r172, $r171);

        $r194 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppedState>;

        $r195 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r194, $r195);

        $r196 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStoppingState>;

        $r197 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r196, $r197);

        $r190 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartingState>;

        $r191 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r190, $r191);

        $r192 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState>;

        $r193 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDefaultState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r192, $r193);

        $r186 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheringState>;

        $r187 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r186, $r187);

        $r188 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheredState>;

        $r189 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r188, $r189);

        $r183 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mUntetheringState>;

        $r184 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>($r183, $r184);

        $r185 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mInitialState>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setInitialState(com.android.internal.util.State)>($r185);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setLogRecSize(int)>(3000);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setLogOnlyTransitions(boolean)>(0);

        $z2 = <com.android.server.wifi.WifiStateMachine: boolean VDBG>;

        if $z2 == 0 goto label7;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setDbg(boolean)>(1);

     label7:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void start()>();

        $r205 = new android.content.Intent;

        specialinvoke $r205.<android.content.Intent: void <init>(java.lang.String)>("wifi_scan_available");

        r10 = $r205;

        virtualinvoke r10.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r10.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("scan_enabled", 1);

        $r202 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r208 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r202.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r10, $r208);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    int getVerboseLoggingLevel()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mVerboseLoggingLevel>;

        return $i0;
    }

    void enableVerboseLogging(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        com.android.server.wifi.WifiNative $r1, $r4, $r7;
        com.android.server.wifi.WifiAutoJoinController $r2;
        com.android.server.wifi.WifiMonitor $r3;
        com.android.server.wifi.WifiConfigStore $r5;
        com.android.server.wifi.SupplicantStateTracker $r6;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mVerboseLoggingLevel> = i0;

        if i0 <= 0 goto label1;

        <com.android.server.wifi.WifiStateMachine: boolean DBG> = 1;

        <com.android.server.wifi.WifiStateMachine: boolean VDBG> = 1;

        <com.android.server.wifi.WifiStateMachine: boolean PDBG> = 1;

        <com.android.server.wifi.WifiStateMachine: boolean mLogMessages> = 1;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r7.<com.android.server.wifi.WifiNative: void setSupplicantLogLevel(java.lang.String)>("DEBUG");

        goto label2;

     label1:
        <com.android.server.wifi.WifiStateMachine: boolean DBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean VDBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean PDBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean mLogMessages> = 0;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r1.<com.android.server.wifi.WifiNative: void setSupplicantLogLevel(java.lang.String)>("INFO");

     label2:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiAutoJoinController mWifiAutoJoinController>;

        virtualinvoke $r2.<com.android.server.wifi.WifiAutoJoinController: void enableVerboseLogging(int)>(i0);

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiMonitor mWifiMonitor>;

        virtualinvoke $r3.<com.android.server.wifi.WifiMonitor: void enableVerboseLogging(int)>(i0);

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r4.<com.android.server.wifi.WifiNative: void enableVerboseLogging(int)>(i0);

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        virtualinvoke $r5.<com.android.server.wifi.WifiConfigStore: void enableVerboseLogging(int)>(i0);

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker>;

        virtualinvoke $r6.<com.android.server.wifi.SupplicantStateTracker: void enableVerboseLogging(int)>(i0);

        return;
    }

    int getAggressiveHandover()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mAggressiveHandover>;

        return $i0;
    }

    void enableAggressiveHandover(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mAggressiveHandover> = i0;

        return;
    }

    public void setAllowScansWithTraffic(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        com.android.server.wifi.WifiConfigStore $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r1.<com.android.server.wifi.WifiConfigStore: int alwaysEnableScansWhileAssociated> = i0;

        return;
    }

    public int getAllowScansWithTraffic()
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiConfigStore $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i0 = $r1.<com.android.server.wifi.WifiConfigStore: int alwaysEnableScansWhileAssociated>;

        return $i0;
    }

    private void setScanAlarm(boolean, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0, $z1, $z2, $z3;
        int i0;
        long l1, $l3, $l5, $l6, $l7, $l8;
        byte b2, $b4;
        android.app.PendingIntent $r1, $r4;
        android.app.AlarmManager $r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        $z1 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z1 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setScanAlarm ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" period ");

        $l8 = r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" initial delay ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r12);

     label1:
        $l3 = r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs>;

        $b4 = $l3 cmp 0L;

        if $b4 > 0 goto label2;

        z0 = 0;

     label2:
        $z2 = r0.<com.android.server.wifi.WifiStateMachine: boolean mAlarmEnabled>;

        if z0 != $z2 goto label3;

        return;

     label3:
        if z0 == 0 goto label7;

        if i0 > 0 goto label4;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void startScan(int,int,android.net.wifi.ScanSettings,android.os.WorkSource)>(-2, 0, null, null);

        l1 = r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs>;

        goto label5;

     label4:
        l1 = (long) i0;

     label5:
        b2 = 1;

        $z3 = r0.<com.android.server.wifi.WifiStateMachine: boolean mBackgroundScanSupported>;

        if $z3 != 0 goto label6;

        b2 = 0;

     label6:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l6 = $l5 + l1;

        $l7 = r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mScanIntent>;

        virtualinvoke $r3.<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>(b2, $l6, $l7, $r4);

        r0.<com.android.server.wifi.WifiStateMachine: boolean mAlarmEnabled> = 1;

        goto label8;

     label7:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mScanIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        r0.<com.android.server.wifi.WifiStateMachine: boolean mAlarmEnabled> = 0;

     label8:
        return;
    }

    private boolean setRandomMacOui()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, $r7, $r8, $r9, $r12;
        java.lang.String[] r2;
        byte[] r3;
        android.content.Context $r4;
        android.content.res.Resources $r5;
        java.lang.Object[] $r6;
        int $i0, $i1, $i3, $i4, $i6, $i8;
        byte $b2, $b5, $b7;
        java.lang.StringBuilder $r10, $r11, $r13;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "DA-A1-19";

        r1 = virtualinvoke $r5.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(17039387, $r6);

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("-");

        r3 = newarray (byte)[3];

        $r7 = r2[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r7, 16);

        $i1 = $i0 & 255;

        $b2 = (byte) $i1;

        r3[0] = $b2;

        $r8 = r2[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r8, 16);

        $i3 = $i4 & 255;

        $b5 = (byte) $i3;

        r3[1] = $b5;

        $r9 = r2[2];

        $i6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r9, 16);

        $i8 = $i6 & 255;

        $b7 = (byte) $i8;

        r3[2] = $b7;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting OUI to ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>($r12);

        $z0 = staticinvoke <com.android.server.wifi.WifiNative: boolean setScanningMacOui(byte[])>(r3);

        return $z0;
    }

    public android.os.Messenger getMessenger()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Messenger $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = new android.os.Messenger;

        $r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Handler getHandler()>();

        specialinvoke $r1.<android.os.Messenger: void <init>(android.os.Handler)>($r2);

        return $r1;
    }

    public com.android.server.wifi.WifiMonitor getWifiMonitor()
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiMonitor $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiMonitor mWifiMonitor>;

        return $r1;
    }

    public boolean syncPingSupplicant(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        boolean z0, $z1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131123);

        $i0 = r2.<android.os.Message: int arg1>;

        if $i0 == -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return z0;
    }

    public java.util.List syncGetChannelList(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        java.util.ArrayList r3, $r12, $r13;
        java.lang.String r4, r7, $r16, $r17;
        java.lang.String[] r5, r6, r9;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.net.wifi.WifiChannel r8, $r15;
        java.lang.Object $r11, $r14;
        boolean $z0, $z1, $z2;
        java.lang.NumberFormatException $r18;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131132);

        r3 = null;

        $r11 = r2.<android.os.Message: java.lang.Object obj>;

        if $r11 == null goto label08;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r3 = $r12;

        $r14 = r2.<android.os.Message: java.lang.Object obj>;

        r4 = (java.lang.String) $r14;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r6 = r5;

        i0 = lengthof r6;

        i1 = 0;

     label01:
        if i1 >= i0 goto label08;

        r7 = r6[i1];

        $z1 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("MHz");

        if $z1 == 0 goto label06;

        $r15 = new android.net.wifi.WifiChannel;

        specialinvoke $r15.<android.net.wifi.WifiChannel: void <init>()>();

        r8 = $r15;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i3 = lengthof r9;

        if $i3 >= 5 goto label02;

        goto label07;

     label02:
        $r16 = r9[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        r8.<android.net.wifi.WifiChannel: int channelNum> = $i4;

        $r17 = r9[3];

        $i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

        r8.<android.net.wifi.WifiChannel: int freqMHz> = $i5;

     label03:
        goto label05;

     label04:
        $r18 := @caughtexception;

     label05:
        $z2 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("(DFS)");

        r8.<android.net.wifi.WifiChannel: boolean isDFS> = $z2;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8);

        goto label07;

     label06:
        $z0 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>("Mode[B] Channels:");

        if $z0 == 0 goto label07;

        goto label08;

     label07:
        i1 = i1 + 1;

        goto label01;

     label08:
        virtualinvoke r2.<android.os.Message: void recycle()>();

        if r3 == null goto label09;

        $i2 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i2 <= 0 goto label09;

        $r13 = r3;

        goto label10;

     label09:
        $r13 = null;

     label10:
        return $r13;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
    }

    public void startScan(int, int, android.net.wifi.ScanSettings, android.os.WorkSource)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1;
        android.net.wifi.ScanSettings r1;
        android.os.WorkSource r2;
        android.os.Bundle r3, $r4;
        long $l2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.net.wifi.ScanSettings;

        r2 := @parameter3: android.os.WorkSource;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("customized_scan_settings", r1);

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("customized_scan_worksource", r2);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r3.<android.os.Bundle: void putLong(java.lang.String,long)>("scan_request_time", $l2);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int,java.lang.Object)>(131143, i0, i1, r3);

        return;
    }

    public void setBatchedScanSettings(android.net.wifi.BatchedScanSettings, int, int, android.os.WorkSource)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.BatchedScanSettings r1;
        int i0, i1;
        android.os.WorkSource r2;
        android.os.Bundle r3, $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.BatchedScanSettings;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.os.WorkSource;

        $r4 = new android.os.Bundle;

        specialinvoke $r4.<android.os.Bundle: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("batched_settings", r1);

        virtualinvoke r3.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("batched_worksource", r2);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int,java.lang.Object)>(131207, i0, i1, r3);

        return;
    }

    public java.util.List syncGetBatchedScanResultsList()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.List r1, $r6, $r8, $r9;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        android.net.wifi.BatchedScanResult r4, $r11;
        java.lang.Throwable r5, $r12;
        int $i0;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.util.ArrayList;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r7;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        r3 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.wifi.BatchedScanResult) $r10;

        $r11 = new android.net.wifi.BatchedScanResult;

        specialinvoke $r11.<android.net.wifi.BatchedScanResult: void <init>(android.net.wifi.BatchedScanResult)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        return r2;

     label5:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r1;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void requestBatchedScanPoll()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131209);

        return;
    }

    private void startBatchedScan()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, $r11;
        java.lang.NumberFormatException r2, $r8;
        android.net.wifi.BatchedScanSettings $r3, $r6;
        boolean $z0, $z1, $z2;
        android.app.PendingIntent $r4;
        android.app.AlarmManager $r5;
        com.android.server.wifi.WifiNative $r7;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        if $r3 != null goto label1;

        return;

     label1:
        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mDhcpActive>;

        if $z0 == 0 goto label3;

        $z2 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z2 == 0 goto label2;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>("not starting Batched Scans due to DHCP");

     label2:
        return;

     label3:
        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void retrieveBatchedScanData()>();

        $z1 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("try  starting Batched Scans due to DHCP");

     label4:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mBatchedScanIntervalIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r4);

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        r1 = virtualinvoke $r7.<com.android.server.wifi.WifiNative: java.lang.String setBatchedScanSettings(android.net.wifi.BatchedScanSettings)>($r6);

     label5:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        r0.<com.android.server.wifi.WifiStateMachine: int mExpectedBatchedScans> = $i0;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mExpectedBatchedScans>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setNextBatchedAlarm(int)>($i1);

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mExpectedBatchedScans>;

        if $i2 <= 0 goto label6;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void noteBatchedScanStart()>();

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

        r2 = $r8;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void stopBatchedScan()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception parsing WifiNative.setBatchedScanSettings response ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r11);

     label8:
        return;

        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    private void startNextBatchedScanAsync()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131208);

        return;
    }

    private void startNextBatchedScan()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void retrieveBatchedScanData()>();

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mExpectedBatchedScans>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setNextBatchedAlarm(int)>($i0);

        return;
    }

    private void handleBatchedScanPollRequest()
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0, $l1, $l3, $l5, $l6;
        boolean $z0;
        byte $b2, $b4;
        android.net.wifi.BatchedScanSettings $r1, $r9;
        android.app.PendingIntent $r2;
        android.app.AlarmManager $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r10;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleBatchedScanPoll Request - mBatchedScanMinPollTime=");

        $l6 = r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" , mBatchedScanSettings=");

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r10);

     label1:
        $l1 = r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        return;

     label2:
        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        if $r1 != null goto label3;

        return;

     label3:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime>;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label4;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startNextBatchedScan()>();

        goto label5;

     label4:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $l5 = r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime>;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mBatchedScanIntervalIntent>;

        virtualinvoke $r3.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, $l5, $r2);

        r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime> = 0L;

     label5:
        return;
    }

    private boolean recordBatchedScanSettings(int, int, android.os.Bundle)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1;
        android.os.Bundle r1;
        android.net.wifi.BatchedScanSettings r2, $r6, $r8;
        android.os.WorkSource r3, $r7;
        android.os.Parcelable $r4, $r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r16;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.os.Bundle;

        $r4 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("batched_settings");

        r2 = (android.net.wifi.BatchedScanSettings) $r4;

        $r5 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("batched_worksource");

        r3 = (android.os.WorkSource) $r5;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set batched scan to ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for uid=");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", worksource=");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r16);

     label1:
        if r2 == null goto label2;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        $z1 = virtualinvoke r2.<android.net.wifi.BatchedScanSettings: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        return 0;

     label2:
        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        if $r6 != null goto label3;

        return 0;

     label3:
        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings> = r2;

        if r3 != null goto label4;

        $r7 = new android.os.WorkSource;

        specialinvoke $r7.<android.os.WorkSource: void <init>(int)>(i0);

        r3 = $r7;

     label4:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mBatchedScanWorkSource> = r3;

        r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanCsph> = i1;

        return 1;
    }

    private void stopBatchedScan()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.app.PendingIntent $r1;
        android.app.AlarmManager $r2;
        com.android.server.wifi.WifiNative $r3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mBatchedScanIntervalIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void retrieveBatchedScanData()>();

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r3.<com.android.server.wifi.WifiNative: java.lang.String setBatchedScanSettings(android.net.wifi.BatchedScanSettings)>(null);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void noteBatchedScanStop()>();

        return;
    }

    private void setNextBatchedAlarm(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1, i2, $i4, $i5, $i8, $i10, $i11, $i12, $i14, i16;
        android.net.wifi.BatchedScanSettings $r1, $r2, $r3, $r4, $r6, $r8;
        long $l3, $l6, $l7, $l9, $l13, $l15;
        android.app.AlarmManager $r5;
        android.app.PendingIntent $r7;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        if $r1 == null goto label1;

        if i0 >= 1 goto label2;

     label1:
        return;

     label2:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        $i4 = $r2.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $i5 = $i4 * 1000;

        $l6 = (long) $i5;

        $l7 = $l3 + $l6;

        r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime> = $l7;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        $i8 = $r3.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

        if $i8 >= i0 goto label3;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        i0 = $r8.<android.net.wifi.BatchedScanSettings: int maxScansPerBatch>;

     label3:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        i1 = $r4.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        i16 = i1 * i0;

        i2 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("wifi.batchedScan.pollPeriod", 0);

        if i2 <= 0 goto label4;

        i16 = i2;

     label4:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        $i10 = $r6.<android.net.wifi.BatchedScanSettings: int scanIntervalSec>;

        $i12 = $i10 / 2;

        $i11 = i16 - $i12;

        $i14 = $i11 * 1000;

        $l13 = (long) $i14;

        $l15 = $l9 + $l13;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mBatchedScanIntervalIntent>;

        virtualinvoke $r5.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(0, $l15, $r7);

        return;
    }

    private void retrieveBatchedScanData()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, r12, $r20, $r21, $r25, $r30, $r33, $r34, $r35, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, $r52, $r53, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r74, $r75, $r80, $r82, $r85, $r87, $r91, $r92, $r93, $r98, $r100, $r102, $r104, $r106, $r108, $r113, $r115, $r117, $r123, r129;
        int i0, i1, i2, i3, i4, i5, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String[] r8;
        java.util.List r10, $r23, $r26, $r29, $r38, $r39, $r40, $r83;
        android.net.wifi.BatchedScanResult r11, $r27, $r36;
        android.net.wifi.WifiSsid r13;
        long l6, l7, $l16, l29;
        com.android.server.wifi.WifiNative $r15, $r28;
        java.lang.Throwable r16, $r88;
        java.lang.StringBuilder $r17, $r18, $r19, $r49, $r54, $r55, $r78, $r79, $r81, $r84, $r86, $r90, $r95, $r96, $r99, $r101, $r103, $r105, $r107, $r109, $r110, $r112, $r114, $r116, $r119, $r121, $r122;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        android.content.Intent $r24, r124;
        android.content.Context $r31, $r76;
        android.os.UserHandle $r32, $r77;
        android.net.wifi.ScanResult $r37;
        byte[] $r70;
        java.lang.NumberFormatException $r89, $r94, $r97, $r111, $r118, $r120;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        r1 = virtualinvoke $r15.<com.android.server.wifi.WifiNative: java.lang.String getBatchedScanResults()>();

        r0.<com.android.server.wifi.WifiStateMachine: long mBatchedScanMinPollTime> = 0L;

        if r1 == null goto label01;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("OK");

        if $z0 == 0 goto label02;

     label01:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected BatchedScanResults :");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r21);

        return;

     label02:
        i0 = 0;

        r8 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i1 = 0;

        $r20 = r8[i1];

        $z1 = virtualinvoke $r20.<java.lang.String: boolean startsWith(java.lang.String)>("scancount=");

        if $z1 == 0 goto label06;

     label03:
        $i27 = i1;

        i1 = i1 + 1;

        $r92 = r8[$i27];

        $r91 = "scancount=";

        $i28 = virtualinvoke $r91.<java.lang.String: int length()>();

        $r93 = virtualinvoke $r92.<java.lang.String: java.lang.String substring(int)>($i28);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r93);

     label04:
        goto label07;

     label05:
        $r118 := @caughtexception;

        $r119 = new java.lang.StringBuilder;

        specialinvoke $r119.<java.lang.StringBuilder: void <init>()>();

        $r116 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scancount parseInt Exception from ");

        $r117 = r8[i1];

        $r122 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r123);

        goto label07;

     label06:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>("scancount not found");

     label07:
        if i0 != 0 goto label08;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("scanCount==0 - aborting");

        return;

     label08:
        $r24 = new android.content.Intent;

        specialinvoke $r24.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.BATCHED_RESULTS");

        r124 = $r24;

        virtualinvoke r124.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r23 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        r10 = $r23;

        entermonitor $r23;

     label09:
        $r26 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        interfaceinvoke $r26.<java.util.List: void clear()>();

        $r27 = new android.net.wifi.BatchedScanResult;

        specialinvoke $r27.<android.net.wifi.BatchedScanResult: void <init>()>();

        r11 = $r27;

        r12 = null;

        r13 = null;

        i3 = 0;

        i2 = 0;

        l6 = 0L;

        i4 = -1;

        i5 = -1;

        l7 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r25 = "bssid=";

        i8 = virtualinvoke $r25.<java.lang.String: int length()>();

     label10:
        $i9 = lengthof r8;

        if i1 >= $i9 goto label43;

        $r33 = r8[i1];

        $z2 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("----");

        if $z2 == 0 goto label14;

        $i25 = i1 + 1;

        $i23 = lengthof r8;

        if $i25 == $i23 goto label11;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("didn\'t consume ");

        $i21 = lengthof r8;

        $i20 = $i21 - i1;

        $r81 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r80);

     label11:
        $r83 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        $i26 = interfaceinvoke $r83.<java.util.List: int size()>();

        if $i26 <= 0 goto label12;

        $r76 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r77 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r76.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r124, $r77);

     label12:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>("retrieveBatchedScanResults X");

        exitmonitor r10;

     label13:
        return;

     label14:
        $r35 = r8[i1];

        $z5 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("####");

        if $z5 != 0 goto label15;

        $r43 = r8[i1];

        $z10 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("====");

        if $z10 == 0 goto label18;

     label15:
        if r12 == null goto label16;

        $r38 = r11.<android.net.wifi.BatchedScanResult: java.util.List scanResults>;

        $r37 = new android.net.wifi.ScanResult;

        specialinvoke $r37.<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long,int,int)>(r13, r12, "", i3, i2, l6, i5, i4);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r37);

        r13 = null;

        r12 = null;

        i3 = 0;

        i2 = 0;

        l6 = 0L;

        i4 = -1;

        i5 = -1;

     label16:
        $r34 = r8[i1];

        $z4 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("####");

        if $z4 == 0 goto label42;

        $r39 = r11.<android.net.wifi.BatchedScanResult: java.util.List scanResults>;

        $i12 = interfaceinvoke $r39.<java.util.List: int size()>();

        if $i12 == 0 goto label17;

        $r40 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r11);

        $r36 = new android.net.wifi.BatchedScanResult;

        specialinvoke $r36.<android.net.wifi.BatchedScanResult: void <init>()>();

        r11 = $r36;

        goto label42;

     label17:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>("Found empty batch");

        goto label42;

     label18:
        $r44 = r8[i1];

        $z11 = virtualinvoke $r44.<java.lang.String: boolean equals(java.lang.Object)>("trunc");

        if $z11 == 0 goto label19;

        r11.<android.net.wifi.BatchedScanResult: boolean truncated> = 1;

        goto label42;

     label19:
        $r41 = r8[i1];

        $z8 = virtualinvoke $r41.<java.lang.String: boolean startsWith(java.lang.String)>("bssid=");

        if $z8 == 0 goto label20;

        $r72 = new java.lang.String;

        $r71 = r8[i1];

        $r70 = virtualinvoke $r71.<java.lang.String: byte[] getBytes()>();

        $r82 = r8[i1];

        $i22 = virtualinvoke $r82.<java.lang.String: int length()>();

        $i24 = $i22 - i8;

        specialinvoke $r72.<java.lang.String: void <init>(byte[],int,int)>($r70, i8, $i24);

        r12 = $r72;

        goto label42;

     label20:
        $r42 = r8[i1];

        $z9 = virtualinvoke $r42.<java.lang.String: boolean startsWith(java.lang.String)>("freq=");

        if $z9 == 0 goto label24;

     label21:
        $r74 = r8[i1];

        $r75 = "freq=";

        $i19 = virtualinvoke $r75.<java.lang.String: int length()>();

        $r73 = virtualinvoke $r74.<java.lang.String: java.lang.String substring(int)>($i19);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r73);

     label22:
        goto label42;

     label23:
        $r111 := @caughtexception;

        $r110 = new java.lang.StringBuilder;

        specialinvoke $r110.<java.lang.StringBuilder: void <init>()>();

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid freqency: ");

        $r108 = r8[i1];

        $r99 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r98);

        i2 = 0;

        goto label42;

     label24:
        $r47 = r8[i1];

        $z14 = virtualinvoke $r47.<java.lang.String: boolean startsWith(java.lang.String)>("age=");

        if $z14 == 0 goto label28;

     label25:
        $r67 = r8[i1];

        $r68 = "age=";

        $i17 = virtualinvoke $r68.<java.lang.String: int length()>();

        $r66 = virtualinvoke $r67.<java.lang.String: java.lang.String substring(int)>($i17);

        $l16 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r66);

        l29 = l7 - $l16;

        l6 = l29 * 1000L;

     label26:
        goto label42;

     label27:
        $r120 := @caughtexception;

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid timestamp: ");

        $r115 = r8[i1];

        $r112 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r113);

        l6 = 0L;

        goto label42;

     label28:
        $r48 = r8[i1];

        $z15 = virtualinvoke $r48.<java.lang.String: boolean startsWith(java.lang.String)>("ssid=");

        if $z15 == 0 goto label29;

        $r62 = r8[i1];

        $r61 = "ssid=";

        $i18 = virtualinvoke $r61.<java.lang.String: int length()>();

        $r69 = virtualinvoke $r62.<java.lang.String: java.lang.String substring(int)>($i18);

        r13 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>($r69);

        goto label42;

     label29:
        $r45 = r8[i1];

        $z12 = virtualinvoke $r45.<java.lang.String: boolean startsWith(java.lang.String)>("level=");

        if $z12 == 0 goto label33;

     label30:
        $r64 = r8[i1];

        $r65 = "level=";

        $i15 = virtualinvoke $r65.<java.lang.String: int length()>();

        $r63 = virtualinvoke $r64.<java.lang.String: java.lang.String substring(int)>($i15);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r63);

        if i3 <= 0 goto label31;

        i3 = i3 + -256;

     label31:
        goto label42;

     label32:
        $r89 := @caughtexception;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid level: ");

        $r106 = r8[i1];

        $r105 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r104);

        i3 = 0;

        goto label42;

     label33:
        $r46 = r8[i1];

        $z13 = virtualinvoke $r46.<java.lang.String: boolean startsWith(java.lang.String)>("dist=");

        if $z13 == 0 goto label37;

     label34:
        $r58 = r8[i1];

        $r57 = "dist=";

        $i13 = virtualinvoke $r57.<java.lang.String: int length()>();

        $r56 = virtualinvoke $r58.<java.lang.String: java.lang.String substring(int)>($i13);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r56);

     label35:
        goto label42;

     label36:
        $r97 := @caughtexception;

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid distance: ");

        $r102 = r8[i1];

        $r101 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r100);

        i5 = -1;

        goto label42;

     label37:
        $r53 = r8[i1];

        $z16 = virtualinvoke $r53.<java.lang.String: boolean startsWith(java.lang.String)>("distSd=");

        if $z16 == 0 goto label41;

     label38:
        $r60 = r8[i1];

        $r51 = "distSd=";

        $i14 = virtualinvoke $r51.<java.lang.String: int length()>();

        $r59 = virtualinvoke $r60.<java.lang.String: java.lang.String substring(int)>($i14);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r59);

     label39:
        goto label42;

     label40:
        $r94 := @caughtexception;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid distanceSd: ");

        $r85 = r8[i1];

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r87);

        i4 = -1;

        goto label42;

     label41:
        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse batched scan result line: ");

        $r50 = r8[i1];

        $r49 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r52);

     label42:
        i1 = i1 + 1;

        goto label10;

     label43:
        $r28 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        r129 = virtualinvoke $r28.<com.android.server.wifi.WifiNative: java.lang.String getBatchedScanResults()>();

        if r129 != null goto label45;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Unexpected null BatchedScanResults");

        exitmonitor r10;

     label44:
        return;

     label45:
        r8 = virtualinvoke r129.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i11 = lengthof r8;

        if $i11 == 0 goto label46;

        $r30 = r8[0];

        $z3 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("ok");

        if $z3 == 0 goto label49;

     label46:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("batch scan results just ended!");

        $r29 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mBatchedScanResults>;

        $i10 = interfaceinvoke $r29.<java.util.List: int size()>();

        if $i10 <= 0 goto label47;

        $r31 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r32 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r31.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r124, $r32);

     label47:
        exitmonitor r10;

     label48:
        return;

     label49:
        i1 = 0;

        goto label10;

     label50:
        $r88 := @caughtexception;

        r16 = $r88;

        exitmonitor r10;

     label51:
        throw r16;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label21 to label22 with label23;
        catch java.lang.NumberFormatException from label25 to label26 with label27;
        catch java.lang.NumberFormatException from label30 to label31 with label32;
        catch java.lang.NumberFormatException from label34 to label35 with label36;
        catch java.lang.NumberFormatException from label38 to label39 with label40;
        catch java.lang.Throwable from label09 to label13 with label50;
        catch java.lang.Throwable from label14 to label44 with label50;
        catch java.lang.Throwable from label45 to label48 with label50;
        catch java.lang.Throwable from label49 to label51 with label50;
    }

    public long getDisconnectedTimeMilli()
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0, $l1, $l3, $l4;
        com.android.internal.util.IState $r1;
        com.android.internal.util.State $r2;
        byte $b2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectedState>;

        if $r1 != $r2 goto label1;

        $l1 = r0.<com.android.server.wifi.WifiStateMachine: long mDisconnectedTimeStamp>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = r0.<com.android.server.wifi.WifiStateMachine: long mDisconnectedTimeStamp>;

        $l4 = l0 - $l3;

        return $l4;

     label1:
        return 0L;
    }

    private boolean isScanAllowed()
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.android.server.wifi.WifiStateMachine: long lastConnectAttempt>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $l3 = r0.<com.android.server.wifi.WifiStateMachine: long lastConnectAttempt>;

        $l4 = l0 - $l3;

        $b5 = $l4 cmp 10000L;

        if $b5 >= 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    java.lang.String reportOnTime()
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0, $l13, $l15, $l17, $l19;
        java.lang.StringBuilder r1, $r2;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i16, $i18, i20, i21;
        java.lang.Object[] $r3, $r10;
        java.lang.Integer $r4, $r5, $r6, $r8, $r11, $r13;
        java.lang.String $r7, $r12, $r15;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $i6 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        $i5 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeLastReport>;

        i1 = $i6 - $i5;

        $i7 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeLastReport> = $i7;

        $i9 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTime>;

        $i8 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeLastReport>;

        i2 = $i9 - $i8;

        $i10 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTime>;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeLastReport> = $i10;

        $i11 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTime>;

        $i12 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeLastReport>;

        i3 = $i11 - $i12;

        $i14 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTime>;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeLastReport> = $i14;

        $l13 = r0.<com.android.server.wifi.WifiStateMachine: long lastOntimeReportTimeStamp>;

        $l15 = l0 - $l13;

        i4 = (int) $l15;

        r0.<com.android.server.wifi.WifiStateMachine: long lastOntimeReportTimeStamp> = l0;

        $r3 = newarray (java.lang.Object)[4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3[2] = $r6;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r3[3] = $r8;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[on:%d tx:%d rx:%d period:%d]", $r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i16 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        $i18 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScreenStateChange>;

        i20 = $i16 - $i18;

        $l17 = r0.<com.android.server.wifi.WifiStateMachine: long lastScreenStateChangeTimeStamp>;

        $l19 = l0 - $l17;

        i21 = (int) $l19;

        $r10 = newarray (java.lang.Object)[2];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r10[0] = $r13;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        $r10[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" from screen [on:%d period:%d]", $r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        android.net.wifi.WifiLinkLayerStats r1;
        java.lang.String r2, $r4;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        long $l1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        r1 = null;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported>;

        if $i0 <= 0 goto label2;

        r2 = "wlan0";

        r1 = staticinvoke <com.android.server.wifi.WifiNative: android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(java.lang.String)>(r2);

        if r2 == null goto label1;

        if r1 != null goto label1;

        $i6 = r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported>;

        if $i6 <= 0 goto label1;

        $i7 = r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported>;

        $i8 = $i7 - 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported> = $i8;

        goto label2;

     label1:
        if r1 == null goto label2;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.wifi.WifiStateMachine: long lastLinkLayerStatsUpdate> = $l1;

        $i2 = r1.<android.net.wifi.WifiLinkLayerStats: int on_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTime> = $i2;

        $i3 = r1.<android.net.wifi.WifiLinkLayerStats: int tx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTime> = $i3;

        $i4 = r1.<android.net.wifi.WifiLinkLayerStats: int rx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTime> = $i4;

        $i5 = r1.<android.net.wifi.WifiLinkLayerStats: int beacon_rx>;

        r0.<com.android.server.wifi.WifiStateMachine: int mRunningBeaconCount> = $i5;

        if z0 == 0 goto label2;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("WifiLinkLayerStats:");

        $r4 = virtualinvoke r1.<android.net.wifi.WifiLinkLayerStats: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r4);

     label2:
        return r1;
    }

    void startRadioScanStats()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiLinkLayerStats r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(boolean)>(0);

        if r1 == null goto label1;

        $i0 = r1.<android.net.wifi.WifiLinkLayerStats: int on_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeStartScan> = $i0;

        $i1 = r1.<android.net.wifi.WifiLinkLayerStats: int tx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeStartScan> = $i1;

        $i2 = r1.<android.net.wifi.WifiLinkLayerStats: int rx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeStartScan> = $i2;

        $i3 = r1.<android.net.wifi.WifiLinkLayerStats: int on_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTime> = $i3;

        $i4 = r1.<android.net.wifi.WifiLinkLayerStats: int tx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTime> = $i4;

        $i5 = r1.<android.net.wifi.WifiLinkLayerStats: int rx_time>;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTime> = $i5;

     label1:
        return;
    }

    void closeRadioScanStats()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiLinkLayerStats r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(boolean)>(0);

        if r1 == null goto label1;

        $i1 = r1.<android.net.wifi.WifiLinkLayerStats: int on_time>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeStartScan>;

        $i2 = $i1 - $i0;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeThisScan> = $i2;

        $i4 = r1.<android.net.wifi.WifiLinkLayerStats: int tx_time>;

        $i3 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeStartScan>;

        $i5 = $i4 - $i3;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeThisScan> = $i5;

        $i7 = r1.<android.net.wifi.WifiLinkLayerStats: int rx_time>;

        $i6 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeStartScan>;

        $i8 = $i7 - $i6;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeThisScan> = $i8;

        $i10 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScan>;

        $i9 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeThisScan>;

        $i11 = $i10 + $i9;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScan> = $i11;

        $i14 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeScan>;

        $i12 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeThisScan>;

        $i13 = $i14 + $i12;

        r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeScan> = $i13;

        $i15 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeScan>;

        $i16 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeThisScan>;

        $i17 = $i15 + $i16;

        r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeScan> = $i17;

     label1:
        return;
    }

    private void noteScanStart(int, android.os.WorkSource)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        android.os.WorkSource r1, $r3, $r4, $r5;
        long l1;
        java.lang.String r2, $r13, $r17, $r18, $r20, $r22;
        boolean $z0;
        com.android.internal.app.IBatteryStats $r6;
        java.lang.Object[] $r7;
        java.lang.Long $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r19, $r21;
        android.os.RemoteException $r23, r24;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.WorkSource;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp> = l1;

        r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration> = 0L;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label02;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r7[0] = $r8;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%,d ms]", $r7);

        if r1 == null goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" noteScanStart");

        $r17 = virtualinvoke r1.<android.os.WorkSource: java.lang.String toString()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid ");

        $r18 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r20);

        goto label02;

     label01:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" noteScanstart no scan source");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r13);

     label02:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void startRadioScanStats()>();

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        if $r3 != null goto label10;

        if i0 == -1 goto label03;

        if i0 != -2 goto label04;

     label03:
        if r1 == null goto label10;

     label04:
        if r1 == null goto label05;

        $r4 = r1;

        goto label06;

     label05:
        $r4 = new android.os.WorkSource;

        specialinvoke $r4.<android.os.WorkSource: void <init>(int)>(i0);

     label06:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource> = $r4;

     label07:
        $r6 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        interfaceinvoke $r6.<com.android.internal.app.IBatteryStats: void noteWifiScanStartedFromSource(android.os.WorkSource)>($r5);

     label08:
        goto label10;

     label09:
        $r23 := @caughtexception;

        r24 = $r23;

        $r22 = virtualinvoke r24.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r22);

     label10:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void noteScanEnd()
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0, $l1, $l3, $l4;
        java.lang.String r1, $r11, $r18, $r19, $r21;
        java.lang.Throwable r2, $r22;
        byte $b2;
        boolean $z0;
        android.os.WorkSource $r3, $r4, $r8, $r15;
        com.android.internal.app.IBatteryStats $r5;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r16, $r17;
        android.os.RemoteException $r20, r23;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label01;

        $l3 = r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp>;

        $l4 = l0 - $l3;

        r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration> = $l4;

     label01:
        r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp> = 0L;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label03;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[0] = $r7;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%,d ms]", $r6);

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        if $r8 == null goto label02;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" noteScanEnd ");

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        $r18 = virtualinvoke $r15.<android.os.WorkSource: java.lang.String toString()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r19);

        goto label03;

     label02:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" noteScanEnd no scan source");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r11);

     label03:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        if $r3 == null goto label10;

     label04:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteWifiScanStoppedFromSource(android.os.WorkSource)>($r4);

     label05:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource> = null;

        goto label10;

     label06:
        $r20 := @caughtexception;

        r23 = $r20;

        $r21 = virtualinvoke r23.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r21);

     label07:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource> = null;

        goto label10;

     label08:
        $r22 := @caughtexception;

        r2 = $r22;

     label09:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mScanWorkSource> = null;

        throw r2;

     label10:
        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void noteBatchedScanStart()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.RemoteException r1, $r13, $r15, r16;
        java.lang.Throwable r2, $r11;
        boolean $z0, $z1;
        android.os.WorkSource $r3, $r4, $r6, $r7, $r8, $r9;
        int $i0, $i1, $i2, $i3;
        com.android.internal.app.IBatteryStats $r5, $r10;
        java.lang.String $r12, $r14;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("noteBatchedScanstart()");

     label01:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource>;

        if $r3 == null goto label08;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource>;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mBatchedScanWorkSource>;

        $z1 = virtualinvoke $r8.<android.os.WorkSource: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label02;

        $i3 = r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph>;

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanCsph>;

        if $i3 == $i2 goto label08;

     label02:
        $r10 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource>;

        interfaceinvoke $r10.<com.android.internal.app.IBatteryStats: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>($r9);

     label03:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        goto label08;

     label04:
        $r15 := @caughtexception;

        r1 = $r15;

        $r14 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r14);

     label05:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        goto label08;

     label06:
        $r11 := @caughtexception;

        r2 = $r11;

     label07:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        throw r2;

     label08:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mBatchedScanWorkSource>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanCsph>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>($r4, $i0);

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mBatchedScanWorkSource>;

        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = $r6;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mBatchedScanCsph>;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = $i1;

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

        r16 = $r13;

        $r12 = virtualinvoke r16.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r12);

     label11:
        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label08 to label09 with label10;
    }

    private void noteBatchedScanStop()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.RemoteException r1, $r6;
        java.lang.Throwable r2, $r8;
        boolean $z0;
        android.os.WorkSource $r3, $r4;
        com.android.internal.app.IBatteryStats $r5;
        java.lang.String $r7;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("noteBatchedScanstop()");

     label1:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource>;

        if $r3 == null goto label8;

     label2:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource>;

        interfaceinvoke $r5.<com.android.internal.app.IBatteryStats: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>($r4);

     label3:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        goto label8;

     label4:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = virtualinvoke r1.<android.os.RemoteException: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r7);

     label5:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        goto label8;

     label6:
        $r8 := @caughtexception;

        r2 = $r8;

     label7:
        r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mNotedBatchedScanWorkSource> = null;

        r0.<com.android.server.wifi.WifiStateMachine: int mNotedBatchedScanCsph> = 0;

        throw r2;

     label8:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void handleScanRequest(int, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.os.Message r1, $r20, r29, r31;
        android.os.Bundle r2, $r13, r30;
        android.net.wifi.ScanSettings r3;
        android.os.WorkSource r4;
        java.lang.String r5;
        java.lang.StringBuilder r6, $r24;
        boolean z0, $z1, $z2, $z3, $z6;
        java.util.Iterator r7;
        android.net.wifi.WifiChannel r8;
        java.lang.Object $r9, $r19, $r27;
        android.os.Parcelable $r10, $r11;
        java.util.Queue $r12, $r14, $r15, $r16, $r17, $r18, $r21, $r22;
        java.util.Collection $r23, $r25;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Message;

        $r9 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.os.Bundle) $r9;

        $r10 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("customized_scan_settings");

        r3 = (android.net.wifi.ScanSettings) $r10;

        $r11 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("customized_scan_worksource");

        r4 = (android.os.WorkSource) $r11;

        r5 = null;

        if r3 == null goto label05;

        $r23 = r3.<android.net.wifi.ScanSettings: java.util.Collection channelSet>;

        if $r23 == null goto label05;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        r6 = $r24;

        z0 = 1;

        $r25 = r3.<android.net.wifi.ScanSettings: java.util.Collection channelSet>;

        r7 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z6 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r27 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.net.wifi.WifiChannel) $r27;

        if z0 != 0 goto label02;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        goto label03;

     label02:
        z0 = 0;

     label03:
        $i12 = r8.<android.net.wifi.WifiChannel: int freqMHz>;

        virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        goto label01;

     label04:
        r5 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $z1 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean startScanNative(int,java.lang.String)>(i0, r5);

        if $z1 == 0 goto label07;

        $i10 = r1.<android.os.Message: int arg1>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void noteScanStart(int,android.os.WorkSource)>($i10, r4);

        if r5 != null goto label06;

        $r22 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        interfaceinvoke $r22.<java.util.Queue: void clear()>();

     label06:
        $i11 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_OK>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i11;

        return;

     label07:
        $z2 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing>;

        if $z2 != 0 goto label09;

        $r17 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        $i8 = interfaceinvoke $r17.<java.util.Queue: int size()>();

        if $i8 <= 0 goto label08;

        $r21 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        $r19 = interfaceinvoke $r21.<java.util.Queue: java.lang.Object remove()>();

        $r20 = (android.os.Message) $r19;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(android.os.Message)>($r20);

     label08:
        $i9 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_DISCARD>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i9;

        goto label14;

     label09:
        $z3 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing>;

        if $z3 != 0 goto label13;

        if r5 != null goto label10;

        $r18 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        interfaceinvoke $r18.<java.util.Queue: void clear()>();

     label10:
        $r12 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        $i2 = interfaceinvoke $r12.<java.util.Queue: int size()>();

        if $i2 >= 10 goto label11;

        $i6 = r1.<android.os.Message: int arg1>;

        $i7 = r1.<android.os.Message: int arg2>;

        r29 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(131143, $i6, $i7, r2);

        $r16 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        interfaceinvoke $r16.<java.util.Queue: boolean add(java.lang.Object)>(r29);

        goto label12;

     label11:
        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r30 = $r13;

        virtualinvoke r30.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("customized_scan_settings", null);

        virtualinvoke r30.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("customized_scan_worksource", r4);

        $i4 = r1.<android.os.Message: int arg1>;

        $i3 = r1.<android.os.Message: int arg2>;

        r31 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(131143, $i4, $i3, r30);

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        interfaceinvoke $r15.<java.util.Queue: void clear()>();

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        interfaceinvoke $r14.<java.util.Queue: boolean add(java.lang.Object)>(r31);

     label12:
        $i5 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_LOOPED>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i5;

        goto label14;

     label13:
        $i1 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_FAIL>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i1;

     label14:
        return;
    }

    private boolean startScanNative(int, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.String r1;
        com.android.server.wifi.WifiNative $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $z0 = virtualinvoke $r2.<com.android.server.wifi.WifiNative: boolean scan(int,java.lang.String)>(i0, r1);

        if $z0 == 0 goto label3;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing> = 1;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing> = $z1;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String lastScanFreqs> = r1;

        return 1;

     label3:
        return 0;
    }

    public void setSupplicantRunning(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131083);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131084);

     label2:
        return;
    }

    public void setHostApRunning(android.net.wifi.WifiConfiguration, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,java.lang.Object)>(131093, r1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131096);

     label2:
        return;
    }

    public void setWifiApConfiguration(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        com.android.internal.util.AsyncChannel $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiApConfigChannel>;

        virtualinvoke $r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>(131097, r1);

        return;
    }

    public android.net.wifi.WifiConfiguration syncGetWifiApConfiguration()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        android.net.wifi.WifiConfiguration r2;
        com.android.internal.util.AsyncChannel $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiApConfigChannel>;

        r1 = virtualinvoke $r3.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131099);

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (android.net.wifi.WifiConfiguration) $r4;

        virtualinvoke r1.<android.os.Message: void recycle()>();

        return r2;
    }

    public int syncGetWifiState()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiState>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public java.lang.String syncGetWifiStateByName()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiState>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        return "disabling";

     label2:
        return "disabled";

     label3:
        return "enabling";

     label4:
        return "enabled";

     label5:
        return "unknown state";

     label6:
        return "[invalid state]";
    }

    public int syncGetWifiApState()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiApState>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public java.lang.String syncGetWifiApStateByName()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiApState>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        tableswitch($i0)
        {
            case 10: goto label1;
            case 11: goto label2;
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label5;
            default: goto label6;
        };

     label1:
        return "disabling";

     label2:
        return "disabled";

     label3:
        return "enabling";

     label4:
        return "enabled";

     label5:
        return "failed";

     label6:
        return "[invalid state]";
    }

    public android.net.wifi.WifiInfo syncRequestConnectionInfo()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        return $r1;
    }

    public android.net.DhcpResults syncGetDhcpResults()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.net.DhcpResults $r4, $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = new android.net.DhcpResults;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        specialinvoke $r4.<android.net.DhcpResults: void <init>(android.net.DhcpResults)>($r5);

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setDriverStart(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131085);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131086);

     label2:
        return;
    }

    public void setOperationalMode(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting operational mode to ");

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r5);

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131144, i0, 0);

        return;
    }

    public java.util.List syncGetScanResultsList()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.util.LruCache r1, $r6;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        android.net.wifi.ScanResult r4, $r10;
        java.lang.Throwable r5, $r11;
        java.util.List $r8;
        boolean $z0;
        java.lang.Object $r9;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults>;

        r3 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.wifi.ScanResult) $r9;

        $r10 = new android.net.wifi.ScanResult;

        specialinvoke $r10.<android.net.wifi.ScanResult: void <init>(android.net.wifi.ScanResult)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        return r2;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r1;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.util.List getScanResultsListNoCopyUnsync()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.List $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults>;

        return $r1;
    }

    public void disconnectCommand()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131145);

        return;
    }

    public void reconnectCommand()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131146);

        return;
    }

    public void reassociateCommand()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131147);

        return;
    }

    public void reloadTlsNetworksAndReconnect()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131214);

        return;
    }

    public int syncAddOrUpdateNetwork(com.android.internal.util.AsyncChannel, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.net.wifi.WifiConfiguration r2;
        android.os.Message r3;
        int i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 := @parameter1: android.net.wifi.WifiConfiguration;

        r3 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,java.lang.Object)>(131124, r2);

        i0 = r3.<android.os.Message: int arg1>;

        virtualinvoke r3.<android.os.Message: void recycle()>();

        return i0;
    }

    public java.util.List syncGetConfiguredNetworks(int, com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        java.util.List r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>(131131, i0);

        $r4 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (java.util.List) $r4;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return r3;
    }

    public java.util.List syncGetPrivilegedConfiguredNetwork(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        java.util.List r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131134);

        $r4 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (java.util.List) $r4;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return r3;
    }

    public android.net.wifi.WifiConnectionStatistics syncGetConnectionStatistics(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        android.net.wifi.WifiConnectionStatistics r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131148);

        $r4 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (android.net.wifi.WifiConnectionStatistics) $r4;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return r3;
    }

    public int syncGetSupportedFeatures(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        int i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131133);

        i0 = r2.<android.os.Message: int arg1>;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return i0;
    }

    public android.net.wifi.WifiLinkLayerStats syncGetLinkLayerStats(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        android.net.wifi.WifiLinkLayerStats r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131135);

        $r4 = r2.<android.os.Message: java.lang.Object obj>;

        r3 = (android.net.wifi.WifiLinkLayerStats) $r4;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return r3;
    }

    public boolean syncRemoveNetwork(com.android.internal.util.AsyncChannel, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        int i0, $i1;
        android.os.Message r2;
        boolean z0, $z1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>(131125, i0);

        $i1 = r2.<android.os.Message: int arg1>;

        if $i1 == -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return z0;
    }

    public boolean syncEnableNetwork(com.android.internal.util.AsyncChannel, int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        int i0, $i1;
        boolean z0, z1, $z2;
        android.os.Message r2;
        byte $b2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $b2 = 1;

        goto label2;

     label1:
        $b2 = 0;

     label2:
        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int)>(131126, i0, $b2);

        $i1 = r2.<android.os.Message: int arg1>;

        if $i1 == -1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z1 = $z2;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return z1;
    }

    public boolean syncDisableNetwork(com.android.internal.util.AsyncChannel, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        int i0, $i1;
        android.os.Message r2;
        boolean z0, $z1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>(151569, i0);

        $i1 = r2.<android.os.Message: int arg1>;

        if $i1 == 151570 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return z0;
    }

    public java.lang.String syncGetWpsNfcConfigurationToken(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        com.android.server.wifi.WifiNative $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $r2 = virtualinvoke $r1.<com.android.server.wifi.WifiNative: java.lang.String getNfcWpsConfigurationToken(int)>(i0);

        return $r2;
    }

    public void addToBlacklist(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,java.lang.Object)>(131128, r1);

        return;
    }

    public void clearBlacklist()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131129);

        return;
    }

    public void enableRssiPolling(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131154, $b0, 0);

        return;
    }

    public void enableAllNetworks()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131127);

        return;
    }

    public void startFilteringMulticastV4Packets()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mFilteringMulticastV4Packets>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131156, 0, 0);

        return;
    }

    public void stopFilteringMulticastV4Packets()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mFilteringMulticastV4Packets>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131157, 0, 0);

        return;
    }

    public void startFilteringMulticastV6Packets()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131156, 1, 0);

        return;
    }

    public void stopFilteringMulticastV6Packets()
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131157, 1, 0);

        return;
    }

    public void setHighPerfModeEnabled(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131149, $b0, 0);

        return;
    }

    public void setCountryCode(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        boolean z0, $z1;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r2;
        byte $b1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mCountryCodeSequence>;

        i0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>("Ignoring resetting of country code");

        goto label4;

     label1:
        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int,java.lang.Object)>(131152, i0, $b1, r1);

     label4:
        return;
    }

    public void setFrequencyBand(int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        boolean z0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>($r2, "wifi_frequency_band", i0);

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131162, i0, 0);

        return;
    }

    public void enableTdls(java.lang.String, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        boolean z0;
        byte b0, $b1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        b0 = $b1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int,java.lang.Object)>(131164, b0, 0, r1);

        return;
    }

    public int getFrequencyBand()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mFrequencyBand>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        return $i0;
    }

    public java.lang.String getConfigFile()
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiConfigStore $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r2 = virtualinvoke $r1.<com.android.server.wifi.WifiConfigStore: java.lang.String getConfigFile()>();

        return $r2;
    }

    public void sendBluetoothAdapterStateChange(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131103, i0, 0);

        return;
    }

    public boolean syncSaveConfig(com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;
        android.os.Message r2;
        boolean z0, $z1;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.internal.util.AsyncChannel;

        r2 = virtualinvoke r1.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>(131130);

        $i0 = r2.<android.os.Message: int arg1>;

        if $i0 == -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        virtualinvoke r2.<android.os.Message: void recycle()>();

        return z0;
    }

    public void updateBatteryWorkSource(android.os.WorkSource)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.WorkSource r1, r2, $r5, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22;
        java.lang.Throwable r4, $r21;
        boolean $z0, $z1, $z2, $z3;
        android.os.PowerManager$WakeLock $r6;
        com.android.internal.app.IBatteryStats $r8, $r11, $r17;
        android.os.RemoteException $r23;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.WorkSource;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        if r1 == null goto label02;

        $r22 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        virtualinvoke $r22.<android.os.WorkSource: void set(android.os.WorkSource)>(r1);

     label02:
        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsRunning>;

        if $z0 == 0 goto label04;

        $z2 = r0.<com.android.server.wifi.WifiStateMachine: boolean mReportedRunning>;

        if $z2 == 0 goto label03;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        $z3 = virtualinvoke $r14.<android.os.WorkSource: boolean diff(android.os.WorkSource)>($r15);

        if $z3 == 0 goto label05;

        $r17 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r18 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        $r16 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        interfaceinvoke $r17.<com.android.internal.app.IBatteryStats: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>($r18, $r16);

        $r19 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        $r20 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        virtualinvoke $r19.<android.os.WorkSource: void set(android.os.WorkSource)>($r20);

        goto label05;

     label03:
        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        interfaceinvoke $r11.<com.android.internal.app.IBatteryStats: void noteWifiRunning(android.os.WorkSource)>($r10);

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mRunningWifiUids>;

        virtualinvoke $r12.<android.os.WorkSource: void set(android.os.WorkSource)>($r13);

        r0.<com.android.server.wifi.WifiStateMachine: boolean mReportedRunning> = 1;

        goto label05;

     label04:
        $z1 = r0.<com.android.server.wifi.WifiStateMachine: boolean mReportedRunning>;

        if $z1 == 0 goto label05;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        interfaceinvoke $r8.<com.android.internal.app.IBatteryStats: void noteWifiStopped(android.os.WorkSource)>($r7);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.os.WorkSource mLastRunningWifiUids>;

        virtualinvoke $r9.<android.os.WorkSource: void clear()>();

        r0.<com.android.server.wifi.WifiStateMachine: boolean mReportedRunning> = 0;

     label05:
        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void setWorkSource(android.os.WorkSource)>(r1);

     label06:
        goto label08;

     label07:
        $r23 := @caughtexception;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r21 := @caughtexception;

        r4 = $r21;

        exitmonitor r2;

     label11:
        throw r4;

     label12:
        return;

        catch android.os.RemoteException from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        com.android.server.wifi.SupplicantStateTracker $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r17, $r19, $r20, $r21, $r22, $r24, $r26, $r28, $r29, $r30, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r48, $r49, $r51, $r52, $r55, $r56, $r57, $r60, $r62, $r63, $r65, $r66, $r68, $r70;
        android.net.LinkProperties $r7;
        java.lang.String $r9, $r14, $r18, $r25, $r27, $r31, $r33, $r36, $r43, $r47, $r50, $r53, $r58, $r59, $r61, $r64, $r69, $r71;
        android.net.wifi.WifiInfo $r12;
        android.net.DhcpResults $r16;
        android.net.NetworkInfo $r23;
        int $i0, $i1, $i2, $i3;
        java.util.concurrent.atomic.AtomicBoolean $r42;
        com.android.server.wifi.WifiNative $r54;
        boolean $z0;
        com.android.server.wifi.WifiConfigStore $r67;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        specialinvoke r0.<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker>;

        virtualinvoke $r4.<com.android.server.wifi.SupplicantStateTracker: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLinkProperties ");

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mWifiInfo ");

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mDhcpResults ");

        $r16 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r18);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mNetworkInfo ");

        $r23 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r25);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastSignalLevel ");

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastBssid ");

        $r33 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastNetworkId ");

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mOperationalMode ");

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mOperationalMode>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mUserWantsSuspendOpt ");

        $r42 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r47);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSuspendOptNeedsDisabled ");

        $i3 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r50);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Supplicant status ");

        $r54 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $r53 = virtualinvoke $r54.<com.android.server.wifi.WifiNative: java.lang.String status(boolean)>(1);

        $r52 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r58 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r58);

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mEnableBackgroundScan ");

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan>;

        $r63 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mLastSetCountryCode ");

        $r59 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastSetCountryCode>;

        $r60 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r61);

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mPersistedCountryCode ");

        $r69 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mPersistedCountryCode>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r71);

        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        $r67 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        virtualinvoke $r67.<com.android.server.wifi.WifiConfigStore: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    private void logStateAndMessage(android.os.Message, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        java.lang.String r2, $r7, $r9;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = 0;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean mLogMessages>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String getLogRecString(android.os.Message)>(r1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r9);

     label1:
        return;
    }

    protected java.lang.String getLogRecString(android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        android.net.wifi.WifiConfiguration r2, r9, $r58, $r60, $r64, $r66, $r69, $r70, $r72, $r74, $r75, $r78, $r234, $r238, $r240, $r255, $r266, $r268, $r270, $r273, $r274, $r276, r657, r660, r661, r663, r665, r666;
        java.lang.Long r3, r7, r658, r662;
        long l0, $l11, $l12, $l14, $l25, $l29, $l34, $l35, $l36, $l49, $l62, $l78, $l79, $l81, $l88, $l90, $l91, $l92, $l93, $l120, $l121, $l122, $l134, $l136, $l143, $l146, $l147, $l148, $l149, $l151, $l153, $l154, $l155, $l156, $l157, $l158, l174, l175, l176, l177, l178, l179, l180, l182;
        java.lang.String r4, $r16, $r19, $r22, $r24, $r40, $r43, $r52, $r59, $r63, $r73, $r81, $r92, $r100, $r101, $r107, $r112, $r116, $r120, $r140, $r142, $r145, $r149, $r159, $r162, $r167, $r183, $r204, $r205, $r212, $r219, $r223, $r226, $r228, $r231, $r237, $r242, $r245, $r254, $r262, $r265, $r267, $r284, $r287, $r288, $r293, $r298, $r302, $r308, $r310, $r314, $r317, $r328, $r333, $r348, $r352, $r354, $r358, $r362, $r365, $r375, $r376, $r381, $r382, $r386, $r397, $r400, $r414, $r419, $r422, $r424, $r427, $r434, $r437, $r439, $r441, $r454, $r456, $r464, $r467, $r472, $r477, $r482, $r483, $r486, $r501, $r506, $r517, $r522, $r529, $r532, $r538, $r539, $r543, $r546, $r551, $r557, $r564, $r572, $r581, $r584, $r589, $r595, $r603, $r609, $r615, $r616, $r617, $r621, $r623, $r626, $r631, $r636, $r639, $r646, $r651, $r654, r656, r659, r664;
        java.lang.StringBuilder r5, $r14, $r45, $r48, $r54, $r57, $r67, $r71, $r77, $r80, $r88, $r89, $r96, $r102, $r105, $r109, $r111, $r114, $r118, $r121, $r124, $r127, $r128, $r130, $r134, $r136, $r137, $r139, $r143, $r152, $r156, $r163, $r164, $r165, $r170, $r173, $r174, $r175, $r177, $r178, $r180, $r186, $r188, $r191, $r192, $r194, $r195, $r200, $r206, $r207, $r211, $r213, $r215, $r218, $r221, $r235, $r239, $r249, $r250, $r272, $r275, $r279, $r280, $r281, $r283, $r289, $r291, $r292, $r296, $r299, $r301, $r305, $r309, $r319, $r321, $r324, $r327, $r331, $r332, $r335, $r337, $r340, $r343, $r346, $r351, $r356, $r359, $r368, $r370, $r379, $r390, $r392, $r394, $r421, $r431, $r445, $r448, $r457, $r458, $r462, $r479, $r481, $r489, $r492, $r495, $r498, $r511, $r513, $r525, $r528, $r537, $r549, $r554, $r562, $r563, $r566, $r571, $r578, $r580, $r593, $r596, $r597, $r600, $r608, $r611, $r613, $r618, $r620, $r629, $r643, $r644, $r647, $r648, $r649;
        android.os.Bundle r6;
        android.net.wifi.ScanResult r8, r13;
        android.net.NetworkInfo r10;
        android.net.NetworkInfo$State r11;
        android.net.NetworkInfo$DetailedState r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i27, $i28, $i30, $i31, $i32, $i33, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i82, $i83, $i84, $i85, $i86, $i87, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i133, $i137, $i138, $i139, $i140, $i141, $i142, $i144, $i150, $i152, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, i181;
        android.net.LinkProperties $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r402, $r403, $r404, $r405, $r406, $r410, $r411;
        android.net.wifi.WifiInfo $r46, $r49, $r55, $r108, $r117, $r123, $r126, $r182, $r187, $r216, $r380, $r440, $r442, $r443, $r446, $r449, $r455, $r461, $r469, $r474, $r476, $r488, $r491, $r494, $r497, $r504, $r509, $r510, $r512, $r518, $r523, $r526, $r535, $r540, $r574, $r585, $r590;
        java.lang.Object $r90, $r99, $r131, $r141, $r199, $r222, $r251, $r253, $r294, $r307, $r347, $r357, $r453, $r515, $r533, $r550, $r555, $r606, $r607;
        byte $b26, $b48, $b80, $b89, $b132, $b135, $b145;
        java.util.List $r155, $r197;
        java.lang.Integer $r168, $r387, $r485;
        java.lang.Object[] $r169, $r388, $r470, $r475, $r487, $r503, $r508, $r520, $r575, $r587, $r592;
        android.net.wifi.WifiConfiguration$Visibility $r304, $r322, $r325, $r326, $r336, $r339, $r342, $r345, $r366, $r369;
        com.android.server.wifi.WifiConfigStore $r384, $r619, $r630, $r638;
        java.util.HashMap $r395, $r451;
        java.util.Collection $r452;
        java.lang.Double $r468, $r473, $r500, $r505, $r521, $r573, $r583, $r588;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.android.server.wifi.StateChangeResult r655;
        java.util.Iterator r667;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r5 = $r14;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mScreenOn>;

        if $z0 == 0 goto label01;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

     label01:
        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus>;

        $i2 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_UNKNOWN>;

        if $i1 == $i2 goto label02;

        $r644 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i170 = r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus>;

        $r643 = virtualinvoke $r644.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i170);

        virtualinvoke $r643.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label02:
        $r16 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String smToString(android.os.Message)>(r1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $i4 = r1.<android.os.Message: int sendingUid>;

        if $i4 <= 0 goto label03;

        $i172 = r1.<android.os.Message: int sendingUid>;

        if $i172 == 1010 goto label03;

        $r649 = new java.lang.StringBuilder;

        specialinvoke $r649.<java.lang.StringBuilder: void <init>()>();

        $r648 = virtualinvoke $r649.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" uid=");

        $i171 = r1.<android.os.Message: int sendingUid>;

        $r647 = virtualinvoke $r648.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i171);

        $r646 = virtualinvoke $r647.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r646);

     label03:
        $i3 = r1.<android.os.Message: int what>;

        lookupswitch($i3)
        {
            case 131124: goto label59;
            case 131126: goto label63;
            case 131131: goto label66;
            case 131143: goto label04;
            case 131152: goto label92;
            case 131155: goto label48;
            case 131166: goto label93;
            case 131168: goto label94;
            case 131211: goto label79;
            case 131212: goto label86;
            case 131213: goto label33;
            case 131215: goto label52;
            case 131216: goto label48;
            case 131217: goto label55;
            case 131218: goto label13;
            case 131219: goto label33;
            case 143371: goto label76;
            case 147459: goto label31;
            case 147460: goto label36;
            case 147461: goto label25;
            case 147462: goto label12;
            case 147469: goto label41;
            case 147470: goto label41;
            case 147499: goto label23;
            case 151553: goto label52;
            case 151556: goto label18;
            case 151559: goto label13;
            case 151569: goto label63;
            case 151572: goto label48;
            case 196612: goto label67;
            case 196613: goto label68;
            default: goto label95;
        };

     label04:
        $l143 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l143);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i144 = r1.<android.os.Message: int arg1>;

        $r543 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i144);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r543);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i141 = r1.<android.os.Message: int arg2>;

        $r546 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i141);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r546);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ic=");

        $i142 = <com.android.server.wifi.WifiStateMachine: int sScanAlarmIntentCount>;

        $r517 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i142);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r517);

        $r515 = r1.<android.os.Message: java.lang.Object obj>;

        if $r515 == null goto label05;

        $r555 = r1.<android.os.Message: java.lang.Object obj>;

        r6 = (android.os.Bundle) $r555;

        $l148 = virtualinvoke r6.<android.os.Bundle: long getLong(java.lang.String,long)>("scan_request_time", 0L);

        r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l148);

        $l149 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        $b145 = $l149 cmp 0L;

        if $b145 == 0 goto label05;

        $r554 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" proc(ms):");

        $l147 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        $l146 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        $l151 = $l147 - $l146;

        virtualinvoke $r554.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l151);

     label05:
        $z25 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing>;

        if $z25 == 0 goto label06;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" onGoing");

     label06:
        $z26 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing>;

        if $z26 == 0 goto label07;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" full");

     label07:
        $l136 = r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp>;

        $b135 = $l136 cmp 0L;

        if $b135 == 0 goto label08;

        $r562 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" started:");

        $l154 = r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp>;

        virtualinvoke $r562.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l154);

        $r571 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $l156 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        $l157 = r0.<com.android.server.wifi.WifiStateMachine: long lastStartScanTimeStamp>;

        $l155 = $l156 - $l157;

        virtualinvoke $r571.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l155);

     label08:
        $l134 = r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration>;

        $b132 = $l134 cmp 0L;

        if $b132 == 0 goto label09;

        $r566 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur:");

        $l153 = r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration>;

        virtualinvoke $r566.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l153);

     label09:
        $r511 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $r510 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i131 = virtualinvoke $r510.<android.net.wifi.WifiInfo: int getRssi()>();

        virtualinvoke $r511.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i131);

        $r513 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" f=");

        $r512 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i133 = virtualinvoke $r512.<android.net.wifi.WifiInfo: int getFrequency()>();

        virtualinvoke $r513.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i133);

        $r525 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sc=");

        $r523 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i137 = $r523.<android.net.wifi.WifiInfo: int score>;

        virtualinvoke $r525.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i137);

        $r528 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" link=");

        $r526 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i138 = virtualinvoke $r526.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        virtualinvoke $r528.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i138);

        $r520 = newarray (java.lang.Object)[1];

        $r518 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d4 = $r518.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $r521 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r520[0] = $r521;

        $r522 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" tx=%.1f,", $r520);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r522);

        $r587 = newarray (java.lang.Object)[1];

        $r585 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d6 = $r585.<android.net.wifi.WifiInfo: double txRetriesRate>;

        $r583 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r587[0] = $r583;

        $r584 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.1f,", $r587);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r584);

        $r592 = newarray (java.lang.Object)[1];

        $r590 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d7 = $r590.<android.net.wifi.WifiInfo: double txBadRate>;

        $r588 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r592[0] = $r588;

        $r589 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.1f ", $r592);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r589);

        $r575 = newarray (java.lang.Object)[1];

        $r574 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d5 = $r574.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $r573 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r575[0] = $r573;

        $r572 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" rx=%.1f", $r575);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r572);

        $r581 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String lastScanFreqs>;

        if $r581 == null goto label10;

        $r563 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" list=");

        $r564 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String lastScanFreqs>;

        virtualinvoke $r563.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r564);

        goto label11;

     label10:
        $r580 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fiv=");

        $l158 = r0.<com.android.server.wifi.WifiStateMachine: long fullBandConnectedTimeIntervalMilli>;

        virtualinvoke $r580.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l158);

     label11:
        r4 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String reportOnTime()>();

        if r4 == null goto label96;

        $r578 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r578.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        goto label96;

     label12:
        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i38 = r1.<android.os.Message: int arg1>;

        $r145 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i38);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r145);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i37 = r1.<android.os.Message: int arg2>;

        $r142 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i37);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r142);

        $r143 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        $r139 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r141 = r1.<android.os.Message: java.lang.Object obj>;

        r655 = (com.android.server.wifi.StateChangeResult) $r141;

        if r655 == null goto label96;

        $r140 = virtualinvoke r655.<com.android.server.wifi.StateChangeResult: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r140);

        goto label96;

     label13:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i69 = r1.<android.os.Message: int arg1>;

        $r231 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i69);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r231);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i68 = r1.<android.os.Message: int arg2>;

        $r228 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i68);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r228);

        $r240 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        if $r240 == null goto label96;

        $r239 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r238 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $r237 = virtualinvoke $r238.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r239.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r237);

        $r235 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $r234 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $i75 = $r234.<android.net.wifi.WifiConfiguration: int networkId>;

        virtualinvoke $r235.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i75);

        $r270 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $z15 = $r270.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z15 == 0 goto label14;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hidden");

     label14:
        $r266 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $r267 = $r266.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        if $r267 == null goto label15;

        $r255 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $r254 = $r255.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        $z13 = virtualinvoke $r254.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z13 != 0 goto label15;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasPSK");

     label15:
        $r268 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $z14 = $r268.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        if $z14 == 0 goto label16;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ephemeral");

     label16:
        $r274 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $z16 = $r274.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z16 == 0 goto label17;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selfAdded");

     label17:
        $r275 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cuid=");

        $r276 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $i76 = $r276.<android.net.wifi.WifiConfiguration: int creatorUid>;

        virtualinvoke $r275.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i76);

        $r272 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suid=");

        $r273 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt>;

        $i72 = $r273.<android.net.wifi.WifiConfiguration: int lastUpdateUid>;

        virtualinvoke $r272.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i72);

        goto label96;

     label18:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i13 = r1.<android.os.Message: int arg1>;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i13);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i15 = r1.<android.os.Message: int arg2>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r58 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        if $r58 == null goto label96;

        $r57 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r60 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $r59 = virtualinvoke $r60.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        $r67 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $r69 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $i16 = $r69.<android.net.wifi.WifiConfiguration: int networkId>;

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r64 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $z7 = $r64.<android.net.wifi.WifiConfiguration: boolean hiddenSSID>;

        if $z7 == 0 goto label19;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hidden");

     label19:
        $r66 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $r73 = $r66.<android.net.wifi.WifiConfiguration: java.lang.String preSharedKey>;

        if $r73 == null goto label20;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasPSK");

     label20:
        $r74 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $z9 = $r74.<android.net.wifi.WifiConfiguration: boolean ephemeral>;

        if $z9 == 0 goto label21;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ephemeral");

     label21:
        $r72 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $z8 = $r72.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z8 == 0 goto label22;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selfAdded");

     label22:
        $r71 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cuid=");

        $r70 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $i17 = $r70.<android.net.wifi.WifiConfiguration: int creatorUid>;

        virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r80 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suid=");

        $r78 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $i19 = $r78.<android.net.wifi.WifiConfiguration: int lastUpdateUid>;

        virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r77 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ajst=");

        $r75 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt>;

        $i18 = $r75.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        goto label96;

     label23:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i20 = r1.<android.os.Message: int arg1>;

        $r81 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i20);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i21 = r1.<android.os.Message: int arg2>;

        $r92 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        $r90 = r1.<android.os.Message: java.lang.Object obj>;

        r656 = (java.lang.String) $r90;

        if r656 == null goto label24;

        $i22 = virtualinvoke r656.<java.lang.String: int length()>();

        if $i22 <= 0 goto label24;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r656);

     label24:
        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" blacklist=");

        $z10 = r0.<com.android.server.wifi.WifiStateMachine: boolean didBlackListBSSID>;

        $r100 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z10);

        $r102 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r100);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r101);

        l174 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r105 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l174);

        goto label96;

     label25:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i42 = r1.<android.os.Message: int arg1>;

        $r162 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i42);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r162);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i41 = r1.<android.os.Message: int arg2>;

        $r159 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i41);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        $r155 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults>;

        if $r155 == null goto label26;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found=");

        $r197 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults>;

        $i63 = interfaceinvoke $r197.<java.util.List: int size()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i63);

     label26:
        $r156 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" known=");

        $i40 = r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsKnown>;

        virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r152 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got=");

        $i39 = r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsReturned>;

        virtualinvoke $r152.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $l49 = r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration>;

        $b48 = $l49 cmp 0L;

        if $b48 == 0 goto label27;

        $r194 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dur:");

        $l62 = r0.<com.android.server.wifi.WifiStateMachine: long lastScanDuration>;

        virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l62);

     label27:
        $i47 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        if $i47 == 0 goto label28;

        $r170 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on:");

        $i50 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeThisScan>;

        $r191 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r192 = virtualinvoke $r191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i60 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScan>;

        virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i60);

        $r195 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i61 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i61);

     label28:
        $i46 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTime>;

        if $i46 == 0 goto label29;

        $r177 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tx:");

        $i53 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeThisScan>;

        $r175 = virtualinvoke $r177.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r174 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i52 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTimeScan>;

        virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i52);

        $r173 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i51 = r0.<com.android.server.wifi.WifiStateMachine: int mTxTime>;

        virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i51);

     label29:
        $i45 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTime>;

        if $i45 == 0 goto label30;

        $r165 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rx:");

        $i43 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeThisScan>;

        $r164 = virtualinvoke $r165.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i43);

        $r163 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i55 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTimeScan>;

        virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i55);

        $r178 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i54 = r0.<com.android.server.wifi.WifiStateMachine: int mRxTime>;

        virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i54);

     label30:
        $r169 = newarray (java.lang.Object)[1];

        $i44 = r0.<com.android.server.wifi.WifiStateMachine: int mRunningBeaconCount>;

        $r168 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i44);

        $r169[0] = $r168;

        $r167 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" bcn=%d", $r169);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r167);

        goto label96;

     label31:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i67 = r1.<android.os.Message: int arg1>;

        $r226 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i67);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r226);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i64 = r1.<android.os.Message: int arg2>;

        $r204 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i64);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r204);

        $r206 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r205 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r205);

        $r207 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $i65 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i65);

        r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r2 == null goto label32;

        $r213 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r212 = virtualinvoke r2.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r212);

     label32:
        l175 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r211 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l175);

        goto label96;

     label33:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i102 = r1.<android.os.Message: int arg1>;

        $r365 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i102);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r365);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i101 = r1.<android.os.Message: int arg2>;

        $r362 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i101);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r362);

        $r357 = r1.<android.os.Message: java.lang.Object obj>;

        if $r357 == null goto label34;

        $r346 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" BSSID=");

        $r347 = r1.<android.os.Message: java.lang.Object obj>;

        $r348 = (java.lang.String) $r347;

        virtualinvoke $r346.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r348);

     label34:
        $r358 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if $r358 == null goto label35;

        $r351 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Target=");

        $r352 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        virtualinvoke $r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r352);

     label35:
        $r359 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" roam=");

        $i100 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        $r354 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i100);

        virtualinvoke $r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r354);

        l176 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r356 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r356.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l176);

        goto label96;

     label36:
        $r199 = r1.<android.os.Message: java.lang.Object obj>;

        if $r199 == null goto label37;

        $r221 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r222 = r1.<android.os.Message: java.lang.Object obj>;

        $r223 = (java.lang.String) $r222;

        virtualinvoke $r221.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r223);

     label37:
        $r200 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $i57 = r1.<android.os.Message: int arg1>;

        virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i57);

        $r180 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        $i56 = r1.<android.os.Message: int arg2>;

        virtualinvoke $r180.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i56);

        $r183 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        if $r183 == null goto label38;

        $r218 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastbssid=");

        $r219 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r219);

     label38:
        $r182 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i58 = virtualinvoke $r182.<android.net.wifi.WifiInfo: int getFrequency()>();

        if $i58 == -1 goto label39;

        $r188 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $r187 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i59 = virtualinvoke $r187.<android.net.wifi.WifiInfo: int getFrequency()>();

        virtualinvoke $r188.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        $r215 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $r216 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i66 = virtualinvoke $r216.<android.net.wifi.WifiInfo: int getRssi()>();

        virtualinvoke $r215.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i66);

     label39:
        $z12 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        if $z12 == 0 goto label40;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debounce");

     label40:
        l177 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r186 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l177);

        goto label96;

     label41:
        $r96 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $i23 = r1.<android.os.Message: int arg1>;

        virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r99 = r1.<android.os.Message: java.lang.Object obj>;

        if $r99 == null goto label42;

        $r130 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r131 = r1.<android.os.Message: java.lang.Object obj>;

        $r149 = (java.lang.String) $r131;

        virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

     label42:
        r657 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r657 == null goto label47;

        $r111 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cur=");

        $r112 = virtualinvoke r657.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r112);

        $r114 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ajst=");

        $i28 = r657.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i28);

        $z11 = r657.<android.net.wifi.WifiConfiguration: boolean selfAdded>;

        if $z11 == 0 goto label43;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" selfAdded");

     label43:
        $i24 = r657.<android.net.wifi.WifiConfiguration: int status>;

        if $i24 == 0 goto label44;

        $r136 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" st=");

        $i33 = r657.<android.net.wifi.WifiConfiguration: int status>;

        virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r128 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rs=");

        $i32 = r657.<android.net.wifi.WifiConfiguration: int disableReason>;

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i32);

     label44:
        $l25 = r657.<android.net.wifi.WifiConfiguration: long lastConnected>;

        $b26 = $l25 cmp 0L;

        if $b26 == 0 goto label45;

        $l29 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r658 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l29);

        $r134 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastconn=");

        $l34 = virtualinvoke r658.<java.lang.Long: long longValue()>();

        $l35 = r657.<android.net.wifi.WifiConfiguration: long lastConnected>;

        $l36 = $l34 - $l35;

        $r137 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l36);

        virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ms)");

     label45:
        $r107 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        if $r107 == null goto label46;

        $r121 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastbssid=");

        $r120 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

     label46:
        $r108 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i27 = virtualinvoke $r108.<android.net.wifi.WifiInfo: int getFrequency()>();

        if $i27 == -1 goto label47;

        $r124 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $r123 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i30 = virtualinvoke $r123.<android.net.wifi.WifiInfo: int getFrequency()>();

        virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i30);

        $r127 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $r126 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i31 = virtualinvoke $r126.<android.net.wifi.WifiInfo: int getRssi()>();

        virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r118 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bssid=");

        $r117 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r116 = virtualinvoke $r117.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

     label47:
        l178 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r109 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l178);

        goto label96;

     label48:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i118 = r1.<android.os.Message: int arg1>;

        $r434 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i118);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r434);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i119 = r1.<android.os.Message: int arg2>;

        $r437 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i119);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r437);

        $r442 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r441 = virtualinvoke $r442.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        if $r441 == null goto label49;

        $r535 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r538 = virtualinvoke $r535.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        if $r538 == null goto label49;

        $r537 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r540 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r539 = virtualinvoke $r540.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        virtualinvoke $r537.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r539);

     label49:
        $r440 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r439 = virtualinvoke $r440.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if $r439 == null goto label50;

        $r479 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r476 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r477 = virtualinvoke $r476.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        virtualinvoke $r479.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r477);

     label50:
        $r498 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $r497 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i130 = virtualinvoke $r497.<android.net.wifi.WifiInfo: int getRssi()>();

        virtualinvoke $r498.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i130);

        $r495 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" f=");

        $r494 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i129 = virtualinvoke $r494.<android.net.wifi.WifiInfo: int getFrequency()>();

        virtualinvoke $r495.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i129);

        $r492 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sc=");

        $r491 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i128 = $r491.<android.net.wifi.WifiInfo: int score>;

        virtualinvoke $r492.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i128);

        $r489 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" link=");

        $r488 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i127 = virtualinvoke $r488.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        virtualinvoke $r489.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i127);

        $r508 = newarray (java.lang.Object)[1];

        $r509 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d3 = $r509.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $r505 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r508[0] = $r505;

        $r506 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" tx=%.1f,", $r508);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r506);

        $r503 = newarray (java.lang.Object)[1];

        $r504 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d2 = $r504.<android.net.wifi.WifiInfo: double txRetriesRate>;

        $r500 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r503[0] = $r500;

        $r501 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.1f,", $r503);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r501);

        $r475 = newarray (java.lang.Object)[1];

        $r474 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d1 = $r474.<android.net.wifi.WifiInfo: double txBadRate>;

        $r473 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r475[0] = $r473;

        $r472 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" %.1f ", $r475);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r472);

        $r470 = newarray (java.lang.Object)[1];

        $r469 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d0 = $r469.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $r468 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r470[0] = $r468;

        $r467 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" rx=%.1f", $r470);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r467);

        $r487 = newarray (java.lang.Object)[1];

        $i126 = r0.<com.android.server.wifi.WifiStateMachine: int mRunningBeaconCount>;

        $r485 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i126);

        $r487[0] = $r485;

        $r486 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" bcn=%d", $r487);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r486);

        r659 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String reportOnTime()>();

        if r659 == null goto label51;

        $r481 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r481.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r659);

     label51:
        $r482 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String wifiScoringReport>;

        if $r482 == null goto label96;

        $r483 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String wifiScoringReport>;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r483);

        goto label96;

     label52:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i86 = r1.<android.os.Message: int arg1>;

        $r314 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i86);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r314);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i87 = r1.<android.os.Message: int arg2>;

        $r317 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i87);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r317);

        $r307 = r1.<android.os.Message: java.lang.Object obj>;

        r660 = (android.net.wifi.WifiConfiguration) $r307;

        if r660 == null goto label53;

        $r331 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r328 = virtualinvoke r660.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r331.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r328);

        $r326 = r660.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        if $r326 == null goto label53;

        $r327 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r325 = r660.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i95 = $r325.<android.net.wifi.WifiConfiguration$Visibility: int num24>;

        virtualinvoke $r327.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i95);

        $r324 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $r322 = r660.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i94 = $r322.<android.net.wifi.WifiConfiguration$Visibility: int rssi24>;

        virtualinvoke $r324.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i94);

        $r321 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;");

        $r369 = r660.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i104 = $r369.<android.net.wifi.WifiConfiguration$Visibility: int num5>;

        virtualinvoke $r321.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i104);

        $r370 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $r366 = r660.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i103 = $r366.<android.net.wifi.WifiConfiguration$Visibility: int rssi5>;

        $r368 = virtualinvoke $r370.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i103);

        virtualinvoke $r368.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

     label53:
        $r308 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if $r308 == null goto label54;

        $r332 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r333 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        virtualinvoke $r332.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r333);

     label54:
        $r309 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" roam=");

        $i85 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        $r310 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i85);

        virtualinvoke $r309.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r310);

        l179 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r299 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r299.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l179);

        r661 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r661 == null goto label96;

        $r301 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r302 = virtualinvoke r661.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r301.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r302);

        $r304 = r661.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        if $r304 == null goto label96;

        $r305 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r345 = r661.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i99 = $r345.<android.net.wifi.WifiConfiguration$Visibility: int num24>;

        virtualinvoke $r305.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i99);

        $r343 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $r342 = r661.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i98 = $r342.<android.net.wifi.WifiConfiguration$Visibility: int rssi24>;

        virtualinvoke $r343.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i98);

        $r340 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ;");

        $r339 = r661.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i97 = $r339.<android.net.wifi.WifiConfiguration$Visibility: int num5>;

        virtualinvoke $r340.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i97);

        $r337 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ,");

        $r336 = r661.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i96 = $r336.<android.net.wifi.WifiConfiguration$Visibility: int rssi5>;

        $r335 = virtualinvoke $r337.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i96);

        virtualinvoke $r335.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        goto label96;

     label55:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i74 = r1.<android.os.Message: int arg1>;

        $r265 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i74);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r265);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i73 = r1.<android.os.Message: int arg2>;

        $r262 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i73);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r262);

        $r294 = r1.<android.os.Message: java.lang.Object obj>;

        r8 = (android.net.wifi.ScanResult) $r294;

        if r8 == null goto label57;

        $l81 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r662 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l81);

        $r281 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bssid=");

        $r284 = r8.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        virtualinvoke $r281.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r284);

        $r283 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rssi=");

        $i82 = r8.<android.net.wifi.ScanResult: int level>;

        virtualinvoke $r283.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i82);

        $r279 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" freq=");

        $i77 = r8.<android.net.wifi.ScanResult: int frequency>;

        virtualinvoke $r279.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i77);

        $l79 = r8.<android.net.wifi.ScanResult: long seen>;

        $b80 = $l79 cmp 0L;

        if $b80 <= 0 goto label56;

        $l88 = r8.<android.net.wifi.ScanResult: long seen>;

        $l90 = virtualinvoke r662.<java.lang.Long: long longValue()>();

        $b89 = $l88 cmp $l90;

        if $b89 >= 0 goto label56;

        $r319 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" seen=");

        $l91 = virtualinvoke r662.<java.lang.Long: long longValue()>();

        $l93 = r8.<android.net.wifi.ScanResult: long seen>;

        $l92 = $l91 - $l93;

        virtualinvoke $r319.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l92);

        goto label57;

     label56:
        $r280 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" !seen=");

        $l78 = r8.<android.net.wifi.ScanResult: long seen>;

        virtualinvoke $r280.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l78);

     label57:
        $r293 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        if $r293 == null goto label58;

        $r289 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r288 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        virtualinvoke $r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r288);

     label58:
        $r292 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" roam=");

        $i84 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        $r298 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i84);

        virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r298);

        $r296 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fail count=");

        $i83 = r0.<com.android.server.wifi.WifiStateMachine: int mRoamFailCount>;

        $r287 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i83);

        virtualinvoke $r296.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r287);

        l180 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r291 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r291.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l180);

        goto label96;

     label59:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i165 = r1.<android.os.Message: int arg1>;

        $r623 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i165);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r623);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i166 = r1.<android.os.Message: int arg2>;

        $r626 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i166);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r626);

        $r606 = r1.<android.os.Message: java.lang.Object obj>;

        if $r606 == null goto label96;

        $r607 = r1.<android.os.Message: java.lang.Object obj>;

        r663 = (android.net.wifi.WifiConfiguration) $r607;

        $r608 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r609 = virtualinvoke r663.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r608.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r609);

        $r611 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prio=");

        $i162 = r663.<android.net.wifi.WifiConfiguration: int priority>;

        virtualinvoke $r611.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i162);

        $r613 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $i163 = r663.<android.net.wifi.WifiConfiguration: int status>;

        virtualinvoke $r613.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i163);

        $r615 = r663.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        if $r615 == null goto label60;

        $r600 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r603 = r663.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        virtualinvoke $r600.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r603);

     label60:
        r9 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r9 == null goto label62;

        $r616 = virtualinvoke r9.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r617 = virtualinvoke r663.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z27 = virtualinvoke $r616.<java.lang.String: boolean equals(java.lang.Object)>($r617);

        if $z27 == 0 goto label61;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is current");

        goto label62;

     label61:
        $r593 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current=");

        $r595 = virtualinvoke r9.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        virtualinvoke $r593.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r595);

        $r596 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" prio=");

        $i159 = r9.<android.net.wifi.WifiConfiguration: int priority>;

        virtualinvoke $r596.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i159);

        $r597 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status=");

        $i160 = r9.<android.net.wifi.WifiConfiguration: int status>;

        virtualinvoke $r597.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i160);

     label62:
        goto label96;

     label63:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i167 = r1.<android.os.Message: int arg1>;

        $r636 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i167);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r636);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i169 = r1.<android.os.Message: int arg2>;

        $r639 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i169);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r639);

        $r638 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        r664 = virtualinvoke $r638.<com.android.server.wifi.WifiConfigStore: java.lang.String getLastSelectedConfiguration()>();

        if r664 == null goto label64;

        $r620 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" last=");

        virtualinvoke $r620.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r664);

     label64:
        $r619 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i164 = r1.<android.os.Message: int arg1>;

        r665 = virtualinvoke $r619.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i164);

        if r665 == null goto label96;

        if r664 == null goto label65;

        $r621 = virtualinvoke r665.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $z28 = virtualinvoke $r621.<java.lang.String: boolean equals(java.lang.Object)>(r664);

        if $z28 != 0 goto label96;

     label65:
        $r618 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" target=");

        virtualinvoke $r618.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r664);

        goto label96;

     label66:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i152 = r1.<android.os.Message: int arg1>;

        $r557 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i152);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r557);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i150 = r1.<android.os.Message: int arg2>;

        $r631 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i150);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r631);

        $r629 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num=");

        $r630 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i168 = virtualinvoke $r630.<com.android.server.wifi.WifiConfigStore: int getConfiguredNetworksSize()>();

        virtualinvoke $r629.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i168);

        goto label96;

     label67:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i9 = r1.<android.os.Message: int arg1>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i9);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i10 = r1.<android.os.Message: int arg2>;

        $r43 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i10);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r48 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txpkts=");

        $r49 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l12 = $r49.<android.net.wifi.WifiInfo: long txSuccess>;

        virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);

        $r45 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r46 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l11 = $r46.<android.net.wifi.WifiInfo: long txBad>;

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r54 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r55 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l14 = $r55.<android.net.wifi.WifiInfo: long txRetries>;

        virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);

        goto label96;

     label68:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = r1.<android.os.Message: int arg1>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i6 = r1.<android.os.Message: int arg2>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $i7 = r1.<android.os.Message: int arg1>;

        if $i7 != 1 goto label69;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OK ");

        goto label70;

     label69:
        $i8 = r1.<android.os.Message: int arg1>;

        if $i8 != 2 goto label70;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FAIL ");

     label70:
        $r23 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        if $r23 == null goto label96;

        $r26 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z2 = virtualinvoke $r26.<android.net.LinkProperties: boolean hasIPv4Address()>();

        if $z2 == 0 goto label71;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4");

     label71:
        $r25 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z1 = virtualinvoke $r25.<android.net.LinkProperties: boolean hasGlobalIPv6Address()>();

        if $z1 == 0 goto label72;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6");

     label72:
        $r28 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z4 = virtualinvoke $r28.<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>();

        if $z4 == 0 goto label73;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4r");

     label73:
        $r27 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z3 = virtualinvoke $r27.<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>();

        if $z3 == 0 goto label74;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6r");

     label74:
        $r30 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z6 = virtualinvoke $r30.<android.net.LinkProperties: boolean hasIPv4DnsServer()>();

        if $z6 == 0 goto label75;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4dns");

     label75:
        $r29 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z5 = virtualinvoke $r29.<android.net.LinkProperties: boolean hasIPv6DnsServer()>();

        if $z5 == 0 goto label96;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6dns");

        goto label96;

     label76:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i71 = r1.<android.os.Message: int arg1>;

        $r245 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i71);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r245);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i70 = r1.<android.os.Message: int arg2>;

        $r242 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i70);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r242);

        $r253 = r1.<android.os.Message: java.lang.Object obj>;

        if $r253 == null goto label96;

        $r251 = r1.<android.os.Message: java.lang.Object obj>;

        r10 = (android.net.NetworkInfo) $r251;

        r11 = virtualinvoke r10.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        r12 = virtualinvoke r10.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        if r11 == null goto label77;

        $r249 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" st=");

        virtualinvoke $r249.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

     label77:
        if r12 == null goto label78;

        $r250 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r250.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

     label78:
        goto label96;

     label79:
        i181 = -1;

        r666 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r666 == null goto label80;

        i181 = r666.<android.net.wifi.WifiConfiguration: int numIpConfigFailures>;

     label80:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i112 = r1.<android.os.Message: int arg1>;

        $r414 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i112);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r414);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i105 = r1.<android.os.Message: int arg2>;

        $r376 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i105);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r376);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failures: ");

        $r375 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i181);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r375);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r384 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i106 = virtualinvoke $r384.<com.android.server.wifi.WifiConfigStore: int getMaxDhcpRetries()>();

        $r382 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i106);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r382);

        $r380 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r381 = virtualinvoke $r380.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if $r381 == null goto label81;

        $r462 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r461 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r464 = virtualinvoke $r461.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        virtualinvoke $r462.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r464);

     label81:
        if r666 == null goto label85;

        $r395 = r666.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r395 == null goto label84;

        $r451 = r666.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r452 = virtualinvoke $r451.<java.util.HashMap: java.util.Collection values()>();

        r667 = interfaceinvoke $r452.<java.util.Collection: java.util.Iterator iterator()>();

     label82:
        $z23 = interfaceinvoke r667.<java.util.Iterator: boolean hasNext()>();

        if $z23 == 0 goto label84;

        $r453 = interfaceinvoke r667.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.net.wifi.ScanResult) $r453;

        $r454 = r13.<android.net.wifi.ScanResult: java.lang.String BSSID>;

        $r455 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r456 = virtualinvoke $r455.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        $z24 = virtualinvoke $r454.<java.lang.String: boolean equals(java.lang.Object)>($r456);

        if $z24 == 0 goto label83;

        $r457 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ipfail=");

        $i123 = r13.<android.net.wifi.ScanResult: int numIpConfigFailures>;

        virtualinvoke $r457.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i123);

        $r458 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",st=");

        $i124 = r13.<android.net.wifi.ScanResult: int autoJoinStatus>;

        virtualinvoke $r458.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i124);

     label83:
        goto label82;

     label84:
        $r394 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ajst=");

        $i109 = r666.<android.net.wifi.WifiConfiguration: int autoJoinStatus>;

        virtualinvoke $r394.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i109);

        $r392 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i108 = r666.<android.net.wifi.WifiConfiguration: int disableReason>;

        virtualinvoke $r392.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i108);

        $r390 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txpkts=");

        $r443 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l120 = $r443.<android.net.wifi.WifiInfo: long txSuccess>;

        virtualinvoke $r390.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l120);

        $r445 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r446 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l121 = $r446.<android.net.wifi.WifiInfo: long txBad>;

        virtualinvoke $r445.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l121);

        $r448 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r449 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $l122 = $r449.<android.net.wifi.WifiInfo: long txRetries>;

        virtualinvoke $r448.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l122);

     label85:
        l182 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r379 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rt=");

        virtualinvoke $r379.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l182);

        $r388 = newarray (java.lang.Object)[1];

        $i107 = r0.<com.android.server.wifi.WifiStateMachine: int mRunningBeaconCount>;

        $r387 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i107);

        $r388[0] = $r387;

        $r386 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" bcn=%d", $r388);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r386);

        goto label96;

     label86:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i111 = r1.<android.os.Message: int arg1>;

        $r400 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i111);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r400);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i110 = r1.<android.os.Message: int arg2>;

        $r397 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i110);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r397);

        $r404 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        if $r404 == null goto label96;

        $r405 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z19 = virtualinvoke $r405.<android.net.LinkProperties: boolean hasIPv4Address()>();

        if $z19 == 0 goto label87;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4");

     label87:
        $r406 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z17 = virtualinvoke $r406.<android.net.LinkProperties: boolean hasGlobalIPv6Address()>();

        if $z17 == 0 goto label88;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6");

     label88:
        $r402 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z18 = virtualinvoke $r402.<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>();

        if $z18 == 0 goto label89;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4r");

     label89:
        $r403 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z21 = virtualinvoke $r403.<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>();

        if $z21 == 0 goto label90;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6r");

     label90:
        $r410 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z22 = virtualinvoke $r410.<android.net.LinkProperties: boolean hasIPv4DnsServer()>();

        if $z22 == 0 goto label91;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4dns");

     label91:
        $r411 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z20 = virtualinvoke $r411.<android.net.LinkProperties: boolean hasIPv6DnsServer()>();

        if $z20 == 0 goto label96;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6dns");

        goto label96;

     label92:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i139 = r1.<android.os.Message: int arg1>;

        $r529 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i139);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r529);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i140 = r1.<android.os.Message: int arg2>;

        $r532 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i140);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r532);

        $r533 = r1.<android.os.Message: java.lang.Object obj>;

        if $r533 == null goto label96;

        $r549 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r550 = r1.<android.os.Message: java.lang.Object obj>;

        $r551 = (java.lang.String) $r550;

        virtualinvoke $r549.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r551);

        goto label96;

     label93:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i115 = r1.<android.os.Message: int arg1>;

        $r424 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i115);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r424);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i116 = r1.<android.os.Message: int arg2>;

        $r427 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i116);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r427);

        $r431 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cur=");

        $i117 = r0.<com.android.server.wifi.WifiStateMachine: int roamWatchdogCount>;

        virtualinvoke $r431.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i117);

        goto label96;

     label94:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i125 = r1.<android.os.Message: int arg1>;

        $r419 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i125);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r419);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i113 = r1.<android.os.Message: int arg2>;

        $r422 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i113);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r422);

        $r421 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cur=");

        $i114 = r0.<com.android.server.wifi.WifiStateMachine: int disconnectingWatchdogCount>;

        virtualinvoke $r421.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i114);

        goto label96;

     label95:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i161 = r1.<android.os.Message: int arg1>;

        $r654 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i161);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r654);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i173 = r1.<android.os.Message: int arg2>;

        $r651 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i173);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r651);

     label96:
        $r24 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r24;
    }

    private void handleScreenStateChanged(boolean, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.concurrent.atomic.AtomicBoolean $r1, $r2, $r29;
        int $i0, $i3, $i4, $i6;
        long $l1, $l2, $l5, $l7, $l8;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r14, $r22, $r23, $r26, $r27, $r28, $r30, $r31, $r32, $r35, $r36, $r39;
        java.lang.String $r7, $r13, $r25, $r33, $r37, $r40;
        com.android.server.wifi.WifiNative $r9;
        com.android.server.wifi.WifiConfigStore $r15, $r20, $r21;
        com.android.internal.util.State $r16, $r19;
        com.android.internal.util.IState $r17, $r18, $r34;
        android.os.PowerManager$WakeLock $r24;
        com.android.server.wifi.SupplicantStateTracker $r38;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mScreenOn> = z0;

        $z2 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z2 == 0 goto label01;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" handleScreenStateChanged Enter: screenOn=");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurrentScanAlarmMs = ");

        $l8 = r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs>;

        $r25 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l8);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mUserWantsSuspendOpt=");

        $r29 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r35 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state ");

        $r34 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r33 = interfaceinvoke $r34.<com.android.internal.util.IState: java.lang.String getName()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" suppState:");

        $r38 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker>;

        $r37 = virtualinvoke $r38.<com.android.server.wifi.SupplicantStateTracker: java.lang.String getSupplicantStateName()>();

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r40);

     label01:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void enableRssiPolling(boolean)>(z0);

        if z0 == 0 goto label02;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void enableAllNetworks()>();

     label02:
        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $z3 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 == 0 goto label04;

        if z0 == 0 goto label03;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131158, 0, 0);

        goto label04;

     label03:
        $r24 = r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mSuspendWakeLock>;

        virtualinvoke $r24.<android.os.PowerManager$WakeLock: void acquire(long)>(2000L);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int)>(131158, 1, 0);

     label04:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mScreenBroadcastReceived>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiLinkLayerStats getWifiLinkLayerStats(boolean)>(0);

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mOnTime>;

        r0.<com.android.server.wifi.WifiStateMachine: int mOnTimeScreenStateChange> = $i0;

        $l1 = r0.<com.android.server.wifi.WifiStateMachine: long lastLinkLayerStatsUpdate>;

        r0.<com.android.server.wifi.WifiStateMachine: long lastScreenStateChangeTimeStamp> = $l1;

        if z0 == 0 goto label06;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void clearBlacklist()>();

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i3 = $r15.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli>;

        $l2 = (long) $i3;

        r0.<com.android.server.wifi.WifiStateMachine: long fullBandConnectedTimeIntervalMilli> = $l2;

        $r17 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r16 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState>;

        if $r17 != $r16 goto label05;

        $r21 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z10 = $r21.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinScanWhenAssociated>;

        if $z10 == 0 goto label05;

        $r20 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i6 = $r20.<com.android.server.wifi.WifiConfigStore: int associatedPartialScanPeriodMilli>;

        $l7 = (long) $i6;

        r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs> = $l7;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setScanAlarm(boolean,int)>(1, 200);

        goto label07;

     label05:
        $r18 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r19 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectedState>;

        if $r18 != $r19 goto label07;

        $i4 = r0.<com.android.server.wifi.WifiStateMachine: int mDisconnectedScanPeriodMs>;

        $l5 = (long) $i4;

        r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs> = $l5;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setScanAlarm(boolean,int)>(1, 200);

        goto label07;

     label06:
        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setScanAlarm(boolean,int)>(0, 0);

     label07:
        $z4 = r0.<com.android.server.wifi.WifiStateMachine: boolean mBackgroundScanSupported>;

        if $z4 == 0 goto label10;

        if z0 != 0 goto label08;

        $z9 = 1;

        goto label09;

     label08:
        $z9 = 0;

     label09:
        r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan> = $z9;

     label10:
        $z5 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z5 == 0 goto label11;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("backgroundScan enabled=");

        $z8 = r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" startBackgroundScanIfNeeded:");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>($r13);

     label11:
        if z1 == 0 goto label12;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $z7 = r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan>;

        virtualinvoke $r9.<com.android.server.wifi.WifiNative: void enableBackgroundScan(boolean)>($z7);

     label12:
        $z6 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z6 == 0 goto label13;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleScreenStateChanged Exit: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r7);

     label13:
        return;
    }

    private void checkAndSetConnectivityInstance()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.ConnectivityManager $r1, $r4;
        android.content.Context $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        if $r1 != null goto label1;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r4 = (android.net.ConnectivityManager) $r3;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm> = $r4;

     label1:
        return;
    }

    private boolean startTethering(java.util.ArrayList)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.ArrayList r1;
        java.lang.String[] r2, r5;
        java.util.Iterator r3;
        java.lang.String r4, r6, $r14, $r23;
        int i0, i1, $i2;
        java.lang.Exception r7, $r18;
        android.net.ConnectivityManager $r8, $r11;
        boolean $z0, $z1;
        java.lang.Object $r9;
        android.os.INetworkManagementService $r10, $r19;
        java.lang.StringBuilder $r12, $r13, $r15, $r20, $r21, $r22, $r24, $r25;
        java.net.InetAddress $r16;
        android.net.LinkAddress $r17;
        android.net.InterfaceConfiguration r26;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void checkAndSetConnectivityInstance()>();

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        r2 = virtualinvoke $r8.<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>();

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label10;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r9;

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label02:
        if i1 >= i0 goto label09;

        r6 = r5[i1];

        $z1 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>(r6);

        if $z1 == 0 goto label08;

     label03:
        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        r26 = interfaceinvoke $r10.<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>(r4);

        if r26 == null goto label04;

        $r17 = new android.net.LinkAddress;

        $r16 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>("192.168.43.1");

        specialinvoke $r17.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r16, 24);

        virtualinvoke r26.<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>($r17);

        virtualinvoke r26.<android.net.InterfaceConfiguration: void setInterfaceUp()>();

        $r19 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        interfaceinvoke $r19.<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r4, r26);

     label04:
        goto label06;

     label05:
        $r18 := @caughtexception;

        r7 = $r18;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error configuring interface ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", :");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r23);

        return 0;

     label06:
        $r11 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        $i2 = virtualinvoke $r11.<android.net.ConnectivityManager: int tether(java.lang.String)>(r4);

        if $i2 == 0 goto label07;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error tethering on ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r14);

        return 0;

     label07:
        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTetherInterfaceName> = r4;

        return 1;

     label08:
        i1 = i1 + 1;

        goto label02;

     label09:
        goto label01;

     label10:
        return 0;

        catch java.lang.Exception from label03 to label04 with label05;
    }

    private void stopTethering()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.Exception r1, $r10;
        java.lang.String $r2, $r4, $r8, $r14, $r17;
        android.os.INetworkManagementService $r3, $r9;
        android.net.ConnectivityManager $r5;
        int $i0;
        android.net.LinkAddress $r6;
        java.net.InetAddress $r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16;
        android.net.InterfaceConfiguration r18;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void checkAndSetConnectivityInstance()>();

     label1:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTetherInterfaceName>;

        r18 = interfaceinvoke $r3.<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>($r2);

        if r18 == null goto label2;

        $r6 = new android.net.LinkAddress;

        $r7 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>("0.0.0.0");

        specialinvoke $r6.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>($r7, 0);

        virtualinvoke r18.<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>($r6);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTetherInterfaceName>;

        interfaceinvoke $r9.<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>($r8, r18);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r1 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resetting interface ");

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTetherInterfaceName>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", :");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r17);

     label4:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTetherInterfaceName>;

        $i0 = virtualinvoke $r5.<android.net.ConnectivityManager: int untether(java.lang.String)>($r4);

        if $i0 == 0 goto label5;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Untether initiate failed!");

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean isWifiTethered(java.util.ArrayList)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.ArrayList r1;
        java.lang.String[] r2, r5;
        java.util.Iterator r3;
        java.lang.String r4, r6;
        int i0, i1;
        android.net.ConnectivityManager $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.util.ArrayList;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void checkAndSetConnectivityInstance()>();

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        r2 = virtualinvoke $r7.<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>();

        r3 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r6 = r5[i1];

        $z1 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>(r6);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        return 0;
    }

    private void setCountryCode()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "wifi_country_code");

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setCountryCode(java.lang.String,boolean)>(r1, 0);

     label1:
        return;
    }

    private void setFrequencyBand()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r2, "wifi_frequency_band", 0);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void setFrequencyBand(int,boolean)>(i0, 0);

        return;
    }

    private void setSuspendOptimizationsNative(int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, $z1, $z3, $z4, $z6;
        com.android.server.wifi.WifiNative $r1, $r3;
        java.util.concurrent.atomic.AtomicBoolean $r2, $r40;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r10, $r13, $r16, $r19, $r22, $r24, $r29, $r32, $r34, $r35, $r36, $r37, $r38, $r39, $r41, $r45, $r47, $r48, $r50, $r57, $r61, $r63, $r64;
        java.lang.Thread $r9, $r15, $r20, $r30, $r44, $r46, $r51, $r65;
        java.lang.StackTraceElement $r11, $r17, $r26, $r28, $r42, $r53, $r55, $r59;
        java.lang.StackTraceElement[] $r12, $r18, $r25, $r27, $r43, $r52, $r54, $r58;
        java.lang.String $r14, $r21, $r23, $r31, $r33, $r49, $r56, $r60, $r62, $r66;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z1 == 0 goto label1;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSuspendOptimizationsNative: ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -want ");

        $r40 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $z6 = virtualinvoke $r40.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        $r39 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r45 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack:");

        $r44 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r43 = virtualinvoke $r44.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r42 = $r43[2];

        $r49 = virtualinvoke $r42.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r48 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r46 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r54 = virtualinvoke $r46.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r55 = $r54[3];

        $r56 = virtualinvoke $r55.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r57 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r50 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r51 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r52 = virtualinvoke $r51.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r53 = $r52[4];

        $r62 = virtualinvoke $r53.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r63 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r65 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r58 = virtualinvoke $r65.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r59 = $r58[5];

        $r60 = virtualinvoke $r59.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r61 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r66 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r66);

     label1:
        if z0 == 0 goto label3;

        $i4 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $i3 = i0 ^ -1;

        $i5 = $i4 & $i3;

        r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled> = $i5;

        $i6 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        if $i6 != 0 goto label4;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        $z3 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        if $z3 == 0 goto label4;

        $z4 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z4 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSuspendOptimizationsNative do it ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stack:");

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r12 = virtualinvoke $r9.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r11 = $r12[2];

        $r14 = virtualinvoke $r11.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r18 = virtualinvoke $r15.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r17 = $r18[3];

        $r21 = virtualinvoke $r17.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r25 = virtualinvoke $r20.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r26 = $r25[4];

        $r23 = virtualinvoke $r26.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r30 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r27 = virtualinvoke $r30.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r28 = $r27[5];

        $r33 = virtualinvoke $r28.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r31);

     label2:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r3.<com.android.server.wifi.WifiNative: boolean setSuspendOptimizations(boolean)>(1);

        goto label4;

     label3:
        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $i2 = $i1 | i0;

        r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled> = $i2;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r1.<com.android.server.wifi.WifiNative: boolean setSuspendOptimizations(boolean)>(0);

     label4:
        return;
    }

    private void setSuspendOptimizations(int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r4, $r10;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setSuspendOptimizations: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r10);

     label1:
        if z0 == 0 goto label2;

        $i5 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $i4 = i0 ^ -1;

        $i6 = $i5 & $i4;

        r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled> = $i6;

        goto label3;

     label2:
        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $i2 = $i1 | i0;

        r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled> = $i2;

     label3:
        $z2 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z2 == 0 goto label4;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mSuspendOptNeedsDisabled ");

        $i3 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r4);

     label4:
        return;
    }

    private void setWifiState(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1;
        java.util.concurrent.atomic.AtomicInteger $r2, $r3;
        boolean $z0;
        android.content.Intent $r4, r18;
        android.os.UserHandle $r8;
        android.content.Context $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13, $r15;
        com.android.internal.app.IBatteryStats $r14, $r17;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiState>;

        i1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label1:
        if i0 != 3 goto label2;

        $r17 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r17.<com.android.internal.app.IBatteryStats: void noteWifiOn()>();

        goto label3;

     label2:
        if i0 != 1 goto label3;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r14.<com.android.internal.app.IBatteryStats: void noteWifiOff()>();

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Failed to note battery stats in wifi");

     label5:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiState>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i0);

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setWifiState: ");

        $r13 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String syncGetWifiStateByName()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r15);

     label6:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.WIFI_STATE_CHANGED");

        r18 = $r4;

        virtualinvoke r18.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("wifi_state", i0);

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("previous_wifi_state", i1);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r18, $r8);

        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private void setWifiApState(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1;
        java.util.concurrent.atomic.AtomicInteger $r2, $r3;
        boolean $z0;
        android.content.Intent $r4, r18;
        android.os.UserHandle $r8;
        android.content.Context $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13, $r15;
        com.android.internal.app.IBatteryStats $r14, $r17;
        android.os.RemoteException $r16;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiApState>;

        i1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

     label1:
        if i0 != 13 goto label2;

        $r17 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r17.<com.android.internal.app.IBatteryStats: void noteWifiOn()>();

        goto label3;

     label2:
        if i0 != 11 goto label3;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r14.<com.android.internal.app.IBatteryStats: void noteWifiOff()>();

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Failed to note battery stats in wifi");

     label5:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mWifiApState>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicInteger: void set(int)>(i0);

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label6;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setWifiApState: ");

        $r13 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String syncGetWifiApStateByName()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r15);

     label6:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.WIFI_AP_STATE_CHANGED");

        r18 = $r4;

        virtualinvoke r18.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("wifi_state", i0);

        virtualinvoke r18.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("previous_wifi_state", i1);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r8 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r9.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r18, $r8);

        return;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private void setScanResults()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, r2, r4, r5, r10, r11, $r21, $r24, $r36, $r61, $r62, $r63, $r65, $r67, $r68, $r69, $r70, $r71, $r72, $r74, $r75, $r76, $r77, $r78, $r80, $r83, r92;
        int i0, i1, i3, i4, i5, i6, i7, $i8, $i11, $i12, $i13, $i14, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31;
        long l2, $l10, $l16, $l18;
        android.net.wifi.WifiSsid r3;
        java.lang.StringBuffer r6, $r15;
        java.lang.String[] r7, r9, r89;
        java.lang.Throwable r13, r16, $r82, $r86;
        android.net.wifi.ScanResult r14, $r58;
        com.android.server.wifi.WifiNative $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z17, $z18, z19;
        android.util.LruCache $r20, $r29, $r56, $r59, r88, r94;
        java.util.ArrayList $r22, $r73;
        android.net.wifi.WifiInfo $r23;
        com.android.internal.util.State $r25, $r38, $r43, $r46, $r48;
        com.android.internal.util.IState $r26, $r32, $r37, $r42, $r45, $r47;
        com.android.server.wifi.WifiConfigStore $r27, $r30, $r51;
        byte $b9;
        com.android.server.wifi.WifiAutoJoinController $r28;
        java.lang.StringBuilder $r31, $r33, $r34, $r35, $r39, $r40, $r41, $r53, $r54, $r55;
        android.net.wifi.SupplicantState $r44, $r49, $r50, $r52, r93;
        java.lang.Object $r60;
        java.util.List $r64;
        byte[] $r66, $r79;
        java.lang.NumberFormatException $r81, $r84, $r85, $r87;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsKnown> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsReturned> = 0;

        r1 = "";

        i0 = 0;

        i1 = 0;

        l2 = 0L;

        r2 = "";

        r3 = null;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        r6 = $r15;

        i3 = 0;

     label01:
        $r17 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        r5 = virtualinvoke $r17.<com.android.server.wifi.WifiNative: java.lang.String scanResults(int)>(i3);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 == 0 goto label02;

        goto label11;

     label02:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        r7 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i3 = -1;

        $i8 = lengthof r7;

        i4 = $i8 - 1;

     label03:
        if i4 < 0 goto label09;

        $r74 = r7[i4];

        $z17 = virtualinvoke $r74.<java.lang.String: boolean startsWith(java.lang.String)>("####");

        if $z17 == 0 goto label04;

        goto label09;

     label04:
        $r75 = r7[i4];

        $z18 = virtualinvoke $r75.<java.lang.String: boolean startsWith(java.lang.String)>("id=");

        if $z18 == 0 goto label08;

     label05:
        $r76 = r7[i4];

        $r77 = "id=";

        $i29 = virtualinvoke $r77.<java.lang.String: int length()>();

        $r83 = virtualinvoke $r76.<java.lang.String: java.lang.String substring(int)>($i29);

        $i30 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r83);

        i3 = $i30 + 1;

     label06:
        goto label09;

     label07:
        $r84 := @caughtexception;

        goto label09;

     label08:
        i4 = i4 + -1;

        goto label03;

     label09:
        if i3 != -1 goto label10;

        goto label11;

     label10:
        goto label01;

     label11:
        r4 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 == 0 goto label13;

        $i28 = r0.<com.android.server.wifi.WifiStateMachine: int emptyScanResultCount>;

        $i27 = $i28 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int emptyScanResultCount> = $i27;

        $i24 = r0.<com.android.server.wifi.WifiStateMachine: int emptyScanResultCount>;

        if $i24 <= 10 goto label12;

        $r73 = new java.util.ArrayList;

        specialinvoke $r73.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults> = $r73;

     label12:
        return;

     label13:
        r0.<com.android.server.wifi.WifiStateMachine: int emptyScanResultCount> = 0;

        $r20 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        r88 = $r20;

        entermonitor $r20;

     label14:
        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults> = $r22;

        r89 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $r21 = "bssid=";

        i31 = virtualinvoke $r21.<java.lang.String: int length()>();

        $r24 = "flags=";

        i5 = virtualinvoke $r24.<java.lang.String: int length()>();

        r9 = r89;

        i6 = lengthof r9;

        i7 = 0;

     label15:
        if i7 >= i6 goto label40;

        r10 = r9[i7];

        $z7 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("bssid=");

        if $z7 == 0 goto label16;

        $r80 = new java.lang.String;

        $r79 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();

        $i26 = virtualinvoke r10.<java.lang.String: int length()>();

        $i25 = $i26 - i31;

        specialinvoke $r80.<java.lang.String: void <init>(byte[],int,int)>($r79, i31, $i25);

        r1 = $r80;

        goto label39;

     label16:
        $z10 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("freq=");

        if $z10 == 0 goto label20;

     label17:
        $r69 = "freq=";

        $i22 = virtualinvoke $r69.<java.lang.String: int length()>();

        $r78 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i22);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r78);

     label18:
        goto label39;

     label19:
        $r87 := @caughtexception;

        i1 = 0;

        goto label39;

     label20:
        $z9 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("level=");

        if $z9 == 0 goto label24;

     label21:
        $r71 = "level=";

        $i23 = virtualinvoke $r71.<java.lang.String: int length()>();

        $r70 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i23);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r70);

        if i0 <= 0 goto label22;

        i0 = i0 + -256;

     label22:
        goto label39;

     label23:
        $r85 := @caughtexception;

        i0 = 0;

        goto label39;

     label24:
        $z12 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("tsf=");

        if $z12 == 0 goto label28;

     label25:
        $r65 = "tsf=";

        $i19 = virtualinvoke $r65.<java.lang.String: int length()>();

        $r72 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i19);

        l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r72);

     label26:
        goto label39;

     label27:
        $r81 := @caughtexception;

        l2 = 0L;

        goto label39;

     label28:
        $z11 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("flags=");

        if $z11 == 0 goto label29;

        $r67 = new java.lang.String;

        $r66 = virtualinvoke r10.<java.lang.String: byte[] getBytes()>();

        $i21 = virtualinvoke r10.<java.lang.String: int length()>();

        $i20 = $i21 - i5;

        specialinvoke $r67.<java.lang.String: void <init>(byte[],int,int)>($r66, i5, $i20);

        r2 = $r67;

        goto label39;

     label29:
        $z14 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("ssid=");

        if $z14 == 0 goto label30;

        $r61 = "ssid=";

        $i17 = virtualinvoke $r61.<java.lang.String: int length()>();

        $r68 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i17);

        r3 = staticinvoke <android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>($r68);

        goto label39;

     label30:
        $z13 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("====");

        if $z13 != 0 goto label31;

        $z15 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("####");

        if $z15 == 0 goto label39;

     label31:
        if r1 == null goto label38;

        if r3 == null goto label32;

        $r62 = virtualinvoke r3.<android.net.wifi.WifiSsid: java.lang.String toString()>();

        goto label33;

     label32:
        $r62 = "<unknown ssid>";

     label33:
        r92 = $r62;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r92);

        r11 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r59 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        $r60 = virtualinvoke $r59.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r11);

        r14 = (android.net.wifi.ScanResult) $r60;

        if r14 == null goto label36;

        r14.<android.net.wifi.ScanResult: int level> = i0;

        r14.<android.net.wifi.ScanResult: android.net.wifi.WifiSsid wifiSsid> = r3;

        if r3 == null goto label34;

        $r63 = virtualinvoke r3.<android.net.wifi.WifiSsid: java.lang.String toString()>();

        goto label35;

     label34:
        $r63 = "<unknown ssid>";

     label35:
        r14.<android.net.wifi.ScanResult: java.lang.String SSID> = $r63;

        r14.<android.net.wifi.ScanResult: java.lang.String capabilities> = r2;

        r14.<android.net.wifi.ScanResult: int frequency> = i1;

        r14.<android.net.wifi.ScanResult: long timestamp> = l2;

        $l18 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r14.<android.net.wifi.ScanResult: long seen> = $l18;

        goto label37;

     label36:
        $r58 = new android.net.wifi.ScanResult;

        specialinvoke $r58.<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long)>(r3, r1, r2, i0, i1, l2);

        r14 = $r58;

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r14.<android.net.wifi.ScanResult: long seen> = $l16;

        $r56 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        virtualinvoke $r56.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r14);

     label37:
        $i14 = r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsReturned>;

        $i15 = $i14 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsReturned> = $i15;

        $r64 = r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults>;

        interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>(r14);

     label38:
        r1 = null;

        i0 = 0;

        i1 = 0;

        l2 = 0L;

        r2 = "";

        r3 = null;

     label39:
        i7 = i7 + 1;

        goto label15;

     label40:
        exitmonitor r88;

     label41:
        goto label44;

     label42:
        $r86 := @caughtexception;

        r13 = $r86;

        exitmonitor r88;

     label43:
        throw r13;

     label44:
        z19 = 1;

        $r23 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        r93 = virtualinvoke $r23.<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>();

        $r26 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r25 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mRoamingState>;

        if $r26 == $r25 goto label46;

        $r37 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r38 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mObtainingIpState>;

        if $r37 == $r38 goto label46;

        $r45 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r46 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mScanModeState>;

        if $r45 == $r46 goto label46;

        $r47 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r48 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectingState>;

        if $r47 == $r48 goto label46;

        $r42 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r43 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState>;

        if $r42 != $r43 goto label45;

        $r51 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z8 = $r51.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated>;

        if $z8 == 0 goto label46;

     label45:
        $z6 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        if $z6 != 0 goto label46;

        $r44 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState ASSOCIATING>;

        if r93 == $r44 goto label46;

        $r50 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState AUTHENTICATING>;

        if r93 == $r50 goto label46;

        $r49 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState FOUR_WAY_HANDSHAKE>;

        if r93 == $r49 goto label46;

        $r52 = <android.net.wifi.SupplicantState: android.net.wifi.SupplicantState GROUP_HANDSHAKE>;

        if r93 != $r52 goto label47;

     label46:
        z19 = 0;

     label47:
        $z2 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z2 == 0 goto label48;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wifi setScanResults state");

        $r32 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r39 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sup_state=");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r93);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" debouncing=");

        $z5 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        $r35 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r36);

     label48:
        if z19 == 0 goto label49;

        $i12 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_PROCESSED>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i12;

     label49:
        $l10 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: long getDisconnectedTimeMilli()>();

        $b9 = $l10 cmp 1800000L;

        if $b9 <= 0 goto label50;

        $r30 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        virtualinvoke $r30.<com.android.server.wifi.WifiConfigStore: void setLastSelectedConfiguration(int)>(-1);

     label50:
        $r27 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z3 = $r27.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated>;

        if $z3 == 0 goto label55;

        $r29 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        r94 = $r29;

        entermonitor $r29;

     label51:
        $r28 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiAutoJoinController mWifiAutoJoinController>;

        $i13 = virtualinvoke $r28.<com.android.server.wifi.WifiAutoJoinController: int newSupplicantResults(boolean)>(z19);

        r0.<com.android.server.wifi.WifiStateMachine: int mNumScanResultsKnown> = $i13;

        exitmonitor r94;

     label52:
        goto label55;

     label53:
        $r82 := @caughtexception;

        r16 = $r82;

        exitmonitor r94;

     label54:
        throw r16;

     label55:
        $z4 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        if $z4 == 0 goto label56;

        $i11 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int,int,java.lang.Object)>(131217, $i11, 1, null);

     label56:
        return;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
        catch java.lang.NumberFormatException from label21 to label22 with label23;
        catch java.lang.NumberFormatException from label25 to label26 with label27;
        catch java.lang.Throwable from label14 to label41 with label42;
        catch java.lang.Throwable from label42 to label43 with label42;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
    }

    private void fetchRssiLinkSpeedAndFrequencyNative()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String r1, r4, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r30;
        java.lang.String[] r2, r3, r5;
        com.android.server.wifi.WifiNative $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        android.net.wifi.WifiInfo $r8, $r10, $r12, $r14, $r15;
        com.android.server.wifi.WifiConfigStore $r9;
        android.net.wifi.WifiConnectionStatistics $r11, $r13;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r23;
        java.lang.NumberFormatException $r29;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 = -1;

        i1 = -1;

        i2 = -1;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        r1 = virtualinvoke $r7.<com.android.server.wifi.WifiNative: java.lang.String signalPoll()>();

        if r1 == null goto label08;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r3 = r2;

        i3 = lengthof r3;

        i4 = 0;

     label01:
        if i4 >= i3 goto label08;

        r4 = r3[i4];

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i10 = lengthof r5;

        if $i10 >= 2 goto label02;

        goto label07;

     label02:
        $r24 = r5[0];

        $z3 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("RSSI");

        if $z3 == 0 goto label03;

        $r30 = r5[1];

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r30);

        goto label05;

     label03:
        $r26 = r5[0];

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("LINKSPEED");

        if $z5 == 0 goto label04;

        $r27 = r5[1];

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        goto label05;

     label04:
        $r25 = r5[0];

        $z4 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("FREQUENCY");

        if $z4 == 0 goto label05;

        $r28 = r5[1];

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

     label05:
        goto label07;

     label06:
        $r29 := @caughtexception;

     label07:
        i4 = i4 + 1;

        goto label01;

     label08:
        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z0 == 0 goto label09;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fetchRssiLinkSpeedAndFrequencyNative rssi=");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" linkspeed=");

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r21);

     label09:
        if i0 <= -127 goto label12;

        if i0 >= 200 goto label12;

        if i0 <= 0 goto label10;

        i0 = i0 + -256;

     label10:
        $r15 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r15.<android.net.wifi.WifiInfo: void setRssi(int)>(i0);

        i11 = staticinvoke <android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>(i0, 5);

        $i9 = r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel>;

        if i11 == $i9 goto label11;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendRssiChangeBroadcast(int)>(i0);

     label11:
        r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel> = i11;

        goto label13;

     label12:
        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r8.<android.net.wifi.WifiInfo: void setRssi(int)>(-127);

     label13:
        if i1 == -1 goto label14;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r14.<android.net.wifi.WifiInfo: void setLinkSpeed(int)>(i1);

     label14:
        if i2 <= 0 goto label17;

        $z2 = staticinvoke <android.net.wifi.ScanResult: boolean is5GHz(int)>(i2);

        if $z2 == 0 goto label15;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics>;

        $i7 = $r13.<android.net.wifi.WifiConnectionStatistics: int num5GhzConnected>;

        $i8 = $i7 + 1;

        $r13.<android.net.wifi.WifiConnectionStatistics: int num5GhzConnected> = $i8;

     label15:
        $z1 = staticinvoke <android.net.wifi.ScanResult: boolean is24GHz(int)>(i2);

        if $z1 == 0 goto label16;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics>;

        $i6 = $r11.<android.net.wifi.WifiConnectionStatistics: int num24GhzConnected>;

        $i5 = $i6 + 1;

        $r11.<android.net.wifi.WifiConnectionStatistics: int num24GhzConnected> = $i5;

     label16:
        $r12 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r12.<android.net.wifi.WifiInfo: void setFrequency(int)>(i2);

     label17:
        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r9.<com.android.server.wifi.WifiConfigStore: void updateConfiguration(android.net.wifi.WifiInfo)>($r10);

        return;

        catch java.lang.NumberFormatException from label02 to label05 with label06;
    }

    boolean shouldSwitchNetwork(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1, $i6;
        android.net.wifi.WifiInfo $r1, $r9, $r13, $r18, $r26, $r29, $r30, $r31;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r10, $r12, $r16, $r17, $r21, $r22, $r24, $r27, $r28;
        java.lang.String $r7, $r14, $r23, $r25;
        com.android.server.wifi.WifiConfigStore $r8;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b2, $b3, $b4, $b5;
        java.lang.Object[] $r11, $r19;
        java.lang.Double $r15, $r20;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        if i0 > 0 goto label1;

        return 0;

     label1:
        i1 = i0;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        if $r1 == null goto label7;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z0 = $r8.<com.android.server.wifi.WifiConfigStore: boolean enableAutoJoinWhenAssociated>;

        if $z0 != 0 goto label2;

        $r31 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i6 = virtualinvoke $r31.<android.net.wifi.WifiInfo: int getNetworkId()>();

        if $i6 == -1 goto label2;

        i1 = -1000;

        goto label8;

     label2:
        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d0 = $r9.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b2 = $d0 cmpl 20.0;

        if $b2 > 0 goto label3;

        $r26 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d4 = $r26.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $b3 = $d4 cmpl 80.0;

        if $b3 <= 0 goto label4;

     label3:
        i1 = i1 + -999;

        goto label6;

     label4:
        $r29 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d3 = $r29.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b5 = $d3 cmpl 5.0;

        if $b5 > 0 goto label5;

        $r30 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d5 = $r30.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $b4 = $d5 cmpl 30.0;

        if $b4 <= 0 goto label6;

     label5:
        i1 = i1 + -6;

     label6:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiStateMachine shouldSwitchNetwork  txSuccessRate=");

        $r11 = newarray (java.lang.Object)[1];

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d1 = $r13.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r11[0] = $r15;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r11);

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rxSuccessRate=");

        $r19 = newarray (java.lang.Object)[1];

        $r18 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d2 = $r18.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $r20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r19[0] = $r20;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r19);

        $r24 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" delta ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r25);

        goto label8;

     label7:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiStateMachine shouldSwitchNetwork  delta ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r7);

     label8:
        if i1 <= 0 goto label9;

        return 1;

     label9:
        return 0;
    }

    private void cleanWifiScore()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1, $r2, $r3, $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r1.<android.net.wifi.WifiInfo: double txBadRate> = 0.0;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r2.<android.net.wifi.WifiInfo: double txSuccessRate> = 0.0;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r3.<android.net.wifi.WifiInfo: double txRetriesRate> = 0.0;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r4.<android.net.wifi.WifiInfo: double rxSuccessRate> = 0.0;

        return;
    }

    private void calculateWifiScore(android.net.wifi.WifiLinkLayerStats)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiLinkLayerStats r1;
        java.lang.StringBuilder r2, $r6, $r61, $r63, $r64, $r69, $r71, $r72, $r75, $r76, $r77, $r79, $r85, $r86, $r88, $r92, $r94, $r95, $r99, $r100, $r104, $r106, $r107, $r110, $r111, $r119, $r124, $r125, $r126, $r128, $r131, $r136, $r137, $r138, $r141, $r142, $r146, $r147, $r151, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r163, $r164, $r167, $r169, $r170, $r173, $r174, $r175, $r216, $r217;
        long l0, l1;
        boolean z0, z1, z2, z3, z4, z5, z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, z29;
        android.net.wifi.WifiConfiguration r3;
        int i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i32, $i33, $i34, $i35, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, i117, i118;
        byte b3, $b10, $b12, $b31, $b36, $b41, $b58, $b73;
        java.lang.String r4, $r5, $r7, $r18, $r25, $r27, $r32, $r42, $r47, $r49, $r56, $r59, $r62, $r70, $r74, $r78, $r80, $r84, $r87, $r89, $r93, $r97, $r108, $r109, $r113, $r121, $r123, $r127, $r129, $r132, $r139, $r149, $r166, $r172, $r176, $r185;
        android.net.wifi.WifiInfo $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r20, $r22, $r23, $r29, $r37, $r38, $r39, $r45, $r52, $r53, $r57, $r67, $r68, $r73, $r81, $r82, $r83, $r90, $r91, $r96, $r98, $r101, $r102, $r103, $r105, $r112, $r116, $r117, $r120, $r122, $r130, $r134, $r140, $r145, $r150, $r162, $r168, $r187, $r191, $r197, $r203, $r210, $r213, $r214, $r223, $r226;
        java.lang.Object[] $r14, $r21, $r30, $r34, $r35, $r43, $r48, $r55, $r118, $r135, $r144, $r152, $r165, $r181;
        java.lang.Integer $r15, $r16, $r26, $r31, $r36, $r40, $r44, $r46, $r51, $r60, $r114, $r182, $r183, $r184;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r65, $r66;
        java.lang.Double $r133, $r143, $r148, $r171;
        com.android.server.wifi.WifiConfigStore $r177, $r179, $r193, $r204, $r205, $r206, $r207, $r208, $r209, $r211, $r212, $r215, $r224;
        java.util.HashMap $r195, $r202;
        java.util.BitSet $r198, $r199;
        android.net.wifi.WifiConfiguration$Visibility $r200, $r220, $r221, $r222;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiLinkLayerStats;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        if r1 == null goto label01;

        $i116 = r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported>;

        if $i116 > 0 goto label02;

     label01:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        l0 = staticinvoke <android.net.TrafficStats: long getTxPackets(java.lang.String)>($r5);

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        l1 = staticinvoke <android.net.TrafficStats: long getRxPackets(java.lang.String)>($r7);

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r8.<android.net.wifi.WifiInfo: void updatePacketRates(long,long)>(l0, l1);

        goto label03;

     label02:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stats");

        $r226 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r226.<android.net.wifi.WifiInfo: void updatePacketRates(android.net.wifi.WifiLinkLayerStats)>(r1);

     label03:
        i117 = 56;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z7 = virtualinvoke $r9.<android.net.wifi.WifiInfo: boolean is24GHz()>();

        if $z7 == 0 goto label04;

        $r223 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i114 = virtualinvoke $r223.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        $r224 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i115 = $r224.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed24>;

        if $i114 < $i115 goto label05;

     label04:
        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z8 = virtualinvoke $r10.<android.net.wifi.WifiInfo: boolean is5GHz()>();

        if $z8 == 0 goto label06;

        $r210 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i100 = virtualinvoke $r210.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        $r212 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i99 = $r212.<com.android.server.wifi.WifiConfigStore: int badLinkSpeed5>;

        if $i100 >= $i99 goto label06;

     label05:
        $z27 = 1;

        goto label07;

     label06:
        $z27 = 0;

     label07:
        z0 = $z27;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z9 = virtualinvoke $r11.<android.net.wifi.WifiInfo: boolean is24GHz()>();

        if $z9 == 0 goto label08;

        $r214 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i98 = virtualinvoke $r214.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        $r211 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i97 = $r211.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed24>;

        if $i98 >= $i97 goto label09;

     label08:
        $r12 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z10 = virtualinvoke $r12.<android.net.wifi.WifiInfo: boolean is5GHz()>();

        if $z10 == 0 goto label10;

        $r213 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i101 = virtualinvoke $r213.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        $r215 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i104 = $r215.<com.android.server.wifi.WifiConfigStore: int goodLinkSpeed5>;

        if $i101 < $i104 goto label10;

     label09:
        $z28 = 1;

        goto label11;

     label10:
        $z28 = 0;

     label11:
        z29 = $z28;

        if z0 == 0 goto label12;

        $i106 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        if $i106 >= 6 goto label13;

        $i102 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        $i103 = $i102 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount> = $i103;

        goto label13;

     label12:
        $i4 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        if $i4 <= 0 goto label13;

        $i108 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        $i107 = $i108 - 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount> = $i107;

     label13:
        if z0 == 0 goto label14;

        $r217 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bl(");

        $i105 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        $r216 = virtualinvoke $r217.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i105);

        virtualinvoke $r216.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label14:
        if z29 == 0 goto label15;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" gl");

     label15:
        z1 = 0;

        z2 = 0;

        r3 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r3 == null goto label17;

        $r195 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r195 == null goto label17;

        virtualinvoke r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility setVisibility(long)>(12000L);

        $r200 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        if $r200 == null goto label16;

        $r221 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i109 = $r221.<android.net.wifi.WifiConfiguration$Visibility: int rssi24>;

        $i110 = <android.net.wifi.WifiConfiguration: int INVALID_RSSI>;

        if $i109 == $i110 goto label16;

        $r220 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i111 = $r220.<android.net.wifi.WifiConfiguration$Visibility: int rssi24>;

        $r222 = r3.<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration$Visibility visibility>;

        $i113 = $r222.<android.net.wifi.WifiConfiguration$Visibility: int rssi5>;

        $i112 = $i113 - 2;

        if $i111 < $i112 goto label16;

        z1 = 1;

     label16:
        $r202 = r3.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i90 = virtualinvoke $r202.<java.util.HashMap: int size()>();

        if $i90 > 6 goto label17;

        $r198 = r3.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $i89 = virtualinvoke $r198.<java.util.BitSet: int cardinality()>();

        if $i89 != 1 goto label17;

        $r199 = r3.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z23 = virtualinvoke $r199.<java.util.BitSet: boolean get(int)>(1);

        if $z23 != 1 goto label17;

        z2 = 1;

     label17:
        if z2 == 0 goto label18;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hn");

     label18:
        if z1 == 0 goto label19;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" u24");

     label19:
        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i7 = virtualinvoke $r13.<android.net.wifi.WifiInfo: int getRssi()>();

        $i5 = r0.<com.android.server.wifi.WifiStateMachine: int mAggressiveHandover>;

        $i6 = 6 * $i5;

        $i8 = $i7 - $i6;

        if z2 == 0 goto label20;

        $i87 = <android.net.wifi.WifiConfiguration: int HOME_NETWORK_RSSI_BOOST>;

        goto label21;

     label20:
        $i87 = 0;

     label21:
        i2 = $i8 + $i87;

        $r14 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r14[0] = $r16;

        $i9 = r0.<com.android.server.wifi.WifiStateMachine: int mAggressiveHandover>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r14[1] = $r15;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" rssi=%d ag=%d", $r14);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        if z1 != 0 goto label22;

        $r197 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z22 = virtualinvoke $r197.<android.net.wifi.WifiInfo: boolean is24GHz()>();

        if $z22 == 0 goto label23;

     label22:
        $z21 = 1;

        goto label24;

     label23:
        $z21 = 0;

     label24:
        z3 = $z21;

        if z3 == 0 goto label25;

        $r208 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i88 = $r208.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24>;

        if i2 < $i88 goto label26;

     label25:
        if z3 != 0 goto label27;

        $r207 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i94 = $r207.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5>;

        if i2 >= $i94 goto label27;

     label26:
        $z25 = 1;

        goto label28;

     label27:
        $z25 = 0;

     label28:
        z4 = $z25;

        if z3 == 0 goto label29;

        $r209 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i96 = $r209.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24>;

        if i2 < $i96 goto label30;

     label29:
        if z3 != 0 goto label31;

        $r203 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i92 = virtualinvoke $r203.<android.net.wifi.WifiInfo: int getRssi()>();

        $r204 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i95 = $r204.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5>;

        if $i92 >= $i95 goto label31;

     label30:
        $z26 = 1;

        goto label32;

     label31:
        $z26 = 0;

     label32:
        z5 = $z26;

        if z3 == 0 goto label33;

        $r206 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i91 = $r206.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24>;

        if i2 >= $i91 goto label34;

     label33:
        if z3 != 0 goto label35;

        $r187 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i72 = virtualinvoke $r187.<android.net.wifi.WifiInfo: int getRssi()>();

        $r205 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i93 = $r205.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5>;

        if $i72 < $i93 goto label35;

     label34:
        $z24 = 1;

        goto label36;

     label35:
        $z24 = 0;

     label36:
        z6 = $z24;

        if z4 == 0 goto label37;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" br");

     label37:
        if z5 == 0 goto label38;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lr");

     label38:
        if z6 == 0 goto label39;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hr");

     label39:
        b3 = 0;

        if r3 == null goto label55;

        $r162 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d8 = $r162.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b58 = $d8 cmpl 5.0;

        if $b58 > 0 goto label40;

        $r191 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d10 = $r191.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $b73 = $d10 cmpl 5.0;

        if $b73 <= 0 goto label55;

     label40:
        if z4 == 0 goto label46;

        $i74 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtBadRSSI>;

        $i75 = $i74 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numTicksAtBadRSSI> = $i75;

        $i86 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtBadRSSI>;

        if $i86 <= 1000 goto label44;

        $i83 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI>;

        if $i83 <= 0 goto label41;

        $i65 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI>;

        $i64 = $i65 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI> = $i64;

     label41:
        $i71 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        if $i71 <= 0 goto label42;

        $i67 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        $i66 = $i67 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI> = $i66;

     label42:
        $i70 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i70 <= 0 goto label43;

        $i69 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        $i68 = $i69 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI> = $i68;

     label43:
        r3.<android.net.wifi.WifiConfiguration: int numTicksAtBadRSSI> = 0;

     label44:
        $r193 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z20 = $r193.<com.android.server.wifi.WifiConfigStore: boolean enableWifiCellularHandoverUserTriggeredAdjustment>;

        if $z20 == 0 goto label54;

        $i85 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI>;

        if $i85 > 0 goto label45;

        $i84 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        if $i84 > 0 goto label45;

        $i82 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i82 <= 0 goto label54;

     label45:
        i117 = i117 - 5;

        b3 = 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p1");

        goto label54;

     label46:
        if z5 == 0 goto label51;

        $i54 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtLowRSSI>;

        $i53 = $i54 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numTicksAtLowRSSI> = $i53;

        $i55 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtLowRSSI>;

        if $i55 <= 1000 goto label49;

        $i80 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        if $i80 <= 0 goto label47;

        $i76 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        $i77 = $i76 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI> = $i77;

     label47:
        $i81 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i81 <= 0 goto label48;

        $i78 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        $i79 = $i78 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI> = $i79;

     label48:
        r3.<android.net.wifi.WifiConfiguration: int numTicksAtLowRSSI> = 0;

     label49:
        $r179 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z19 = $r179.<com.android.server.wifi.WifiConfigStore: boolean enableWifiCellularHandoverUserTriggeredAdjustment>;

        if $z19 == 0 goto label54;

        $i56 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        if $i56 > 0 goto label50;

        $i57 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i57 <= 0 goto label54;

     label50:
        i117 = i117 - 5;

        b3 = 2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p2");

        goto label54;

     label51:
        if z6 != 0 goto label54;

        $i62 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtNotHighRSSI>;

        $i63 = $i62 + 1;

        r3.<android.net.wifi.WifiConfiguration: int numTicksAtNotHighRSSI> = $i63;

        $i48 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtNotHighRSSI>;

        if $i48 <= 1000 goto label53;

        $i50 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i50 <= 0 goto label52;

        $i52 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        $i51 = $i52 - 1;

        r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI> = $i51;

     label52:
        r3.<android.net.wifi.WifiConfiguration: int numTicksAtNotHighRSSI> = 0;

     label53:
        $r177 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $z18 = $r177.<com.android.server.wifi.WifiConfigStore: boolean enableWifiCellularHandoverUserTriggeredAdjustment>;

        if $z18 == 0 goto label54;

        $i49 = r3.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        if $i49 <= 0 goto label54;

        i117 = i117 - 5;

        b3 = 3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" p3");

     label54:
        $r181 = newarray (java.lang.Object)[3];

        $i59 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtBadRSSI>;

        $r182 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i59);

        $r181[0] = $r182;

        $i60 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtLowRSSI>;

        $r183 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i60);

        $r181[1] = $r183;

        $i61 = r3.<android.net.wifi.WifiConfiguration: int numTicksAtNotHighRSSI>;

        $r184 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i61);

        $r181[2] = $r184;

        $r185 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" ticks %d,%d,%d", $r181);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185);

     label55:
        $z11 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z11 == 0 goto label60;

        r4 = "";

        if z4 == 0 goto label56;

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r159 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r163 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" badRSSI ");

        r4 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label58;

     label56:
        if z6 == 0 goto label57;

        $r157 = new java.lang.StringBuilder;

        specialinvoke $r157.<java.lang.StringBuilder: void <init>()>();

        $r156 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r161 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" highRSSI ");

        r4 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label58;

     label57:
        if z5 == 0 goto label58;

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        $r153 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r158 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowRSSI ");

        r4 = virtualinvoke $r158.<java.lang.StringBuilder: java.lang.String toString()>();

     label58:
        if z0 == 0 goto label59;

        $r173 = new java.lang.StringBuilder;

        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();

        $r174 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r155 = virtualinvoke $r174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowSpeed ");

        r4 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.String toString()>();

     label59:
        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calculateWifiScore freq=");

        $r122 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i44 = virtualinvoke $r122.<android.net.wifi.WifiInfo: int getFrequency()>();

        $r123 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i44);

        $r124 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r123);

        $r119 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" speed=");

        $r120 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i43 = virtualinvoke $r120.<android.net.wifi.WifiInfo: int getLinkSpeed()>();

        $r121 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i43);

        $r142 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        $r141 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" score=");

        $r140 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i47 = $r140.<android.net.wifi.WifiInfo: int score>;

        $r139 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i47);

        $r138 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r139);

        $r137 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r136 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> txbadrate=");

        $r135 = newarray (java.lang.Object)[1];

        $r134 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d5 = $r134.<android.net.wifi.WifiInfo: double txBadRate>;

        $r133 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r135[0] = $r133;

        $r132 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r135);

        $r131 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r132);

        $r151 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txgoodrate=");

        $r152 = newarray (java.lang.Object)[1];

        $r150 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d7 = $r150.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $r148 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d7);

        $r152[0] = $r148;

        $r149 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r152);

        $r146 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        $r147 = virtualinvoke $r146.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txretriesrate=");

        $r144 = newarray (java.lang.Object)[1];

        $r145 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d6 = $r145.<android.net.wifi.WifiInfo: double txRetriesRate>;

        $r143 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d6);

        $r144[0] = $r143;

        $r166 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r144);

        $r167 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r164 = virtualinvoke $r167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rxrate=");

        $r165 = newarray (java.lang.Object)[1];

        $r168 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d9 = $r168.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        $r171 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d9);

        $r165[0] = $r171;

        $r172 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%.2f", $r165);

        $r169 = virtualinvoke $r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r172);

        $r170 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" userTriggerdPenalty");

        $r175 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b3);

        $r176 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r176);

     label60:
        $r17 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d1 = $r17.<android.net.wifi.WifiInfo: double txBadRate>;

        $b10 = $d1 cmpl 1.0;

        if $b10 < 0 goto label63;

        $r103 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d3 = $r103.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b41 = $d3 cmpg 3.0;

        if $b41 >= 0 goto label63;

        if z4 != 0 goto label61;

        if z5 == 0 goto label63;

     label61:
        $r117 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i42 = $r117.<android.net.wifi.WifiInfo: int linkStuckCount>;

        if $i42 >= 5 goto label62;

        $r130 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i45 = $r130.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $i46 = $i45 + 1;

        $r130.<android.net.wifi.WifiInfo: int linkStuckCount> = $i46;

     label62:
        $r118 = newarray (java.lang.Object)[1];

        $r116 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i40 = $r116.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $r114 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i40);

        $r118[0] = $r114;

        $r113 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" ls+=%d", $r118);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $z17 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z17 == 0 goto label66;

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r110 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bad link -> stuck count =");

        $r112 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i39 = $r112.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $r127 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i39);

        $r128 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r127);

        $r129 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r129);

        goto label66;

     label63:
        $r20 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d0 = $r20.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b12 = $d0 cmpl 2.0;

        if $b12 > 0 goto label64;

        $r101 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d4 = $r101.<android.net.wifi.WifiInfo: double txBadRate>;

        $b36 = $d4 cmpg 0.1;

        if $b36 >= 0 goto label66;

     label64:
        $r22 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i11 = $r22.<android.net.wifi.WifiInfo: int linkStuckCount>;

        if $i11 <= 0 goto label65;

        $r102 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i35 = $r102.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $i34 = $i35 - 1;

        $r102.<android.net.wifi.WifiInfo: int linkStuckCount> = $i34;

     label65:
        $r21 = newarray (java.lang.Object)[1];

        $r23 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i13 = $r23.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        $r21[0] = $r26;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" ls-=%d", $r21);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $z12 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z12 == 0 goto label66;

        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" good link -> stuck count =");

        $r105 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i38 = $r105.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $r109 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i38);

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r108);

     label66:
        $r30 = newarray (java.lang.Object)[1];

        $r31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i117);

        $r30[0] = $r31;

        $r27 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" [%d", $r30);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i14 = $r29.<android.net.wifi.WifiInfo: int linkStuckCount>;

        if $i14 <= 1 goto label67;

        $r96 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i30 = $r96.<android.net.wifi.WifiInfo: int linkStuckCount>;

        $i29 = $i30 - 1;

        $i37 = 2 * $i29;

        i117 = i117 - $i37;

     label67:
        $r35 = newarray (java.lang.Object)[1];

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i117);

        $r35[0] = $r36;

        $r32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(",%d", $r35);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        if z0 == 0 goto label68;

        i117 = i117 + -4;

        $z16 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z16 == 0 goto label69;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isBadLinkspeed   ---> count=");

        $i33 = r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount>;

        $r95 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" score=");

        $r93 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i117);

        $r92 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r97 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r97);

        goto label69;

     label68:
        if z29 == 0 goto label69;

        $r98 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d2 = $r98.<android.net.wifi.WifiInfo: double txSuccessRate>;

        $b31 = $d2 cmpl 5.0;

        if $b31 <= 0 goto label69;

        i117 = i117 + 4;

     label69:
        $r34 = newarray (java.lang.Object)[1];

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i117);

        $r34[0] = $r40;

        $r42 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(",%d", $r34);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        if z4 == 0 goto label70;

        $r82 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i27 = $r82.<android.net.wifi.WifiInfo: int badRssiCount>;

        if $i27 >= 7 goto label72;

        $r83 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i28 = $r83.<android.net.wifi.WifiInfo: int badRssiCount>;

        $i32 = $i28 + 1;

        $r83.<android.net.wifi.WifiInfo: int badRssiCount> = $i32;

        goto label72;

     label70:
        if z5 == 0 goto label71;

        $r90 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r90.<android.net.wifi.WifiInfo: int lowRssiCount> = 1;

        $r91 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i24 = $r91.<android.net.wifi.WifiInfo: int badRssiCount>;

        if $i24 <= 0 goto label72;

        $r81 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i25 = $r81.<android.net.wifi.WifiInfo: int badRssiCount>;

        $i26 = $i25 - 1;

        $r81.<android.net.wifi.WifiInfo: int badRssiCount> = $i26;

        goto label72;

     label71:
        $r38 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r38.<android.net.wifi.WifiInfo: int badRssiCount> = 0;

        $r37 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r37.<android.net.wifi.WifiInfo: int lowRssiCount> = 0;

     label72:
        $r39 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i15 = $r39.<android.net.wifi.WifiInfo: int badRssiCount>;

        $i18 = $i15 * 2;

        $r45 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i16 = $r45.<android.net.wifi.WifiInfo: int lowRssiCount>;

        $i17 = $i18 + $i16;

        i118 = i117 - $i17;

        $r43 = newarray (java.lang.Object)[1];

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i118);

        $r43[0] = $r44;

        $r49 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(",%d", $r43);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $z13 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z13 == 0 goto label73;

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" badRSSI count");

        $r68 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i22 = $r68.<android.net.wifi.WifiInfo: int badRssiCount>;

        $r70 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i22);

        $r72 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lowRSSI count");

        $r73 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i23 = $r73.<android.net.wifi.WifiInfo: int lowRssiCount>;

        $r84 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i23);

        $r85 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --> score ");

        $r87 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i118);

        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r89);

     label73:
        if z6 == 0 goto label74;

        i118 = i118 + 5;

        $z15 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z15 == 0 goto label74;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isHighRSSI       ---> score=");

        $r78 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i118);

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r80);

     label74:
        $r48 = newarray (java.lang.Object)[1];

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i118);

        $r48[0] = $r46;

        $r47 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(",%d]", $r48);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r55 = newarray (java.lang.Object)[2];

        $r53 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i19 = $r53.<android.net.wifi.WifiInfo: int badRssiCount>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        $r55[0] = $r51;

        $r52 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i21 = $r52.<android.net.wifi.WifiInfo: int lowRssiCount>;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        $r55[1] = $r60;

        $r59 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(" brc=%d lrc=%d", $r55);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r59);

        if i118 <= 60 goto label75;

        i118 = 60;

     label75:
        if i118 >= 0 goto label76;

        i118 = 0;

     label76:
        $r57 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i20 = $r57.<android.net.wifi.WifiInfo: int score>;

        if i118 == $i20 goto label78;

        $z14 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z14 == 0 goto label77;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("calculateWifiScore() report new score ");

        $r62 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i118);

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r74 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r74);

     label77:
        $r67 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r67.<android.net.wifi.WifiInfo: int score> = i118;

        $r66 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r66 == null goto label78;

        $r65 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        virtualinvoke $r65.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void sendNetworkScore(int)>(i118);

     label78:
        $r56 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String wifiScoringReport> = $r56;

        return;
    }

    public double getTxPacketRate()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1, $r2;
        double $d0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d0 = $r2.<android.net.wifi.WifiInfo: double txSuccessRate>;

        return $d0;

     label1:
        return -1.0;
    }

    public double getRxPacketRate()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1, $r2;
        double $d0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $d0 = $r2.<android.net.wifi.WifiInfo: double rxSuccessRate>;

        return $d0;

     label1:
        return -1.0;
    }

    private void fetchPktcntNative(android.net.wifi.RssiPacketCountInfo)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.RssiPacketCountInfo r1;
        java.lang.String r2, r5, $r9, $r10, $r11, $r12;
        java.lang.String[] r3, r4, r6;
        int i0, i1, $i2, $i3, $i4;
        com.android.server.wifi.WifiNative $r8;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r13;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.RssiPacketCountInfo;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        r2 = virtualinvoke $r8.<com.android.server.wifi.WifiNative: java.lang.String pktcntPoll()>();

        if r2 == null goto label7;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r5 = r4[i1];

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i2 = lengthof r6;

        if $i2 >= 2 goto label2;

        goto label6;

     label2:
        $r9 = r6[0];

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("TXGOOD");

        if $z0 == 0 goto label3;

        $r12 = r6[1];

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        r1.<android.net.wifi.RssiPacketCountInfo: int txgood> = $i4;

        goto label4;

     label3:
        $r10 = r6[0];

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("TXBAD");

        if $z1 == 0 goto label4;

        $r11 = r6[1];

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r1.<android.net.wifi.RssiPacketCountInfo: int txbad> = $i3;

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;

        catch java.lang.NumberFormatException from label2 to label4 with label5;
    }

    private boolean clearIPv4Address(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        android.net.InterfaceConfiguration r2, $r3;
        android.net.LinkAddress $r4;
        android.os.INetworkManagementService $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = new android.net.InterfaceConfiguration;

        specialinvoke $r3.<android.net.InterfaceConfiguration: void <init>()>();

        r2 = $r3;

        $r4 = new android.net.LinkAddress;

        specialinvoke $r4.<android.net.LinkAddress: void <init>(java.lang.String)>("0.0.0.0/0");

        virtualinvoke r2.<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>($r4);

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        interfaceinvoke $r5.<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>(r1, r2);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private boolean isProvisioned(android.net.LinkProperties)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.LinkProperties r1;
        int $i0;
        com.android.server.wifi.WifiConfigStore $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $z0 = virtualinvoke $r2.<com.android.server.wifi.WifiConfigStore: boolean isUsingStaticIp(int)>($i0);

        if $z0 == 0 goto label1;

        $z8 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv4Address()>();

        return $z8;

     label1:
        $z1 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv4Address()>();

        if $z1 == 0 goto label2;

        $z6 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>();

        if $z6 == 0 goto label2;

        $z7 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv4DnsServer()>();

        if $z7 != 0 goto label3;

     label2:
        $z2 = virtualinvoke r1.<android.net.LinkProperties: boolean hasGlobalIPv6Address()>();

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>();

        if $z3 == 0 goto label4;

        $z4 = virtualinvoke r1.<android.net.LinkProperties: boolean hasIPv6DnsServer()>();

        if $z4 == 0 goto label4;

     label3:
        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    private void updateLinkProperties(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1, $i2, $i3;
        android.net.LinkProperties r1, r2, $r8, $r18, $r19, $r37, $r41, $r42, $r44, $r45, $r49, $r50, $r61, $r62, $r67;
        java.util.Iterator r3, r82, r85, r86;
        android.net.RouteInfo r4, r5;
        java.lang.Throwable r6, $r80;
        java.lang.StringBuilder r7, $r23, $r24, $r25, $r28, $r29, $r31, $r32, $r34, $r35, $r40, $r57, $r58, $r59, $r65, $r68, $r69, $r70;
        java.lang.String $r9, $r21, $r26, $r30, $r33, $r39, $r43, $r51, $r63, $r64, $r66, $r79;
        com.android.server.wifi.WifiConfigStore $r10;
        android.net.ProxyInfo $r11;
        com.android.server.net.NetlinkTracker $r12;
        java.util.List $r13, $r14, $r15, $r74;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z20, z21, z22;
        java.lang.Object $r16, $r75, $r76, $r77, $r81, r84;
        android.net.DhcpResults $r17, $r71, $r73, $r78;
        android.net.NetworkInfo$DetailedState $r20, $r22, r88;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r52, $r60;
        java.util.ArrayList $r72;
        java.net.InetAddress r83, r87;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r8 = new android.net.LinkProperties;

        specialinvoke $r8.<android.net.LinkProperties: void <init>()>();

        r1 = $r8;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        virtualinvoke r1.<android.net.LinkProperties: void setInterfaceName(java.lang.String)>($r9);

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r11 = virtualinvoke $r10.<com.android.server.wifi.WifiConfigStore: android.net.ProxyInfo getProxyProperties(int)>($i1);

        virtualinvoke r1.<android.net.LinkProperties: void setHttpProxy(android.net.ProxyInfo)>($r11);

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.net.NetlinkTracker mNetlinkTracker>;

        r2 = virtualinvoke $r12.<com.android.server.net.NetlinkTracker: android.net.LinkProperties getLinkProperties()>();

        $r14 = virtualinvoke r2.<android.net.LinkProperties: java.util.List getLinkAddresses()>();

        virtualinvoke r1.<android.net.LinkProperties: void setLinkAddresses(java.util.Collection)>($r14);

        $r13 = virtualinvoke r2.<android.net.LinkProperties: java.util.List getRoutes()>();

        r3 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r81 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.net.RouteInfo) $r81;

        virtualinvoke r1.<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>(r4);

        goto label01;

     label02:
        $r15 = virtualinvoke r2.<android.net.LinkProperties: java.util.List getDnsServers()>();

        r82 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r82.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r75 = interfaceinvoke r82.<java.util.Iterator: java.lang.Object next()>();

        r83 = (java.net.InetAddress) $r75;

        virtualinvoke r1.<android.net.LinkProperties: boolean addDnsServer(java.net.InetAddress)>(r83);

        goto label03;

     label04:
        $r16 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock>;

        r84 = $r16;

        entermonitor $r16;

     label05:
        $r17 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        if $r17 == null goto label10;

        $r73 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        $r66 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        $r74 = virtualinvoke $r73.<android.net.DhcpResults: java.util.List getRoutes(java.lang.String)>($r66);

        r85 = interfaceinvoke $r74.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z15 = interfaceinvoke r85.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label07;

        $r76 = interfaceinvoke r85.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.net.RouteInfo) $r76;

        virtualinvoke r1.<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>(r5);

        goto label06;

     label07:
        $r71 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        $r72 = $r71.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        r86 = virtualinvoke $r72.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z14 = interfaceinvoke r86.<java.util.Iterator: boolean hasNext()>();

        if $z14 == 0 goto label09;

        $r77 = interfaceinvoke r86.<java.util.Iterator: java.lang.Object next()>();

        r87 = (java.net.InetAddress) $r77;

        virtualinvoke r1.<android.net.LinkProperties: boolean addDnsServer(java.net.InetAddress)>(r87);

        goto label08;

     label09:
        $r78 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        $r79 = $r78.<android.net.DhcpResults: java.lang.String domains>;

        virtualinvoke r1.<android.net.LinkProperties: void setDomains(java.lang.String)>($r79);

     label10:
        exitmonitor r84;

     label11:
        goto label14;

     label12:
        $r80 := @caughtexception;

        r6 = $r80;

        exitmonitor r84;

     label13:
        throw r6;

     label14:
        $r18 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z2 = virtualinvoke r1.<android.net.LinkProperties: boolean equals(java.lang.Object)>($r18);

        if $z2 != 0 goto label15;

        $z13 = 1;

        goto label16;

     label15:
        $z13 = 0;

     label16:
        z20 = $z13;

        $r19 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        z21 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isProvisioned(android.net.LinkProperties)>($r19);

        z22 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isProvisioned(android.net.LinkProperties)>(r1);

        r88 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo$DetailedState getNetworkDetailedState()>();

        if z20 == 0 goto label19;

        $z11 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z11 == 0 goto label17;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Link configuration changed for netId: ");

        $i3 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r68 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" old: ");

        $r67 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r67);

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new: ");

        $r65 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r64);

     label17:
        r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties> = r1;

        $r51 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTcpBufferSizes>;

        $z12 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r51);

        if $z12 != 0 goto label18;

        $r62 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $r63 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTcpBufferSizes>;

        virtualinvoke $r62.<android.net.LinkProperties: void setTcpBufferSizes(java.lang.String)>($r63);

     label18:
        $r52 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r52 == null goto label19;

        $r60 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        $r61 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r60.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void sendLinkProperties(android.net.LinkProperties)>($r61);

     label19:
        $z3 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z3 == 0 goto label27;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        r7 = $r25;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateLinkProperties nid: ");

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" state: ");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r88);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason: ");

        $r33 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String smToString(int)>(i0);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        if $r37 == null goto label26;

        $r42 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z5 = virtualinvoke $r42.<android.net.LinkProperties: boolean hasIPv4Address()>();

        if $z5 == 0 goto label20;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4");

     label20:
        $r41 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z7 = virtualinvoke $r41.<android.net.LinkProperties: boolean hasGlobalIPv6Address()>();

        if $z7 == 0 goto label21;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6");

     label21:
        $r45 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z6 = virtualinvoke $r45.<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>();

        if $z6 == 0 goto label22;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4r");

     label22:
        $r44 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z9 = virtualinvoke $r44.<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>();

        if $z9 == 0 goto label23;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6r");

     label23:
        $r49 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z10 = virtualinvoke $r49.<android.net.LinkProperties: boolean hasIPv4DnsServer()>();

        if $z10 == 0 goto label24;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v4dns");

     label24:
        $r50 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $z8 = virtualinvoke $r50.<android.net.LinkProperties: boolean hasIPv6DnsServer()>();

        if $z8 == 0 goto label25;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" v6dns");

     label25:
        if z22 == 0 goto label26;

        virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isprov");

     label26:
        $r43 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r43);

     label27:
        lookupswitch(i0)
        {
            case 1: goto label28;
            case 2: goto label29;
            case 131087: goto label28;
            case 131088: goto label31;
            case 131212: goto label32;
            default: goto label35;
        };

     label28:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131210);

        if z22 != 0 goto label35;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("IPv4 config succeeded, but not provisioned");

        goto label35;

     label29:
        if z22 != 0 goto label30;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131211);

        goto label35;

     label30:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131210);

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("DHCP failure: provisioned, clearing IPv4 address.");

        $r21 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        $z4 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean clearIPv4Address(java.lang.String)>($r21);

        if $z4 != 0 goto label35;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131211);

        goto label35;

     label31:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131211);

        goto label35;

     label32:
        if z21 == 0 goto label33;

        if z22 != 0 goto label33;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131211);

        goto label34;

     label33:
        if z21 != 0 goto label34;

        if z22 == 0 goto label34;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int)>(131210);

     label34:
        if z20 == 0 goto label35;

        $r22 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo$DetailedState getNetworkDetailedState()>();

        $r20 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if $r22 != $r20 goto label35;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendLinkConfigurationChangedBroadcast()>();

     label35:
        return;

        catch java.lang.Throwable from label05 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private void clearLinkProperties()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r11;
        android.net.DhcpResults $r4, $r10;
        com.android.server.net.NetlinkTracker $r5;
        android.net.LinkProperties $r6, $r8;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r7, $r9;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        if $r4 == null goto label2;

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        virtualinvoke $r10.<android.net.DhcpResults: void clear()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.net.NetlinkTracker mNetlinkTracker>;

        virtualinvoke $r5.<com.android.server.net.NetlinkTracker: void clearLinkProperties()>();

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r6.<android.net.LinkProperties: void clear()>();

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r7 == null goto label7;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r9.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void sendLinkProperties(android.net.LinkProperties)>($r8);

     label7:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.lang.String updateDefaultRouteMacAddress(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1;
        java.lang.String r1, $r10, $r12, $r14, $r21, $r22, $r24, $r27, $r31, $r34, $r36, $r38, $r41, $r44, $r47, r48;
        java.util.Iterator r2;
        android.net.RouteInfo r3;
        java.net.InetAddress r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        java.lang.Throwable r6, $r23;
        android.net.LinkProperties $r7;
        java.util.List $r8;
        java.lang.Object $r9;
        com.android.server.wifi.WifiConfigStore $r11;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r25, $r26, $r28, $r29, $r30, $r32, $r35, $r37, $r39, $r40, $r42, $r43, $r45, $r46;
        java.lang.Exception $r33;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        r1 = null;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        $r8 = virtualinvoke $r7.<android.net.LinkProperties: java.util.List getRoutes()>();

        r2 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.net.RouteInfo) $r9;

        $z2 = virtualinvoke r3.<android.net.RouteInfo: boolean isDefaultRoute()>();

        if $z2 == 0 goto label11;

        $z3 = virtualinvoke r3.<android.net.RouteInfo: boolean hasGateway()>();

        if $z3 == 0 goto label11;

        r4 = virtualinvoke r3.<android.net.RouteInfo: java.net.InetAddress getGateway()>();

        $z4 = r4 instanceof java.net.Inet4Address;

        if $z4 == 0 goto label11;

        $z5 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z5 == 0 goto label02;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDefaultRouteMacAddress found Ipv4 default :");

        $r24 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r25 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r22);

     label02:
        $r10 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r1 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String macAddressFromRoute(java.lang.String)>($r10);

        if r1 != null goto label10;

        if i0 <= 0 goto label10;

        z0 = 0;

     label03:
        z9 = virtualinvoke r4.<java.net.InetAddress: boolean isReachable(int)>(i0);

     label04:
        if z9 != 1 goto label10;

        $r12 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r1 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String macAddressFromRoute(java.lang.String)>($r12);

        $z6 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z6 == 0 goto label10;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDefaultRouteMacAddress reachable (tried again) :");

        $r14 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $r20 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r21);

        goto label10;

     label05:
        $r33 := @caughtexception;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDefaultRouteMacAddress exception reaching :");

        $r38 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r36);

     label06:
        if z0 != 1 goto label10;

        $r41 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r1 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String macAddressFromRoute(java.lang.String)>($r41);

        $z8 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z8 == 0 goto label10;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDefaultRouteMacAddress reachable (tried again) :");

        $r44 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r47);

        goto label10;

     label07:
        $r23 := @caughtexception;

        r6 = $r23;

     label08:
        if z0 != 1 goto label09;

        $r27 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r48 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String macAddressFromRoute(java.lang.String)>($r27);

        $z7 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z7 == 0 goto label09;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateDefaultRouteMacAddress reachable (tried again) :");

        $r31 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found ");

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r34);

     label09:
        throw r6;

     label10:
        if r1 == null goto label11;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        virtualinvoke $r11.<com.android.server.wifi.WifiConfigStore: void setDefaultGwMacAddress(int,java.lang.String)>($i1, r1);

     label11:
        goto label01;

     label12:
        return r1;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void sendScanResultsAvailableBroadcast()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.SCAN_RESULTS");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r4 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r5.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r4);

        return;
    }

    private void sendRssiChangeBroadcast(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        com.android.internal.app.IBatteryStats $r2;
        android.content.Intent $r3, r9;
        android.os.UserHandle $r6;
        android.content.Context $r7;
        android.os.RemoteException $r8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.app.IBatteryStats mBatteryStats>;

        interfaceinvoke $r2.<com.android.internal.app.IBatteryStats: void noteWifiRssiChanged(int)>(i0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.RSSI_CHANGED");

        r9 = $r3;

        virtualinvoke r9.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r9.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("newRssi", i0);

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r6 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r7.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r9, $r6);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void sendNetworkStateChangeBroadcast(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;
        android.net.NetworkInfo $r5, $r6, $r11, $r20;
        android.net.LinkProperties $r8, $r9;
        android.net.NetworkInfo$DetailedState $r12, $r13, $r19, $r22;
        android.net.wifi.WifiInfo $r14, $r15;
        android.content.Context $r17;
        android.os.UserHandle $r18;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.STATE_CHANGE");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r5 = new android.net.NetworkInfo;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke $r5.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r6);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("networkInfo", $r5);

        $r8 = new android.net.LinkProperties;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r8.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r9);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkProperties", $r8);

        if r1 == null goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("bssid", r1);

     label1:
        $r11 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r12 = virtualinvoke $r11.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r13 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState VERIFYING_POOR_LINK>;

        if $r12 == $r13 goto label2;

        $r20 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r19 = virtualinvoke $r20.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r22 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if $r19 != $r22 goto label3;

     label2:
        $r15 = new android.net.wifi.WifiInfo;

        $r14 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        specialinvoke $r15.<android.net.wifi.WifiInfo: void <init>(android.net.wifi.WifiInfo)>($r14);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("wifiInfo", $r15);

     label3:
        $r17 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r18 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r17.<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r2, $r18);

        return;
    }

    private void sendLinkConfigurationChangedBroadcast()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.content.Intent r1, $r2;
        android.net.LinkProperties $r4, $r5;
        android.os.UserHandle $r7;
        android.content.Context $r8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.LINK_CONFIGURATION_CHANGED");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        $r4 = new android.net.LinkProperties;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r4.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r5);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("linkProperties", $r4);

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r7 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r8.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r7);

        return;
    }

    private void sendSupplicantConnectionChangedBroadcast(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        android.content.Intent r1, $r2;
        android.os.UserHandle $r5;
        android.content.Context $r6;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.net.wifi.supplicant.CONNECTION_CHANGE");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(67108864);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("connected", z0);

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r5 = <android.os.UserHandle: android.os.UserHandle ALL>;

        virtualinvoke $r6.<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>(r1, $r5);

        return;
    }

    private boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkInfo$DetailedState r1, $r5, $r32;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.net.NetworkInfo $r2, $r4, $r7, $r10, $r15, $r18, $r27;
        java.lang.String $r3, $r8, $r12, $r14, $r16, $r21, $r25, $r28, $r34;
        android.net.wifi.WifiInfo $r6, $r13, $r17, $r19, $r22;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r9, $r11;
        java.lang.StringBuilder $r20, $r23, $r24, $r26, $r29, $r30, $r31, $r33, $r35, $r36;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.NetworkInfo$DetailedState;

        z0 = 0;

        $z1 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        if $z1 != 0 goto label1;

        $z5 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isRoaming()>();

        if $z5 == 0 goto label2;

     label1:
        z0 = 1;

     label2:
        $z2 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z2 == 0 goto label3;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDetailed state, old =");

        $r27 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r32 = virtualinvoke $r27.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        $r33 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and new state=");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hidden=");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r34);

     label3:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r3 = virtualinvoke $r2.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        if $r3 == null goto label5;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r12 = virtualinvoke $r13.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        if $r12 == null goto label5;

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r14 = virtualinvoke $r15.<android.net.NetworkInfo: java.lang.String getExtraInfo()>();

        $r17 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r16 = virtualinvoke $r17.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z4 != 0 goto label5;

        $z3 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z3 == 0 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDetailed state send new extra info");

        $r22 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r25 = virtualinvoke $r22.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r28);

     label4:
        $r18 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r19 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r21 = virtualinvoke $r19.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        virtualinvoke $r18.<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>($r21);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>(null);

     label5:
        if z0 != 1 goto label6;

        return 0;

     label6:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        if r1 == $r5 goto label8;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r8 = virtualinvoke $r6.<android.net.wifi.WifiInfo: java.lang.String getSSID()>();

        virtualinvoke $r7.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>(r1, null, $r8);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r9 == null goto label7;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r11.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void sendNetworkInfo(android.net.NetworkInfo)>($r10);

     label7:
        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>(null);

        return 1;

     label8:
        return 0;
    }

    private android.net.NetworkInfo$DetailedState getNetworkDetailedState()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkInfo $r1;
        android.net.NetworkInfo$DetailedState $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        $r2 = virtualinvoke $r1.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        return $r2;
    }

    private android.net.wifi.SupplicantState handleSupplicantStateChange(android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, $r12;
        com.android.server.wifi.StateChangeResult r2;
        android.net.wifi.SupplicantState r3;
        java.lang.Object $r4;
        android.net.wifi.WifiInfo $r5, $r6, $r8, $r10, $r13;
        boolean $z0;
        java.lang.String $r7;
        android.net.wifi.WifiSsid $r9;
        com.android.server.wifi.SupplicantStateTracker $r11;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        $r4 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.server.wifi.StateChangeResult) $r4;

        r3 = r2.<com.android.server.wifi.StateChangeResult: android.net.wifi.SupplicantState state>;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r5.<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)>(r3);

        $z0 = staticinvoke <android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)>(r3);

        if $z0 == 0 goto label1;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i0 = r2.<com.android.server.wifi.StateChangeResult: int networkId>;

        virtualinvoke $r13.<android.net.wifi.WifiInfo: void setNetworkId(int)>($i0);

        goto label2;

     label1:
        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r6.<android.net.wifi.WifiInfo: void setNetworkId(int)>(-1);

     label2:
        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r7 = r2.<com.android.server.wifi.StateChangeResult: java.lang.String BSSID>;

        virtualinvoke $r8.<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)>($r7);

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r9 = r2.<com.android.server.wifi.StateChangeResult: android.net.wifi.WifiSsid wifiSsid>;

        virtualinvoke $r10.<android.net.wifi.WifiInfo: void setSSID(android.net.wifi.WifiSsid)>($r9);

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker>;

        $r12 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Message)>(r1);

        virtualinvoke $r11.<com.android.server.wifi.SupplicantStateTracker: void sendMessage(android.os.Message)>($r12);

        return r3;
    }

    private void handleNetworkDisconnect()
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.Exception r1, $r42;
        boolean $z0;
        java.lang.String $r2, $r4, $r11, $r18, $r24, $r29, $r37, $r39, $r44;
        android.os.INetworkManagementService $r3, $r5;
        android.net.wifi.WifiInfo $r6;
        android.net.NetworkInfo$DetailedState $r7, $r9;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r8, $r12;
        int $i0, $i1;
        com.android.server.wifi.WifiConfigStore $r10;
        android.net.NetworkInfo $r13;
        java.lang.StringBuilder $r14, $r15, $r20, $r21, $r26, $r27, $r34, $r35, $r36, $r40, $r41, $r43;
        java.lang.StackTraceElement[] $r16, $r22, $r31, $r33;
        java.lang.Thread $r17, $r23, $r30, $r32;
        java.lang.StackTraceElement $r19, $r25, $r28, $r38;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleNetworkDisconnect: Stopping DHCP and clearing IP stack:");

        $r17 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r16 = virtualinvoke $r17.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r19 = $r16[2];

        $r18 = virtualinvoke $r19.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r23 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r22 = virtualinvoke $r23.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r25 = $r22[3];

        $r24 = virtualinvoke $r25.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r27 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r30 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r31 = virtualinvoke $r30.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r28 = $r31[4];

        $r29 = virtualinvoke $r28.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r32 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r33 = virtualinvoke $r32.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $r38 = $r33[5];

        $r39 = virtualinvoke $r38.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void log(java.lang.String)>($r37);

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void clearCurrentConfigBSSID(java.lang.String)>("handleNetworkDisconnect");

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void stopDhcp()>();

     label2:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        interfaceinvoke $r3.<android.os.INetworkManagementService: void clearInterfaceAddresses(java.lang.String)>($r2);

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        interfaceinvoke $r5.<android.os.INetworkManagementService: void disableIpv6(java.lang.String)>($r4);

     label3:
        goto label5;

     label4:
        $r42 := @caughtexception;

        r1 = $r42;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to clear addresses or disable ipv6");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r44);

     label5:
        r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount> = 0;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r6.<android.net.wifi.WifiInfo: void reset()>();

        r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming> = 0;

        r0.<com.android.server.wifi.WifiStateMachine: long fullBandConnectedTimeIntervalMilli> = 20000L;

        $r7 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)>($r7);

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r8 == null goto label6;

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r12.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void sendNetworkInfo(android.net.NetworkInfo)>($r13);

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent> = null;

     label6:
        $r10 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r9 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke $r10.<com.android.server.wifi.WifiConfigStore: void updateStatus(int,android.net.NetworkInfo$DetailedState)>($i0, $r9);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void clearLinkProperties()>();

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>($r11);

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void autoRoamSetBSSID(int,java.lang.String)>($i1, "any");

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid> = null;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void registerDisconnected()>();

        r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId> = -1;

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void handleSupplicantConnectionLoss()
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;
        com.android.server.wifi.WifiMonitor $r1;
        com.android.server.wifi.WifiNative $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiMonitor mWifiMonitor>;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mP2pSupported>;

        virtualinvoke $r1.<com.android.server.wifi.WifiMonitor: void killSupplicant(boolean)>($z0);

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r2.<com.android.server.wifi.WifiNative: void closeSupplicantConnection()>();

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendSupplicantConnectionChangedBroadcast(boolean)>(0);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setWifiState(int)>(1);

        return;
    }

    void handlePreDhcpSetup()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, $r3;
        boolean $z0;
        com.android.server.wifi.WifiNative $r2, $r7;
        android.net.DhcpStateMachine $r4;
        com.android.internal.util.AsyncChannel $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mDhcpActive> = 1;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mBluetoothConnectionActive>;

        if $z0 != 0 goto label1;

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r7.<com.android.server.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)>(1);

     label1:
        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setSuspendOptimizationsNative(int,boolean)>(1, 0);

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r2.<com.android.server.wifi.WifiNative: void setPowerSave(boolean)>(0);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void stopBatchedScan()>();

        staticinvoke <com.android.server.wifi.WifiNative: void pauseScan()>();

        $r3 = new android.os.Message;

        specialinvoke $r3.<android.os.Message: void <init>()>();

        r1 = $r3;

        r1.<android.os.Message: int what> = 143375;

        r1.<android.os.Message: int arg1> = 1;

        r1.<android.os.Message: int arg2> = 196615;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        r1.<android.os.Message: java.lang.Object obj> = $r4;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiP2pChannel>;

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r1);

        return;
    }

    void startDhcp()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpStateMachine $r1, $r2, $r3, $r6;
        java.lang.String $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        if $r1 != null goto label1;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        $r6 = staticinvoke <android.net.DhcpStateMachine: android.net.DhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>($r5, r0, $r4);

        r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine> = $r6;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        virtualinvoke $r2.<android.net.DhcpStateMachine: void registerForPreDhcpNotification()>();

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        virtualinvoke $r3.<android.net.DhcpStateMachine: void sendMessage(int)>(196609);

        return;
    }

    void renewDhcp()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpStateMachine $r1, $r2, $r3, $r6;
        java.lang.String $r4;
        android.content.Context $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        if $r1 != null goto label1;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        $r6 = staticinvoke <android.net.DhcpStateMachine: android.net.DhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>($r5, r0, $r4);

        r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine> = $r6;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        virtualinvoke $r2.<android.net.DhcpStateMachine: void registerForPreDhcpNotification()>();

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        virtualinvoke $r3.<android.net.DhcpStateMachine: void sendMessage(int)>(196611);

        return;
    }

    void stopDhcp()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpStateMachine $r1, $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void handlePostDhcpSetup()>();

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        virtualinvoke $r2.<android.net.DhcpStateMachine: void sendMessage(int)>(196610);

     label1:
        return;
    }

    void handlePostDhcpSetup()
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiNative $r1, $r4;
        com.android.internal.util.AsyncChannel $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setSuspendOptimizationsNative(int,boolean)>(1, 1);

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r1.<com.android.server.wifi.WifiNative: void setPowerSave(boolean)>(1);

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiP2pChannel>;

        virtualinvoke $r2.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(143375, 0);

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r4.<com.android.server.wifi.WifiNative: boolean setBluetoothCoexistenceMode(int)>(2);

        r0.<com.android.server.wifi.WifiStateMachine: boolean mDhcpActive> = 0;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startBatchedScan()>();

        staticinvoke <com.android.server.wifi.WifiNative: void restartScan()>();

        return;
    }

    private void handleIPv4Success(android.net.DhcpResults, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpResults r1;
        int i0, i1, i2;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r31;
        boolean $z0, $z1, $z2, $z3;
        android.net.LinkAddress $r5, $r28;
        java.net.InetAddress $r6;
        android.net.wifi.WifiInfo $r7, $r8, $r13, $r18;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r16, $r17, $r19, $r20, $r21, $r23, $r24, $r25, $r27, $r30, $r32;
        java.lang.String $r12, $r14, $r22, $r26, $r29, $r33;
        java.net.Inet4Address r34;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.DhcpResults;

        i0 := @parameter1: int;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z0 == 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wifistatemachine handleIPv4Success <");

        $r26 = virtualinvoke r1.<android.net.DhcpResults: java.lang.String toString()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("link address ");

        $r28 = r1.<android.net.DhcpResults: android.net.LinkAddress ipAddress>;

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r33);

     label1:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults> = r1;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r31 := @caughtexception;

        r3 = $r31;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        $r5 = r1.<android.net.DhcpResults: android.net.LinkAddress ipAddress>;

        $r6 = virtualinvoke $r5.<android.net.LinkAddress: java.net.InetAddress getAddress()>();

        r34 = (java.net.Inet4Address) $r6;

        $z1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isRoaming()>();

        if $z1 == 0 goto label9;

        $z3 = r34 instanceof java.net.Inet4Address;

        if $z3 == 0 goto label8;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        i2 = virtualinvoke $r13.<android.net.wifi.WifiInfo: int getIpAddress()>();

        i1 = staticinvoke <android.net.NetworkUtils: int inetAddressToInt(java.net.Inet4Address)>(r34);

        if i2 == i1 goto label7;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleIPv4Success, roaming and address changed");

        $r18 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" got: ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r22);

     label7:
        goto label9;

     label8:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleIPv4Success, roaming and didnt get an IPv4 address");

        $r12 = virtualinvoke r34.<java.net.Inet4Address: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r14);

     label9:
        $r7 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r7.<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)>(r34);

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $z2 = virtualinvoke r1.<android.net.DhcpResults: boolean hasMeteredHint()>();

        virtualinvoke $r8.<android.net.wifi.WifiInfo: void setMeteredHint(boolean)>($z2);

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void updateLinkProperties(int)>(i0);

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void handleSuccessfulIpConfiguration()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        android.net.wifi.ScanResult r2;
        com.android.server.wifi.WifiNative $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel> = -1;

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r1 == null goto label1;

        r1.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = 0;

     label1:
        if r1 == null goto label3;

        r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.ScanResult getCurrentScanResult()>();

        if r2 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiStateMachine: handleSuccessfulIpConfiguration and no scan results");

        $r6 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r8);

        goto label3;

     label2:
        r2.<android.net.wifi.ScanResult: int numIpConfigFailures> = 0;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r3.<com.android.server.wifi.WifiNative: boolean clearBlacklist()>();

     label3:
        return;
    }

    private void handleIPv4Failure(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.net.DhcpResults $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.Object mDhcpResultsLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpResults mDhcpResults>;

        virtualinvoke $r5.<android.net.DhcpResults: void clear()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        if $z0 == 0 goto label7;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("wifistatemachine handleIPv4Failure");

     label7:
        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void updateLinkProperties(int)>(i0);

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void handleIpConfigurationLost()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1, $r2, $r3;
        com.android.server.wifi.WifiConfigStore $r4;
        int $i0;
        java.lang.String $r5;
        com.android.server.wifi.WifiNative $r6;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r1.<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)>(null);

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        virtualinvoke $r2.<android.net.wifi.WifiInfo: void setMeteredHint(boolean)>(0);

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $r5 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        virtualinvoke $r4.<com.android.server.wifi.WifiConfigStore: void handleSSIDStateChange(int,boolean,java.lang.String,java.lang.String)>($i0, 0, "DHCP FAILURE", $r5);

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        virtualinvoke $r6.<com.android.server.wifi.WifiNative: boolean disconnect()>();

        return;
    }

    private void startSoftApWithConfig(android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.Thread $r2;
        com.android.server.wifi.WifiStateMachine$8 $r3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        $r2 = new java.lang.Thread;

        $r3 = new com.android.server.wifi.WifiStateMachine$8;

        specialinvoke $r3.<com.android.server.wifi.WifiStateMachine$8: void <init>(com.android.server.wifi.WifiStateMachine,android.net.wifi.WifiConfiguration)>(r0, r1);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    private java.lang.String macAddressFromRoute(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, r2, r6, r7, $r12, $r17, r26;
        java.io.BufferedReader r3, $r10;
        java.lang.String[] r5;
        java.lang.Throwable r8, $r23;
        java.io.FileReader $r11;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r18;
        int $i0;
        java.io.FileNotFoundException $r19;
        boolean $z0;
        java.io.IOException $r20, $r21, $r22, $r24, $r25;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        r2 = null;

        r3 = null;

     label01:
        $r10 = new java.io.BufferedReader;

        $r11 = new java.io.FileReader;

        specialinvoke $r11.<java.io.FileReader: void <init>(java.lang.String)>("/proc/net/arp");

        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

        r3 = $r10;

        virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label02:
        $r12 = virtualinvoke r3.<java.io.BufferedReader: java.lang.String readLine()>();

        r26 = $r12;

        if $r12 == null goto label05;

        r5 = virtualinvoke r26.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        $i0 = lengthof r5;

        if $i0 >= 6 goto label03;

        goto label02;

     label03:
        r6 = r5[0];

        r7 = r5[3];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label04;

        r2 = r7;

        goto label05;

     label04:
        goto label02;

     label05:
        if r2 != null goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Did not find remoteAddress {");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} in ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/proc/net/arp");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r17);

     label06:
        if r3 == null goto label07;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label07:
        goto label22;

     label08:
        $r25 := @caughtexception;

        goto label22;

     label09:
        $r19 := @caughtexception;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Could not open /proc/net/arp to lookup mac address");

     label10:
        if r3 == null goto label11;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label11:
        goto label22;

     label12:
        $r22 := @caughtexception;

        goto label22;

     label13:
        $r24 := @caughtexception;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("Could not read /proc/net/arp to lookup mac address");

     label14:
        if r3 == null goto label15;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label15:
        goto label22;

     label16:
        $r20 := @caughtexception;

        goto label22;

     label17:
        $r23 := @caughtexception;

        r8 = $r23;

     label18:
        if r3 == null goto label19;

        virtualinvoke r3.<java.io.BufferedReader: void close()>();

     label19:
        goto label21;

     label20:
        $r21 := @caughtexception;

     label21:
        throw r8;

     label22:
        return r2;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.FileNotFoundException from label01 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.io.IOException from label01 to label06 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label01 to label06 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    java.lang.String smToString(android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        $r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String smToString(int)>($i0);

        return $r2;
    }

    java.lang.String smToString(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, r6;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label100;
            case 2: goto label101;
            case 69632: goto label002;
            case 69636: goto label003;
            case 131083: goto label012;
            case 131084: goto label010;
            case 131085: goto label008;
            case 131086: goto label009;
            case 131087: goto label098;
            case 131088: goto label099;
            case 131089: goto label011;
            case 131099: goto label013;
            case 131100: goto label014;
            case 131101: goto label015;
            case 131102: goto label016;
            case 131103: goto label017;
            case 131124: goto label018;
            case 131125: goto label019;
            case 131126: goto label020;
            case 131127: goto label021;
            case 131128: goto label035;
            case 131129: goto label036;
            case 131130: goto label037;
            case 131131: goto label038;
            case 131133: goto label039;
            case 131134: goto label042;
            case 131135: goto label041;
            case 131143: goto label077;
            case 131144: goto label076;
            case 131145: goto label043;
            case 131146: goto label044;
            case 131147: goto label045;
            case 131148: goto label046;
            case 131149: goto label047;
            case 131152: goto label048;
            case 131154: goto label049;
            case 131155: goto label050;
            case 131156: goto label051;
            case 131157: goto label052;
            case 131158: goto label053;
            case 131159: goto label005;
            case 131160: goto label054;
            case 131161: goto label006;
            case 131162: goto label004;
            case 131165: goto label007;
            case 131166: goto label104;
            case 131167: goto label105;
            case 131168: goto label106;
            case 131204: goto label079;
            case 131205: goto label078;
            case 131206: goto label025;
            case 131207: goto label055;
            case 131208: goto label056;
            case 131209: goto label057;
            case 131210: goto label097;
            case 131211: goto label096;
            case 131212: goto label058;
            case 131213: goto label102;
            case 131214: goto label059;
            case 131215: goto label022;
            case 131216: goto label040;
            case 131217: goto label023;
            case 131218: goto label024;
            case 131219: goto label103;
            case 135189: goto label081;
            case 135190: goto label080;
            case 143361: goto label082;
            case 143371: goto label083;
            case 143372: goto label033;
            case 143373: goto label084;
            case 143374: goto label085;
            case 143375: goto label086;
            case 143376: goto label087;
            case 147457: goto label063;
            case 147458: goto label064;
            case 147459: goto label073;
            case 147460: goto label074;
            case 147461: goto label065;
            case 147462: goto label066;
            case 147463: goto label067;
            case 147464: goto label070;
            case 147465: goto label071;
            case 147468: goto label001;
            case 147469: goto label068;
            case 147470: goto label069;
            case 147471: goto label072;
            case 147499: goto label075;
            case 151553: goto label060;
            case 151556: goto label062;
            case 151559: goto label061;
            case 151562: goto label091;
            case 151563: goto label092;
            case 151564: goto label093;
            case 151565: goto label094;
            case 151566: goto label088;
            case 151567: goto label089;
            case 151568: goto label090;
            case 151569: goto label034;
            case 151572: goto label095;
            case 196609: goto label026;
            case 196610: goto label027;
            case 196611: goto label028;
            case 196612: goto label029;
            case 196613: goto label030;
            case 196614: goto label032;
            case 196615: goto label031;
            default: goto label107;
        };

     label001:
        r6 = "DRIVER_HUNG_EVENT";

        goto label108;

     label002:
        r6 = "AsyncChannel.CMD_CHANNEL_HALF_CONNECTED";

        goto label108;

     label003:
        r6 = "AsyncChannel.CMD_CHANNEL_DISCONNECTED";

        goto label108;

     label004:
        r6 = "CMD_SET_FREQUENCY_BAND";

        goto label108;

     label005:
        r6 = "CMD_DELAYED_NETWORK_DISCONNECT";

        goto label108;

     label006:
        r6 = "CMD_TEST_NETWORK_DISCONNECT";

        goto label108;

     label007:
        r6 = "CMD_OBTAINING_IP_ADDRESS_WATCHDOG_TIMER";

        goto label108;

     label008:
        r6 = "CMD_START_DRIVER";

        goto label108;

     label009:
        r6 = "CMD_STOP_DRIVER";

        goto label108;

     label010:
        r6 = "CMD_STOP_SUPPLICANT";

        goto label108;

     label011:
        r6 = "CMD_STOP_SUPPLICANT_FAILED";

        goto label108;

     label012:
        r6 = "CMD_START_SUPPLICANT";

        goto label108;

     label013:
        r6 = "CMD_REQUEST_AP_CONFIG";

        goto label108;

     label014:
        r6 = "CMD_RESPONSE_AP_CONFIG";

        goto label108;

     label015:
        r6 = "CMD_TETHER_STATE_CHANGE";

        goto label108;

     label016:
        r6 = "CMD_TETHER_NOTIFICATION_TIMED_OUT";

        goto label108;

     label017:
        r6 = "CMD_BLUETOOTH_ADAPTER_STATE_CHANGE";

        goto label108;

     label018:
        r6 = "CMD_ADD_OR_UPDATE_NETWORK";

        goto label108;

     label019:
        r6 = "CMD_REMOVE_NETWORK";

        goto label108;

     label020:
        r6 = "CMD_ENABLE_NETWORK";

        goto label108;

     label021:
        r6 = "CMD_ENABLE_ALL_NETWORKS";

        goto label108;

     label022:
        r6 = "CMD_AUTO_CONNECT";

        goto label108;

     label023:
        r6 = "CMD_AUTO_ROAM";

        goto label108;

     label024:
        r6 = "CMD_AUTO_SAVE_NETWORK";

        goto label108;

     label025:
        r6 = "CMD_BOOT_COMPLETED";

        goto label108;

     label026:
        r6 = "CMD_START_DHCP";

        goto label108;

     label027:
        r6 = "CMD_STOP_DHCP";

        goto label108;

     label028:
        r6 = "CMD_RENEW_DHCP";

        goto label108;

     label029:
        r6 = "CMD_PRE_DHCP_ACTION";

        goto label108;

     label030:
        r6 = "CMD_POST_DHCP_ACTION";

        goto label108;

     label031:
        r6 = "CMD_PRE_DHCP_ACTION_COMPLETE";

        goto label108;

     label032:
        r6 = "CMD_ON_QUIT";

        goto label108;

     label033:
        r6 = "WifiP2pServiceImpl.DISCONNECT_WIFI_REQUEST";

        goto label108;

     label034:
        r6 = "WifiManager.DISABLE_NETWORK";

        goto label108;

     label035:
        r6 = "CMD_BLACKLIST_NETWORK";

        goto label108;

     label036:
        r6 = "CMD_CLEAR_BLACKLIST";

        goto label108;

     label037:
        r6 = "CMD_SAVE_CONFIG";

        goto label108;

     label038:
        r6 = "CMD_GET_CONFIGURED_NETWORKS";

        goto label108;

     label039:
        r6 = "CMD_GET_ADAPTORS";

        goto label108;

     label040:
        r6 = "CMD_UNWANTED_NETWORK";

        goto label108;

     label041:
        r6 = "CMD_GET_LINK_LAYER_STATS";

        goto label108;

     label042:
        r6 = "CMD_GET_PRIVILEGED_CONFIGURED_NETWORKS";

        goto label108;

     label043:
        r6 = "CMD_DISCONNECT";

        goto label108;

     label044:
        r6 = "CMD_RECONNECT";

        goto label108;

     label045:
        r6 = "CMD_REASSOCIATE";

        goto label108;

     label046:
        r6 = "CMD_GET_CONNECTION_STATISTICS";

        goto label108;

     label047:
        r6 = "CMD_SET_HIGH_PERF_MODE";

        goto label108;

     label048:
        r6 = "CMD_SET_COUNTRY_CODE";

        goto label108;

     label049:
        r6 = "CMD_ENABLE_RSSI_POLL";

        goto label108;

     label050:
        r6 = "CMD_RSSI_POLL";

        goto label108;

     label051:
        r6 = "CMD_START_PACKET_FILTERING";

        goto label108;

     label052:
        r6 = "CMD_STOP_PACKET_FILTERING";

        goto label108;

     label053:
        r6 = "CMD_SET_SUSPEND_OPT_ENABLED";

        goto label108;

     label054:
        r6 = "CMD_NO_NETWORKS_PERIODIC_SCAN";

        goto label108;

     label055:
        r6 = "CMD_SET_BATCHED_SCAN";

        goto label108;

     label056:
        r6 = "CMD_START_NEXT_BATCHED_SCAN";

        goto label108;

     label057:
        r6 = "CMD_POLL_BATCHED_SCAN";

        goto label108;

     label058:
        r6 = "CMD_UPDATE_LINKPROPERTIES";

        goto label108;

     label059:
        r6 = "CMD_RELOAD_TLS_AND_RECONNECT";

        goto label108;

     label060:
        r6 = "CONNECT_NETWORK";

        goto label108;

     label061:
        r6 = "SAVE_NETWORK";

        goto label108;

     label062:
        r6 = "FORGET_NETWORK";

        goto label108;

     label063:
        r6 = "SUP_CONNECTION_EVENT";

        goto label108;

     label064:
        r6 = "SUP_DISCONNECTION_EVENT";

        goto label108;

     label065:
        r6 = "SCAN_RESULTS_EVENT";

        goto label108;

     label066:
        r6 = "SUPPLICANT_STATE_CHANGE_EVENT";

        goto label108;

     label067:
        r6 = "AUTHENTICATION_FAILURE_EVENT";

        goto label108;

     label068:
        r6 = "SSID_TEMP_DISABLED";

        goto label108;

     label069:
        r6 = "SSID_REENABLED";

        goto label108;

     label070:
        r6 = "WPS_SUCCESS_EVENT";

        goto label108;

     label071:
        r6 = "WPS_FAIL_EVENT";

        goto label108;

     label072:
        r6 = "SUP_REQUEST_IDENTITY";

        goto label108;

     label073:
        r6 = "NETWORK_CONNECTION_EVENT";

        goto label108;

     label074:
        r6 = "NETWORK_DISCONNECTION_EVENT";

        goto label108;

     label075:
        r6 = "ASSOCIATION_REJECTION_EVENT";

        goto label108;

     label076:
        r6 = "CMD_SET_OPERATIONAL_MODE";

        goto label108;

     label077:
        r6 = "CMD_START_SCAN";

        goto label108;

     label078:
        r6 = "CMD_DISABLE_P2P_RSP";

        goto label108;

     label079:
        r6 = "CMD_DISABLE_P2P_REQ";

        goto label108;

     label080:
        r6 = "GOOD_LINK_DETECTED";

        goto label108;

     label081:
        r6 = "POOR_LINK_DETECTED";

        goto label108;

     label082:
        r6 = "GROUP_CREATING_TIMED_OUT";

        goto label108;

     label083:
        r6 = "P2P_CONNECTION_CHANGED";

        goto label108;

     label084:
        r6 = "P2P.DISCONNECT_WIFI_RESPONSE";

        goto label108;

     label085:
        r6 = "P2P.SET_MIRACAST_MODE";

        goto label108;

     label086:
        r6 = "P2P.BLOCK_DISCOVERY";

        goto label108;

     label087:
        r6 = "P2P.SET_COUNTRY_CODE";

        goto label108;

     label088:
        r6 = "CANCEL_WPS";

        goto label108;

     label089:
        r6 = "CANCEL_WPS_FAILED";

        goto label108;

     label090:
        r6 = "CANCEL_WPS_SUCCEDED";

        goto label108;

     label091:
        r6 = "START_WPS";

        goto label108;

     label092:
        r6 = "START_WPS_SUCCEEDED";

        goto label108;

     label093:
        r6 = "WPS_FAILED";

        goto label108;

     label094:
        r6 = "WPS_COMPLETED";

        goto label108;

     label095:
        r6 = "RSSI_PKTCNT_FETCH";

        goto label108;

     label096:
        r6 = "CMD_IP_CONFIGURATION_LOST";

        goto label108;

     label097:
        r6 = "CMD_IP_CONFIGURATION_SUCCESSFUL";

        goto label108;

     label098:
        r6 = "CMD_STATIC_IP_SUCCESSFUL";

        goto label108;

     label099:
        r6 = "CMD_STATIC_IP_FAILURE";

        goto label108;

     label100:
        r6 = "DHCP_SUCCESS";

        goto label108;

     label101:
        r6 = "DHCP_FAILURE";

        goto label108;

     label102:
        r6 = "CMD_TARGET_BSSID";

        goto label108;

     label103:
        r6 = "CMD_ASSOCIATED_BSSID";

        goto label108;

     label104:
        r6 = "CMD_ROAM_WATCHDOG_TIMER";

        goto label108;

     label105:
        r6 = "CMD_SCREEN_STATE_CHANGED";

        goto label108;

     label106:
        r6 = "CMD_DISCONNECTING_WATCHDOG_TIMER";

        goto label108;

     label107:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("what:");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label108:
        return r6;
    }

    void registerConnected()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        int $i1, $i2, $i4, $i5;
        com.android.server.wifi.WifiConfigStore $r2;
        long $l3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        if $i1 == -1 goto label2;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        r1 = virtualinvoke $r2.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i2);

        if r1 == null goto label1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<android.net.wifi.WifiConfiguration: long lastConnected> = $l3;

        r1.<android.net.wifi.WifiConfiguration: boolean autoJoinBailedDueToLowRssi> = 0;

        virtualinvoke r1.<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>(0);

        r1.<android.net.wifi.WifiConfiguration: int numConnectionFailures> = 0;

        r1.<android.net.wifi.WifiConfiguration: int numIpConfigFailures> = 0;

        r1.<android.net.wifi.WifiConfiguration: int numAuthFailures> = 0;

        $i4 = r1.<android.net.wifi.WifiConfiguration: int numAssociation>;

        $i5 = $i4 + 1;

        r1.<android.net.wifi.WifiConfiguration: int numAssociation> = $i5;

     label1:
        r0.<com.android.server.wifi.WifiStateMachine: int mBadLinkspeedcount> = 0;

     label2:
        return;
    }

    void registerDisconnected()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        int $i1, $i2;
        com.android.server.wifi.WifiConfigStore $r2;
        long $l3;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        if $i1 == -1 goto label1;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i2 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        r1 = virtualinvoke $r2.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i2);

        if r1 == null goto label1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<android.net.wifi.WifiConfiguration: long lastDisconnected> = $l3;

     label1:
        return;
    }

    void noteWifiDisabledWhileAssociated()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.net.wifi.WifiConfiguration r1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        android.net.wifi.WifiInfo $r2, $r5, $r6, $r9;
        com.android.internal.util.IState $r3;
        com.android.internal.util.State $r4;
        com.android.server.wifi.WifiConfigStore $r7, $r8, $r10, $r11, $r12, $r13;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r2 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        i0 = virtualinvoke $r2.<android.net.wifi.WifiInfo: int getRssi()>();

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        $r3 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState>;

        if $r3 != $r4 goto label15;

        if i0 == -127 goto label15;

        if r1 == null goto label15;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        z0 = virtualinvoke $r5.<android.net.wifi.WifiInfo: boolean is24GHz()>();

        if z0 == 0 goto label01;

        $r13 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i14 = $r13.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi24>;

        if i0 < $i14 goto label02;

     label01:
        if z0 != 0 goto label03;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i12 = $r11.<com.android.server.wifi.WifiConfigStore: int thresholdBadRssi5>;

        if i0 >= $i12 goto label03;

     label02:
        $z6 = 1;

        goto label04;

     label03:
        $z6 = 0;

     label04:
        z1 = $z6;

        if z0 == 0 goto label05;

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i13 = $r12.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi24>;

        if i0 < $i13 goto label06;

     label05:
        if z0 != 0 goto label07;

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i10 = virtualinvoke $r9.<android.net.wifi.WifiInfo: int getRssi()>();

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i11 = $r10.<com.android.server.wifi.WifiConfigStore: int thresholdLowRssi5>;

        if $i10 >= $i11 goto label07;

     label06:
        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        z2 = $z5;

        if z0 == 0 goto label09;

        $r8 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i9 = $r8.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi24>;

        if i0 >= $i9 goto label10;

     label09:
        if z0 != 0 goto label11;

        $r6 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        $i7 = virtualinvoke $r6.<android.net.wifi.WifiInfo: int getRssi()>();

        $r7 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i8 = $r7.<com.android.server.wifi.WifiConfigStore: int thresholdGoodRssi5>;

        if $i7 < $i8 goto label11;

     label10:
        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        z3 = $z4;

        if z1 == 0 goto label13;

        $i6 = r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI>;

        $i5 = $i6 + 1;

        r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableLowRSSI> = $i5;

        goto label15;

     label13:
        if z2 == 0 goto label14;

        $i4 = r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI>;

        $i3 = $i4 + 1;

        r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableBadRSSI> = $i3;

        goto label15;

     label14:
        if z3 != 0 goto label15;

        $i1 = r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI>;

        $i2 = $i1 + 1;

        r1.<android.net.wifi.WifiConfiguration: int numUserTriggeredWifiDisableNotHighRSSI> = $i2;

     label15:
        return;
    }

    void setInternetAccessState(boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r1 == null goto label1;

        r1.<android.net.wifi.WifiConfiguration: boolean noInternetAccess> = z0;

     label1:
        return;
    }

    android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;
        com.android.server.wifi.WifiConfigStore $r1;
        android.net.wifi.WifiConfiguration $r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r2 = virtualinvoke $r1.<com.android.server.wifi.WifiConfigStore: android.net.wifi.WifiConfiguration getWifiConfiguration(int)>($i1);

        return $r2;
    }

    android.net.wifi.ScanResult getCurrentScanResult()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.String r2;
        android.net.wifi.WifiInfo $r3;
        java.util.HashMap $r4, $r5;
        java.lang.Object $r6;
        android.net.wifi.ScanResult $r7;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        r2 = virtualinvoke $r3.<android.net.wifi.WifiInfo: java.lang.String getBSSID()>();

        if r2 != null goto label2;

        r2 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

     label2:
        $r4 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r4 != null goto label3;

        return null;

     label3:
        $r5 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r7 = (android.net.wifi.ScanResult) $r6;

        return $r7;
    }

    java.lang.String getCurrentBSSID()
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        return $r1;
    }

    void unwantedNetwork(int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessage(int,int)>(131216, i0);

        return;
    }

    boolean startScanForConfiguration(android.net.wifi.WifiConfiguration, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.util.HashSet r2;
        java.lang.StringBuilder r3, $r10, $r11, $r12, $r15, $r16, $r18, $r19, $r20, $r22;
        java.util.Iterator r4;
        java.lang.Integer r5;
        java.util.HashMap $r6, $r8;
        java.util.BitSet $r7;
        int $i0, $i1, $i2, $i3;
        com.android.server.wifi.WifiConfigStore $r9;
        java.lang.String $r13, $r14, $r17, $r21, $r23, $r24;
        java.lang.Object $r26;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        z0 := @parameter1: boolean;

        if r1 != null goto label01;

        return 0;

     label01:
        $r6 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        if $r6 == null goto label02;

        $r7 = r1.<android.net.wifi.WifiConfiguration: java.util.BitSet allowedKeyManagement>;

        $z2 = virtualinvoke $r7.<java.util.BitSet: boolean get(int)>(1);

        if $z2 == 0 goto label02;

        $r8 = r1.<android.net.wifi.WifiConfiguration: java.util.HashMap scanResultCache>;

        $i0 = virtualinvoke $r8.<java.util.HashMap: int size()>();

        if $i0 <= 6 goto label03;

     label02:
        return 1;

     label03:
        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        r2 = virtualinvoke $r9.<com.android.server.wifi.WifiConfigStore: java.util.HashSet makeChannelList(android.net.wifi.WifiConfiguration,int,boolean)>(r1, 3600000, z0);

        if r2 == null goto label09;

        $i1 = virtualinvoke r2.<java.util.HashSet: int size()>();

        if $i1 == 0 goto label09;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        r3 = $r15;

        z1 = 1;

        r4 = virtualinvoke r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label04:
        $z4 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r26 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Integer) $r26;

        if z1 != 0 goto label05;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label05:
        $r24 = virtualinvoke r5.<java.lang.Integer: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        z1 = 0;

        goto label04;

     label06:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiStateMachine starting scan for ");

        $r17 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r21);

        $r23 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $z5 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean startScanNative(int,java.lang.String)>(1, $r23);

        if $z5 == 0 goto label07;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void noteScanStart(int,android.os.WorkSource)>(-2, null);

        $i3 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_OK>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i3;

        goto label08;

     label07:
        $i2 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_HANDLING_ERROR>;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = $i2;

     label08:
        return 1;

     label09:
        $z3 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z3 == 0 goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WifiStateMachine no channels for ");

        $r13 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r14);

     label10:
        return 0;
    }

    void clearCurrentConfigBSSID(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        android.net.wifi.WifiConfiguration r2;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration getCurrentWifiConfiguration()>();

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void clearConfigBSSID(android.net.wifi.WifiConfiguration,java.lang.String)>(r2, r1);

        return;
    }

    void clearConfigBSSID(android.net.wifi.WifiConfiguration, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;
        java.lang.String r2, $r7, $r10, $r12, $r15, $r20, $r21, $r23;
        boolean $z0, $z1;
        com.android.server.wifi.WifiConfigStore $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r22, $r24;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.net.wifi.WifiConfiguration;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z0 == 0 goto label2;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" config ");

        $r20 = virtualinvoke r1.<android.net.wifi.WifiConfiguration: java.lang.String configKey()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" config.bssid ");

        $r21 = r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r23);

     label2:
        r1.<android.net.wifi.WifiConfiguration: java.lang.String autoJoinBSSID> = "any";

        r1.<android.net.wifi.WifiConfiguration: java.lang.String BSSID> = "any";

        $z1 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        if $z1 == 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r1.<android.net.wifi.WifiConfiguration: java.lang.String SSID>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nid=");

        $i0 = r1.<android.net.wifi.WifiConfiguration: int networkId>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r12);

     label3:
        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        virtualinvoke $r3.<com.android.server.wifi.WifiConfigStore: void saveWifiConfigBSSID(android.net.wifi.WifiConfiguration)>(r1);

        return;
    }

    private void sendConnectedState()
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkInfo$DetailedState $r1, $r2, $r7, $r8;
        int $i0, $i1;
        com.android.server.wifi.WifiConfigStore $r3, $r5, $r9;
        java.lang.String $r4, $r6, $r10;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r11, $r12;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        $r1 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CAPTIVE_PORTAL_CHECK>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)>($r1);

        $r3 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r2 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CAPTIVE_PORTAL_CHECK>;

        virtualinvoke $r3.<com.android.server.wifi.WifiConfigStore: void updateStatus(int,android.net.NetworkInfo$DetailedState)>($i0, $r2);

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>($r4);

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $r6 = virtualinvoke $r5.<com.android.server.wifi.WifiConfigStore: java.lang.String getLastSelectedConfiguration()>();

        if $r6 == null goto label1;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        if $r11 == null goto label1;

        $r12 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        virtualinvoke $r12.<com.android.server.wifi.WifiStateMachine$WifiNetworkAgent: void explicitlySelected()>();

     label1:
        $r7 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)>($r7);

        $r9 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        $i1 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        $r8 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        virtualinvoke $r9.<com.android.server.wifi.WifiConfigStore: void updateStatus(int,android.net.NetworkInfo$DetailedState)>($i1, $r8);

        $r10 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>($r10);

        return;
    }

    private void replyToMessage(android.os.Message, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, r2;
        int i0;
        android.os.Messenger $r3;
        com.android.internal.util.AsyncChannel $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        $r3 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message obtainMessageWithArg2(android.os.Message)>(r1);

        r2.<android.os.Message: int what> = i0;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    private void replyToMessage(android.os.Message, int, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, r2;
        int i0, i1;
        android.os.Messenger $r3;
        com.android.internal.util.AsyncChannel $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r3 != null goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message obtainMessageWithArg2(android.os.Message)>(r1);

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: int arg1> = i1;

        $r4 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r2);

        return;
    }

    private void replyToMessage(android.os.Message, int, java.lang.Object)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, r3;
        int i0;
        java.lang.Object r2;
        android.os.Messenger $r4;
        com.android.internal.util.AsyncChannel $r5;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        $r4 = r1.<android.os.Message: android.os.Messenger replyTo>;

        if $r4 != null goto label1;

        return;

     label1:
        r3 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message obtainMessageWithArg2(android.os.Message)>(r1);

        r3.<android.os.Message: int what> = i0;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        $r5 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mReplyChannel>;

        virtualinvoke $r5.<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>(r1, r3);

        return;
    }

    private android.os.Message obtainMessageWithArg2(android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1, r2;
        int $i0;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: android.os.Message;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $i0 = r1.<android.os.Message: int arg2>;

        r2.<android.os.Message: int arg2> = $i0;

        return r2;
    }

    private static int parseHex(char)
    {
        char c0;
        java.lang.NumberFormatException $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if 97 > c0 goto label2;

        if c0 > 102 goto label2;

        $i3 = c0 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        if 65 > c0 goto label3;

        if c0 > 70 goto label3;

        $i1 = c0 - 65;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r0 = new java.lang.NumberFormatException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid hex digit");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    private byte[] parseHex(java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1, $r8;
        byte[] r2, $r7;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i17, $i18, $i19;
        byte b3, $b11;
        char $c12, $c16;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.NumberFormatException $r4;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = newarray (byte)[0];

        return $r7;

     label1:
        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        $i5 = $i4 % 2;

        if $i5 == 0 goto label2;

        $r4 = new java.lang.NumberFormatException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a valid hex string");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        $i7 = $i6 / 2;

        $i8 = $i7 + 1;

        r2 = newarray (byte)[$i8];

        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        $i10 = $i9 / 2;

        $b11 = (byte) $i10;

        r2[0] = $b11;

        i0 = 0;

        i1 = 1;

     label3:
        $i13 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i13 goto label4;

        $c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        $i15 = staticinvoke <com.android.server.wifi.WifiStateMachine: int parseHex(char)>($c12);

        $i17 = $i15 * 16;

        $i14 = i0 + 1;

        $c16 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i14);

        $i19 = staticinvoke <com.android.server.wifi.WifiStateMachine: int parseHex(char)>($c16);

        i2 = $i17 + $i19;

        $i18 = i2 & 255;

        b3 = (byte) $i18;

        r2[i1] = b3;

        i0 = i0 + 2;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r2;
    }

    private static java.lang.String makeHex(byte[])
    {
        byte[] r0, r2;
        java.lang.StringBuilder r1, $r3;
        int i0, i1;
        byte b2;
        java.lang.String $r4, $r7;
        java.lang.Object[] $r5;
        java.lang.Byte $r6;

        r0 := @parameter0: byte[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        b2 = r2[i1];

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b2);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String makeHex(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3, $r6;
        java.lang.Object[] $r4;
        byte $b4;
        java.lang.Byte $r5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r4 = newarray (java.lang.Object)[1];

        $i3 = i0 + i2;

        $b4 = r0[$i3];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b4);

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static byte[] concat(byte[], byte[], byte[])
    {
        byte[] r0, r1, r2, r3, r4, r5, r6;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i21, $i22, i24, i25, i27, i28, i29;
        byte b4, $b18, $b19, $b23, b26, b30;

        r0 := @parameter0: byte[];

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

        $i6 = lengthof r0;

        $i5 = lengthof r1;

        $i8 = $i6 + $i5;

        $i7 = lengthof r2;

        i0 = $i8 + $i7;

        $i9 = lengthof r0;

        if $i9 == 0 goto label1;

        i0 = i0 + 1;

     label1:
        $i10 = lengthof r1;

        if $i10 == 0 goto label2;

        i0 = i0 + 1;

     label2:
        $i12 = lengthof r2;

        if $i12 == 0 goto label3;

        i0 = i0 + 1;

     label3:
        r3 = newarray (byte)[i0];

        i1 = 0;

        $i11 = lengthof r0;

        if $i11 == 0 goto label5;

        $i22 = lengthof r0;

        $i21 = $i22 & 255;

        $b23 = (byte) $i21;

        r3[i1] = $b23;

        i1 = i1 + 1;

        r4 = r0;

        i2 = lengthof r4;

        i3 = 0;

     label4:
        if i3 >= i2 goto label5;

        b4 = r4[i3];

        r3[i1] = b4;

        i1 = i1 + 1;

        i3 = i3 + 1;

        goto label4;

     label5:
        $i14 = lengthof r1;

        if $i14 == 0 goto label7;

        $i17 = lengthof r1;

        $i20 = $i17 & 255;

        $b19 = (byte) $i20;

        r3[i1] = $b19;

        i1 = i1 + 1;

        r5 = r1;

        i24 = lengthof r5;

        i25 = 0;

     label6:
        if i25 >= i24 goto label7;

        b26 = r5[i25];

        r3[i1] = b26;

        i1 = i1 + 1;

        i25 = i25 + 1;

        goto label6;

     label7:
        $i13 = lengthof r2;

        if $i13 == 0 goto label9;

        $i16 = lengthof r2;

        $i15 = $i16 & 255;

        $b18 = (byte) $i15;

        r3[i1] = $b18;

        i27 = i1 + 1;

        r6 = r2;

        i28 = lengthof r6;

        i29 = 0;

     label8:
        if i29 >= i28 goto label9;

        b30 = r6[i29];

        r3[i27] = b30;

        i27 = i27 + 1;

        i29 = i29 + 1;

        goto label8;

     label9:
        return r3;
    }

    void handleGsmAuthRequest(com.android.server.wifi.WifiStateMachine$SimAuthRequestData)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$SimAuthRequestData r1;
        android.telephony.TelephonyManager r2;
        java.lang.StringBuilder r3, $r12, $r14, $r15, $r16, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r46, $r47, $r48;
        java.lang.String[] r4;
        int i0, i1, i3, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r5, r6, r8, r9, $r17, $r22, $r28, $r31, $r32, $r34, $r43, $r49, r51, r52;
        byte[] r7, r50;
        byte b2, b4;
        android.content.Context $r10;
        android.net.wifi.WifiConfiguration $r11, $r44;
        java.lang.Object $r13;
        com.android.server.wifi.WifiNative $r18;
        java.lang.NumberFormatException $r45;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.server.wifi.WifiStateMachine$SimAuthRequestData;

        $r11 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration targetWificonfiguration>;

        if $r11 == null goto label01;

        $r44 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration targetWificonfiguration>;

        $i9 = $r44.<android.net.wifi.WifiConfiguration: int networkId>;

        $i8 = r1.<com.android.server.wifi.WifiStateMachine$SimAuthRequestData: int networkId>;

        if $i9 != $i8 goto label02;

     label01:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>("id matches targetWifiConfiguration");

        goto label03;

     label02:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>("id does not match targetWifiConfiguration");

        return;

     label03:
        $r10 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        $r13 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r2 = (android.telephony.TelephonyManager) $r13;

        if r2 == null goto label12;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r3 = $r12;

        r4 = r1.<com.android.server.wifi.WifiStateMachine$SimAuthRequestData: java.lang.String[] challenges>;

        i0 = lengthof r4;

        i1 = 0;

     label04:
        if i1 >= i0 goto label11;

        r5 = r4[i1];

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RAND = ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>($r22);

     label05:
        r50 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: byte[] parseHex(java.lang.String)>(r5);

     label06:
        goto label08;

     label07:
        $r45 := @caughtexception;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("malformed challenge");

        goto label10;

     label08:
        r51 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r50, 2);

        r6 = virtualinvoke r2.<android.telephony.TelephonyManager: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>(2, r51);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Raw Response - ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logv(java.lang.String)>($r28);

        if r6 == null goto label09;

        $i6 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i6 <= 4 goto label09;

        r7 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r6, 0);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hex Response -");

        $r34 = staticinvoke <com.android.server.wifi.WifiStateMachine: java.lang.String makeHex(byte[])>(r7);

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logv(java.lang.String)>($r32);

        b2 = r7[0];

        r8 = staticinvoke <com.android.server.wifi.WifiStateMachine: java.lang.String makeHex(byte[],int,int)>(r7, 1, b2);

        i3 = 1 + b2;

        b4 = r7[i3];

        $i7 = 1 + i3;

        r9 = staticinvoke <com.android.server.wifi.WifiStateMachine: java.lang.String makeHex(byte[],int,int)>(r7, $i7, b4);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("kc:");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sres:");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logv(java.lang.String)>($r49);

        goto label10;

     label09:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad response - ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>($r31);

     label10:
        i1 = i1 + 1;

        goto label04;

     label11:
        r52 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Supplicant Response -");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logv(java.lang.String)>($r17);

        $r18 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        $i5 = r1.<com.android.server.wifi.WifiStateMachine$SimAuthRequestData: int networkId>;

        virtualinvoke $r18.<com.android.server.wifi.WifiNative: boolean simAuthResponse(int,java.lang.String)>($i5, r52);

        goto label13;

     label12:
        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void loge(java.lang.String)>("could not get telephony manager");

     label13:
        return;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
    }

    void handle3GAuthRequest(com.android.server.wifi.WifiStateMachine$SimAuthRequestData)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$SimAuthRequestData r1;

        r0 := @this: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter0: com.android.server.wifi.WifiStateMachine$SimAuthRequestData;

        return;
    }

    static int access$008()
    {
        int $i0, $i1;

        $i0 = <com.android.server.wifi.WifiStateMachine: int sScanAlarmIntentCount>;

        $i1 = $i0 + 1;

        <com.android.server.wifi.WifiStateMachine: int sScanAlarmIntentCount> = $i1;

        return $i0;
    }

    static boolean access$100()
    {
        boolean $z0;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean VDBG>;

        return $z0;
    }

    static void access$200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startNextBatchedScanAsync()>();

        return;
    }

    static android.content.Context access$300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.content.Context mContext>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mUserWantsSuspendOpt>;

        return $r1;
    }

    static java.lang.String access$500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mInterfaceName>;

        return $r1;
    }

    static android.os.INetworkManagementService access$600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.INetworkManagementService $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.os.INetworkManagementService mNwService>;

        return $r1;
    }

    static boolean access$700()
    {
        boolean $z0;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean DBG>;

        return $z0;
    }

    static void access$800(com.android.server.wifi.WifiStateMachine, android.os.Message, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void logStateAndMessage(android.os.Message,java.lang.String)>(r1, r2);

        return;
    }

    static com.android.internal.util.AsyncChannel access$900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiP2pChannel>;

        return $r1;
    }

    static boolean access$1002(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mBluetoothConnectionActive> = z0;

        return z0;
    }

    static void access$1100(com.android.server.wifi.WifiStateMachine, android.os.Message, int, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        int i0, i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void replyToMessage(android.os.Message,int,int)>(r1, i0, i1);

        return;
    }

    static void access$1200(com.android.server.wifi.WifiStateMachine, android.os.Message, int, java.lang.Object)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        int i0;
        java.lang.Object r2;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.Object;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void replyToMessage(android.os.Message,int,java.lang.Object)>(r1, i0, r2);

        return;
    }

    static boolean access$1302(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableRssiPolling> = z0;

        return z0;
    }

    static void access$1400(com.android.server.wifi.WifiStateMachine, int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setSuspendOptimizations(int,boolean)>(i0, z0);

        return;
    }

    static java.lang.String access$1500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mPersistedCountryCode>;

        return $r1;
    }

    static java.util.concurrent.atomic.AtomicInteger access$1600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mCountryCodeSequence>;

        return $r1;
    }

    static void access$1700(com.android.server.wifi.WifiStateMachine, int, int, int, java.lang.Object)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1, i2;
        java.lang.Object r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.Object;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessageAtFrontOfQueue(int,int,int,java.lang.Object)>(i0, i1, i2, r1);

        return;
    }

    static void access$1800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void checkAndSetConnectivityInstance()>();

        return;
    }

    static com.android.server.wifi.WifiStateMachine$WifiNetworkFactory access$1902(com.android.server.wifi.WifiStateMachine, com.android.server.wifi.WifiStateMachine$WifiNetworkFactory)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$WifiNetworkFactory r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.server.wifi.WifiStateMachine$WifiNetworkFactory;

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkFactory mNetworkFactory> = r1;

        return r1;
    }

    static android.net.NetworkCapabilities access$2000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkCapabilities $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkCapabilities mNetworkCapabilitiesFilter>;

        return $r1;
    }

    static com.android.server.wifi.WifiStateMachine$WifiNetworkFactory access$1900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$WifiNetworkFactory $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkFactory mNetworkFactory>;

        return $r1;
    }

    static android.net.ConnectivityManager access$2100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.ConnectivityManager $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.ConnectivityManager mCm>;

        return $r1;
    }

    static boolean access$2200(com.android.server.wifi.WifiStateMachine, int, int, android.os.Bundle)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0, i1;
        android.os.Bundle r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: android.os.Bundle;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean recordBatchedScanSettings(int,int,android.os.Bundle)>(i0, i1, r1);

        return $z0;
    }

    static void access$2300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleBatchedScanPollRequest()>();

        return;
    }

    static void access$2400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startNextBatchedScan()>();

        return;
    }

    static void access$2500(com.android.server.wifi.WifiStateMachine, boolean, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0, z1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleScreenStateChanged(boolean,boolean)>(z0, z1);

        return;
    }

    static int access$2602(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int messageHandlingStatus> = i0;

        return i0;
    }

    static int access$2700()
    {
        int $i0;

        $i0 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_DISCARD>;

        return $i0;
    }

    static android.net.DhcpStateMachine access$2802(com.android.server.wifi.WifiStateMachine, android.net.DhcpStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpStateMachine r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.DhcpStateMachine;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine> = r1;

        return r1;
    }

    static android.os.PowerManager$WakeLock access$2900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mSuspendWakeLock>;

        return $r1;
    }

    static int access$3000()
    {
        int $i0;

        $i0 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_FAIL>;

        return $i0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$3100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mP2pConnected>;

        return $r1;
    }

    static boolean access$3202(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mTemporarilyDisconnectWifi> = z0;

        return z0;
    }

    static void access$3300(com.android.server.wifi.WifiStateMachine, android.os.Message, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void replyToMessage(android.os.Message,int)>(r1, i0);

        return;
    }

    static void access$3400(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void updateLinkProperties(int)>(i0);

        return;
    }

    static android.net.wifi.WifiConnectionStatistics access$3500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConnectionStatistics $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConnectionStatistics mWifiConnectionStatistics>;

        return $r1;
    }

    static com.android.server.wifi.WifiNative access$3600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiNative $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiNative mWifiNative>;

        return $r1;
    }

    static com.android.internal.util.AsyncChannel access$902(com.android.server.wifi.WifiStateMachine, com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.AsyncChannel;

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiP2pChannel> = r1;

        return r1;
    }

    static com.android.server.wifi.p2p.WifiP2pServiceImpl access$3700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.p2p.WifiP2pServiceImpl $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.p2p.WifiP2pServiceImpl mWifiP2pServiceImpl>;

        return $r1;
    }

    static com.android.internal.util.AsyncChannel access$3800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiApConfigChannel>;

        return $r1;
    }

    static com.android.internal.util.AsyncChannel access$3802(com.android.server.wifi.WifiStateMachine, com.android.internal.util.AsyncChannel)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.AsyncChannel r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.AsyncChannel;

        r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.AsyncChannel mWifiApConfigChannel> = r1;

        return r1;
    }

    static boolean access$3900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mP2pSupported>;

        return $z0;
    }

    static com.android.server.wifi.WifiMonitor access$4000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiMonitor $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiMonitor mWifiMonitor>;

        return $r1;
    }

    static void access$4100(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setWifiState(int)>(i0);

        return;
    }

    static com.android.internal.util.State access$4200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStartingState>;

        return $r1;
    }

    static void access$4300(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$4400(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setWifiApState(int)>(i0);

        return;
    }

    static com.android.internal.util.State access$4500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartingState>;

        return $r1;
    }

    static void access$4600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static java.lang.String access$4700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mPrimaryDeviceType>;

        return $r1;
    }

    static int access$4802(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantRestartCount> = i0;

        return i0;
    }

    static com.android.server.wifi.SupplicantStateTracker access$4900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.SupplicantStateTracker $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.SupplicantStateTracker mSupplicantStateTracker>;

        return $r1;
    }

    static java.lang.String access$5002(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid> = r1;

        return r1;
    }

    static int access$5102(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId> = i0;

        return i0;
    }

    static int access$5202(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mLastSignalLevel> = i0;

        return i0;
    }

    static android.net.wifi.WifiInfo access$5300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiInfo $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiInfo mWifiInfo>;

        return $r1;
    }

    static com.android.server.wifi.WifiConfigStore access$5400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiConfigStore $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiConfigStore mWifiConfigStore>;

        return $r1;
    }

    static void access$5500(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendSupplicantConnectionChangedBroadcast(boolean)>(z0);

        return;
    }

    static com.android.internal.util.State access$5600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartedState>;

        return $r1;
    }

    static void access$5700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$4804(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantRestartCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantRestartCount> = $i1;

        return $i1;
    }

    static com.android.internal.util.State access$5800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mInitialState>;

        return $r1;
    }

    static void access$5900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$4800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantRestartCount>;

        return $i0;
    }

    static void access$6000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$6100()
    {
        int $i0;

        $i0 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_DEFERRED>;

        return $i0;
    }

    static void access$6200(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static android.net.NetworkInfo access$6300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkInfo $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.NetworkInfo mNetworkInfo>;

        return $r1;
    }

    static com.android.server.wifi.WifiStateMachine$WifiNetworkAgent access$6400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent>;

        return $r1;
    }

    static long access$6502(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mSupplicantScanIntervalMs> = l0;

        return l0;
    }

    static long access$6500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long mSupplicantScanIntervalMs>;

        return $l0;
    }

    static boolean access$6600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean setRandomMacOui()>();

        return $z0;
    }

    static com.android.internal.util.State access$6700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWaitForP2pDisableState>;

        return $r1;
    }

    static void access$6800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$6900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSupplicantStoppingState>;

        return $r1;
    }

    static void access$7000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$7100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleSupplicantConnectionLoss()>();

        return;
    }

    static void access$7200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleNetworkDisconnect()>();

        return;
    }

    static void access$7300(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$7400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$7500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void noteScanEnd()>();

        return;
    }

    static void access$7600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setScanResults()>();

        return;
    }

    static boolean access$7700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing>;

        return $z0;
    }

    static void access$7800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendScanResultsAvailableBroadcast()>();

        return;
    }

    static boolean access$7902(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing> = z0;

        return z0;
    }

    static boolean access$7702(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsFullScanOngoing> = z0;

        return z0;
    }

    static java.util.Queue access$8000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.Queue $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.Queue mBufferedScanMsg>;

        return $r1;
    }

    static int access$8102(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mOperationalMode> = i0;

        return i0;
    }

    static java.lang.String access$8202(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID> = r1;

        return r1;
    }

    static android.net.DhcpStateMachine access$2800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpStateMachine $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.DhcpStateMachine mDhcpStateMachine>;

        return $r1;
    }

    static int access$8304(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantStopFailureToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantStopFailureToken> = $i1;

        return $i1;
    }

    static void access$8400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$8300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mSupplicantStopFailureToken>;

        return $i0;
    }

    static void access$8500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$8600(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static int access$8704(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDriverStartToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mDriverStartToken> = $i1;

        return $i1;
    }

    static android.net.wifi.SupplicantState access$8800(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;
        android.net.wifi.SupplicantState $r2;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        $r2 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.SupplicantState handleSupplicantStateChange(android.os.Message)>(r1);

        return $r2;
    }

    static void access$8900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$8700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDriverStartToken>;

        return $i0;
    }

    static com.android.internal.util.State access$9000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppedState>;

        return $r1;
    }

    static void access$9100(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.os.PowerManager$WakeLock access$9200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static void access$9300(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static boolean access$9400()
    {
        boolean $z0;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean PDBG>;

        return $z0;
    }

    static boolean access$9502(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mIsRunning> = z0;

        return z0;
    }

    static boolean access$9602(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mInDelayedStop> = z0;

        return z0;
    }

    static int access$9708(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDelayedStopCounter>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mDelayedStopCounter> = $i1;

        return $i0;
    }

    static boolean access$1000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mBluetoothConnectionActive>;

        return $z0;
    }

    static void access$9800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setCountryCode()>();

        return;
    }

    static void access$9900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setFrequencyBand()>();

        return;
    }

    static boolean access$10000(com.android.server.wifi.WifiStateMachine, android.net.NetworkInfo$DetailedState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.NetworkInfo$DetailedState r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.NetworkInfo$DetailedState;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean setNetworkDetailedState(android.net.NetworkInfo$DetailedState)>(r1);

        return $z0;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$10100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mFilteringMulticastV4Packets>;

        return $r1;
    }

    static boolean access$10202(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean mDhcpActive> = z0;

        return z0;
    }

    static void access$10300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startBatchedScan()>();

        return;
    }

    static int access$8100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mOperationalMode>;

        return $i0;
    }

    static com.android.internal.util.State access$10400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mScanModeState>;

        return $r1;
    }

    static void access$10500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$10600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectedState>;

        return $r1;
    }

    static void access$10700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static java.util.concurrent.atomic.AtomicBoolean access$10800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicBoolean mScreenBroadcastReceived>;

        return $r1;
    }

    static int access$10900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mSuspendOptNeedsDisabled>;

        return $i0;
    }

    static void access$11000(com.android.server.wifi.WifiStateMachine, int, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r1 := @parameter2: android.os.Message;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleScanRequest(int,android.os.Message)>(i0, r1);

        return;
    }

    static android.net.wifi.BatchedScanSettings access$11100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.BatchedScanSettings $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.BatchedScanSettings mBatchedScanSettings>;

        return $r1;
    }

    static void access$11200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void stopBatchedScan()>();

        return;
    }

    static java.lang.String access$1502(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mPersistedCountryCode> = r1;

        return r1;
    }

    static java.lang.String access$11300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastSetCountryCode>;

        return $r1;
    }

    static java.lang.String access$11302(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastSetCountryCode> = r1;

        return r1;
    }

    static java.util.concurrent.atomic.AtomicInteger access$11400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.concurrent.atomic.AtomicInteger $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.util.concurrent.atomic.AtomicInteger mFrequencyBand>;

        return $r1;
    }

    static boolean access$11500(com.android.server.wifi.WifiStateMachine, int, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean startScanNative(int,java.lang.String)>(i0, r1);

        return $z0;
    }

    static boolean access$9600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mInDelayedStop>;

        return $z0;
    }

    static int access$9700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDelayedStopCounter>;

        return $i0;
    }

    static android.app.PendingIntent access$11602(com.android.server.wifi.WifiStateMachine, android.app.PendingIntent)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.app.PendingIntent r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.app.PendingIntent;

        r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mDriverStopIntent> = r1;

        return r1;
    }

    static int access$11700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDriverStopDelayMs>;

        return $i0;
    }

    static android.app.PendingIntent access$11600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.app.PendingIntent $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.app.PendingIntent mDriverStopIntent>;

        return $r1;
    }

    static android.app.AlarmManager access$11800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.app.AlarmManager $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.app.AlarmManager mAlarmManager>;

        return $r1;
    }

    static com.android.internal.util.IState access$11900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static void access$12000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$12100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStoppingState>;

        return $r1;
    }

    static void access$12200(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$12300(com.android.server.wifi.WifiStateMachine, int, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setSuspendOptimizationsNative(int,boolean)>(i0, z0);

        return;
    }

    static java.util.List access$12402(com.android.server.wifi.WifiStateMachine, java.util.List)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.List r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.util.List;

        r0.<com.android.server.wifi.WifiStateMachine: java.util.List mScanResults> = r1;

        return r1;
    }

    static android.os.Message access$12500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message getCurrentMessage()>();

        return $r1;
    }

    static void access$12600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$12700(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$12800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$12900(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$13000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$13100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDriverStartingState>;

        return $r1;
    }

    static void access$13200(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$13300(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$13402(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean didBlackListBSSID> = z0;

        return z0;
    }

    static java.lang.String access$8200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTargetRoamBSSID>;

        return $r1;
    }

    static android.util.LruCache access$13500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.util.LruCache $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.util.LruCache mScanResultCache>;

        return $r1;
    }

    static int access$5100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mLastNetworkId>;

        return $i0;
    }

    static void access$13600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$13700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing>;

        return $z0;
    }

    static void access$13800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static long access$13902(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long lastConnectAttempt> = l0;

        return l0;
    }

    static com.android.server.wifi.WifiAutoJoinController access$14000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiAutoJoinController $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiAutoJoinController mWifiAutoJoinController>;

        return $r1;
    }

    static long access$14100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long mLastEnableAllNetworksTime>;

        return $l0;
    }

    static long access$14102(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mLastEnableAllNetworksTime> = l0;

        return l0;
    }

    static android.net.wifi.WifiConfiguration access$14200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration targetWificonfiguration>;

        return $r1;
    }

    static void access$14300(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>(r1);

        return;
    }

    static void access$14400(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void logd(java.lang.String)>(r1);

        return;
    }

    static com.android.internal.util.IState access$14500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static com.android.internal.util.IState access$14600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static android.net.wifi.WifiConfiguration access$14202(com.android.server.wifi.WifiStateMachine, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration targetWificonfiguration> = r1;

        return r1;
    }

    static int access$14702(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming> = i0;

        return i0;
    }

    static com.android.internal.util.State access$14800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mRoamingState>;

        return $r1;
    }

    static void access$14900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.State access$15000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mDisconnectingState>;

        return $r1;
    }

    static void access$15100(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$15200(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static com.android.internal.util.IState access$15300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static com.android.internal.util.IState access$15400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static void access$15500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$15600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiConfiguration access$15702(com.android.server.wifi.WifiStateMachine, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastSavedConfigurationAttempt> = r1;

        return r1;
    }

    static com.android.internal.util.IState access$15800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static com.android.internal.util.IState access$15900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static com.android.internal.util.State access$16000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mObtainingIpState>;

        return $r1;
    }

    static void access$16100(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static android.net.wifi.WifiConfiguration access$16202(com.android.server.wifi.WifiStateMachine, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        r0.<com.android.server.wifi.WifiStateMachine: android.net.wifi.WifiConfiguration lastForgetConfigurationAttempt> = r1;

        return r1;
    }

    static com.android.internal.util.State access$16300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mWpsRunningState>;

        return $r1;
    }

    static void access$16400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static java.lang.String access$5000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mLastBssid>;

        return $r1;
    }

    static void access$16500(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendNetworkStateChangeBroadcast(java.lang.String)>(r1);

        return;
    }

    static void access$16600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$16700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$16808(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mRssiPollToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mRssiPollToken> = $i1;

        return $i0;
    }

    static boolean access$1300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableRssiPolling>;

        return $z0;
    }

    static int access$16800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mRssiPollToken>;

        return $i0;
    }

    static java.lang.String access$16900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: java.lang.String mTcpBufferSizes>;

        return $r1;
    }

    static android.net.LinkProperties access$17000(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.LinkProperties $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: android.net.LinkProperties mLinkProperties>;

        return $r1;
    }

    static com.android.server.wifi.WifiStateMachine$WifiNetworkAgent access$6402(com.android.server.wifi.WifiStateMachine, com.android.server.wifi.WifiStateMachine$WifiNetworkAgent)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.server.wifi.WifiStateMachine$WifiNetworkAgent r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent;

        r0.<com.android.server.wifi.WifiStateMachine: com.android.server.wifi.WifiStateMachine$WifiNetworkAgent mNetworkAgent> = r1;

        return r1;
    }

    static void access$17100(com.android.server.wifi.WifiStateMachine, android.net.DhcpResults, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.DhcpResults r1;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.DhcpResults;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleIPv4Success(android.net.DhcpResults,int)>(r1, i0);

        return;
    }

    static void access$17200(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleIPv4Failure(int)>(i0);

        return;
    }

    static void access$17300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleSuccessfulIpConfiguration()>();

        return;
    }

    static void access$17400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendConnectedState()>();

        return;
    }

    static com.android.internal.util.State access$17500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mConnectedState>;

        return $r1;
    }

    static void access$17600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$17700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void handleIpConfigurationLost()>();

        return;
    }

    static void access$17800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$17900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$18000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$18100(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$18200(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static long access$18300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long lastFullBandConnectedTimeMilli>;

        return $l0;
    }

    static long access$18400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long fullBandConnectedTimeIntervalMilli>;

        return $l0;
    }

    static int access$18500()
    {
        int $i0;

        $i0 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_REFUSED>;

        return $i0;
    }

    static long access$18402(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long fullBandConnectedTimeIntervalMilli> = l0;

        return l0;
    }

    static long access$18302(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long lastFullBandConnectedTimeMilli> = l0;

        return l0;
    }

    static int access$18600()
    {
        int $i0;

        $i0 = <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_HANDLING_ERROR>;

        return $i0;
    }

    static boolean access$18700()
    {
        boolean $z0;

        $z0 = <com.android.server.wifi.WifiStateMachine: boolean VVDBG>;

        return $z0;
    }

    static int access$18800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mWifiLinkLayerStatsSupported>;

        return $i0;
    }

    static void access$18900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void fetchRssiLinkSpeedAndFrequencyNative()>();

        return;
    }

    static void access$19000(com.android.server.wifi.WifiStateMachine, android.net.wifi.WifiLinkLayerStats)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiLinkLayerStats r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.WifiLinkLayerStats;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void calculateWifiScore(android.net.wifi.WifiLinkLayerStats)>(r1);

        return;
    }

    static void access$19100(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendRssiChangeBroadcast(int)>(i0);

        return;
    }

    static void access$19200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void cleanWifiScore()>();

        return;
    }

    static void access$19300(com.android.server.wifi.WifiStateMachine, android.net.wifi.RssiPacketCountInfo)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.RssiPacketCountInfo r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.RssiPacketCountInfo;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void fetchPktcntNative(android.net.wifi.RssiPacketCountInfo)>(r1);

        return;
    }

    static boolean access$13702(com.android.server.wifi.WifiStateMachine, boolean)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wifi.WifiStateMachine: boolean linkDebouncing> = z0;

        return z0;
    }

    static void access$19400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$14700(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mAutoRoaming>;

        return $i0;
    }

    static boolean access$19500(com.android.server.wifi.WifiStateMachine, java.lang.String)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean clearIPv4Address(java.lang.String)>(r1);

        return $z0;
    }

    static void access$19600(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$19700(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$19800(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$19900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$20000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$20100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mScreenOn>;

        return $z0;
    }

    static void access$20200(com.android.server.wifi.WifiStateMachine, boolean, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean z0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void setScanAlarm(boolean,int)>(z0, i0);

        return;
    }

    static void access$20300(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$20400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$20508(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mRoamFailCount>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mRoamFailCount> = $i1;

        return $i0;
    }

    static void access$20600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$20700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$20800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$20900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$21000(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static java.lang.String access$21100(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: java.lang.String updateDefaultRouteMacAddress(int)>(i0);

        return $r1;
    }

    static long access$21202(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mCurrentScanAlarmMs> = l0;

        return l0;
    }

    static boolean access$21300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean testNetworkDisconnect>;

        return $z0;
    }

    static int access$21408(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int testNetworkDisconnectCounter>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int testNetworkDisconnectCounter> = $i1;

        return $i0;
    }

    static int access$21400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int testNetworkDisconnectCounter>;

        return $i0;
    }

    static long access$21502(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mLastDriverRoamAttempt> = l0;

        return l0;
    }

    static com.android.internal.util.State access$21600(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mVerifyingLinkState>;

        return $r1;
    }

    static void access$21700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$21800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static long access$21500(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long mLastDriverRoamAttempt>;

        return $l0;
    }

    static com.android.internal.util.IState access$21900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.IState getCurrentState()>();

        return $r1;
    }

    static void access$22000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$22100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDisconnectedScanPeriodMs>;

        return $i0;
    }

    static long access$22200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long $l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $l0 = r0.<com.android.server.wifi.WifiStateMachine: long mFrameworkScanIntervalMs>;

        return $l0;
    }

    static boolean access$22300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mEnableBackgroundScan>;

        return $z0;
    }

    static void access$22400(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$22500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$22600(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$22700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$3200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mTemporarilyDisconnectWifi>;

        return $z0;
    }

    static long access$22202(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mFrameworkScanIntervalMs> = l0;

        return l0;
    }

    static int access$22800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mDefaultFrameworkScanIntervalMs>;

        return $i0;
    }

    static boolean access$7900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = r0.<com.android.server.wifi.WifiStateMachine: boolean mIsScanOngoing>;

        return $z0;
    }

    static int access$22904(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mPeriodicScanToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mPeriodicScanToken> = $i1;

        return $i1;
    }

    static long access$23002(com.android.server.wifi.WifiStateMachine, long)
    {
        com.android.server.wifi.WifiStateMachine r0;
        long l0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        l0 := @parameter1: long;

        r0.<com.android.server.wifi.WifiStateMachine: long mDisconnectedTimeStamp> = l0;

        return l0;
    }

    static int access$22900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mPeriodicScanToken>;

        return $i0;
    }

    static void access$23100(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$23200(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isScanAllowed()>();

        return $z0;
    }

    static android.os.Message access$23300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message getCurrentMessage()>();

        return $r1;
    }

    static void access$23400(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$23500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$23600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$23700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$23800(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$23900(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$24000(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static android.os.Message access$24100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: android.os.Message getCurrentMessage()>();

        return $r1;
    }

    static void access$24200(com.android.server.wifi.WifiStateMachine, android.net.wifi.WifiConfiguration)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.net.wifi.WifiConfiguration r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.net.wifi.WifiConfiguration;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void startSoftApWithConfig(android.net.wifi.WifiConfiguration)>(r1);

        return;
    }

    static void access$24300(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static com.android.internal.util.State access$24400(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mSoftApStartedState>;

        return $r1;
    }

    static void access$24500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$24600(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$24700(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static boolean access$24800(com.android.server.wifi.WifiStateMachine, java.util.ArrayList)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean startTethering(java.util.ArrayList)>(r1);

        return $z0;
    }

    static com.android.internal.util.State access$24900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheringState>;

        return $r1;
    }

    static void access$25000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$25104(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0, $i1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mTetherToken>;

        $i1 = $i0 + 1;

        r0.<com.android.server.wifi.WifiStateMachine: int mTetherToken> = $i1;

        return $i1;
    }

    static boolean access$25200(com.android.server.wifi.WifiStateMachine, java.util.ArrayList)
    {
        com.android.server.wifi.WifiStateMachine r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = specialinvoke r0.<com.android.server.wifi.WifiStateMachine: boolean isWifiTethered(java.util.ArrayList)>(r1);

        return $z0;
    }

    static com.android.internal.util.State access$25300(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mTetheredState>;

        return $r1;
    }

    static void access$25400(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static int access$25100(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $i0 = r0.<com.android.server.wifi.WifiStateMachine: int mTetherToken>;

        return $i0;
    }

    static void access$25500(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$25600(com.android.server.wifi.WifiStateMachine, int)
    {
        com.android.server.wifi.WifiStateMachine r0;
        int i0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void sendMessageAtFrontOfQueue(int)>(i0);

        return;
    }

    static void access$25700(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$25800(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        specialinvoke r0.<com.android.server.wifi.WifiStateMachine: void stopTethering()>();

        return;
    }

    static com.android.internal.util.State access$25900(com.android.server.wifi.WifiStateMachine)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.State $r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        $r1 = r0.<com.android.server.wifi.WifiStateMachine: com.android.internal.util.State mUntetheringState>;

        return $r1;
    }

    static void access$26000(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$26100(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void access$26200(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$26300(com.android.server.wifi.WifiStateMachine, com.android.internal.util.IState)
    {
        com.android.server.wifi.WifiStateMachine r0;
        com.android.internal.util.IState r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: com.android.internal.util.IState;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void transitionTo(com.android.internal.util.IState)>(r1);

        return;
    }

    static void access$26400(com.android.server.wifi.WifiStateMachine, android.os.Message)
    {
        com.android.server.wifi.WifiStateMachine r0;
        android.os.Message r1;

        r0 := @parameter0: com.android.server.wifi.WifiStateMachine;

        r1 := @parameter1: android.os.Message;

        virtualinvoke r0.<com.android.server.wifi.WifiStateMachine: void deferMessage(android.os.Message)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.android.server.wifi.WifiStateMachine: java.lang.String END_STR> = "####";

        <com.android.server.wifi.WifiStateMachine: java.lang.String DELIMITER_STR> = "====";

        <com.android.server.wifi.WifiStateMachine: java.lang.String SSID_STR> = "ssid=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String FLAGS_STR> = "flags=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String TSF_STR> = "tsf=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String LEVEL_STR> = "level=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String FREQ_STR> = "freq=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String BSSID_STR> = "bssid=";

        <com.android.server.wifi.WifiStateMachine: java.lang.String ID_STR> = "id=";

        <com.android.server.wifi.WifiStateMachine: boolean DEBUG_PARSE> = 0;

        <com.android.server.wifi.WifiStateMachine: java.lang.String ACTION_REFRESH_BATCHED_SCAN> = "com.android.server.WifiManager.action.REFRESH_BATCHED_SCAN";

        <com.android.server.wifi.WifiStateMachine: java.lang.String ACTION_DELAYED_DRIVER_STOP> = "com.android.server.WifiManager.action.DELAYED_DRIVER_STOP";

        <com.android.server.wifi.WifiStateMachine: int DRIVER_STOP_REQUEST> = 0;

        <com.android.server.wifi.WifiStateMachine: java.lang.String DELAYED_STOP_COUNTER> = "DelayedStopCounter";

        <com.android.server.wifi.WifiStateMachine: java.lang.String ACTION_START_SCAN> = "com.android.server.WifiManager.action.START_SCAN";

        <com.android.server.wifi.WifiStateMachine: int SCAN_REQUEST> = 0;

        <com.android.server.wifi.WifiStateMachine: int MIN_INTERVAL_ENABLE_ALL_NETWORKS_MS> = 600000;

        <com.android.server.wifi.WifiStateMachine: long maxFullBandConnectedTimeIntervalMilli> = 300000L;

        <com.android.server.wifi.WifiStateMachine: int SUSPEND_DUE_TO_SCREEN> = 4;

        <com.android.server.wifi.WifiStateMachine: int SUSPEND_DUE_TO_HIGH_PERF> = 2;

        <com.android.server.wifi.WifiStateMachine: int SUSPEND_DUE_TO_DHCP> = 1;

        <com.android.server.wifi.WifiStateMachine: int FAILURE> = -1;

        <com.android.server.wifi.WifiStateMachine: int SUCCESS> = 1;

        <com.android.server.wifi.WifiStateMachine: int SCAN_ONLY_WITH_WIFI_OFF_MODE> = 3;

        <com.android.server.wifi.WifiStateMachine: int SCAN_ONLY_MODE> = 2;

        <com.android.server.wifi.WifiStateMachine: int CONNECT_MODE> = 1;

        <com.android.server.wifi.WifiStateMachine: int CMD_ASSOCIATED_BSSID> = 131219;

        <com.android.server.wifi.WifiStateMachine: int CMD_AUTO_SAVE_NETWORK> = 131218;

        <com.android.server.wifi.WifiStateMachine: int CMD_AUTO_ROAM> = 131217;

        <com.android.server.wifi.WifiStateMachine: int CMD_UNWANTED_NETWORK> = 131216;

        <com.android.server.wifi.WifiStateMachine: int network_status_unwanted_disable_autojoin> = 1;

        <com.android.server.wifi.WifiStateMachine: int network_status_unwanted_disconnect> = 0;

        <com.android.server.wifi.WifiStateMachine: int CMD_AUTO_CONNECT> = 131215;

        <com.android.server.wifi.WifiStateMachine: int CMD_RELOAD_TLS_AND_RECONNECT> = 131214;

        <com.android.server.wifi.WifiStateMachine: int CMD_TARGET_BSSID> = 131213;

        <com.android.server.wifi.WifiStateMachine: int CMD_UPDATE_LINKPROPERTIES> = 131212;

        <com.android.server.wifi.WifiStateMachine: int CMD_IP_CONFIGURATION_LOST> = 131211;

        <com.android.server.wifi.WifiStateMachine: int CMD_IP_CONFIGURATION_SUCCESSFUL> = 131210;

        <com.android.server.wifi.WifiStateMachine: int CMD_POLL_BATCHED_SCAN> = 131209;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_NEXT_BATCHED_SCAN> = 131208;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_BATCHED_SCAN> = 131207;

        <com.android.server.wifi.WifiStateMachine: int CMD_BOOT_COMPLETED> = 131206;

        <com.android.server.wifi.WifiStateMachine: int CMD_DISABLE_P2P_RSP> = 131205;

        <com.android.server.wifi.WifiStateMachine: int CMD_DISABLE_P2P_REQ> = 131204;

        <com.android.server.wifi.WifiStateMachine: int CMD_ENABLE_P2P> = 131203;

        <com.android.server.wifi.WifiStateMachine: int CMD_DISCONNECTING_WATCHDOG_TIMER> = 131168;

        <com.android.server.wifi.WifiStateMachine: int DISCONNECTING_GUARD_TIMER_MSEC> = 5000;

        <com.android.server.wifi.WifiStateMachine: int CMD_SCREEN_STATE_CHANGED> = 131167;

        <com.android.server.wifi.WifiStateMachine: int CMD_ROAM_WATCHDOG_TIMER> = 131166;

        <com.android.server.wifi.WifiStateMachine: int ROAM_GUARD_TIMER_MSEC> = 15000;

        <com.android.server.wifi.WifiStateMachine: int CMD_RESET_SUPPLICANT_STATE> = 131183;

        <com.android.server.wifi.WifiStateMachine: int OBTAINING_IP_ADDRESS_GUARD_TIMER_MSEC> = 40000;

        <com.android.server.wifi.WifiStateMachine: int CMD_OBTAINING_IP_ADDRESS_WATCHDOG_TIMER> = 131165;

        <com.android.server.wifi.WifiStateMachine: int CMD_ENABLE_TDLS> = 131164;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_FREQUENCY_BAND> = 131162;

        <com.android.server.wifi.WifiStateMachine: int MULTICAST_V4> = 0;

        <com.android.server.wifi.WifiStateMachine: int MULTICAST_V6> = 1;

        <com.android.server.wifi.WifiStateMachine: int CMD_TEST_NETWORK_DISCONNECT> = 131161;

        <com.android.server.wifi.WifiStateMachine: int CMD_NO_NETWORKS_PERIODIC_SCAN> = 131160;

        <com.android.server.wifi.WifiStateMachine: int CMD_DELAYED_NETWORK_DISCONNECT> = 131159;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_SUSPEND_OPT_ENABLED> = 131158;

        <com.android.server.wifi.WifiStateMachine: int CMD_STOP_PACKET_FILTERING> = 131157;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_PACKET_FILTERING> = 131156;

        <com.android.server.wifi.WifiStateMachine: int CMD_RSSI_POLL> = 131155;

        <com.android.server.wifi.WifiStateMachine: int CMD_ENABLE_RSSI_POLL> = 131154;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_COUNTRY_CODE> = 131152;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_HIGH_PERF_MODE> = 131149;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_CONNECTION_STATISTICS> = 131148;

        <com.android.server.wifi.WifiStateMachine: int CMD_REASSOCIATE> = 131147;

        <com.android.server.wifi.WifiStateMachine: int CMD_RECONNECT> = 131146;

        <com.android.server.wifi.WifiStateMachine: int CMD_DISCONNECT> = 131145;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_OPERATIONAL_MODE> = 131144;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_SCAN> = 131143;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_LINK_LAYER_STATS> = 131135;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_PRIVILEGED_CONFIGURED_NETWORKS> = 131134;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_SUPPORTED_FEATURES> = 131133;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_CAPABILITY_FREQ> = 131132;

        <com.android.server.wifi.WifiStateMachine: int CMD_GET_CONFIGURED_NETWORKS> = 131131;

        <com.android.server.wifi.WifiStateMachine: int CMD_SAVE_CONFIG> = 131130;

        <com.android.server.wifi.WifiStateMachine: int CMD_CLEAR_BLACKLIST> = 131129;

        <com.android.server.wifi.WifiStateMachine: int CMD_BLACKLIST_NETWORK> = 131128;

        <com.android.server.wifi.WifiStateMachine: int CMD_ENABLE_ALL_NETWORKS> = 131127;

        <com.android.server.wifi.WifiStateMachine: int CMD_ENABLE_NETWORK> = 131126;

        <com.android.server.wifi.WifiStateMachine: int CMD_REMOVE_NETWORK> = 131125;

        <com.android.server.wifi.WifiStateMachine: int CMD_ADD_OR_UPDATE_NETWORK> = 131124;

        <com.android.server.wifi.WifiStateMachine: int CMD_PING_SUPPLICANT> = 131123;

        <com.android.server.wifi.WifiStateMachine: int CMD_BLUETOOTH_ADAPTER_STATE_CHANGE> = 131103;

        <com.android.server.wifi.WifiStateMachine: int CMD_TETHER_NOTIFICATION_TIMED_OUT> = 131102;

        <com.android.server.wifi.WifiStateMachine: int CMD_TETHER_STATE_CHANGE> = 131101;

        <com.android.server.wifi.WifiStateMachine: int CMD_RESPONSE_AP_CONFIG> = 131100;

        <com.android.server.wifi.WifiStateMachine: int CMD_REQUEST_AP_CONFIG> = 131099;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_AP_CONFIG_COMPLETED> = 131098;

        <com.android.server.wifi.WifiStateMachine: int CMD_SET_AP_CONFIG> = 131097;

        <com.android.server.wifi.WifiStateMachine: int CMD_STOP_AP> = 131096;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_AP_FAILURE> = 131095;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_AP_SUCCESS> = 131094;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_AP> = 131093;

        <com.android.server.wifi.WifiStateMachine: int CMD_DRIVER_START_TIMED_OUT> = 131091;

        <com.android.server.wifi.WifiStateMachine: int CMD_DELAYED_STOP_DRIVER> = 131090;

        <com.android.server.wifi.WifiStateMachine: int CMD_STOP_SUPPLICANT_FAILED> = 131089;

        <com.android.server.wifi.WifiStateMachine: int CMD_STATIC_IP_FAILURE> = 131088;

        <com.android.server.wifi.WifiStateMachine: int CMD_STATIC_IP_SUCCESS> = 131087;

        <com.android.server.wifi.WifiStateMachine: int CMD_STOP_DRIVER> = 131086;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_DRIVER> = 131085;

        <com.android.server.wifi.WifiStateMachine: int CMD_STOP_SUPPLICANT> = 131084;

        <com.android.server.wifi.WifiStateMachine: int CMD_START_SUPPLICANT> = 131083;

        <com.android.server.wifi.WifiStateMachine: int BASE> = 131072;

        <com.android.server.wifi.WifiStateMachine: int DRIVER_START_TIME_OUT_MSECS> = 10000;

        <com.android.server.wifi.WifiStateMachine: int TETHER_NOTIFICATION_TIME_OUT_MSECS> = 5000;

        <com.android.server.wifi.WifiStateMachine: int SUPPLICANT_RESTART_TRIES> = 5;

        <com.android.server.wifi.WifiStateMachine: int SUPPLICANT_RESTART_INTERVAL_MSECS> = 5000;

        <com.android.server.wifi.WifiStateMachine: int LINK_FLAPPING_DEBOUNCE_MSEC> = 7000;

        <com.android.server.wifi.WifiStateMachine: int POLL_RSSI_INTERVAL_MSECS> = 3000;

        <com.android.server.wifi.WifiStateMachine: java.lang.String BATCHED_WORKSOURCE> = "batched_worksource";

        <com.android.server.wifi.WifiStateMachine: java.lang.String BATCHED_SETTING> = "batched_settings";

        <com.android.server.wifi.WifiStateMachine: java.lang.String SCAN_REQUEST_TIME> = "scan_request_time";

        <com.android.server.wifi.WifiStateMachine: java.lang.String CUSTOMIZED_SCAN_WORKSOURCE> = "customized_scan_worksource";

        <com.android.server.wifi.WifiStateMachine: java.lang.String CUSTOMIZED_SCAN_SETTING> = "customized_scan_settings";

        <com.android.server.wifi.WifiStateMachine: int SCAN_REQUEST_BUFFER_MAX_SIZE> = 10;

        <com.android.server.wifi.WifiStateMachine: int ADD_OR_UPDATE_SOURCE> = -3;

        <com.android.server.wifi.WifiStateMachine: int SCAN_ALARM_SOURCE> = -2;

        <com.android.server.wifi.WifiStateMachine: int UNKNOWN_SCAN_SOURCE> = -1;

        <com.android.server.wifi.WifiStateMachine: int SCAN_RESULT_CACHE_SIZE> = 160;

        <com.android.server.wifi.WifiStateMachine: java.lang.String GOOGLE_OUI> = "DA-A1-19";

        <com.android.server.wifi.WifiStateMachine: int ONE_HOUR_MILLI> = 3600000;

        <com.android.server.wifi.WifiStateMachine: java.lang.String NETWORKTYPE> = "WIFI";

        <com.android.server.wifi.WifiStateMachine: boolean DBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean VDBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean VVDBG> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean mLogMessages> = 0;

        <com.android.server.wifi.WifiStateMachine: boolean PDBG> = 0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\t+");

        <com.android.server.wifi.WifiStateMachine: java.util.regex.Pattern scanResultPattern> = $r0;

        <com.android.server.wifi.WifiStateMachine: int sScanAlarmIntentCount> = 0;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_PROCESSED> = 2;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_OK> = 1;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_UNKNOWN> = 0;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_REFUSED> = -1;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_FAIL> = -2;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_BUFFERED> = -3;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_DEFERRED> = -4;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_DISCARD> = -5;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_LOOPED> = -6;

        <com.android.server.wifi.WifiStateMachine: int MESSAGE_HANDLING_STATUS_HANDLING_ERROR> = -7;

        return;
    }
}
