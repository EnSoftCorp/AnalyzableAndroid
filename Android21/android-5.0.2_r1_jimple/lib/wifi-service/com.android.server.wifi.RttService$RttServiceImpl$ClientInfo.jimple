class com.android.server.wifi.RttService$RttServiceImpl$ClientInfo extends java.lang.Object
{
    private final com.android.internal.util.AsyncChannel mChannel;
    private final android.os.Messenger mMessenger;
    java.util.HashMap mRequests;
    final com.android.server.wifi.RttService$RttServiceImpl this$1;

    void <init>(com.android.server.wifi.RttService$RttServiceImpl, com.android.internal.util.AsyncChannel, android.os.Messenger)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        com.android.server.wifi.RttService$RttServiceImpl r1;
        com.android.internal.util.AsyncChannel r2;
        android.os.Messenger r3;
        java.util.HashMap $r4;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        r1 := @parameter0: com.android.server.wifi.RttService$RttServiceImpl;

        r2 := @parameter1: com.android.internal.util.AsyncChannel;

        r3 := @parameter2: android.os.Messenger;

        r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.server.wifi.RttService$RttServiceImpl this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests> = $r4;

        r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.internal.util.AsyncChannel mChannel> = r2;

        r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: android.os.Messenger mMessenger> = r3;

        return;
    }

    boolean addRttRequest(int, android.net.wifi.RttManager$ParcelableRttParams)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        int i0;
        android.net.wifi.RttManager$ParcelableRttParams r1;
        android.net.wifi.RttManager$RttParams[] r2;
        com.android.server.wifi.RttService$RttServiceImpl$RttRequest r3, $r4;
        com.android.server.wifi.RttService$RttServiceImpl $r5, $r10;
        java.lang.Integer $r6, $r8;
        java.util.HashMap $r7;
        java.util.Queue $r11;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.wifi.RttManager$ParcelableRttParams;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r1.<android.net.wifi.RttManager$ParcelableRttParams: android.net.wifi.RttManager$RttParams[] mParams>;

        $r4 = new com.android.server.wifi.RttService$RttServiceImpl$RttRequest;

        $r5 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.server.wifi.RttService$RttServiceImpl this$1>;

        specialinvoke $r4.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: void <init>(com.android.server.wifi.RttService$RttServiceImpl,com.android.server.wifi.RttService$1)>($r5, null);

        r3 = $r4;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r3.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: java.lang.Integer key> = $r6;

        r3.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo ci> = r0;

        r3.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: android.net.wifi.RttManager$RttParams[] params> = r2;

        $r7 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r3);

        $r10 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.server.wifi.RttService$RttServiceImpl this$1>;

        $r11 = staticinvoke <com.android.server.wifi.RttService$RttServiceImpl: java.util.Queue access$400(com.android.server.wifi.RttService$RttServiceImpl)>($r10);

        interfaceinvoke $r11.<java.util.Queue: boolean add(java.lang.Object)>(r3);

        return 1;
    }

    void removeRttRequest(int)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        int i0;
        java.util.HashMap $r1;
        java.lang.Integer $r2;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r2);

        return;
    }

    void reportResult(com.android.server.wifi.RttService$RttServiceImpl$RttRequest, android.net.wifi.RttManager$RttResult[])
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        com.android.server.wifi.RttService$RttServiceImpl$RttRequest r1;
        android.net.wifi.RttManager$RttResult[] r2;
        android.net.wifi.RttManager$ParcelableRttResults r3, $r4;
        java.lang.Integer $r5, $r7;
        com.android.internal.util.AsyncChannel $r6;
        int $i0;
        java.util.HashMap $r8;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        r1 := @parameter0: com.android.server.wifi.RttService$RttServiceImpl$RttRequest;

        r2 := @parameter1: android.net.wifi.RttManager$RttResult[];

        $r4 = new android.net.wifi.RttManager$ParcelableRttResults;

        specialinvoke $r4.<android.net.wifi.RttManager$ParcelableRttResults: void <init>(android.net.wifi.RttManager$RttResult[])>(r2);

        r3 = $r4;

        $r6 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.internal.util.AsyncChannel mChannel>;

        $r5 = r1.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: java.lang.Integer key>;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        virtualinvoke $r6.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(160259, 0, $i0, r3);

        $r8 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        $r7 = r1.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: java.lang.Integer key>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r7);

        return;
    }

    void reportFailed(com.android.server.wifi.RttService$RttServiceImpl$RttRequest, int, java.lang.String)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        com.android.server.wifi.RttService$RttServiceImpl$RttRequest r1;
        int i0, $i1;
        java.lang.String r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        r1 := @parameter0: com.android.server.wifi.RttService$RttServiceImpl$RttRequest;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r3 = r1.<com.android.server.wifi.RttService$RttServiceImpl$RttRequest: java.lang.Integer key>;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: void reportFailed(int,int,java.lang.String)>($i1, i0, r2);

        return;
    }

    void reportFailed(int, int, java.lang.String)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        int i0, i1;
        java.lang.String r1;
        android.os.Bundle r2, $r3;
        com.android.internal.util.AsyncChannel $r4;
        java.util.HashMap $r5;
        java.lang.Integer $r6;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<android.os.Bundle: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("android.net.wifi.RttManager.Description", r1);

        $r4 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.internal.util.AsyncChannel mChannel>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>(160258, i0, i1, r2);

        $r5 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r6);

        return;
    }

    void reportAborted(int)
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        int i0;
        com.android.internal.util.AsyncChannel $r1;
        java.util.HashMap $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: com.android.internal.util.AsyncChannel mChannel>;

        virtualinvoke $r1.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(160260, i0);

        $r2 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        return;
    }

    void cleanup()
    {
        com.android.server.wifi.RttService$RttServiceImpl$ClientInfo r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.server.wifi.RttService$RttServiceImpl$ClientInfo;

        $r1 = r0.<com.android.server.wifi.RttService$RttServiceImpl$ClientInfo: java.util.HashMap mRequests>;

        virtualinvoke $r1.<java.util.HashMap: void clear()>();

        return;
    }
}
