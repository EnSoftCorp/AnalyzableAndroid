class com.android.server.wifi.WifiNative$MonitorThread extends java.lang.Thread
{

    private void <init>()
    {
        com.android.server.wifi.WifiNative$MonitorThread r0;

        r0 := @this: com.android.server.wifi.WifiNative$MonitorThread;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.server.wifi.WifiNative$MonitorThread r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        long $l0;
        java.lang.String $r3, $r5;

        r0 := @this: com.android.server.wifi.WifiNative$MonitorThread;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Waiting for HAL events mWifiHalHandle=");

        $l0 = staticinvoke <com.android.server.wifi.WifiNative: long access$000()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("WifiNative-HAL", $r5);

        staticinvoke <com.android.server.wifi.WifiNative: void access$100()>();

        return;
    }

    void <init>(com.android.server.wifi.WifiNative$1)
    {
        com.android.server.wifi.WifiNative$MonitorThread r0;
        com.android.server.wifi.WifiNative$1 r1;

        r0 := @this: com.android.server.wifi.WifiNative$MonitorThread;

        r1 := @parameter0: com.android.server.wifi.WifiNative$1;

        specialinvoke r0.<com.android.server.wifi.WifiNative$MonitorThread: void <init>()>();

        return;
    }
}
