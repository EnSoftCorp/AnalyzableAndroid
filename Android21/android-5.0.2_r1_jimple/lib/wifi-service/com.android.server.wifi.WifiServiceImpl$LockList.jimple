class com.android.server.wifi.WifiServiceImpl$LockList extends java.lang.Object
{
    private java.util.List mList;
    final com.android.server.wifi.WifiServiceImpl this$0;

    private void <init>(com.android.server.wifi.WifiServiceImpl)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        com.android.server.wifi.WifiServiceImpl r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: com.android.server.wifi.WifiServiceImpl;

        r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList> = $r2;

        return;
    }

    synchronized boolean hasLocks()
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        java.util.List $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        $r1 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    synchronized int getStrongestLockMode()
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        java.util.List $r1;
        boolean $z0;
        com.android.server.wifi.WifiServiceImpl $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        $r1 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $i0 = staticinvoke <com.android.server.wifi.WifiServiceImpl: int access$900(com.android.server.wifi.WifiServiceImpl)>($r2);

        $r3 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $i1 = staticinvoke <com.android.server.wifi.WifiServiceImpl: int access$1000(com.android.server.wifi.WifiServiceImpl)>($r3);

        if $i0 <= $i1 goto label2;

        return 3;

     label2:
        $r4 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $i2 = staticinvoke <com.android.server.wifi.WifiServiceImpl: int access$1100(com.android.server.wifi.WifiServiceImpl)>($r4);

        $r5 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $i3 = staticinvoke <com.android.server.wifi.WifiServiceImpl: int access$1200(com.android.server.wifi.WifiServiceImpl)>($r5);

        if $i2 <= $i3 goto label3;

        return 1;

     label3:
        return 2;
    }

    synchronized void updateWorkSource(android.os.WorkSource)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0, $r3, $r6;
        android.os.WorkSource r1, $r10;
        int i0, $i1;
        com.android.server.wifi.WifiServiceImpl $r2, $r5;
        java.util.List $r4, $r7;
        java.lang.Object $r8;
        com.android.server.wifi.WifiServiceImpl$WifiLock $r9;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: android.os.WorkSource;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $r3 = $r2.<com.android.server.wifi.WifiServiceImpl: com.android.server.wifi.WifiServiceImpl$LockList mLocks>;

        $r4 = $r3.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 >= $i1 goto label2;

        $r5 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl this$0>;

        $r6 = $r5.<com.android.server.wifi.WifiServiceImpl: com.android.server.wifi.WifiServiceImpl$LockList mLocks>;

        $r7 = $r6.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (com.android.server.wifi.WifiServiceImpl$WifiLock) $r8;

        $r10 = $r9.<com.android.server.wifi.WifiServiceImpl$WifiLock: android.os.WorkSource mWorkSource>;

        virtualinvoke r1.<android.os.WorkSource: boolean add(android.os.WorkSource)>($r10);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void addLock(com.android.server.wifi.WifiServiceImpl$WifiLock)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        com.android.server.wifi.WifiServiceImpl$WifiLock r1;
        android.os.IBinder $r2;
        int $i0;
        java.util.List $r3;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: com.android.server.wifi.WifiServiceImpl$WifiLock;

        $r2 = r1.<com.android.server.wifi.WifiServiceImpl$WifiLock: android.os.IBinder mBinder>;

        $i0 = specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: int findLockByBinder(android.os.IBinder)>($r2);

        if $i0 >= 0 goto label1;

        $r3 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    private com.android.server.wifi.WifiServiceImpl$WifiLock removeLock(android.os.IBinder)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        android.os.IBinder r1;
        int i0;
        com.android.server.wifi.WifiServiceImpl$WifiLock r2;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: android.os.IBinder;

        i0 = specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: int findLockByBinder(android.os.IBinder)>(r1);

        if i0 < 0 goto label1;

        $r3 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(i0);

        r2 = (com.android.server.wifi.WifiServiceImpl$WifiLock) $r4;

        virtualinvoke r2.<com.android.server.wifi.WifiServiceImpl$WifiLock: void unlinkDeathRecipient()>();

        return r2;

     label1:
        return null;
    }

    private int findLockByBinder(android.os.IBinder)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        android.os.IBinder r1, $r6;
        int i0, i1;
        java.util.List $r2, $r3;
        java.lang.Object $r4;
        com.android.server.wifi.WifiServiceImpl$WifiLock $r5;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: android.os.IBinder;

        $r2 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        i1 = i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wifi.WifiServiceImpl$WifiLock) $r4;

        $r6 = $r5.<com.android.server.wifi.WifiServiceImpl$WifiLock: android.os.IBinder mBinder>;

        if $r6 != r1 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    private void dump(java.io.PrintWriter)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        java.io.PrintWriter r1;
        java.util.Iterator r2;
        com.android.server.wifi.WifiServiceImpl$WifiLock r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: java.io.PrintWriter;

        $r4 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.server.wifi.WifiServiceImpl$WifiLock) $r5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("    ");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>(r3);

        goto label1;

     label2:
        return;
    }

    void <init>(com.android.server.wifi.WifiServiceImpl, com.android.server.wifi.WifiServiceImpl$1)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        com.android.server.wifi.WifiServiceImpl r1;
        com.android.server.wifi.WifiServiceImpl$1 r2;

        r0 := @this: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter0: com.android.server.wifi.WifiServiceImpl;

        r2 := @parameter1: com.android.server.wifi.WifiServiceImpl$1;

        specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: void <init>(com.android.server.wifi.WifiServiceImpl)>(r1);

        return;
    }

    static void access$700(com.android.server.wifi.WifiServiceImpl$LockList, java.io.PrintWriter)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    static void access$1300(com.android.server.wifi.WifiServiceImpl$LockList, com.android.server.wifi.WifiServiceImpl$WifiLock)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        com.android.server.wifi.WifiServiceImpl$WifiLock r1;

        r0 := @parameter0: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter1: com.android.server.wifi.WifiServiceImpl$WifiLock;

        specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: void addLock(com.android.server.wifi.WifiServiceImpl$WifiLock)>(r1);

        return;
    }

    static int access$1400(com.android.server.wifi.WifiServiceImpl$LockList, android.os.IBinder)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        android.os.IBinder r1;
        int $i0;

        r0 := @parameter0: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter1: android.os.IBinder;

        $i0 = specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: int findLockByBinder(android.os.IBinder)>(r1);

        return $i0;
    }

    static java.util.List access$1500(com.android.server.wifi.WifiServiceImpl$LockList)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.server.wifi.WifiServiceImpl$LockList;

        $r1 = r0.<com.android.server.wifi.WifiServiceImpl$LockList: java.util.List mList>;

        return $r1;
    }

    static com.android.server.wifi.WifiServiceImpl$WifiLock access$1600(com.android.server.wifi.WifiServiceImpl$LockList, android.os.IBinder)
    {
        com.android.server.wifi.WifiServiceImpl$LockList r0;
        android.os.IBinder r1;
        com.android.server.wifi.WifiServiceImpl$WifiLock $r2;

        r0 := @parameter0: com.android.server.wifi.WifiServiceImpl$LockList;

        r1 := @parameter1: android.os.IBinder;

        $r2 = specialinvoke r0.<com.android.server.wifi.WifiServiceImpl$LockList: com.android.server.wifi.WifiServiceImpl$WifiLock removeLock(android.os.IBinder)>(r1);

        return $r2;
    }
}
