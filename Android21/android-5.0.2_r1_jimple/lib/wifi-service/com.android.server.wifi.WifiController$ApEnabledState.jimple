class com.android.server.wifi.WifiController$ApEnabledState extends com.android.internal.util.State
{
    final com.android.server.wifi.WifiController this$0;

    void <init>(com.android.server.wifi.WifiController)
    {
        com.android.server.wifi.WifiController$ApEnabledState r0;
        com.android.server.wifi.WifiController r1;

        r0 := @this: com.android.server.wifi.WifiController$ApEnabledState;

        r1 := @parameter0: com.android.server.wifi.WifiController;

        r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0> = r1;

        specialinvoke r0.<com.android.internal.util.State: void <init>()>();

        return;
    }

    public boolean processMessage(android.os.Message)
    {
        com.android.server.wifi.WifiController$ApEnabledState r0;
        android.os.Message r1;
        int $i0, $i1;
        com.android.server.wifi.WifiController $r2, $r4, $r5, $r7, $r9, $r11, $r12;
        com.android.server.wifi.WifiStateMachine $r3, $r10;
        com.android.server.wifi.WifiController$ApStaDisabledState $r6, $r13;
        com.android.server.wifi.WifiSettingsStore $r8;
        boolean $z0;

        r0 := @this: com.android.server.wifi.WifiController$ApEnabledState;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        lookupswitch($i0)
        {
            case 155657: goto label1;
            case 155658: goto label2;
            default: goto label3;
        };

     label1:
        $r7 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r8 = $r7.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiSettingsStore mSettingsStore>;

        $z0 = virtualinvoke $r8.<com.android.server.wifi.WifiSettingsStore: boolean isAirplaneModeOn()>();

        if $z0 == 0 goto label4;

        $r9 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r10 = $r9.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiStateMachine mWifiStateMachine>;

        virtualinvoke $r10.<com.android.server.wifi.WifiStateMachine: void setHostApRunning(android.net.wifi.WifiConfiguration,boolean)>(null, 0);

        $r12 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r11 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r13 = staticinvoke <com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState access$2600(com.android.server.wifi.WifiController)>($r11);

        staticinvoke <com.android.server.wifi.WifiController: void access$3900(com.android.server.wifi.WifiController,com.android.internal.util.IState)>($r12, $r13);

        goto label4;

     label2:
        $i1 = r1.<android.os.Message: int arg1>;

        if $i1 != 0 goto label4;

        $r2 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r3 = $r2.<com.android.server.wifi.WifiController: com.android.server.wifi.WifiStateMachine mWifiStateMachine>;

        virtualinvoke $r3.<com.android.server.wifi.WifiStateMachine: void setHostApRunning(android.net.wifi.WifiConfiguration,boolean)>(null, 0);

        $r5 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r4 = r0.<com.android.server.wifi.WifiController$ApEnabledState: com.android.server.wifi.WifiController this$0>;

        $r6 = staticinvoke <com.android.server.wifi.WifiController: com.android.server.wifi.WifiController$ApStaDisabledState access$2600(com.android.server.wifi.WifiController)>($r4);

        staticinvoke <com.android.server.wifi.WifiController: void access$4000(com.android.server.wifi.WifiController,com.android.internal.util.IState)>($r5, $r6);

        goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }
}
