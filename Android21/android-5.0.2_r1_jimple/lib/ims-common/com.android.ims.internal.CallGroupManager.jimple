public class com.android.ims.internal.CallGroupManager extends java.lang.Object
{
    private static com.android.ims.internal.CallGroupManager mCallGroupManager;
    private java.lang.Object mLockObj;
    private java.util.ArrayList mCallGroups;

    private void <init>()
    {
        com.android.ims.internal.CallGroupManager r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.ims.internal.CallGroupManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.internal.CallGroupManager: java.lang.Object mLockObj> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.ims.internal.CallGroupManager: java.util.ArrayList mCallGroups> = $r2;

        return;
    }

    public static com.android.ims.internal.CallGroupManager getInstance()
    {
        com.android.ims.internal.CallGroupManager $r0;

        $r0 = <com.android.ims.internal.CallGroupManager: com.android.ims.internal.CallGroupManager mCallGroupManager>;

        return $r0;
    }

    public com.android.ims.internal.CallGroup createCallGroup(com.android.ims.internal.ICallGroup)
    {
        com.android.ims.internal.CallGroupManager r0;
        com.android.ims.internal.ICallGroup r1;
        com.android.ims.internal.CallGroup r2, $r5;
        java.lang.Object r3, $r6;
        java.lang.Throwable r4, $r8;
        java.util.ArrayList $r7;

        r0 := @this: com.android.ims.internal.CallGroupManager;

        r1 := @parameter0: com.android.ims.internal.ICallGroup;

        $r5 = new com.android.ims.internal.CallGroup;

        specialinvoke $r5.<com.android.ims.internal.CallGroup: void <init>(com.android.ims.internal.ICallGroup)>(r1);

        r2 = $r5;

        $r6 = r0.<com.android.ims.internal.CallGroupManager: java.lang.Object mLockObj>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.ims.internal.CallGroupManager: java.util.ArrayList mCallGroups>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void destroyCallGroup(com.android.ims.internal.CallGroup)
    {
        com.android.ims.internal.CallGroupManager r0;
        com.android.ims.internal.CallGroup r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        java.util.ArrayList $r5;

        r0 := @this: com.android.ims.internal.CallGroupManager;

        r1 := @parameter0: com.android.ims.internal.CallGroup;

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.ims.internal.CallGroupManager: java.lang.Object mLockObj>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.ims.internal.CallGroupManager: java.util.ArrayList mCallGroups>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.ims.internal.CallGroup getCallGroupAsOwner(com.android.ims.internal.ICall)
    {
        com.android.ims.internal.CallGroupManager r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        com.android.ims.internal.CallGroup r4;
        java.lang.Throwable r5, $r9;
        java.util.ArrayList $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.ims.internal.CallGroupManager;

        r1 := @parameter0: com.android.ims.internal.ICall;

        $r6 = r0.<com.android.ims.internal.CallGroupManager: java.lang.Object mLockObj>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.ims.internal.CallGroupManager: java.util.ArrayList mCallGroups>;

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.ims.internal.CallGroup) $r8;

        $z1 = virtualinvoke r4.<com.android.ims.internal.CallGroup: boolean isOwner(com.android.ims.internal.ICall)>(r1);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return r4;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.android.ims.internal.CallGroup getCallGroupAsReferrer(com.android.ims.internal.ICall)
    {
        com.android.ims.internal.CallGroupManager r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        com.android.ims.internal.CallGroup r4;
        java.lang.Throwable r5, $r9;
        java.util.ArrayList $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.ims.internal.CallGroupManager;

        r1 := @parameter0: com.android.ims.internal.ICall;

        $r6 = r0.<com.android.ims.internal.CallGroupManager: java.lang.Object mLockObj>;

        r2 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.ims.internal.CallGroupManager: java.util.ArrayList mCallGroups>;

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.ims.internal.CallGroup) $r8;

        $z1 = virtualinvoke r4.<com.android.ims.internal.CallGroup: boolean isReferrer(com.android.ims.internal.ICall)>(r1);

        if $z1 == 0 goto label4;

        exitmonitor r2;

     label3:
        return r4;

     label4:
        goto label2;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r5 = $r9;

        exitmonitor r2;

     label8:
        throw r5;

     label9:
        return null;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    static void <clinit>()
    {
        com.android.ims.internal.CallGroupManager $r0;

        $r0 = new com.android.ims.internal.CallGroupManager;

        specialinvoke $r0.<com.android.ims.internal.CallGroupManager: void <init>()>();

        <com.android.ims.internal.CallGroupManager: com.android.ims.internal.CallGroupManager mCallGroupManager> = $r0;

        return;
    }
}
