public class com.android.ims.ImsManager extends java.lang.Object
{
    public static final java.lang.String IMS_SHARED_PREFERENCES;
    public static final java.lang.String KEY_IMS_ON;
    public static final boolean IMS_DEFAULT_SETTING;
    public static final java.lang.String PROPERTY_DBG_VOLTE_VT_AVAIL_OVERRIDE;
    public static final int PROPERTY_DBG_VOLTE_VT_AVAIL_OVERRIDE_DEFAULT;
    private static final java.lang.String IMS_SERVICE;
    public static final int INCOMING_CALL_RESULT_CODE;
    public static final java.lang.String EXTRA_CALL_ID;
    public static final java.lang.String ACTION_IMS_SERVICE_UP;
    public static final java.lang.String ACTION_IMS_SERVICE_DOWN;
    public static final java.lang.String EXTRA_SUBID;
    public static final java.lang.String ACTION_IMS_INCOMING_CALL;
    public static final java.lang.String EXTRA_SERVICE_ID;
    public static final java.lang.String EXTRA_USSD;
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static java.util.HashMap sImsManagerInstances;
    private android.content.Context mContext;
    private long mSubId;
    private com.android.ims.internal.IImsService mImsService;
    private com.android.ims.ImsManager$ImsServiceDeathRecipient mDeathRecipient;
    private com.android.ims.ImsUt mUt;
    private com.android.ims.ImsConfig mConfig;
    private com.android.ims.ImsEcbm mEcbm;

    public static com.android.ims.ImsManager getInstance(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.util.HashMap r1, $r4, $r5, $r8, $r11;
        com.android.ims.ImsManager r2, $r7, $r14;
        java.lang.Throwable r3, $r15;
        java.lang.Long $r6, $r9, $r13;
        boolean $z0;
        java.lang.Object $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r4 = <com.android.ims.ImsManager: java.util.HashMap sImsManagerInstances>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.ims.ImsManager: java.util.HashMap sImsManagerInstances>;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z0 = virtualinvoke $r5.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        $r11 = <com.android.ims.ImsManager: java.util.HashMap sImsManagerInstances>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r12 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        $r14 = (com.android.ims.ImsManager) $r12;

        exitmonitor r1;

     label2:
        return $r14;

     label3:
        $r7 = new com.android.ims.ImsManager;

        specialinvoke $r7.<com.android.ims.ImsManager: void <init>(android.content.Context,long)>(r0, l0);

        r2 = $r7;

        $r8 = <com.android.ims.ImsManager: java.util.HashMap sImsManagerInstances>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r2);

        exitmonitor r1;

     label4:
        return r2;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        exitmonitor r1;

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean isEnhanced4gLteModeSettingEnabledByUser(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("IMS_PREFERENCES", 1);

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("IMS", 1);

        return $z0;
    }

    public static boolean isEnhanced4gLteModeSettingEnabledByPlatform(android.content.Context)
    {
        android.content.Context r0;
        int $i0;
        android.content.res.Resources $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <android.os.SystemProperties: int getInt(java.lang.String,int)>("persist.dbg.volte_avail_ovr", 0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(17956979);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r2.<android.content.res.Resources: boolean getBoolean(int)>(17956980);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void <init>(android.content.Context, long)
    {
        com.android.ims.ImsManager r0;
        android.content.Context r1;
        long l0;
        com.android.ims.ImsManager$ImsServiceDeathRecipient $r2;

        r0 := @this: com.android.ims.ImsManager;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService> = null;

        $r2 = new com.android.ims.ImsManager$ImsServiceDeathRecipient;

        specialinvoke $r2.<com.android.ims.ImsManager$ImsServiceDeathRecipient: void <init>(com.android.ims.ImsManager,com.android.ims.ImsManager$1)>(r0, null);

        r0.<com.android.ims.ImsManager: com.android.ims.ImsManager$ImsServiceDeathRecipient mDeathRecipient> = $r2;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm> = null;

        r0.<com.android.ims.ImsManager: android.content.Context mContext> = r1;

        r0.<com.android.ims.ImsManager: long mSubId> = l0;

        specialinvoke r0.<com.android.ims.ImsManager: void createImsService(boolean)>(1);

        return;
    }

    public int open(int, android.app.PendingIntent, com.android.ims.ImsConnectionStateListener) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0, $i1, i2;
        android.app.PendingIntent r1;
        com.android.ims.ImsConnectionStateListener r2;
        android.os.RemoteException r3, $r9;
        com.android.ims.internal.IImsService $r4;
        com.android.ims.ImsManager$ImsRegistrationListenerProxy $r5;
        com.android.ims.ImsException $r6, $r10;
        java.lang.NullPointerException $r7, $r8;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.app.PendingIntent;

        r2 := @parameter2: com.android.ims.ImsConnectionStateListener;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

        if r1 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("incomingCallPendingIntent can\'t be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("listener can\'t be null");

        throw $r7;

     label2:
        $r4 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        $r5 = specialinvoke r0.<com.android.ims.ImsManager: com.android.ims.ImsManager$ImsRegistrationListenerProxy createRegistrationListenerProxy(int,com.android.ims.ImsConnectionStateListener)>(i0, r2);

        i2 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: int open(int,android.app.PendingIntent,com.android.ims.internal.IImsRegistrationListener)>(i0, r1, $r5);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r3 = $r9;

        $r10 = new com.android.ims.ImsException;

        specialinvoke $r10.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("open()", r3, 106);

        throw $r10;

     label5:
        if i2 > 0 goto label6;

        $r6 = new com.android.ims.ImsException;

        $i1 = i2 * -1;

        specialinvoke $r6.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("open()", $i1);

        throw $r6;

     label6:
        return i2;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void close(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0;
        android.os.RemoteException r1, $r5;
        java.lang.Throwable r2, $r4;
        com.android.ims.internal.IImsService $r3;
        com.android.ims.ImsException $r6;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r3 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        interfaceinvoke $r3.<com.android.ims.internal.IImsService: void close(int)>(i0);

     label2:
        r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm> = null;

        goto label6;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new com.android.ims.ImsException;

        specialinvoke $r6.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("close()", r1, 106);

        throw $r6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig> = null;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm> = null;

        throw r2;

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public com.android.ims.ImsUtInterface getSupplementaryServiceConfiguration(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0;
        com.android.ims.internal.IImsUt r1;
        com.android.ims.ImsUt $r2, $r3, $r5;
        com.android.ims.internal.IImsService $r4;
        com.android.ims.ImsException $r6, $r8;
        android.os.RemoteException $r7, r9;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt>;

        if $r2 != null goto label5;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r4 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        r1 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsUt getUtInterface(int)>(i0);

        if r1 != null goto label2;

        $r6 = new com.android.ims.ImsException;

        specialinvoke $r6.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("getSupplementaryServiceConfiguration()", 801);

        throw $r6;

     label2:
        $r5 = new com.android.ims.ImsUt;

        specialinvoke $r5.<com.android.ims.ImsUt: void <init>(com.android.ims.internal.IImsUt)>(r1);

        r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt> = $r5;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new com.android.ims.ImsException;

        specialinvoke $r8.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getSupplementaryServiceConfiguration()", r9, 106);

        throw $r8;

     label5:
        $r3 = r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt>;

        return $r3;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    public boolean isConnected(int, int, int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0, i1, i2;
        android.os.RemoteException r1, $r3;
        com.android.ims.internal.IImsService $r2;
        boolean $z0;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        $z0 = interfaceinvoke $r2.<com.android.ims.internal.IImsService: boolean isConnected(int,int,int)>(i0, i1, i2);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("isServiceConnected()", r1, 106);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isOpened(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0;
        android.os.RemoteException r1, $r3;
        com.android.ims.internal.IImsService $r2;
        boolean $z0;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        $z0 = interfaceinvoke $r2.<com.android.ims.internal.IImsService: boolean isOpened(int)>(i0);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("isOpened()", r1, 106);

        throw $r4;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.ims.ImsCallProfile createCallProfile(int, int, int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0, i1, i2;
        android.os.RemoteException r1, $r4;
        com.android.ims.internal.IImsService $r2;
        com.android.ims.ImsCallProfile $r3;
        com.android.ims.ImsException $r5;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        $r3 = interfaceinvoke $r2.<com.android.ims.internal.IImsService: com.android.ims.ImsCallProfile createCallProfile(int,int,int)>(i0, i1, i2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new com.android.ims.ImsException;

        specialinvoke $r5.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("createCallProfile()", r1, 106);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.ims.ImsCall makeCall(int, com.android.ims.ImsCallProfile, java.lang.String[], com.android.ims.ImsCall$Listener) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0, $i1;
        com.android.ims.ImsCallProfile r1;
        java.lang.String[] r2;
        com.android.ims.ImsCall$Listener r3;
        com.android.ims.ImsCall r4, $r14;
        com.android.ims.internal.ImsCallSession r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13, $r16;
        android.content.Context $r15;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.ImsCallProfile;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: com.android.ims.ImsCall$Listener;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("makeCall :: serviceId=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", profile=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", callees=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsManager: void log(java.lang.String)>($r13);

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

        $r14 = new com.android.ims.ImsCall;

        $r15 = r0.<com.android.ims.ImsManager: android.content.Context mContext>;

        specialinvoke $r14.<com.android.ims.ImsCall: void <init>(android.content.Context,com.android.ims.ImsCallProfile)>($r15, r1);

        r4 = $r14;

        virtualinvoke r4.<com.android.ims.ImsCall: void setListener(com.android.ims.ImsCall$Listener)>(r3);

        r5 = specialinvoke r0.<com.android.ims.ImsManager: com.android.ims.internal.ImsCallSession createCallSession(int,com.android.ims.ImsCallProfile)>(i0, r1);

        if r2 == null goto label1;

        $i1 = lengthof r2;

        if $i1 != 1 goto label1;

        $r16 = r2[0];

        virtualinvoke r4.<com.android.ims.ImsCall: void start(com.android.ims.internal.ImsCallSession,java.lang.String)>(r5, $r16);

        goto label2;

     label1:
        virtualinvoke r4.<com.android.ims.ImsCall: void start(com.android.ims.internal.ImsCallSession,java.lang.String[])>(r5, r2);

     label2:
        return r4;
    }

    public com.android.ims.ImsCall takeCall(int, android.content.Intent, com.android.ims.ImsCall$Listener) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0, i1;
        android.content.Intent r1;
        com.android.ims.ImsCall$Listener r2;
        java.lang.String r3, $r11;
        com.android.ims.internal.IImsCallSession r4;
        com.android.ims.ImsCall r5, $r14;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        com.android.ims.internal.IImsService $r12;
        android.content.Context $r13;
        com.android.ims.internal.ImsCallSession $r15;
        com.android.ims.ImsCallProfile $r16;
        com.android.ims.ImsException $r17, $r18, $r19, $r20, $r21;
        java.lang.Throwable $r22, r23;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 := @parameter2: com.android.ims.ImsCall$Listener;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("takeCall :: serviceId=");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", incomingCall=");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsManager: void log(java.lang.String)>($r11);

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

        if r1 != null goto label1;

        $r19 = new com.android.ims.ImsException;

        specialinvoke $r19.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Can\'t retrieve session with null intent", 101);

        throw $r19;

     label1:
        i1 = staticinvoke <com.android.ims.ImsManager: int getServiceId(android.content.Intent)>(r1);

        if i0 == i1 goto label2;

        $r20 = new com.android.ims.ImsException;

        specialinvoke $r20.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Service id is mismatched in the incoming call intent", 101);

        throw $r20;

     label2:
        r3 = staticinvoke <com.android.ims.ImsManager: java.lang.String getCallId(android.content.Intent)>(r1);

        if r3 != null goto label3;

        $r17 = new com.android.ims.ImsException;

        specialinvoke $r17.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Call ID missing in the incoming call intent", 101);

        throw $r17;

     label3:
        $r12 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        r4 = interfaceinvoke $r12.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession getPendingCallSession(int,java.lang.String)>(i0, r3);

        if r4 != null goto label4;

        $r18 = new com.android.ims.ImsException;

        specialinvoke $r18.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("No pending session for the call", 107);

        throw $r18;

     label4:
        $r14 = new com.android.ims.ImsCall;

        $r13 = r0.<com.android.ims.ImsManager: android.content.Context mContext>;

        $r16 = interfaceinvoke r4.<com.android.ims.internal.IImsCallSession: com.android.ims.ImsCallProfile getCallProfile()>();

        specialinvoke $r14.<com.android.ims.ImsCall: void <init>(android.content.Context,com.android.ims.ImsCallProfile)>($r13, $r16);

        r5 = $r14;

        $r15 = new com.android.ims.internal.ImsCallSession;

        specialinvoke $r15.<com.android.ims.internal.ImsCallSession: void <init>(com.android.ims.internal.IImsCallSession)>(r4);

        virtualinvoke r5.<com.android.ims.ImsCall: void attachSession(com.android.ims.internal.ImsCallSession)>($r15);

        virtualinvoke r5.<com.android.ims.ImsCall: void setListener(com.android.ims.ImsCall$Listener)>(r2);

     label5:
        return r5;

     label6:
        $r22 := @caughtexception;

        r23 = $r22;

        $r21 = new com.android.ims.ImsException;

        specialinvoke $r21.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("takeCall()", r23, 0);

        throw $r21;

        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public com.android.ims.ImsConfig getConfigInterface() throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        com.android.ims.internal.IImsConfig r1;
        com.android.ims.ImsConfig $r2, $r5, $r8, $r10;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;
        com.android.ims.internal.IImsService $r9;
        com.android.ims.ImsException $r11, $r13;
        android.os.RemoteException $r12, r14;

        r0 := @this: com.android.ims.ImsManager;

        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig>;

        if $r2 != null goto label5;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r9 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        r1 = interfaceinvoke $r9.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsConfig getConfigInterface()>();

        if r1 != null goto label2;

        $r11 = new com.android.ims.ImsException;

        specialinvoke $r11.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("getConfigInterface()", 131);

        throw $r11;

     label2:
        $r10 = new com.android.ims.ImsConfig;

        specialinvoke $r10.<com.android.ims.ImsConfig: void <init>(com.android.ims.internal.IImsConfig)>(r1);

        r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig> = $r10;

     label3:
        goto label5;

     label4:
        $r12 := @caughtexception;

        r14 = $r12;

        $r13 = new com.android.ims.ImsException;

        specialinvoke $r13.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getConfigInterface()", r14, 106);

        throw $r13;

     label5:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getConfigInterface(), mConfig= ");

        $r5 = r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.ims.ImsManager: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig>;

        return $r8;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    private static java.lang.String getCallId(android.content.Intent)
    {
        android.content.Intent r0;
        java.lang.String $r1;

        r0 := @parameter0: android.content.Intent;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android:imsCallID");

        return $r1;
    }

    private static int getServiceId(android.content.Intent)
    {
        android.content.Intent r0;
        int $i0;

        r0 := @parameter0: android.content.Intent;

        if r0 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r0.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android:imsServiceId", -1);

        return $i0;
    }

    private void checkAndThrowExceptionIfServiceUnavailable() throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        com.android.ims.internal.IImsService $r1, $r2;
        com.android.ims.ImsException $r3;

        r0 := @this: com.android.ims.ImsManager;

        $r1 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        if $r1 != null goto label1;

        specialinvoke r0.<com.android.ims.ImsManager: void createImsService(boolean)>(1);

        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        if $r2 != null goto label1;

        $r3 = new com.android.ims.ImsException;

        specialinvoke $r3.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("Service is unavailable", 106);

        throw $r3;

     label1:
        return;
    }

    private static java.lang.String getImsServiceName(long)
    {
        long l0;

        l0 := @parameter0: long;

        return "ims";
    }

    private void createImsService(boolean)
    {
        com.android.ims.ImsManager r0;
        boolean z0;
        android.os.IBinder r1, r8;
        long $l0, $l1;
        java.lang.String $r3, $r6;
        com.android.ims.internal.IImsService $r4;
        com.android.ims.ImsManager$ImsServiceDeathRecipient $r5;
        android.os.RemoteException $r7;

        r0 := @this: com.android.ims.ImsManager;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $l1 = r0.<com.android.ims.ImsManager: long mSubId>;

        $r6 = staticinvoke <com.android.ims.ImsManager: java.lang.String getImsServiceName(long)>($l1);

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>($r6);

        if r1 != null goto label1;

        return;

     label1:
        $l0 = r0.<com.android.ims.ImsManager: long mSubId>;

        $r3 = staticinvoke <com.android.ims.ImsManager: java.lang.String getImsServiceName(long)>($l0);

        r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>($r3);

        if r8 == null goto label5;

     label2:
        $r5 = r0.<com.android.ims.ImsManager: com.android.ims.ImsManager$ImsServiceDeathRecipient mDeathRecipient>;

        interfaceinvoke r8.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r5, 0);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        $r4 = staticinvoke <com.android.ims.internal.IImsService$Stub: com.android.ims.internal.IImsService asInterface(android.os.IBinder)>(r8);

        r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService> = $r4;

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private com.android.ims.internal.ImsCallSession createCallSession(int, com.android.ims.ImsCallProfile) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0;
        com.android.ims.ImsCallProfile r1;
        com.android.ims.internal.ImsCallSession $r3;
        com.android.ims.internal.IImsService $r4;
        com.android.ims.internal.IImsCallSession $r5;
        android.os.RemoteException $r6;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.ImsCallProfile;

     label1:
        $r3 = new com.android.ims.internal.ImsCallSession;

        $r4 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        $r5 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession createCallSession(int,com.android.ims.ImsCallProfile,com.android.ims.internal.IImsCallSessionListener)>(i0, r1, null);

        specialinvoke $r3.<com.android.ims.internal.ImsCallSession: void <init>(com.android.ims.internal.IImsCallSession)>($r5);

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private com.android.ims.ImsManager$ImsRegistrationListenerProxy createRegistrationListenerProxy(int, com.android.ims.ImsConnectionStateListener)
    {
        com.android.ims.ImsManager r0;
        int i0;
        com.android.ims.ImsConnectionStateListener r1;
        com.android.ims.ImsManager$ImsRegistrationListenerProxy r2, $r3;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ims.ImsConnectionStateListener;

        $r3 = new com.android.ims.ImsManager$ImsRegistrationListenerProxy;

        specialinvoke $r3.<com.android.ims.ImsManager$ImsRegistrationListenerProxy: void <init>(com.android.ims.ImsManager,int,com.android.ims.ImsConnectionStateListener)>(r0, i0, r1);

        r2 = $r3;

        return r2;
    }

    private void log(java.lang.String)
    {
        com.android.ims.ImsManager r0;
        java.lang.String r1;

        r0 := @this: com.android.ims.ImsManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>("ImsManager", r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.ims.ImsManager r0;
        java.lang.String r1;

        r0 := @this: com.android.ims.ImsManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>("ImsManager", r1);

        return;
    }

    private void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.ims.ImsManager r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: com.android.ims.ImsManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ImsManager", r1, r2);

        return;
    }

    public void turnOnIms() throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        android.os.RemoteException r1, $r3;
        com.android.ims.internal.IImsService $r2;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.ims.ImsManager;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        interfaceinvoke $r2.<com.android.ims.internal.IImsService: void turnOnIms()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("turnOnIms() ", r1, 106);

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setAdvanced4GMode(boolean) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        boolean z0, $z1;
        com.android.ims.ImsConfig r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        byte $b0, $b1;

        r0 := @this: com.android.ims.ImsManager;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

        r1 = virtualinvoke r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig getConfigInterface()>();

        if r1 == null goto label5;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        virtualinvoke r1.<com.android.ims.ImsConfig: void setFeatureValue(int,int,int,com.android.ims.ImsConfigListener)>(0, 13, $b1, null);

        if z0 == 0 goto label3;

        $b0 = 1;

        goto label4;

     label3:
        $b0 = 0;

     label4:
        virtualinvoke r1.<com.android.ims.ImsConfig: void setFeatureValue(int,int,int,com.android.ims.ImsConfigListener)>(1, 13, $b0, null);

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r0.<com.android.ims.ImsManager: void turnOnIms()>();

        goto label7;

     label6:
        $r2 = r0.<com.android.ims.ImsManager: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke $r3.<android.content.res.Resources: boolean getBoolean(int)>(17956978);

        if $z1 == 0 goto label7;

        specialinvoke r0.<com.android.ims.ImsManager: void log(java.lang.String)>("setAdvanced4GMode() : imsServiceAllowTurnOff -> turnOffIms");

        virtualinvoke r0.<com.android.ims.ImsManager: void turnOffIms()>();

     label7:
        return;
    }

    public void turnOffIms() throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        android.os.RemoteException r1, $r3;
        com.android.ims.internal.IImsService $r2;
        com.android.ims.ImsException $r4;

        r0 := @this: com.android.ims.ImsManager;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        interfaceinvoke $r2.<com.android.ims.internal.IImsService: void turnOffIms()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = new com.android.ims.ImsException;

        specialinvoke $r4.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("turnOffIms() ", r1, 106);

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public com.android.ims.ImsEcbm getEcbmInterface(int) throws com.android.ims.ImsException
    {
        com.android.ims.ImsManager r0;
        int i0;
        com.android.ims.internal.IImsEcbm r1;
        com.android.ims.ImsEcbm $r2, $r3, $r5;
        com.android.ims.internal.IImsService $r4;
        com.android.ims.ImsException $r6, $r8;
        android.os.RemoteException $r7, r9;

        r0 := @this: com.android.ims.ImsManager;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm>;

        if $r2 != null goto label5;

        specialinvoke r0.<com.android.ims.ImsManager: void checkAndThrowExceptionIfServiceUnavailable()>();

     label1:
        $r4 = r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService>;

        r1 = interfaceinvoke $r4.<com.android.ims.internal.IImsService: com.android.ims.internal.IImsEcbm getEcbmInterface(int)>(i0);

        if r1 != null goto label2;

        $r6 = new com.android.ims.ImsException;

        specialinvoke $r6.<com.android.ims.ImsException: void <init>(java.lang.String,int)>("getEcbmInterface()", 901);

        throw $r6;

     label2:
        $r5 = new com.android.ims.ImsEcbm;

        specialinvoke $r5.<com.android.ims.ImsEcbm: void <init>(com.android.ims.internal.IImsEcbm)>(r1);

        r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm> = $r5;

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = new com.android.ims.ImsException;

        specialinvoke $r8.<com.android.ims.ImsException: void <init>(java.lang.String,java.lang.Throwable,int)>("getEcbmInterface()", r9, 106);

        throw $r8;

     label5:
        $r3 = r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm>;

        return $r3;

        catch android.os.RemoteException from label1 to label3 with label4;
    }

    static com.android.ims.internal.IImsService access$102(com.android.ims.ImsManager, com.android.ims.internal.IImsService)
    {
        com.android.ims.ImsManager r0;
        com.android.ims.internal.IImsService r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        r1 := @parameter1: com.android.ims.internal.IImsService;

        r0.<com.android.ims.ImsManager: com.android.ims.internal.IImsService mImsService> = r1;

        return r1;
    }

    static com.android.ims.ImsUt access$202(com.android.ims.ImsManager, com.android.ims.ImsUt)
    {
        com.android.ims.ImsManager r0;
        com.android.ims.ImsUt r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        r1 := @parameter1: com.android.ims.ImsUt;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsUt mUt> = r1;

        return r1;
    }

    static com.android.ims.ImsConfig access$302(com.android.ims.ImsManager, com.android.ims.ImsConfig)
    {
        com.android.ims.ImsManager r0;
        com.android.ims.ImsConfig r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        r1 := @parameter1: com.android.ims.ImsConfig;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsConfig mConfig> = r1;

        return r1;
    }

    static com.android.ims.ImsEcbm access$402(com.android.ims.ImsManager, com.android.ims.ImsEcbm)
    {
        com.android.ims.ImsManager r0;
        com.android.ims.ImsEcbm r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        r1 := @parameter1: com.android.ims.ImsEcbm;

        r0.<com.android.ims.ImsManager: com.android.ims.ImsEcbm mEcbm> = r1;

        return r1;
    }

    static android.content.Context access$500(com.android.ims.ImsManager)
    {
        com.android.ims.ImsManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        $r1 = r0.<com.android.ims.ImsManager: android.content.Context mContext>;

        return $r1;
    }

    static long access$600(com.android.ims.ImsManager)
    {
        com.android.ims.ImsManager r0;
        long $l0;

        r0 := @parameter0: com.android.ims.ImsManager;

        $l0 = r0.<com.android.ims.ImsManager: long mSubId>;

        return $l0;
    }

    static void access$700(com.android.ims.ImsManager, java.lang.String)
    {
        com.android.ims.ImsManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.ims.ImsManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.ims.ImsManager: void log(java.lang.String)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.android.ims.ImsManager: boolean DBG> = 1;

        <com.android.ims.ImsManager: java.lang.String TAG> = "ImsManager";

        <com.android.ims.ImsManager: java.lang.String EXTRA_USSD> = "android:ussd";

        <com.android.ims.ImsManager: java.lang.String EXTRA_SERVICE_ID> = "android:imsServiceId";

        <com.android.ims.ImsManager: java.lang.String ACTION_IMS_INCOMING_CALL> = "com.android.ims.IMS_INCOMING_CALL";

        <com.android.ims.ImsManager: java.lang.String EXTRA_SUBID> = "android:subid";

        <com.android.ims.ImsManager: java.lang.String ACTION_IMS_SERVICE_DOWN> = "com.android.ims.IMS_SERVICE_DOWN";

        <com.android.ims.ImsManager: java.lang.String ACTION_IMS_SERVICE_UP> = "com.android.ims.IMS_SERVICE_UP";

        <com.android.ims.ImsManager: java.lang.String EXTRA_CALL_ID> = "android:imsCallID";

        <com.android.ims.ImsManager: int INCOMING_CALL_RESULT_CODE> = 101;

        <com.android.ims.ImsManager: java.lang.String IMS_SERVICE> = "ims";

        <com.android.ims.ImsManager: int PROPERTY_DBG_VOLTE_VT_AVAIL_OVERRIDE_DEFAULT> = 0;

        <com.android.ims.ImsManager: java.lang.String PROPERTY_DBG_VOLTE_VT_AVAIL_OVERRIDE> = "persist.dbg.volte_avail_ovr";

        <com.android.ims.ImsManager: boolean IMS_DEFAULT_SETTING> = 1;

        <com.android.ims.ImsManager: java.lang.String KEY_IMS_ON> = "IMS";

        <com.android.ims.ImsManager: java.lang.String IMS_SHARED_PREFERENCES> = "IMS_PREFERENCES";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.ims.ImsManager: java.util.HashMap sImsManagerInstances> = $r0;

        return;
    }
}
