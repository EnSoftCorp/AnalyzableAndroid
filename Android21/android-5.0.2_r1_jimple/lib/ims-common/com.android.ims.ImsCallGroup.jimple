public class com.android.ims.ImsCallGroup extends java.lang.Object implements com.android.ims.internal.ICallGroup
{
    private java.lang.Object mLockObj;
    private com.android.ims.ImsCall mOwner;
    private com.android.ims.ImsCall mNeutralReferrer;
    private java.util.ArrayList mReferrers;

    public void <init>()
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.ims.ImsCallGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers> = $r2;

        return;
    }

    public com.android.ims.internal.ICall getNeutralReferrer()
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.ims.ImsCall $r4;

        r0 := @this: com.android.ims.ImsCallGroup;

        $r3 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: com.android.ims.ImsCall mNeutralReferrer>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.ims.internal.ICall getOwner()
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        com.android.ims.ImsCall $r4;

        r0 := @this: com.android.ims.ImsCallGroup;

        $r3 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: com.android.ims.ImsCall mOwner>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.util.ArrayList getReferrers()
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.ArrayList $r4;

        r0 := @this: com.android.ims.ImsCallGroup;

        $r3 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers>;

        exitmonitor r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasReferrer()
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        java.util.ArrayList $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.ims.ImsCallGroup;

        $r3 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z1;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isOwner(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1;
        com.android.ims.ImsCall r2, $r6;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        $r5 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        r2 = r0.<com.android.ims.ImsCallGroup: com.android.ims.ImsCall mOwner>;

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        if r1 == null goto label6;

        if r2 != null goto label7;

     label6:
        return 0;

     label7:
        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label8;

        return 0;

     label8:
        $r6 = (com.android.ims.ImsCall) r1;

        $z1 = specialinvoke r0.<com.android.ims.ImsCallGroup: boolean isSameCall(com.android.ims.ImsCall,com.android.ims.ImsCall)>(r2, $r6);

        return $z1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isReferrer(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1, r4;
        java.lang.Object r2, $r6, $r8;
        java.util.Iterator r3;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r7;
        com.android.ims.ImsCall $r9, $r10;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 != null goto label01;

        return 0;

     label01:
        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label02;

        return 0;

     label02:
        $r6 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r2 = $r6;

        entermonitor $r6;

     label03:
        $r7 = r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers>;

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.ims.internal.ICall) $r8;

        if r4 == null goto label06;

        $r10 = (com.android.ims.ImsCall) r4;

        $r9 = (com.android.ims.ImsCall) r1;

        $z2 = specialinvoke r0.<com.android.ims.ImsCallGroup: boolean isSameCall(com.android.ims.ImsCall,com.android.ims.ImsCall)>($r10, $r9);

        if $z2 == 0 goto label06;

        exitmonitor r2;

     label05:
        return 1;

     label06:
        goto label04;

     label07:
        exitmonitor r2;

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r2;

     label10:
        throw r5;

     label11:
        return 0;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void addReferrer(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r5;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label2;

        return;

     label2:
        $z1 = virtualinvoke r0.<com.android.ims.ImsCallGroup: boolean isReferrer(com.android.ims.internal.ICall)>(r1);

        if $z1 == 0 goto label3;

        return;

     label3:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r2 = $r4;

        entermonitor $r4;

     label4:
        $r5 = r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void removeReferrer(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        boolean $z0;
        java.util.ArrayList $r5;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 != null goto label1;

        return;

     label1:
        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label2;

        return;

     label2:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r2 = $r4;

        entermonitor $r4;

     label3:
        $r5 = r0.<com.android.ims.ImsCallGroup: java.util.ArrayList mReferrers>;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setNeutralReferrer(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        com.android.ims.ImsCall $r5;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 == null goto label1;

        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = (com.android.ims.ImsCall) r1;

        r0.<com.android.ims.ImsCallGroup: com.android.ims.ImsCall mNeutralReferrer> = $r5;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setOwner(com.android.ims.internal.ICall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.internal.ICall r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        com.android.ims.ImsCall $r5;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.internal.ICall;

        if r1 == null goto label1;

        $z0 = r1 instanceof com.android.ims.ImsCall;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.ims.ImsCallGroup: java.lang.Object mLockObj>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = (com.android.ims.ImsCall) r1;

        r0.<com.android.ims.ImsCallGroup: com.android.ims.ImsCall mOwner> = $r5;

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.ims.internal.ICall getReferrer(java.lang.String)
    {
        com.android.ims.ImsCallGroup r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        java.util.Iterator r3;
        com.android.ims.internal.ICall r4;
        boolean $z0, $z1, $z2;
        java.lang.Object $r5;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        r2 = virtualinvoke r0.<com.android.ims.ImsCallGroup: java.util.ArrayList getReferrers()>();

        if r2 != null goto label3;

        return null;

     label3:
        r3 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.ims.internal.ICall) $r5;

        if r4 == null goto label5;

        $z2 = interfaceinvoke r4.<com.android.ims.internal.ICall: boolean checkIfRemoteUserIsSame(java.lang.String)>(r1);

        if $z2 == 0 goto label5;

        return r4;

     label5:
        goto label4;

     label6:
        return null;
    }

    private boolean isSameCall(com.android.ims.ImsCall, com.android.ims.ImsCall)
    {
        com.android.ims.ImsCallGroup r0;
        com.android.ims.ImsCall r1, r2;
        boolean $z0;

        r0 := @this: com.android.ims.ImsCallGroup;

        r1 := @parameter0: com.android.ims.ImsCall;

        r2 := @parameter1: com.android.ims.ImsCall;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return 0;

     label2:
        $z0 = virtualinvoke r1.<com.android.ims.ImsCall: boolean equalsTo(com.android.ims.internal.ICall)>(r2);

        return $z0;
    }
}
