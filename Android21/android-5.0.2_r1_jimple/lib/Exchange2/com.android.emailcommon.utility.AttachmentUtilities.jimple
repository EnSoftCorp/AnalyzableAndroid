public class com.android.emailcommon.utility.AttachmentUtilities extends java.lang.Object
{
    public static final java.lang.String FORMAT_RAW;
    public static final java.lang.String FORMAT_THUMBNAIL;
    private static final java.lang.String[] ATTACHMENT_CACHED_FILE_PROJECTION;
    public static final java.lang.String[] ACCEPTABLE_ATTACHMENT_SEND_INTENT_TYPES;
    public static final java.lang.String[] ACCEPTABLE_ATTACHMENT_SEND_UI_TYPES;
    public static final java.lang.String[] ACCEPTABLE_ATTACHMENT_VIEW_TYPES;
    public static final java.lang.String[] UNACCEPTABLE_ATTACHMENT_VIEW_TYPES;
    public static final java.lang.String[] ACCEPTABLE_ATTACHMENT_DOWNLOAD_TYPES;
    public static final java.lang.String[] UNACCEPTABLE_ATTACHMENT_DOWNLOAD_TYPES;
    public static final java.lang.String[] UNACCEPTABLE_ATTACHMENT_EXTENSIONS;
    public static final java.lang.String[] INSTALLABLE_ATTACHMENT_EXTENSIONS;
    public static final int MAX_ATTACHMENT_DOWNLOAD_SIZE;
    public static final int MAX_ATTACHMENT_UPLOAD_SIZE;
    private static android.net.Uri sUri;

    public void <init>()
    {
        com.android.emailcommon.utility.AttachmentUtilities r0;

        r0 := @this: com.android.emailcommon.utility.AttachmentUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri getAttachmentUri(long, long)
    {
        long l0, l1;
        android.net.Uri $r0, $r1, $r8, $r10;
        android.net.Uri$Builder $r2, $r4, $r6, $r7;
        java.lang.String $r3, $r5, $r9;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r0 = <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri>;

        if $r0 != null goto label1;

        $r9 = <com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String ATTACHMENT_PROVIDER_URI_PREFIX>;

        $r10 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri> = $r10;

     label1:
        $r1 = <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri>;

        $r2 = virtualinvoke $r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r4 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r3);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r6 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("RAW");

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    public static android.net.Uri getAttachmentThumbnailUri(long, long, long, long)
    {
        long l0, l1, l2, l3;
        android.net.Uri $r0, $r1, $r13, $r14;
        android.net.Uri$Builder $r2, $r4, $r6, $r7, $r8, $r10;
        java.lang.String $r3, $r5, $r9, $r11, $r12;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        $r0 = <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri>;

        if $r0 != null goto label1;

        $r12 = <com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String ATTACHMENT_PROVIDER_URI_PREFIX>;

        $r14 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r12);

        <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri> = $r14;

     label1:
        $r1 = <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri sUri>;

        $r2 = virtualinvoke $r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r4 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r3);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r6 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("THUMBNAIL");

        $r9 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r9);

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        $r10 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r13;
    }

    public static java.io.File getAttachmentFilename(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1;
        java.io.File $r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r1 = new java.io.File;

        $r2 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentDirectory(android.content.Context,long)>(r0, l0);

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r3);

        return $r1;
    }

    public static java.io.File getAttachmentDirectory(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.io.File $r5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".db_att");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>($r4);

        return $r5;
    }

    public static java.lang.String inferMimeType(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, $r4, $r5, $r6, $r7, $r11, $r13;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.webkit.MimeTypeMap $r8;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = null;

        r3 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String getFilenameExtension(java.lang.String)>(r0);

        $r4 = "text/plain";

        z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        $r5 = "eml";

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label01;

        r2 = "message/rfc822";

        goto label09;

     label01:
        if z0 != 0 goto label02;

        $r13 = "application/octet-stream";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z8 == 0 goto label03;

     label02:
        $z7 = 1;

        goto label04;

     label03:
        $z7 = 0;

     label04:
        z1 = $z7;

        if z1 != 0 goto label05;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z6 == 0 goto label08;

     label05:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z3 != 0 goto label09;

        $r8 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        r2 = virtualinvoke $r8.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>(r3);

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z5 == 0 goto label09;

        if z0 == 0 goto label06;

        $r11 = r1;

        goto label07;

     label06:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("application/");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r2 = $r11;

        goto label09;

     label08:
        r2 = r1;

     label09:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z4 == 0 goto label12;

        if z0 == 0 goto label10;

        $r7 = "text/plain";

        goto label11;

     label10:
        $r7 = "application/octet-stream";

     label11:
        r2 = $r7;

     label12:
        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        return $r6;
    }

    public static java.lang.String getFilenameExtension(java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label1;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i0 >= $i2 goto label1;

        $i3 = i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

     label1:
        return r1;
    }

    public static android.net.Uri resolveAttachmentIdToContentUri(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1, r4;
        android.database.Cursor r2;
        java.lang.String r3;
        java.lang.Throwable r5, $r7;
        java.lang.String[] $r6;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "_data";

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r6, null, null, null);

        if r2 == null goto label6;

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        if r3 == null goto label3;

        r4 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r3);

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return r4;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r7 := @caughtexception;

        r5 = $r7;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r5;

     label6:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void deleteAllAttachmentFiles(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1, l2;
        android.net.Uri r1, $r5;
        android.database.Cursor r2;
        java.io.File r3;
        java.lang.Throwable r4, $r8;
        android.content.ContentResolver $r6;
        java.lang.String[] $r7;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r5 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri MESSAGE_ID_URI>;

        r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r5, l1);

        $r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String[] ID_PROJECTION>;

        r2 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r7, null, null, null);

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        r3 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentFilename(android.content.Context,long,long)>(r0, l0, l2);

        virtualinvoke r3.<java.io.File: boolean delete()>();

        goto label1;

     label2:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

     label4:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void deleteAllCachedAttachmentFiles(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1;
        android.net.Uri r1, $r6;
        android.database.Cursor r2;
        java.lang.String r3;
        java.io.File r4, $r9;
        java.lang.Throwable r5, $r10;
        android.content.ContentResolver $r7;
        java.lang.String[] $r8;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r6 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri MESSAGE_ID_URI>;

        r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r6, l1);

        $r7 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ATTACHMENT_CACHED_FILE_PROJECTION>;

        r2 = virtualinvoke $r7.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r8, null, null, null);

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        r3 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        $r9 = new java.io.File;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r9;

        virtualinvoke r4.<java.io.File: boolean delete()>();

     label2:
        goto label1;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void deleteAllMailboxAttachmentFiles(android.content.Context, long, long)
    {
        android.content.Context r0;
        long l0, l1, l2;
        android.database.Cursor r1;
        java.lang.Throwable r2, $r8;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4, $r6;
        android.net.Uri $r5;
        java.lang.String $r7;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r6 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] ID_COLUMN_PROJECTION>;

        $r4 = newarray (java.lang.String)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r4[0] = $r7;

        r1 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r6, "mailboxKey=?", $r4, null);

     label1:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label2;

        l2 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: void deleteAllAttachmentFiles(android.content.Context,long,long)>(r0, l0, l2);

        goto label1;

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void deleteAllAccountAttachmentFiles(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.io.File[] r1, r2;
        int i1, i2;
        java.io.File r3, $r4;
        boolean z0;
        java.lang.StringBuilder $r5, $r7, $r10;
        java.lang.String $r6, $r8, $r9;
        java.lang.Object[] $r11;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r4 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: java.io.File getAttachmentDirectory(android.content.Context,long)>(r0, l0);

        r1 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label1;

        return;

     label1:
        r2 = r1;

        i1 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r3 = r2[i2];

        z0 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if z0 != 0 goto label3;

        $r6 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete attachment file ");

        $r8 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r6, $r9, $r11);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    private static long copyFile(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        long l0;
        int $i1;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        $i1 = staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r0, r1);

        l0 = (long) $i1;

        virtualinvoke r0.<java.io.InputStream: void close()>();

        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        virtualinvoke r1.<java.io.OutputStream: void close()>();

        return l0;
    }

    public static void saveAttachment(android.content.Context, java.io.InputStream, com.android.emailcommon.provider.EmailContent$Attachment)
    {
        android.content.Context r0;
        java.io.InputStream r1;
        com.android.emailcommon.provider.EmailContent$Attachment r2;
        android.net.Uri r3, r7, $r12, $r27;
        android.content.ContentValues r4, $r13;
        long l0, l1, l2, l3, $l4;
        java.lang.String r5, r9, r11, $r15, $r16, $r18, $r20, $r21, $r23, $r25, $r30, $r32, $r37;
        android.content.ContentResolver r6, $r28;
        java.io.File r8, r42;
        android.app.DownloadManager r10;
        int $i5;
        java.lang.Object[] $r14, $r31, $r36;
        boolean $z0, $z2, $z3;
        java.io.IOException $r17, $r33, $r39, $r40;
        java.io.FileOutputStream $r19;
        java.lang.String[] $r22;
        java.lang.Object $r24;
        java.lang.Long $r26, $r34;
        java.lang.Integer $r29, $r41;
        java.lang.IllegalArgumentException $r35, r43;
        java.io.OutputStream $r38;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.InputStream;

        r2 := @parameter2: com.android.emailcommon.provider.EmailContent$Attachment;

        $r12 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri CONTENT_URI>;

        $l4 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r12, $l4);

        $r13 = new android.content.ContentValues;

        specialinvoke $r13.<android.content.ContentValues: void <init>()>();

        r4 = $r13;

        l0 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        l1 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: long mAccountKey>;

     label01:
        r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i5 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: int mUiDestination>;

        if $i5 != 0 goto label02;

        r7 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: android.net.Uri getAttachmentUri(long,long)>(l1, l0);

        $r38 = virtualinvoke r6.<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>(r7);

        l2 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: long copyFile(java.io.InputStream,java.io.OutputStream)>(r1, $r38);

        r5 = virtualinvoke r7.<android.net.Uri: java.lang.String toString()>();

        goto label11;

     label02:
        $z0 = staticinvoke <com.android.emailcommon.utility.Utility: boolean isExternalStorageMounted()>();

        if $z0 == 0 goto label10;

        $r16 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r16);

        if $z2 == 0 goto label03;

        $r30 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r31 = newarray (java.lang.Object)[1];

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r31[0] = $r34;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r30, "Trying to save an attachment with no name: %d", $r31);

        $r33 = new java.io.IOException;

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>("Can\'t save an attachment with no name");

        throw $r33;

     label03:
        $r18 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        r42 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r18);

        virtualinvoke r42.<java.io.File: boolean mkdirs()>();

        $r20 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        r8 = staticinvoke <com.android.emailcommon.utility.Utility: java.io.File createUniqueFile(java.io.File,java.lang.String)>(r42, $r20);

        $r19 = new java.io.FileOutputStream;

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r8);

        l2 = staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: long copyFile(java.io.InputStream,java.io.OutputStream)>(r1, $r19);

        r9 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r22 = newarray (java.lang.String)[1];

        $r22[0] = r9;

        staticinvoke <android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection$OnScanCompletedListener)>(r0, $r22, null, null);

        $r21 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType>;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r21);

        if $z3 == 0 goto label04;

        $r32 = "application/octet-stream";

        goto label05;

     label04:
        $r32 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType>;

     label05:
        r11 = $r32;

     label06:
        $r24 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("download");

        r10 = (android.app.DownloadManager) $r24;

        $r23 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        $r25 = r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        l3 = virtualinvoke r10.<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>($r23, $r25, 0, r11, r9, l2, 1);

        $r27 = virtualinvoke r10.<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>(l3);

        r5 = virtualinvoke $r27.<android.net.Uri: java.lang.String toString()>();

     label07:
        goto label09;

     label08:
        $r35 := @caughtexception;

        r43 = $r35;

        $r37 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r36 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r37, r43, "IAE from DownloadManager while saving attachment", $r36);

        $r39 = new java.io.IOException;

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.Throwable)>(r43);

        throw $r39;

     label09:
        goto label11;

     label10:
        $r15 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r15, "Trying to save an attachment without external storage?", $r14);

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>()>();

        throw $r17;

     label11:
        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("size", $r26);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("contentUri", r5);

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiState", $r29);

     label12:
        goto label14;

     label13:
        $r40 := @caughtexception;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiState", $r41);

     label14:
        $r28 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r28.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r3, r4, null, null);

        return;

        catch java.lang.IllegalArgumentException from label06 to label07 with label08;
        catch java.io.IOException from label01 to label12 with label13;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        <com.android.emailcommon.utility.AttachmentUtilities: int MAX_ATTACHMENT_UPLOAD_SIZE> = 5242880;

        <com.android.emailcommon.utility.AttachmentUtilities: int MAX_ATTACHMENT_DOWNLOAD_SIZE> = 5242880;

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String FORMAT_THUMBNAIL> = "THUMBNAIL";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String FORMAT_RAW> = "RAW";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "cachedFile";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ATTACHMENT_CACHED_FILE_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "*/*";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ACCEPTABLE_ATTACHMENT_SEND_INTENT_TYPES> = $r1;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "image/*";

        $r2[1] = "video/*";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ACCEPTABLE_ATTACHMENT_SEND_UI_TYPES> = $r2;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = "*/*";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ACCEPTABLE_ATTACHMENT_VIEW_TYPES> = $r3;

        $r4 = newarray (java.lang.String)[0];

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] UNACCEPTABLE_ATTACHMENT_VIEW_TYPES> = $r4;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "*/*";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] ACCEPTABLE_ATTACHMENT_DOWNLOAD_TYPES> = $r5;

        $r6 = newarray (java.lang.String)[0];

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] UNACCEPTABLE_ATTACHMENT_DOWNLOAD_TYPES> = $r6;

        $r7 = newarray (java.lang.String)[36];

        $r7[0] = "ade";

        $r7[1] = "adp";

        $r7[2] = "bat";

        $r7[3] = "chm";

        $r7[4] = "cmd";

        $r7[5] = "com";

        $r7[6] = "cpl";

        $r7[7] = "dll";

        $r7[8] = "exe";

        $r7[9] = "hta";

        $r7[10] = "ins";

        $r7[11] = "isp";

        $r7[12] = "jse";

        $r7[13] = "lib";

        $r7[14] = "mde";

        $r7[15] = "msc";

        $r7[16] = "msp";

        $r7[17] = "mst";

        $r7[18] = "pif";

        $r7[19] = "scr";

        $r7[20] = "sct";

        $r7[21] = "shb";

        $r7[22] = "sys";

        $r7[23] = "vb";

        $r7[24] = "vbe";

        $r7[25] = "vbs";

        $r7[26] = "vxd";

        $r7[27] = "wsc";

        $r7[28] = "wsf";

        $r7[29] = "wsh";

        $r7[30] = "zip";

        $r7[31] = "gz";

        $r7[32] = "z";

        $r7[33] = "tar";

        $r7[34] = "tgz";

        $r7[35] = "bz2";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] UNACCEPTABLE_ATTACHMENT_EXTENSIONS> = $r7;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "apk";

        <com.android.emailcommon.utility.AttachmentUtilities: java.lang.String[] INSTALLABLE_ATTACHMENT_EXTENSIONS> = $r8;

        return;
    }
}
