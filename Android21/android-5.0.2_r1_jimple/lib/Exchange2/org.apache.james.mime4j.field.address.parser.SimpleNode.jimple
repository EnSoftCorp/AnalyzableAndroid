public class org.apache.james.mime4j.field.address.parser.SimpleNode extends org.apache.james.mime4j.field.address.parser.BaseNode implements org.apache.james.mime4j.field.address.parser.Node
{
    protected org.apache.james.mime4j.field.address.parser.Node parent;
    protected org.apache.james.mime4j.field.address.parser.Node[] children;
    protected int id;
    protected org.apache.james.mime4j.field.address.parser.AddressListParser parser;

    public void <init>(int)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        int i0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.james.mime4j.field.address.parser.BaseNode: void <init>()>();

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: int id> = i0;

        return;
    }

    public void <init>(org.apache.james.mime4j.field.address.parser.AddressListParser, int)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.AddressListParser r1;
        int i0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.AddressListParser parser> = r1;

        return;
    }

    public void jjtOpen()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        return;
    }

    public void jjtClose()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        return;
    }

    public void jjtSetParent(org.apache.james.mime4j.field.address.parser.Node)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.Node r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node parent> = r1;

        return;
    }

    public org.apache.james.mime4j.field.address.parser.Node jjtGetParent()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.Node $r1;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node parent>;

        return $r1;
    }

    public void jjtAddChild(org.apache.james.mime4j.field.address.parser.Node, int)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.Node r1;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.james.mime4j.field.address.parser.Node[] r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.Node;

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r3 != null goto label1;

        $i4 = i0 + 1;

        $r8 = newarray (org.apache.james.mime4j.field.address.parser.Node)[$i4];

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children> = $r8;

        goto label2;

     label1:
        $r4 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i1 = lengthof $r4;

        if i0 < $i1 goto label2;

        $i2 = i0 + 1;

        r2 = newarray (org.apache.james.mime4j.field.address.parser.Node)[$i2];

        $r7 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r6 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i3 = lengthof $r6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, r2, 0, $i3);

        r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children> = r2;

     label2:
        $r5 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r5[i0] = r1;

        return;
    }

    public org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        int i0;
        org.apache.james.mime4j.field.address.parser.Node[] $r1;
        org.apache.james.mime4j.field.address.parser.Node $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r2 = $r1[i0];

        return $r2;
    }

    public int jjtGetNumChildren()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.Node[] $r1, $r2;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r1 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i0 = lengthof $r2;

     label2:
        return $i0;
    }

    public java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor, java.lang.Object)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.AddressListParserVisitor r1;
        java.lang.Object r2, $r3;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r1.<org.apache.james.mime4j.field.address.parser.AddressListParserVisitor: java.lang.Object visit(org.apache.james.mime4j.field.address.parser.SimpleNode,java.lang.Object)>(r0, r2);

        return $r3;
    }

    public java.lang.Object childrenAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor, java.lang.Object)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        org.apache.james.mime4j.field.address.parser.AddressListParserVisitor r1;
        java.lang.Object r2;
        int i0, $i1;
        org.apache.james.mime4j.field.address.parser.Node[] $r3, $r4, $r5;
        org.apache.james.mime4j.field.address.parser.Node $r6;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.AddressListParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r3 == null goto label2;

        i0 = 0;

     label1:
        $r4 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r5 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r6 = $r5[i0];

        interfaceinvoke $r6.<org.apache.james.mime4j.field.address.parser.Node: java.lang.Object jjtAccept(org.apache.james.mime4j.field.address.parser.AddressListParserVisitor,java.lang.Object)>(r1, r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        $r1 = <org.apache.james.mime4j.field.address.parser.AddressListParserTreeConstants: java.lang.String[] jjtNodeName>;

        $i0 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: int id>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.String toString(java.lang.String)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0;
        java.lang.String r1, $r4, $r6;
        java.lang.StringBuilder $r2, $r3, $r5;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void dump(java.lang.String)
    {
        org.apache.james.mime4j.field.address.parser.SimpleNode r0, r2;
        java.lang.String r1, $r4, $r12;
        int i0, $i1;
        java.io.PrintStream $r3;
        org.apache.james.mime4j.field.address.parser.Node[] $r5, $r6, $r7;
        org.apache.james.mime4j.field.address.parser.Node $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: org.apache.james.mime4j.field.address.parser.SimpleNode;

        r1 := @parameter0: java.lang.String;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString(java.lang.String)>(r1);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r5 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        if $r5 == null goto label3;

        i0 = 0;

     label1:
        $r6 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $i1 = lengthof $r6;

        if i0 >= $i1 goto label3;

        $r7 = r0.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Node[] children>;

        $r8 = $r7[i0];

        r2 = (org.apache.james.mime4j.field.address.parser.SimpleNode) $r8;

        if r2 == null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.james.mime4j.field.address.parser.SimpleNode: void dump(java.lang.String)>($r12);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }
}
