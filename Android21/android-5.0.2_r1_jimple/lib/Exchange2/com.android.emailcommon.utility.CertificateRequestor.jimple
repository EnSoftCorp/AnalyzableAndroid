public class com.android.emailcommon.utility.CertificateRequestor extends android.app.Activity implements android.security.KeyChainAliasCallback
{
    public static final java.lang.String EXTRA_HOST;
    public static final java.lang.String EXTRA_PORT;
    public static final java.lang.String RESULT_ALIAS;
    public static final android.net.Uri CERTIFICATE_REQUEST_URI;

    public void <init>()
    {
        com.android.emailcommon.utility.CertificateRequestor r0;

        r0 := @this: com.android.emailcommon.utility.CertificateRequestor;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.android.emailcommon.utility.CertificateRequestor r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.lang.String r3;
        int i0;

        r0 := @this: com.android.emailcommon.utility.CertificateRequestor;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.emailcommon.utility.CertificateRequestor: android.content.Intent getIntent()>();

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("CertificateRequestor.host");

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("CertificateRequestor.port", -1);

        if r1 != null goto label1;

        staticinvoke <android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>(r0, r0, null, null, r3, i0, null);

     label1:
        return;
    }

    public void alias(java.lang.String)
    {
        com.android.emailcommon.utility.CertificateRequestor r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;

        r0 := @this: com.android.emailcommon.utility.CertificateRequestor;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        virtualinvoke r0.<com.android.emailcommon.utility.CertificateRequestor: void setResult(int)>(0);

        goto label2;

     label1:
        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>()>();

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("CertificateRequestor.alias", r1);

        virtualinvoke r0.<com.android.emailcommon.utility.CertificateRequestor: void setResult(int,android.content.Intent)>(-1, r2);

     label2:
        virtualinvoke r0.<com.android.emailcommon.utility.CertificateRequestor: void finish()>();

        return;
    }

    static void <clinit>()
    {
        android.net.Uri $r0;

        <com.android.emailcommon.utility.CertificateRequestor: java.lang.String RESULT_ALIAS> = "CertificateRequestor.alias";

        <com.android.emailcommon.utility.CertificateRequestor: java.lang.String EXTRA_PORT> = "CertificateRequestor.port";

        <com.android.emailcommon.utility.CertificateRequestor: java.lang.String EXTRA_HOST> = "CertificateRequestor.host";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("eas://com.android.emailcommon/certrequest");

        <com.android.emailcommon.utility.CertificateRequestor: android.net.Uri CERTIFICATE_REQUEST_URI> = $r0;

        return;
    }
}
