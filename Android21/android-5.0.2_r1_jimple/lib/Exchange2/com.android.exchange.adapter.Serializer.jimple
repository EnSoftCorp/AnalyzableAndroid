public class com.android.exchange.adapter.Serializer extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int BUFFER_SIZE;
    private static final int NOT_PENDING;
    private final java.io.OutputStream mOutput;
    private int mPendingTag;
    private final java.util.Deque mNameStack;
    private int mTagPage;
    private final boolean mLogging;

    public void <init>() throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        specialinvoke r0.<com.android.exchange.adapter.Serializer: void <init>(java.io.OutputStream,boolean)>($r1, 1);

        return;
    }

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.OutputStream r1;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: java.io.OutputStream;

        specialinvoke r0.<com.android.exchange.adapter.Serializer: void <init>(java.io.OutputStream,boolean)>(r1, 1);

        return;
    }

    public void <init>(boolean) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        boolean z0;
        java.io.ByteArrayOutputStream $r1;

        r0 := @this: com.android.exchange.adapter.Serializer;

        z0 := @parameter0: boolean;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        specialinvoke r0.<com.android.exchange.adapter.Serializer: void <init>(java.io.OutputStream,boolean)>($r1, z0);

        return;
    }

    public void <init>(java.io.OutputStream, boolean) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.OutputStream r1, $r3;
        boolean z0, $z1;
        java.util.ArrayDeque $r2;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.exchange.adapter.Serializer: int mPendingTag> = -1;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.exchange.adapter.Serializer: java.util.Deque mNameStack> = $r2;

        r0.<com.android.exchange.adapter.Serializer: int mTagPage> = 0;

        $z1 = staticinvoke <com.android.mail.utils.LogUtils: boolean isLoggable(java.lang.String,int)>("Exchange", 2);

        r0.<com.android.exchange.adapter.Serializer: boolean mLogging> = $z1;

        r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput> = r1;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void startDocument()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(0);

     label2:
        return;
    }

    void log(java.lang.String)
    {
        com.android.exchange.adapter.Serializer r0;
        java.lang.String r1, r2, r4, $r6;
        int i0, $i1, $i2;
        char[] r3;
        boolean $z0, $z1;
        java.util.Deque $r5;
        java.lang.Object[] $r7;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.exchange.adapter.Serializer: boolean mLogging>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10);

        if i0 <= 0 goto label2;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label3;

     label2:
        r2 = r1;

     label3:
        $r5 = r0.<com.android.exchange.adapter.Serializer: java.util.Deque mNameStack>;

        $i1 = interfaceinvoke $r5.<java.util.Deque: int size()>();

        $i2 = $i1 * 2;

        r3 = newarray (char)[$i2];

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r3, 32);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r3);

        r4 = $r6;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r4;

        $r7[1] = r2;

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "%s%s", $r7);

        $z1 = <com.android.exchange.Eas: boolean FILE_LOG>;

        if $z1 == 0 goto label4;

        staticinvoke <com.android.exchange.utility.FileLogger: void log(java.lang.String,java.lang.String)>("Exchange", r2);

     label4:
        return;
    }

    public void done() throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.util.Deque $r1;
        int $i0, $i1;
        java.io.IOException $r2;
        java.io.OutputStream $r3;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $r1 = r0.<com.android.exchange.adapter.Serializer: java.util.Deque mNameStack>;

        $i0 = interfaceinvoke $r1.<java.util.Deque: int size()>();

        if $i0 != 0 goto label1;

        $i1 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        if $i1 == -1 goto label2;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Done received with unclosed tags");

        throw $r2;

     label2:
        $r3 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r3.<java.io.OutputStream: void flush()>();

        return;
    }

    public void startDocument() throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.OutputStream $r1, $r2, $r3, $r4;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $r1 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(3);

        $r2 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(1);

        $r3 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r3.<java.io.OutputStream: void write(int)>(106);

        $r4 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r4.<java.io.OutputStream: void write(int)>(0);

        return;
    }

    private void checkPendingTag(boolean) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        boolean z0, $z1, $z2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r1, $r8, $r10, $r16, $r20;
        java.io.OutputStream $r2, $r19, $r21;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r14, $r15, $r17, $r18;
        java.util.Deque $r7;

        r0 := @this: com.android.exchange.adapter.Serializer;

        z0 := @parameter0: boolean;

        $i2 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        if $i2 != -1 goto label01;

        return;

     label01:
        $i3 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        i0 = $i3 >> 6;

        $i4 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        i1 = $i4 & 63;

        $i5 = r0.<com.android.exchange.adapter.Serializer: int mTagPage>;

        if i0 == $i5 goto label02;

        r0.<com.android.exchange.adapter.Serializer: int mTagPage> = i0;

        $r19 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r19.<java.io.OutputStream: void write(int)>(0);

        $r21 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r21.<java.io.OutputStream: void write(int)>(i0);

     label02:
        $r2 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        if z0 == 0 goto label03;

        $i6 = i1;

        goto label04;

     label03:
        $i6 = i1 | 64;

     label04:
        virtualinvoke $r2.<java.io.OutputStream: void write(int)>($i6);

        r1 = "unknown";

        $z1 = staticinvoke <com.android.exchange.adapter.Tags: boolean isValidPage(int)>(i0);

        if $z1 != 0 goto label05;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized page ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>($r20);

        goto label07;

     label05:
        $z2 = staticinvoke <com.android.exchange.adapter.Tags: boolean isValidTag(int,int)>(i0, i1);

        if $z2 != 0 goto label06;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown tag ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on page ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>($r16);

        goto label07;

     label06:
        r1 = staticinvoke <com.android.exchange.adapter.Tags: java.lang.String getTagName(int,int)>(i0, i1);

     label07:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        if z0 == 0 goto label08;

        $r10 = "/>";

        goto label09;

     label08:
        $r10 = ">";

     label09:
        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>($r8);

        if z0 != 0 goto label10;

        $r7 = r0.<com.android.exchange.adapter.Serializer: java.util.Deque mNameStack>;

        interfaceinvoke $r7.<java.util.Deque: void addFirst(java.lang.Object)>(r1);

     label10:
        r0.<com.android.exchange.adapter.Serializer: int mPendingTag> = -1;

        return;
    }

    public com.android.exchange.adapter.Serializer start(int) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        int i0;

        r0 := @this: com.android.exchange.adapter.Serializer;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.exchange.adapter.Serializer: void checkPendingTag(boolean)>(0);

        r0.<com.android.exchange.adapter.Serializer: int mPendingTag> = i0;

        return r0;
    }

    public com.android.exchange.adapter.Serializer end() throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.lang.String r1, $r9;
        int $i0;
        java.io.OutputStream $r2;
        java.util.Deque $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $i0 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        if $i0 < 0 goto label1;

        specialinvoke r0.<com.android.exchange.adapter.Serializer: void checkPendingTag(boolean)>(1);

        goto label2;

     label1:
        $r2 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r2.<java.io.OutputStream: void write(int)>(1);

        $r3 = r0.<com.android.exchange.adapter.Serializer: java.util.Deque mNameStack>;

        $r4 = interfaceinvoke $r3.<java.util.Deque: java.lang.Object removeFirst()>();

        r1 = (java.lang.String) $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>($r9);

     label2:
        return r0;
    }

    public com.android.exchange.adapter.Serializer tag(int) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        int i0;

        r0 := @this: com.android.exchange.adapter.Serializer;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(i0);

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        return r0;
    }

    public com.android.exchange.adapter.Serializer data(int, java.lang.String) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.android.exchange.adapter.Serializer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(i0);

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer text(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        return r0;
    }

    public com.android.exchange.adapter.Serializer text(java.lang.String) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.lang.String r1, $r7;
        java.io.OutputStream $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        int $i0;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Null text write for pending tag: ");

        $i0 = r0.<com.android.exchange.adapter.Serializer: int mPendingTag>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        specialinvoke r0.<com.android.exchange.adapter.Serializer: void checkPendingTag(boolean)>(0);

        $r2 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        staticinvoke <com.android.exchange.adapter.Serializer: void writeInlineString(java.io.OutputStream,java.lang.String)>($r2, r1);

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>(r1);

        return r0;
    }

    public com.android.exchange.adapter.Serializer opaque(java.io.InputStream, int) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.InputStream r1;
        int i0, i1, i2, $i3;
        byte[] r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r12, $r13, $r15;
        java.lang.String $r7, $r14;
        java.io.OutputStream $r8;
        java.io.IOException $r9;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer writeOpaqueHeader(int)>(i0);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("opaque: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: void log(java.lang.String)>($r7);

        r2 = newarray (byte)[16384];

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(16384, i0);

        i2 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r2, 0, $i3);

        if i2 != -1 goto label2;

        $r9 = new java.io.IOException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid opaque data block; read ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes but expected ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label2:
        $r8 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r8.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, i2);

        i1 = i1 + i2;

        goto label1;

     label3:
        return r0;
    }

    public com.android.exchange.adapter.Serializer writeOpaqueHeader(int) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        int i0;
        java.io.OutputStream $r1, $r2;
        java.io.IOException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.exchange.adapter.Serializer;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid negative opaque data length ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        if i0 != 0 goto label2;

        return r0;

     label2:
        specialinvoke r0.<com.android.exchange.adapter.Serializer: void checkPendingTag(boolean)>(0);

        $r1 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(195);

        $r2 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        staticinvoke <com.android.exchange.adapter.Serializer: void writeInteger(java.io.OutputStream,int)>($r2, i0);

        return r0;
    }

    static void writeInteger(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream r0;
        int i0, i1, $i2, $i3;
        byte[] r1;
        byte $b4, $b5, $b6;
        short $s7;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 = newarray (byte)[5];

        i1 = 0;

     label1:
        $i2 = i1;

        i1 = i1 + 1;

        $i3 = i0 & 127;

        $b4 = (byte) $i3;

        r1[$i2] = $b4;

        i0 = i0 >>> 7;

        if i0 != 0 goto label1;

     label2:
        if i1 <= 1 goto label3;

        i1 = i1 + -1;

        $b6 = r1[i1];

        $s7 = $b6 | 128;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($s7);

        goto label2;

     label3:
        $b5 = r1[0];

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b5);

        return;
    }

    private static void writeInlineString(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.String r1;
        byte[] r2;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>(3);

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>(r2);

        virtualinvoke r0.<java.io.OutputStream: void write(int)>(0);

        return;
    }

    public void writeStringValue(android.content.ContentValues, java.lang.String, int) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0;
        android.content.ContentValues r1;
        java.lang.String r2, r3;
        int i0;
        boolean $z0;

        r0 := @this: com.android.exchange.adapter.Serializer;

        r1 := @parameter0: android.content.ContentValues;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>(r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(i0, r3);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer tag(int)>(i0);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.OutputStream $r1, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.ByteArrayOutputStream $r4;
        java.lang.String $r5;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $r1 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        $z0 = $r1 instanceof java.io.ByteArrayOutputStream;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        $r4 = (java.io.ByteArrayOutputStream) $r3;

        $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r5;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;
    }

    public byte[] toByteArray()
    {
        com.android.exchange.adapter.Serializer r0;
        java.io.OutputStream $r1, $r3;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.io.ByteArrayOutputStream $r4;
        byte[] $r5;

        r0 := @this: com.android.exchange.adapter.Serializer;

        $r1 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        $z0 = $r1 instanceof java.io.ByteArrayOutputStream;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.exchange.adapter.Serializer: java.io.OutputStream mOutput>;

        $r4 = (java.io.ByteArrayOutputStream) $r3;

        $r5 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;
    }

    public static void <clinit>()
    {
        <com.android.exchange.adapter.Serializer: int NOT_PENDING> = -1;

        <com.android.exchange.adapter.Serializer: int BUFFER_SIZE> = 16384;

        <com.android.exchange.adapter.Serializer: java.lang.String TAG> = "Exchange";

        return;
    }
}
