public class org.apache.james.mime4j.message.Header extends java.lang.Object
{
    private java.util.List fields;
    private java.util.HashMap fieldMap;

    public void <init>()
    {
        org.apache.james.mime4j.message.Header r0;
        java.util.LinkedList $r1;
        java.util.HashMap $r2;

        r0 := @this: org.apache.james.mime4j.message.Header;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.List fields> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap> = $r2;

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Header r0;
        java.io.InputStream r1;
        org.apache.james.mime4j.MimeStreamParser r2, $r5;
        java.util.LinkedList $r3;
        java.util.HashMap $r4;
        org.apache.james.mime4j.message.Header$1 $r6;

        r0 := @this: org.apache.james.mime4j.message.Header;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.List fields> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap> = $r4;

        $r5 = new org.apache.james.mime4j.MimeStreamParser;

        specialinvoke $r5.<org.apache.james.mime4j.MimeStreamParser: void <init>()>();

        r2 = $r5;

        $r6 = new org.apache.james.mime4j.message.Header$1;

        specialinvoke $r6.<org.apache.james.mime4j.message.Header$1: void <init>(org.apache.james.mime4j.message.Header,org.apache.james.mime4j.MimeStreamParser)>(r0, r2);

        virtualinvoke r2.<org.apache.james.mime4j.MimeStreamParser: void setContentHandler(org.apache.james.mime4j.ContentHandler)>($r6);

        virtualinvoke r2.<org.apache.james.mime4j.MimeStreamParser: void parse(java.io.InputStream)>(r1);

        return;
    }

    public void addField(org.apache.james.mime4j.field.Field)
    {
        org.apache.james.mime4j.message.Header r0;
        org.apache.james.mime4j.field.Field r1;
        java.util.List r2, $r7;
        java.util.HashMap $r3, $r9;
        java.lang.String $r4, $r5, $r10, $r11;
        java.lang.Object $r6;
        java.util.LinkedList $r8;

        r0 := @this: org.apache.james.mime4j.message.Header;

        r1 := @parameter0: org.apache.james.mime4j.field.Field;

        $r3 = r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap>;

        $r4 = virtualinvoke r1.<org.apache.james.mime4j.field.Field: java.lang.String getName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r6 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (java.util.List) $r6;

        if r2 != null goto label1;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r2 = $r8;

        $r9 = r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap>;

        $r10 = virtualinvoke r1.<org.apache.james.mime4j.field.Field: java.lang.String getName()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, r2);

     label1:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r7 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getFields()
    {
        org.apache.james.mime4j.message.Header r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r1 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public org.apache.james.mime4j.field.Field getField(java.lang.String)
    {
        org.apache.james.mime4j.message.Header r0;
        java.lang.String r1, $r4;
        java.util.List r2;
        java.util.HashMap $r3;
        java.lang.Object $r5, $r6;
        boolean $z0;
        org.apache.james.mime4j.field.Field $r7;

        r0 := @this: org.apache.james.mime4j.message.Header;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap>;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (java.util.List) $r5;

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (org.apache.james.mime4j.field.Field) $r6;

        return $r7;

     label1:
        return null;
    }

    public java.util.List getFields(java.lang.String)
    {
        org.apache.james.mime4j.message.Header r0;
        java.lang.String r1, $r4;
        java.util.List r2, $r6;
        java.util.HashMap $r3;
        java.lang.Object $r5;

        r0 := @this: org.apache.james.mime4j.message.Header;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.james.mime4j.message.Header: java.util.HashMap fieldMap>;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (java.util.List) $r5;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return $r6;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.message.Header r0;
        java.lang.StringBuffer r1, $r3;
        java.util.Iterator r2;
        java.util.List $r4;
        boolean $z0;
        java.lang.String $r5, $r8;
        java.lang.Object $r6;
        org.apache.james.mime4j.field.Field $r7;

        r0 := @this: org.apache.james.mime4j.message.Header;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        $r4 = r0.<org.apache.james.mime4j.message.Header: java.util.List fields>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.james.mime4j.field.Field) $r6;

        $r8 = virtualinvoke $r7.<org.apache.james.mime4j.field.Field: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        goto label1;

     label2:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Header r0;
        java.io.OutputStream r1;
        java.lang.String r2, $r10, $r13;
        java.io.BufferedWriter r3, $r6;
        org.apache.james.mime4j.field.Field $r4;
        org.apache.james.mime4j.field.ContentTypeField $r5;
        java.io.OutputStreamWriter $r7;
        java.nio.charset.Charset $r8;
        java.lang.StringBuilder $r9, $r11, $r12;

        r0 := @this: org.apache.james.mime4j.message.Header;

        r1 := @parameter0: java.io.OutputStream;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.field.Field getField(java.lang.String)>("Content-Type");

        $r5 = (org.apache.james.mime4j.field.ContentTypeField) $r4;

        r2 = virtualinvoke $r5.<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()>();

        $r6 = new java.io.BufferedWriter;

        $r7 = new java.io.OutputStreamWriter;

        $r8 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset getCharset(java.lang.String)>(r2);

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r1, $r8);

        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r7, 8192);

        r3 = $r6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<org.apache.james.mime4j.message.Header: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.BufferedWriter: void write(java.lang.String)>($r13);

        virtualinvoke r3.<java.io.BufferedWriter: void flush()>();

        return;
    }
}
