public abstract class com.android.emailcommon.provider.MessageChangeLogTable extends java.lang.Object
{
    public static final java.lang.String ID;
    public static final java.lang.String MESSAGE_KEY;
    public static final java.lang.String SERVER_ID;
    public static final java.lang.String ACCOUNT_KEY;
    public static final java.lang.String STATUS;
    public static final int STATUS_NONE;
    public static final java.lang.String STATUS_NONE_STRING;
    public static final int STATUS_PROCESSING;
    public static final java.lang.String STATUS_PROCESSING_STRING;
    public static final int STATUS_FAILED;
    public static final java.lang.String STATUS_FAILED_STRING;
    private static final java.lang.String SELECTION_BY_ACCOUNT_KEY_AND_STATUS;
    private static final java.lang.String SELECTION_BY_MESSAGE_KEYS_PREFIX;
    protected final long mMessageKey;
    protected final java.lang.String mServerId;
    protected long mLastId;

    protected void <init>(long, java.lang.String, long)
    {
        com.android.emailcommon.provider.MessageChangeLogTable r0;
        long l0, l1;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.provider.MessageChangeLogTable;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.emailcommon.provider.MessageChangeLogTable: long mMessageKey> = l0;

        r0.<com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String mServerId> = r1;

        r0.<com.android.emailcommon.provider.MessageChangeLogTable: long mLastId> = l1;

        return;
    }

    public final long getMessageId()
    {
        com.android.emailcommon.provider.MessageChangeLogTable r0;
        long $l0;

        r0 := @this: com.android.emailcommon.provider.MessageChangeLogTable;

        $l0 = r0.<com.android.emailcommon.provider.MessageChangeLogTable: long mMessageKey>;

        return $l0;
    }

    public final java.lang.String getServerId()
    {
        com.android.emailcommon.provider.MessageChangeLogTable r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.MessageChangeLogTable;

        $r1 = r0.<com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String mServerId>;

        return $r1;
    }

    private static int startProcessing(android.content.ContentResolver, android.net.Uri, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2, $r6, $r8;
        java.lang.String[] r3;
        android.content.ContentValues r4, $r5;
        java.lang.Integer $r7, $r9;
        int $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        r3 = newarray (java.lang.String)[2];

        r3[0] = r2;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>(int)>(1);

        r4 = $r5;

        $r6 = <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_PROCESSING_STRING>;

        r3[1] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r7);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r4, "accountKey=? and status=?", r3);

        $r8 = <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_NONE_STRING>;

        r3[1] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r9);

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r4, "accountKey=? and status=?", r3);

        return $i1;
    }

    private static android.database.Cursor getRowsToProcess(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4, $r5;
        java.lang.String r3, $r6;
        android.database.Cursor $r7;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = r3;

        $r6 = <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_PROCESSING_STRING>;

        $r5[1] = $r6;

        r4 = $r5;

        $r7 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, "accountKey=? and status=?", r4, "_id ASC");

        return $r7;
    }

    private static java.lang.String getSelectionForMessages(long[], int)
    {
        long[] r0;
        int i0, i1;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r4;
        long $l2;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("messageKey in (");

        r1 = $r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        if i1 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        $l2 = r0[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    protected static int deleteRowsForMessages(android.content.ContentResolver, android.net.Uri, long[], int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long[] r2;
        int i0, $i1;
        java.lang.String $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String getSelectionForMessages(long[],int)>(r2, i0);

        $i1 = virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r1, $r3, null);

        return $i1;
    }

    private static int updateStatusForMessages(android.content.ContentResolver, android.net.Uri, long[], int, int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long[] r2;
        int i0, i1, $i2;
        android.content.ContentValues r3, $r4;
        java.lang.Integer $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>(int)>(1);

        r3 = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r5);

        $r6 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String getSelectionForMessages(long[],int)>(r2, i0);

        $i2 = virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r1, r3, $r6, null);

        return $i2;
    }

    protected static int retryMessages(android.content.ContentResolver, android.net.Uri, long[], int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long[] r2;
        int i0, $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        $i1 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: int updateStatusForMessages(android.content.ContentResolver,android.net.Uri,long[],int,int)>(r0, r1, r2, i0, 0);

        return $i1;
    }

    protected static int failMessages(android.content.ContentResolver, android.net.Uri, long[], int)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long[] r2;
        int i0, $i1;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: long[];

        i0 := @parameter3: int;

        $i1 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: int updateStatusForMessages(android.content.ContentResolver,android.net.Uri,long[],int,int)>(r0, r1, r2, i0, 2);

        return $i1;
    }

    protected static android.database.Cursor getCursor(android.content.ContentResolver, android.net.Uri, java.lang.String[], long)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String[] r2;
        long l0;
        java.lang.String r3;
        int $i1;
        android.database.Cursor $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        l0 := @parameter3: long;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $i1 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: int startProcessing(android.content.ContentResolver,android.net.Uri,java.lang.String)>(r0, r1, r3);

        if $i1 > 0 goto label1;

        return null;

     label1:
        $r4 = staticinvoke <com.android.emailcommon.provider.MessageChangeLogTable: android.database.Cursor getRowsToProcess(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String)>(r0, r1, r2, r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2;

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String SELECTION_BY_MESSAGE_KEYS_PREFIX> = "messageKey in (";

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String SELECTION_BY_ACCOUNT_KEY_AND_STATUS> = "accountKey=? and status=?";

        <com.android.emailcommon.provider.MessageChangeLogTable: int STATUS_FAILED> = 2;

        <com.android.emailcommon.provider.MessageChangeLogTable: int STATUS_PROCESSING> = 1;

        <com.android.emailcommon.provider.MessageChangeLogTable: int STATUS_NONE> = 0;

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS> = "status";

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String ACCOUNT_KEY> = "accountKey";

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String SERVER_ID> = "messageServerId";

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String MESSAGE_KEY> = "messageKey";

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String ID> = "_id";

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(0);

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_NONE_STRING> = $r0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(1);

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_PROCESSING_STRING> = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2);

        <com.android.emailcommon.provider.MessageChangeLogTable: java.lang.String STATUS_FAILED_STRING> = $r2;

        return;
    }
}
