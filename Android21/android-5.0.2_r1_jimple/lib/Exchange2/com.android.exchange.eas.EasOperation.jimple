public abstract class com.android.exchange.eas.EasOperation extends java.lang.Object
{
    public static final java.lang.String LOG_TAG;
    private static final int MAX_REDIRECTS;
    private static final java.lang.String EAS_14_MIME_TYPE;
    public static final int RESULT_MIN_OK_RESULT;
    public static final int RESULT_ABORT;
    public static final int RESULT_RESTART;
    public static final int RESULT_TOO_MANY_REDIRECTS;
    public static final int RESULT_NETWORK_PROBLEM;
    public static final int RESULT_FORBIDDEN;
    public static final int RESULT_PROVISIONING_ERROR;
    public static final int RESULT_AUTHENTICATION_ERROR;
    public static final int RESULT_CLIENT_CERTIFICATE_REQUIRED;
    public static final int RESULT_PROTOCOL_VERSION_UNSUPPORTED;
    public static final int RESULT_INITIALIZATION_FAILURE;
    public static final int RESULT_HARD_DATA_FAILURE;
    public static final int RESULT_NON_FATAL_ERROR;
    public static final int RESULT_OTHER_FAILURE;
    public static final int RESULT_OP_SPECIFIC_ERROR_RESULT;
    protected final android.content.Context mContext;
    private final long mAccountId;
    protected com.android.emailcommon.provider.Account mAccount;
    protected com.android.exchange.service.EasServerConnection mConnection;

    public void replaceEasServerConnection(com.android.exchange.service.EasServerConnection)
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection r1;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.exchange.service.EasServerConnection;

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = r1;

        return;
    }

    public static boolean isFatal(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void <init>(android.content.Context, long)
    {
        com.android.exchange.eas.EasOperation r0;
        android.content.Context r1;
        long l0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext> = r1;

        r0.<com.android.exchange.eas.EasOperation: long mAccountId> = l0;

        return;
    }

    protected void <init>(android.content.Context, com.android.emailcommon.provider.Account, com.android.exchange.service.EasServerConnection)
    {
        com.android.exchange.eas.EasOperation r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.exchange.service.EasServerConnection r3;
        long $l0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: com.android.exchange.service.EasServerConnection;

        $l0 = r2.<com.android.emailcommon.provider.Account: long mId>;

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(android.content.Context,long)>(r1, $l0);

        r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount> = r2;

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = r3;

        return;
    }

    protected void <init>(android.content.Context, com.android.emailcommon.provider.Account, com.android.emailcommon.provider.HostAuth)
    {
        com.android.exchange.eas.EasOperation r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.HostAuth r3;
        com.android.exchange.service.EasServerConnection $r4;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: com.android.emailcommon.provider.HostAuth;

        $r4 = new com.android.exchange.service.EasServerConnection;

        specialinvoke $r4.<com.android.exchange.service.EasServerConnection: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.HostAuth)>(r1, r2, r3);

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.exchange.service.EasServerConnection)>(r1, r2, $r4);

        return;
    }

    protected void <init>(android.content.Context, com.android.emailcommon.provider.Account)
    {
        com.android.exchange.eas.EasOperation r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.HostAuth $r3;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        $r3 = virtualinvoke r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.HostAuth)>(r1, r2, $r3);

        return;
    }

    protected void <init>(com.android.exchange.eas.EasOperation)
    {
        com.android.exchange.eas.EasOperation r0, r1;
        android.content.Context $r2;
        long $l0;
        com.android.emailcommon.provider.Account $r3;
        com.android.exchange.service.EasServerConnection $r4;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.exchange.eas.EasOperation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r1.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext> = $r2;

        $l0 = r1.<com.android.exchange.eas.EasOperation: long mAccountId>;

        r0.<com.android.exchange.eas.EasOperation: long mAccountId> = $l0;

        $r3 = r1.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount> = $r3;

        $r4 = r1.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = $r4;

        return;
    }

    protected final void setDummyAccount(com.android.emailcommon.provider.HostAuth)
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.emailcommon.provider.HostAuth r1;
        com.android.emailcommon.provider.Account $r2, $r4, $r6;
        java.lang.String $r3;
        com.android.exchange.service.EasServerConnection $r5;
        android.content.Context $r7;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.emailcommon.provider.HostAuth;

        $r2 = new com.android.emailcommon.provider.Account;

        specialinvoke $r2.<com.android.emailcommon.provider.Account: void <init>()>();

        r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount> = $r2;

        $r4 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        $r3 = r1.<com.android.emailcommon.provider.HostAuth: java.lang.String mLogin>;

        $r4.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress> = $r3;

        $r5 = new com.android.exchange.service.EasServerConnection;

        $r7 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r6 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        specialinvoke $r5.<com.android.exchange.service.EasServerConnection: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.HostAuth)>($r7, $r6, r1);

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = $r5;

        return;
    }

    public boolean init(boolean)
    {
        com.android.exchange.eas.EasOperation r0;
        boolean z0, $z1;
        com.android.emailcommon.provider.Account $r1, $r3, $r4, $r5, $r8, $r10;
        android.content.Context $r2, $r7, $r9;
        long $l0;
        com.android.exchange.service.EasServerConnection $r6;
        com.android.emailcommon.provider.HostAuth $r11;

        r0 := @this: com.android.exchange.eas.EasOperation;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        if $r1 == null goto label1;

        if z0 == 0 goto label2;

     label1:
        $r2 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $l0 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: long getAccountId()>();

        $r3 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>($r2, $l0);

        r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount> = $r3;

        $r4 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        if $r4 == null goto label2;

        $r6 = new com.android.exchange.service.EasServerConnection;

        $r9 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r10 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        $r8 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        $r7 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r11 = virtualinvoke $r8.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>($r7);

        specialinvoke $r6.<com.android.exchange.service.EasServerConnection: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.HostAuth)>($r9, $r10, $r11);

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = $r6;

     label2:
        $r5 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        if $r5 == null goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    protected void setAccount(com.android.emailcommon.provider.Account, com.android.emailcommon.provider.HostAuth)
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.emailcommon.provider.Account r1, $r3, $r5;
        com.android.emailcommon.provider.HostAuth r2;
        com.android.exchange.service.EasServerConnection $r4;
        android.content.Context $r6;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.emailcommon.provider.Account;

        r2 := @parameter1: com.android.emailcommon.provider.HostAuth;

        r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount> = r1;

        $r3 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        if $r3 == null goto label1;

        $r4 = new com.android.exchange.service.EasServerConnection;

        $r6 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r5 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        specialinvoke $r4.<com.android.exchange.service.EasServerConnection: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.HostAuth)>($r6, $r5, r2);

        r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection> = $r4;

     label1:
        return;
    }

    public final long getAccountId()
    {
        com.android.exchange.eas.EasOperation r0;
        long $l0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $l0 = r0.<com.android.exchange.eas.EasOperation: long mAccountId>;

        return $l0;
    }

    public final com.android.emailcommon.provider.Account getAccount()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.emailcommon.provider.Account $r1;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.emailcommon.provider.Account mAccount>;

        return $r1;
    }

    public final void abort()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: void stop(int)>(1);

        return;
    }

    public final void restart()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: void stop(int)>(2);

        return;
    }

    public final boolean lastSyncHadError()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return 0;
    }

    public int performOperation()
    {
        com.android.exchange.eas.EasOperation r0;
        int i0, $i3, $i7, $i14, i19, i20, i21, i22;
        com.android.exchange.EasResponse r1;
        java.lang.Throwable r2, r5, $r31, $r38;
        java.lang.String r3, $r8, $r11, $r12, $r14, $r15, $r17, $r21, $r23, $r24, $r26, $r28, $r34, $r35, $r36, $r37, $r46, $r48, $r49, $r50;
        java.io.IOException r4, $r41, $r45, r53;
        byte b1, b23, b24, b25, b26, b27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.android.exchange.service.EasServerConnection $r6, $r22, $r42;
        org.apache.http.client.methods.HttpUriRequest $r7;
        long $l2, $l10;
        java.lang.Object[] $r9, $r10, $r13, $r16, $r20, $r25, $r29, $r33, $r40, $r44, $r47, $r52;
        java.lang.Integer $r18, $r19, $r43;
        java.lang.Long $r27;
        com.android.exchange.eas.EasOperation$MessageInvalidException $r30, r55;
        java.lang.IllegalStateException $r32, r56;
        com.android.exchange.CommandStatusException $r39, r57;
        java.security.cert.CertificateException $r51, r54;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $z0 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: boolean init(boolean)>(0);

        if $z0 != 0 goto label01;

        $r24 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r25 = newarray (java.lang.Object)[2];

        $l10 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: long getAccountId()>();

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $r25[0] = $r27;

        $r26 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getCommand()>();

        $r25[1] = $r26;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r24, "Failed to initialize %d before sending request for operation %s", $r25);

        return -10;

     label01:
        i0 = 0;

     label02:
        $r6 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $r7 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: org.apache.http.client.methods.HttpUriRequest makeRequest()>();

        $l2 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: long getTimeout()>();

        r1 = virtualinvoke $r6.<com.android.exchange.service.EasServerConnection: com.android.exchange.EasResponse executeHttpUriRequest(org.apache.http.client.methods.HttpUriRequest,long)>($r7, $l2);

     label03:
        virtualinvoke r0.<com.android.exchange.eas.EasOperation: void onRequestMade()>();

        goto label06;

     label04:
        $r31 := @caughtexception;

        r2 = $r31;

     label05:
        virtualinvoke r0.<com.android.exchange.eas.EasOperation: void onRequestMade()>();

        throw r2;

     label06:
        goto label15;

     label07:
        $r41 := @caughtexception;

        r53 = $r41;

        $r42 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $i14 = virtualinvoke $r42.<com.android.exchange.service.EasServerConnection: int getStoppedReason()>();

        lookupswitch($i14)
        {
            case 1: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        return -1;

     label09:
        return -2;

     label10:
        r3 = virtualinvoke r53.<java.io.IOException: java.lang.String getMessage()>();

        if r3 != null goto label11;

        r3 = "(no message)";

     label11:
        $r48 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r47 = newarray (java.lang.Object)[1];

        $r47[0] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r48, "IOException while sending request: %s", $r47);

        return -4;

     label12:
        $r51 := @caughtexception;

        r54 = $r51;

        $r50 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r52 = newarray (java.lang.Object)[1];

        $r49 = virtualinvoke r54.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        $r52[0] = $r49;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r50, "CertificateException while sending request: %s", $r52);

        return -8;

     label13:
        $r30 := @caughtexception;

        r55 = $r30;

        $r28 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r29 = newarray (java.lang.Object)[1];

        $r35 = virtualinvoke r55.<com.android.exchange.eas.EasOperation$MessageInvalidException: java.lang.String getMessage()>();

        $r29[0] = $r35;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r28, "Exception sending request %s", $r29);

        return -12;

     label14:
        $r32 := @caughtexception;

        r56 = $r32;

        $r34 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r33 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r34, r56, "Exception while sending request", $r33);

        return -11;

     label15:
        $z1 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isSuccess()>();

        if $z1 == 0 goto label24;

     label16:
        i19 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: int handleResponse(com.android.exchange.EasResponse)>(r1);

     label17:
        goto label23;

     label18:
        $r45 := @caughtexception;

        r4 = $r45;

        $r46 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r44 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r46, r4, "Exception while handling response", $r44);

        b1 = -4;

     label19:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b1;

     label20:
        $r39 := @caughtexception;

        r57 = $r39;

        i20 = r57.<com.android.exchange.CommandStatusException: int mStatus>;

        $r36 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r40 = newarray (java.lang.Object)[2];

        $r37 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getCommand()>();

        $r40[0] = $r37;

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r40[1] = $r43;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r36, "CommandStatusException: %s, %d", $r40);

        $z10 = staticinvoke <com.android.exchange.CommandStatusException$CommandStatus: boolean isNeedsProvisioning(int)>(i20);

        if $z10 == 0 goto label21;

        i19 = -6;

        goto label23;

     label21:
        $z9 = staticinvoke <com.android.exchange.CommandStatusException$CommandStatus: boolean isDeniedAccess(int)>(i20);

        if $z9 == 0 goto label22;

        i19 = -5;

        goto label23;

     label22:
        i19 = -99;

     label23:
        i21 = i19;

        goto label25;

     label24:
        $i3 = virtualinvoke r1.<com.android.exchange.EasResponse: int getStatus()>();

        i21 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: int handleHttpError(int)>($i3);

     label25:
        if i21 < 0 goto label27;

        i22 = i21;

     label26:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return i22;

     label27:
        if i21 == -5 goto label28;

        $z2 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isForbidden()>();

        if $z2 == 0 goto label30;

        $z7 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: boolean handleForbidden()>();

        if $z7 == 0 goto label30;

     label28:
        $r8 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "Forbidden response", $r9);

        b23 = -5;

     label29:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b23;

     label30:
        if i21 == -6 goto label31;

        $z5 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isProvisionError()>();

        if $z5 == 0 goto label35;

     label31:
        $z3 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: boolean handleProvisionError()>();

        if $z3 == 0 goto label33;

        $r11 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getCommand()>();

        $r10[0] = $r12;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r11, "Provisioning error handled during %s, retrying", $r10);

     label32:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        goto label45;

     label33:
        b24 = -6;

     label34:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b24;

     label35:
        $z4 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isAuthError()>();

        if $z4 == 0 goto label39;

        $r21 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r21, "Authentication error", $r20);

        $z8 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isMissingCertificate()>();

        if $z8 == 0 goto label37;

        b25 = -8;

     label36:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b25;

     label37:
        b26 = -7;

     label38:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b26;

     label39:
        $z6 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isRedirectError()>();

        if $z6 == 0 goto label40;

        i0 = i0 + 1;

        $r22 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $r23 = virtualinvoke r1.<com.android.exchange.EasResponse: java.lang.String getRedirectAddress()>();

        virtualinvoke $r22.<com.android.exchange.service.EasServerConnection: void redirectHostAuth(java.lang.String)>($r23);

        goto label42;

     label40:
        $r15 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r16 = newarray (java.lang.Object)[3];

        $r17 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getCommand()>();

        $r16[0] = $r17;

        $i7 = virtualinvoke r1.<com.android.exchange.EasResponse: int getStatus()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r16[1] = $r19;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i21);

        $r16[2] = $r18;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r15, "Generic error for operation %s: status %d, result %d", $r16);

        b27 = -99;

     label41:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        return b27;

     label42:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        goto label45;

     label43:
        $r38 := @caughtexception;

        r5 = $r38;

     label44:
        virtualinvoke r1.<com.android.exchange.EasResponse: void close()>();

        throw r5;

     label45:
        if i0 < 3 goto label02;

        $r14 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r14, "Too many redirects", $r13);

        return -3;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label02 to label06 with label07;
        catch java.security.cert.CertificateException from label02 to label06 with label12;
        catch com.android.exchange.eas.EasOperation$MessageInvalidException from label02 to label06 with label13;
        catch java.lang.IllegalStateException from label02 to label06 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch com.android.exchange.CommandStatusException from label16 to label17 with label20;
        catch java.lang.Throwable from label15 to label19 with label43;
        catch java.lang.Throwable from label20 to label26 with label43;
        catch java.lang.Throwable from label27 to label29 with label43;
        catch java.lang.Throwable from label30 to label32 with label43;
        catch java.lang.Throwable from label33 to label34 with label43;
        catch java.lang.Throwable from label35 to label36 with label43;
        catch java.lang.Throwable from label37 to label38 with label43;
        catch java.lang.Throwable from label39 to label41 with label43;
        catch java.lang.Throwable from label43 to label44 with label43;
    }

    protected void onRequestMade()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return;
    }

    protected int handleHttpError(int)
    {
        com.android.exchange.eas.EasOperation r0;
        int i0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        i0 := @parameter0: int;

        return -99;
    }

    protected final void setProtocolVersion(java.lang.String)
    {
        com.android.exchange.eas.EasOperation r0;
        java.lang.String r1;
        long l0;
        android.net.Uri r2, $r5;
        android.content.ContentValues r3, $r6;
        int i1, i2, $i6, $i7;
        com.android.exchange.service.EasServerConnection $r4;
        boolean $z0;
        byte $b3, $b4;
        double $d0;
        android.content.Context $r7, $r10;
        android.content.ContentResolver $r8;
        java.lang.String[] $r9;
        java.lang.Integer $r11, $r12, $r13;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: java.lang.String;

        l0 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: long getAccountId()>();

        $r4 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $z0 = virtualinvoke $r4.<com.android.exchange.service.EasServerConnection: boolean setProtocolVersion(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $b3 = l0 cmp -1L;

        if $b3 == 0 goto label2;

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r5, l0);

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>(int)>(2);

        r3 = $r6;

        $d0 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: double getProtocolVersion()>();

        $b4 = $d0 cmpl 12.0;

        if $b4 < 0 goto label1;

        $r10 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r9 = <com.android.emailcommon.provider.Account: java.lang.String[] ACCOUNT_FLAGS_PROJECTION>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r11 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Integer getFirstRowInt(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Integer)>($r10, r2, $r9, null, null, null, 1, $r12);

        i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i6 = i1 | 4096;

        $i7 = $i6 | 2048;

        i2 = $i7 | 128;

        if i1 == i2 goto label1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r13);

     label1:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("protocolVersion", r1);

        $r7 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r8.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, null, null);

     label2:
        return;
    }

    protected org.apache.http.client.methods.HttpUriRequest makeRequest() throws java.io.IOException, com.android.exchange.eas.EasOperation$MessageInvalidException
    {
        com.android.exchange.eas.EasOperation r0;
        java.lang.String r1, $r5;
        org.apache.http.client.methods.HttpPost r2;
        com.android.exchange.service.EasServerConnection $r3;
        org.apache.http.HttpEntity $r4;
        boolean $z0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getRequestUri()>();

        $r3 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $r4 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: org.apache.http.HttpEntity getRequestEntity()>();

        $r5 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getRequestContentType()>();

        $z0 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: boolean addPolicyKeyHeaderToRequest()>();

        r2 = virtualinvoke $r3.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpPost makePost(java.lang.String,org.apache.http.HttpEntity,java.lang.String,boolean)>(r1, $r4, $r5, $z0);

        return r2;
    }

    protected abstract java.lang.String getCommand();

    protected abstract org.apache.http.HttpEntity getRequestEntity() throws java.io.IOException, com.android.exchange.eas.EasOperation$MessageInvalidException;

    protected abstract int handleResponse(com.android.exchange.EasResponse) throws java.io.IOException, com.android.exchange.CommandStatusException;

    protected java.lang.String getRequestUri()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $r2 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getCommand()>();

        $r3 = virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: java.lang.String makeUriString(java.lang.String)>($r2);

        return $r3;
    }

    protected boolean addPolicyKeyHeaderToRequest()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return 1;
    }

    protected java.lang.String getRequestContentType()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return "application/vnd.ms-sync.wbxml";
    }

    protected long getTimeout()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return 30000L;
    }

    protected boolean handleForbidden()
    {
        com.android.exchange.eas.EasOperation r0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        return 0;
    }

    protected boolean handleProvisionError()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.eas.EasProvision r1, $r2;
        boolean $z0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r2 = new com.android.exchange.eas.EasProvision;

        specialinvoke $r2.<com.android.exchange.eas.EasProvision: void <init>(com.android.exchange.eas.EasOperation)>(r0);

        r1 = $r2;

        $z0 = virtualinvoke r1.<com.android.exchange.eas.EasProvision: boolean provision()>();

        return $z0;
    }

    protected final org.apache.http.HttpEntity makeEntity(com.android.exchange.adapter.Serializer)
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.adapter.Serializer r1;
        org.apache.http.entity.ByteArrayEntity $r2;
        byte[] $r3;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.exchange.adapter.Serializer;

        $r2 = new org.apache.http.entity.ByteArrayEntity;

        $r3 = virtualinvoke r1.<com.android.exchange.adapter.Serializer: byte[] toByteArray()>();

        specialinvoke $r2.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r3);

        return $r2;
    }

    protected final boolean shouldGetProtocolVersion()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $z0 = virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: boolean isProtocolVersionSet()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    protected final double getProtocolVersion()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;
        double $d0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $d0 = virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: double getProtocolVersion()>();

        return $d0;
    }

    protected final java.lang.String getUserAgent()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $r2 = virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: java.lang.String getUserAgent()>();

        return $r2;
    }

    protected final boolean registerClientCert()
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.service.EasServerConnection $r1;
        boolean $z0;

        r0 := @this: com.android.exchange.eas.EasOperation;

        $r1 = r0.<com.android.exchange.eas.EasOperation: com.android.exchange.service.EasServerConnection mConnection>;

        $z0 = virtualinvoke $r1.<com.android.exchange.service.EasServerConnection: boolean registerClientCert()>();

        return $z0;
    }

    protected static void expandedAddDeviceInformationToSerializer(com.android.exchange.adapter.Serializer, android.content.Context, java.lang.String) throws java.io.IOException
    {
        com.android.exchange.adapter.Serializer r0, $r10, $r25;
        android.content.Context r1;
        java.lang.String r2, r3, r4, r5, r7, r8, $r12, $r15, $r18, $r20, $r28, $r29, r38;
        android.telephony.TelephonyManager r6;
        java.lang.Object $r9;
        android.content.ContentResolver $r14;
        android.net.Uri $r16;
        java.lang.StringBuilder $r17, $r19, $r21, $r32, $r33, $r34, $r35, $r36;
        boolean $z0, $z1, $z2, $z3;
        android.os.Bundle r37;

        r0 := @parameter0: com.android.exchange.adapter.Serializer;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.lang.String;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r6 = (android.telephony.TelephonyManager) $r9;

        if r6 == null goto label4;

        r3 = virtualinvoke r6.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        r4 = virtualinvoke r6.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        r7 = virtualinvoke r6.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        r8 = virtualinvoke r6.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z3 != 0 goto label1;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z2 != 0 goto label1;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r5 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z1 != 0 goto label2;

        r5 = r7;

        goto label3;

     label2:
        r5 = r8;

     label3:
        goto label5;

     label4:
        r3 = null;

        r4 = null;

        r5 = null;

     label5:
        $r10 = virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(1174);

        virtualinvoke $r10.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(1160);

        $r12 = <android.os.Build: java.lang.String MODEL>;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1175, $r12);

        if r3 == null goto label6;

        $r29 = virtualinvoke r6.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1176, $r29);

     label6:
        $r14 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r16 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r15 = <com.android.emailcommon.provider.EmailContent: java.lang.String DEVICE_FRIENDLY_NAME>;

        r37 = virtualinvoke $r14.<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>($r16, $r15, null, null);

        if r37 == null goto label7;

        $r28 = <com.android.emailcommon.provider.EmailContent: java.lang.String DEVICE_FRIENDLY_NAME>;

        r38 = virtualinvoke r37.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r28);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r38);

        if $z0 != 0 goto label7;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1177, r38);

     label7:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Android ");

        $r18 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1178, $r20);

        if r4 == null goto label8;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1180, r4);

     label8:
        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1184, r2);

        if r5 == null goto label9;

        virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(1186, r5);

     label9:
        $r25 = virtualinvoke r0.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        virtualinvoke $r25.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        return;
    }

    protected final void addDeviceInformationToSerializer(com.android.exchange.adapter.Serializer) throws java.io.IOException
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.exchange.adapter.Serializer r1;
        java.lang.String r2;
        android.content.Context $r3;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.exchange.adapter.Serializer;

        r2 = virtualinvoke r0.<com.android.exchange.eas.EasOperation: java.lang.String getUserAgent()>();

        $r3 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        staticinvoke <com.android.exchange.eas.EasOperation: void expandedAddDeviceInformationToSerializer(com.android.exchange.adapter.Serializer,android.content.Context,java.lang.String)>(r1, $r3, r2);

        return;
    }

    protected final void sendMessage(com.android.emailcommon.provider.Account, com.android.emailcommon.provider.EmailContent$Message)
    {
        com.android.exchange.eas.EasOperation r0;
        com.android.emailcommon.provider.Account r1;
        com.android.emailcommon.provider.EmailContent$Message r2;
        long l0, $l1, $l3, $l4, $l6;
        com.android.emailcommon.provider.Mailbox r3;
        android.content.Context $r4, $r5, $r12, $r13;
        byte $b2;
        android.accounts.Account $r7;
        java.lang.String $r8, $r10;
        java.lang.Object[] $r9;
        java.lang.Long $r11;

        r0 := @this: com.android.exchange.eas.EasOperation;

        r1 := @parameter0: com.android.emailcommon.provider.Account;

        r2 := @parameter1: com.android.emailcommon.provider.EmailContent$Message;

        $r4 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $l1 = r1.<com.android.emailcommon.provider.Account: long mId>;

        l0 = staticinvoke <com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>($r4, $l1, 4);

        $b2 = l0 cmp -1L;

        if $b2 != 0 goto label1;

        $r10 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r9 = newarray (java.lang.Object)[1];

        $l4 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r9[0] = $r11;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "No outbox for account %d, creating it", $r9);

        $r12 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        $l6 = r1.<com.android.emailcommon.provider.Account: long mId>;

        r3 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox newSystemMailbox(android.content.Context,long,int)>($r12, $l6, 4);

        $r13 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: android.net.Uri save(android.content.Context)>($r13);

        l0 = r3.<com.android.emailcommon.provider.Mailbox: long mId>;

     label1:
        r2.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey> = l0;

        $l3 = r1.<com.android.emailcommon.provider.Account: long mId>;

        r2.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey> = $l3;

        $r5 = r0.<com.android.exchange.eas.EasOperation: android.content.Context mContext>;

        virtualinvoke r2.<com.android.emailcommon.provider.EmailContent$Message: android.net.Uri save(android.content.Context)>($r5);

        $r7 = new android.accounts.Account;

        $r8 = r1.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        specialinvoke $r7.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r8, "com.android.exchange");

        staticinvoke <com.android.exchange.eas.EasOperation: void requestSyncForMailbox(android.accounts.Account,long)>($r7, l0);

        return;
    }

    protected static void requestSyncForMailbox(android.accounts.Account, long)
    {
        android.accounts.Account r0;
        long l0;
        android.os.Bundle r1;
        java.lang.String $r2, $r4, $r5, $r6;
        java.lang.Object[] $r3;

        r0 := @parameter0: android.accounts.Account;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.emailcommon.provider.Mailbox: android.os.Bundle createSyncBundle(long)>(l0);

        $r2 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r2, r1);

        $r4 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r3 = newarray (java.lang.Object)[2];

        $r5 = virtualinvoke r0.<android.accounts.Account: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke r1.<android.os.Bundle: java.lang.String toString()>();

        $r3[1] = $r6;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r4, "requestSync EasOperation requestSyncForMailbox %s, %s", $r3);

        return;
    }

    protected static void requestSyncForMailboxes(android.accounts.Account, java.lang.String, java.util.ArrayList)
    {
        android.accounts.Account r0;
        java.lang.String r1, $r5, $r6, $r7;
        java.util.ArrayList r2;
        android.os.Bundle r3;
        java.lang.Object[] $r4;

        r0 := @parameter0: android.accounts.Account;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 = staticinvoke <com.android.emailcommon.provider.Mailbox: android.os.Bundle createSyncBundle(java.util.ArrayList)>(r2);

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, r1, r3);

        $r5 = <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG>;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r0.<android.accounts.Account: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = virtualinvoke r3.<android.os.Bundle: java.lang.String toString()>();

        $r4[1] = $r7;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r5, "EasOperation requestSyncForMailboxes  %s, %s", $r4);

        return;
    }

    public static int translateSyncResultToUiResult(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case -99: goto label6;
            case -11: goto label5;
            case -10: goto label5;
            case -9: goto label4;
            case -8: goto label3;
            case -7: goto label3;
            case -6: goto label3;
            case -5: goto label3;
            case -4: goto label2;
            case -3: goto label1;
            default: goto label7;
        };

     label1:
        return 5;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        goto label7;

     label5:
        return 5;

     label6:
        return 5;

     label7:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.android.exchange.eas.EasOperation: int RESULT_OP_SPECIFIC_ERROR_RESULT> = -100;

        <com.android.exchange.eas.EasOperation: int RESULT_OTHER_FAILURE> = -99;

        <com.android.exchange.eas.EasOperation: int RESULT_NON_FATAL_ERROR> = -12;

        <com.android.exchange.eas.EasOperation: int RESULT_HARD_DATA_FAILURE> = -11;

        <com.android.exchange.eas.EasOperation: int RESULT_INITIALIZATION_FAILURE> = -10;

        <com.android.exchange.eas.EasOperation: int RESULT_PROTOCOL_VERSION_UNSUPPORTED> = -9;

        <com.android.exchange.eas.EasOperation: int RESULT_CLIENT_CERTIFICATE_REQUIRED> = -8;

        <com.android.exchange.eas.EasOperation: int RESULT_AUTHENTICATION_ERROR> = -7;

        <com.android.exchange.eas.EasOperation: int RESULT_PROVISIONING_ERROR> = -6;

        <com.android.exchange.eas.EasOperation: int RESULT_FORBIDDEN> = -5;

        <com.android.exchange.eas.EasOperation: int RESULT_NETWORK_PROBLEM> = -4;

        <com.android.exchange.eas.EasOperation: int RESULT_TOO_MANY_REDIRECTS> = -3;

        <com.android.exchange.eas.EasOperation: int RESULT_RESTART> = -2;

        <com.android.exchange.eas.EasOperation: int RESULT_ABORT> = -1;

        <com.android.exchange.eas.EasOperation: int RESULT_MIN_OK_RESULT> = 0;

        <com.android.exchange.eas.EasOperation: java.lang.String EAS_14_MIME_TYPE> = "application/vnd.ms-sync.wbxml";

        <com.android.exchange.eas.EasOperation: int MAX_REDIRECTS> = 3;

        $r0 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        <com.android.exchange.eas.EasOperation: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
