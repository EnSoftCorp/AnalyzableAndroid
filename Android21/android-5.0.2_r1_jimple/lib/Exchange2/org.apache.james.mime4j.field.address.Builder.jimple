class org.apache.james.mime4j.field.address.Builder extends java.lang.Object
{
    private static org.apache.james.mime4j.field.address.Builder singleton;

    void <init>()
    {
        org.apache.james.mime4j.field.address.Builder r0;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.james.mime4j.field.address.Builder getInstance()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton>;

        return $r0;
    }

    public org.apache.james.mime4j.field.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.parser.ASTaddress_list)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTaddress_list r1;
        java.util.ArrayList r2, $r5;
        int i0, $i1;
        org.apache.james.mime4j.field.address.parser.ASTaddress r3;
        org.apache.james.mime4j.field.address.Address r4;
        org.apache.james.mime4j.field.address.AddressList $r6;
        org.apache.james.mime4j.field.address.parser.Node $r7;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddress_list;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r1.<org.apache.james.mime4j.field.address.parser.ASTaddress_list: int jjtGetNumChildren()>();

        if i0 >= $i1 goto label2;

        $r7 = virtualinvoke r1.<org.apache.james.mime4j.field.address.parser.ASTaddress_list: org.apache.james.mime4j.field.address.parser.Node jjtGetChild(int)>(i0);

        r3 = (org.apache.james.mime4j.field.address.parser.ASTaddress) $r7;

        r4 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Address buildAddress(org.apache.james.mime4j.field.address.parser.ASTaddress)>(r3);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new org.apache.james.mime4j.field.address.AddressList;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.AddressList: void <init>(java.util.ArrayList,boolean)>(r2, 1);

        return $r6;
    }

    private org.apache.james.mime4j.field.address.Address buildAddress(org.apache.james.mime4j.field.address.parser.ASTaddress)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTaddress r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2, $r6;
        org.apache.james.mime4j.field.address.parser.Node r3, r5;
        java.lang.String r4, r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r7, $r9;
        org.apache.james.mime4j.field.address.parser.ASTphrase $r8;
        org.apache.james.mime4j.field.address.NamedMailbox $r10;
        org.apache.james.mime4j.field.address.Mailbox $r11, $r18, $r19;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r12, $r15;
        org.apache.james.mime4j.field.address.parser.ASTgroup_body $r13;
        org.apache.james.mime4j.field.address.Group $r14;
        org.apache.james.mime4j.field.address.MailboxList $r16;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r17;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddress;

        $r6 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r2 = $r6;

        r3 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z0 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r17 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) r3;

        $r19 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>($r17);

        return $r19;

     label1:
        $z1 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z1 == 0 goto label2;

        $r15 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) r3;

        $r18 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r15);

        return $r18;

     label2:
        $z2 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTphrase;

        if $z2 == 0 goto label5;

        $r8 = (org.apache.james.mime4j.field.address.parser.ASTphrase) r3;

        r4 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r8, 0);

        r5 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z3 = r5 instanceof org.apache.james.mime4j.field.address.parser.ASTgroup_body;

        if $z3 == 0 goto label3;

        $r14 = new org.apache.james.mime4j.field.address.Group;

        $r13 = (org.apache.james.mime4j.field.address.parser.ASTgroup_body) r5;

        $r16 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.parser.ASTgroup_body)>($r13);

        specialinvoke $r14.<org.apache.james.mime4j.field.address.Group: void <init>(java.lang.String,org.apache.james.mime4j.field.address.MailboxList)>(r4, $r16);

        return $r14;

     label3:
        $z4 = r5 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z4 == 0 goto label4;

        r20 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String)>(r4);

        $r10 = new org.apache.james.mime4j.field.address.NamedMailbox;

        $r12 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) r5;

        $r11 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r12);

        specialinvoke $r10.<org.apache.james.mime4j.field.address.NamedMailbox: void <init>(java.lang.String,org.apache.james.mime4j.field.address.Mailbox)>(r20, $r11);

        return $r10;

     label4:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label5:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }

    private org.apache.james.mime4j.field.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.parser.ASTgroup_body)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTgroup_body r1;
        java.util.ArrayList r2, $r5;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3, $r6;
        org.apache.james.mime4j.field.address.parser.Node r4;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.address.MailboxList $r7;
        java.lang.IllegalStateException $r8;
        org.apache.james.mime4j.field.address.parser.ASTmailbox $r9;
        org.apache.james.mime4j.field.address.Mailbox $r10;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTgroup_body;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r3 = $r6;

     label1:
        $z0 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r4 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z1 = r4 instanceof org.apache.james.mime4j.field.address.parser.ASTmailbox;

        if $z1 == 0 goto label2;

        $r9 = (org.apache.james.mime4j.field.address.parser.ASTmailbox) r4;

        $r10 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.parser.ASTmailbox)>($r9);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label3;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label3:
        goto label1;

     label4:
        $r7 = new org.apache.james.mime4j.field.address.MailboxList;

        specialinvoke $r7.<org.apache.james.mime4j.field.address.MailboxList: void <init>(java.util.ArrayList,boolean)>(r2, 1);

        return $r7;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.parser.ASTmailbox)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTmailbox r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2, $r4;
        org.apache.james.mime4j.field.address.parser.Node r3;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r5;
        org.apache.james.mime4j.field.address.parser.ASTname_addr $r6;
        org.apache.james.mime4j.field.address.NamedMailbox $r7;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r8;
        org.apache.james.mime4j.field.address.Mailbox $r9, $r11;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r10;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTmailbox;

        $r4 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r4.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r2 = $r4;

        r3 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z0 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z0 == 0 goto label1;

        $r10 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) r3;

        $r11 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>($r10);

        return $r11;

     label1:
        $z1 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z1 == 0 goto label2;

        $r8 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) r3;

        $r9 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r8);

        return $r9;

     label2:
        $z2 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTname_addr;

        if $z2 == 0 goto label3;

        $r6 = (org.apache.james.mime4j.field.address.parser.ASTname_addr) r3;

        $r7 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.NamedMailbox buildNameAddr(org.apache.james.mime4j.field.address.parser.ASTname_addr)>($r6);

        return $r7;

     label3:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    private org.apache.james.mime4j.field.address.NamedMailbox buildNameAddr(org.apache.james.mime4j.field.address.parser.ASTname_addr)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTname_addr r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2, $r5;
        org.apache.james.mime4j.field.address.parser.Node r3, r12;
        java.lang.String r4, r13;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r6, $r8;
        org.apache.james.mime4j.field.address.parser.ASTphrase $r7;
        org.apache.james.mime4j.field.address.NamedMailbox $r9;
        org.apache.james.mime4j.field.address.Mailbox $r10;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr $r11;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTname_addr;

        $r5 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r5.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r2 = $r5;

        r3 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z0 = r3 instanceof org.apache.james.mime4j.field.address.parser.ASTphrase;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.james.mime4j.field.address.parser.ASTphrase) r3;

        r4 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r7, 0);

        goto label2;

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label2:
        r12 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z1 = r12 instanceof org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        if $z1 == 0 goto label3;

        r13 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWords(java.lang.String)>(r4);

        $r9 = new org.apache.james.mime4j.field.address.NamedMailbox;

        $r11 = (org.apache.james.mime4j.field.address.parser.ASTangle_addr) r12;

        $r10 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)>($r11);

        specialinvoke $r9.<org.apache.james.mime4j.field.address.NamedMailbox: void <init>(java.lang.String,org.apache.james.mime4j.field.address.Mailbox)>(r13, $r10);

        return $r9;

     label3:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.parser.ASTangle_addr)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTangle_addr r1;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r2, $r5;
        org.apache.james.mime4j.field.address.DomainList r3;
        org.apache.james.mime4j.field.address.parser.Node r4;
        boolean $z0, $z1, $z2;
        java.lang.IllegalStateException $r6, $r7;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec $r8;
        org.apache.james.mime4j.field.address.Mailbox $r9;
        org.apache.james.mime4j.field.address.parser.ASTroute $r10;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTangle_addr;

        $r5 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r5.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r2 = $r5;

        r3 = null;

        r4 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z0 = r4 instanceof org.apache.james.mime4j.field.address.parser.ASTroute;

        if $z0 == 0 goto label1;

        $r10 = (org.apache.james.mime4j.field.address.parser.ASTroute) r4;

        r3 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.DomainList buildRoute(org.apache.james.mime4j.field.address.parser.ASTroute)>($r10);

        r4 = virtualinvoke r2.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        goto label3;

     label1:
        $z1 = r4 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label3:
        $z2 = r4 instanceof org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        if $z2 == 0 goto label4;

        $r8 = (org.apache.james.mime4j.field.address.parser.ASTaddr_spec) r4;

        $r9 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList,org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>(r3, $r8);

        return $r9;

     label4:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }

    private org.apache.james.mime4j.field.address.DomainList buildRoute(org.apache.james.mime4j.field.address.parser.ASTroute)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTroute r1;
        java.util.ArrayList r2, $r5;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3, $r6;
        org.apache.james.mime4j.field.address.parser.Node r4;
        int $i0;
        boolean $z0, $z1;
        org.apache.james.mime4j.field.address.DomainList $r7;
        java.lang.IllegalStateException $r8;
        org.apache.james.mime4j.field.address.parser.ASTdomain $r9;
        java.lang.String $r10;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTroute;

        $r5 = new java.util.ArrayList;

        $i0 = virtualinvoke r1.<org.apache.james.mime4j.field.address.parser.ASTroute: int jjtGetNumChildren()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r5;

        $r6 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r1);

        r3 = $r6;

     label1:
        $z0 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        r4 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $z1 = r4 instanceof org.apache.james.mime4j.field.address.parser.ASTdomain;

        if $z1 == 0 goto label2;

        $r9 = (org.apache.james.mime4j.field.address.parser.ASTdomain) r4;

        $r10 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r9, 1);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        goto label3;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label3:
        goto label1;

     label4:
        $r7 = new org.apache.james.mime4j.field.address.DomainList;

        specialinvoke $r7.<org.apache.james.mime4j.field.address.DomainList: void <init>(java.util.ArrayList,boolean)>(r2, 1);

        return $r7;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.parser.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec r1;
        org.apache.james.mime4j.field.address.Mailbox $r2;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        $r2 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList,org.apache.james.mime4j.field.address.parser.ASTaddr_spec)>(null, r1);

        return $r2;
    }

    private org.apache.james.mime4j.field.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.DomainList, org.apache.james.mime4j.field.address.parser.ASTaddr_spec)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.DomainList r1;
        org.apache.james.mime4j.field.address.parser.ASTaddr_spec r2;
        org.apache.james.mime4j.field.address.Builder$ChildNodeIterator r3, $r6;
        java.lang.String r4, r5;
        org.apache.james.mime4j.field.address.parser.Node $r7, $r9;
        org.apache.james.mime4j.field.address.parser.ASTlocal_part $r8;
        org.apache.james.mime4j.field.address.parser.ASTdomain $r10;
        org.apache.james.mime4j.field.address.Mailbox $r11;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.DomainList;

        r2 := @parameter1: org.apache.james.mime4j.field.address.parser.ASTaddr_spec;

        $r6 = new org.apache.james.mime4j.field.address.Builder$ChildNodeIterator;

        specialinvoke $r6.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: void <init>(org.apache.james.mime4j.field.address.parser.SimpleNode)>(r2);

        r3 = $r6;

        $r7 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $r8 = (org.apache.james.mime4j.field.address.parser.ASTlocal_part) $r7;

        r4 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r8, 1);

        $r9 = virtualinvoke r3.<org.apache.james.mime4j.field.address.Builder$ChildNodeIterator: org.apache.james.mime4j.field.address.parser.Node nextNode()>();

        $r10 = (org.apache.james.mime4j.field.address.parser.ASTdomain) $r9;

        r5 = specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode,boolean)>($r10, 1);

        $r11 = new org.apache.james.mime4j.field.address.Mailbox;

        specialinvoke $r11.<org.apache.james.mime4j.field.address.Mailbox: void <init>(org.apache.james.mime4j.field.address.DomainList,java.lang.String,java.lang.String)>(r1, r4, r5);

        return $r11;
    }

    private java.lang.String buildString(org.apache.james.mime4j.field.address.parser.SimpleNode, boolean)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        org.apache.james.mime4j.field.address.parser.SimpleNode r1;
        boolean z0;
        org.apache.james.mime4j.field.address.parser.Token r2, r3, $r11;
        java.lang.StringBuffer r4, $r5;
        java.lang.String $r6, $r8, $r9;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: org.apache.james.mime4j.field.address.parser.SimpleNode;

        z0 := @parameter1: boolean;

        r2 = r1.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Token firstToken>;

        r3 = r1.<org.apache.james.mime4j.field.address.parser.SimpleNode: org.apache.james.mime4j.field.address.parser.Token lastToken>;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r4 = $r5;

     label1:
        if r2 == r3 goto label2;

        $r9 = r2.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        r2 = r2.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token next>;

        if z0 != 0 goto label1;

        $r11 = r2.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuffer,org.apache.james.mime4j.field.address.parser.Token)>(r4, $r11);

        goto label1;

     label2:
        $r6 = r3.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    private void addSpecials(java.lang.StringBuffer, org.apache.james.mime4j.field.address.parser.Token)
    {
        org.apache.james.mime4j.field.address.Builder r0;
        java.lang.StringBuffer r1;
        org.apache.james.mime4j.field.address.parser.Token r2, $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.james.mime4j.field.address.Builder;

        r1 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: org.apache.james.mime4j.field.address.parser.Token;

        if r2 == null goto label1;

        $r3 = r2.<org.apache.james.mime4j.field.address.parser.Token: org.apache.james.mime4j.field.address.parser.Token specialToken>;

        specialinvoke r0.<org.apache.james.mime4j.field.address.Builder: void addSpecials(java.lang.StringBuffer,org.apache.james.mime4j.field.address.parser.Token)>(r1, $r3);

        $r4 = r2.<org.apache.james.mime4j.field.address.parser.Token: java.lang.String image>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label1:
        return;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.field.address.Builder $r0;

        $r0 = new org.apache.james.mime4j.field.address.Builder;

        specialinvoke $r0.<org.apache.james.mime4j.field.address.Builder: void <init>()>();

        <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder singleton> = $r0;

        return;
    }
}
