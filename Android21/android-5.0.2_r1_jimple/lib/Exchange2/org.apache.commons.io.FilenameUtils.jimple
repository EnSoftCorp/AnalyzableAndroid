public class org.apache.commons.io.FilenameUtils extends java.lang.Object
{
    public static final char EXTENSION_SEPARATOR;
    public static final java.lang.String EXTENSION_SEPARATOR_STR;
    private static final char UNIX_SEPARATOR;
    private static final char WINDOWS_SEPARATOR;
    private static final char SYSTEM_SEPARATOR;
    private static final char OTHER_SEPARATOR;

    public void <init>()
    {
        org.apache.commons.io.FilenameUtils r0;

        r0 := @this: org.apache.commons.io.FilenameUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean isSystemWindows()
    {
        char $c0;
        boolean $z0;

        $c0 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c0 != 92 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSeparator(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 == 47 goto label1;

        if c0 != 92 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static java.lang.String normalize(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String normalizeNoEndSeparator(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    private static java.lang.String doNormalize(java.lang.String, boolean)
    {
        java.lang.String r0, $r2, $r3, $r4;
        boolean z0, z1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i11, $i13, $i15, $i17, $i19, $i20, $i21, $i22, $i25, $i26, $i27, $i28, $i29, $i30, $i33, $i36, $i38, $i39, $i40, $i41, $i42, $i46, $i49, $i52, $i53, $i54, i58, i59;
        char[] r1;
        char $c9, $c10, $c12, $c14, $c16, $c18, $c23, $c24, $c31, $c32, $c34, $c35, $c37, $c43, $c44, $c45, $c47, $c48, $c50, $c51, $c55, $c56, $c57;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label01;

        return null;

     label01:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label02;

        return r0;

     label02:
        i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if i1 >= 0 goto label03;

        return null;

     label03:
        $i5 = i0 + 2;

        r1 = newarray (char)[$i5];

        $i6 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i6, r1, 0);

        i2 = 0;

     label04:
        $i7 = lengthof r1;

        if i2 >= $i7 goto label06;

        $c56 = r1[i2];

        $c55 = <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR>;

        if $c56 != $c55 goto label05;

        $c57 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        r1[i2] = $c57;

     label05:
        i2 = i2 + 1;

        goto label04;

     label06:
        z1 = 1;

        $i8 = i0 - 1;

        $c10 = r1[$i8];

        $c9 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c10 == $c9 goto label07;

        $i52 = i0;

        i0 = i0 + 1;

        $c51 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        r1[$i52] = $c51;

        z1 = 0;

     label07:
        i3 = i1 + 1;

     label08:
        if i3 >= i0 goto label10;

        $c50 = r1[i3];

        $c43 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c50 != $c43 goto label09;

        $i49 = i3 - 1;

        $c47 = r1[$i49];

        $c48 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c47 != $c48 goto label09;

        $i53 = i3 - 1;

        $i54 = i0 - i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r1, $i53, $i54);

        i0 = i0 + -1;

        i3 = i3 + -1;

     label09:
        i3 = i3 + 1;

        goto label08;

     label10:
        i58 = i1 + 1;

     label11:
        if i58 >= i0 goto label15;

        $c37 = r1[i58];

        $c32 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c37 != $c32 goto label14;

        $i38 = i58 - 1;

        $c35 = r1[$i38];

        if $c35 != 46 goto label14;

        $i36 = i1 + 1;

        if i58 == $i36 goto label12;

        $i46 = i58 - 2;

        $c44 = r1[$i46];

        $c45 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c44 != $c45 goto label14;

     label12:
        $i42 = i0 - 1;

        if i58 != $i42 goto label13;

        z1 = 1;

     label13:
        $i39 = i58 + 1;

        $i40 = i58 - 1;

        $i41 = i0 - i58;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i39, r1, $i40, $i41);

        i0 = i0 + -2;

        i58 = i58 + -1;

     label14:
        i58 = i58 + 1;

        goto label11;

     label15:
        i59 = i1 + 2;

     label16:
        if i59 >= i0 goto label24;

        $c14 = r1[i59];

        $c12 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c14 != $c12 goto label23;

        $i13 = i59 - 1;

        $c16 = r1[$i13];

        if $c16 != 46 goto label23;

        $i15 = i59 - 2;

        $c18 = r1[$i15];

        if $c18 != 46 goto label23;

        $i17 = i1 + 2;

        if i59 == $i17 goto label17;

        $i33 = i59 - 3;

        $c31 = r1[$i33];

        $c34 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c31 != $c34 goto label23;

     label17:
        $i20 = i1 + 2;

        if i59 != $i20 goto label18;

        return null;

     label18:
        $i19 = i0 - 1;

        if i59 != $i19 goto label19;

        z1 = 1;

     label19:
        i4 = i59 - 4;

     label20:
        if i4 < i1 goto label22;

        $c24 = r1[i4];

        $c23 = <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR>;

        if $c24 != $c23 goto label21;

        $i27 = i59 + 1;

        $i30 = i4 + 1;

        $i29 = i0 - i59;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i27, r1, $i30, $i29);

        $i28 = i59 - i4;

        i0 = i0 - $i28;

        i59 = i4 + 1;

        goto label23;

     label21:
        i4 = i4 + -1;

        goto label20;

     label22:
        $i21 = i59 + 1;

        $i22 = i0 - i59;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i21, r1, i1, $i22);

        $i25 = i59 + 1;

        $i26 = $i25 - i1;

        i0 = i0 - $i26;

        i59 = i1 + 1;

     label23:
        i59 = i59 + 1;

        goto label16;

     label24:
        if i0 > 0 goto label25;

        return "";

     label25:
        if i0 > i1 goto label26;

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i0);

        return $r4;

     label26:
        if z1 == 0 goto label27;

        if z0 == 0 goto label27;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r1, 0, i0);

        return $r3;

     label27:
        $r2 = new java.lang.String;

        $i11 = i0 - 1;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r1, 0, $i11);

        return $r2;
    }

    public static java.lang.String concat(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6, $r7, $r10, $r12, $r13, $r14;
        int i0, i1, $i3;
        char c2;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r8, $r9, $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r1);

        if i0 >= 0 goto label1;

        return null;

     label1:
        if i0 <= 0 goto label2;

        $r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r1);

        return $r14;

     label2:
        if r0 != null goto label3;

        return null;

     label3:
        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 != 0 goto label4;

        $r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r1);

        return $r12;

     label4:
        $i3 = i1 - 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(c2);

        if $z0 == 0 goto label5;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r10);

        return $r13;

     label5:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6);

        return $r7;
    }

    public static java.lang.String separatorsToUnix(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        if $i0 != -1 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(92, 47);

        return $r1;
    }

    public static java.lang.String separatorsToWindows(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        if $i0 != -1 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(47, 92);

        return $r1;
    }

    public static java.lang.String separatorsToSystem(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSystemWindows()>();

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToWindows(java.lang.String)>(r0);

        return $r2;

     label2:
        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String separatorsToUnix(java.lang.String)>(r0);

        return $r1;
    }

    public static int getPrefixLength(java.lang.String)
    {
        java.lang.String r0;
        int i0, i2, i3, i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i17, i18, i21, i22, i23;
        char c1, $c10, c19, c20;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte $b5, $b16;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return -1;

     label01:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label02;

        return 0;

     label02:
        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c1 != 58 goto label03;

        return -1;

     label03:
        if i0 != 1 goto label07;

        if c1 != 126 goto label04;

        return 2;

     label04:
        $z4 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(c1);

        if $z4 == 0 goto label05;

        $b16 = 1;

        goto label06;

     label05:
        $b16 = 0;

     label06:
        return $b16;

     label07:
        if c1 != 126 goto label13;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(47, 1);

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(92, 1);

        if i2 != -1 goto label08;

        if i3 != -1 goto label08;

        $i15 = i0 + 1;

        return $i15;

     label08:
        if i2 != -1 goto label09;

        $i13 = i3;

        goto label10;

     label09:
        $i13 = i2;

     label10:
        i17 = $i13;

        if i3 != -1 goto label11;

        $i14 = i17;

        goto label12;

     label11:
        $i14 = i3;

     label12:
        i18 = $i14;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i17, i18);

        $i11 = $i12 + 1;

        return $i11;

     label13:
        c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        if c19 != 58 goto label17;

        c20 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c1);

        if c20 < 65 goto label16;

        if c20 > 90 goto label16;

        if i0 == 2 goto label14;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>($c10);

        if $z3 != 0 goto label15;

     label14:
        return 2;

     label15:
        return 3;

     label16:
        return -1;

     label17:
        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(c1);

        if $z0 == 0 goto label25;

        $z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(c19);

        if $z2 == 0 goto label25;

        i21 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(47, 2);

        i4 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(92, 2);

        if i21 != -1 goto label18;

        if i4 == -1 goto label19;

     label18:
        if i21 == 2 goto label19;

        if i4 != 2 goto label20;

     label19:
        return -1;

     label20:
        if i21 != -1 goto label21;

        $i9 = i4;

        goto label22;

     label21:
        $i9 = i21;

     label22:
        i22 = $i9;

        if i4 != -1 goto label23;

        $i7 = i22;

        goto label24;

     label23:
        $i7 = i4;

     label24:
        i23 = $i7;

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>(i22, i23);

        $i8 = $i6 + 1;

        return $i8;

     label25:
        $z1 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(c1);

        if $z1 == 0 goto label26;

        $b5 = 1;

        goto label27;

     label26:
        $b5 = 0;

     label27:
        return $b5;
    }

    public static int indexOfLastSeparator(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return -1;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(92);

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        return $i2;
    }

    public static int indexOfExtension(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return -1;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        if i1 <= i0 goto label2;

        $i2 = -1;

        goto label3;

     label2:
        $i2 = i0;

     label3:
        return $i2;
    }

    public static java.lang.String getPrefix(java.lang.String)
    {
        java.lang.String r0, $r1, $r5;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if i0 >= 0 goto label2;

        return null;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= $i1 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    public static java.lang.String getPath(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1);

        return $r1;
    }

    public static java.lang.String getPathNoEndSeparator(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0);

        return $r1;
    }

    private static java.lang.String doGetPath(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0, i1, i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        return null;

     label1:
        i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if i1 >= 0 goto label2;

        return null;

     label2:
        i2 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i3 goto label3;

        if i2 >= 0 goto label4;

     label3:
        return "";

     label4:
        $i4 = i2 + i0;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, $i4);

        return $r1;
    }

    public static java.lang.String getFullPath(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1);

        return $r1;
    }

    public static java.lang.String getFullPathNoEndSeparator(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    private static java.lang.String doGetFullPath(java.lang.String, boolean)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean z0;
        int i0, i1, i2, $i3;
        byte $b4;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(r0);

        if i0 >= 0 goto label2;

        return null;

     label2:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 < $i3 goto label4;

        if z0 == 0 goto label3;

        $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0);

        return $r3;

     label3:
        return r0;

     label4:
        i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        if i1 >= 0 goto label5;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r2;

     label5:
        if z0 == 0 goto label6;

        $b4 = 1;

        goto label7;

     label6:
        $b4 = 0;

     label7:
        i2 = i1 + $b4;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        return $r1;
    }

    public static java.lang.String getName(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(r0);

        $i1 = i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static java.lang.String getBaseName(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String getExtension(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        if i0 != -1 goto label2;

        return "";

     label2:
        $i1 = i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    public static java.lang.String removeExtension(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        if i0 != -1 goto label2;

        return r0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    public static boolean equals(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2);

        return $z0;
    }

    public static boolean equalsOnSystem(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2);

        return $z0;
    }

    public static boolean equalsNormalized(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2);

        return $z0;
    }

    public static boolean equalsNormalizedOnSystem(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2);

        return $z0;
    }

    public static boolean equals(java.lang.String, java.lang.String, boolean, org.apache.commons.io.IOCase)
    {
        java.lang.String r0, r1;
        boolean z0, $z1, $z2;
        org.apache.commons.io.IOCase r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.apache.commons.io.IOCase;

        if r0 == null goto label1;

        if r1 != null goto label4;

     label1:
        if r0 != r1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        if z0 == 0 goto label6;

        r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0);

        r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r1);

        if r0 == null goto label5;

        if r1 != null goto label6;

     label5:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Error normalizing one or both of the file names");

        throw $r3;

     label6:
        if r2 != null goto label7;

        r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label7:
        $z2 = virtualinvoke r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1);

        return $z2;
    }

    public static boolean isExtension(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

     label2:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        if $i0 != -1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public static boolean isExtension(java.lang.String, java.lang.String[])
    {
        java.lang.String r0, r2, $r3;
        java.lang.String[] r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $i2 = lengthof r1;

        if $i2 != 0 goto label5;

     label2:
        $i1 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        if $i1 != -1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        i0 = 0;

     label6:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label8;

        $r3 = r1[i0];

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label7;

        return 1;

     label7:
        i0 = i0 + 1;

        goto label6;

     label8:
        return 0;
    }

    public static boolean isExtension(java.lang.String, java.util.Collection)
    {
        java.lang.String r0, r2;
        java.util.Collection r1;
        java.util.Iterator r3;
        int $i0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        return 0;

     label1:
        if r1 == null goto label2;

        $z1 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>();

        if $z1 == 0 goto label5;

     label2:
        $i0 = staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfExtension(java.lang.String)>(r0);

        if $i0 != -1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getExtension(java.lang.String)>(r0);

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z3 == 0 goto label6;

        return 1;

     label7:
        return 0;
    }

    public static boolean wildcardMatch(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean wildcardMatchOnSystem(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.commons.io.IOCase $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r0, r1, $r2);

        return $z0;
    }

    public static boolean wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase)
    {
        java.lang.String r0, r1, $r7, $r8, $r9, $r10, $r11, $r12, r16, r17;
        org.apache.commons.io.IOCase r2;
        java.lang.String[] r3;
        boolean z0, $z1, $z2, $z3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.util.Stack r4, $r6;
        int[] r5, $r13;
        java.lang.Object $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.commons.io.IOCase;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        if r1 != null goto label03;

     label02:
        return 0;

     label03:
        if r2 != null goto label04;

        r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

     label04:
        r16 = virtualinvoke r2.<org.apache.commons.io.IOCase: java.lang.String convertCase(java.lang.String)>(r0);

        r17 = virtualinvoke r2.<org.apache.commons.io.IOCase: java.lang.String convertCase(java.lang.String)>(r1);

        r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String[] splitOnTokens(java.lang.String)>(r17);

        z0 = 0;

        i0 = 0;

        i1 = 0;

        $r6 = new java.util.Stack;

        specialinvoke $r6.<java.util.Stack: void <init>()>();

        r4 = $r6;

     label05:
        $i2 = virtualinvoke r4.<java.util.Stack: int size()>();

        if $i2 <= 0 goto label06;

        $r15 = virtualinvoke r4.<java.util.Stack: java.lang.Object pop()>();

        r5 = (int[]) $r15;

        i1 = r5[0];

        i0 = r5[1];

        z0 = 1;

     label06:
        $i3 = lengthof r3;

        if i1 >= $i3 goto label14;

        $r7 = r3[i1];

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("?");

        if $z1 == 0 goto label07;

        i0 = i0 + 1;

        z0 = 0;

        goto label13;

     label07:
        $r8 = r3[i1];

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z2 == 0 goto label08;

        z0 = 1;

        $i10 = lengthof r3;

        $i9 = $i10 - 1;

        if i1 != $i9 goto label13;

        i0 = virtualinvoke r16.<java.lang.String: int length()>();

        goto label13;

     label08:
        if z0 == 0 goto label11;

        $r11 = r3[i1];

        i0 = virtualinvoke r16.<java.lang.String: int indexOf(java.lang.String,int)>($r11, i0);

        if i0 != -1 goto label09;

        goto label14;

     label09:
        $r12 = r3[i1];

        $i8 = i0 + 1;

        i11 = virtualinvoke r16.<java.lang.String: int indexOf(java.lang.String,int)>($r12, $i8);

        if i11 < 0 goto label10;

        $r13 = newarray (int)[2];

        $r13[0] = i1;

        $r13[1] = i11;

        virtualinvoke r4.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r13);

     label10:
        goto label12;

     label11:
        $r9 = r3[i1];

        $z3 = virtualinvoke r16.<java.lang.String: boolean startsWith(java.lang.String,int)>($r9, i0);

        if $z3 != 0 goto label12;

        goto label14;

     label12:
        $r10 = r3[i1];

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        i0 = i0 + $i7;

        z0 = 0;

     label13:
        i1 = i1 + 1;

        goto label06;

     label14:
        $i4 = lengthof r3;

        if i1 != $i4 goto label15;

        $i5 = virtualinvoke r16.<java.lang.String: int length()>();

        if i0 != $i5 goto label15;

        return 1;

     label15:
        $i6 = virtualinvoke r4.<java.util.Stack: int size()>();

        if $i6 > 0 goto label05;

        return 0;
    }

    static java.lang.String[] splitOnTokens(java.lang.String)
    {
        java.lang.String r0, $r9, $r10, $r12;
        char[] r1;
        java.util.ArrayList r2, $r4;
        java.lang.StringBuffer r3, $r5;
        int i0, $i1, $i2, $i3, $i4, $i7, $i8, $i9, $i10, $i13;
        java.lang.String[] $r6, $r8, $r13;
        java.lang.Object[] $r7;
        char $c5, $c6, $c11, $c12;
        java.lang.Object $r11;
        boolean $z3;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("?");

        if $i1 != -1 goto label01;

        $i13 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("*");

        if $i13 != -1 goto label01;

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = r0;

        return $r13;

     label01:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r3 = $r5;

        i0 = 0;

     label02:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label09;

        $c5 = r1[i0];

        if $c5 == 63 goto label03;

        $c12 = r1[i0];

        if $c12 != 42 goto label07;

     label03:
        $i7 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();

        if $i7 == 0 goto label04;

        $r12 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        virtualinvoke r3.<java.lang.StringBuffer: void setLength(int)>(0);

     label04:
        $c6 = r1[i0];

        if $c6 != 63 goto label05;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("?");

        goto label08;

     label05:
        $i8 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        if $i8 == 0 goto label06;

        if i0 <= 0 goto label08;

        $i10 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i9 = $i10 - 1;

        $r11 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>($i9);

        $r10 = (java.lang.String) $r11;

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z3 != 0 goto label08;

     label06:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>("*");

        goto label08;

     label07:
        $c11 = r1[i0];

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c11);

     label08:
        i0 = i0 + 1;

        goto label02;

     label09:
        $i3 = virtualinvoke r3.<java.lang.StringBuffer: int length()>();

        if $i3 == 0 goto label10;

        $r9 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

     label10:
        $i4 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r6 = newarray (java.lang.String)[$i4];

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.lang.String[]) $r7;

        return $r8;
    }

    static void <clinit>()
    {
        java.lang.Character $r0;
        java.lang.String $r1;
        char $c0;
        boolean $z0;

        <org.apache.commons.io.FilenameUtils: char WINDOWS_SEPARATOR> = 92;

        <org.apache.commons.io.FilenameUtils: char UNIX_SEPARATOR> = 47;

        <org.apache.commons.io.FilenameUtils: char EXTENSION_SEPARATOR> = 46;

        $r0 = new java.lang.Character;

        specialinvoke $r0.<java.lang.Character: void <init>(char)>(46);

        $r1 = virtualinvoke $r0.<java.lang.Character: java.lang.String toString()>();

        <org.apache.commons.io.FilenameUtils: java.lang.String EXTENSION_SEPARATOR_STR> = $r1;

        $c0 = <java.io.File: char separatorChar>;

        <org.apache.commons.io.FilenameUtils: char SYSTEM_SEPARATOR> = $c0;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSystemWindows()>();

        if $z0 == 0 goto label1;

        <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR> = 47;

        goto label2;

     label1:
        <org.apache.commons.io.FilenameUtils: char OTHER_SEPARATOR> = 92;

     label2:
        return;
    }
}
