class android.support.v4.content.FileProvider$SimplePathStrategy extends java.lang.Object implements android.support.v4.content.FileProvider$PathStrategy
{
    private final java.lang.String mAuthority;
    private final java.util.HashMap mRoots;

    public void <init>(java.lang.String)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy r0;
        java.lang.String r1;
        java.util.HashMap $r2;

        r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots> = $r2;

        r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority> = r1;

        return;
    }

    public void addRoot(java.lang.String, java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy r0;
        java.lang.String r1, $r12;
        java.io.File r2, r13;
        java.io.IOException r3, $r7;
        boolean $z0;
        java.util.HashMap $r4;
        java.lang.IllegalArgumentException $r6, $r8;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name must not be empty");

        throw $r6;

     label1:
        r13 = virtualinvoke r2.<java.io.File: java.io.File getCanonicalFile()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r12, r3);

        throw $r8;

     label4:
        $r4 = r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r13);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public android.net.Uri getUriForFile(java.io.File)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy r0;
        java.io.File r1, $r10, $r30, $r36;
        java.lang.String r2, r6, $r12, $r15, $r16, $r22, $r31, $r35, $r41, r43, r44, r45;
        java.util.Iterator r4;
        java.util.Map$Entry r5, r42;
        java.util.HashMap $r7;
        java.util.Set $r8;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r13, $r29, $r32, $r33;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r11, $r14, $r17, $r18, $r25, $r26, $r28, $r37, $r38, $r39;
        android.net.Uri$Builder $r19, $r20, $r21, $r23;
        android.net.Uri $r24;
        java.lang.IllegalArgumentException $r27, $r40;
        java.io.IOException $r34;

        r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        r1 := @parameter0: java.io.File;

     label01:
        r2 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

     label02:
        goto label04;

     label03:
        $r34 := @caughtexception;

        $r40 = new java.lang.IllegalArgumentException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label04:
        r42 = null;

        $r7 = r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r32 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r32;

        $r29 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r30 = (java.io.File) $r29;

        r6 = virtualinvoke $r30.<java.io.File: java.lang.String getPath()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r6);

        if $z2 == 0 goto label07;

        if r42 == null goto label06;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        $r33 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r36 = (java.io.File) $r33;

        $r35 = virtualinvoke $r36.<java.io.File: java.lang.String getPath()>();

        $i4 = virtualinvoke $r35.<java.lang.String: int length()>();

        if $i3 <= $i4 goto label07;

     label06:
        r42 = r5;

     label07:
        goto label05;

     label08:
        if r42 != null goto label09;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to find configured root that contains ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label09:
        $r9 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.io.File) $r9;

        r43 = virtualinvoke $r10.<java.io.File: java.lang.String getPath()>();

        $z1 = virtualinvoke r43.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label10;

        $i2 = virtualinvoke r43.<java.lang.String: int length()>();

        r44 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label11;

     label10:
        $i1 = virtualinvoke r43.<java.lang.String: int length()>();

        $i0 = $i1 + 1;

        r44 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label11:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = interfaceinvoke r42.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.String) $r13;

        $r15 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r16 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>(r44, "/");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r45 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = new android.net.Uri$Builder;

        specialinvoke $r20.<android.net.Uri$Builder: void <init>()>();

        $r19 = virtualinvoke $r20.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("content");

        $r22 = r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.lang.String mAuthority>;

        $r21 = virtualinvoke $r19.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>($r22);

        $r23 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri$Builder encodedPath(java.lang.String)>(r45);

        $r24 = virtualinvoke $r23.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r24;

        catch java.io.IOException from label01 to label02 with label03;
    }

    public java.io.File getFileForUri(android.net.Uri)
    {
        android.support.v4.content.FileProvider$SimplePathStrategy r0;
        android.net.Uri r1;
        java.lang.String r2, r3, $r7, $r8, $r12, $r13, $r18, $r25, r26;
        int i0, $i1;
        java.io.File r4, r5, $r10, r27;
        java.util.HashMap $r9;
        java.lang.Object $r11;
        boolean $z0;
        java.lang.IllegalArgumentException $r14, $r20;
        java.lang.SecurityException $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r22, $r23, $r24;
        java.io.IOException $r21;

        r0 := @this: android.support.v4.content.FileProvider$SimplePathStrategy;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getEncodedPath()>();

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int,int)>(47, 1);

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(1, i0);

        r3 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r7);

        $i1 = i0 + 1;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        r26 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r8);

        $r9 = r0.<android.support.v4.content.FileProvider$SimplePathStrategy: java.util.HashMap mRoots>;

        $r11 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.io.File) $r11;

        if r4 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find configured root for ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label1:
        $r10 = new java.io.File;

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, r26);

        r5 = $r10;

     label2:
        r27 = virtualinvoke r5.<java.io.File: java.io.File getCanonicalFile()>();

     label3:
        goto label5;

     label4:
        $r21 := @caughtexception;

        $r20 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to resolve canonical path for ");

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label5:
        $r12 = virtualinvoke r27.<java.io.File: java.lang.String getPath()>();

        $r13 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>($r13);

        if $z0 != 0 goto label6;

        $r15 = new java.lang.SecurityException;

        specialinvoke $r15.<java.lang.SecurityException: void <init>(java.lang.String)>("Resolved path jumped beyond configured root");

        throw $r15;

     label6:
        return r27;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
