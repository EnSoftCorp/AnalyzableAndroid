public class com.android.exchange.eas.EasProvision extends com.android.exchange.eas.EasOperation
{
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String EAS_2_POLICY_TYPE;
    public static final java.lang.String EAS_12_POLICY_TYPE;
    static final java.lang.String PROVISION_STATUS_OK;
    static final java.lang.String PROVISION_STATUS_PARTIAL;
    static final int PHASE_INITIAL;
    static final int PHASE_ACKNOWLEDGE;
    static final int PHASE_WIPE;
    private static final int RESULT_POLICY_SUPPORTED;
    private static final int RESULT_POLICY_UNSUPPORTED;
    private static final int RESULT_REMOTE_WIPE;
    private com.android.emailcommon.provider.Policy mPolicy;
    private java.lang.String mPolicyKey;
    private java.lang.String mStatus;
    private int mPhase;

    public void <init>(android.content.Context, com.android.emailcommon.provider.Account, com.android.exchange.service.EasServerConnection)
    {
        com.android.exchange.eas.EasProvision r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.exchange.service.EasServerConnection r3;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: com.android.exchange.service.EasServerConnection;

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(android.content.Context,com.android.emailcommon.provider.Account,com.android.exchange.service.EasServerConnection)>(r1, r2, r3);

        r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy> = null;

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey> = null;

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mStatus> = null;

        r0.<com.android.exchange.eas.EasProvision: int mPhase> = 0;

        return;
    }

    public void <init>(com.android.exchange.eas.EasOperation)
    {
        com.android.exchange.eas.EasProvision r0;
        com.android.exchange.eas.EasOperation r1;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r1 := @parameter0: com.android.exchange.eas.EasOperation;

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(com.android.exchange.eas.EasOperation)>(r1);

        r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy> = null;

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey> = null;

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mStatus> = null;

        r0.<com.android.exchange.eas.EasProvision: int mPhase> = 0;

        return;
    }

    private int performInitialRequest()
    {
        com.android.exchange.eas.EasProvision r0;
        int $i0;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r0.<com.android.exchange.eas.EasProvision: int mPhase> = 0;

        $i0 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: int performOperation()>();

        return $i0;
    }

    private void performAckRequestForWipe()
    {
        com.android.exchange.eas.EasProvision r0;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r0.<com.android.exchange.eas.EasProvision: int mPhase> = 2;

        virtualinvoke r0.<com.android.exchange.eas.EasProvision: int performOperation()>();

        return;
    }

    private int performAckRequest(boolean)
    {
        com.android.exchange.eas.EasProvision r0;
        boolean z0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: com.android.exchange.eas.EasProvision;

        z0 := @parameter0: boolean;

        r0.<com.android.exchange.eas.EasProvision: int mPhase> = 1;

        if z0 == 0 goto label1;

        $r1 = "2";

        goto label2;

     label1:
        $r1 = "1";

     label2:
        r0.<com.android.exchange.eas.EasProvision: java.lang.String mStatus> = $r1;

        $i0 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: int performOperation()>();

        return $i0;
    }

    public final com.android.emailcommon.provider.Policy test()
    {
        com.android.exchange.eas.EasProvision r0;
        int i0;
        com.android.emailcommon.provider.Policy $r1, $r2;

        r0 := @this: com.android.exchange.eas.EasProvision;

        i0 = specialinvoke r0.<com.android.exchange.eas.EasProvision: int performInitialRequest()>();

        if i0 != 2 goto label1;

        i0 = specialinvoke r0.<com.android.exchange.eas.EasProvision: int performAckRequest(boolean)>(1);

     label1:
        if i0 != 1 goto label2;

        $r2 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        $r2.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported> = null;

     label2:
        if i0 == 1 goto label3;

        if i0 != 2 goto label4;

     label3:
        $r1 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        goto label5;

     label4:
        $r1 = null;

     label5:
        return $r1;
    }

    private void storeMaxAttachmentSize(int)
    {
        com.android.exchange.eas.EasProvision r0;
        int i0;
        android.content.ContentValues r1, $r2;
        java.lang.Integer $r3;
        android.content.Context $r4;
        android.net.Uri $r5;
        long $l1;

        r0 := @this: com.android.exchange.eas.EasProvision;

        i0 := @parameter0: int;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(1);

        r1 = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("maxAttachmentSize", $r3);

        $r4 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l1 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: long getAccountId()>();

        staticinvoke <com.android.emailcommon.provider.Account: int update(android.content.Context,android.net.Uri,long,android.content.ContentValues)>($r4, $r5, $l1, r1);

        return;
    }

    public final boolean provision()
    {
        com.android.exchange.eas.EasProvision r0;
        int i0, $i2;
        long l1;
        double d0;
        com.android.exchange.eas.EasSettings r1, $r10;
        com.android.emailcommon.provider.Policy $r2, $r3, $r5, $r7, $r11;
        android.content.Context $r4, $r6, $r9, $r13;
        boolean $z0, $z1, $z2;
        java.lang.String $r8;
        byte $b3, $b4;
        java.lang.Object[] $r12;

        r0 := @this: com.android.exchange.eas.EasProvision;

        i0 = specialinvoke r0.<com.android.exchange.eas.EasProvision: int performInitialRequest()>();

        l1 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: long getAccountId()>();

        if i0 >= 0 goto label1;

        return 0;

     label1:
        if i0 != 3 goto label2;

        specialinvoke r0.<com.android.exchange.eas.EasProvision: void performAckRequestForWipe()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Executing remote wipe", $r12);

        $r13 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: void remoteWipe(android.content.Context)>($r13);

        return 0;

     label2:
        $r2 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        if $r2 == null goto label3;

        $r11 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        $r11.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported> = null;

     label3:
        $r4 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r3 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String)>($r4, l1, $r3, null);

        $r6 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r5 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        $z0 = staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: boolean isActive(android.content.Context,com.android.emailcommon.provider.Policy)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        if i0 != 2 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        $i2 = specialinvoke r0.<com.android.exchange.eas.EasProvision: int performAckRequest(boolean)>($z2);

        if $i2 != 2 goto label7;

        return 0;

     label7:
        $r9 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r7 = r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy>;

        $r8 = r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey>;

        staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String)>($r9, l1, $r7, $r8);

        d0 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: double getProtocolVersion()>();

        $b3 = d0 cmpl 12.1;

        if $b3 == 0 goto label8;

        $b4 = d0 cmpl 14.0;

        if $b4 != 0 goto label9;

     label8:
        $r10 = new com.android.exchange.eas.EasSettings;

        specialinvoke $r10.<com.android.exchange.eas.EasSettings: void <init>(com.android.exchange.eas.EasOperation)>(r0);

        r1 = $r10;

        $z1 = virtualinvoke r1.<com.android.exchange.eas.EasSettings: boolean sendDeviceInformation()>();

        if $z1 != 0 goto label9;

     label9:
        return 1;
    }

    protected java.lang.String getCommand()
    {
        com.android.exchange.eas.EasProvision r0;

        r0 := @this: com.android.exchange.eas.EasProvision;

        return "Provision";
    }

    protected static com.android.exchange.adapter.Serializer generateRequestEntitySerializer(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, double) throws java.io.IOException
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4;
        int i0;
        double d0;
        com.android.exchange.adapter.Serializer r5, $r6, $r11, $r14;
        byte $b1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        i0 := @parameter5: int;

        d0 := @parameter6: double;

        $r6 = new com.android.exchange.adapter.Serializer;

        specialinvoke $r6.<com.android.exchange.adapter.Serializer: void <init>()>();

        r5 = $r6;

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(901);

        if i0 != 0 goto label1;

        $b1 = d0 cmpl 14.1;

        if $b1 < 0 goto label1;

        staticinvoke <com.android.exchange.eas.EasProvision: void expandedAddDeviceInformationToSerializer(com.android.exchange.adapter.Serializer,android.content.Context,java.lang.String)>(r5, r0, r1);

     label1:
        if i0 != 2 goto label2;

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(908);

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(907, "1");

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        goto label4;

     label2:
        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(902);

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(903);

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(904, r3);

        if i0 != 1 goto label3;

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(905, r2);

        virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(907, r4);

     label3:
        $r11 = virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        virtualinvoke $r11.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

     label4:
        $r14 = virtualinvoke r5.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        virtualinvoke $r14.<com.android.exchange.adapter.Serializer: void done()>();

        return r5;
    }

    protected org.apache.http.HttpEntity getRequestEntity() throws java.io.IOException
    {
        com.android.exchange.eas.EasProvision r0;
        java.lang.String r1, r2, $r4, $r5;
        double d0;
        com.android.exchange.adapter.Serializer r3;
        int $i0;
        android.content.Context $r6;
        org.apache.http.HttpEntity $r7;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r1 = specialinvoke r0.<com.android.exchange.eas.EasProvision: java.lang.String getPolicyType()>();

        r2 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: java.lang.String getUserAgent()>();

        d0 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: double getProtocolVersion()>();

        $r6 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r5 = r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey>;

        $r4 = r0.<com.android.exchange.eas.EasProvision: java.lang.String mStatus>;

        $i0 = r0.<com.android.exchange.eas.EasProvision: int mPhase>;

        r3 = staticinvoke <com.android.exchange.eas.EasProvision: com.android.exchange.adapter.Serializer generateRequestEntitySerializer(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,double)>($r6, r2, $r5, r1, $r4, $i0, d0);

        $r7 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: org.apache.http.HttpEntity makeEntity(com.android.exchange.adapter.Serializer)>(r3);

        return $r7;
    }

    protected int handleResponse(com.android.exchange.EasResponse) throws java.io.IOException
    {
        com.android.exchange.eas.EasProvision r0;
        com.android.exchange.EasResponse r1;
        com.android.exchange.adapter.ProvisionParser r2, $r3;
        android.content.Context $r4;
        java.io.InputStream $r5;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;
        java.lang.String $r6, $r7, $r9;
        byte $b3, $b4;
        com.android.emailcommon.provider.Policy $r8;
        java.io.IOException $r10;

        r0 := @this: com.android.exchange.eas.EasProvision;

        r1 := @parameter0: com.android.exchange.EasResponse;

        $r3 = new com.android.exchange.adapter.ProvisionParser;

        $r4 = r0.<com.android.exchange.eas.EasProvision: android.content.Context mContext>;

        $r5 = virtualinvoke r1.<com.android.exchange.EasResponse: java.io.InputStream getInputStream()>();

        specialinvoke $r3.<com.android.exchange.adapter.ProvisionParser: void <init>(android.content.Context,java.io.InputStream)>($r4, $r5);

        r2 = $r3;

        $i0 = r0.<com.android.exchange.eas.EasProvision: int mPhase>;

        if $i0 != 2 goto label1;

        return 3;

     label1:
        $z0 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: boolean parse()>();

        if $z0 != 0 goto label2;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("Error while parsing response");

        throw $r10;

     label2:
        $i1 = r0.<com.android.exchange.eas.EasProvision: int mPhase>;

        if $i1 != 0 goto label6;

        $z1 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: boolean getRemoteWipe()>();

        if $z1 == 0 goto label3;

        return 3;

     label3:
        $r8 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: com.android.emailcommon.provider.Policy getPolicy()>();

        r0.<com.android.exchange.eas.EasProvision: com.android.emailcommon.provider.Policy mPolicy> = $r8;

        $r9 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: java.lang.String getSecuritySyncKey()>();

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey> = $r9;

        $z2 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: boolean hasSupportablePolicySet()>();

        if $z2 == 0 goto label4;

        $b4 = 1;

        goto label5;

     label4:
        $b4 = 2;

     label5:
        return $b4;

     label6:
        $i2 = r0.<com.android.exchange.eas.EasProvision: int mPhase>;

        if $i2 != 1 goto label9;

        $r6 = virtualinvoke r2.<com.android.exchange.adapter.ProvisionParser: java.lang.String getSecuritySyncKey()>();

        r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey> = $r6;

        $r7 = r0.<com.android.exchange.eas.EasProvision: java.lang.String mPolicyKey>;

        if $r7 == null goto label7;

        $b3 = 1;

        goto label8;

     label7:
        $b3 = 2;

     label8:
        return $b3;

     label9:
        return 2;
    }

    protected boolean handleProvisionError()
    {
        com.android.exchange.eas.EasProvision r0;

        r0 := @this: com.android.exchange.eas.EasProvision;

        return 0;
    }

    private final java.lang.String getPolicyType()
    {
        com.android.exchange.eas.EasProvision r0;
        double $d0;
        byte $b0;
        java.lang.String $r1;

        r0 := @this: com.android.exchange.eas.EasProvision;

        $d0 = virtualinvoke r0.<com.android.exchange.eas.EasProvision: double getProtocolVersion()>();

        $b0 = $d0 cmpl 12.0;

        if $b0 < 0 goto label1;

        $r1 = "MS-EAS-Provisioning-WBXML";

        goto label2;

     label1:
        $r1 = "MS-WAP-Provisioning-XML";

     label2:
        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.exchange.eas.EasProvision: int RESULT_REMOTE_WIPE> = 3;

        <com.android.exchange.eas.EasProvision: int RESULT_POLICY_UNSUPPORTED> = 2;

        <com.android.exchange.eas.EasProvision: int RESULT_POLICY_SUPPORTED> = 1;

        <com.android.exchange.eas.EasProvision: int PHASE_WIPE> = 2;

        <com.android.exchange.eas.EasProvision: int PHASE_ACKNOWLEDGE> = 1;

        <com.android.exchange.eas.EasProvision: int PHASE_INITIAL> = 0;

        <com.android.exchange.eas.EasProvision: java.lang.String PROVISION_STATUS_PARTIAL> = "2";

        <com.android.exchange.eas.EasProvision: java.lang.String PROVISION_STATUS_OK> = "1";

        <com.android.exchange.eas.EasProvision: java.lang.String EAS_12_POLICY_TYPE> = "MS-EAS-Provisioning-WBXML";

        <com.android.exchange.eas.EasProvision: java.lang.String EAS_2_POLICY_TYPE> = "MS-WAP-Provisioning-XML";

        <com.android.exchange.eas.EasProvision: java.lang.String LOG_TAG> = "Exchange";

        return;
    }
}
