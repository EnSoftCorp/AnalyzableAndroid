public final class com.google.common.io.Resources extends java.lang.Object
{

    private void <init>()
    {
        com.google.common.io.Resources r0;

        r0 := @this: com.google.common.io.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL)
    {
        java.net.URL r0;
        com.google.common.io.Resources$1 $r2;

        r0 := @parameter0: java.net.URL;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r2 = new com.google.common.io.Resources$1;

        specialinvoke $r2.<com.google.common.io.Resources$1: void <init>(java.net.URL)>(r0);

        return $r2;
    }

    public static com.google.common.io.InputSupplier newReaderSupplier(java.net.URL, java.nio.charset.Charset)
    {
        java.net.URL r0;
        java.nio.charset.Charset r1;
        com.google.common.io.InputSupplier $r2, $r3;

        r0 := @parameter0: java.net.URL;

        r1 := @parameter1: java.nio.charset.Charset;

        $r2 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL)>(r0);

        $r3 = staticinvoke <com.google.common.io.CharStreams: com.google.common.io.InputSupplier newReaderSupplier(com.google.common.io.InputSupplier,java.nio.charset.Charset)>($r2, r1);

        return $r3;
    }

    public static byte[] toByteArray(java.net.URL) throws java.io.IOException
    {
        java.net.URL r0;
        com.google.common.io.InputSupplier $r1;
        byte[] $r2;

        r0 := @parameter0: java.net.URL;

        $r1 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL)>(r0);

        $r2 = staticinvoke <com.google.common.io.ByteStreams: byte[] toByteArray(com.google.common.io.InputSupplier)>($r1);

        return $r2;
    }

    public static java.lang.String toString(java.net.URL, java.nio.charset.Charset) throws java.io.IOException
    {
        java.net.URL r0;
        java.nio.charset.Charset r1;
        com.google.common.io.InputSupplier $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.net.URL;

        r1 := @parameter1: java.nio.charset.Charset;

        $r2 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset)>(r0, r1);

        $r3 = staticinvoke <com.google.common.io.CharStreams: java.lang.String toString(com.google.common.io.InputSupplier)>($r2);

        return $r3;
    }

    public static java.lang.Object readLines(java.net.URL, java.nio.charset.Charset, com.google.common.io.LineProcessor) throws java.io.IOException
    {
        java.net.URL r0;
        java.nio.charset.Charset r1;
        com.google.common.io.LineProcessor r2;
        com.google.common.io.InputSupplier $r3;
        java.lang.Object $r4;

        r0 := @parameter0: java.net.URL;

        r1 := @parameter1: java.nio.charset.Charset;

        r2 := @parameter2: com.google.common.io.LineProcessor;

        $r3 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset)>(r0, r1);

        $r4 = staticinvoke <com.google.common.io.CharStreams: java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor)>($r3, r2);

        return $r4;
    }

    public static java.util.List readLines(java.net.URL, java.nio.charset.Charset) throws java.io.IOException
    {
        java.net.URL r0;
        java.nio.charset.Charset r1;
        com.google.common.io.InputSupplier $r2;
        java.util.List $r3;

        r0 := @parameter0: java.net.URL;

        r1 := @parameter1: java.nio.charset.Charset;

        $r2 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset)>(r0, r1);

        $r3 = staticinvoke <com.google.common.io.CharStreams: java.util.List readLines(com.google.common.io.InputSupplier)>($r2);

        return $r3;
    }

    public static void copy(java.net.URL, java.io.OutputStream) throws java.io.IOException
    {
        java.net.URL r0;
        java.io.OutputStream r1;
        com.google.common.io.InputSupplier $r2;

        r0 := @parameter0: java.net.URL;

        r1 := @parameter1: java.io.OutputStream;

        $r2 = staticinvoke <com.google.common.io.Resources: com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL)>(r0);

        staticinvoke <com.google.common.io.ByteStreams: long copy(com.google.common.io.InputSupplier,java.io.OutputStream)>($r2, r1);

        return;
    }

    public static java.net.URL getResource(java.lang.String)
    {
        java.lang.String r0;
        java.net.URL r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        java.lang.Object[] $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r2 = class "com/google/common/io/Resources";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r1 = virtualinvoke $r3.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r0);

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "resource %s not found.", $r4);

        return r1;
    }

    public static java.net.URL getResource(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1, $r4;
        java.net.URL r2;
        java.lang.Object[] $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<java.lang.Class: java.net.URL getResource(java.lang.String)>(r1);

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r3[1] = $r4;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "resource %s relative to %s not found.", $r3);

        return r2;
    }
}
