public class com.android.exchange.adapter.ItemOperationsParser extends com.android.exchange.adapter.Parser
{
    private static final int CHUNK_SIZE;
    private int mStatusCode;
    private final java.io.OutputStream mAttachmentOutputStream;
    private final long mAttachmentSize;
    private final com.android.exchange.eas.EasLoadAttachment$ProgressCallback mCallback;

    public void <init>(java.io.InputStream, java.io.OutputStream, long, com.android.exchange.eas.EasLoadAttachment$ProgressCallback) throws java.io.IOException
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        long l0;
        com.android.exchange.eas.EasLoadAttachment$ProgressCallback r3;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        l0 := @parameter2: long;

        r3 := @parameter3: com.android.exchange.eas.EasLoadAttachment$ProgressCallback;

        specialinvoke r0.<com.android.exchange.adapter.Parser: void <init>(java.io.InputStream)>(r1);

        r0.<com.android.exchange.adapter.ItemOperationsParser: int mStatusCode> = 0;

        r0.<com.android.exchange.adapter.ItemOperationsParser: java.io.OutputStream mAttachmentOutputStream> = r2;

        r0.<com.android.exchange.adapter.ItemOperationsParser: long mAttachmentSize> = l0;

        r0.<com.android.exchange.adapter.ItemOperationsParser: com.android.exchange.eas.EasLoadAttachment$ProgressCallback mCallback> = r3;

        return;
    }

    public int getStatusCode()
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        int $i0;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

        $i0 = r0.<com.android.exchange.adapter.ItemOperationsParser: int mStatusCode>;

        return $i0;
    }

    private void parseProperties() throws java.io.IOException
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        com.android.exchange.adapter.Base64InputStream r1, $r2;
        int $i0, $i1;
        java.io.InputStream $r3;
        com.android.exchange.eas.EasLoadAttachment$ProgressCallback $r4;
        long $l2;
        java.io.OutputStream $r5;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int nextTag(int)>(1291);

        if $i0 == 3 goto label3;

        $i1 = r0.<com.android.exchange.adapter.ItemOperationsParser: int tag>;

        if $i1 != 1292 goto label2;

        $r2 = new com.android.exchange.adapter.Base64InputStream;

        $r3 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: java.io.InputStream getInput()>();

        specialinvoke $r2.<com.android.exchange.adapter.Base64InputStream: void <init>(java.io.InputStream)>($r3);

        r1 = $r2;

        $r5 = r0.<com.android.exchange.adapter.ItemOperationsParser: java.io.OutputStream mAttachmentOutputStream>;

        $l2 = r0.<com.android.exchange.adapter.ItemOperationsParser: long mAttachmentSize>;

        $r4 = r0.<com.android.exchange.adapter.ItemOperationsParser: com.android.exchange.eas.EasLoadAttachment$ProgressCallback mCallback>;

        staticinvoke <com.android.exchange.adapter.ItemOperationsParser: void readChunked(java.io.InputStream,java.io.OutputStream,long,com.android.exchange.eas.EasLoadAttachment$ProgressCallback)>(r1, $r5, $l2, $r4);

        goto label1;

     label2:
        virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void skipTag()>();

        goto label1;

     label3:
        return;
    }

    private void parseFetch() throws java.io.IOException
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        int $i0, $i1;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int nextTag(int)>(1286);

        if $i0 == 3 goto label3;

        $i1 = r0.<com.android.exchange.adapter.ItemOperationsParser: int tag>;

        if $i1 != 1291 goto label2;

        specialinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void parseProperties()>();

        goto label1;

     label2:
        virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void skipTag()>();

        goto label1;

     label3:
        return;
    }

    private void parseResponse() throws java.io.IOException
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        int $i0, $i1;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int nextTag(int)>(1294);

        if $i0 == 3 goto label3;

        $i1 = r0.<com.android.exchange.adapter.ItemOperationsParser: int tag>;

        if $i1 != 1286 goto label2;

        specialinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void parseFetch()>();

        goto label1;

     label2:
        virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void skipTag()>();

        goto label1;

     label3:
        return;
    }

    public boolean parse() throws java.io.IOException
    {
        com.android.exchange.adapter.ItemOperationsParser r0;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.IOException $r1;

        r0 := @this: com.android.exchange.adapter.ItemOperationsParser;

        z0 = 0;

        $i0 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int nextTag(int)>(0);

        if $i0 == 1285 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>()>();

        throw $r1;

     label1:
        $i1 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int nextTag(int)>(0);

        if $i1 == 1 goto label4;

        $i2 = r0.<com.android.exchange.adapter.ItemOperationsParser: int tag>;

        if $i2 != 1293 goto label2;

        $i4 = virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: int getValueInt()>();

        r0.<com.android.exchange.adapter.ItemOperationsParser: int mStatusCode> = $i4;

        goto label1;

     label2:
        $i3 = r0.<com.android.exchange.adapter.ItemOperationsParser: int tag>;

        if $i3 != 1294 goto label3;

        specialinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void parseResponse()>();

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.ItemOperationsParser: void skipTag()>();

        goto label1;

     label4:
        return z0;
    }

    public static void readChunked(java.io.InputStream, java.io.OutputStream, long, com.android.exchange.eas.EasLoadAttachment$ProgressCallback) throws java.io.IOException
    {
        java.io.InputStream r0;
        java.io.OutputStream r1;
        long l0, l2, $l8, $l9, $l10;
        com.android.exchange.eas.EasLoadAttachment$ProgressCallback r2;
        byte[] r3;
        int i1, i3, i4, i5, $i7, $i11;
        byte $b6, $b12;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        l0 := @parameter2: long;

        r2 := @parameter3: com.android.exchange.eas.EasLoadAttachment$ProgressCallback;

        r3 = newarray (byte)[16384];

        i1 = 0;

        l2 = -1L;

        i3 = 0;

     label1:
        i4 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, 16384);

        if i4 >= 0 goto label2;

        goto label4;

     label2:
        i1 = i1 + i4;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i4);

        $b6 = l0 cmp 0L;

        if $b6 <= 0 goto label3;

        $i7 = i1 * 100;

        $l8 = (long) $i7;

        $l10 = $l8 / l0;

        i5 = (int) $l10;

        $l9 = (long) i5;

        $b12 = $l9 cmp l2;

        if $b12 <= 0 goto label3;

        $i11 = i3 + 16384;

        if i1 <= $i11 goto label3;

        virtualinvoke r2.<com.android.exchange.eas.EasLoadAttachment$ProgressCallback: void doCallback(int)>(i5);

        i3 = i1;

        l2 = (long) i5;

     label3:
        goto label1;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <com.android.exchange.adapter.ItemOperationsParser: int CHUNK_SIZE> = 16384;

        return;
    }
}
