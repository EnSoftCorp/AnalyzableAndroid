public class com.android.emailcommon.service.PolicyServiceProxy extends com.android.emailcommon.service.ServiceProxy implements com.android.emailcommon.service.IPolicyService
{
    private static final boolean DEBUG_PROXY;
    private static final java.lang.String TAG;
    private com.android.emailcommon.service.IPolicyService mService;
    private java.lang.Object mReturn;

    public void <init>(android.content.Context)
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        android.content.Context r1;
        android.content.Intent $r2;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: android.content.Intent getIntentForEmailPackage(android.content.Context,java.lang.String)>(r1, "POLICY_INTENT");

        specialinvoke r0.<com.android.emailcommon.service.ServiceProxy: void <init>(android.content.Context,android.content.Intent)>(r1, $r2);

        r0.<com.android.emailcommon.service.PolicyServiceProxy: com.android.emailcommon.service.IPolicyService mService> = null;

        r0.<com.android.emailcommon.service.PolicyServiceProxy: java.lang.Object mReturn> = null;

        return;
    }

    public void onConnected(android.os.IBinder)
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        android.os.IBinder r1;
        com.android.emailcommon.service.IPolicyService $r2;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        r1 := @parameter0: android.os.IBinder;

        $r2 = staticinvoke <com.android.emailcommon.service.IPolicyService$Stub: com.android.emailcommon.service.IPolicyService asInterface(android.os.IBinder)>(r1);

        r0.<com.android.emailcommon.service.PolicyServiceProxy: com.android.emailcommon.service.IPolicyService mService> = $r2;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        return null;
    }

    public boolean isActive(com.android.emailcommon.provider.Policy) throws android.os.RemoteException
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        com.android.emailcommon.provider.Policy r1;
        com.android.emailcommon.service.PolicyServiceProxy$1 $r2;
        java.lang.Object $r3, $r4;
        java.lang.Boolean $r5;
        boolean $z1;
        java.lang.Object[] $r6;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        r1 := @parameter0: com.android.emailcommon.provider.Policy;

        $r2 = new com.android.emailcommon.service.PolicyServiceProxy$1;

        specialinvoke $r2.<com.android.emailcommon.service.PolicyServiceProxy$1: void <init>(com.android.emailcommon.service.PolicyServiceProxy,com.android.emailcommon.provider.Policy)>(r0, r1);

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: boolean setTask(com.android.emailcommon.service.ServiceProxy$ProxyTask,java.lang.String)>($r2, "isActive");

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: void waitForCompletion()>();

        $r3 = r0.<com.android.emailcommon.service.PolicyServiceProxy: java.lang.Object mReturn>;

        if $r3 != null goto label1;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("PolicyServiceProxy", "PolicyService unavailable in isActive; assuming false", $r6);

        return 0;

     label1:
        $r4 = r0.<com.android.emailcommon.service.PolicyServiceProxy: java.lang.Object mReturn>;

        $r5 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public void setAccountPolicy(long, com.android.emailcommon.provider.Policy, java.lang.String) throws android.os.RemoteException
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.emailcommon.provider.Policy;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy2(long,com.android.emailcommon.provider.Policy,java.lang.String,boolean)>(l0, r1, r2, 1);

        return;
    }

    public void setAccountPolicy2(long, com.android.emailcommon.provider.Policy, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;
        boolean z0;
        com.android.emailcommon.service.PolicyServiceProxy$2 $r3;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.emailcommon.provider.Policy;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r3 = new com.android.emailcommon.service.PolicyServiceProxy$2;

        specialinvoke $r3.<com.android.emailcommon.service.PolicyServiceProxy$2: void <init>(com.android.emailcommon.service.PolicyServiceProxy,long,com.android.emailcommon.provider.Policy,java.lang.String,boolean)>(r0, l0, r1, r2, z0);

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: boolean setTask(com.android.emailcommon.service.ServiceProxy$ProxyTask,java.lang.String)>($r3, "setAccountPolicy2");

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: void waitForCompletion()>();

        return;
    }

    public void remoteWipe() throws android.os.RemoteException
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        com.android.emailcommon.service.PolicyServiceProxy$3 $r1;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        $r1 = new com.android.emailcommon.service.PolicyServiceProxy$3;

        specialinvoke $r1.<com.android.emailcommon.service.PolicyServiceProxy$3: void <init>(com.android.emailcommon.service.PolicyServiceProxy)>(r0);

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: boolean setTask(com.android.emailcommon.service.ServiceProxy$ProxyTask,java.lang.String)>($r1, "remoteWipe");

        return;
    }

    public void setAccountHoldFlag(long, boolean) throws android.os.RemoteException
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        long l0;
        boolean z0;
        com.android.emailcommon.service.PolicyServiceProxy$4 $r1;

        r0 := @this: com.android.emailcommon.service.PolicyServiceProxy;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = new com.android.emailcommon.service.PolicyServiceProxy$4;

        specialinvoke $r1.<com.android.emailcommon.service.PolicyServiceProxy$4: void <init>(com.android.emailcommon.service.PolicyServiceProxy,long,boolean)>(r0, l0, z0);

        virtualinvoke r0.<com.android.emailcommon.service.PolicyServiceProxy: boolean setTask(com.android.emailcommon.service.ServiceProxy$ProxyTask,java.lang.String)>($r1, "setAccountHoldFlag");

        return;
    }

    public static boolean isActive(android.content.Context, com.android.emailcommon.provider.Policy)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Policy r1;
        com.android.emailcommon.service.PolicyServiceProxy $r3;
        boolean $z0;
        android.os.RemoteException $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Policy;

     label1:
        $r3 = new com.android.emailcommon.service.PolicyServiceProxy;

        specialinvoke $r3.<com.android.emailcommon.service.PolicyServiceProxy: void <init>(android.content.Context)>(r0);

        $z0 = virtualinvoke $r3.<com.android.emailcommon.service.PolicyServiceProxy: boolean isActive(com.android.emailcommon.provider.Policy)>(r1);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setAccountHoldFlag(android.content.Context, com.android.emailcommon.provider.Account, boolean)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        boolean z0;
        com.android.emailcommon.service.PolicyServiceProxy $r3;
        long $l0;
        android.os.RemoteException $r4;
        java.lang.IllegalStateException $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        z0 := @parameter2: boolean;

     label1:
        $r3 = new com.android.emailcommon.service.PolicyServiceProxy;

        specialinvoke $r3.<com.android.emailcommon.service.PolicyServiceProxy: void <init>(android.content.Context)>(r0);

        $l0 = r1.<com.android.emailcommon.provider.Account: long mId>;

        virtualinvoke $r3.<com.android.emailcommon.service.PolicyServiceProxy: void setAccountHoldFlag(long,boolean)>($l0, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PolicyService transaction failed");

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void remoteWipe(android.content.Context)
    {
        android.content.Context r0;
        com.android.emailcommon.service.PolicyServiceProxy $r2;
        android.os.RemoteException $r3;
        java.lang.IllegalStateException $r4;

        r0 := @parameter0: android.content.Context;

     label1:
        $r2 = new com.android.emailcommon.service.PolicyServiceProxy;

        specialinvoke $r2.<com.android.emailcommon.service.PolicyServiceProxy: void <init>(android.content.Context)>(r0);

        virtualinvoke $r2.<com.android.emailcommon.service.PolicyServiceProxy: void remoteWipe()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PolicyService transaction failed");

        throw $r4;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public static void setAccountPolicy(android.content.Context, long, com.android.emailcommon.provider.Policy, java.lang.String)
    {
        android.content.Context r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.emailcommon.provider.Policy;

        r2 := @parameter3: java.lang.String;

        staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy2(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String,boolean)>(r0, l0, r1, r2, 1);

        return;
    }

    public static void setAccountPolicy2(android.content.Context, long, com.android.emailcommon.provider.Policy, java.lang.String, boolean)
    {
        android.content.Context r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;
        boolean z0;
        com.android.emailcommon.service.PolicyServiceProxy $r4;
        android.os.RemoteException $r5;
        java.lang.IllegalStateException $r6;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.emailcommon.provider.Policy;

        r2 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

     label1:
        $r4 = new com.android.emailcommon.service.PolicyServiceProxy;

        specialinvoke $r4.<com.android.emailcommon.service.PolicyServiceProxy: void <init>(android.content.Context)>(r0);

        virtualinvoke $r4.<com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy2(long,com.android.emailcommon.provider.Policy,java.lang.String,boolean)>(l0, r1, r2, z0);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("PolicyService transaction failed");

        throw $r6;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static java.lang.Object access$002(com.android.emailcommon.service.PolicyServiceProxy, java.lang.Object)
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        java.lang.Object r1;

        r0 := @parameter0: com.android.emailcommon.service.PolicyServiceProxy;

        r1 := @parameter1: java.lang.Object;

        r0.<com.android.emailcommon.service.PolicyServiceProxy: java.lang.Object mReturn> = r1;

        return r1;
    }

    static com.android.emailcommon.service.IPolicyService access$100(com.android.emailcommon.service.PolicyServiceProxy)
    {
        com.android.emailcommon.service.PolicyServiceProxy r0;
        com.android.emailcommon.service.IPolicyService $r1;

        r0 := @parameter0: com.android.emailcommon.service.PolicyServiceProxy;

        $r1 = r0.<com.android.emailcommon.service.PolicyServiceProxy: com.android.emailcommon.service.IPolicyService mService>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.emailcommon.service.PolicyServiceProxy: java.lang.String TAG> = "PolicyServiceProxy";

        <com.android.emailcommon.service.PolicyServiceProxy: boolean DEBUG_PROXY> = 0;

        return;
    }
}
