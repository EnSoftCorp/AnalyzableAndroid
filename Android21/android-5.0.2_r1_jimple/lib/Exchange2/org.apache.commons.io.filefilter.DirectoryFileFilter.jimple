public class org.apache.commons.io.filefilter.DirectoryFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    public static final org.apache.commons.io.filefilter.IOFileFilter DIRECTORY;
    public static final org.apache.commons.io.filefilter.IOFileFilter INSTANCE;

    protected void <init>()
    {
        org.apache.commons.io.filefilter.DirectoryFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.DirectoryFileFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.DirectoryFileFilter r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.DirectoryFileFilter;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.commons.io.filefilter.DirectoryFileFilter $r0;
        org.apache.commons.io.filefilter.IOFileFilter $r1;

        $r0 = new org.apache.commons.io.filefilter.DirectoryFileFilter;

        specialinvoke $r0.<org.apache.commons.io.filefilter.DirectoryFileFilter: void <init>()>();

        <org.apache.commons.io.filefilter.DirectoryFileFilter: org.apache.commons.io.filefilter.IOFileFilter DIRECTORY> = $r0;

        $r1 = <org.apache.commons.io.filefilter.DirectoryFileFilter: org.apache.commons.io.filefilter.IOFileFilter DIRECTORY>;

        <org.apache.commons.io.filefilter.DirectoryFileFilter: org.apache.commons.io.filefilter.IOFileFilter INSTANCE> = $r1;

        return;
    }
}
