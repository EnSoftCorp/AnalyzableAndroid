public class org.apache.james.mime4j.util.SimpleTempStorage extends org.apache.james.mime4j.util.TempStorage
{
    private static org.apache.james.mime4j.Log log;
    private org.apache.james.mime4j.util.TempPath rootPath;
    private java.util.Random random;

    public void <init>()
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0;
        java.util.Random $r1;
        org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.util.SimpleTempStorage;

        specialinvoke r0.<org.apache.james.mime4j.util.TempStorage: void <init>()>();

        r0.<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath rootPath> = null;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        r0.<org.apache.james.mime4j.util.SimpleTempStorage: java.util.Random random> = $r1;

        $r2 = new org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath;

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $r2.<org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath: void <init>(org.apache.james.mime4j.util.SimpleTempStorage,java.lang.String,org.apache.james.mime4j.util.SimpleTempStorage$1)>(r0, $r3, null);

        r0.<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath rootPath> = $r2;

        return;
    }

    private org.apache.james.mime4j.util.TempPath createTempPath(org.apache.james.mime4j.util.TempPath, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0;
        org.apache.james.mime4j.util.TempPath r1;
        java.lang.String r2, $r5, $r9, $r12, $r14, $r18, $r22;
        int i0;
        long l1, $l2;
        java.util.Random $r3;
        java.io.File $r4, r24;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r13, $r15, $r16, $r19, $r20, $r21;
        boolean $z0, $z1, $z2;
        org.apache.james.mime4j.Log $r10;
        java.io.IOException $r17;
        org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath $r23;

        r0 := @this: org.apache.james.mime4j.util.SimpleTempStorage;

        r1 := @parameter0: org.apache.james.mime4j.util.TempPath;

        r2 := @parameter1: java.lang.String;

        if r2 != null goto label1;

        r2 = "";

     label1:
        i0 = 1000;

     label2:
        $r3 = r0.<org.apache.james.mime4j.util.SimpleTempStorage: java.util.Random random>;

        $l2 = virtualinvoke $r3.<java.util.Random: long nextLong()>();

        l1 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $r4 = new java.io.File;

        $r5 = interfaceinvoke r1.<org.apache.james.mime4j.util.TempPath: java.lang.String getAbsolutePath()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r9);

        r24 = $r4;

        i0 = i0 + -1;

        $z1 = virtualinvoke r24.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        if i0 > 0 goto label2;

     label3:
        $z0 = virtualinvoke r24.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label4;

        $z2 = virtualinvoke r24.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label5;

     label4:
        $r10 = <org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to mkdirs on ");

        $r12 = virtualinvoke r24.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.james.mime4j.Log: void error(java.lang.Object)>($r14);

        $r17 = new java.io.IOException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating dir \'");

        $r18 = virtualinvoke r24.<java.io.File: java.lang.String getAbsolutePath()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' failed.");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r17;

     label5:
        $r23 = new org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath;

        specialinvoke $r23.<org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempPath: void <init>(org.apache.james.mime4j.util.SimpleTempStorage,java.io.File,org.apache.james.mime4j.util.SimpleTempStorage$1)>(r0, r24, null);

        return $r23;
    }

    private org.apache.james.mime4j.util.TempFile createTempFile(org.apache.james.mime4j.util.TempPath, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0, r4;
        org.apache.james.mime4j.util.TempPath r1;
        java.lang.String r2, r3, $r9, $r14, $r20, $r22;
        int i0;
        long l1, $l2;
        java.lang.Throwable r5, $r23;
        java.util.Random $r7;
        java.io.File $r8, r26;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r18, $r21, $r24, $r25;
        boolean $z0, $z1;
        org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempFile $r15;
        java.io.IOException $r16, $r17, $r19;

        r0 := @this: org.apache.james.mime4j.util.SimpleTempStorage;

        r1 := @parameter0: org.apache.james.mime4j.util.TempPath;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r2 != null goto label01;

        r2 = "";

     label01:
        if r3 != null goto label02;

        r3 = ".tmp";

     label02:
        i0 = 1000;

        r4 = r0;

        entermonitor r0;

     label03:
        $r7 = r0.<org.apache.james.mime4j.util.SimpleTempStorage: java.util.Random random>;

        $l2 = virtualinvoke $r7.<java.util.Random: long nextLong()>();

        l1 = staticinvoke <java.lang.Math: long abs(long)>($l2);

        $r8 = new java.io.File;

        $r9 = interfaceinvoke r1.<org.apache.james.mime4j.util.TempPath: java.lang.String getAbsolutePath()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r9, $r14);

        r26 = $r8;

        i0 = i0 + -1;

        $z0 = virtualinvoke r26.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label04;

        if i0 > 0 goto label03;

     label04:
        $z1 = virtualinvoke r26.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label05;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Creating temp file failed: Unable to find unique file name");

        throw $r17;

     label05:
        virtualinvoke r26.<java.io.File: boolean createNewFile()>();

     label06:
        goto label08;

     label07:
        $r16 := @caughtexception;

        $r19 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating dir \'");

        $r20 = virtualinvoke r26.<java.io.File: java.lang.String getAbsolutePath()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' failed.");

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r23 := @caughtexception;

        r5 = $r23;

        exitmonitor r4;

     label11:
        throw r5;

     label12:
        $r15 = new org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempFile;

        specialinvoke $r15.<org.apache.james.mime4j.util.SimpleTempStorage$SimpleTempFile: void <init>(org.apache.james.mime4j.util.SimpleTempStorage,java.io.File,org.apache.james.mime4j.util.SimpleTempStorage$1)>(r0, r26, null);

        return $r15;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public org.apache.james.mime4j.util.TempPath getRootTempPath()
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0;
        org.apache.james.mime4j.util.TempPath $r1;

        r0 := @this: org.apache.james.mime4j.util.SimpleTempStorage;

        $r1 = r0.<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath rootPath>;

        return $r1;
    }

    static org.apache.james.mime4j.util.TempFile access$300(org.apache.james.mime4j.util.SimpleTempStorage, org.apache.james.mime4j.util.TempPath, java.lang.String, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0;
        org.apache.james.mime4j.util.TempPath r1;
        java.lang.String r2, r3;
        org.apache.james.mime4j.util.TempFile $r4;

        r0 := @parameter0: org.apache.james.mime4j.util.SimpleTempStorage;

        r1 := @parameter1: org.apache.james.mime4j.util.TempPath;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempFile createTempFile(org.apache.james.mime4j.util.TempPath,java.lang.String,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static org.apache.james.mime4j.util.TempPath access$400(org.apache.james.mime4j.util.SimpleTempStorage, org.apache.james.mime4j.util.TempPath, java.lang.String) throws java.io.IOException
    {
        org.apache.james.mime4j.util.SimpleTempStorage r0;
        org.apache.james.mime4j.util.TempPath r1, $r3;
        java.lang.String r2;

        r0 := @parameter0: org.apache.james.mime4j.util.SimpleTempStorage;

        r1 := @parameter1: org.apache.james.mime4j.util.TempPath;

        r2 := @parameter2: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.util.TempPath createTempPath(org.apache.james.mime4j.util.TempPath,java.lang.String)>(r1, r2);

        return $r3;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.Log $r0;

        $r0 = staticinvoke <org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)>(class "org/apache/james/mime4j/util/SimpleTempStorage");

        <org.apache.james.mime4j.util.SimpleTempStorage: org.apache.james.mime4j.Log log> = $r0;

        return;
    }
}
