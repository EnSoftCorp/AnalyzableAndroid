public class com.android.exchange.service.PingTask extends android.os.AsyncTask
{
    private final com.android.exchange.eas.EasPing mOperation;
    private final com.android.exchange.service.PingSyncSynchronizer mPingSyncSynchronizer;
    private static final java.lang.String TAG;
    static final boolean $assertionsDisabled;

    public void <init>(android.content.Context, com.android.emailcommon.provider.Account, android.accounts.Account, com.android.exchange.service.PingSyncSynchronizer)
    {
        com.android.exchange.service.PingTask r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        android.accounts.Account r3;
        com.android.exchange.service.PingSyncSynchronizer r4;
        boolean $z0;
        com.android.exchange.eas.EasPing $r5;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.exchange.service.PingTask;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: android.accounts.Account;

        r4 := @parameter3: com.android.exchange.service.PingSyncSynchronizer;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        $z0 = <com.android.exchange.service.PingTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r4 != null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r5 = new com.android.exchange.eas.EasPing;

        specialinvoke $r5.<com.android.exchange.eas.EasPing: void <init>(android.content.Context,com.android.emailcommon.provider.Account,android.accounts.Account)>(r1, r2, r3);

        r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation> = $r5;

        r0.<com.android.exchange.service.PingTask: com.android.exchange.service.PingSyncSynchronizer mPingSyncSynchronizer> = r4;

        return;
    }

    public void start()
    {
        com.android.exchange.service.PingTask r0;
        java.lang.Void[] $r1;
        java.util.concurrent.Executor $r2;

        r0 := @this: com.android.exchange.service.PingTask;

        $r2 = <com.android.exchange.service.PingTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r1 = newarray (java.lang.Void)[0];

        virtualinvoke r0.<com.android.exchange.service.PingTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r2, $r1);

        return;
    }

    public void stop()
    {
        com.android.exchange.service.PingTask r0;
        com.android.exchange.eas.EasPing $r1;

        r0 := @this: com.android.exchange.service.PingTask;

        $r1 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        virtualinvoke $r1.<com.android.exchange.eas.EasPing: void abort()>();

        return;
    }

    public void restart()
    {
        com.android.exchange.service.PingTask r0;
        com.android.exchange.eas.EasPing $r1;

        r0 := @this: com.android.exchange.service.PingTask;

        $r1 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        virtualinvoke $r1.<com.android.exchange.eas.EasPing: void restart()>();

        return;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.exchange.service.PingTask r0;
        java.lang.Void[] r1;
        int i0;
        java.lang.Exception r2, $r14;
        java.lang.Object[] $r3, $r7, $r13;
        com.android.exchange.eas.EasPing $r4, $r6, $r9, $r12, $r15;
        long $l1, $l4, $l6;
        java.lang.Long $r5, $r16;
        boolean $z0;
        java.lang.Integer $r8;
        com.android.exchange.service.PingSyncSynchronizer $r10;
        android.accounts.Account $r11;

        r0 := @this: com.android.exchange.service.PingTask;

        r1 := @parameter0: java.lang.Void[];

        $r3 = newarray (java.lang.Object)[1];

        $r4 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $l1 = virtualinvoke $r4.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3[0] = $r5;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Ping task starting for %d", $r3);

     label1:
        $r6 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        i0 = virtualinvoke $r6.<com.android.exchange.eas.EasPing: int doPing()>();

        $z0 = staticinvoke <com.android.exchange.adapter.PingParser: boolean shouldPingAgain(int)>(i0);

        if $z0 != 0 goto label1;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r2 = $r14;

        $r13 = newarray (java.lang.Object)[1];

        $r15 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $l6 = virtualinvoke $r15.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r13[0] = $r16;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>("Exchange", r2, "Ping exception for account %d", $r13);

        i0 = -4;

     label4:
        $r7 = newarray (java.lang.Object)[1];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Ping task ending with status: %d", $r7);

        $r10 = r0.<com.android.exchange.service.PingTask: com.android.exchange.service.PingSyncSynchronizer mPingSyncSynchronizer>;

        $r9 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $l4 = virtualinvoke $r9.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r12 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $r11 = virtualinvoke $r12.<com.android.exchange.eas.EasPing: android.accounts.Account getAmAccount()>();

        virtualinvoke $r10.<com.android.exchange.service.PingSyncSynchronizer: void pingEnd(long,android.accounts.Account)>($l4, $r11);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void onCancelled(java.lang.Void)
    {
        com.android.exchange.service.PingTask r0;
        java.lang.Void r1;
        java.lang.Object[] $r2;
        com.android.exchange.eas.EasPing $r3, $r5, $r7;
        long $l0, $l2;
        java.lang.Long $r4;
        com.android.exchange.service.PingSyncSynchronizer $r6;
        android.accounts.Account $r8;

        r0 := @this: com.android.exchange.service.PingTask;

        r1 := @parameter0: java.lang.Void;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $l0 = virtualinvoke $r3.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r2[0] = $r4;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Ping cancelled for %d", $r2);

        $r6 = r0.<com.android.exchange.service.PingTask: com.android.exchange.service.PingSyncSynchronizer mPingSyncSynchronizer>;

        $r5 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $l2 = virtualinvoke $r5.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r7 = r0.<com.android.exchange.service.PingTask: com.android.exchange.eas.EasPing mOperation>;

        $r8 = virtualinvoke $r7.<com.android.exchange.eas.EasPing: android.accounts.Account getAmAccount()>();

        virtualinvoke $r6.<com.android.exchange.service.PingSyncSynchronizer: void pingEnd(long,android.accounts.Account)>($l2, $r8);

        return;
    }

    protected volatile void onCancelled(java.lang.Object)
    {
        com.android.exchange.service.PingTask r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: com.android.exchange.service.PingTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<com.android.exchange.service.PingTask: void onCancelled(java.lang.Void)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.exchange.service.PingTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.exchange.service.PingTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.exchange.service.PingTask: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.exchange.service.PingTask: java.lang.String TAG> = "Exchange";

        $r0 = class "com/android/exchange/service/PingTask";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.exchange.service.PingTask: boolean $assertionsDisabled> = $z1;

        return;
    }
}
