public class com.android.exchange.utility.CalendarUtilities extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final int SECONDS;
    static final int MINUTES;
    static final int HOURS;
    static final long DAYS;
    static final int STANDARD_DST_PRECISION;
    static final int LENIENT_DST_PRECISION;
    private static final java.lang.String SYNC_VERSION;
    static final int MSFT_LONG_SIZE;
    static final int MSFT_WCHAR_SIZE;
    static final int MSFT_WORD_SIZE;
    static final int MSFT_SYSTEMTIME_YEAR;
    static final int MSFT_SYSTEMTIME_MONTH;
    static final int MSFT_SYSTEMTIME_DAY_OF_WEEK;
    static final int MSFT_SYSTEMTIME_DAY;
    static final int MSFT_SYSTEMTIME_HOUR;
    static final int MSFT_SYSTEMTIME_MINUTE;
    static final int MSFT_SYSTEMTIME_SIZE;
    static final int MSFT_TIME_ZONE_STRING_SIZE;
    static final int MSFT_TIME_ZONE_BIAS_OFFSET;
    static final int MSFT_TIME_ZONE_STANDARD_NAME_OFFSET;
    static final int MSFT_TIME_ZONE_STANDARD_DATE_OFFSET;
    static final int MSFT_TIME_ZONE_STANDARD_BIAS_OFFSET;
    static final int MSFT_TIME_ZONE_DAYLIGHT_NAME_OFFSET;
    static final int MSFT_TIME_ZONE_DAYLIGHT_DATE_OFFSET;
    static final int MSFT_TIME_ZONE_DAYLIGHT_BIAS_OFFSET;
    static final int MSFT_TIME_ZONE_SIZE;
    private static java.util.HashMap sTimeZoneCache;
    private static java.util.HashMap sTziStringCache;
    private static final java.util.TimeZone UTC_TIMEZONE;
    private static final java.lang.String ALLOWED_REMINDER_TYPES;
    private static final java.lang.String ALLOWED_ATTENDEE_TYPES;
    private static final java.lang.String ALLOWED_AVAILABILITIES;
    static final java.lang.String[] sTypeToFreq;
    static final java.lang.String[] sDayTokens;
    static final java.lang.String[] sTwoCharacterNumbers;
    protected static final int EAS_SUNDAY;
    protected static final int EAS_MONDAY;
    protected static final int EAS_TUESDAY;
    protected static final int EAS_WEDNESDAY;
    protected static final int EAS_THURSDAY;
    protected static final int EAS_FRIDAY;
    protected static final int EAS_SATURDAY;
    protected static final int EAS_WEEKDAYS;
    protected static final int EAS_WEEKENDS;
    static final int sCurrentYear;
    static final java.util.TimeZone sGmtTimeZone;
    private static final java.lang.String ICALENDAR_ATTENDEE;
    static final java.lang.String ICALENDAR_ATTENDEE_CANCEL;
    static final java.lang.String ICALENDAR_ATTENDEE_INVITE;
    static final java.lang.String ICALENDAR_ATTENDEE_ACCEPT;
    static final java.lang.String ICALENDAR_ATTENDEE_DECLINE;
    static final java.lang.String ICALENDAR_ATTENDEE_TENTATIVE;
    public static final int BUSY_STATUS_FREE;
    public static final int BUSY_STATUS_TENTATIVE;
    public static final int BUSY_STATUS_BUSY;
    public static final int BUSY_STATUS_OUT_OF_OFFICE;
    public static final int RESPONSE_TYPE_NONE;
    public static final int RESPONSE_TYPE_ORGANIZER;
    public static final int RESPONSE_TYPE_TENTATIVE;
    public static final int RESPONSE_TYPE_ACCEPTED;
    public static final int RESPONSE_TYPE_DECLINED;
    public static final int RESPONSE_TYPE_NOT_RESPONDED;

    public void <init>()
    {
        com.android.exchange.utility.CalendarUtilities r0;

        r0 := @this: com.android.exchange.utility.CalendarUtilities;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int getLong(byte[], int)
    {
        byte[] r0;
        int i0, $i4, $i8, $i9, $i12, $i13, $i14, i15, i16, i17;
        byte $b1, $b2, $b6, $b10;
        short $s3, $s5, $s7, $s11;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i15 = i0 + 1;

        $b1 = r0[i0];

        $s5 = $b1 & 255;

        i16 = i15 + 1;

        $b2 = r0[i15];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        $i9 = $s5 | $i4;

        i17 = i16 + 1;

        $b6 = r0[i16];

        $s7 = $b6 & 255;

        $i8 = $s7 << 16;

        $i12 = $i9 | $i8;

        $b10 = r0[i17];

        $s11 = $b10 & 255;

        $i13 = $s11 << 24;

        $i14 = $i12 | $i13;

        return $i14;
    }

    static void setLong(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, i13, i14, i15;
        byte $b3, $b6, $b9, $b12;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i13 = i0 + 1;

        $i2 = i1 & 255;

        $b3 = (byte) $i2;

        r0[i0] = $b3;

        i14 = i13 + 1;

        $i4 = i1 >> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        r0[i13] = $b6;

        i15 = i14 + 1;

        $i7 = i1 >> 16;

        $i8 = $i7 & 255;

        $b9 = (byte) $i8;

        r0[i14] = $b9;

        $i10 = i1 >> 24;

        $i11 = $i10 & 255;

        $b12 = (byte) $i11;

        r0[i15] = $b12;

        return;
    }

    static int getWord(byte[], int)
    {
        byte[] r0;
        int i0, $i4, $i6, i7;
        byte $b1, $b2;
        short $s3, $s5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i7 = i0 + 1;

        $b1 = r0[i0];

        $s5 = $b1 & 255;

        $b2 = r0[i7];

        $s3 = $b2 & 255;

        $i4 = $s3 << 8;

        $i6 = $s5 | $i4;

        return $i6;
    }

    static void setWord(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i4, $i5, i7;
        byte $b3, $b6;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i7 = i0 + 1;

        $i2 = i1 & 255;

        $b3 = (byte) $i2;

        r0[i0] = $b3;

        $i4 = i1 >> 8;

        $i5 = $i4 & 255;

        $b6 = (byte) $i5;

        r0[i7] = $b6;

        return;
    }

    static java.lang.String getString(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i4;
        java.lang.StringBuilder r1, $r2;
        byte b3;
        java.lang.String $r3;
        char $c5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $i4 = i0 + i2;

        b3 = r0[$i4];

        if b3 != 0 goto label2;

        goto label3;

     label2:
        $c5 = (char) b3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void clearTimeZoneCache()
    {
        java.util.HashMap $r0;

        $r0 = <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTimeZoneCache>;

        virtualinvoke $r0.<java.util.HashMap: void clear()>();

        return;
    }

    static void putRuleIntoTimeZoneInformation(byte[], int, com.android.exchange.utility.CalendarUtilities$RRule, int, int)
    {
        byte[] r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.exchange.utility.CalendarUtilities$RRule r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.exchange.utility.CalendarUtilities$RRule;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $i4 = i0 + 2;

        $i3 = r1.<com.android.exchange.utility.CalendarUtilities$RRule: int month>;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i4, $i3);

        $i7 = i0 + 4;

        $i5 = r1.<com.android.exchange.utility.CalendarUtilities$RRule: int dayOfWeek>;

        $i6 = $i5 - 1;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i7, $i6);

        $i10 = i0 + 6;

        $i8 = r1.<com.android.exchange.utility.CalendarUtilities$RRule: int week>;

        if $i8 >= 0 goto label1;

        $i9 = 5;

        goto label2;

     label1:
        $i9 = r1.<com.android.exchange.utility.CalendarUtilities$RRule: int week>;

     label2:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i10, $i9);

        $i11 = i0 + 8;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i11, i1);

        $i12 = i0 + 10;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i12, i2);

        return;
    }

    static void putTransitionMillisIntoSystemTime(byte[], int, long)
    {
        byte[] r0;
        int i0, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        long l1, $l3;
        java.util.GregorianCalendar r1, $r2;
        java.util.TimeZone $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = new java.util.GregorianCalendar;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);

        r1 = $r2;

        $l3 = l1 + 30000L;

        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l3);

        $i4 = i0 + 2;

        $i5 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(2);

        $i6 = $i5 + 1;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i4, $i6);

        $i7 = i0 + 4;

        $i8 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(7);

        $i9 = $i8 - 1;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i7, $i9);

        i2 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(8);

        $i11 = i0 + 6;

        if i2 >= 0 goto label1;

        $i14 = 5;

        goto label2;

     label1:
        $i14 = i2;

     label2:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i11, $i14);

        $i10 = i0 + 8;

        $i13 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)>(r1);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i10, $i13);

        $i12 = i0 + 10;

        $i15 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)>(r1);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setWord(byte[],int,int)>(r0, $i12, $i15);

        return;
    }

    static com.android.exchange.utility.CalendarUtilities$TimeZoneDate getTimeZoneDateFromSystemTime(byte[], int)
    {
        byte[] r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17;
        com.android.exchange.utility.CalendarUtilities$TimeZoneDate r1, $r2;
        java.lang.String $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = new com.android.exchange.utility.CalendarUtilities$TimeZoneDate;

        specialinvoke $r2.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: void <init>()>();

        r1 = $r2;

        $i4 = i0 + 0;

        i1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i4);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: java.lang.String year> = $r3;

        $i5 = i0 + 2;

        i16 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i5);

        if i16 != 0 goto label1;

        return null;

     label1:
        $i6 = i16 - 1;

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int month> = $i6;

        $i7 = i0 + 4;

        $i8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i7);

        $i9 = $i8 + 1;

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int dayOfWeek> = $i9;

        $i10 = i0 + 6;

        i17 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i10);

        if i17 != 5 goto label2;

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int day> = -1;

        goto label3;

     label2:
        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int day> = i17;

     label3:
        $i11 = i0 + 8;

        i2 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i11);

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int hour> = i2;

        $i12 = i0 + 10;

        i3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getWord(byte[],int)>(r0, $i12);

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int minute> = i3;

        $i13 = i2 * 3600000;

        $i14 = i3 * 60000;

        $i15 = $i13 + $i14;

        r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int time> = $i15;

        return r1;
    }

    static long getMillisAtTimeZoneDateTransition(java.util.TimeZone, com.android.exchange.utility.CalendarUtilities$TimeZoneDate)
    {
        java.util.TimeZone r0;
        com.android.exchange.utility.CalendarUtilities$TimeZoneDate r1;
        java.util.GregorianCalendar r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        long $l6;

        r0 := @parameter0: java.util.TimeZone;

        r1 := @parameter1: com.android.exchange.utility.CalendarUtilities$TimeZoneDate;

        $r3 = new java.util.GregorianCalendar;

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r2 = $r3;

        $i0 = <com.android.exchange.utility.CalendarUtilities: int sCurrentYear>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(1, $i0);

        $i1 = r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int month>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(2, $i1);

        $i2 = r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int dayOfWeek>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(7, $i2);

        $i3 = r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int day>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(8, $i3);

        $i4 = r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int hour>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(11, $i4);

        $i5 = r1.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int minute>;

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(12, $i5);

        virtualinvoke r2.<java.util.GregorianCalendar: void set(int,int)>(13, 0);

        $l6 = virtualinvoke r2.<java.util.GregorianCalendar: long getTimeInMillis()>();

        return $l6;
    }

    static java.util.GregorianCalendar findTransitionDate(java.util.TimeZone, long, long, boolean)
    {
        java.util.TimeZone r0;
        long l0, l1, l2, l3, $l4, $l7, $l8;
        boolean z0, z1;
        byte $b5, $b6;
        java.util.GregorianCalendar $r1, r4;
        java.util.Date $r2, r3;

        r0 := @parameter0: java.util.TimeZone;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        z0 := @parameter3: boolean;

        l2 = l1;

     label1:
        $l4 = l1 - l0;

        $b5 = $l4 cmp 60000L;

        if $b5 <= 0 goto label4;

        $l8 = l0 + l1;

        $l7 = $l8 / 2L;

        l3 = $l7 + 1L;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>(long)>(l3);

        r3 = $r2;

        z1 = virtualinvoke r0.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r3);

        if z1 == z0 goto label2;

        l1 = l3;

        goto label3;

     label2:
        l0 = l3;

     label3:
        goto label1;

     label4:
        $b6 = l1 cmp l2;

        if $b6 != 0 goto label5;

        return null;

     label5:
        $r1 = new java.util.GregorianCalendar;

        specialinvoke $r1.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r4 = $r1;

        virtualinvoke r4.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        return r4;
    }

    public static java.lang.String timeZoneToTziString(java.util.TimeZone)
    {
        java.util.TimeZone r0;
        java.lang.String r1, $r8, $r11, r13;
        java.util.HashMap $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.Object[] $r12;

        r0 := @parameter0: java.util.TimeZone;

        $r2 = <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTziStringCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.lang.String) $r3;

        if r1 == null goto label2;

        $z0 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TZI string for ");

        $r8 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getDisplayName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found in cache.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r11, $r12);

     label1:
        return r1;

     label2:
        r13 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String timeZoneToTziStringImpl(java.util.TimeZone)>(r0);

        $r4 = <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTziStringCache>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r13);

        return r13;
    }

    static com.android.exchange.utility.CalendarUtilities$RRule inferRRuleFromCalendars(java.util.GregorianCalendar[])
    {
        java.util.GregorianCalendar[] r0;
        java.util.GregorianCalendar r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, z1;
        com.android.exchange.utility.CalendarUtilities$RRule $r3, $r4;

        r0 := @parameter0: java.util.GregorianCalendar[];

        r1 = r0[0];

        if r1 != null goto label01;

        return null;

     label01:
        i0 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(2);

        i1 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(5);

        i2 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(7);

        i3 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(8);

        i4 = virtualinvoke r1.<java.util.GregorianCalendar: int getActualMaximum(int)>(8);

        z0 = 0;

        z1 = 0;

        i5 = 1;

     label02:
        $i8 = lengthof r0;

        if i5 >= $i8 goto label13;

        r2 = r0[i5];

        if r2 != null goto label03;

        return null;

     label03:
        $i10 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(2);

        if $i10 == i0 goto label04;

        return null;

     label04:
        $i13 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(7);

        if i2 != $i13 goto label09;

        if z0 == 0 goto label05;

        return null;

     label05:
        z1 = 1;

        i6 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(8);

        if i3 == i6 goto label08;

        if i3 < 0 goto label06;

        if i3 != i4 goto label07;

     label06:
        i7 = virtualinvoke r2.<java.util.GregorianCalendar: int getActualMaximum(int)>(8);

        if i6 != i7 goto label07;

        i3 = -1;

        goto label12;

     label07:
        return null;

     label08:
        goto label12;

     label09:
        $i12 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(5);

        if i1 != $i12 goto label11;

        if z1 == 0 goto label10;

        return null;

     label10:
        z0 = 1;

        goto label12;

     label11:
        return null;

     label12:
        i5 = i5 + 1;

        goto label02;

     label13:
        if z0 == 0 goto label14;

        $r4 = new com.android.exchange.utility.CalendarUtilities$RRule;

        $i11 = i0 + 1;

        specialinvoke $r4.<com.android.exchange.utility.CalendarUtilities$RRule: void <init>(int,int)>($i11, i1);

        return $r4;

     label14:
        $r3 = new com.android.exchange.utility.CalendarUtilities$RRule;

        $i9 = i0 + 1;

        specialinvoke $r3.<com.android.exchange.utility.CalendarUtilities$RRule: void <init>(int,int,int)>($i9, i2, i3);

        return $r3;
    }

    static java.lang.String utcOffsetString(int)
    {
        int i0, i1, i2;
        java.lang.StringBuilder r0, $r1;
        java.lang.String $r5;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0 = $r1;

        i1 = i0 / 60;

        if i1 >= 0 goto label1;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        i1 = 0 - i1;

        goto label2;

     label1:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

     label2:
        i2 = i0 % 60;

        if i1 >= 10 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        if i2 >= 10 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static boolean getDSTCalendars(java.util.TimeZone, java.util.GregorianCalendar[], java.util.GregorianCalendar[])
    {
        java.util.TimeZone r0;
        java.util.GregorianCalendar[] r1, r2;
        int i0, i1, $i4, $i5, $i6;
        java.util.GregorianCalendar r3, $r5, r7, r8;
        long l2, l3, $l7;
        java.util.Date r4, $r6;
        boolean z0, $z1;

        r0 := @parameter0: java.util.TimeZone;

        r1 := @parameter1: java.util.GregorianCalendar[];

        r2 := @parameter2: java.util.GregorianCalendar[];

        i0 = lengthof r1;

        $i4 = lengthof r2;

        if $i4 == i0 goto label01;

        return 0;

     label01:
        i1 = 0;

     label02:
        if i1 >= i0 goto label11;

        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r3 = $r5;

        $i5 = <com.android.exchange.utility.CalendarUtilities: int sCurrentYear>;

        $i6 = $i5 + i1;

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>($i6, 0, 1, 0, 0, 0);

        l2 = virtualinvoke r3.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $l7 = l2 + 31536000000L;

        l3 = $l7 + 21600000L;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>(long)>(l2);

        r4 = $r6;

        z0 = virtualinvoke r0.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r4);

        r7 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.GregorianCalendar findTransitionDate(java.util.TimeZone,long,long,boolean)>(r0, l2, l3, z0);

        if r7 != null goto label03;

        return 0;

     label03:
        if z0 == 0 goto label04;

        r2[i1] = r7;

        goto label05;

     label04:
        r1[i1] = r7;

     label05:
        if z0 != 0 goto label06;

        $z1 = 1;

        goto label07;

     label06:
        $z1 = 0;

     label07:
        r8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.GregorianCalendar findTransitionDate(java.util.TimeZone,long,long,boolean)>(r0, l2, l3, $z1);

        if r8 != null goto label08;

        return 0;

     label08:
        if z0 == 0 goto label09;

        r1[i1] = r8;

        goto label10;

     label09:
        r2[i1] = r8;

     label10:
        i1 = i1 + 1;

        goto label02;

     label11:
        return 1;
    }

    private static void writeNoDST(com.android.exchange.utility.SimpleIcsWriter, java.util.TimeZone, java.lang.String) throws java.io.IOException
    {
        com.android.exchange.utility.SimpleIcsWriter r0;
        java.util.TimeZone r1;
        java.lang.String r2, $r3;

        r0 := @parameter0: com.android.exchange.utility.SimpleIcsWriter;

        r1 := @parameter1: java.util.TimeZone;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "STANDARD");

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETFROM", r2);

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETTO", r2);

        $r3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long)>(0L);

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DTSTART", $r3);

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "STANDARD");

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "VTIMEZONE");

        return;
    }

    static void timeZoneToVTimezone(java.util.TimeZone, com.android.exchange.utility.SimpleIcsWriter) throws java.io.IOException
    {
        java.util.TimeZone r0;
        com.android.exchange.utility.SimpleIcsWriter r1;
        int i0, i2, $i3, $i4, $i5, $i6, i11;
        java.lang.String r2, r7, $r8, $r9, $r11, $r14, $r15, $r16, $r17, $r19;
        byte b1;
        java.util.GregorianCalendar[] r3, r4;
        com.android.exchange.utility.CalendarUtilities$RRule r5, r6;
        boolean z0, $z1, $z2, $z3;
        java.util.GregorianCalendar $r10, $r12, $r13, $r18;
        long $l7, $l8, $l9, $l10;

        r0 := @parameter0: java.util.TimeZone;

        r1 := @parameter1: com.android.exchange.utility.SimpleIcsWriter;

        $i3 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>();

        i0 = $i3 / 60000;

        r2 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String utcOffsetString(int)>(i0);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "VTIMEZONE");

        $r8 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZID", $r8);

        $r9 = virtualinvoke r0.<java.util.TimeZone: java.lang.String getDisplayName()>();

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("X-LIC-LOCATION", $r9);

        $z2 = virtualinvoke r0.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z2 != 0 goto label01;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void writeNoDST(com.android.exchange.utility.SimpleIcsWriter,java.util.TimeZone,java.lang.String)>(r1, r0, r2);

        return;

     label01:
        b1 = 3;

        r3 = newarray (java.util.GregorianCalendar)[b1];

        r4 = newarray (java.util.GregorianCalendar)[b1];

        $z1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: boolean getDSTCalendars(java.util.TimeZone,java.util.GregorianCalendar[],java.util.GregorianCalendar[])>(r0, r3, r4);

        if $z1 != 0 goto label02;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void writeNoDST(com.android.exchange.utility.SimpleIcsWriter,java.util.TimeZone,java.lang.String)>(r1, r0, r2);

        return;

     label02:
        r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$RRule inferRRuleFromCalendars(java.util.GregorianCalendar[])>(r3);

        r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$RRule inferRRuleFromCalendars(java.util.GregorianCalendar[])>(r4);

        $i5 = virtualinvoke r0.<java.util.TimeZone: int getDSTSavings()>();

        $i4 = $i5 / 60000;

        $i6 = i0 + $i4;

        r7 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String utcOffsetString(int)>($i6);

        if r5 == null goto label03;

        if r6 == null goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z0 = $z3;

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "DAYLIGHT");

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETFROM", r2);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETTO", r7);

        $r10 = r3[0];

        $l7 = virtualinvoke $r10.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $r11 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String transitionMillisToVCalendarTime(long,java.util.TimeZone,boolean)>($l7, r0, 1);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DTSTART", $r11);

        if z0 == 0 goto label05;

        $r19 = virtualinvoke r5.<com.android.exchange.utility.CalendarUtilities$RRule: java.lang.String toString()>();

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("RRULE", $r19);

        goto label07;

     label05:
        i2 = 1;

     label06:
        if i2 >= b1 goto label07;

        $r18 = r3[i2];

        $l10 = virtualinvoke $r18.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $r17 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String transitionMillisToVCalendarTime(long,java.util.TimeZone,boolean)>($l10, r0, 1);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("RDATE", $r17);

        i2 = i2 + 1;

        goto label06;

     label07:
        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "DAYLIGHT");

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "STANDARD");

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETFROM", r7);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TZOFFSETTO", r2);

        $r12 = r4[0];

        $l8 = virtualinvoke $r12.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $r14 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String transitionMillisToVCalendarTime(long,java.util.TimeZone,boolean)>($l8, r0, 0);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DTSTART", $r14);

        if z0 == 0 goto label08;

        $r15 = virtualinvoke r6.<com.android.exchange.utility.CalendarUtilities$RRule: java.lang.String toString()>();

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("RRULE", $r15);

        goto label10;

     label08:
        i11 = 1;

     label09:
        if i11 >= b1 goto label10;

        $r13 = r4[i11];

        $l9 = virtualinvoke $r13.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $r16 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String transitionMillisToVCalendarTime(long,java.util.TimeZone,boolean)>($l9, r0, 1);

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("RDATE", $r16);

        i11 = i11 + 1;

        goto label09;

     label10:
        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "STANDARD");

        virtualinvoke r1.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "VTIMEZONE");

        return;
    }

    static long findNextTransition(long, java.util.GregorianCalendar[])
    {
        long l0, l3;
        java.util.GregorianCalendar[] r0, r1;
        int i1, i2;
        java.util.GregorianCalendar r2;
        byte $b4;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.GregorianCalendar[];

        r1 = r0;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r2 = r1[i2];

        l3 = virtualinvoke r2.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $b4 = l3 cmp l0;

        if $b4 <= 0 goto label2;

        return l3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0L;
    }

    static java.lang.String timeZoneToTziStringImpl(java.util.TimeZone)
    {
        java.util.TimeZone r0;
        java.lang.String r1, $r7;
        byte[] r2, r12;
        int i0, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, i15, i16;
        java.util.GregorianCalendar[] r3, r4;
        com.android.exchange.utility.CalendarUtilities$RRule r5, r6;
        long l1, l2, l3;
        boolean $z0, $z1;
        byte $b7, $b9;
        java.util.GregorianCalendar $r8, $r9, $r10, $r11;

        r0 := @parameter0: java.util.TimeZone;

        r2 = newarray (byte)[172];

        $i4 = virtualinvoke r0.<java.util.TimeZone: int getRawOffset()>();

        i0 = neg $i4;

        i15 = i0 / 60000;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setLong(byte[],int,int)>(r2, 0, i15);

        $z0 = virtualinvoke r0.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z0 == 0 goto label3;

        r3 = newarray (java.util.GregorianCalendar)[3];

        r4 = newarray (java.util.GregorianCalendar)[3];

        $z1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: boolean getDSTCalendars(java.util.TimeZone,java.util.GregorianCalendar[],java.util.GregorianCalendar[])>(r0, r3, r4);

        if $z1 == 0 goto label2;

        r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$RRule inferRRuleFromCalendars(java.util.GregorianCalendar[])>(r3);

        r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$RRule inferRRuleFromCalendars(java.util.GregorianCalendar[])>(r4);

        if r5 == null goto label1;

        $i8 = r5.<com.android.exchange.utility.CalendarUtilities$RRule: int type>;

        if $i8 != 1 goto label1;

        if r6 == null goto label1;

        $i10 = r6.<com.android.exchange.utility.CalendarUtilities$RRule: int type>;

        if $i10 != 1 goto label1;

        $r8 = r4[0];

        $i12 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)>($r8);

        $r9 = r4[0];

        $i11 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)>($r9);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void putRuleIntoTimeZoneInformation(byte[],int,com.android.exchange.utility.CalendarUtilities$RRule,int,int)>(r2, 68, r6, $i12, $i11);

        $r11 = r3[0];

        $i13 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)>($r11);

        $r10 = r3[0];

        $i14 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)>($r10);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void putRuleIntoTimeZoneInformation(byte[],int,com.android.exchange.utility.CalendarUtilities$RRule,int,int)>(r2, 152, r5, $i13, $i14);

        goto label2;

     label1:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long findNextTransition(long,java.util.GregorianCalendar[])>(l1, r4);

        l3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long findNextTransition(long,java.util.GregorianCalendar[])>(l1, r3);

        $b7 = l2 cmp 0L;

        if $b7 == 0 goto label2;

        $b9 = l3 cmp 0L;

        if $b9 == 0 goto label2;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void putTransitionMillisIntoSystemTime(byte[],int,long)>(r2, 68, l2);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void putTransitionMillisIntoSystemTime(byte[],int,long)>(r2, 152, l3);

     label2:
        i16 = virtualinvoke r0.<java.util.TimeZone: int getDSTSavings()>();

        $i6 = neg i16;

        $i5 = $i6 / 60000;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void setLong(byte[],int,int)>(r2, 168, $i5);

     label3:
        r12 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>(r2, 2);

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(byte[])>(r12);

        r1 = $r7;

        return r1;
    }

    static java.util.TimeZone tziStringToTimeZone(java.lang.String, int)
    {
        java.lang.String r0, $r9, $r14, $r16;
        int i0;
        java.util.TimeZone r1;
        java.util.HashMap $r2, $r4;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r13;
        java.lang.Object[] $r10, $r15;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTimeZoneCache>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (java.util.TimeZone) $r3;

        if r1 == null goto label1;

        $z0 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z0 == 0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Using cached TimeZone ");

        $r14 = virtualinvoke r1.<java.util.TimeZone: java.lang.String getID()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r16, $r15);

        goto label3;

     label1:
        r1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZoneImpl(java.lang.String,int)>(r0, i0);

        if r1 != null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeZone not found using default: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r9, $r10);

        r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

     label2:
        $r4 = <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTimeZoneCache>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

     label3:
        return r1;
    }

    public static java.util.TimeZone tziStringToTimeZone(java.lang.String)
    {
        java.lang.String r0;
        java.util.TimeZone $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZone(java.lang.String,int)>(r0, 60000);

        return $r1;
    }

    private static boolean hasTimeZoneId(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r2;
        java.lang.String r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    static java.util.TimeZone tziStringToTimeZoneImpl(java.lang.String, int)
    {
        java.lang.String r0, r6, r7, $r10, $r13, $r17, $r18, $r20, $r25, $r29, $r33, $r34, $r36, r45;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i23, i27;
        byte[] r1;
        java.lang.String[] r2, r5, r40;
        com.android.exchange.utility.CalendarUtilities$TimeZoneDate r3, r39;
        java.util.TimeZone r4, r38, r41, r44, r46;
        long l5, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l24, l26, l28;
        java.util.Date r8, r9, $r21, $r22, $r23, $r24, r42, r43;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r16, $r26, $r28, $r30, $r31, $r32, $r35;
        java.lang.Object[] $r19, $r27, $r37;
        byte $b25;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r0, 0);

        $i7 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getLong(byte[],int)>(r1, 0);

        $i6 = -1 * $i7;

        i1 = $i6 * 60000;

        r2 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs(int)>(i1);

        $i8 = lengthof r2;

        if $i8 <= 0 goto label25;

        r3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$TimeZoneDate getTimeZoneDateFromSystemTime(byte[],int)>(r1, 68);

        if r3 != null goto label07;

        r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $z6 = virtualinvoke r4.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z6 != 0 goto label02;

        $r34 = virtualinvoke r4.<java.util.TimeZone: java.lang.String getID()>();

        $z9 = staticinvoke <com.android.exchange.utility.CalendarUtilities: boolean hasTimeZoneId(java.lang.String[],java.lang.String)>(r2, $r34);

        if $z9 == 0 goto label02;

        $z10 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z10 == 0 goto label01;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeZone without DST found to be default: ");

        $r33 = virtualinvoke r4.<java.util.TimeZone: java.lang.String getID()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r37 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r36, $r37);

     label01:
        return r4;

     label02:
        r5 = r2;

        i2 = lengthof r5;

        i3 = 0;

     label03:
        if i3 >= i2 goto label06;

        r6 = r5[i3];

        r38 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r6);

        $z7 = virtualinvoke r38.<java.util.TimeZone: boolean useDaylightTime()>();

        if $z7 != 0 goto label05;

        $z8 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z8 == 0 goto label04;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeZone without DST found by offset: ");

        $r29 = virtualinvoke r38.<java.util.TimeZone: java.lang.String getID()>();

        $r26 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r25, $r27);

     label04:
        return r38;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        return null;

     label07:
        r39 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.exchange.utility.CalendarUtilities$TimeZoneDate getTimeZoneDateFromSystemTime(byte[],int)>(r1, 152);

        $i9 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getLong(byte[],int)>(r1, 168);

        $i11 = -1 * $i9;

        $i10 = $i11 * 60000;

        l26 = (long) $i10;

        r40 = r2;

        i27 = lengthof r40;

        i4 = 0;

     label08:
        if i4 >= i27 goto label15;

        r7 = r40[i4];

        r41 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r7);

        l5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getMillisAtTimeZoneDateTransition(java.util.TimeZone,com.android.exchange.utility.CalendarUtilities$TimeZoneDate)>(r41, r39);

        $r21 = new java.util.Date;

        $l14 = (long) i0;

        $l17 = l5 - $l14;

        specialinvoke $r21.<java.util.Date: void <init>(long)>($l17);

        r9 = $r21;

        $r22 = new java.util.Date;

        $l16 = (long) i0;

        $l15 = l5 + $l16;

        specialinvoke $r22.<java.util.Date: void <init>(long)>($l15);

        r8 = $r22;

        $z3 = virtualinvoke r41.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r9);

        if $z3 == 0 goto label09;

        goto label14;

     label09:
        $z2 = virtualinvoke r41.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r8);

        if $z2 != 0 goto label10;

        goto label14;

     label10:
        l28 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getMillisAtTimeZoneDateTransition(java.util.TimeZone,com.android.exchange.utility.CalendarUtilities$TimeZoneDate)>(r41, r3);

        $r23 = new java.util.Date;

        $l20 = (long) i0;

        $l21 = l26 + $l20;

        $l22 = l28 - $l21;

        specialinvoke $r23.<java.util.Date: void <init>(long)>($l22);

        r42 = $r23;

        $r24 = new java.util.Date;

        $l18 = (long) i0;

        $l19 = l28 + $l18;

        specialinvoke $r24.<java.util.Date: void <init>(long)>($l19);

        r43 = $r24;

        $z4 = virtualinvoke r41.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r42);

        if $z4 != 0 goto label11;

        goto label14;

     label11:
        $z5 = virtualinvoke r41.<java.util.TimeZone: boolean inDaylightTime(java.util.Date)>(r43);

        if $z5 == 0 goto label12;

        goto label14;

     label12:
        $i23 = virtualinvoke r41.<java.util.TimeZone: int getDSTSavings()>();

        $l24 = (long) $i23;

        $b25 = l26 cmp $l24;

        if $b25 == 0 goto label13;

        goto label14;

     label13:
        return r41;

     label14:
        i4 = i4 + 1;

        goto label08;

     label15:
        z11 = 0;

        z12 = 0;

        $i12 = r39.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int hour>;

        $i13 = r3.<com.android.exchange.utility.CalendarUtilities$TimeZoneDate: int hour>;

        if $i12 == $i13 goto label16;

        if i0 != 60000 goto label16;

        r44 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZoneImpl(java.lang.String,int)>(r0, 14400000);

        z11 = 1;

        goto label20;

     label16:
        r45 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String getString(byte[],int,int)>(r1, 4, 32);

        $z0 = virtualinvoke r45.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label19;

        r46 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r45);

        if r46 == null goto label17;

        r44 = r46;

        z12 = 1;

        goto label18;

     label17:
        $r20 = r2[0];

        r44 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r20);

     label18:
        goto label20;

     label19:
        $r10 = r2[0];

        r44 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r10);

     label20:
        $z1 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z1 == 0 goto label24;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No TimeZone with correct DST settings; using ");

        if z12 == 0 goto label21;

        $r17 = "name";

        goto label23;

     label21:
        if z11 == 0 goto label22;

        $r17 = "lenient";

        goto label23;

     label22:
        $r17 = "first";

     label23:
        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke r44.<java.util.TimeZone: java.lang.String getID()>();

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r18, $r19);

     label24:
        return r44;

     label25:
        return null;
    }

    public static java.lang.String convertEmailDateTimeToCalendarDateTime(java.lang.String)
    {
        java.lang.String r0, $r2, $r4, $r6, $r8, $r10, $r13;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11, $r12;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(5, 7);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(8, 13);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(14, 16);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(17, 19);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    static java.lang.String formatTwo(int)
    {
        int i0;
        java.lang.String $r0, $r2;
        java.lang.String[] $r1;

        i0 := @parameter0: int;

        if i0 > 12 goto label1;

        $r1 = <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sTwoCharacterNumbers>;

        $r2 = $r1[i0];

        return $r2;

     label1:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static java.lang.String millisToEasDateTime(long)
    {
        long l0;
        java.util.TimeZone $r0;
        java.lang.String $r1;

        l0 := @parameter0: long;

        $r0 = <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone sGmtTimeZone>;

        $r1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long,java.util.TimeZone,boolean)>(l0, $r0, 1);

        return $r1;
    }

    public static java.lang.String calendarToBirthdayString(java.util.GregorianCalendar)
    {
        java.util.GregorianCalendar r0;
        java.lang.StringBuilder r1, $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r8, $r10;

        r0 := @parameter0: java.util.GregorianCalendar;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $i0 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i1 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(2);

        $i2 = $i1 + 1;

        $r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $i3 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(5);

        $r8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static java.lang.String millisToEasDateTime(long, java.util.TimeZone, boolean)
    {
        long l0;
        java.util.TimeZone r0, $r19;
        boolean z0;
        java.lang.StringBuilder r1, $r3;
        java.util.GregorianCalendar r2, $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r6, $r8, $r9, $r13, $r14, $r17;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        z0 := @parameter2: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = new java.util.GregorianCalendar;

        specialinvoke $r4.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r2 = $r4;

        virtualinvoke r2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $i2 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(2);

        $i3 = $i2 + 1;

        $r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $i4 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(5);

        $r8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        if z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84);

        $i5 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(11);

        $r13 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $i6 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(12);

        $r14 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $i7 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(13);

        $r17 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i7);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone sGmtTimeZone>;

        if r0 != $r19 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

     label1:
        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    static int getTrueTransitionMinute(java.util.GregorianCalendar)
    {
        java.util.GregorianCalendar r0;
        int i0;

        r0 := @parameter0: java.util.GregorianCalendar;

        i0 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(12);

        if i0 != 59 goto label1;

        i0 = 0;

     label1:
        return i0;
    }

    static int getTrueTransitionHour(java.util.GregorianCalendar)
    {
        java.util.GregorianCalendar r0;
        int i0, i1;

        r0 := @parameter0: java.util.GregorianCalendar;

        i0 = virtualinvoke r0.<java.util.GregorianCalendar: int get(int)>(11);

        i1 = i0 + 1;

        if i1 != 24 goto label1;

        i1 = 0;

     label1:
        return i1;
    }

    static java.lang.String transitionMillisToVCalendarTime(long, java.util.TimeZone, boolean)
    {
        long l0;
        java.util.TimeZone r0;
        boolean z0;
        java.lang.StringBuilder r1, $r3;
        java.util.GregorianCalendar r2, $r4;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r6, $r8, $r11, $r14, $r16, $r17;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        z0 := @parameter2: boolean;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        $r4 = new java.util.GregorianCalendar;

        specialinvoke $r4.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r2 = $r4;

        virtualinvoke r2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        $i1 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $i2 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(2);

        $i3 = $i2 + 1;

        $r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $i4 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(5);

        $r8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84);

        $i5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionHour(java.util.GregorianCalendar)>(r2);

        $r11 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $i6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int getTrueTransitionMinute(java.util.GregorianCalendar)>(r2);

        $r14 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>(0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public static long getUtcAllDayCalendarTime(long, java.util.TimeZone)
    {
        long l0, $l1;
        java.util.TimeZone r0, $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        $r1 = <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone UTC_TIMEZONE>;

        $l1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long transposeAllDayTime(long,java.util.TimeZone,java.util.TimeZone)>(l0, r0, $r1);

        return $l1;
    }

    public static long getLocalAllDayCalendarTime(long, java.util.TimeZone)
    {
        long l0, $l1;
        java.util.TimeZone r0, $r1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        $r1 = <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone UTC_TIMEZONE>;

        $l1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long transposeAllDayTime(long,java.util.TimeZone,java.util.TimeZone)>(l0, $r1, r0);

        return $l1;
    }

    private static long transposeAllDayTime(long, java.util.TimeZone, java.util.TimeZone)
    {
        long l0, $l4;
        java.util.TimeZone r0, r1;
        java.util.GregorianCalendar r2, r3, $r4, $r5;
        int $i1, $i2, $i3;

        l0 := @parameter0: long;

        r0 := @parameter1: java.util.TimeZone;

        r1 := @parameter2: java.util.TimeZone;

        $r4 = new java.util.GregorianCalendar;

        specialinvoke $r4.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r0);

        r2 = $r4;

        virtualinvoke r2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r1);

        r3 = $r5;

        $i1 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(1);

        $i2 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(2);

        $i3 = virtualinvoke r2.<java.util.GregorianCalendar: int get(int)>(5);

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int,int,int,int,int)>($i1, $i2, $i3, 0, 0, 0);

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int)>(14, 0);

        $l4 = virtualinvoke r3.<java.util.GregorianCalendar: long getTimeInMillis()>();

        return $l4;
    }

    static void addByDay(java.lang.StringBuilder, int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1, i2, $i3, $i4;
        boolean z0;
        java.lang.String[] $r2;
        java.lang.String $r3;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYDAY=");

        z0 = 0;

        i2 = 0;

     label1:
        if i2 >= 7 goto label7;

        $i3 = i0 & 1;

        if $i3 != 1 goto label6;

        if z0 == 0 goto label2;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        if i1 <= 0 goto label5;

        if i1 != 5 goto label3;

        $i4 = -1;

        goto label4;

     label3:
        $i4 = i1;

     label4:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

     label5:
        $r2 = <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sDayTokens>;

        $r3 = $r2[i2];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        z0 = 1;

     label6:
        i0 = i0 >> 1;

        i2 = i2 + 1;

        goto label1;

     label7:
        return;
    }

    static void addBySetpos(java.lang.StringBuilder, int, int)
    {
        java.lang.StringBuilder r0;
        int i0, i1;
        java.io.Serializable $r2;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.StringBuilder,int,int)>(r0, i0, 0);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYSETPOS=");

        if i1 != 5 goto label1;

        $r2 = "-1";

        goto label2;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        return;
    }

    static void addByMonthDay(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder r0, $r1, $r2, $r3;
        int i0;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        if i0 != 127 goto label1;

        i0 = -1;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYMONTHDAY=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        return;
    }

    static java.lang.String generateEasDayOfWeek(java.lang.String)
    {
        java.lang.String r0, r2, $r3;
        int i0, i1, i2, i3, $i4;
        java.lang.String[] r1;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = 1;

        r1 = <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sDayTokens>;

        i2 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        r2 = r1[i3];

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r2);

        if $i4 < 0 goto label2;

        i0 = i0 | i1;

     label2:
        i1 = i1 << 1;

        i3 = i3 + 1;

        goto label1;

     label3:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r3;
    }

    static java.lang.String tokenFromRrule(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, i1, i2, $i4, $i5, $i6, i7;
        char c3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if i0 >= 0 goto label1;

        return null;

     label1:
        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i7 = i0 + $i4;

        i2 = i7;

     label2:
        $i5 = i2;

        i2 = i2 + 1;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if c3 == 59 goto label3;

        if i2 != i1 goto label2;

     label3:
        if i2 != i1 goto label4;

        i2 = i2 + 1;

     label4:
        $i6 = i2 - 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i7, $i6);

        return $r2;
    }

    static java.lang.String recurrenceUntilToEasUntil(java.lang.String) throws java.text.ParseException
    {
        java.lang.String r0, $r7, $r9, $r11;
        java.util.GregorianCalendar r1, $r3;
        java.lang.StringBuilder r2, $r5;
        java.util.TimeZone $r4;
        long $l0;
        int $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.util.GregorianCalendar;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        specialinvoke $r3.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r4);

        r1 = $r3;

        $l0 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        $i1 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $i2 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(2);

        $i3 = $i2 + 1;

        $r7 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i3);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i4 = virtualinvoke r1.<java.util.GregorianCalendar: int get(int)>(5);

        $r9 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String formatTwo(int)>($i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T000000Z");

        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static void addCountIntervalAndUntil(java.lang.String, com.android.exchange.adapter.Serializer) throws java.io.IOException
    {
        java.lang.String r0, r2, r3, r4, $r6;
        com.android.exchange.adapter.Serializer r1;
        java.text.ParseException r5, $r10;
        java.lang.Object[] $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.exchange.adapter.Serializer;

        r2 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "COUNT=");

        if r2 == null goto label1;

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(286, r2);

     label1:
        r3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "INTERVAL=");

        if r3 == null goto label2;

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(287, r3);

     label2:
        r4 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "UNTIL=");

        if r4 == null goto label6;

     label3:
        $r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String recurrenceUntilToEasUntil(java.lang.String)>(r4);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(285, $r6);

     label4:
        goto label6;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r5;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_RECURRENCE_UNTIL tag.", $r11);

     label6:
        return;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    private static void addByDay(java.lang.String, com.android.exchange.adapter.Serializer) throws java.io.IOException
    {
        java.lang.String r0, r2, $r3, $r5;
        com.android.exchange.adapter.Serializer r1;
        char c0;
        int i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.exchange.adapter.Serializer;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c0 != 45 goto label1;

        i1 = 5;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(2);

        goto label2;

     label1:
        i1 = c0 - 48;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(290, $r3);

        $r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String generateEasDayOfWeek(java.lang.String)>(r2);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(288, $r5);

        return;
    }

    private static void addByDaySetpos(java.lang.String, java.lang.String, com.android.exchange.adapter.Serializer) throws java.io.IOException
    {
        java.lang.String r0, r1, $r3, $r5;
        com.android.exchange.adapter.Serializer r2;
        char c0;
        int i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: com.android.exchange.adapter.Serializer;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c0 != 45 goto label1;

        i1 = 5;

        goto label2;

     label1:
        i1 = c0 - 48;

     label2:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(290, $r3);

        $r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String generateEasDayOfWeek(java.lang.String)>(r0);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(288, $r5);

        return;
    }

    public static void recurrenceFromRrule(java.lang.String, long, java.util.TimeZone, com.android.exchange.adapter.Serializer) throws java.io.IOException
    {
        java.lang.String r0, r3, r4, r5, $r13, $r32, $r35, $r38, r44, r45, r46, r47, r48, r49;
        long l0;
        java.util.TimeZone r1;
        com.android.exchange.adapter.Serializer r2;
        char c1;
        java.util.GregorianCalendar r6, $r12, $r15, r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r36, $r37, $r42;
        java.lang.Object[] $r43;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.TimeZone;

        r2 := @parameter3: com.android.exchange.adapter.Serializer;

        $z0 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z0 == 0 goto label01;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RRULE: ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r38, $r43);

     label01:
        r3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "FREQ=");

        if r3 == null goto label20;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("DAILY");

        if $z1 == 0 goto label02;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "0");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        goto label20;

     label02:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("WEEKLY");

        if $z2 == 0 goto label05;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "1");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        r4 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYDAY=");

        if r4 == null goto label04;

        $r32 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String generateEasDayOfWeek(java.lang.String)>(r4);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(288, $r32);

        $z6 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("-1");

        if $z6 == 0 goto label03;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(290, "5");

        goto label04;

     label03:
        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(0);

        if c1 < 49 goto label04;

        if c1 > 52 goto label04;

        $r35 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(290, $r35);

     label04:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        goto label20;

     label05:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("MONTHLY");

        if $z3 == 0 goto label13;

        r44 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYMONTHDAY=");

        if r44 == null goto label08;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        $z5 = virtualinvoke r44.<java.lang.String: boolean equals(java.lang.Object)>("-1");

        if $z5 == 0 goto label06;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "3");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(288, "127");

        goto label07;

     label06:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "2");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(289, r44);

     label07:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        goto label12;

     label08:
        r45 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYDAY=");

        r5 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYSETPOS=");

        if r45 == null goto label11;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "3");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        if r5 == null goto label09;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDaySetpos(java.lang.String,java.lang.String,com.android.exchange.adapter.Serializer)>(r45, r5, r2);

        goto label10;

     label09:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.String,com.android.exchange.adapter.Serializer)>(r45, r2);

     label10:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        goto label12;

     label11:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        $r15 = new java.util.GregorianCalendar;

        specialinvoke $r15.<java.util.GregorianCalendar: void <init>()>();

        r6 = $r15;

        virtualinvoke r6.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r6.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1);

        $i5 = virtualinvoke r6.<java.util.GregorianCalendar: int get(int)>(5);

        r46 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, "2");

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(289, r46);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

     label12:
        goto label20;

     label13:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("YEARLY");

        if $z4 == 0 goto label20;

        r47 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYMONTH=");

        r48 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYMONTHDAY=");

        r49 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String tokenFromRrule(java.lang.String,java.lang.String)>(r0, "BYDAY=");

        if r47 != null goto label14;

        if r48 != null goto label14;

        $r12 = new java.util.GregorianCalendar;

        specialinvoke $r12.<java.util.GregorianCalendar: void <init>()>();

        r50 = $r12;

        virtualinvoke r50.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l0);

        virtualinvoke r50.<java.util.GregorianCalendar: void setTimeZone(java.util.TimeZone)>(r1);

        $i3 = virtualinvoke r50.<java.util.GregorianCalendar: int get(int)>(2);

        $i2 = $i3 + 1;

        r47 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $i4 = virtualinvoke r50.<java.util.GregorianCalendar: int get(int)>(5);

        r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

     label14:
        if r47 == null goto label20;

        if r48 != null goto label15;

        if r49 == null goto label20;

     label15:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(283);

        if r49 != null goto label16;

        $r13 = "5";

        goto label17;

     label16:
        $r13 = "6";

     label17:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(284, $r13);

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addCountIntervalAndUntil(java.lang.String,com.android.exchange.adapter.Serializer)>(r0, r2);

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(291, r47);

        if r48 == null goto label18;

        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(289, r48);

        goto label19;

     label18:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.String,com.android.exchange.adapter.Serializer)>(r49, r2);

     label19:
        virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

     label20:
        return;
    }

    public static java.lang.String rruleFromRecurrence(int, int, int, int, int, int, int, java.lang.String)
    {
        int i0, i1, i2, i3, i4, i5, i6, $i7;
        java.lang.String r0, r1, $r9, $r11, $r13, $r14, $r19, $r27, $r32, $r34, $r42;
        java.lang.StringBuilder r2, $r5, $r6, $r7, $r8, $r10, $r12, $r15, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r31, $r33, $r35, $r36, $r37, $r38, $r39;
        java.lang.String[] $r3, $r4;
        boolean $z0, $z1;
        java.lang.Object[] $r16;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        i6 := @parameter6: int;

        r0 := @parameter7: java.lang.String;

        if i0 < 0 goto label01;

        $r3 = <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sTypeToFreq>;

        $i7 = lengthof $r3;

        if i0 < $i7 goto label02;

     label01:
        return null;

     label02:
        $r4 = <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sTypeToFreq>;

        r1 = $r4[i0];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label03;

        return null;

     label03:
        $r5 = new java.lang.StringBuilder;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FREQ=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        r2 = $r5;

        if i1 <= 0 goto label04;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";COUNT=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

     label04:
        if i2 <= 0 goto label05;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";INTERVAL=");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

     label05:
        tableswitch(i0)
        {
            case 0: goto label06;
            case 1: goto label06;
            case 2: goto label07;
            case 3: goto label08;
            case 4: goto label18;
            case 5: goto label13;
            case 6: goto label15;
            default: goto label18;
        };

     label06:
        if i3 <= 0 goto label18;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.StringBuilder,int,int)>(r2, i3, i5);

        goto label18;

     label07:
        if i4 <= 0 goto label18;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByMonthDay(java.lang.StringBuilder,int)>(r2, i4);

        goto label18;

     label08:
        if i3 != 127 goto label09;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYMONTHDAY=-1");

        goto label18;

     label09:
        if i5 == 5 goto label10;

        if i5 != 1 goto label12;

     label10:
        if i3 == 62 goto label11;

        if i3 != 65 goto label12;

     label11:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addBySetpos(java.lang.StringBuilder,int,int)>(r2, i3, i5);

        goto label18;

     label12:
        if i3 <= 0 goto label18;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.StringBuilder,int,int)>(r2, i3, i5);

        goto label18;

     label13:
        if i4 <= 0 goto label14;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByMonthDay(java.lang.StringBuilder,int)>(r2, i4);

     label14:
        if i6 <= 0 goto label18;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYMONTH=");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        goto label18;

     label15:
        if i3 <= 0 goto label16;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByDay(java.lang.StringBuilder,int,int)>(r2, i3, i5);

     label16:
        if i4 <= 0 goto label17;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addByMonthDay(java.lang.StringBuilder,int)>(r2, i4);

     label17:
        if i6 <= 0 goto label18;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYMONTH=");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i6);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        goto label18;

     label18:
        if r0 == null goto label19;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";UNTIL=");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

     label19:
        $z1 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z1 == 0 goto label20;

        $r13 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created rrule: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r13, $r14, $r16);

     label20:
        $r11 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public static long createCalendar(android.content.Context, android.content.ContentResolver, com.android.emailcommon.provider.Account, com.android.emailcommon.provider.Mailbox)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.Mailbox r3;
        android.content.ContentValues r4, $r7;
        int i0;
        android.net.Uri r5, $r21, $r23;
        java.lang.String r6, $r8, $r9, $r11, $r18, $r19, $r22;
        java.lang.Integer $r10, $r12, $r13, $r14, $r15, $r17, $r20;
        long $l1, $l2;
        com.android.emailcommon.service.AccountServiceProxy $r16;
        java.util.List $r24;
        java.lang.Object $r25;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ContentResolver;

        r2 := @parameter2: com.android.emailcommon.provider.Account;

        r3 := @parameter3: com.android.emailcommon.provider.Mailbox;

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r4 = $r7;

        $r8 = r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mDisplayName>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("calendar_displayName", $r8);

        $r9 = r2.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("account_name", $r9);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("account_type", "com.android.exchange");

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("sync_events", $r10);

        $r11 = r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_sync_id", $r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("visible", $r12);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("canOrganizerRespond", $r13);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("canModifyTimeZone", $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("maxReminders", $r15);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("allowedReminders", "0,1");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("allowedAttendeeTypes", "0,1,2");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("allowedAvailability", "0,1,2");

        $r16 = new com.android.emailcommon.service.AccountServiceProxy;

        specialinvoke $r16.<com.android.emailcommon.service.AccountServiceProxy: void <init>(android.content.Context)>(r0);

        $l1 = r2.<com.android.emailcommon.provider.Account: long mId>;

        i0 = virtualinvoke $r16.<com.android.emailcommon.service.AccountServiceProxy: int getAccountColor(long)>($l1);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("calendar_color", $r17);

        $r18 = staticinvoke <android.text.format.Time: java.lang.String getCurrentTimezone()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("calendar_timezone", $r18);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(700);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("calendar_access_level", $r20);

        $r19 = r2.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ownerAccount", $r19);

        $r23 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r22 = r2.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r21 = staticinvoke <com.android.exchange.utility.CalendarUtilities: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r23, $r22, "com.android.exchange");

        r5 = virtualinvoke r1.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r21, r4);

        if r5 == null goto label1;

        $r24 = virtualinvoke r5.<android.net.Uri: java.util.List getPathSegments()>();

        $r25 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(1);

        r6 = (java.lang.String) $r25;

        r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mSyncStatus> = r6;

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r6);

        return $l2;

     label1:
        return -1L;
    }

    static android.net.Uri asSyncAdapter(android.net.Uri, java.lang.String, java.lang.String)
    {
        android.net.Uri r0, $r7;
        java.lang.String r1, r2;
        android.net.Uri$Builder $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("caller_is_syncadapter", "true");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_name", r1);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_type", r2);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static java.lang.String getUidFromGlobalObjId(java.lang.String)
    {
        java.lang.String r0, r3, $r6, $r7, $r10;
        java.lang.StringBuilder r1, $r5;
        byte[] r2, r4;
        int i0, i1, i2, $i4, $i5, $i6;
        byte b3;
        java.lang.RuntimeException $r9;

        r0 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

     label1:
        r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(r0, 0);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(byte[])>(r2);

        r3 = $r6;

        i0 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>("vCal-Uid");

        if i0 <= 0 goto label3;

        $i4 = i0 + 12;

        $i6 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = $i6 - 1;

        $r10 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>($i4, $i5);

     label2:
        return $r10;

     label3:
        r4 = r2;

        i1 = lengthof r4;

        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        b3 = r4[i2];

        staticinvoke <com.android.emailcommon.utility.Utility: java.lang.StringBuilder byteToHex(java.lang.StringBuilder,int)>(r1, b3);

        i2 = i2 + 1;

        goto label4;

     label5:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        return $r7;

     label7:
        $r9 := @caughtexception;

        return r0;

        catch java.lang.RuntimeException from label1 to label2 with label7;
        catch java.lang.RuntimeException from label3 to label6 with label7;
    }

    public static int attendeeStatusFromBusyStatus(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label3;
        };

     label1:
        b1 = 1;

        goto label4;

     label2:
        b1 = 4;

        goto label4;

     label3:
        b1 = 0;

     label4:
        return b1;
    }

    public static int attendeeStatusFromResponseType(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label4;
            case 5: goto label1;
            default: goto label5;
        };

     label1:
        b1 = 3;

        goto label6;

     label2:
        b1 = 1;

        goto label6;

     label3:
        b1 = 4;

        goto label6;

     label4:
        b1 = 2;

        goto label6;

     label5:
        b1 = 0;

     label6:
        return b1;
    }

    public static int busyStatusFromAttendeeStatus(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label3;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            default: goto label3;
        };

     label1:
        b1 = 0;

        goto label4;

     label2:
        b1 = 1;

        goto label4;

     label3:
        b1 = 2;

     label4:
        return b1;
    }

    public static int busyStatusFromAvailability(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label3;
        };

     label1:
        b1 = 2;

        goto label4;

     label2:
        b1 = 0;

        goto label4;

     label3:
        b1 = 1;

     label4:
        return b1;
    }

    public static int availabilityFromBusyStatus(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        b1 = 0;

        goto label4;

     label2:
        b1 = 1;

        goto label4;

     label3:
        b1 = 2;

     label4:
        return b1;
    }

    public static java.lang.String buildMessageTextFromEntityValues(android.content.Context, android.content.ContentValues, java.lang.StringBuilder)
    {
        android.content.Context r0;
        android.content.ContentValues r1;
        java.lang.StringBuilder r2, $r18;
        android.content.res.Resources r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        java.lang.Integer r4;
        java.lang.String r5, $r7, $r9, $r15, r19, r20;
        int i0, $i2, $i4, $i5;
        long l1, $l3;
        java.util.Date r6, $r11, $r14;
        java.lang.Object[] $r8, $r13;
        java.lang.Long $r10;
        java.text.DateFormat $r12, $r16;
        java.util.TimeZone $r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.ContentValues;

        r2 := @parameter2: java.lang.StringBuilder;

        if r2 != null goto label01;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        r2 = $r18;

     label01:
        r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        z0 = 0;

        $z1 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("allDay");

        if $z1 == 0 goto label04;

        r4 = virtualinvoke r1.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        if r4 == null goto label02;

        $i5 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        if $i5 != 1 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z0 = $z8;

     label04:
        $z2 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("original_sync_id");

        if $z2 != 0 goto label05;

        $z7 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("rrule");

        if $z7 == 0 goto label05;

        $z6 = 1;

        goto label06;

     label05:
        $z6 = 0;

     label06:
        z9 = $z6;

        $z3 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtstart");

        if $z3 == 0 goto label13;

        $r10 = virtualinvoke r1.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("dtstart");

        l1 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        if z0 == 0 goto label09;

        $r14 = new java.util.Date;

        $r17 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $l3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getLocalAllDayCalendarTime(long,java.util.TimeZone)>(l1, $r17);

        specialinvoke $r14.<java.util.Date: void <init>(long)>($l3);

        r6 = $r14;

        $r16 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance()>();

        r5 = virtualinvoke $r16.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r6);

        if z9 == 0 goto label07;

        $i4 = 2131034132;

        goto label08;

     label07:
        $i4 = 2131034131;

     label08:
        i0 = $i4;

        goto label12;

     label09:
        $r12 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance()>();

        $r11 = new java.util.Date;

        specialinvoke $r11.<java.util.Date: void <init>(long)>(l1);

        r5 = virtualinvoke $r12.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r11);

        if z9 == 0 goto label10;

        $i2 = 2131034130;

        goto label11;

     label10:
        $i2 = 2131034128;

     label11:
        i0 = $i2;

     label12:
        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r5;

        $r15 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i0, $r13);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label13:
        $z4 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("eventLocation");

        if $z4 == 0 goto label14;

        r19 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventLocation");

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r19);

        if $z5 != 0 goto label14;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r19;

        $r9 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131034129, $r8);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label14:
        r20 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("description");

        if r20 == null goto label15;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--\n");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

     label15:
        $r7 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static void addAttendeeToMessage(com.android.exchange.utility.SimpleIcsWriter, java.util.ArrayList, java.lang.String, java.lang.String, int, com.android.emailcommon.provider.Account)
    {
        com.android.exchange.utility.SimpleIcsWriter r0;
        java.util.ArrayList r1;
        java.lang.String r2, r3, r5, $r6, $r10, $r13, $r20, $r23, r26;
        int i0, $i1, $i2;
        com.android.emailcommon.provider.Account r4;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r24, $r25;
        com.android.emailcommon.mail.Address $r19;

        r0 := @parameter0: com.android.exchange.utility.SimpleIcsWriter;

        r1 := @parameter1: java.util.ArrayList;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: com.android.emailcommon.provider.Account;

        $i1 = i0 & 48;

        if $i1 == 0 goto label05;

        r5 = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;RSVP=TRUE";

        $i2 = i0 & 32;

        if $i2 == 0 goto label01;

        r5 = "ATTENDEE;ROLE=REQ-PARTICIPANT";

     label01:
        if r2 == null goto label02;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";CN=");

        $r23 = staticinvoke <com.android.exchange.utility.SimpleIcsWriter: java.lang.String quoteParamValue(java.lang.String)>(r2);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        r5 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAILTO:");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>(r5, $r20);

        if r2 != null goto label03;

        $r19 = new com.android.emailcommon.mail.Address;

        specialinvoke $r19.<com.android.emailcommon.mail.Address: void <init>(java.lang.String)>(r3);

        goto label04;

     label03:
        $r19 = new com.android.emailcommon.mail.Address;

        specialinvoke $r19.<com.android.emailcommon.mail.Address: void <init>(java.lang.String,java.lang.String)>(r3, r2);

     label04:
        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        goto label11;

     label05:
        $r6 = r4.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label11;

        r26 = null;

        lookupswitch(i0)
        {
            case 64: goto label06;
            case 128: goto label07;
            case 256: goto label08;
            default: goto label09;
        };

     label06:
        r26 = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED";

        goto label09;

     label07:
        r26 = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=DECLINED";

        goto label09;

     label08:
        r26 = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE";

     label09:
        if r26 == null goto label11;

        if r2 == null goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";CN=");

        $r13 = staticinvoke <com.android.exchange.utility.SimpleIcsWriter: java.lang.String quoteParamValue(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r26 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAILTO:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>(r26, $r10);

     label11:
        return;
    }

    public static com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context, android.content.Entity, int, java.lang.String, com.android.emailcommon.provider.Account)
    {
        android.content.Context r0;
        android.content.Entity r1;
        int i0;
        java.lang.String r2;
        com.android.emailcommon.provider.Account r3;
        com.android.emailcommon.provider.EmailContent$Message $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Entity;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.emailcommon.provider.Account;

        $r4 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context,android.content.Entity,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>(r0, r1, i0, r2, r3, null);

        return $r4;
    }

    public static com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context, android.content.Entity, int, java.lang.String, com.android.emailcommon.provider.Account, java.lang.String)
    {
        android.content.Context r0;
        android.content.Entity r1;
        int i0, $i3, $i4, $i8, $i9, $i11, $i12, $i13, $i15, $i17, i20, i21;
        java.lang.String r2, r4, r8, r11, r13, r16, r17, r20, r25, r27, $r30, $r33, $r35, $r38, $r41, $r43, $r46, $r56, $r62, $r65, $r70, $r75, $r76, $r78, $r80, $r81, $r85, $r86, $r87, $r93, $r95, r100, r102, r104, r105, r106;
        com.android.emailcommon.provider.Account r3;
        android.content.ContentValues r5, r23;
        java.util.ArrayList r6, r19, $r39, $r54, $r55;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        com.android.emailcommon.provider.EmailContent$Message r7, $r28;
        com.android.exchange.utility.SimpleIcsWriter r9, $r29;
        java.util.TimeZone r10;
        java.lang.Integer r12, r26, r103;
        long l1, $l2, $l5, $l7, $l10, $l14, $l16, l18, l19;
        com.android.calendarcommon2.Duration r14, $r34;
        java.lang.StringBuilder r15, $r32, $r36, $r37, $r42, $r47, $r49, $r50, $r52, $r53, $r57, $r58, $r59, $r61, $r66, $r71, $r72, $r73, $r82, $r83, $r84, $r89, $r90, $r91, $r92, $r96, $r97;
        java.util.Date r18, $r69;
        android.content.Entity$NamedContentValues r21;
        java.util.Iterator r22, r108;
        android.net.Uri r24, $r63;
        byte $b6;
        java.lang.Long $r31, $r68, $r74, $r88;
        java.lang.Object[] $r40, $r77, $r79, $r99;
        com.android.emailcommon.provider.EmailContent$Attachment $r44, r110;
        byte[] $r45, $r48;
        java.lang.Object $r51, $r64;
        com.android.emailcommon.mail.Address $r60, r109;
        java.text.DateFormat $r67;
        com.android.calendarcommon2.DateException $r94;
        java.io.IOException $r98;
        android.content.res.Resources r101;
        com.android.emailcommon.mail.Address[] r107;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.Entity;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: com.android.emailcommon.provider.Account;

        r4 := @parameter5: java.lang.String;

        r5 = virtualinvoke r1.<android.content.Entity: android.content.ContentValues getEntityValues()>();

        r6 = virtualinvoke r1.<android.content.Entity: java.util.ArrayList getSubValues()>();

        z0 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("originalInstanceTime");

        z1 = 0;

        $r28 = new com.android.emailcommon.provider.EmailContent$Message;

        specialinvoke $r28.<com.android.emailcommon.provider.EmailContent$Message: void <init>()>();

        r7 = $r28;

        r7.<com.android.emailcommon.provider.EmailContent$Message: int mFlags> = i0;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r7.<com.android.emailcommon.provider.EmailContent$Message: long mTimeStamp> = $l2;

        $i3 = i0 & 16;

        if $i3 == 0 goto label01;

        r8 = "REQUEST";

        goto label03;

     label01:
        $i4 = i0 & 32;

        if $i4 == 0 goto label02;

        r8 = "CANCEL";

        goto label03;

     label02:
        r8 = "REPLY";

        z1 = 1;

     label03:
        $r29 = new com.android.exchange.utility.SimpleIcsWriter;

        specialinvoke $r29.<com.android.exchange.utility.SimpleIcsWriter: void <init>()>();

        r9 = $r29;

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "VCALENDAR");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("METHOD", r8);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("PRODID", "AndroidEmail");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("VERSION", "2.0");

        r10 = <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone sGmtTimeZone>;

        r11 = "";

        z2 = 0;

        $z3 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("allDay");

        if $z3 == 0 goto label06;

        r12 = virtualinvoke r5.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        if r12 == null goto label04;

        $i17 = virtualinvoke r12.<java.lang.Integer: int intValue()>();

        if $i17 != 1 goto label04;

        $z21 = 1;

        goto label05;

     label04:
        $z21 = 0;

     label05:
        z2 = $z21;

        if z2 == 0 goto label06;

        r11 = ";VALUE=DATE";

     label06:
        if z1 != 0 goto label08;

        if z2 != 0 goto label08;

        $z23 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("rrule");

        if $z23 != 0 goto label07;

        $z20 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("original_sync_id");

        if $z20 == 0 goto label08;

     label07:
        r10 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void timeZoneToVTimezone(java.util.TimeZone,com.android.exchange.utility.SimpleIcsWriter)>(r10, r9);

        $r97 = new java.lang.StringBuilder;

        specialinvoke $r97.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";TZID=");

        $r93 = virtualinvoke r10.<java.util.TimeZone: java.lang.String getID()>();

        $r92 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        r11 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("BEGIN", "VEVENT");

        if r2 != null goto label09;

        r2 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("sync_data2");

     label09:
        if r2 == null goto label10;

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("UID", r2);

     label10:
        $z4 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("DTSTAMP");

        if $z4 == 0 goto label11;

        $r95 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("DTSTAMP");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DTSTAMP", $r95);

        goto label12;

     label11:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r30 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long)>($l5);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DTSTAMP", $r30);

     label12:
        $r31 = virtualinvoke r5.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("dtstart");

        l18 = virtualinvoke $r31.<java.lang.Long: long longValue()>();

        $b6 = l18 cmp 0L;

        if $b6 == 0 goto label15;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DTSTART");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.String toString()>();

        if z2 != 0 goto label13;

        $z22 = 1;

        goto label14;

     label13:
        $z22 = 0;

     label14:
        $r86 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long,java.util.TimeZone,boolean)>(l18, r10, $z22);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>($r85, $r86);

     label15:
        if z0 == 0 goto label18;

        $r88 = virtualinvoke r5.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("originalInstanceTime");

        l1 = virtualinvoke $r88.<java.lang.Long: long longValue()>();

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RECURRENCE-ID");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r80 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        if z2 != 0 goto label16;

        $z18 = 1;

        goto label17;

     label16:
        $z18 = 0;

     label17:
        $r81 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long,java.util.TimeZone,boolean)>(l1, r10, $z18);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>($r80, $r81);

     label18:
        $z5 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("duration");

        if $z5 != 0 goto label21;

        $z16 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtend");

        if $z16 == 0 goto label28;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DTEND");

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r75 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r74 = virtualinvoke r5.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("dtend");

        $l16 = virtualinvoke $r74.<java.lang.Long: long longValue()>();

        if z2 != 0 goto label19;

        $z19 = 1;

        goto label20;

     label19:
        $z19 = 0;

     label20:
        $r87 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long,java.util.TimeZone,boolean)>($l16, r10, $z19);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>($r75, $r87);

        goto label28;

     label21:
        l19 = 3600000L;

        $r34 = new com.android.calendarcommon2.Duration;

        specialinvoke $r34.<com.android.calendarcommon2.Duration: void <init>()>();

        r14 = $r34;

     label22:
        $r33 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("duration");

        virtualinvoke r14.<com.android.calendarcommon2.Duration: void parse(java.lang.String)>($r33);

        l19 = virtualinvoke r14.<com.android.calendarcommon2.Duration: long getMillis()>();

     label23:
        goto label25;

     label24:
        $r94 := @caughtexception;

     label25:
        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DTEND");

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $l7 = l18 + l19;

        if z2 != 0 goto label26;

        $z15 = 1;

        goto label27;

     label26:
        $z15 = 0;

     label27:
        $r38 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String millisToEasDateTime(long,java.util.TimeZone,boolean)>($l7, r10, $z15);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>($r35, $r38);

     label28:
        $z6 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("eventLocation");

        if $z6 == 0 goto label29;

        r100 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventLocation");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("LOCATION", r100);

     label29:
        r13 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("sync_data4");

        if r13 != null goto label30;

        r13 = "0";

     label30:
        i20 = 0;

        lookupswitch(i0)
        {
            case 16: goto label31;
            case 32: goto label35;
            case 64: goto label32;
            case 128: goto label33;
            case 256: goto label34;
            default: goto label36;
        };

     label31:
        $z17 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z17 != 0 goto label36;

        i20 = 2131034127;

        goto label36;

     label32:
        i20 = 2131034123;

        goto label36;

     label33:
        i20 = 2131034124;

        goto label36;

     label34:
        i20 = 2131034125;

        goto label36;

     label35:
        i20 = 2131034126;

     label36:
        r101 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r16 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("title");

        if r16 != null goto label37;

        r16 = "";

     label37:
        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("SUMMARY", r16);

        if i20 != 0 goto label38;

        r7.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mSubject> = r16;

        goto label39;

     label38:
        $r40 = newarray (java.lang.Object)[1];

        $r40[0] = r16;

        $r41 = virtualinvoke r101.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i20, $r40);

        r7.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mSubject> = $r41;

     label39:
        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        r15 = $r42;

        if z0 == 0 goto label42;

        if z1 != 0 goto label42;

        $r69 = new java.util.Date;

        $r68 = virtualinvoke r5.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("originalInstanceTime");

        $l14 = virtualinvoke $r68.<java.lang.Long: long longValue()>();

        specialinvoke $r69.<java.util.Date: void <init>(long)>($l14);

        r18 = $r69;

        $r67 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance()>();

        r17 = virtualinvoke $r67.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r18);

        if i20 != 2131034126 goto label40;

        $r79 = newarray (java.lang.Object)[1];

        $r79[0] = r17;

        $r78 = virtualinvoke r101.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131034135, $r79);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        goto label41;

     label40:
        $r77 = newarray (java.lang.Object)[1];

        $r77[0] = r17;

        $r76 = virtualinvoke r101.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131034136, $r77);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

     label41:
        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\n");

     label42:
        r102 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String buildMessageTextFromEntityValues(android.content.Context,android.content.ContentValues,java.lang.StringBuilder)>(r0, r5, r15);

        $i8 = virtualinvoke r102.<java.lang.String: int length()>();

        if $i8 <= 0 goto label43;

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("DESCRIPTION", r102);

     label43:
        r7.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mText> = r102;

        if z1 != 0 goto label47;

        $z12 = virtualinvoke r5.<android.content.ContentValues: boolean containsKey(java.lang.String)>("allDay");

        if $z12 == 0 goto label46;

        r103 = virtualinvoke r5.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        $i15 = virtualinvoke r103.<java.lang.Integer: int intValue()>();

        if $i15 != 0 goto label44;

        $r70 = "FALSE";

        goto label45;

     label44:
        $r70 = "TRUE";

     label45:
        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("X-MICROSOFT-CDO-ALLDAYEVENT", $r70);

     label46:
        r104 = virtualinvoke r5.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rrule");

        if r104 == null goto label47;

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("RRULE", r104);

     label47:
        r105 = null;

        r20 = null;

        $r39 = new java.util.ArrayList;

        specialinvoke $r39.<java.util.ArrayList: void <init>()>();

        r19 = $r39;

        r22 = virtualinvoke r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label48:
        $z8 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label52;

        $r64 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r21 = (android.content.Entity$NamedContentValues) $r64;

        r24 = r21.<android.content.Entity$NamedContentValues: android.net.Uri uri>;

        r23 = r21.<android.content.Entity$NamedContentValues: android.content.ContentValues values>;

        $r63 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $z11 = virtualinvoke r24.<android.net.Uri: boolean equals(java.lang.Object)>($r63);

        if $z11 == 0 goto label51;

        r26 = virtualinvoke r23.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("attendeeRelationship");

        r27 = virtualinvoke r23.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("attendeeEmail");

        if r26 == null goto label51;

        $z14 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r27);

        if $z14 != 0 goto label51;

        $i13 = virtualinvoke r26.<java.lang.Integer: int intValue()>();

        if $i13 != 2 goto label49;

        r105 = virtualinvoke r23.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("attendeeName");

        r20 = r27;

        goto label48;

     label49:
        r25 = virtualinvoke r23.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("attendeeName");

        if r4 == null goto label50;

        $z13 = virtualinvoke r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z13 != 0 goto label50;

        goto label48;

     label50:
        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addAttendeeToMessage(com.android.exchange.utility.SimpleIcsWriter,java.util.ArrayList,java.lang.String,java.lang.String,int,com.android.emailcommon.provider.Account)>(r9, r19, r25, r27, i0, r3);

     label51:
        goto label48;

     label52:
        $z9 = virtualinvoke r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z9 == 0 goto label53;

        if r4 == null goto label53;

        staticinvoke <com.android.exchange.utility.CalendarUtilities: void addAttendeeToMessage(com.android.exchange.utility.SimpleIcsWriter,java.util.ArrayList,java.lang.String,java.lang.String,int,com.android.emailcommon.provider.Account)>(r9, r19, null, r4, i0, r3);

     label53:
        if r20 == null goto label57;

        r106 = "ORGANIZER";

        if r105 == null goto label54;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ORGANIZER");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";CN=");

        $r65 = staticinvoke <com.android.exchange.utility.SimpleIcsWriter: java.lang.String quoteParamValue(java.lang.String)>(r105);

        $r66 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        r106 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

     label54:
        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MAILTO:");

        $r61 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>(r106, $r62);

        if z1 == 0 goto label57;

        if r105 != null goto label55;

        $r60 = new com.android.emailcommon.mail.Address;

        specialinvoke $r60.<com.android.emailcommon.mail.Address: void <init>(java.lang.String)>(r20);

        goto label56;

     label55:
        $r60 = new com.android.emailcommon.mail.Address;

        specialinvoke $r60.<com.android.emailcommon.mail.Address: void <init>(java.lang.String,java.lang.String)>(r20, r105);

     label56:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>($r60);

     label57:
        $z10 = virtualinvoke r19.<java.util.ArrayList: boolean isEmpty()>();

        if $z10 == 0 goto label59;

     label58:
        return null;

     label59:
        $i9 = virtualinvoke r19.<java.util.ArrayList: int size()>();

        r107 = newarray (com.android.emailcommon.mail.Address)[$i9];

        i21 = 0;

        r108 = virtualinvoke r19.<java.util.ArrayList: java.util.Iterator iterator()>();

     label60:
        $z7 = interfaceinvoke r108.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label61;

        $r51 = interfaceinvoke r108.<java.util.Iterator: java.lang.Object next()>();

        r109 = (com.android.emailcommon.mail.Address) $r51;

        $i12 = i21;

        i21 = i21 + 1;

        r107[$i12] = r109;

        goto label60;

     label61:
        $r43 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String toHeader(com.android.emailcommon.mail.Address[])>(r107);

        r7.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mTo> = $r43;

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("CLASS", "PUBLIC");

        if i0 != 32 goto label62;

        $r56 = "CANCELLED";

        goto label63;

     label62:
        $r56 = "CONFIRMED";

     label63:
        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("STATUS", $r56);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("TRANSP", "OPAQUE");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("PRIORITY", "5");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("SEQUENCE", r13);

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "VEVENT");

        virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: void writeTag(java.lang.String,java.lang.String)>("END", "VCALENDAR");

        $r44 = new com.android.emailcommon.provider.EmailContent$Attachment;

        specialinvoke $r44.<com.android.emailcommon.provider.EmailContent$Attachment: void <init>()>();

        r110 = $r44;

        $r48 = virtualinvoke r9.<com.android.exchange.utility.SimpleIcsWriter: byte[] getBytes()>();

        r110.<com.android.emailcommon.provider.EmailContent$Attachment: byte[] mContentBytes> = $r48;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/calendar; method=");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r46 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        r110.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType> = $r46;

        r110.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName> = "invite.ics";

        $r45 = r110.<com.android.emailcommon.provider.EmailContent$Attachment: byte[] mContentBytes>;

        $i11 = lengthof $r45;

        $l10 = (long) $i11;

        r110.<com.android.emailcommon.provider.EmailContent$Attachment: long mSize> = $l10;

        r110.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags> = 1;

        $r55 = new java.util.ArrayList;

        specialinvoke $r55.<java.util.ArrayList: void <init>()>();

        r7.<com.android.emailcommon.provider.EmailContent$Message: java.util.ArrayList mAttachments> = $r55;

        $r54 = r7.<com.android.emailcommon.provider.EmailContent$Message: java.util.ArrayList mAttachments>;

        virtualinvoke $r54.<java.util.ArrayList: boolean add(java.lang.Object)>(r110);

     label64:
        goto label66;

     label65:
        $r98 := @caughtexception;

        $r99 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "IOException in createMessageForEntity", $r99);

        return null;

     label66:
        return r7;

        catch com.android.calendarcommon2.DateException from label22 to label23 with label24;
        catch java.io.IOException from label03 to label58 with label65;
        catch java.io.IOException from label59 to label64 with label65;
    }

    public static com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context, long, int, java.lang.String, com.android.emailcommon.provider.Account)
    {
        android.content.Context r0;
        long l0;
        int i1;
        java.lang.String r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.EmailContent$Message $r3;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: com.android.emailcommon.provider.Account;

        $r3 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context,long,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>(r0, l0, i1, r1, r2, null);

        return $r3;
    }

    public static com.android.emailcommon.provider.EmailContent$Message createMessageForEventId(android.content.Context, long, int, java.lang.String, com.android.emailcommon.provider.Account, java.lang.String)
    {
        android.content.Context r0;
        long l0;
        int i1;
        java.lang.String r1, r3;
        com.android.emailcommon.provider.Account r2;
        android.content.ContentResolver r4;
        android.database.Cursor r5;
        android.content.EntityIterator r6;
        android.content.Entity r7;
        com.android.emailcommon.provider.EmailContent$Message r8;
        java.lang.Throwable r9, $r13;
        android.net.Uri $r10, $r11;
        java.lang.Object $r12;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        r2 := @parameter4: com.android.emailcommon.provider.Account;

        r3 := @parameter5: java.lang.String;

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r11 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r10, l0);

        r5 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r11, null, null, null, null);

        if r5 != null goto label1;

        return null;

     label1:
        r6 = staticinvoke <android.provider.CalendarContract$EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)>(r5, r4);

     label2:
        $z0 = interfaceinvoke r6.<android.content.EntityIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r6.<android.content.EntityIterator: java.lang.Object next()>();

        r7 = (android.content.Entity) $r12;

        r8 = staticinvoke <com.android.exchange.utility.CalendarUtilities: com.android.emailcommon.provider.EmailContent$Message createMessageForEntity(android.content.Context,android.content.Entity,int,java.lang.String,com.android.emailcommon.provider.Account,java.lang.String)>(r0, r7, i1, r1, r2, r3);

     label3:
        interfaceinvoke r6.<android.content.EntityIterator: void close()>();

        return r8;

     label4:
        interfaceinvoke r6.<android.content.EntityIterator: void close()>();

        goto label7;

     label5:
        $r13 := @caughtexception;

        r9 = $r13;

     label6:
        interfaceinvoke r6.<android.content.EntityIterator: void close()>();

        throw r9;

     label7:
        return null;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean getIntegerValueAsBoolean(android.content.ContentValues, java.lang.String)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Integer r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.content.ContentValues;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;
        java.util.TimeZone $r2, $r7;
        java.lang.String[] $r3, $r4, $r5;
        java.util.GregorianCalendar $r6;
        int $i0;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_NOT_RESPONDED> = 5;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_DECLINED> = 4;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_ACCEPTED> = 3;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_TENTATIVE> = 2;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_ORGANIZER> = 1;

        <com.android.exchange.utility.CalendarUtilities: int RESPONSE_TYPE_NONE> = 0;

        <com.android.exchange.utility.CalendarUtilities: int BUSY_STATUS_OUT_OF_OFFICE> = 3;

        <com.android.exchange.utility.CalendarUtilities: int BUSY_STATUS_BUSY> = 2;

        <com.android.exchange.utility.CalendarUtilities: int BUSY_STATUS_TENTATIVE> = 1;

        <com.android.exchange.utility.CalendarUtilities: int BUSY_STATUS_FREE> = 0;

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE_TENTATIVE> = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE_DECLINE> = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=DECLINED";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE_ACCEPT> = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE_INVITE> = "ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;RSVP=TRUE";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE_CANCEL> = "ATTENDEE;ROLE=REQ-PARTICIPANT";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ICALENDAR_ATTENDEE> = "ATTENDEE;ROLE=REQ-PARTICIPANT";

        <com.android.exchange.utility.CalendarUtilities: int EAS_WEEKENDS> = 65;

        <com.android.exchange.utility.CalendarUtilities: int EAS_WEEKDAYS> = 62;

        <com.android.exchange.utility.CalendarUtilities: int EAS_SATURDAY> = 64;

        <com.android.exchange.utility.CalendarUtilities: int EAS_FRIDAY> = 32;

        <com.android.exchange.utility.CalendarUtilities: int EAS_THURSDAY> = 16;

        <com.android.exchange.utility.CalendarUtilities: int EAS_WEDNESDAY> = 8;

        <com.android.exchange.utility.CalendarUtilities: int EAS_TUESDAY> = 4;

        <com.android.exchange.utility.CalendarUtilities: int EAS_MONDAY> = 2;

        <com.android.exchange.utility.CalendarUtilities: int EAS_SUNDAY> = 1;

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ALLOWED_AVAILABILITIES> = "0,1,2";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ALLOWED_ATTENDEE_TYPES> = "0,1,2";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String ALLOWED_REMINDER_TYPES> = "0,1";

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_SIZE> = 172;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_DAYLIGHT_BIAS_OFFSET> = 168;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_DAYLIGHT_DATE_OFFSET> = 152;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_DAYLIGHT_NAME_OFFSET> = 88;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_STANDARD_BIAS_OFFSET> = 84;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_STANDARD_DATE_OFFSET> = 68;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_STANDARD_NAME_OFFSET> = 4;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_BIAS_OFFSET> = 0;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_TIME_ZONE_STRING_SIZE> = 32;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_SIZE> = 16;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_MINUTE> = 10;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_HOUR> = 8;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_DAY> = 6;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_DAY_OF_WEEK> = 4;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_MONTH> = 2;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_SYSTEMTIME_YEAR> = 0;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_WORD_SIZE> = 2;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_WCHAR_SIZE> = 2;

        <com.android.exchange.utility.CalendarUtilities: int MSFT_LONG_SIZE> = 4;

        <com.android.exchange.utility.CalendarUtilities: java.lang.String SYNC_VERSION> = "sync_data4";

        <com.android.exchange.utility.CalendarUtilities: int LENIENT_DST_PRECISION> = 14400000;

        <com.android.exchange.utility.CalendarUtilities: int STANDARD_DST_PRECISION> = 60000;

        <com.android.exchange.utility.CalendarUtilities: long DAYS> = 86400000L;

        <com.android.exchange.utility.CalendarUtilities: int HOURS> = 3600000;

        <com.android.exchange.utility.CalendarUtilities: int MINUTES> = 60000;

        <com.android.exchange.utility.CalendarUtilities: int SECONDS> = 1000;

        <com.android.exchange.utility.CalendarUtilities: java.lang.String TAG> = "Exchange";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTimeZoneCache> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.android.exchange.utility.CalendarUtilities: java.util.HashMap sTziStringCache> = $r1;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone UTC_TIMEZONE> = $r2;

        $r3 = newarray (java.lang.String)[7];

        $r3[0] = "DAILY";

        $r3[1] = "WEEKLY";

        $r3[2] = "MONTHLY";

        $r3[3] = "MONTHLY";

        $r3[4] = "";

        $r3[5] = "YEARLY";

        $r3[6] = "YEARLY";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sTypeToFreq> = $r3;

        $r4 = newarray (java.lang.String)[7];

        $r4[0] = "SU";

        $r4[1] = "MO";

        $r4[2] = "TU";

        $r4[3] = "WE";

        $r4[4] = "TH";

        $r4[5] = "FR";

        $r4[6] = "SA";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sDayTokens> = $r4;

        $r5 = newarray (java.lang.String)[13];

        $r5[0] = "00";

        $r5[1] = "01";

        $r5[2] = "02";

        $r5[3] = "03";

        $r5[4] = "04";

        $r5[5] = "05";

        $r5[6] = "06";

        $r5[7] = "07";

        $r5[8] = "08";

        $r5[9] = "09";

        $r5[10] = "10";

        $r5[11] = "11";

        $r5[12] = "12";

        <com.android.exchange.utility.CalendarUtilities: java.lang.String[] sTwoCharacterNumbers> = $r5;

        $r6 = new java.util.GregorianCalendar;

        specialinvoke $r6.<java.util.GregorianCalendar: void <init>()>();

        $i0 = virtualinvoke $r6.<java.util.GregorianCalendar: int get(int)>(1);

        <com.android.exchange.utility.CalendarUtilities: int sCurrentYear> = $i0;

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone sGmtTimeZone> = $r7;

        return;
    }
}
