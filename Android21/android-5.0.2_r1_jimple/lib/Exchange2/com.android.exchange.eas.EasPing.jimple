public class com.android.exchange.eas.EasPing extends com.android.exchange.eas.EasOperation
{
    private static final java.lang.String TAG;
    private static final java.lang.String WHERE_ACCOUNT_KEY_AND_SERVER_ID;
    private final android.accounts.Account mAmAccount;
    private long mPingDuration;
    private static final long DEFAULT_PING_HEARTBEAT;
    private static final long MINIMUM_PING_HEARTBEAT;
    private static final long MAXIMUM_PING_HEARTBEAT;
    private static final long MAXIMUM_HEARTBEAT_INCREMENT;
    private static final long EXTRA_POST_TIMEOUT_MILLIS;

    public void <init>(android.content.Context, com.android.emailcommon.provider.Account, android.accounts.Account)
    {
        com.android.exchange.eas.EasPing r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        android.accounts.Account r3;
        long $l0, $l1, $l3, $l4;
        byte $b2;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        java.lang.Object[] $r10;

        r0 := @this: com.android.exchange.eas.EasPing;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: android.accounts.Account;

        specialinvoke r0.<com.android.exchange.eas.EasOperation: void <init>(android.content.Context,com.android.emailcommon.provider.Account)>(r1, r2);

        r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount> = r3;

        $l0 = r2.<com.android.emailcommon.provider.Account: long mPingDuration>;

        r0.<com.android.exchange.eas.EasPing: long mPingDuration> = $l0;

        $l1 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        r0.<com.android.exchange.eas.EasPing: long mPingDuration> = 480L;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("initial ping duration ");

        $l3 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" account ");

        $l4 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r9, $r10);

        return;
    }

    public final int doPing()
    {
        com.android.exchange.eas.EasPing r0;
        long l0, l2, $l3;
        int i1;
        java.lang.Object[] $r1;
        java.lang.Long $r2;

        r0 := @this: com.android.exchange.eas.EasPing;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        i1 = virtualinvoke r0.<com.android.exchange.eas.EasPing: int performOperation()>();

        if i1 != -2 goto label1;

        return 1;

     label1:
        if i1 != -4 goto label2;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = $l3 - l0;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r1[0] = $r2;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "doPing request failure, timed out after %d millis", $r1);

        specialinvoke r0.<com.android.exchange.eas.EasPing: void decreasePingDuration()>();

     label2:
        return i1;
    }

    private void decreasePingDuration()
    {
        com.android.exchange.eas.EasPing r0;
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.android.exchange.eas.EasPing;

        $l0 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $l1 = $l0 - 300L;

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>(480L, $l1);

        r0.<com.android.exchange.eas.EasPing: long mPingDuration> = $l2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("decreasePingDuration adjusting by 300 new duration ");

        $l3 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" account ");

        $l4 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r6, $r7);

        specialinvoke r0.<com.android.exchange.eas.EasPing: void storePingDuration()>();

        return;
    }

    private void increasePingDuration()
    {
        com.android.exchange.eas.EasPing r0;
        long $l0, $l1, $l2, $l3, $l4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.Object[] $r7;

        r0 := @this: com.android.exchange.eas.EasPing;

        $l0 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $l1 = $l0 + 300L;

        $l2 = staticinvoke <java.lang.Math: long min(long,long)>(1680L, $l1);

        r0.<com.android.exchange.eas.EasPing: long mPingDuration> = $l2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("increasePingDuration adjusting by 300 new duration ");

        $l3 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" account ");

        $l4 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", $r6, $r7);

        specialinvoke r0.<com.android.exchange.eas.EasPing: void storePingDuration()>();

        return;
    }

    private void storePingDuration()
    {
        com.android.exchange.eas.EasPing r0;
        android.content.ContentValues r1, $r2;
        long $l0, $l1;
        java.lang.Long $r3;
        android.content.Context $r4;
        android.net.Uri $r5;

        r0 := @this: com.android.exchange.eas.EasPing;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>(int)>(1);

        r1 = $r2;

        $l0 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("pingDuration", $r3);

        $r4 = r0.<com.android.exchange.eas.EasPing: android.content.Context mContext>;

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l1 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        staticinvoke <com.android.emailcommon.provider.Account: int update(android.content.Context,android.net.Uri,long,android.content.ContentValues)>($r4, $r5, $l1, r1);

        return;
    }

    public final android.accounts.Account getAmAccount()
    {
        com.android.exchange.eas.EasPing r0;
        android.accounts.Account $r1;

        r0 := @this: com.android.exchange.eas.EasPing;

        $r1 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        return $r1;
    }

    protected java.lang.String getCommand()
    {
        com.android.exchange.eas.EasPing r0;

        r0 := @this: com.android.exchange.eas.EasPing;

        return "Ping";
    }

    protected org.apache.http.HttpEntity getRequestEntity() throws java.io.IOException
    {
        com.android.exchange.eas.EasPing r0;
        android.database.Cursor r1;
        com.android.exchange.adapter.Serializer r2, $r7, $r8;
        com.android.emailcommon.provider.Mailbox r3, $r11;
        java.lang.Throwable r4, $r12;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        long $l0;
        boolean $z0;
        org.apache.http.HttpEntity $r9;
        java.io.IOException $r10;
        java.lang.IllegalStateException $r13;

        r0 := @this: com.android.exchange.eas.EasPing;

        $r5 = r0.<com.android.exchange.eas.EasPing: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l0 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        r1 = staticinvoke <com.android.emailcommon.provider.Mailbox: android.database.Cursor getMailboxesForPush(android.content.ContentResolver,long)>($r6, $l0);

        if r1 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Could not read mailboxes");

        throw $r13;

     label1:
        r2 = null;

     label2:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $r11 = new com.android.emailcommon.provider.Mailbox;

        specialinvoke $r11.<com.android.emailcommon.provider.Mailbox: void <init>()>();

        r3 = $r11;

        virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: void restore(android.database.Cursor)>(r1);

        r2 = specialinvoke r0.<com.android.exchange.eas.EasPing: com.android.exchange.adapter.Serializer handleOneMailbox(com.android.exchange.adapter.Serializer,com.android.emailcommon.provider.Mailbox)>(r2, r3);

        goto label2;

     label3:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r12 := @caughtexception;

        r4 = $r12;

     label5:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r4;

     label6:
        if r2 != null goto label7;

        virtualinvoke r0.<com.android.exchange.eas.EasPing: void abort()>();

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("No mailboxes want push");

        throw $r10;

     label7:
        $r7 = virtualinvoke r2.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        $r8 = virtualinvoke $r7.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

        virtualinvoke $r8.<com.android.exchange.adapter.Serializer: void done()>();

        $r9 = virtualinvoke r0.<com.android.exchange.eas.EasPing: org.apache.http.HttpEntity makeEntity(com.android.exchange.adapter.Serializer)>(r2);

        return $r9;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected int handleResponse(com.android.exchange.EasResponse) throws java.io.IOException
    {
        com.android.exchange.eas.EasPing r0;
        com.android.exchange.EasResponse r1;
        com.android.exchange.adapter.PingParser r2, $r4;
        int i0, $i10;
        long l1, l2, $l11;
        boolean $z0;
        java.lang.Object[] $r3, $r6, $r8, $r10, $r11, $r14, $r15, $r18, $r23, $r24, $r26;
        java.io.InputStream $r5;
        java.lang.Integer $r7, $r9;
        java.lang.Long $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r22, $r27, $r28;
        java.util.ArrayList $r25;
        java.io.IOException $r29;

        r0 := @this: com.android.exchange.eas.EasPing;

        r1 := @parameter0: com.android.exchange.EasResponse;

        $z0 = virtualinvoke r1.<com.android.exchange.EasResponse: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        $r29 = new java.io.IOException;

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>("Empty ping response");

        throw $r29;

     label01:
        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "EasPing.handleResponse", $r3);

        $r4 = new com.android.exchange.adapter.PingParser;

        $r5 = virtualinvoke r1.<com.android.exchange.EasResponse: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<com.android.exchange.adapter.PingParser: void <init>(java.io.InputStream)>($r5);

        r2 = $r4;

        virtualinvoke r2.<com.android.exchange.adapter.PingParser: boolean parse()>();

        i0 = virtualinvoke r2.<com.android.exchange.adapter.PingParser: int getPingStatus()>();

        l1 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 111: goto label09;
            case 126: goto label10;
            case 127: goto label10;
            case 128: goto label10;
            case 129: goto label10;
            case 130: goto label10;
            case 131: goto label10;
            case 132: goto label11;
            case 133: goto label11;
            case 134: goto label11;
            case 135: goto label11;
            case 136: goto label11;
            case 137: goto label11;
            case 138: goto label11;
            case 139: goto label10;
            case 140: goto label11;
            case 141: goto label10;
            case 142: goto label11;
            case 143: goto label11;
            case 144: goto label11;
            case 145: goto label11;
            case 147: goto label11;
            case 148: goto label11;
            case 150: goto label11;
            case 177: goto label10;
            default: goto label12;
        };

     label02:
        $r26 = newarray (java.lang.Object)[1];

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r26[0] = $r28;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Ping expired for account %d", $r26);

        specialinvoke r0.<com.android.exchange.eas.EasPing: void increasePingDuration()>();

        goto label12;

     label03:
        $r23 = newarray (java.lang.Object)[1];

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r23[0] = $r27;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Ping found changed folders for account %d", $r23);

        $r25 = virtualinvoke r2.<com.android.exchange.adapter.PingParser: java.util.ArrayList getSyncList()>();

        specialinvoke r0.<com.android.exchange.eas.EasPing: void requestSyncForSyncList(java.util.ArrayList)>($r25);

        goto label12;

     label04:
        $r24 = newarray (java.lang.Object)[1];

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r24[0] = $r22;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Bad ping request for account %d", $r24);

        goto label12;

     label05:
        $i10 = virtualinvoke r2.<com.android.exchange.adapter.PingParser: int getHeartbeatInterval()>();

        l2 = (long) $i10;

        $r18 = newarray (java.lang.Object)[3];

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r18[0] = $r19;

        $l11 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        $r18[1] = $r21;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r18[2] = $r20;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Heartbeat out of bounds for account %d, old duration %d new duration %d", $r18);

        r0.<com.android.exchange.eas.EasPing: long mPingDuration> = l2;

        specialinvoke r0.<com.android.exchange.eas.EasPing: void storePingDuration()>();

        goto label12;

     label06:
        $r15 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r15[0] = $r17;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Too many folders for account %d", $r15);

        goto label12;

     label07:
        $r14 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r14[0] = $r16;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "FolderSync needed for account %d", $r14);

        specialinvoke r0.<com.android.exchange.eas.EasPing: void requestFolderSync()>();

        goto label12;

     label08:
        $r11 = newarray (java.lang.Object)[1];

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r11[0] = $r13;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Server error for account %d", $r11);

        goto label12;

     label09:
        $r10 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r10[0] = $r12;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Retryable server error for account %d", $r10);

        return -2;

     label10:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r9;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Unexpected error %d on ping", $r8);

        return -7;

     label11:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[0] = $r7;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Unexpected error %d on ping", $r6);

        return -99;

     label12:
        return i0;
    }

    protected boolean addPolicyKeyHeaderToRequest()
    {
        com.android.exchange.eas.EasPing r0;

        r0 := @this: com.android.exchange.eas.EasPing;

        return 0;
    }

    protected long getTimeout()
    {
        com.android.exchange.eas.EasPing r0;
        long $l0, $l1, $l2;

        r0 := @this: com.android.exchange.eas.EasPing;

        $l0 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $l1 = $l0 * 1000L;

        $l2 = $l1 + 5000L;

        return $l2;
    }

    private com.android.exchange.adapter.Serializer handleOneMailbox(com.android.exchange.adapter.Serializer, com.android.emailcommon.provider.Mailbox) throws java.io.IOException
    {
        com.android.exchange.eas.EasPing r0;
        com.android.exchange.adapter.Serializer r1, $r14;
        com.android.emailcommon.provider.Mailbox r2;
        java.lang.String $r3, $r4, $r6, $r8, $r10, $r16;
        boolean $z0, $z1;
        int $i0, $i1;
        android.accounts.Account $r5;
        long $l2;

        r0 := @this: com.android.exchange.eas.EasPing;

        r1 := @parameter0: com.android.exchange.adapter.Serializer;

        r2 := @parameter1: com.android.emailcommon.provider.Mailbox;

        $r3 = r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mSyncKey>;

        if $r3 == null goto label2;

        $r4 = r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mSyncKey>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z0 != 0 goto label2;

        $r5 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        $i0 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        $r6 = staticinvoke <com.android.emailcommon.provider.Mailbox: java.lang.String getAuthority(int)>($i0);

        $z1 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>($r5, $r6);

        if $z1 == 0 goto label2;

        if r1 != null goto label1;

        $r14 = new com.android.exchange.adapter.Serializer;

        specialinvoke $r14.<com.android.exchange.adapter.Serializer: void <init>()>();

        r1 = $r14;

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(837);

        $l2 = r0.<com.android.exchange.eas.EasPing: long mPingDuration>;

        $r16 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(840, $r16);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(841);

     label1:
        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer start(int)>(842);

        $r8 = r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(843, $r8);

        $i1 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        $r10 = staticinvoke <com.android.exchange.Eas: java.lang.String getFolderClass(int)>($i1);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer data(int,java.lang.String)>(844, $r10);

        virtualinvoke r1.<com.android.exchange.adapter.Serializer: com.android.exchange.adapter.Serializer end()>();

     label2:
        return r1;
    }

    private void requestSyncForSyncList(java.util.ArrayList)
    {
        com.android.exchange.eas.EasPing r0;
        java.util.ArrayList r1, r3, r4, r5, $r11, $r12, $r13;
        java.lang.String[] r2, $r22;
        java.util.Iterator r6;
        java.lang.String r7, $r10, $r14, $r25;
        android.database.Cursor r8;
        long l0, $l2;
        int i1;
        java.lang.Throwable r9, $r28;
        boolean $z0, $z1;
        android.accounts.Account $r15, $r16, $r18;
        java.lang.Object $r17;
        android.content.ContentResolver $r19;
        android.content.Context $r20;
        android.net.Uri $r21;
        java.lang.Long $r23, $r26, $r29;
        java.lang.Object[] $r24;
        java.lang.Integer $r27;

        r0 := @this: com.android.exchange.eas.EasPing;

        r1 := @parameter0: java.util.ArrayList;

        r2 = newarray (java.lang.String)[2];

        $l2 = virtualinvoke r0.<com.android.exchange.eas.EasPing: long getAccountId()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        r2[0] = $r10;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r3 = $r12;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r4 = $r11;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r5 = $r13;

        r6 = virtualinvoke r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r17 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r17;

        r2[1] = r7;

        $r20 = r0.<com.android.exchange.eas.EasPing: android.content.Context mContext>;

        $r19 = virtualinvoke $r20.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r21 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r22 = <com.android.emailcommon.provider.Mailbox: java.lang.String[] CONTENT_PROJECTION>;

        r8 = virtualinvoke $r19.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r21, $r22, "accountKey=? and serverId=?", r2, null);

        if r8 != null goto label02;

        goto label11;

     label02:
        $z1 = interfaceinvoke r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label07;

        l0 = interfaceinvoke r8.<android.database.Cursor: long getLong(int)>(0);

        i1 = interfaceinvoke r8.<android.database.Cursor: int getInt(int)>(5);

        lookupswitch(i1)
        {
            case 0: goto label03;
            case 1: goto label03;
            case 3: goto label03;
            case 5: goto label03;
            case 6: goto label03;
            case 7: goto label03;
            case 65: goto label04;
            case 66: goto label05;
            default: goto label06;
        };

     label03:
        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r29);

     label04:
        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

     label05:
        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label06:
        $r25 = <com.android.exchange.eas.EasPing: java.lang.String LOG_TAG>;

        $r24 = newarray (java.lang.Object)[1];

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r24[0] = $r27;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r25, "unexpected collectiontype %d in EasPing", $r24);

     label07:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        goto label10;

     label08:
        $r28 := @caughtexception;

        r9 = $r28;

     label09:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        throw r9;

     label10:
        goto label01;

     label11:
        $r16 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        $r14 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <com.android.exchange.eas.EasPing: void requestSyncForMailboxes(android.accounts.Account,java.lang.String,java.util.ArrayList)>($r16, $r14, r3);

        $r15 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        staticinvoke <com.android.exchange.eas.EasPing: void requestSyncForMailboxes(android.accounts.Account,java.lang.String,java.util.ArrayList)>($r15, "com.android.calendar", r4);

        $r18 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        staticinvoke <com.android.exchange.eas.EasPing: void requestSyncForMailboxes(android.accounts.Account,java.lang.String,java.util.ArrayList)>($r18, "com.android.contacts", r5);

        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private void requestFolderSync()
    {
        com.android.exchange.eas.EasPing r0;
        android.os.Bundle r1, $r2;
        java.lang.String $r3, $r7, $r8, $r9;
        android.accounts.Account $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: com.android.exchange.eas.EasPing;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(int)>(1);

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("__account_only__", 1);

        $r4 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        $r3 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>($r4, $r3, r1);

        $r7 = <com.android.exchange.eas.EasPing: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = r0.<com.android.exchange.eas.EasPing: android.accounts.Account mAmAccount>;

        $r8 = virtualinvoke $r6.<android.accounts.Account: java.lang.String toString()>();

        $r5[0] = $r8;

        $r9 = virtualinvoke r1.<android.os.Bundle: java.lang.String toString()>();

        $r5[1] = $r9;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "requestFolderSync EasPing %s, %s", $r5);

        return;
    }

    public static void requestPing(android.accounts.Account)
    {
        android.accounts.Account r0;
        android.os.Bundle r1, $r2;
        java.lang.String $r3, $r5, $r6, $r7;
        java.lang.Object[] $r4;

        r0 := @parameter0: android.accounts.Account;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>(int)>(2);

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("__push_only__", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        $r3 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r3, r1);

        $r5 = <com.android.exchange.eas.EasPing: java.lang.String LOG_TAG>;

        $r4 = newarray (java.lang.Object)[2];

        $r6 = virtualinvoke r0.<android.accounts.Account: java.lang.String toString()>();

        $r4[0] = $r6;

        $r7 = virtualinvoke r1.<android.os.Bundle: java.lang.String toString()>();

        $r4[1] = $r7;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r5, "requestPing EasOperation %s, %s", $r4);

        return;
    }

    public static void <clinit>()
    {
        <com.android.exchange.eas.EasPing: long EXTRA_POST_TIMEOUT_MILLIS> = 5000L;

        <com.android.exchange.eas.EasPing: long MAXIMUM_HEARTBEAT_INCREMENT> = 300L;

        <com.android.exchange.eas.EasPing: long MAXIMUM_PING_HEARTBEAT> = 1680L;

        <com.android.exchange.eas.EasPing: long MINIMUM_PING_HEARTBEAT> = 480L;

        <com.android.exchange.eas.EasPing: long DEFAULT_PING_HEARTBEAT> = 480L;

        <com.android.exchange.eas.EasPing: java.lang.String WHERE_ACCOUNT_KEY_AND_SERVER_ID> = "accountKey=? and serverId=?";

        <com.android.exchange.eas.EasPing: java.lang.String TAG> = "Exchange";

        return;
    }
}
