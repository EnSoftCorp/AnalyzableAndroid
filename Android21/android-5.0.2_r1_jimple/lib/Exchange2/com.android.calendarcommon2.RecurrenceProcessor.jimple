public class com.android.calendarcommon2.RecurrenceProcessor extends java.lang.Object
{
    private android.text.format.Time mIterator;
    private android.text.format.Time mUntil;
    private java.lang.StringBuilder mStringBuilder;
    private android.text.format.Time mGenerated;
    private com.android.calendarcommon2.RecurrenceProcessor$DaySet mDays;
    private static final int MAX_ALLOWED_ITERATIONS;
    private static final java.lang.String TAG;
    private static final boolean SPEW;
    private static final int USE_ITERATOR;
    private static final int USE_BYLIST;
    private static final int[] DAYS_PER_MONTH;
    private static final int[] DAYS_IN_YEAR_PRECEDING_MONTH;

    public void <init>()
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        android.text.format.Time $r1, $r2, $r4;
        java.lang.StringBuilder $r3;
        com.android.calendarcommon2.RecurrenceProcessor$DaySet $r5;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.text.format.Time;

        specialinvoke $r1.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator> = $r1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mUntil> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.android.calendarcommon2.RecurrenceProcessor: java.lang.StringBuilder mStringBuilder> = $r3;

        $r4 = new android.text.format.Time;

        specialinvoke $r4.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mGenerated> = $r4;

        $r5 = new com.android.calendarcommon2.RecurrenceProcessor$DaySet;

        specialinvoke $r5.<com.android.calendarcommon2.RecurrenceProcessor$DaySet: void <init>(boolean)>(0);

        r0.<com.android.calendarcommon2.RecurrenceProcessor: com.android.calendarcommon2.RecurrenceProcessor$DaySet mDays> = $r5;

        return;
    }

    public long getLastOccurence(android.text.format.Time, com.android.calendarcommon2.RecurrenceSet) throws com.android.calendarcommon2.DateException
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        android.text.format.Time r1;
        com.android.calendarcommon2.RecurrenceSet r2;
        long $l0;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        r1 := @parameter0: android.text.format.Time;

        r2 := @parameter1: com.android.calendarcommon2.RecurrenceSet;

        $l0 = virtualinvoke r0.<com.android.calendarcommon2.RecurrenceProcessor: long getLastOccurence(android.text.format.Time,android.text.format.Time,com.android.calendarcommon2.RecurrenceSet)>(r1, null, r2);

        return $l0;
    }

    public long getLastOccurence(android.text.format.Time, android.text.format.Time, com.android.calendarcommon2.RecurrenceSet) throws com.android.calendarcommon2.DateException
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        android.text.format.Time r1, r2, $r13, $r15;
        com.android.calendarcommon2.RecurrenceSet r3;
        long l0, l3, $l4, $l8, $l9, l18, l21;
        boolean z0;
        com.android.calendarcommon2.EventRecurrence[] r4, $r6, $r8;
        int i1, i2, $i5, $i6, $i7, $i14, i16, i17, i19, i20;
        com.android.calendarcommon2.EventRecurrence r5;
        long[] $r7, $r9, $r10, $r11, r16, r17, r18;
        byte $b10, $b11, $b12, $b13, $b15;
        java.lang.String $r12, $r14;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        r1 := @parameter0: android.text.format.Time;

        r2 := @parameter1: android.text.format.Time;

        r3 := @parameter2: com.android.calendarcommon2.RecurrenceSet;

        l0 = -1L;

        z0 = 0;

        $r6 = r3.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        if $r6 == null goto label08;

        r4 = r3.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        i1 = lengthof r4;

        i2 = 0;

     label01:
        if i2 >= i1 goto label04;

        r5 = r4[i2];

        $i14 = r5.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i14 == 0 goto label02;

        z0 = 1;

        goto label03;

     label02:
        $r12 = r5.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        if $r12 == null goto label03;

        $r15 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        $r14 = r5.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        virtualinvoke $r15.<android.text.format.Time: boolean parse(java.lang.String)>($r14);

        $r13 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        l3 = virtualinvoke $r13.<android.text.format.Time: long toMillis(boolean)>(0);

        $b15 = l3 cmp l0;

        if $b15 <= 0 goto label03;

        l0 = l3;

     label03:
        i2 = i2 + 1;

        goto label01;

     label04:
        $b12 = l0 cmp -1L;

        if $b12 == 0 goto label07;

        $r11 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        if $r11 == null goto label07;

        r16 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        i16 = lengthof r16;

        i17 = 0;

     label05:
        if i17 >= i16 goto label07;

        l18 = r16[i17];

        $b13 = l18 cmp l0;

        if $b13 <= 0 goto label06;

        l0 = l18;

     label06:
        i17 = i17 + 1;

        goto label05;

     label07:
        $b11 = l0 cmp -1L;

        if $b11 == 0 goto label12;

        if z0 != 0 goto label12;

        return l0;

     label08:
        $r7 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        if $r7 == null goto label12;

        $r8 = r3.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules>;

        if $r8 != null goto label12;

        $r10 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] exdates>;

        if $r10 != null goto label12;

        r17 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        i19 = lengthof r17;

        i20 = 0;

     label09:
        if i20 >= i19 goto label11;

        l21 = r17[i20];

        $b10 = l21 cmp l0;

        if $b10 <= 0 goto label10;

        l0 = l21;

     label10:
        i20 = i20 + 1;

        goto label09;

     label11:
        return l0;

     label12:
        if z0 != 0 goto label13;

        $r9 = r3.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        if $r9 != null goto label13;

        if r2 == null goto label17;

     label13:
        $l4 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        if r2 == null goto label14;

        $l8 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        goto label15;

     label14:
        $l8 = -1L;

     label15:
        r18 = virtualinvoke r0.<com.android.calendarcommon2.RecurrenceProcessor: long[] expand(android.text.format.Time,com.android.calendarcommon2.RecurrenceSet,long,long)>(r1, r3, $l4, $l8);

        $i5 = lengthof r18;

        if $i5 != 0 goto label16;

        return 0L;

     label16:
        $i7 = lengthof r18;

        $i6 = $i7 - 1;

        $l9 = r18[$i6];

        return $l9;

     label17:
        return -1L;
    }

    private static boolean listContains(int[], int, int)
    {
        int[] r0;
        int i0, i1, i2, $i3;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $i3 = r0[i2];

        if $i3 != i1 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static boolean listContains(int[], int, int, int)
    {
        int[] r0;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        i4 = r0[i3];

        if i4 <= 0 goto label2;

        if i4 != i1 goto label3;

        return 1;

     label2:
        i2 = i2 + i4;

        if i2 != i1 goto label3;

        return 1;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 0;
    }

    private static int filter(com.android.calendarcommon2.EventRecurrence, android.text.format.Time)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        android.text.format.Time r1;
        boolean z0, $z1, $z2, $z3, z4, z5, z6, z7, z8, z9;
        int i0, i1, i2, i3, $i4, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38;
        int[] r2, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10;
        java.lang.String $r6, $r11;

        r0 := @parameter0: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter1: android.text.format.Time;

        i0 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if 6 < i0 goto label01;

        $i35 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        if $i35 <= 0 goto label01;

        $r18 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonth>;

        $i34 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        $i36 = r1.<android.text.format.Time: int month>;

        $i37 = $i36 + 1;

        z0 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int)>($r18, $i34, $i37);

        if z0 != 0 goto label01;

        return 1;

     label01:
        if 5 < i0 goto label02;

        $i28 = r0.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount>;

        if $i28 <= 0 goto label02;

        $r17 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byweekno>;

        $i33 = r0.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount>;

        $i32 = virtualinvoke r1.<android.text.format.Time: int getWeekNumber()>();

        $i31 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(9);

        z4 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r17, $i33, $i32, $i31);

        if z4 != 0 goto label02;

        return 2;

     label02:
        if 4 < i0 goto label08;

        $i17 = r0.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount>;

        if $i17 <= 0 goto label03;

        $r16 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byyearday>;

        $i26 = r0.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount>;

        $i30 = r1.<android.text.format.Time: int yearDay>;

        $i29 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(8);

        z5 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r16, $i26, $i30, $i29);

        if z5 != 0 goto label03;

        return 3;

     label03:
        $i21 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i21 <= 0 goto label04;

        $r15 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        $i24 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        $i23 = r1.<android.text.format.Time: int monthDay>;

        $i27 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(4);

        z6 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r15, $i24, $i23, $i27);

        if z6 != 0 goto label04;

        return 4;

     label04:
        $i22 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i22 <= 0 goto label08;

        r2 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        i1 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        $i20 = r1.<android.text.format.Time: int weekDay>;

        i2 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>($i20);

        i3 = 0;

     label05:
        if i3 >= i1 goto label07;

        $i25 = r2[i3];

        if $i25 != i2 goto label06;

        goto label08;

     label06:
        i3 = i3 + 1;

        goto label05;

     label07:
        return 5;

     label08:
        if 3 < i0 goto label09;

        $r14 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byhour>;

        $i15 = r0.<com.android.calendarcommon2.EventRecurrence: int byhourCount>;

        $i18 = r1.<android.text.format.Time: int hour>;

        $i19 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(3);

        z7 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r14, $i15, $i18, $i19);

        if z7 != 0 goto label09;

        return 6;

     label09:
        if 2 < i0 goto label10;

        $r13 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byminute>;

        $i13 = r0.<com.android.calendarcommon2.EventRecurrence: int byminuteCount>;

        $i14 = r1.<android.text.format.Time: int minute>;

        $i16 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(2);

        z8 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r13, $i13, $i14, $i16);

        if z8 != 0 goto label10;

        return 7;

     label10:
        if 1 < i0 goto label11;

        $r12 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysecond>;

        $i10 = r0.<com.android.calendarcommon2.EventRecurrence: int bysecondCount>;

        $i12 = r1.<android.text.format.Time: int second>;

        $i11 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(1);

        z9 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean listContains(int[],int,int,int)>($r12, $i10, $i12, $i11);

        if z9 != 0 goto label11;

        return 8;

     label11:
        $i4 = r0.<com.android.calendarcommon2.EventRecurrence: int bysetposCount>;

        if $i4 <= 0 goto label16;

        if i0 != 6 goto label15;

        $i7 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i7 <= 0 goto label15;

        $i6 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        i38 = $i6 - 1;

     label12:
        if i38 < 0 goto label14;

        $r7 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i8 = $r7[i38];

        if $i8 == 0 goto label13;

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RecurrenceProcessor", 2);

        if $z3 == 0 goto label16;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYSETPOS not supported with these rules: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RecurrenceProcessor", $r11);

        goto label16;

     label13:
        i38 = i38 + -1;

        goto label12;

     label14:
        $z2 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean filterMonthlySetPos(com.android.calendarcommon2.EventRecurrence,android.text.format.Time)>(r0, r1);

        if $z2 != 0 goto label16;

        return 9;

     label15:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("RecurrenceProcessor", 2);

        if $z1 == 0 goto label16;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYSETPOS not supported with these rules: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("RecurrenceProcessor", $r6);

     label16:
        return 0;
    }

    private static boolean filterMonthlySetPos(com.android.calendarcommon2.EventRecurrence, android.text.format.Time)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        android.text.format.Time r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24;
        int[] r2, $r4, $r5;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter1: android.text.format.Time;

        $i7 = r1.<android.text.format.Time: int weekDay>;

        $i6 = r1.<android.text.format.Time: int monthDay>;

        $i8 = $i7 - $i6;

        $i9 = $i8 + 36;

        i0 = $i9 % 7;

        i1 = 0;

        i2 = 0;

     label01:
        $i10 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i2 >= $i10 goto label02;

        $r5 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i21 = $r5[i2];

        i1 = i1 | $i21;

        i2 = i2 + 1;

        goto label01;

     label02:
        i22 = virtualinvoke r1.<android.text.format.Time: int getActualMaximum(int)>(4);

        r2 = newarray (int)[i22];

        i3 = 0;

        i4 = 1;

     label03:
        if i4 > i22 goto label06;

        i5 = 65536 << i0;

        $i18 = i1 & i5;

        if $i18 == 0 goto label04;

        $i20 = i3;

        i3 = i3 + 1;

        r2[$i20] = i4;

     label04:
        i0 = i0 + 1;

        if i0 != 7 goto label05;

        i0 = 0;

     label05:
        i4 = i4 + 1;

        goto label03;

     label06:
        $i11 = r0.<com.android.calendarcommon2.EventRecurrence: int bysetposCount>;

        i23 = $i11 - 1;

     label07:
        if i23 < 0 goto label13;

        $r4 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysetpos>;

        i24 = $r4[i23];

        if i24 <= 0 goto label09;

        if i24 <= i3 goto label08;

        goto label12;

     label08:
        $i17 = i24 - 1;

        $i19 = r2[$i17];

        $i16 = r1.<android.text.format.Time: int monthDay>;

        if $i19 != $i16 goto label12;

        return 1;

     label09:
        if i24 >= 0 goto label11;

        $i13 = i3 + i24;

        if $i13 >= 0 goto label10;

        goto label12;

     label10:
        $i12 = i3 + i24;

        $i14 = r2[$i12];

        $i15 = r1.<android.text.format.Time: int monthDay>;

        if $i14 != $i15 goto label12;

        return 1;

     label11:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("invalid bysetpos value");

        throw $r3;

     label12:
        i23 = i23 + -1;

        goto label07;

     label13:
        return 0;
    }

    int generateByList(int, int, int)
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        int i0, i1, i2;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i2 < i1 goto label1;

        return 0;

     label1:
        if i0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private static boolean useBYX(int, int, int)
    {
        int i0, i1, i2;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 <= i1 goto label1;

        if i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long[] expand(android.text.format.Time, com.android.calendarcommon2.RecurrenceSet, long, long) throws com.android.calendarcommon2.DateException
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        android.text.format.Time r1, $r8, $r9, $r10, $r11, $r18, $r19, $r20, $r21, $r23, $r26, $r27, $r28;
        com.android.calendarcommon2.RecurrenceSet r2;
        long l0, l1, l2, l3, l6, $l9, $l10, l13, l18, l19;
        java.lang.String r3;
        java.util.TreeSet r4, $r13;
        com.android.calendarcommon2.EventRecurrence[] r5, $r12, $r14, r30;
        int i4, i5, $i8, i11, i12, i14, i15, i16, i17, i20, i21;
        java.lang.Long r6, $r24, $r25;
        com.android.calendarcommon2.EventRecurrence r7, r31;
        byte $b7;
        long[] $r15, $r16, $r22, r29, r32, r33;
        boolean $z0, $z1;
        java.lang.Object $r17;
        java.util.Iterator r34;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        r1 := @parameter0: android.text.format.Time;

        r2 := @parameter1: com.android.calendarcommon2.RecurrenceSet;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        r3 = r1.<android.text.format.Time: java.lang.String timezone>;

        $r9 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        virtualinvoke $r9.<android.text.format.Time: void clear(java.lang.String)>(r3);

        $r8 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mGenerated>;

        virtualinvoke $r8.<android.text.format.Time: void clear(java.lang.String)>(r3);

        $r11 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        virtualinvoke $r11.<android.text.format.Time: void set(long)>(l0);

        $r10 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        l2 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>($r10);

        $b7 = l1 cmp -1L;

        if $b7 == 0 goto label01;

        $r28 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        virtualinvoke $r28.<android.text.format.Time: void set(long)>(l1);

        $r27 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        l3 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>($r27);

        goto label02;

     label01:
        l3 = 9223372036854775807L;

     label02:
        $r13 = new java.util.TreeSet;

        specialinvoke $r13.<java.util.TreeSet: void <init>()>();

        r4 = $r13;

        $r12 = r2.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        if $r12 == null goto label04;

        r5 = r2.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        i4 = lengthof r5;

        i5 = 0;

     label03:
        if i5 >= i4 goto label04;

        r7 = r5[i5];

        virtualinvoke r0.<com.android.calendarcommon2.RecurrenceProcessor: void expand(android.text.format.Time,com.android.calendarcommon2.EventRecurrence,long,long,boolean,java.util.TreeSet)>(r1, r7, l2, l3, 1, r4);

        i5 = i5 + 1;

        goto label03;

     label04:
        $r15 = r2.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        if $r15 == null goto label06;

        r29 = r2.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        i11 = lengthof r29;

        i12 = 0;

     label05:
        if i12 >= i11 goto label06;

        l13 = r29[i12];

        $r23 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        virtualinvoke $r23.<android.text.format.Time: void set(long)>(l13);

        $r26 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        l6 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>($r26);

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l6);

        virtualinvoke r4.<java.util.TreeSet: boolean add(java.lang.Object)>($r25);

        i12 = i12 + 1;

        goto label05;

     label06:
        $r14 = r2.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules>;

        if $r14 == null goto label08;

        r30 = r2.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules>;

        i14 = lengthof r30;

        i15 = 0;

     label07:
        if i15 >= i14 goto label08;

        r31 = r30[i15];

        virtualinvoke r0.<com.android.calendarcommon2.RecurrenceProcessor: void expand(android.text.format.Time,com.android.calendarcommon2.EventRecurrence,long,long,boolean,java.util.TreeSet)>(r1, r31, l2, l3, 0, r4);

        i15 = i15 + 1;

        goto label07;

     label08:
        $r16 = r2.<com.android.calendarcommon2.RecurrenceSet: long[] exdates>;

        if $r16 == null goto label10;

        r32 = r2.<com.android.calendarcommon2.RecurrenceSet: long[] exdates>;

        i16 = lengthof r32;

        i17 = 0;

     label09:
        if i17 >= i16 goto label10;

        l18 = r32[i17];

        $r20 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        virtualinvoke $r20.<android.text.format.Time: void set(long)>(l18);

        $r21 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        l19 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>($r21);

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l19);

        virtualinvoke r4.<java.util.TreeSet: boolean remove(java.lang.Object)>($r24);

        i17 = i17 + 1;

        goto label09;

     label10:
        $z0 = virtualinvoke r4.<java.util.TreeSet: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        $r22 = newarray (long)[0];

        return $r22;

     label11:
        i20 = virtualinvoke r4.<java.util.TreeSet: int size()>();

        r33 = newarray (long)[i20];

        i21 = 0;

        r34 = virtualinvoke r4.<java.util.TreeSet: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r17 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Long) $r17;

        $r19 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        $l9 = virtualinvoke r6.<java.lang.Long: long longValue()>();

        staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: void setTimeFromLongValue(android.text.format.Time,long)>($r19, $l9);

        $i8 = i21;

        i21 = i21 + 1;

        $r18 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        $l10 = virtualinvoke $r18.<android.text.format.Time: long toMillis(boolean)>(1);

        r33[$i8] = $l10;

        goto label12;

     label13:
        return r33;
    }

    public void expand(android.text.format.Time, com.android.calendarcommon2.EventRecurrence, long, long, boolean, java.util.TreeSet) throws com.android.calendarcommon2.DateException
    {
        com.android.calendarcommon2.RecurrenceProcessor r0;
        android.text.format.Time r1, r4, r5, r7;
        com.android.calendarcommon2.EventRecurrence r2;
        long l0, l1, l2, l11, l28;
        boolean z0, z1, z2, z3, z4, z5, $z8, $z10;
        java.util.TreeSet r3;
        int i3, i5, i6, i7, i8, i9, i10, i12, i13, i14, i15, i16, i17, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i29, i30, i32, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i53, $i54, $i57, $i59, $i60, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i73, $i74, $i75, $i76, i81, i82, i83, i84, i85;
        java.lang.StringBuilder r6, $r12, $r14, $r15, $r21, $r22, $r23, $r24, $r28, $r29, $r30, $r32, $r33, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r50, $r52, $r53, $r54, $r56, $r57, $r58, $r59;
        byte b4, $b31, $b33, $b52, $b55, $b56, $b58, $b61, $b62, $b78, $b79;
        com.android.calendarcommon2.RecurrenceProcessor$DaySet r8;
        java.lang.String r9, $r10, $r11, $r26, $r27, $r34, $r36, $r46, $r51;
        java.lang.RuntimeException $r13, $r55, r61;
        java.lang.Long $r16, $r17, $r48;
        int[] $r18, $r19, $r20, $r25;
        com.android.calendarcommon2.DateException $r31, $r47, $r49, r60;

        r0 := @this: com.android.calendarcommon2.RecurrenceProcessor;

        r1 := @parameter0: android.text.format.Time;

        r2 := @parameter1: com.android.calendarcommon2.EventRecurrence;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        z0 := @parameter4: boolean;

        r3 := @parameter5: java.util.TreeSet;

        staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: void unsafeNormalize(android.text.format.Time)>(r1);

        l2 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>(r1);

        i3 = 0;

        if z0 == 0 goto label01;

        $b78 = l2 cmp l0;

        if $b78 < 0 goto label01;

        $b79 = l2 cmp l1;

        if $b79 >= 0 goto label01;

        $r48 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r3.<java.util.TreeSet: boolean add(java.lang.Object)>($r48);

        i3 = i3 + 1;

     label01:
        r4 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mIterator>;

        r5 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mUntil>;

        r6 = r0.<com.android.calendarcommon2.RecurrenceProcessor: java.lang.StringBuilder mStringBuilder>;

        r7 = r0.<com.android.calendarcommon2.RecurrenceProcessor: android.text.format.Time mGenerated>;

        r8 = r0.<com.android.calendarcommon2.RecurrenceProcessor: com.android.calendarcommon2.RecurrenceProcessor$DaySet mDays>;

     label02:
        virtualinvoke r8.<com.android.calendarcommon2.RecurrenceProcessor$DaySet: void setRecurrence(com.android.calendarcommon2.EventRecurrence)>(r2);

        $b31 = l1 cmp 9223372036854775807L;

        if $b31 != 0 goto label03;

        $r36 = r2.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        if $r36 != null goto label03;

        $i74 = r2.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i74 != 0 goto label03;

        $r47 = new com.android.calendarcommon2.DateException;

        specialinvoke $r47.<com.android.calendarcommon2.DateException: void <init>(java.lang.String)>("No range end provided for a recurrence that has no UNTIL or COUNT.");

        throw $r47;

     label03:
        i6 = r2.<com.android.calendarcommon2.EventRecurrence: int interval>;

        i5 = r2.<com.android.calendarcommon2.EventRecurrence: int freq>;

        tableswitch(i5)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label10;
            default: goto label11;
        };

     label04:
        b4 = 1;

        goto label12;

     label05:
        b4 = 2;

        goto label12;

     label06:
        b4 = 3;

        goto label12;

     label07:
        b4 = 4;

        goto label12;

     label08:
        b4 = 4;

        $i73 = r2.<com.android.calendarcommon2.EventRecurrence: int interval>;

        i6 = 7 * $i73;

        if i6 > 0 goto label12;

        i6 = 7;

        goto label12;

     label09:
        b4 = 5;

        goto label12;

     label10:
        b4 = 6;

        goto label12;

     label11:
        $r31 = new com.android.calendarcommon2.DateException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad freq=");

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<com.android.calendarcommon2.DateException: void <init>(java.lang.String)>($r34);

        throw $r31;

     label12:
        if i6 > 0 goto label13;

        i6 = 1;

     label13:
        i7 = r2.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        z1 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean useBYX(int,int,int)>(i5, 6, i7);

        if i5 < 5 goto label15;

        $i75 = r2.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i75 > 0 goto label14;

        $i76 = r2.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i76 <= 0 goto label15;

     label14:
        $z10 = 1;

        goto label16;

     label15:
        $z10 = 0;

     label16:
        z2 = $z10;

        i8 = r2.<com.android.calendarcommon2.EventRecurrence: int byhourCount>;

        z3 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean useBYX(int,int,int)>(i5, 3, i8);

        i9 = r2.<com.android.calendarcommon2.EventRecurrence: int byminuteCount>;

        z4 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean useBYX(int,int,int)>(i5, 2, i9);

        i10 = r2.<com.android.calendarcommon2.EventRecurrence: int bysecondCount>;

        z5 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean useBYX(int,int,int)>(i5, 1, i10);

        virtualinvoke r4.<android.text.format.Time: void set(android.text.format.Time)>(r1);

        if b4 != 5 goto label17;

        if z2 == 0 goto label17;

        r4.<android.text.format.Time: int monthDay> = 1;

     label17:
        $r10 = r2.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        if $r10 == null goto label19;

        r9 = r2.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $i71 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i71 != 15 goto label18;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);

        r9 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        virtualinvoke r5.<android.text.format.Time: boolean parse(java.lang.String)>(r9);

        $r26 = r1.<android.text.format.Time: java.lang.String timezone>;

        virtualinvoke r5.<android.text.format.Time: void switchTimezone(java.lang.String)>($r26);

        l11 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>(r5);

        goto label20;

     label19:
        l11 = 9223372036854775807L;

     label20:
        virtualinvoke r6.<java.lang.StringBuilder: void ensureCapacity(int)>(15);

        virtualinvoke r6.<java.lang.StringBuilder: void setLength(int)>(15);

        i14 = 0;

     label21:
        i15 = 0;

        $i35 = i14;

        i14 = i14 + 1;

        if $i35 <= 2000 goto label22;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recurrence processing stuck with r=");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeStart=");

        $r30 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeEnd=");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecurrenceProcessor", $r27);

        goto label67;

     label22:
        staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: void unsafeNormalize(android.text.format.Time)>(r4);

        i12 = r4.<android.text.format.Time: int year>;

        $i34 = r4.<android.text.format.Time: int month>;

        i13 = $i34 + 1;

        i18 = r4.<android.text.format.Time: int monthDay>;

        i19 = r4.<android.text.format.Time: int hour>;

        i16 = r4.<android.text.format.Time: int minute>;

        i17 = r4.<android.text.format.Time: int second>;

        virtualinvoke r7.<android.text.format.Time: void set(android.text.format.Time)>(r4);

     label23:
        if z1 == 0 goto label24;

        $r25 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bymonth>;

        $i69 = $r25[i15];

        goto label25;

     label24:
        $i69 = i13;

     label25:
        i22 = $i69;

        i81 = i22 + -1;

        i23 = 1;

        i20 = 0;

        if z2 == 0 goto label27;

        if i5 != 5 goto label26;

        $i65 = r4.<android.text.format.Time: int weekDay>;

        $i67 = r2.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        $i66 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int day2TimeDay(int)>($i67);

        $i63 = $i65 - $i66;

        $i64 = $i63 + 7;

        i21 = $i64 % 7;

        $i70 = r4.<android.text.format.Time: int monthDay>;

        i23 = $i70 - i21;

        i20 = i23 + 6;

        goto label27;

     label26:
        i20 = virtualinvoke r7.<android.text.format.Time: int getActualMaximum(int)>(4);

     label27:
        if z2 == 0 goto label29;

        $z8 = virtualinvoke r8.<com.android.calendarcommon2.RecurrenceProcessor$DaySet: boolean get(android.text.format.Time,int)>(r4, i23);

        if $z8 != 0 goto label28;

        i23 = i23 + 1;

        goto label50;

     label28:
        i82 = i23;

        goto label30;

     label29:
        i82 = i18;

     label30:
        i26 = 0;

     label31:
        if z3 == 0 goto label32;

        $r18 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byhour>;

        $i68 = $r18[i26];

        goto label33;

     label32:
        $i68 = i19;

     label33:
        i27 = $i68;

        i24 = 0;

     label34:
        if z4 == 0 goto label35;

        $r19 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byminute>;

        $i59 = $r19[i24];

        goto label36;

     label35:
        $i59 = i16;

     label36:
        i25 = $i59;

        i30 = 0;

     label37:
        if z5 == 0 goto label38;

        $r20 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bysecond>;

        $i60 = $r20[i30];

        goto label39;

     label38:
        $i60 = i17;

     label39:
        i29 = $i60;

        virtualinvoke r7.<android.text.format.Time: void set(int,int,int,int,int,int)>(i29, i25, i27, i82, i81, i12);

        staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: void unsafeNormalize(android.text.format.Time)>(r7);

        l28 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: long normDateTimeComparisonValue(android.text.format.Time)>(r7);

        $b33 = l28 cmp l2;

        if $b33 < 0 goto label46;

        i32 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int filter(com.android.calendarcommon2.EventRecurrence,android.text.format.Time)>(r2, r7);

        if 0 != i32 goto label46;

        $b52 = l2 cmp l28;

        if $b52 != 0 goto label40;

        if z0 == 0 goto label40;

        $b62 = l2 cmp l0;

        if $b62 < 0 goto label40;

        $b61 = l2 cmp l1;

        if $b61 < 0 goto label41;

     label40:
        i3 = i3 + 1;

     label41:
        $b56 = l28 cmp l11;

        if $b56 <= 0 goto label42;

        goto label67;

     label42:
        $b55 = l28 cmp l1;

        if $b55 < 0 goto label43;

        goto label67;

     label43:
        $b58 = l28 cmp l0;

        if $b58 < 0 goto label45;

        if z0 == 0 goto label44;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l28);

        virtualinvoke r3.<java.util.TreeSet: boolean add(java.lang.Object)>($r17);

        goto label45;

     label44:
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l28);

        virtualinvoke r3.<java.util.TreeSet: boolean remove(java.lang.Object)>($r16);

     label45:
        $i57 = r2.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i57 <= 0 goto label46;

        $i54 = r2.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i54 != i3 goto label46;

        goto label67;

     label46:
        i30 = i30 + 1;

        if z5 == 0 goto label47;

        if i30 < i10 goto label37;

     label47:
        i24 = i24 + 1;

        if z4 == 0 goto label48;

        if i24 < i9 goto label34;

     label48:
        i26 = i26 + 1;

        if z3 == 0 goto label49;

        if i26 < i8 goto label31;

     label49:
        i23 = i23 + 1;

     label50:
        if z2 == 0 goto label51;

        if i23 <= i20 goto label27;

     label51:
        i15 = i15 + 1;

        if z1 == 0 goto label52;

        if i15 < i7 goto label23;

     label52:
        i83 = r4.<android.text.format.Time: int monthDay>;

        virtualinvoke r7.<android.text.format.Time: void set(android.text.format.Time)>(r4);

        i84 = 1;

     label53:
        i85 = i6 * i84;

        tableswitch(b4)
        {
            case 1: goto label54;
            case 2: goto label55;
            case 3: goto label56;
            case 4: goto label57;
            case 5: goto label58;
            case 6: goto label59;
            case 7: goto label60;
            case 8: goto label61;
            default: goto label62;
        };

     label54:
        $i40 = r4.<android.text.format.Time: int second>;

        $i41 = $i40 + i85;

        r4.<android.text.format.Time: int second> = $i41;

        goto label63;

     label55:
        $i47 = r4.<android.text.format.Time: int minute>;

        $i53 = $i47 + i85;

        r4.<android.text.format.Time: int minute> = $i53;

        goto label63;

     label56:
        $i45 = r4.<android.text.format.Time: int hour>;

        $i46 = $i45 + i85;

        r4.<android.text.format.Time: int hour> = $i46;

        goto label63;

     label57:
        $i51 = r4.<android.text.format.Time: int monthDay>;

        $i44 = $i51 + i85;

        r4.<android.text.format.Time: int monthDay> = $i44;

        goto label63;

     label58:
        $i49 = r4.<android.text.format.Time: int month>;

        $i50 = $i49 + i85;

        r4.<android.text.format.Time: int month> = $i50;

        goto label63;

     label59:
        $i39 = r4.<android.text.format.Time: int year>;

        $i48 = $i39 + i85;

        r4.<android.text.format.Time: int year> = $i48;

        goto label63;

     label60:
        $i37 = r4.<android.text.format.Time: int monthDay>;

        $i38 = $i37 + i85;

        r4.<android.text.format.Time: int monthDay> = $i38;

        goto label63;

     label61:
        $i43 = r4.<android.text.format.Time: int monthDay>;

        $i36 = $i43 + i85;

        r4.<android.text.format.Time: int monthDay> = $i36;

        goto label63;

     label62:
        $r13 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad field=");

        $r12 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b4);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label63:
        staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: void unsafeNormalize(android.text.format.Time)>(r4);

        if b4 == 6 goto label64;

        if b4 == 5 goto label64;

        goto label66;

     label64:
        $i42 = r4.<android.text.format.Time: int monthDay>;

        if $i42 != i83 goto label65;

        goto label66;

     label65:
        i84 = i84 + 1;

        virtualinvoke r4.<android.text.format.Time: void set(android.text.format.Time)>(r7);

        goto label53;

     label66:
        goto label21;

     label67:
        goto label70;

     label68:
        $r49 := @caughtexception;

        r60 = $r49;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DateException with r=");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeStart=");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeEnd=");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecurrenceProcessor", $r46);

        throw r60;

     label69:
        $r55 := @caughtexception;

        r61 = $r55;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RuntimeException with r=");

        $r59 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeStart=");

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rangeEnd=");

        $r52 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecurrenceProcessor", $r51);

        throw r61;

     label70:
        return;

        catch com.android.calendarcommon2.DateException from label02 to label67 with label68;
        catch java.lang.RuntimeException from label02 to label67 with label69;
    }

    static void unsafeNormalize(android.text.format.Time)
    {
        android.text.format.Time r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31, i32, i33;

        r0 := @parameter0: android.text.format.Time;

        i0 = r0.<android.text.format.Time: int second>;

        i1 = r0.<android.text.format.Time: int minute>;

        i2 = r0.<android.text.format.Time: int hour>;

        i3 = r0.<android.text.format.Time: int monthDay>;

        i4 = r0.<android.text.format.Time: int month>;

        i5 = r0.<android.text.format.Time: int year>;

        if i0 >= 0 goto label01;

        $i22 = i0 - 59;

        goto label02;

     label01:
        $i22 = i0;

     label02:
        i6 = $i22 / 60;

        $i10 = i6 * 60;

        i24 = i0 - $i10;

        i25 = i1 + i6;

        if i25 >= 0 goto label03;

        $i23 = i25 - 59;

        goto label04;

     label03:
        $i23 = i25;

     label04:
        i7 = $i23 / 60;

        $i11 = i7 * 60;

        i26 = i25 - $i11;

        i27 = i2 + i7;

        if i27 >= 0 goto label05;

        $i21 = i27 - 23;

        goto label06;

     label05:
        $i21 = i27;

     label06:
        i8 = $i21 / 24;

        $i12 = i8 * 24;

        i28 = i27 - $i12;

        i29 = i3 + i8;

     label07:
        if i29 > 0 goto label10;

        if i4 <= 1 goto label08;

        $i19 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int yearLength(int)>(i5);

        goto label09;

     label08:
        $i20 = i5 - 1;

        $i19 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int yearLength(int)>($i20);

     label09:
        i9 = $i19;

        i29 = i29 + i9;

        i5 = i5 + -1;

        goto label07;

     label10:
        if i4 >= 0 goto label11;

        $i15 = i4 + 1;

        $i18 = $i15 / 12;

        i30 = $i18 - 1;

        i5 = i5 + i30;

        $i17 = 12 * i30;

        i4 = i4 - $i17;

        goto label12;

     label11:
        if i4 < 12 goto label12;

        i31 = i4 / 12;

        i5 = i5 + i31;

        $i16 = 12 * i31;

        i4 = i4 - $i16;

     label12:
        if i4 != 0 goto label13;

        i32 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int yearLength(int)>(i5);

        if i29 <= i32 goto label13;

        i5 = i5 + 1;

        i29 = i29 - i32;

     label13:
        i33 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int monthLength(int,int)>(i5, i4);

        if i29 <= i33 goto label15;

        i29 = i29 - i33;

        i4 = i4 + 1;

        if i4 < 12 goto label14;

        i4 = i4 + -12;

        i5 = i5 + 1;

     label14:
        goto label12;

     label15:
        r0.<android.text.format.Time: int second> = i24;

        r0.<android.text.format.Time: int minute> = i26;

        r0.<android.text.format.Time: int hour> = i28;

        r0.<android.text.format.Time: int monthDay> = i29;

        r0.<android.text.format.Time: int month> = i4;

        r0.<android.text.format.Time: int year> = i5;

        $i13 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int weekDay(int,int,int)>(i5, i4, i29);

        r0.<android.text.format.Time: int weekDay> = $i13;

        $i14 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: int yearDay(int,int,int)>(i5, i4, i29);

        r0.<android.text.format.Time: int yearDay> = $i14;

        return;
    }

    static boolean isLeapYear(int)
    {
        int i0, $i1, $i2, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 % 4;

        if $i1 != 0 goto label2;

        $i2 = i0 % 100;

        if $i2 != 0 goto label1;

        $i3 = i0 % 400;

        if $i3 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static int yearLength(int)
    {
        int i0;
        boolean $z0;
        short $s1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label1;

        $s1 = 366;

        goto label2;

     label1:
        $s1 = 365;

     label2:
        return $s1;
    }

    static int monthLength(int, int)
    {
        int i0, i1, i2;
        int[] $r0;
        boolean $z0;
        byte $b3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <com.android.calendarcommon2.RecurrenceProcessor: int[] DAYS_PER_MONTH>;

        i2 = $r0[i1];

        if i2 == 28 goto label1;

        return i2;

     label1:
        $z0 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label2;

        $b3 = 29;

        goto label3;

     label2:
        $b3 = 28;

     label3:
        return $b3;
    }

    static int weekDay(int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i1 > 1 goto label1;

        i1 = i1 + 12;

        i0 = i0 + -1;

     label1:
        $i3 = 13 * i1;

        $i4 = $i3 - 14;

        $i5 = $i4 / 5;

        $i6 = i2 + $i5;

        $i8 = $i6 + i0;

        $i7 = i0 / 4;

        $i10 = $i8 + $i7;

        $i9 = i0 / 100;

        $i12 = $i10 - $i9;

        $i11 = i0 / 400;

        $i13 = $i12 + $i11;

        $i14 = $i13 % 7;

        return $i14;
    }

    static int yearDay(int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;
        int[] $r0;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = <com.android.calendarcommon2.RecurrenceProcessor: int[] DAYS_IN_YEAR_PRECEDING_MONTH>;

        $i4 = $r0[i1];

        $i5 = $i4 + i2;

        i3 = $i5 - 1;

        if i1 < 2 goto label1;

        $z0 = staticinvoke <com.android.calendarcommon2.RecurrenceProcessor: boolean isLeapYear(int)>(i0);

        if $z0 == 0 goto label1;

        i3 = i3 + 1;

     label1:
        return i3;
    }

    private static final long normDateTimeComparisonValue(android.text.format.Time)
    {
        android.text.format.Time r0;
        int $i0, $i2, $i3, $i6, $i7, $i10, $i11, $i14, $i16, $i17;
        long $l1, $l4, $l5, $l8, $l9, $l12, $l13, $l15, $l18, $l19, $l20, $l21;

        r0 := @parameter0: android.text.format.Time;

        $i0 = r0.<android.text.format.Time: int year>;

        $l1 = (long) $i0;

        $l5 = $l1 << 26;

        $i2 = r0.<android.text.format.Time: int month>;

        $i3 = $i2 << 22;

        $l4 = (long) $i3;

        $l9 = $l5 + $l4;

        $i6 = r0.<android.text.format.Time: int monthDay>;

        $i7 = $i6 << 17;

        $l8 = (long) $i7;

        $l13 = $l9 + $l8;

        $i10 = r0.<android.text.format.Time: int hour>;

        $i11 = $i10 << 12;

        $l12 = (long) $i11;

        $l18 = $l13 + $l12;

        $i14 = r0.<android.text.format.Time: int minute>;

        $i16 = $i14 << 6;

        $l15 = (long) $i16;

        $l19 = $l18 + $l15;

        $i17 = r0.<android.text.format.Time: int second>;

        $l20 = (long) $i17;

        $l21 = $l19 + $l20;

        return $l21;
    }

    private static final void setTimeFromLongValue(android.text.format.Time, long)
    {
        android.text.format.Time r0;
        long l0, $l1, $l3, $l6, $l9, $l12, $l14;
        int $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i13, $i15, $i16;

        r0 := @parameter0: android.text.format.Time;

        l0 := @parameter1: long;

        $l1 = l0 >> 26;

        $i2 = (int) $l1;

        r0.<android.text.format.Time: int year> = $i2;

        $l3 = l0 >> 22;

        $i4 = (int) $l3;

        $i5 = $i4 & 15;

        r0.<android.text.format.Time: int month> = $i5;

        $l6 = l0 >> 17;

        $i7 = (int) $l6;

        $i8 = $i7 & 31;

        r0.<android.text.format.Time: int monthDay> = $i8;

        $l9 = l0 >> 12;

        $i10 = (int) $l9;

        $i11 = $i10 & 31;

        r0.<android.text.format.Time: int hour> = $i11;

        $l12 = l0 >> 6;

        $i13 = (int) $l12;

        $i15 = $i13 & 63;

        r0.<android.text.format.Time: int minute> = $i15;

        $l14 = l0 & 63L;

        $i16 = (int) $l14;

        r0.<android.text.format.Time: int second> = $i16;

        return;
    }

    static void <clinit>()
    {
        int[] $r0, $r1;

        <com.android.calendarcommon2.RecurrenceProcessor: int USE_BYLIST> = 1;

        <com.android.calendarcommon2.RecurrenceProcessor: int USE_ITERATOR> = 0;

        <com.android.calendarcommon2.RecurrenceProcessor: boolean SPEW> = 0;

        <com.android.calendarcommon2.RecurrenceProcessor: java.lang.String TAG> = "RecurrenceProcessor";

        <com.android.calendarcommon2.RecurrenceProcessor: int MAX_ALLOWED_ITERATIONS> = 2000;

        $r0 = newarray (int)[12];

        $r0[0] = 31;

        $r0[1] = 28;

        $r0[2] = 31;

        $r0[3] = 30;

        $r0[4] = 31;

        $r0[5] = 30;

        $r0[6] = 31;

        $r0[7] = 31;

        $r0[8] = 30;

        $r0[9] = 31;

        $r0[10] = 30;

        $r0[11] = 31;

        <com.android.calendarcommon2.RecurrenceProcessor: int[] DAYS_PER_MONTH> = $r0;

        $r1 = newarray (int)[12];

        $r1[0] = 0;

        $r1[1] = 31;

        $r1[2] = 59;

        $r1[3] = 90;

        $r1[4] = 120;

        $r1[5] = 151;

        $r1[6] = 180;

        $r1[7] = 212;

        $r1[8] = 243;

        $r1[9] = 273;

        $r1[10] = 304;

        $r1[11] = 334;

        <com.android.calendarcommon2.RecurrenceProcessor: int[] DAYS_IN_YEAR_PRECEDING_MONTH> = $r1;

        return;
    }
}
