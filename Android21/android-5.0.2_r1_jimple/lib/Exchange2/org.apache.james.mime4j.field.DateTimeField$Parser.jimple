public class org.apache.james.mime4j.field.DateTimeField$Parser extends java.lang.Object implements org.apache.james.mime4j.field.FieldParser
{
    private static org.apache.james.mime4j.Log log;

    public void <init>()
    {
        org.apache.james.mime4j.field.DateTimeField$Parser r0;

        r0 := @this: org.apache.james.mime4j.field.DateTimeField$Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.james.mime4j.field.Field parse(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.field.DateTimeField$Parser r0;
        java.lang.String r1, r2, r3, $r15, $r17, r19;
        java.util.Date r4;
        org.apache.james.mime4j.field.datetime.parser.ParseException r5, r6, $r9;
        org.apache.james.mime4j.field.datetime.DateTime $r7;
        org.apache.james.mime4j.field.DateTimeField $r8;
        org.apache.james.mime4j.Log $r10, $r12;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13, $r14, $r16, $r18;

        r0 := @this: org.apache.james.mime4j.field.DateTimeField$Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 = null;

        r5 = null;

        r19 = staticinvoke <com.android.mail.utils.LogUtils: java.lang.String cleanUpMimeDate(java.lang.String)>(r2);

     label1:
        $r7 = staticinvoke <org.apache.james.mime4j.field.datetime.DateTime: org.apache.james.mime4j.field.datetime.DateTime parse(java.lang.String)>(r19);

        r4 = virtualinvoke $r7.<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()>();

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r6 = $r9;

        $r10 = <org.apache.james.mime4j.field.DateTimeField$Parser: org.apache.james.mime4j.Log log>;

        $z0 = virtualinvoke $r10.<org.apache.james.mime4j.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r12 = <org.apache.james.mime4j.field.DateTimeField$Parser: org.apache.james.mime4j.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing value \'");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $r15 = virtualinvoke r6.<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<org.apache.james.mime4j.Log: void debug(java.lang.Object)>($r17);

     label4:
        r5 = r6;

     label5:
        $r8 = new org.apache.james.mime4j.field.DateTimeField;

        specialinvoke $r8.<org.apache.james.mime4j.field.DateTimeField: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Date,org.apache.james.mime4j.field.datetime.parser.ParseException)>(r1, r19, r3, r4, r5);

        return $r8;

        catch org.apache.james.mime4j.field.datetime.parser.ParseException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.Log $r0;

        $r0 = staticinvoke <org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)>(class "org/apache/james/mime4j/field/DateTimeField$Parser");

        <org.apache.james.mime4j.field.DateTimeField$Parser: org.apache.james.mime4j.Log log> = $r0;

        return;
    }
}
