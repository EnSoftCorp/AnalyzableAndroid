public class org.apache.james.mime4j.BodyDescriptor extends java.lang.Object
{
    private static org.apache.james.mime4j.Log log;
    private java.lang.String mimeType;
    private java.lang.String boundary;
    private java.lang.String charset;
    private java.lang.String transferEncoding;
    private java.util.Map parameters;
    private boolean contentTypeSet;
    private boolean contentTransferEncSet;

    public void <init>()
    {
        org.apache.james.mime4j.BodyDescriptor r0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        specialinvoke r0.<org.apache.james.mime4j.BodyDescriptor: void <init>(org.apache.james.mime4j.BodyDescriptor)>(null);

        return;
    }

    public void <init>(org.apache.james.mime4j.BodyDescriptor)
    {
        org.apache.james.mime4j.BodyDescriptor r0, r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        r1 := @parameter0: org.apache.james.mime4j.BodyDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType> = "text/plain";

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String boundary> = null;

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String charset> = "us-ascii";

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String transferEncoding> = "7bit";

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters> = $r2;

        r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTypeSet> = 0;

        r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTransferEncSet> = 0;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<org.apache.james.mime4j.BodyDescriptor: boolean isMimeType(java.lang.String)>("multipart/digest");

        if $z0 == 0 goto label1;

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType> = "message/rfc822";

        goto label2;

     label1:
        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType> = "text/plain";

     label2:
        return;
    }

    public void addField(java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String r1, r2, r4, r5, $r6, $r8, $r19, $r20, $r21, $r22, $r27, r29, r30, r31, r33, r34, r35, r36;
        java.lang.StringBuffer r3, $r7;
        int i0, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char c1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r9, $r10, $r11;
        java.util.Map $r12, $r13, $r14, $r16, r32;
        java.lang.StringBuilder $r23, $r24, $r25, $r26;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        r29 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("content-transfer-encoding");

        if $z1 == 0 goto label01;

        $z7 = r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTransferEncSet>;

        if $z7 != 0 goto label01;

        r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTransferEncSet> = 1;

        $r27 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        r30 = virtualinvoke $r27.<java.lang.String: java.lang.String toLowerCase()>();

        $i8 = virtualinvoke r30.<java.lang.String: int length()>();

        if $i8 <= 0 goto label13;

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String transferEncoding> = r30;

        goto label13;

     label01:
        $z2 = virtualinvoke r29.<java.lang.String: boolean equals(java.lang.Object)>("content-type");

        if $z2 == 0 goto label13;

        $z3 = r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTypeSet>;

        if $z3 != 0 goto label13;

        r0.<org.apache.james.mime4j.BodyDescriptor: boolean contentTypeSet> = 1;

        r31 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        r3 = $r7;

        i0 = 0;

     label02:
        $i3 = virtualinvoke r31.<java.lang.String: int length()>();

        if i0 >= $i3 goto label05;

        c1 = virtualinvoke r31.<java.lang.String: char charAt(int)>(i0);

        if c1 == 13 goto label04;

        if c1 != 10 goto label03;

        goto label04;

     label03:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

     label04:
        i0 = i0 + 1;

        goto label02;

     label05:
        $r8 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        r32 = specialinvoke r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map getHeaderParams(java.lang.String)>($r8);

        $r10 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("");

        r33 = (java.lang.String) $r10;

        if r33 == null goto label07;

        $r21 = virtualinvoke r33.<java.lang.String: java.lang.String toLowerCase()>();

        r33 = virtualinvoke $r21.<java.lang.String: java.lang.String trim()>();

        i2 = virtualinvoke r33.<java.lang.String: int indexOf(int)>(47);

        z0 = 0;

        if i2 == -1 goto label06;

        $r20 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        r4 = virtualinvoke $r20.<java.lang.String: java.lang.String trim()>();

        $i5 = i2 + 1;

        $r22 = virtualinvoke r33.<java.lang.String: java.lang.String substring(int)>($i5);

        r5 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

        $i6 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i6 <= 0 goto label06;

        $i7 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i7 <= 0 goto label06;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r33 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        z0 = 1;

     label06:
        if z0 != 0 goto label07;

        r33 = null;

     label07:
        $r9 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("boundary");

        r34 = (java.lang.String) $r9;

        if r33 == null goto label10;

        $z5 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z5 == 0 goto label08;

        if r34 != null goto label09;

     label08:
        $z6 = virtualinvoke r33.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        if $z6 != 0 goto label10;

     label09:
        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType> = r33;

     label10:
        $z4 = virtualinvoke r0.<org.apache.james.mime4j.BodyDescriptor: boolean isMultipart()>();

        if $z4 == 0 goto label11;

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String boundary> = r34;

     label11:
        $r11 = interfaceinvoke r32.<java.util.Map: java.lang.Object get(java.lang.Object)>("charset");

        r35 = (java.lang.String) $r11;

        if r35 == null goto label12;

        r36 = virtualinvoke r35.<java.lang.String: java.lang.String trim()>();

        $i4 = virtualinvoke r36.<java.lang.String: int length()>();

        if $i4 <= 0 goto label12;

        $r19 = virtualinvoke r36.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String charset> = $r19;

     label12:
        $r13 = r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters>;

        interfaceinvoke $r13.<java.util.Map: void putAll(java.util.Map)>(r32);

        $r12 = r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>("");

        $r14 = r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object remove(java.lang.Object)>("boundary");

        $r16 = r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object remove(java.lang.Object)>("charset");

     label13:
        return;
    }

    private java.util.Map getHeaderParams(java.lang.String)
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String r1, r3, r4, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r24, $r25, $r26, $r27, $r28, $r32, $r33;
        java.util.HashMap r2, $r8;
        char[] r5;
        java.lang.StringBuffer r6, r7, $r10, $r11, $r34, $r35;
        byte b5;
        int i6, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z2, z3, $z4, z5;
        char c7;
        org.apache.james.mime4j.Log $r37;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        r1 := @parameter0: java.lang.String;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

        $i8 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(";");

        if $i8 != -1 goto label01;

        r3 = r1;

        r4 = null;

        goto label02;

     label01:
        $i9 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(";");

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $i10 = virtualinvoke r3.<java.lang.String: int length()>();

        $i11 = $i10 + 1;

        r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i11);

     label02:
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", r3);

        if r4 == null goto label34;

        r5 = virtualinvoke r4.<java.lang.String: char[] toCharArray()>();

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        r6 = $r11;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        r7 = $r10;

        b5 = 0;

        z2 = 0;

        i6 = 0;

     label03:
        $i12 = lengthof r5;

        if i6 >= $i12 goto label33;

        c7 = r5[i6];

        lookupswitch(b5)
        {
            case 0: goto label05;
            case 1: goto label07;
            case 2: goto label10;
            case 3: goto label15;
            case 4: goto label23;
            case 5: goto label19;
            case 99: goto label04;
            default: goto label32;
        };

     label04:
        if c7 != 59 goto label32;

        b5 = 0;

        goto label32;

     label05:
        if c7 != 61 goto label06;

        $r37 = <org.apache.james.mime4j.BodyDescriptor: org.apache.james.mime4j.Log log>;

        virtualinvoke $r37.<org.apache.james.mime4j.Log: void error(java.lang.Object)>("Expected header param name, got \'=\'");

        b5 = 99;

        goto label32;

     label06:
        $r35 = new java.lang.StringBuffer;

        specialinvoke $r35.<java.lang.StringBuffer: void <init>()>();

        r6 = $r35;

        $r34 = new java.lang.StringBuffer;

        specialinvoke $r34.<java.lang.StringBuffer: void <init>()>();

        r7 = $r34;

        b5 = 1;

     label07:
        if c7 != 61 goto label09;

        $i13 = virtualinvoke r6.<java.lang.StringBuffer: int length()>();

        if $i13 != 0 goto label08;

        b5 = 99;

        goto label32;

     label08:
        b5 = 2;

        goto label32;

     label09:
        virtualinvoke r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        goto label32;

     label10:
        z3 = 0;

        lookupswitch(c7)
        {
            case 9: goto label11;
            case 32: goto label11;
            case 34: goto label12;
            default: goto label13;
        };

     label11:
        goto label14;

     label12:
        b5 = 4;

        goto label14;

     label13:
        b5 = 3;

        z3 = 1;

     label14:
        if z3 != 0 goto label15;

        goto label32;

     label15:
        z5 = 0;

        lookupswitch(c7)
        {
            case 9: goto label16;
            case 32: goto label16;
            case 59: goto label16;
            default: goto label17;
        };

     label16:
        $r28 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        $r26 = virtualinvoke $r27.<java.lang.String: java.lang.String toLowerCase()>();

        $r33 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r32 = virtualinvoke $r33.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r32);

        b5 = 5;

        z5 = 1;

        goto label18;

     label17:
        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

     label18:
        if z5 != 0 goto label19;

        goto label32;

     label19:
        lookupswitch(c7)
        {
            case 9: goto label21;
            case 32: goto label21;
            case 59: goto label20;
            default: goto label22;
        };

     label20:
        b5 = 0;

        goto label32;

     label21:
        goto label32;

     label22:
        b5 = 99;

        goto label32;

     label23:
        lookupswitch(c7)
        {
            case 34: goto label24;
            case 92: goto label26;
            default: goto label30;
        };

     label24:
        if z2 != 0 goto label25;

        $r18 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        $r24 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase()>();

        $r25 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r24, $r25);

        b5 = 5;

        goto label32;

     label25:
        z2 = 0;

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        goto label32;

     label26:
        if z2 == 0 goto label27;

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label27:
        if z2 != 0 goto label28;

        $z4 = 1;

        goto label29;

     label28:
        $z4 = 0;

     label29:
        z2 = $z4;

        goto label32;

     label30:
        if z2 == 0 goto label31;

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

     label31:
        z2 = 0;

        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

     label32:
        i6 = i6 + 1;

        goto label03;

     label33:
        if b5 != 3 goto label34;

        $r14 = virtualinvoke r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r12 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, $r17);

     label34:
        return r2;
    }

    public boolean isMimeType(java.lang.String)
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String r1, $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean isMessage()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("message/rfc822");

        return $z0;
    }

    public boolean isMultipart()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("multipart/");

        return $z0;
    }

    public java.lang.String getMimeType()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType>;

        return $r1;
    }

    public java.lang.String getBoundary()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String boundary>;

        return $r1;
    }

    public java.lang.String getCharset()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String charset>;

        return $r1;
    }

    public java.util.Map getParameters()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.util.Map $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.util.Map parameters>;

        return $r1;
    }

    public java.lang.String getTransferEncoding()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String transferEncoding>;

        return $r1;
    }

    public boolean isBase64Encoded()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r2 = "base64";

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String transferEncoding>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public boolean isQuotedPrintableEncoded()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r2 = "quoted-printable";

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String transferEncoding>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        org.apache.james.mime4j.BodyDescriptor r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.BodyDescriptor;

        $r1 = r0.<org.apache.james.mime4j.BodyDescriptor: java.lang.String mimeType>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.Log $r0;

        $r0 = staticinvoke <org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)>(class "org/apache/james/mime4j/BodyDescriptor");

        <org.apache.james.mime4j.BodyDescriptor: org.apache.james.mime4j.Log log> = $r0;

        return;
    }
}
