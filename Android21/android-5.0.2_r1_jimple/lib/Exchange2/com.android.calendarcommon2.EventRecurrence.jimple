public class com.android.calendarcommon2.EventRecurrence extends java.lang.Object
{
    private static java.lang.String TAG;
    public static final int SECONDLY;
    public static final int MINUTELY;
    public static final int HOURLY;
    public static final int DAILY;
    public static final int WEEKLY;
    public static final int MONTHLY;
    public static final int YEARLY;
    public static final int SU;
    public static final int MO;
    public static final int TU;
    public static final int WE;
    public static final int TH;
    public static final int FR;
    public static final int SA;
    public android.text.format.Time startDate;
    public int freq;
    public java.lang.String until;
    public int count;
    public int interval;
    public int wkst;
    public int[] bysecond;
    public int bysecondCount;
    public int[] byminute;
    public int byminuteCount;
    public int[] byhour;
    public int byhourCount;
    public int[] byday;
    public int[] bydayNum;
    public int bydayCount;
    public int[] bymonthday;
    public int bymonthdayCount;
    public int[] byyearday;
    public int byyeardayCount;
    public int[] byweekno;
    public int byweeknoCount;
    public int[] bymonth;
    public int bymonthCount;
    public int[] bysetpos;
    public int bysetposCount;
    private static java.util.HashMap sParsePartMap;
    private static final int PARSED_FREQ;
    private static final int PARSED_UNTIL;
    private static final int PARSED_COUNT;
    private static final int PARSED_INTERVAL;
    private static final int PARSED_BYSECOND;
    private static final int PARSED_BYMINUTE;
    private static final int PARSED_BYHOUR;
    private static final int PARSED_BYDAY;
    private static final int PARSED_BYMONTHDAY;
    private static final int PARSED_BYYEARDAY;
    private static final int PARSED_BYWEEKNO;
    private static final int PARSED_BYMONTH;
    private static final int PARSED_BYSETPOS;
    private static final int PARSED_WKST;
    private static final java.util.HashMap sParseFreqMap;
    private static final java.util.HashMap sParseWeekdayMap;
    private static final boolean ALLOW_LOWER_CASE;
    private static final boolean VALIDATE_UNTIL;
    private static final boolean ONLY_ONE_UNTIL_COUNT;

    public void <init>()
    {
        com.android.calendarcommon2.EventRecurrence r0;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setStartDate(android.text.format.Time)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        android.text.format.Time r1;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter0: android.text.format.Time;

        r0.<com.android.calendarcommon2.EventRecurrence: android.text.format.Time startDate> = r1;

        return;
    }

    public static int calendarDay2Day(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            default: goto label8;
        };

     label1:
        return 65536;

     label2:
        return 131072;

     label3:
        return 262144;

     label4:
        return 524288;

     label5:
        return 1048576;

     label6:
        return 2097152;

     label7:
        return 4194304;

     label8:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day of week: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static int timeDay2Day(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label1:
        return 65536;

     label2:
        return 131072;

     label3:
        return 262144;

     label4:
        return 524288;

     label5:
        return 1048576;

     label6:
        return 2097152;

     label7:
        return 4194304;

     label8:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day of week: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static int day2TimeDay(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 65536: goto label1;
            case 131072: goto label2;
            case 262144: goto label3;
            case 524288: goto label4;
            case 1048576: goto label5;
            case 2097152: goto label6;
            case 4194304: goto label7;
            default: goto label8;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 3;

     label5:
        return 4;

     label6:
        return 5;

     label7:
        return 6;

     label8:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day of week: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    public static int day2CalendarDay(int)
    {
        int i0;
        java.lang.RuntimeException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 65536: goto label1;
            case 131072: goto label2;
            case 262144: goto label3;
            case 524288: goto label4;
            case 1048576: goto label5;
            case 2097152: goto label6;
            case 4194304: goto label7;
            default: goto label8;
        };

     label1:
        return 1;

     label2:
        return 2;

     label3:
        return 3;

     label4:
        return 4;

     label5:
        return 5;

     label6:
        return 6;

     label7:
        return 7;

     label8:
        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day of week: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private static java.lang.String day2String(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 65536: goto label1;
            case 131072: goto label2;
            case 262144: goto label3;
            case 524288: goto label4;
            case 1048576: goto label5;
            case 2097152: goto label6;
            case 4194304: goto label7;
            default: goto label8;
        };

     label1:
        return "SU";

     label2:
        return "MO";

     label3:
        return "TU";

     label4:
        return "WE";

     label5:
        return "TH";

     label6:
        return "FR";

     label7:
        return "SA";

     label8:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad day argument: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private static void appendNumbers(java.lang.StringBuilder, java.lang.String, int, int[])
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, i4;
        int[] r2;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: int[];

        if i0 <= 0 goto label3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        i4 = i0 + -1;

        i1 = 0;

     label1:
        if i1 >= i4 goto label2;

        $i3 = r2[i1];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        i1 = i1 + 1;

        goto label1;

     label2:
        $i2 = r2[i4];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

     label3:
        return;
    }

    private void appendByDay(java.lang.StringBuilder, int)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        java.lang.StringBuilder r1;
        int i0, i1, $i2;
        java.lang.String r2;
        int[] $r3, $r4;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        i1 = $r3[i0];

        if i1 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

     label1:
        $r4 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i2 = $r4[i0];

        r2 = staticinvoke <com.android.calendarcommon2.EventRecurrence: java.lang.String day2String(int)>($i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        return;
    }

    public java.lang.String toString()
    {
        com.android.calendarcommon2.EventRecurrence r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        java.lang.String $r5, $r14, $r17, $r24;
        boolean $z0;
        int[] $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FREQ=");

        $i2 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        tableswitch($i2)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            default: goto label08;
        };

     label01:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SECONDLY");

        goto label08;

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MINUTELY");

        goto label08;

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HOURLY");

        goto label08;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DAILY");

        goto label08;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WEEKLY");

        goto label08;

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MONTHLY");

        goto label08;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("YEARLY");

     label08:
        $r5 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label09;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";UNTIL=");

        $r24 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

     label09:
        $i3 = r0.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i3 == 0 goto label10;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";COUNT=");

        $i16 = r0.<com.android.calendarcommon2.EventRecurrence: int count>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

     label10:
        $i4 = r0.<com.android.calendarcommon2.EventRecurrence: int interval>;

        if $i4 == 0 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";INTERVAL=");

        $i15 = r0.<com.android.calendarcommon2.EventRecurrence: int interval>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

     label11:
        $i5 = r0.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        if $i5 == 0 goto label12;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";WKST=");

        $i14 = r0.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        $r17 = staticinvoke <com.android.calendarcommon2.EventRecurrence: java.lang.String day2String(int)>($i14);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

     label12:
        $i6 = r0.<com.android.calendarcommon2.EventRecurrence: int bysecondCount>;

        $r6 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysecond>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYSECOND=", $i6, $r6);

        $i7 = r0.<com.android.calendarcommon2.EventRecurrence: int byminuteCount>;

        $r7 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byminute>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYMINUTE=", $i7, $r7);

        $i8 = r0.<com.android.calendarcommon2.EventRecurrence: int byhourCount>;

        $r8 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byhour>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYSECOND=", $i8, $r8);

        i0 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i0 <= 0 goto label15;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";BYDAY=");

        i17 = i0 + -1;

        i1 = 0;

     label13:
        if i1 >= i17 goto label14;

        specialinvoke r0.<com.android.calendarcommon2.EventRecurrence: void appendByDay(java.lang.StringBuilder,int)>(r1, i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        i1 = i1 + 1;

        goto label13;

     label14:
        specialinvoke r0.<com.android.calendarcommon2.EventRecurrence: void appendByDay(java.lang.StringBuilder,int)>(r1, i17);

     label15:
        $i9 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        $r9 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYMONTHDAY=", $i9, $r9);

        $i10 = r0.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount>;

        $r10 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byyearday>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYYEARDAY=", $i10, $r10);

        $i11 = r0.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount>;

        $r11 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byweekno>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYWEEKNO=", $i11, $r11);

        $i12 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        $r12 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonth>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYMONTH=", $i12, $r12);

        $i13 = r0.<com.android.calendarcommon2.EventRecurrence: int bysetposCount>;

        $r13 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysetpos>;

        staticinvoke <com.android.calendarcommon2.EventRecurrence: void appendNumbers(java.lang.StringBuilder,java.lang.String,int,int[])>(r1, ";BYSETPOS=", $i13, $r13);

        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public boolean repeatsOnEveryWeekDay()
    {
        com.android.calendarcommon2.EventRecurrence r0;
        int i0, i1, i2, $i3;
        int[] $r1;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        $i3 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i3 == 5 goto label1;

        return 0;

     label1:
        i0 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i0 == 5 goto label2;

        return 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        $r1 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        i2 = $r1[i1];

        if i2 == 65536 goto label4;

        if i2 != 4194304 goto label5;

     label4:
        return 0;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return 1;
    }

    public boolean repeatsMonthlyOnDayCount()
    {
        com.android.calendarcommon2.EventRecurrence r0;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        $i0 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i0 == 6 goto label1;

        return 0;

     label1:
        $i1 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i1 != 1 goto label2;

        $i2 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i2 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r1 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i3 = $r1[0];

        if $i3 > 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private static boolean arraysEqual(int[], int, int[], int)
    {
        int[] r0, r1;
        int i0, i1, i2, $i3, $i4;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        r1 := @parameter2: int[];

        i1 := @parameter3: int;

        if i0 == i1 goto label1;

        return 0;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        $i4 = r0[i2];

        $i3 = r1[i2];

        if $i4 == $i3 goto label3;

        return 0;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.calendarcommon2.EventRecurrence r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.text.format.Time $r3, $r4, $r5, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.lang.String $r6, $r7, $r8, $r28;
        int[] $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.android.calendarcommon2.EventRecurrence;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (com.android.calendarcommon2.EventRecurrence) r1;

        $r3 = r0.<com.android.calendarcommon2.EventRecurrence: android.text.format.Time startDate>;

        if $r3 != null goto label3;

        $r30 = r2.<com.android.calendarcommon2.EventRecurrence: android.text.format.Time startDate>;

        if $r30 != null goto label7;

        goto label4;

     label3:
        $r5 = r0.<com.android.calendarcommon2.EventRecurrence: android.text.format.Time startDate>;

        $r4 = r2.<com.android.calendarcommon2.EventRecurrence: android.text.format.Time startDate>;

        $i0 = staticinvoke <android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>($r5, $r4);

        if $i0 != 0 goto label7;

     label4:
        $i2 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        $i1 = r2.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i2 != $i1 goto label7;

        $r6 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        if $r6 != null goto label5;

        $r28 = r2.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        if $r28 != null goto label7;

        goto label6;

     label5:
        $r8 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $r7 = r2.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label7;

     label6:
        $i4 = r0.<com.android.calendarcommon2.EventRecurrence: int count>;

        $i3 = r2.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i4 != $i3 goto label7;

        $i5 = r0.<com.android.calendarcommon2.EventRecurrence: int interval>;

        $i6 = r2.<com.android.calendarcommon2.EventRecurrence: int interval>;

        if $i5 != $i6 goto label7;

        $i7 = r0.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        $i8 = r2.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        if $i7 != $i8 goto label7;

        $r10 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysecond>;

        $i10 = r0.<com.android.calendarcommon2.EventRecurrence: int bysecondCount>;

        $r9 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bysecond>;

        $i9 = r2.<com.android.calendarcommon2.EventRecurrence: int bysecondCount>;

        $z2 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r10, $i10, $r9, $i9);

        if $z2 == 0 goto label7;

        $r12 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byminute>;

        $i12 = r0.<com.android.calendarcommon2.EventRecurrence: int byminuteCount>;

        $r11 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byminute>;

        $i11 = r2.<com.android.calendarcommon2.EventRecurrence: int byminuteCount>;

        $z3 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r12, $i12, $r11, $i11);

        if $z3 == 0 goto label7;

        $r14 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byhour>;

        $i15 = r0.<com.android.calendarcommon2.EventRecurrence: int byhourCount>;

        $r13 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byhour>;

        $i13 = r2.<com.android.calendarcommon2.EventRecurrence: int byhourCount>;

        $z4 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r14, $i15, $r13, $i13);

        if $z4 == 0 goto label7;

        $r15 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i16 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        $r16 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i14 = r2.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        $z5 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r15, $i16, $r16, $i14);

        if $z5 == 0 goto label7;

        $r17 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i17 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        $r18 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i18 = r2.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        $z6 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r17, $i17, $r18, $i18);

        if $z6 == 0 goto label7;

        $r21 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        $i19 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        $r19 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        $i20 = r2.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        $z7 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r21, $i19, $r19, $i20);

        if $z7 == 0 goto label7;

        $r22 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byyearday>;

        $i23 = r0.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount>;

        $r20 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byyearday>;

        $i21 = r2.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount>;

        $z8 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r22, $i23, $r20, $i21);

        if $z8 == 0 goto label7;

        $r23 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byweekno>;

        $i24 = r0.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount>;

        $r24 = r2.<com.android.calendarcommon2.EventRecurrence: int[] byweekno>;

        $i22 = r2.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount>;

        $z9 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r23, $i24, $r24, $i22);

        if $z9 == 0 goto label7;

        $r25 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonth>;

        $i25 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        $r26 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bymonth>;

        $i26 = r2.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        $z12 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r25, $i25, $r26, $i26);

        if $z12 == 0 goto label7;

        $r27 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bysetpos>;

        $i28 = r0.<com.android.calendarcommon2.EventRecurrence: int bysetposCount>;

        $r29 = r2.<com.android.calendarcommon2.EventRecurrence: int[] bysetpos>;

        $i27 = r2.<com.android.calendarcommon2.EventRecurrence: int bysetposCount>;

        $z10 = staticinvoke <com.android.calendarcommon2.EventRecurrence: boolean arraysEqual(int[],int,int[],int)>($r27, $i28, $r29, $i27);

        if $z10 == 0 goto label7;

        $z11 = 1;

        goto label8;

     label7:
        $z11 = 0;

     label8:
        return $z11;
    }

    public int hashCode()
    {
        com.android.calendarcommon2.EventRecurrence r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    private void resetFields()
    {
        com.android.calendarcommon2.EventRecurrence r0;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until> = null;

        r0.<com.android.calendarcommon2.EventRecurrence: int bysetposCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int byweeknoCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int byyeardayCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int byhourCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int byminuteCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int bysecondCount> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int interval> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int count> = 0;

        r0.<com.android.calendarcommon2.EventRecurrence: int freq> = 0;

        return;
    }

    public void parse(java.lang.String)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        java.lang.String r1, r4, r5, r6, $r8, $r9, $r13, $r24, $r25, $r29, $r37;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i9, $i10, $i11;
        java.lang.String[] r2, r3;
        com.android.calendarcommon2.EventRecurrence$PartParser r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r18, $r19, $r20, $r21, $r23, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35;
        boolean $z0, $z1;
        com.android.calendarcommon2.EventRecurrence$InvalidFormatException $r14, $r16, $r22, $r26, $r36;
        java.util.HashMap $r15;
        java.lang.Object $r17;

        r0 := @this: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.calendarcommon2.EventRecurrence: void resetFields()>();

        i0 = 0;

        $r8 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

        r2 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label01:
        if i2 >= i1 goto label09;

        r4 = r3[i2];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 == 0 goto label02;

        goto label08;

     label02:
        i3 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(61);

        if i3 > 0 goto label03;

        $r36 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing LHS in ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r37);

        throw $r36;

     label03:
        r5 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $i9 = i3 + 1;

        r6 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i9);

        $i10 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i10 != 0 goto label04;

        $r26 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing RHS in ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r29);

        throw $r26;

     label04:
        $r15 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r17 = virtualinvoke $r15.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (com.android.calendarcommon2.EventRecurrence$PartParser) $r17;

        if r7 != null goto label06;

        $z1 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("X-");

        if $z1 == 0 goto label05;

        goto label08;

     label05:
        $r22 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t find parser for ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r25);

        throw $r22;

     label06:
        i4 = virtualinvoke r7.<com.android.calendarcommon2.EventRecurrence$PartParser: int parsePart(java.lang.String,com.android.calendarcommon2.EventRecurrence)>(r6, r0);

        $i11 = i0 & i4;

        if $i11 == 0 goto label07;

        $r16 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Part ");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was specified twice");

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label07:
        i0 = i0 | i4;

     label08:
        i2 = i2 + 1;

        goto label01;

     label09:
        $i5 = i0 & 8192;

        if $i5 != 0 goto label10;

        r0.<com.android.calendarcommon2.EventRecurrence: int wkst> = 131072;

     label10:
        $i7 = i0 & 1;

        if $i7 != 0 goto label11;

        $r14 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        specialinvoke $r14.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>("Must specify a FREQ value");

        throw $r14;

     label11:
        $i6 = i0 & 6;

        if $i6 != 6 goto label12;

        $r9 = <com.android.calendarcommon2.EventRecurrence: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: rrule has both UNTIL and COUNT: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r9, $r13);

     label12:
        return;
    }

    static java.util.HashMap access$1400()
    {
        java.util.HashMap $r0;

        $r0 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        return $r0;
    }

    static java.lang.String access$1500()
    {
        java.lang.String $r0;

        $r0 = <com.android.calendarcommon2.EventRecurrence: java.lang.String TAG>;

        return $r0;
    }

    static java.util.HashMap access$1600()
    {
        java.util.HashMap $r0;

        $r0 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r43, $r45, $r50, $r53, $r56, $r59, $r62, $r63, $r66, $r68, $r71, $r74, $r77, $r80, $r83;
        com.android.calendarcommon2.EventRecurrence$ParseFreq $r1;
        com.android.calendarcommon2.EventRecurrence$ParseUntil $r4;
        com.android.calendarcommon2.EventRecurrence$ParseCount $r7;
        com.android.calendarcommon2.EventRecurrence$ParseInterval $r10;
        com.android.calendarcommon2.EventRecurrence$ParseBySecond $r12;
        com.android.calendarcommon2.EventRecurrence$ParseByMinute $r15;
        com.android.calendarcommon2.EventRecurrence$ParseByHour $r18;
        com.android.calendarcommon2.EventRecurrence$ParseByDay $r21;
        com.android.calendarcommon2.EventRecurrence$ParseByMonthDay $r26;
        com.android.calendarcommon2.EventRecurrence$ParseByYearDay $r29;
        com.android.calendarcommon2.EventRecurrence$ParseByWeekNo $r32;
        com.android.calendarcommon2.EventRecurrence$ParseByMonth $r35;
        com.android.calendarcommon2.EventRecurrence$ParseBySetPos $r37;
        com.android.calendarcommon2.EventRecurrence$ParseWkst $r40;
        java.lang.Integer $r47, $r48, $r51, $r54, $r57, $r61, $r65, $r67, $r70, $r75, $r78, $r81, $r84, $r86;

        <com.android.calendarcommon2.EventRecurrence: boolean ONLY_ONE_UNTIL_COUNT> = 0;

        <com.android.calendarcommon2.EventRecurrence: boolean VALIDATE_UNTIL> = 0;

        <com.android.calendarcommon2.EventRecurrence: boolean ALLOW_LOWER_CASE> = 1;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_WKST> = 8192;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYSETPOS> = 4096;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYMONTH> = 2048;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYWEEKNO> = 1024;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYYEARDAY> = 512;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYMONTHDAY> = 256;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYDAY> = 128;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYHOUR> = 64;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYMINUTE> = 32;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_BYSECOND> = 16;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_INTERVAL> = 8;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_COUNT> = 4;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_UNTIL> = 2;

        <com.android.calendarcommon2.EventRecurrence: int PARSED_FREQ> = 1;

        <com.android.calendarcommon2.EventRecurrence: int SA> = 4194304;

        <com.android.calendarcommon2.EventRecurrence: int FR> = 2097152;

        <com.android.calendarcommon2.EventRecurrence: int TH> = 1048576;

        <com.android.calendarcommon2.EventRecurrence: int WE> = 524288;

        <com.android.calendarcommon2.EventRecurrence: int TU> = 262144;

        <com.android.calendarcommon2.EventRecurrence: int MO> = 131072;

        <com.android.calendarcommon2.EventRecurrence: int SU> = 65536;

        <com.android.calendarcommon2.EventRecurrence: int YEARLY> = 7;

        <com.android.calendarcommon2.EventRecurrence: int MONTHLY> = 6;

        <com.android.calendarcommon2.EventRecurrence: int WEEKLY> = 5;

        <com.android.calendarcommon2.EventRecurrence: int DAILY> = 4;

        <com.android.calendarcommon2.EventRecurrence: int HOURLY> = 3;

        <com.android.calendarcommon2.EventRecurrence: int MINUTELY> = 2;

        <com.android.calendarcommon2.EventRecurrence: int SECONDLY> = 1;

        <com.android.calendarcommon2.EventRecurrence: java.lang.String TAG> = "EventRecur";

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap> = $r0;

        $r2 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r1 = new com.android.calendarcommon2.EventRecurrence$ParseFreq;

        specialinvoke $r1.<com.android.calendarcommon2.EventRecurrence$ParseFreq: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("FREQ", $r1);

        $r5 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r4 = new com.android.calendarcommon2.EventRecurrence$ParseUntil;

        specialinvoke $r4.<com.android.calendarcommon2.EventRecurrence$ParseUntil: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UNTIL", $r4);

        $r8 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r7 = new com.android.calendarcommon2.EventRecurrence$ParseCount;

        specialinvoke $r7.<com.android.calendarcommon2.EventRecurrence$ParseCount: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("COUNT", $r7);

        $r11 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r10 = new com.android.calendarcommon2.EventRecurrence$ParseInterval;

        specialinvoke $r10.<com.android.calendarcommon2.EventRecurrence$ParseInterval: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("INTERVAL", $r10);

        $r14 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r12 = new com.android.calendarcommon2.EventRecurrence$ParseBySecond;

        specialinvoke $r12.<com.android.calendarcommon2.EventRecurrence$ParseBySecond: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYSECOND", $r12);

        $r17 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r15 = new com.android.calendarcommon2.EventRecurrence$ParseByMinute;

        specialinvoke $r15.<com.android.calendarcommon2.EventRecurrence$ParseByMinute: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYMINUTE", $r15);

        $r20 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r18 = new com.android.calendarcommon2.EventRecurrence$ParseByHour;

        specialinvoke $r18.<com.android.calendarcommon2.EventRecurrence$ParseByHour: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYHOUR", $r18);

        $r23 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r21 = new com.android.calendarcommon2.EventRecurrence$ParseByDay;

        specialinvoke $r21.<com.android.calendarcommon2.EventRecurrence$ParseByDay: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYDAY", $r21);

        $r24 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r26 = new com.android.calendarcommon2.EventRecurrence$ParseByMonthDay;

        specialinvoke $r26.<com.android.calendarcommon2.EventRecurrence$ParseByMonthDay: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYMONTHDAY", $r26);

        $r27 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r29 = new com.android.calendarcommon2.EventRecurrence$ParseByYearDay;

        specialinvoke $r29.<com.android.calendarcommon2.EventRecurrence$ParseByYearDay: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYYEARDAY", $r29);

        $r30 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r32 = new com.android.calendarcommon2.EventRecurrence$ParseByWeekNo;

        specialinvoke $r32.<com.android.calendarcommon2.EventRecurrence$ParseByWeekNo: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYWEEKNO", $r32);

        $r33 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r35 = new com.android.calendarcommon2.EventRecurrence$ParseByMonth;

        specialinvoke $r35.<com.android.calendarcommon2.EventRecurrence$ParseByMonth: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYMONTH", $r35);

        $r36 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r37 = new com.android.calendarcommon2.EventRecurrence$ParseBySetPos;

        specialinvoke $r37.<com.android.calendarcommon2.EventRecurrence$ParseBySetPos: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BYSETPOS", $r37);

        $r39 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParsePartMap>;

        $r40 = new com.android.calendarcommon2.EventRecurrence$ParseWkst;

        specialinvoke $r40.<com.android.calendarcommon2.EventRecurrence$ParseWkst: void <init>(com.android.calendarcommon2.EventRecurrence$1)>(null);

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WKST", $r40);

        $r43 = new java.util.HashMap;

        specialinvoke $r43.<java.util.HashMap: void <init>()>();

        <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap> = $r43;

        $r42 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SECONDLY", $r47);

        $r45 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MINUTELY", $r51);

        $r53 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        virtualinvoke $r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HOURLY", $r48);

        $r50 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("DAILY", $r57);

        $r59 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WEEKLY", $r54);

        $r56 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MONTHLY", $r65);

        $r66 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseFreqMap>;

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r66.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("YEARLY", $r61);

        $r63 = new java.util.HashMap;

        specialinvoke $r63.<java.util.HashMap: void <init>()>();

        <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap> = $r63;

        $r62 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r70 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(65536);

        virtualinvoke $r62.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SU", $r70);

        $r71 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(131072);

        virtualinvoke $r71.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MO", $r67);

        $r68 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r78 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262144);

        virtualinvoke $r68.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TU", $r78);

        $r77 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(524288);

        virtualinvoke $r77.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WE", $r75);

        $r74 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r84 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1048576);

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TH", $r84);

        $r83 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2097152);

        virtualinvoke $r83.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("FR", $r81);

        $r80 = <com.android.calendarcommon2.EventRecurrence: java.util.HashMap sParseWeekdayMap>;

        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4194304);

        virtualinvoke $r80.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SA", $r86);

        return;
    }
}
