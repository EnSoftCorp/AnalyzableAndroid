public class org.apache.commons.io.input.DemuxInputStream extends java.io.InputStream
{
    private java.lang.InheritableThreadLocal m_streams;

    public void <init>()
    {
        org.apache.commons.io.input.DemuxInputStream r0;
        java.lang.InheritableThreadLocal $r1;

        r0 := @this: org.apache.commons.io.input.DemuxInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r1 = new java.lang.InheritableThreadLocal;

        specialinvoke $r1.<java.lang.InheritableThreadLocal: void <init>()>();

        r0.<org.apache.commons.io.input.DemuxInputStream: java.lang.InheritableThreadLocal m_streams> = $r1;

        return;
    }

    public java.io.InputStream bindStream(java.io.InputStream)
    {
        org.apache.commons.io.input.DemuxInputStream r0;
        java.io.InputStream r1, r2;
        java.lang.InheritableThreadLocal $r3;

        r0 := @this: org.apache.commons.io.input.DemuxInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 = specialinvoke r0.<org.apache.commons.io.input.DemuxInputStream: java.io.InputStream getStream()>();

        $r3 = r0.<org.apache.commons.io.input.DemuxInputStream: java.lang.InheritableThreadLocal m_streams>;

        virtualinvoke $r3.<java.lang.InheritableThreadLocal: void set(java.lang.Object)>(r1);

        return r2;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.DemuxInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.commons.io.input.DemuxInputStream;

        r1 = specialinvoke r0.<org.apache.commons.io.input.DemuxInputStream: java.io.InputStream getStream()>();

        if null == r1 goto label1;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.DemuxInputStream r0;
        java.io.InputStream r1;
        int $i0;

        r0 := @this: org.apache.commons.io.input.DemuxInputStream;

        r1 = specialinvoke r0.<org.apache.commons.io.input.DemuxInputStream: java.io.InputStream getStream()>();

        if null == r1 goto label1;

        $i0 = virtualinvoke r1.<java.io.InputStream: int read()>();

        return $i0;

     label1:
        return -1;
    }

    private java.io.InputStream getStream()
    {
        org.apache.commons.io.input.DemuxInputStream r0;
        java.lang.InheritableThreadLocal $r1;
        java.lang.Object $r2;
        java.io.InputStream $r3;

        r0 := @this: org.apache.commons.io.input.DemuxInputStream;

        $r1 = r0.<org.apache.commons.io.input.DemuxInputStream: java.lang.InheritableThreadLocal m_streams>;

        $r2 = virtualinvoke $r1.<java.lang.InheritableThreadLocal: java.lang.Object get()>();

        $r3 = (java.io.InputStream) $r2;

        return $r3;
    }
}
