public abstract class com.android.exchange.adapter.Parser extends java.lang.Object
{
    private static final boolean LOG_VERBOSE;
    private static final java.lang.String LOG_TAG;
    public static final int START_DOCUMENT;
    public static final int END_DOCUMENT;
    private static final int DONE;
    private static final int START;
    public static final int END;
    private static final int TEXT;
    private static final int OPAQUE;
    private static final int NOT_ENDED;
    private static final int EOF_BYTE;
    private boolean logging;
    private boolean capture;
    private java.util.ArrayList captureArray;
    private java.io.InputStream in;
    private int depth;
    private java.lang.String[] nameArray;
    private final java.util.Deque startTagArray;
    private com.android.exchange.adapter.Parser$Tag startTag;
    private int type;
    private int page;
    public int tag;
    public boolean noContent;
    private java.lang.String text;
    private byte[] bytes;

    public boolean parse() throws java.io.IOException, com.android.exchange.EasException
    {
        com.android.exchange.adapter.Parser r0;

        r0 := @this: com.android.exchange.adapter.Parser;

        return 0;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.io.InputStream r1;
        java.lang.String[] $r2;
        java.util.ArrayDeque $r3;
        boolean $z0;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.exchange.adapter.Parser: boolean logging> = 0;

        r0.<com.android.exchange.adapter.Parser: boolean capture> = 0;

        $r2 = newarray (java.lang.String)[32];

        r0.<com.android.exchange.adapter.Parser: java.lang.String[] nameArray> = $r2;

        $r3 = new java.util.ArrayDeque;

        specialinvoke $r3.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray> = $r3;

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void setInput(java.io.InputStream,boolean)>(r1, 1);

        $z0 = <com.android.exchange.Eas: boolean PARSER_LOG>;

        r0.<com.android.exchange.adapter.Parser: boolean logging> = $z0;

        return;
    }

    public void <init>(com.android.exchange.adapter.Parser) throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0, r1;
        java.lang.String[] $r2;
        java.util.ArrayDeque $r3;
        java.io.InputStream $r4;
        boolean $z0;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: com.android.exchange.adapter.Parser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.exchange.adapter.Parser: boolean logging> = 0;

        r0.<com.android.exchange.adapter.Parser: boolean capture> = 0;

        $r2 = newarray (java.lang.String)[32];

        r0.<com.android.exchange.adapter.Parser: java.lang.String[] nameArray> = $r2;

        $r3 = new java.util.ArrayDeque;

        specialinvoke $r3.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray> = $r3;

        $r4 = r1.<com.android.exchange.adapter.Parser: java.io.InputStream in>;

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void setInput(java.io.InputStream,boolean)>($r4, 0);

        $z0 = <com.android.exchange.Eas: boolean PARSER_LOG>;

        r0.<com.android.exchange.adapter.Parser: boolean logging> = $z0;

        return;
    }

    public void setDebug(boolean)
    {
        com.android.exchange.adapter.Parser r0;
        boolean z0;

        r0 := @this: com.android.exchange.adapter.Parser;

        z0 := @parameter0: boolean;

        r0.<com.android.exchange.adapter.Parser: boolean logging> = z0;

        return;
    }

    protected java.io.InputStream getInput()
    {
        com.android.exchange.adapter.Parser r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r1 = r0.<com.android.exchange.adapter.Parser: java.io.InputStream in>;

        return $r1;
    }

    public void captureOn()
    {
        com.android.exchange.adapter.Parser r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.exchange.adapter.Parser;

        r0.<com.android.exchange.adapter.Parser: boolean capture> = 1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.exchange.adapter.Parser: java.util.ArrayList captureArray> = $r1;

        return;
    }

    public void captureOff(android.content.Context, java.lang.String)
    {
        com.android.exchange.adapter.Parser r0;
        android.content.Context r1;
        java.lang.String r2, $r5;
        java.io.FileOutputStream r3;
        java.util.ArrayList $r4;
        byte[] $r6;
        java.io.FileNotFoundException $r7;
        java.io.IOException $r8;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

     label1:
        r3 = virtualinvoke r1.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>(r2, 2);

        $r4 = r0.<com.android.exchange.adapter.Parser: java.util.ArrayList captureArray>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.String toString()>();

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r3.<java.io.FileOutputStream: void write(byte[])>($r6);

        virtualinvoke r3.<java.io.FileOutputStream: void close()>();

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public byte[] getValueBytes() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.lang.String r1, $r4, $r9, $r14, $r18;
        byte[] r2, $r5, $r20;
        com.android.exchange.adapter.Parser$Tag $r3;
        int $i1, $i2, $i3, $i5, $i6;
        com.android.exchange.adapter.Parser$EasParserException $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r10, $r12, $r13, $r15, $r16, $r17, $r19;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r3 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        r1 = virtualinvoke $r3.<com.android.exchange.adapter.Parser$Tag: java.lang.String toString()>();

        specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        $i1 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i1 != 3 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for tag: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r18);

        $r20 = newarray (byte)[0];

        return $r20;

     label1:
        $i2 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i2 == 5 goto label2;

        $i6 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i6 == 4 goto label2;

        $r11 = new com.android.exchange.adapter.Parser$EasParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected OPAQUE or TEXT data for tag ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r14);

        throw $r11;

     label2:
        $i3 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i3 != 5 goto label3;

        $r5 = r0.<com.android.exchange.adapter.Parser: byte[] bytes>;

        goto label4;

     label3:
        $r4 = r0.<com.android.exchange.adapter.Parser: java.lang.String text>;

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label4:
        r2 = $r5;

        specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        $i5 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i5 == 3 goto label5;

        $r6 = new com.android.exchange.adapter.Parser$EasParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No END found for tag ");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r9);

        throw $r6;

     label5:
        return r2;
    }

    public java.lang.String getValue() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.lang.String r1, r2, $r8, $r12, $r16;
        com.android.exchange.adapter.Parser$Tag $r3;
        int $i1, $i2, $i4;
        com.android.exchange.adapter.Parser$EasParserException $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r13, $r14, $r15, $r17;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r3 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        r1 = virtualinvoke $r3.<com.android.exchange.adapter.Parser$Tag: java.lang.String toString()>();

        specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        $i1 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i1 != 3 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No value for tag: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r16);

        return "";

     label1:
        $i2 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i2 == 4 goto label2;

        $r9 = new com.android.exchange.adapter.Parser$EasParserException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected TEXT data for tag ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r12);

        throw $r9;

     label2:
        r2 = r0.<com.android.exchange.adapter.Parser: java.lang.String text>;

        specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        $i4 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i4 == 3 goto label3;

        $r4 = new com.android.exchange.adapter.Parser$EasParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No END found for tag ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r8);

        throw $r4;

     label3:
        return r2;
    }

    public int getValueInt() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.lang.String r1, $r10, $r12;
        int i0, $i1;
        java.lang.NumberFormatException r2, $r3;
        com.android.exchange.adapter.Parser$EasParserException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r11;
        com.android.exchange.adapter.Parser$Tag $r7;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 = virtualinvoke r0.<com.android.exchange.adapter.Parser: java.lang.String getValue()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

        $r4 = new com.android.exchange.adapter.Parser$EasParserException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag ");

        $r7 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r10 = virtualinvoke r2.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r12);

        throw $r4;

     label4:
        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int nextTag(int) throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.exchange.adapter.Parser$EodException $r1;
        com.android.exchange.adapter.Parser$Tag $r2, $r3;

        r0 := @this: com.android.exchange.adapter.Parser;

        i0 := @parameter0: int;

     label1:
        $i1 = specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        if $i1 == 1 goto label3;

        $i2 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i2 != 2 goto label2;

        $r3 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $i5 = virtualinvoke $r3.<com.android.exchange.adapter.Parser$Tag: int getTagNum()>();

        r0.<com.android.exchange.adapter.Parser: int tag> = $i5;

        $i6 = r0.<com.android.exchange.adapter.Parser: int tag>;

        return $i6;

     label2:
        $i3 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i3 != 3 goto label1;

        $r2 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $i4 = virtualinvoke $r2.<com.android.exchange.adapter.Parser$Tag: int getTagNum()>();

        if $i4 != i0 goto label1;

        return 3;

     label3:
        if i0 != 0 goto label4;

        return 1;

     label4:
        $r1 = new com.android.exchange.adapter.Parser$EodException;

        specialinvoke $r1.<com.android.exchange.adapter.Parser$EodException: void <init>(com.android.exchange.adapter.Parser)>(r0);

        throw $r1;
    }

    public void skipTag() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0, $i1, $i2, $i3;
        com.android.exchange.adapter.Parser$Tag $r1, $r3;
        com.android.exchange.adapter.Parser$EofException $r2;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r1 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        i0 = virtualinvoke $r1.<com.android.exchange.adapter.Parser$Tag: int getTagNum()>();

     label1:
        $i1 = specialinvoke r0.<com.android.exchange.adapter.Parser: int getNext()>();

        if $i1 == 1 goto label2;

        $i2 = r0.<com.android.exchange.adapter.Parser: int type>;

        if $i2 != 3 goto label1;

        $r3 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $i3 = virtualinvoke $r3.<com.android.exchange.adapter.Parser$Tag: int getTagNum()>();

        if $i3 != i0 goto label1;

        return;

     label2:
        $r2 = new com.android.exchange.adapter.Parser$EofException;

        specialinvoke $r2.<com.android.exchange.adapter.Parser$EofException: void <init>(com.android.exchange.adapter.Parser)>(r0);

        throw $r2;
    }

    public void setInput(java.io.InputStream, boolean) throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.io.InputStream r1;
        boolean z0;
        com.android.exchange.adapter.Parser$EasParserException $r2;
        com.android.exchange.adapter.Parser$EofException $r3;
        com.android.exchange.adapter.Parser$EmptyStreamException $r4;
        int i3;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        r0.<com.android.exchange.adapter.Parser: java.io.InputStream in> = r1;

        if r1 == null goto label5;

        if z0 == 0 goto label5;

     label1:
        specialinvoke r0.<com.android.exchange.adapter.Parser: int readByte()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new com.android.exchange.adapter.Parser$EmptyStreamException;

        specialinvoke $r4.<com.android.exchange.adapter.Parser$EmptyStreamException: void <init>(com.android.exchange.adapter.Parser)>(r0);

        throw $r4;

     label4:
        specialinvoke r0.<com.android.exchange.adapter.Parser: int readInt()>();

        specialinvoke r0.<com.android.exchange.adapter.Parser: int readInt()>();

        i3 = specialinvoke r0.<com.android.exchange.adapter.Parser: int readInt()>();

        if i3 == 0 goto label5;

        $r2 = new com.android.exchange.adapter.Parser$EasParserException;

        specialinvoke $r2.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, "WBXML string table unsupported");

        throw $r2;

     label5:
        return;

        catch com.android.exchange.adapter.Parser$EofException from label1 to label2 with label3;
    }

    void resetInput(java.io.InputStream)
    {
        com.android.exchange.adapter.Parser r0;
        java.io.InputStream r1;
        java.io.IOException $r3;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: java.io.InputStream;

        r0.<com.android.exchange.adapter.Parser: java.io.InputStream in> = r1;

     label1:
        specialinvoke r0.<com.android.exchange.adapter.Parser: int read()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void log(java.lang.String)
    {
        com.android.exchange.adapter.Parser r0;
        java.lang.String r1, r2, r4, $r6, $r10;
        int i0, $i1, $i2;
        char[] r3;
        boolean $z0, $z1;
        java.util.Deque $r5;
        java.lang.Object[] $r7;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.exchange.adapter.Parser: boolean logging>;

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10);

        if i0 <= 0 goto label2;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        goto label3;

     label2:
        r2 = r1;

     label3:
        $r5 = r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray>;

        $i1 = interfaceinvoke $r5.<java.util.Deque: int size()>();

        $i2 = $i1 * 2;

        r3 = newarray (char)[$i2];

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r3, 32);

        $r6 = new java.lang.String;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>(r3);

        r4 = $r6;

        $r7 = newarray (java.lang.Object)[1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7[0] = $r10;

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "%s", $r7);

        $z1 = <com.android.exchange.Eas: boolean FILE_LOG>;

        if $z1 == 0 goto label4;

        staticinvoke <com.android.exchange.utility.FileLogger: void log(java.lang.String,java.lang.String)>("Exchange", r2);

     label4:
        return;
    }

    void logVerbose(java.lang.String)
    {
        com.android.exchange.adapter.Parser r0;
        java.lang.String r1;

        r0 := @this: com.android.exchange.adapter.Parser;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected void pushTag(int)
    {
        com.android.exchange.adapter.Parser r0;
        int i0, $i1;

        r0 := @this: com.android.exchange.adapter.Parser;

        i0 := @parameter0: int;

        $i1 = i0 >>> 6;

        r0.<com.android.exchange.adapter.Parser: int page> = $i1;

        specialinvoke r0.<com.android.exchange.adapter.Parser: void push(int)>(i0);

        return;
    }

    private void pop()
    {
        com.android.exchange.adapter.Parser r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        com.android.exchange.adapter.Parser$Tag $r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r1 = r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object removeFirst()>();

        $r3 = (com.android.exchange.adapter.Parser$Tag) $r2;

        r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag> = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r6 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r9);

        return;
    }

    private void push(int)
    {
        com.android.exchange.adapter.Parser r0;
        int i0, $i1;
        com.android.exchange.adapter.Parser$Tag $r1, $r2, $r5, $r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r9;
        java.util.Deque $r11;
        java.io.Serializable $r12;

        r0 := @this: com.android.exchange.adapter.Parser;

        i0 := @parameter0: int;

        $r1 = new com.android.exchange.adapter.Parser$Tag;

        $i1 = r0.<com.android.exchange.adapter.Parser: int page>;

        specialinvoke $r1.<com.android.exchange.adapter.Parser$Tag: void <init>(com.android.exchange.adapter.Parser,int,int)>(r0, $i1, i0);

        r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag> = $r1;

        $r2 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $z0 = $r2.<com.android.exchange.adapter.Parser$Tag: boolean mNoContent>;

        r0.<com.android.exchange.adapter.Parser: boolean noContent> = $z0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $z1 = r0.<com.android.exchange.adapter.Parser: boolean noContent>;

        if $z1 == 0 goto label1;

        $r12 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(47);

        goto label2;

     label1:
        $r12 = "";

     label2:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r9);

        $r11 = r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray>;

        $r10 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        interfaceinvoke $r11.<java.util.Deque: void addFirst(java.lang.Object)>($r10);

        return;
    }

    private final int getNext() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z0, $z1, $z2;
        byte[] $r1, $r9;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r26, $r27, $r30, $r31, $r32, $r33;
        com.android.exchange.adapter.Parser$Tag $r3, $r11;
        java.lang.String $r8, $r10, $r16, $r17, $r21, $r25, $r29, $r36;
        byte $b5;
        java.lang.Object[] $r18, $r23;
        com.android.exchange.adapter.Parser$EasParserException $r19, $r22, $r28;
        java.lang.Integer $r20, $r24;
        java.util.Deque $r35;

        r0 := @this: com.android.exchange.adapter.Parser;

        r0.<com.android.exchange.adapter.Parser: byte[] bytes> = null;

        r0.<com.android.exchange.adapter.Parser: java.lang.String text> = null;

        $z0 = r0.<com.android.exchange.adapter.Parser: boolean noContent>;

        if $z0 == 0 goto label01;

        $r35 = r0.<com.android.exchange.adapter.Parser: java.util.Deque startTagArray>;

        interfaceinvoke $r35.<java.util.Deque: java.lang.Object removeFirst()>();

        r0.<com.android.exchange.adapter.Parser: int type> = 3;

        r0.<com.android.exchange.adapter.Parser: boolean noContent> = 0;

        $i12 = r0.<com.android.exchange.adapter.Parser: int type>;

        return $i12;

     label01:
        i0 = specialinvoke r0.<com.android.exchange.adapter.Parser: int read()>();

     label02:
        if i0 != 0 goto label04;

        $i8 = specialinvoke r0.<com.android.exchange.adapter.Parser: int readByte()>();

        r0.<com.android.exchange.adapter.Parser: int page> = $i8;

        $i9 = r0.<com.android.exchange.adapter.Parser: int page>;

        $z2 = staticinvoke <com.android.exchange.adapter.Tags: boolean isValidPage(int)>($i9);

        if $z2 != 0 goto label03;

        $r28 = new com.android.exchange.adapter.Parser$EasParserException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown code page ");

        $i11 = r0.<com.android.exchange.adapter.Parser: int page>;

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r36);

        throw $r28;

     label03:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Page: ");

        $i10 = r0.<com.android.exchange.adapter.Parser: int page>;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void logVerbose(java.lang.String)>($r29);

        i0 = specialinvoke r0.<com.android.exchange.adapter.Parser: int read()>();

        goto label02;

     label04:
        lookupswitch(i0)
        {
            case -1: goto label05;
            case 1: goto label06;
            case 3: goto label07;
            case 195: goto label08;
            default: goto label11;
        };

     label05:
        r0.<com.android.exchange.adapter.Parser: int type> = 1;

        goto label14;

     label06:
        r0.<com.android.exchange.adapter.Parser: int type> = 3;

        specialinvoke r0.<com.android.exchange.adapter.Parser: void pop()>();

        goto label14;

     label07:
        r0.<com.android.exchange.adapter.Parser: int type> = 4;

        $r10 = specialinvoke r0.<com.android.exchange.adapter.Parser: java.lang.String readInlineString()>();

        r0.<com.android.exchange.adapter.Parser: java.lang.String text> = $r10;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = r0.<com.android.exchange.adapter.Parser: java.lang.String text>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r17);

        goto label14;

     label08:
        r0.<com.android.exchange.adapter.Parser: int type> = 5;

        i1 = specialinvoke r0.<com.android.exchange.adapter.Parser: int readInt()>();

        $r1 = newarray (byte)[i1];

        r0.<com.android.exchange.adapter.Parser: byte[] bytes> = $r1;

        i2 = 0;

     label09:
        if i2 >= i1 goto label10;

        $r9 = r0.<com.android.exchange.adapter.Parser: byte[] bytes>;

        $i4 = specialinvoke r0.<com.android.exchange.adapter.Parser: int readByte()>();

        $b5 = (byte) $i4;

        $r9[i2] = $b5;

        i2 = i2 + 1;

        goto label09;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.exchange.adapter.Parser: com.android.exchange.adapter.Parser$Tag startTag>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": (opaque:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void log(java.lang.String)>($r8);

        goto label14;

     label11:
        $i6 = i0 & 63;

        $z1 = staticinvoke <com.android.exchange.adapter.Tags: boolean isGlobalTag(int)>($i6);

        if $z1 == 0 goto label12;

        $r22 = new com.android.exchange.adapter.Parser$EasParserException;

        $r23 = newarray (java.lang.Object)[1];

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r23[0] = $r24;

        $r25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unhandled WBXML global token 0x%02X", $r23);

        specialinvoke $r22.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r25);

        throw $r22;

     label12:
        $i7 = i0 & 128;

        if $i7 == 0 goto label13;

        $r19 = new com.android.exchange.adapter.Parser$EasParserException;

        $r18 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r18[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Attributes unsupported, tag 0x%02X", $r18);

        specialinvoke $r19.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, $r21);

        throw $r19;

     label13:
        r0.<com.android.exchange.adapter.Parser: int type> = 2;

        specialinvoke r0.<com.android.exchange.adapter.Parser: void push(int)>(i0);

     label14:
        $i3 = r0.<com.android.exchange.adapter.Parser: int type>;

        return $i3;
    }

    private int read() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0;
        java.io.InputStream $r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        java.util.ArrayList $r6;
        java.lang.Integer $r7;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r1 = r0.<com.android.exchange.adapter.Parser: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $z0 = r0.<com.android.exchange.adapter.Parser: boolean capture>;

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.exchange.adapter.Parser: java.util.ArrayList captureArray>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Byte: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.exchange.adapter.Parser: void logVerbose(java.lang.String)>($r5);

        return i0;
    }

    private int readByte() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0;
        com.android.exchange.adapter.Parser$EofException $r1;

        r0 := @this: com.android.exchange.adapter.Parser;

        i0 = specialinvoke r0.<com.android.exchange.adapter.Parser: int read()>();

        if i0 != -1 goto label1;

        $r1 = new com.android.exchange.adapter.Parser$EofException;

        specialinvoke $r1.<com.android.exchange.adapter.Parser$EofException: void <init>(com.android.exchange.adapter.Parser)>(r0);

        throw $r1;

     label1:
        return i0;
    }

    private int readInt() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        int i0, i1, i2, $i3, $i4, $i5;
        com.android.exchange.adapter.Parser$EasParserException $r1;

        r0 := @this: com.android.exchange.adapter.Parser;

        i0 = 0;

        i2 = 0;

     label1:
        i2 = i2 + 1;

        if i2 <= 5 goto label2;

        $r1 = new com.android.exchange.adapter.Parser$EasParserException;

        specialinvoke $r1.<com.android.exchange.adapter.Parser$EasParserException: void <init>(com.android.exchange.adapter.Parser,java.lang.String)>(r0, "Invalid integer encoding, too many bytes");

        throw $r1;

     label2:
        i1 = specialinvoke r0.<com.android.exchange.adapter.Parser: int readByte()>();

        $i4 = i0 << 7;

        $i3 = i1 & 127;

        i0 = $i4 | $i3;

        $i5 = i1 & 128;

        if $i5 != 0 goto label1;

        return i0;
    }

    private java.lang.String readInlineString() throws java.io.IOException
    {
        com.android.exchange.adapter.Parser r0;
        java.io.ByteArrayOutputStream r1, $r2;
        int i0;
        com.android.exchange.adapter.Parser$EofException $r3;
        java.lang.String r4;

        r0 := @this: com.android.exchange.adapter.Parser;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>(int)>(256);

        r1 = $r2;

     label1:
        i0 = specialinvoke r0.<com.android.exchange.adapter.Parser: int read()>();

        if i0 != 0 goto label2;

        goto label4;

     label2:
        if i0 != -1 goto label3;

        $r3 = new com.android.exchange.adapter.Parser$EofException;

        specialinvoke $r3.<com.android.exchange.adapter.Parser$EofException: void <init>(com.android.exchange.adapter.Parser)>(r0);

        throw $r3;

     label3:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i0);

        goto label1;

     label4:
        virtualinvoke r1.<java.io.ByteArrayOutputStream: void flush()>();

        r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

        return r4;
    }

    public static void <clinit>()
    {
        <com.android.exchange.adapter.Parser: int EOF_BYTE> = -1;

        <com.android.exchange.adapter.Parser: int NOT_ENDED> = -2147483648;

        <com.android.exchange.adapter.Parser: int OPAQUE> = 5;

        <com.android.exchange.adapter.Parser: int TEXT> = 4;

        <com.android.exchange.adapter.Parser: int END> = 3;

        <com.android.exchange.adapter.Parser: int START> = 2;

        <com.android.exchange.adapter.Parser: int DONE> = 1;

        <com.android.exchange.adapter.Parser: int END_DOCUMENT> = 1;

        <com.android.exchange.adapter.Parser: int START_DOCUMENT> = 0;

        <com.android.exchange.adapter.Parser: java.lang.String LOG_TAG> = "Exchange";

        <com.android.exchange.adapter.Parser: boolean LOG_VERBOSE> = 0;

        return;
    }
}
