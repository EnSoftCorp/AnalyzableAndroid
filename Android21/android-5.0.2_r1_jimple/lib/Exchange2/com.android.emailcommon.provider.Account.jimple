public final class com.android.emailcommon.provider.Account extends com.android.emailcommon.provider.EmailContent implements android.os.Parcelable
{
    public static final java.lang.String TABLE_NAME;
    public static final long ACCOUNT_ID_COMBINED_VIEW;
    public static final long NO_ACCOUNT;
    public static final int FLAGS_NOTIFY_NEW_MAIL;
    public static final int FLAGS_VIBRATE;
    public static final int FLAGS_DELETE_POLICY_MASK;
    public static final int FLAGS_DELETE_POLICY_SHIFT;
    public static final int FLAGS_INCOMPLETE;
    public static final int FLAGS_SECURITY_HOLD;
    public static final int FLAGS_SUPPORTS_SMART_FORWARD;
    public static final int FLAGS_BACKGROUND_ATTACHMENTS;
    public static final int FLAGS_SYNC_ADAPTER;
    public static final int FLAGS_SYNC_DISABLED;
    public static final int FLAGS_SUPPORTS_SEARCH;
    public static final int FLAGS_SUPPORTS_GLOBAL_SEARCH;
    public static final int FLAGS_INITIAL_FOLDER_LIST_LOADED;
    public static final int DELETE_POLICY_NEVER;
    public static final int DELETE_POLICY_7DAYS;
    public static final int DELETE_POLICY_ON_DELETE;
    public static final int CHECK_INTERVAL_NEVER;
    public static final int CHECK_INTERVAL_PUSH;
    public static android.net.Uri CONTENT_URI;
    public static android.net.Uri RESET_NEW_MESSAGE_COUNT_URI;
    public static android.net.Uri NOTIFIER_URI;
    public java.lang.String mDisplayName;
    public java.lang.String mEmailAddress;
    public java.lang.String mSyncKey;
    public int mSyncLookback;
    public int mSyncInterval;
    public long mHostAuthKeyRecv;
    public long mHostAuthKeySend;
    public int mFlags;
    public java.lang.String mSenderName;
    private java.lang.String mRingtoneUri;
    public java.lang.String mProtocolVersion;
    public java.lang.String mSecuritySyncKey;
    public java.lang.String mSignature;
    public long mPolicyKey;
    public long mPingDuration;
    static final java.lang.String JSON_TAG_HOST_AUTH_RECV;
    static final java.lang.String JSON_TAG_HOST_AUTH_SEND;
    public transient com.android.emailcommon.provider.HostAuth mHostAuthRecv;
    public transient com.android.emailcommon.provider.HostAuth mHostAuthSend;
    public transient com.android.emailcommon.provider.Policy mPolicy;
    private transient boolean mTemporary;
    public static final int CONTENT_ID_COLUMN;
    public static final int CONTENT_DISPLAY_NAME_COLUMN;
    public static final int CONTENT_EMAIL_ADDRESS_COLUMN;
    public static final int CONTENT_SYNC_KEY_COLUMN;
    public static final int CONTENT_SYNC_LOOKBACK_COLUMN;
    public static final int CONTENT_SYNC_INTERVAL_COLUMN;
    public static final int CONTENT_HOST_AUTH_KEY_RECV_COLUMN;
    public static final int CONTENT_HOST_AUTH_KEY_SEND_COLUMN;
    public static final int CONTENT_FLAGS_COLUMN;
    public static final int CONTENT_SENDER_NAME_COLUMN;
    public static final int CONTENT_RINGTONE_URI_COLUMN;
    public static final int CONTENT_PROTOCOL_VERSION_COLUMN;
    public static final int CONTENT_SECURITY_SYNC_KEY_COLUMN;
    public static final int CONTENT_SIGNATURE_COLUMN;
    public static final int CONTENT_POLICY_KEY_COLUMN;
    public static final int CONTENT_PING_DURATION_COLUMN;
    public static final int CONTENT_MAX_ATTACHMENT_SIZE_COLUMN;
    public static final java.lang.String[] CONTENT_PROJECTION;
    public static final int ACCOUNT_FLAGS_COLUMN_ID;
    public static final int ACCOUNT_FLAGS_COLUMN_FLAGS;
    public static final java.lang.String[] ACCOUNT_FLAGS_PROJECTION;
    public static final java.lang.String SECURITY_NONZERO_SELECTION;
    private static final java.lang.String FIND_INBOX_SELECTION;
    public static final android.os.Parcelable$Creator CREATOR;

    public static void initAccount()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r6, $r8, $r9, $r12, $r14, $r15;
        android.net.Uri $r1, $r5, $r7, $r11, $r13, $r16;
        java.lang.String $r4, $r10, $r17;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/account");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/resetNewMessageCount");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r10);

        <com.android.emailcommon.provider.Account: android.net.Uri RESET_NEW_MESSAGE_COUNT_URI> = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_NOTIFIER_URI>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/account");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r17);

        <com.android.emailcommon.provider.Account: android.net.Uri NOTIFIER_URI> = $r16;

        return;
    }

    public void <init>()
    {
        com.android.emailcommon.provider.Account r0;
        android.net.Uri $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.emailcommon.provider.Account;

        specialinvoke r0.<com.android.emailcommon.provider.EmailContent: void <init>()>();

        $r1 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r0.<com.android.emailcommon.provider.Account: android.net.Uri mBaseUri> = $r1;

        $r2 = staticinvoke <android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>(2);

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri> = $r3;

        r0.<com.android.emailcommon.provider.Account: int mSyncInterval> = -1;

        r0.<com.android.emailcommon.provider.Account: int mSyncLookback> = -1;

        r0.<com.android.emailcommon.provider.Account: int mFlags> = 0;

        return;
    }

    public static com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        com.android.emailcommon.provider.Account $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long,android.database.ContentObserver)>(r0, l0, null);

        return $r1;
    }

    public static com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context, long, android.database.ContentObserver)
    {
        android.content.Context r0;
        long l0;
        android.database.ContentObserver r1;
        java.lang.String[] $r2;
        android.net.Uri $r3;
        com.android.emailcommon.provider.EmailContent $r4;
        com.android.emailcommon.provider.Account $r5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: android.database.ContentObserver;

        $r3 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r2 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        $r4 = staticinvoke <com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent restoreContentWithId(android.content.Context,java.lang.Class,android.net.Uri,java.lang.String[],long,android.database.ContentObserver)>(r0, class "com/android/emailcommon/provider/Account", $r3, $r2, l0, r1);

        $r5 = (com.android.emailcommon.provider.Account) $r4;

        return $r5;
    }

    public static com.android.emailcommon.provider.Account restoreAccountWithAddress(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.emailcommon.provider.Account $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithAddress(android.content.Context,java.lang.String,android.database.ContentObserver)>(r0, r1, null);

        return $r2;
    }

    public static com.android.emailcommon.provider.Account restoreAccountWithAddress(android.content.Context, java.lang.String, android.database.ContentObserver)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.database.ContentObserver r2;
        android.database.Cursor r3;
        long l0;
        android.content.ContentResolver $r4;
        java.lang.String[] $r5, $r6;
        android.net.Uri $r7;
        boolean $z0;
        int $i1;
        com.android.emailcommon.provider.Account $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.database.ContentObserver;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "_id";

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        r3 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r5, "emailAddress=?", $r6, null);

        if r3 == null goto label1;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $i1 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        l0 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>($i1);

        $r8 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long,android.database.ContentObserver)>(r0, l0, r2);

        return $r8;
    }

    protected android.net.Uri getContentNotificationUri()
    {
        com.android.emailcommon.provider.Account r0;
        android.net.Uri $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        return $r1;
    }

    public void refresh(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        android.database.Cursor r2;
        java.lang.Throwable r3, $r7;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;
        java.lang.String[] $r6;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke r0.<com.android.emailcommon.provider.Account: android.net.Uri getUri()>();

        $r6 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        r2 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r6, null, null, null);

     label1:
        interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        virtualinvoke r0.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r2);

     label2:
        if r2 == null goto label6;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

     label4:
        if r2 == null goto label5;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void restore(android.database.Cursor)
    {
        com.android.emailcommon.provider.Account r0;
        android.database.Cursor r1;
        long $l0, $l3, $l4, $l6, $l7;
        android.net.Uri $r2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i1, $i2, $i5;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.database.Cursor;

        $l0 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        r0.<com.android.emailcommon.provider.Account: long mId> = $l0;

        $r2 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r0.<com.android.emailcommon.provider.Account: android.net.Uri mBaseUri> = $r2;

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName> = $r3;

        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(2);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress> = $r4;

        $r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(3);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSyncKey> = $r5;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        r0.<com.android.emailcommon.provider.Account: int mSyncLookback> = $i1;

        $i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(5);

        r0.<com.android.emailcommon.provider.Account: int mSyncInterval> = $i2;

        $l3 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(6);

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv> = $l3;

        $l4 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(7);

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend> = $l4;

        $i5 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(8);

        r0.<com.android.emailcommon.provider.Account: int mFlags> = $i5;

        $r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(9);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName> = $r6;

        $r7 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(10);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri> = $r7;

        $r8 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(11);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion> = $r8;

        $r9 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(12);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey> = $r9;

        $r10 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(13);

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature> = $r10;

        $l6 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(14);

        r0.<com.android.emailcommon.provider.Account: long mPolicyKey> = $l6;

        $l7 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(15);

        r0.<com.android.emailcommon.provider.Account: long mPingDuration> = $l7;

        return;
    }

    public boolean isTemporary()
    {
        com.android.emailcommon.provider.Account r0;
        boolean $z0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $z0 = r0.<com.android.emailcommon.provider.Account: boolean mTemporary>;

        return $z0;
    }

    public void setTemporary(boolean)
    {
        com.android.emailcommon.provider.Account r0;
        boolean z0;

        r0 := @this: com.android.emailcommon.provider.Account;

        z0 := @parameter0: boolean;

        r0.<com.android.emailcommon.provider.Account: boolean mTemporary> = z0;

        return;
    }

    private static long getId(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.String $r3;
        long $l0;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(1);

        $r3 = (java.lang.String) $r2;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        return $l0;
    }

    public long getId()
    {
        com.android.emailcommon.provider.Account r0;
        long $l0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mId>;

        return $l0;
    }

    public java.lang.String getDisplayName()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        return $r1;
    }

    public void setDisplayName(java.lang.String)
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName> = r1;

        return;
    }

    public java.lang.String getEmailAddress()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        return $r1;
    }

    public void setEmailAddress(java.lang.String)
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress> = r1;

        return;
    }

    public java.lang.String getSenderName()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        return $r1;
    }

    public void setSenderName(java.lang.String)
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName> = r1;

        return;
    }

    public java.lang.String getSignature()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature>;

        return $r1;
    }

    public void setSignature(java.lang.String)
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature> = r1;

        return;
    }

    public int getSyncInterval()
    {
        com.android.emailcommon.provider.Account r0;
        int $i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $i0 = r0.<com.android.emailcommon.provider.Account: int mSyncInterval>;

        return $i0;
    }

    public void setSyncInterval(int)
    {
        com.android.emailcommon.provider.Account r0;
        int i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        i0 := @parameter0: int;

        r0.<com.android.emailcommon.provider.Account: int mSyncInterval> = i0;

        return;
    }

    public int getSyncLookback()
    {
        com.android.emailcommon.provider.Account r0;
        int $i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $i0 = r0.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        return $i0;
    }

    public void setSyncLookback(int)
    {
        com.android.emailcommon.provider.Account r0;
        int i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        i0 := @parameter0: int;

        r0.<com.android.emailcommon.provider.Account: int mSyncLookback> = i0;

        return;
    }

    public long getPingDuration()
    {
        com.android.emailcommon.provider.Account r0;
        long $l0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mPingDuration>;

        return $l0;
    }

    public void setPingDuration(long)
    {
        com.android.emailcommon.provider.Account r0;
        long l0;

        r0 := @this: com.android.emailcommon.provider.Account;

        l0 := @parameter0: long;

        r0.<com.android.emailcommon.provider.Account: long mPingDuration> = l0;

        return;
    }

    public int getFlags()
    {
        com.android.emailcommon.provider.Account r0;
        int $i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        $i0 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        return $i0;
    }

    public void setFlags(int)
    {
        com.android.emailcommon.provider.Account r0;
        int i0;

        r0 := @this: com.android.emailcommon.provider.Account;

        i0 := @parameter0: int;

        r0.<com.android.emailcommon.provider.Account: int mFlags> = i0;

        return;
    }

    public java.lang.String getRingtone()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r1 = r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri>;

        return $r1;
    }

    public void setDeletePolicy(int)
    {
        com.android.emailcommon.provider.Account r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.emailcommon.provider.Account;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        $i2 = $i1 & -13;

        r0.<com.android.emailcommon.provider.Account: int mFlags> = $i2;

        $i5 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        $i3 = i0 << 2;

        $i4 = $i3 & 12;

        $i6 = $i5 | $i4;

        r0.<com.android.emailcommon.provider.Account: int mFlags> = $i6;

        return;
    }

    public int getDeletePolicy()
    {
        com.android.emailcommon.provider.Account r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.emailcommon.provider.Account;

        $i0 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        $i1 = $i0 & 12;

        $i2 = $i1 >> 2;

        return $i2;
    }

    public com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        com.android.emailcommon.provider.HostAuth $r2, $r3, $r4, $r5;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r2 != null goto label2;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        $r5 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r1, $l2);

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend> = $r5;

        goto label2;

     label1:
        $r4 = new com.android.emailcommon.provider.HostAuth;

        specialinvoke $r4.<com.android.emailcommon.provider.HostAuth: void <init>()>();

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend> = $r4;

     label2:
        $r3 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        return $r3;
    }

    public com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        com.android.emailcommon.provider.HostAuth $r2, $r3, $r4, $r5;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        $r2 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r2 != null goto label2;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        $r5 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r1, $l2);

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv> = $r5;

        goto label2;

     label1:
        $r4 = new com.android.emailcommon.provider.HostAuth;

        specialinvoke $r4.<com.android.emailcommon.provider.HostAuth: void <init>()>();

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv> = $r4;

     label2:
        $r3 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        return $r3;
    }

    public static long getDefaultAccountId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, l1, l2, l3;
        android.database.Cursor r1;
        java.lang.Throwable r2, $r6;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        android.net.Uri $r5;
        boolean $z0, $z1;
        byte $b4, $b5;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r4 = <com.android.emailcommon.provider.Account: java.lang.String[] ID_PROJECTION>;

        r1 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r4, null, null, null);

        l1 = -1L;

     label01:
        if r1 == null goto label07;

        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label07;

     label02:
        l2 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(0);

        $b4 = l2 cmp l0;

        if $b4 != 0 goto label05;

        l3 = l2;

     label03:
        if r1 == null goto label04;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label04:
        return l3;

     label05:
        $b5 = l1 cmp -1L;

        if $b5 != 0 goto label06;

        l1 = l2;

     label06:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 != 0 goto label02;

     label07:
        if r1 == null goto label11;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label11;

     label08:
        $r6 := @caughtexception;

        r2 = $r6;

     label09:
        if r1 == null goto label10;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label10:
        throw r2;

     label11:
        return l1;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static java.lang.String getProtocol(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        com.android.emailcommon.provider.Account r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, l0);

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)>(r0);

        return $r2;

     label1:
        return null;
    }

    public java.lang.String getProtocol(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        com.android.emailcommon.provider.HostAuth r2;
        java.lang.String $r3;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        if r2 == null goto label1;

        $r3 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        return $r3;

     label1:
        return null;
    }

    public android.accounts.Account getAccountManagerAccount(java.lang.String)
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.String r1, $r3;
        android.accounts.Account $r2;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: java.lang.String;

        $r2 = new android.accounts.Account;

        $r3 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        specialinvoke $r2.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r3, r1);

        return $r2;
    }

    public static long getAccountIdForMessageId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $l1 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: long getKeyColumnLong(android.content.Context,long,java.lang.String)>(r0, l0, "accountKey");

        return $l1;
    }

    public static com.android.emailcommon.provider.Account getAccountForMessageId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, l1;
        byte $b2;
        com.android.emailcommon.provider.Account $r1;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 = staticinvoke <com.android.emailcommon.provider.Account: long getAccountIdForMessageId(android.content.Context,long)>(r0, l0);

        $b2 = l1 cmp -1L;

        if $b2 == 0 goto label1;

        $r1 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, l1);

        return $r1;

     label1:
        return null;
    }

    public static boolean isValidId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String[] $r1, $r3;
        android.net.Uri $r2;
        java.lang.String $r4;
        java.lang.Long $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r2 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r3 = <com.android.emailcommon.provider.Account: java.lang.String[] ID_PROJECTION>;

        $r1 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r1[0] = $r4;

        $r5 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)>(r0, $r2, $r3, "_id =?", $r1, null, 0);

        if null == $r5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSecurityHold(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l1, $l2;
        android.net.Uri $r1, $r2;
        java.lang.String[] $r3;
        java.lang.Long $r4, $r5;
        byte $b3;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, l0);

        $r3 = <com.android.emailcommon.provider.Account: java.lang.String[] ACCOUNT_FLAGS_PROJECTION>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r5 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Long)>(r0, $r2, $r3, null, null, null, 1, $r4);

        $l1 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $l2 = $l1 & 32L;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static long getInboxId(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l1;
        java.lang.String[] $r1, $r3;
        android.net.Uri $r2;
        java.lang.String $r4;
        java.lang.Long $r5, $r6;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r2 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r3 = <com.android.emailcommon.provider.Account: java.lang.String[] ID_PROJECTION>;

        $r1 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r1[0] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r6 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Long getFirstRowLong(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Long)>(r0, $r2, $r3, "type = 0 AND accountKey =?", $r1, null, 0, $r5);

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public static void clearSecurityHoldOnAllAccounts(android.content.Context)
    {
        android.content.Context r0;
        android.content.ContentResolver r1;
        android.database.Cursor r2;
        int i0, $i2, $i3;
        android.content.ContentValues r3, $r8;
        long l1;
        android.net.Uri r4, $r7, $r10;
        java.lang.Throwable r5, $r11;
        java.lang.String[] $r6;
        boolean $z0;
        java.lang.Integer $r9;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r6 = <com.android.emailcommon.provider.Account: java.lang.String[] ACCOUNT_FLAGS_PROJECTION>;

        r2 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r6, "policyKey IS NOT NULL AND policyKey!=0", null, null);

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        i0 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(1);

        $i2 = i0 & 32;

        if 0 == $i2 goto label2;

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        r3 = $r8;

        $i3 = i0 & -33;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r9);

        l1 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $r10 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r10, l1);

        virtualinvoke r1.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r4, r3, null, null);

     label2:
        goto label1;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r11 := @caughtexception;

        r5 = $r11;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.net.Uri save(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10;
        java.util.ArrayList r2, $r7;
        android.content.ContentProviderOperation$Builder r3, $r43, $r46, $r64, $r72, r79, r82;
        android.content.ContentValues r4, $r11, $r12, $r32, $r34, $r49, $r58, $r60, $r71, r80, r81;
        android.content.ContentProviderResult[] r5;
        long l5, $l6, l11;
        boolean $z0, $z4;
        com.android.emailcommon.provider.HostAuth $r6, $r8, $r9, $r22, $r24, $r26, $r28, $r33, $r37, $r42, $r45, $r47, $r50, $r52, $r53, $r61, $r63, $r68, $r73;
        android.net.Uri $r10, $r18, $r21, $r29, $r40, $r59, $r65, $r77, r83;
        android.content.ContentProviderOperation $r13, $r35, $r44, $r56, $r70;
        android.content.ContentResolver $r15;
        java.lang.String $r16;
        android.content.ContentProviderResult $r17, $r19, $r20;
        java.lang.Integer $r25, $r27, $r39, $r66;
        com.android.emailcommon.provider.Credential $r30, $r36, $r41, $r48, $r51, $r54, $r55, $r62, $r74;
        com.android.emailcommon.provider.Policy $r69;
        android.content.OperationApplicationException $r75;
        android.os.RemoteException $r76;
        java.lang.UnsupportedOperationException $r78;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        $z0 = virtualinvoke r0.<com.android.emailcommon.provider.Account: boolean isSaved()>();

        if $z0 == 0 goto label01;

        $r78 = new java.lang.UnsupportedOperationException;

        specialinvoke $r78.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r78;

     label01:
        $r6 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r6 != null goto label02;

        $r68 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r68 != null goto label02;

        $r69 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        if $r69 == null goto label02;

        $r77 = specialinvoke r0.<com.android.emailcommon.provider.EmailContent: android.net.Uri save(android.content.Context)>(r1);

        return $r77;

     label02:
        i0 = 0;

        i1 = -1;

        i2 = -1;

        i3 = -1;

        i4 = -1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        $r9 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r9 == null goto label05;

        $r50 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r51 = $r50.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        if $r51 == null goto label03;

        $i10 = i0;

        i0 = i0 + 1;

        i2 = $i10;

        $r63 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r62 = $r63.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $r65 = $r62.<com.android.emailcommon.provider.Credential: android.net.Uri mBaseUri>;

        $r64 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r65);

        $r73 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r74 = $r73.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $r71 = virtualinvoke $r74.<com.android.emailcommon.provider.Credential: android.content.ContentValues toContentValues()>();

        $r72 = virtualinvoke $r64.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>($r71);

        $r70 = virtualinvoke $r72.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r70);

     label03:
        $i9 = i0;

        i0 = i0 + 1;

        i1 = $i9;

        $r52 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r59 = $r52.<com.android.emailcommon.provider.HostAuth: android.net.Uri mBaseUri>;

        r3 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r59);

        $r61 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r60 = virtualinvoke $r61.<com.android.emailcommon.provider.HostAuth: android.content.ContentValues toContentValues()>();

        virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>($r60);

        if i2 < 0 goto label04;

        $r58 = new android.content.ContentValues;

        specialinvoke $r58.<android.content.ContentValues: void <init>()>();

        r4 = $r58;

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("credentialKey", $r66);

        virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)>(r4);

     label04:
        $r56 = virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);

     label05:
        $r8 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r8 == null goto label09;

        $r26 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r30 = $r26.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        if $r30 == null goto label07;

        $r37 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r36 = $r37.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        if $r36 == null goto label06;

        $r45 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r55 = $r45.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $r53 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r54 = $r53.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $z4 = virtualinvoke $r55.<com.android.emailcommon.provider.Credential: boolean equals(java.lang.Object)>($r54);

        if $z4 == 0 goto label06;

        i4 = i2;

        goto label07;

     label06:
        $i8 = i0;

        i0 = i0 + 1;

        i4 = $i8;

        $r42 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r41 = $r42.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $r40 = $r41.<com.android.emailcommon.provider.Credential: android.net.Uri mBaseUri>;

        $r46 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r40);

        $r47 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r48 = $r47.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential mCredential>;

        $r49 = virtualinvoke $r48.<com.android.emailcommon.provider.Credential: android.content.ContentValues toContentValues()>();

        $r43 = virtualinvoke $r46.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>($r49);

        $r44 = virtualinvoke $r43.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r44);

     label07:
        $i7 = i0;

        i0 = i0 + 1;

        i3 = $i7;

        $r28 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r29 = $r28.<com.android.emailcommon.provider.HostAuth: android.net.Uri mBaseUri>;

        r79 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r29);

        $r33 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r32 = virtualinvoke $r33.<com.android.emailcommon.provider.HostAuth: android.content.ContentValues toContentValues()>();

        virtualinvoke r79.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>($r32);

        if i4 < 0 goto label08;

        $r34 = new android.content.ContentValues;

        specialinvoke $r34.<android.content.ContentValues: void <init>()>();

        r80 = $r34;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r80.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("credentialKey", $r39);

        virtualinvoke r79.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)>(r80);

     label08:
        $r35 = virtualinvoke r79.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

     label09:
        r81 = null;

        if i1 >= 0 goto label10;

        if i3 < 0 goto label12;

     label10:
        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r81 = $r11;

        if i1 < 0 goto label11;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r81.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hostAuthKeyRecv", $r25);

     label11:
        if i3 < 0 goto label12;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r81.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hostAuthKeySend", $r27);

     label12:
        $r10 = r0.<com.android.emailcommon.provider.Account: android.net.Uri mBaseUri>;

        r82 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r10);

        $r12 = virtualinvoke r0.<com.android.emailcommon.provider.Account: android.content.ContentValues toContentValues()>();

        virtualinvoke r82.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>($r12);

        if r81 == null goto label13;

        virtualinvoke r82.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReferences(android.content.ContentValues)>(r81);

     label13:
        $r13 = virtualinvoke r82.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label14:
        $r15 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r16 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        r5 = virtualinvoke $r15.<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>($r16, r2);

        if i1 < 0 goto label15;

        $r20 = r5[i1];

        $r21 = $r20.<android.content.ContentProviderResult: android.net.Uri uri>;

        l5 = staticinvoke <com.android.emailcommon.provider.Account: long getId(android.net.Uri)>($r21);

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv> = l5;

        $r24 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r24.<com.android.emailcommon.provider.HostAuth: long mId> = l5;

     label15:
        if i3 < 0 goto label16;

        $r19 = r5[i3];

        $r18 = $r19.<android.content.ContentProviderResult: android.net.Uri uri>;

        l11 = staticinvoke <com.android.emailcommon.provider.Account: long getId(android.net.Uri)>($r18);

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend> = l11;

        $r22 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        $r22.<com.android.emailcommon.provider.HostAuth: long mId> = l11;

     label16:
        $r17 = r5[i0];

        r83 = $r17.<android.content.ContentProviderResult: android.net.Uri uri>;

        $l6 = staticinvoke <com.android.emailcommon.provider.Account: long getId(android.net.Uri)>(r83);

        r0.<com.android.emailcommon.provider.Account: long mId> = $l6;

     label17:
        return r83;

     label18:
        $r76 := @caughtexception;

        goto label20;

     label19:
        $r75 := @caughtexception;

     label20:
        return null;

        catch android.os.RemoteException from label14 to label17 with label18;
        catch android.content.OperationApplicationException from label14 to label17 with label19;
    }

    public android.content.ContentValues toContentValues()
    {
        com.android.emailcommon.provider.Account r0;
        android.content.ContentValues r1, $r2;
        java.lang.String $r3, $r4, $r5, $r10, $r12, $r13, $r14, $r15;
        int $i0, $i1, $i4;
        java.lang.Integer $r6, $r7, $r11;
        long $l2, $l3, $l5, $l6;
        java.lang.Long $r8, $r9, $r16, $r17;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("displayName", $r3);

        $r4 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("emailAddress", $r4);

        $r5 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSyncKey>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("syncKey", $r5);

        $i0 = r0.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncLookback", $r6);

        $i1 = r0.<com.android.emailcommon.provider.Account: int mSyncInterval>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncInterval", $r7);

        $l2 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("hostAuthKeyRecv", $r8);

        $l3 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("hostAuthKeySend", $r9);

        $i4 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r11);

        $r10 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("senderName", $r10);

        $r13 = r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ringtoneUri", $r13);

        $r12 = r0.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("protocolVersion", $r12);

        $r15 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("securitySyncKey", $r15);

        $r14 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("signature", $r14);

        $l5 = r0.<com.android.emailcommon.provider.Account: long mPolicyKey>;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("policyKey", $r16);

        $l6 = r0.<com.android.emailcommon.provider.Account: long mPingDuration>;

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("pingDuration", $r17);

        return r1;
    }

    public java.lang.String toJsonString(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        org.json.JSONObject r2;
        java.lang.String $r3;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<com.android.emailcommon.provider.Account: void ensureLoaded(android.content.Context)>(r1);

        r2 = virtualinvoke r0.<com.android.emailcommon.provider.Account: org.json.JSONObject toJson()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<org.json.JSONObject: java.lang.String toString()>();

        return $r3;

     label1:
        return null;
    }

    protected org.json.JSONObject toJson()
    {
        com.android.emailcommon.provider.Account r0;
        org.json.JSONObject r1, r2, r3, $r4;
        java.lang.String $r5, $r7, $r14, $r16, $r18, $r26;
        int $i0, $i1, $i2;
        com.android.emailcommon.provider.HostAuth $r11, $r13, $r21;
        long $l3;
        java.lang.Object[] $r24;
        org.json.JSONException $r25, r27;

        r0 := @this: com.android.emailcommon.provider.Account;

     label1:
        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("displayName", $r5);

        $r7 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("emailAddress", $r7);

        $i0 = r0.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("syncLookback", $i0);

        $i1 = r0.<com.android.emailcommon.provider.Account: int mSyncInterval>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("syncInterval", $i1);

        $r11 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        r2 = virtualinvoke $r11.<com.android.emailcommon.provider.HostAuth: org.json.JSONObject toJson()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("hostAuthRecv", r2);

        $r13 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r13 == null goto label2;

        $r21 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        r3 = virtualinvoke $r21.<com.android.emailcommon.provider.HostAuth: org.json.JSONObject toJson()>();

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("hostAuthSend", r3);

     label2:
        $i2 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("flags", $i2);

        $r14 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("senderName", $r14);

        $r16 = r0.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("protocolVersion", $r16);

        $r18 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject putOpt(java.lang.String,java.lang.Object)>("signature", $r18);

        $l3 = r0.<com.android.emailcommon.provider.Account: long mPingDuration>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("pingDuration", $l3);

     label3:
        return r1;

     label4:
        $r25 := @caughtexception;

        r27 = $r25;

        $r26 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r24 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r26, r27, "Exception while serializing Account", $r24);

        return null;

        catch org.json.JSONException from label1 to label3 with label4;
    }

    public static com.android.emailcommon.provider.Account fromJsonString(java.lang.String)
    {
        java.lang.String r0, $r6;
        org.json.JSONObject r1, $r2;
        com.android.emailcommon.provider.Account $r3;
        org.json.JSONException $r4, r7;
        java.lang.Object[] $r5;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        $r3 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account fromJson(org.json.JSONObject)>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r7 = $r4;

        $r6 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r6, r7, "Could not parse json for account", $r5);

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    protected static com.android.emailcommon.provider.Account fromJson(org.json.JSONObject)
    {
        org.json.JSONObject r0, r2, r3;
        com.android.emailcommon.provider.Account r1, $r4;
        java.lang.String $r5, $r6, $r8, $r9, $r10, $r13;
        int $i0, $i1, $i2, $i4;
        com.android.emailcommon.provider.HostAuth $r7, $r12;
        long $l3;
        org.json.JSONException $r11, r15;
        java.lang.Object[] $r14;

        r0 := @parameter0: org.json.JSONObject;

     label1:
        $r4 = new com.android.emailcommon.provider.Account;

        specialinvoke $r4.<com.android.emailcommon.provider.Account: void <init>()>();

        r1 = $r4;

        $r5 = virtualinvoke r0.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("displayName");

        r1.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName> = $r5;

        $r6 = virtualinvoke r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("emailAddress");

        r1.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress> = $r6;

        $i0 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("syncLookback");

        r1.<com.android.emailcommon.provider.Account: int mSyncLookback> = $i0;

        $i1 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("syncInterval");

        r1.<com.android.emailcommon.provider.Account: int mSyncInterval> = $i1;

        r2 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("hostAuthRecv");

        $r7 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth fromJson(org.json.JSONObject)>(r2);

        r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv> = $r7;

        r3 = virtualinvoke r0.<org.json.JSONObject: org.json.JSONObject optJSONObject(java.lang.String)>("hostAuthSend");

        if r3 == null goto label2;

        $r12 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth fromJson(org.json.JSONObject)>(r3);

        r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend> = $r12;

     label2:
        $i2 = virtualinvoke r0.<org.json.JSONObject: int getInt(java.lang.String)>("flags");

        r1.<com.android.emailcommon.provider.Account: int mFlags> = $i2;

        $r8 = virtualinvoke r0.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("senderName");

        r1.<com.android.emailcommon.provider.Account: java.lang.String mSenderName> = $r8;

        $r9 = virtualinvoke r0.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("protocolVersion");

        r1.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion> = $r9;

        $r10 = virtualinvoke r0.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("signature");

        r1.<com.android.emailcommon.provider.Account: java.lang.String mSignature> = $r10;

        $i4 = virtualinvoke r0.<org.json.JSONObject: int optInt(java.lang.String,int)>("pingDuration", 0);

        $l3 = (long) $i4;

        r1.<com.android.emailcommon.provider.Account: long mPingDuration> = $l3;

     label3:
        return r1;

     label4:
        $r11 := @caughtexception;

        r15 = $r11;

        $r13 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r13, r15, "Exception while deserializing Account", $r14);

        return null;

        catch org.json.JSONException from label1 to label3 with label4;
    }

    public void ensureLoaded(android.content.Context)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        long $l0, $l2;
        byte $b1, $b3;
        com.android.emailcommon.provider.HostAuth $r2, $r4, $r5, $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.content.Context;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $r6 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r6 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to load incomplete Account object");

        throw $r7;

     label1:
        $r2 = virtualinvoke r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        virtualinvoke $r2.<com.android.emailcommon.provider.HostAuth: void ensureLoaded(android.content.Context)>(r1);

        $l2 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label2;

        virtualinvoke r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r1);

        $r4 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r4 == null goto label2;

        $r5 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        virtualinvoke $r5.<com.android.emailcommon.provider.HostAuth: void ensureLoaded(android.content.Context)>(r1);

     label2:
        return;
    }

    public int describeContents()
    {
        com.android.emailcommon.provider.Account r0;

        r0 := @this: com.android.emailcommon.provider.Account;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        com.android.emailcommon.provider.Account r0;
        android.os.Parcel r1;
        int i0, $i2, $i3, $i6;
        long $l1, $l4, $l5, $l7;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        com.android.emailcommon.provider.HostAuth $r10, $r11, $r12, $r13;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $l1 = r0.<com.android.emailcommon.provider.Account: long mId>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $r2 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r2);

        $r3 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        $r4 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSyncKey>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r4);

        $i2 = r0.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<com.android.emailcommon.provider.Account: int mSyncInterval>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $l4 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l4);

        $l5 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l5);

        $i6 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i6);

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>("");

        $r5 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = r0.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r7);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

        $r8 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r8);

        $r9 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r9);

        $l7 = r0.<com.android.emailcommon.provider.Account: long mPolicyKey>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l7);

        $r11 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r11 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r12 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        virtualinvoke $r12.<com.android.emailcommon.provider.HostAuth: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label2:
        $r10 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        if $r10 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(1);

        $r13 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend>;

        virtualinvoke $r13.<com.android.emailcommon.provider.HostAuth: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        goto label4;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeByte(byte)>(0);

     label4:
        return;
    }

    public void <init>(android.os.Parcel)
    {
        com.android.emailcommon.provider.Account r0;
        android.os.Parcel r1;
        android.net.Uri $r2;
        long $l0, $l3, $l4, $l7;
        java.lang.String $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        int $i1, $i2, $i5;
        byte $b8, $b9;
        com.android.emailcommon.provider.HostAuth $r12, $r13;

        r0 := @this: com.android.emailcommon.provider.Account;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<com.android.emailcommon.provider.EmailContent: void <init>()>();

        $r2 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r0.<com.android.emailcommon.provider.Account: android.net.Uri mBaseUri> = $r2;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.emailcommon.provider.Account: long mId> = $l0;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName> = $r3;

        $r4 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress> = $r4;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSyncKey> = $r5;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.emailcommon.provider.Account: int mSyncLookback> = $i1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.emailcommon.provider.Account: int mSyncInterval> = $i2;

        $l3 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv> = $l3;

        $l4 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.emailcommon.provider.Account: long mHostAuthKeySend> = $l4;

        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<com.android.emailcommon.provider.Account: int mFlags> = $i5;

        virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        $r7 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName> = $r7;

        $r8 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mRingtoneUri> = $r8;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion> = $r9;

        virtualinvoke r1.<android.os.Parcel: int readInt()>();

        $r10 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey> = $r10;

        $r11 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<com.android.emailcommon.provider.Account: java.lang.String mSignature> = $r11;

        $l7 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<com.android.emailcommon.provider.Account: long mPolicyKey> = $l7;

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv> = null;

        $b9 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b9 != 1 goto label1;

        $r12 = new com.android.emailcommon.provider.HostAuth;

        specialinvoke $r12.<com.android.emailcommon.provider.HostAuth: void <init>(android.os.Parcel)>(r1);

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv> = $r12;

     label1:
        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend> = null;

        $b8 = virtualinvoke r1.<android.os.Parcel: byte readByte()>();

        if $b8 != 1 goto label2;

        $r13 = new com.android.emailcommon.provider.HostAuth;

        specialinvoke $r13.<com.android.emailcommon.provider.HostAuth: void <init>(android.os.Parcel)>(r1);

        r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthSend> = $r13;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        com.android.emailcommon.provider.Account r0;
        java.lang.StringBuilder r1, $r2;
        com.android.emailcommon.provider.HostAuth $r3, $r16, $r18;
        java.lang.String $r4, $r6, $r8, $r10, $r11, $r13, $r15, $r19, $r21;

        r0 := @this: com.android.emailcommon.provider.Account;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        r1 = $r2;

        $r3 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r3 == null goto label1;

        $r16 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r19 = $r16.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        if $r19 == null goto label1;

        $r18 = r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r21 = $r18.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label1:
        $r4 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        if $r4 == null goto label2;

        $r15 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r6 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        if $r6 == null goto label3;

        $r13 = r0.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label3:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r8 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        if $r8 == null goto label4;

        $r11 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSenderName>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;
        com.android.emailcommon.provider.Account$1 $r2;

        <com.android.emailcommon.provider.Account: java.lang.String FIND_INBOX_SELECTION> = "type = 0 AND accountKey =?";

        <com.android.emailcommon.provider.Account: java.lang.String SECURITY_NONZERO_SELECTION> = "policyKey IS NOT NULL AND policyKey!=0";

        <com.android.emailcommon.provider.Account: int ACCOUNT_FLAGS_COLUMN_FLAGS> = 1;

        <com.android.emailcommon.provider.Account: int ACCOUNT_FLAGS_COLUMN_ID> = 0;

        <com.android.emailcommon.provider.Account: int CONTENT_MAX_ATTACHMENT_SIZE_COLUMN> = 16;

        <com.android.emailcommon.provider.Account: int CONTENT_PING_DURATION_COLUMN> = 15;

        <com.android.emailcommon.provider.Account: int CONTENT_POLICY_KEY_COLUMN> = 14;

        <com.android.emailcommon.provider.Account: int CONTENT_SIGNATURE_COLUMN> = 13;

        <com.android.emailcommon.provider.Account: int CONTENT_SECURITY_SYNC_KEY_COLUMN> = 12;

        <com.android.emailcommon.provider.Account: int CONTENT_PROTOCOL_VERSION_COLUMN> = 11;

        <com.android.emailcommon.provider.Account: int CONTENT_RINGTONE_URI_COLUMN> = 10;

        <com.android.emailcommon.provider.Account: int CONTENT_SENDER_NAME_COLUMN> = 9;

        <com.android.emailcommon.provider.Account: int CONTENT_FLAGS_COLUMN> = 8;

        <com.android.emailcommon.provider.Account: int CONTENT_HOST_AUTH_KEY_SEND_COLUMN> = 7;

        <com.android.emailcommon.provider.Account: int CONTENT_HOST_AUTH_KEY_RECV_COLUMN> = 6;

        <com.android.emailcommon.provider.Account: int CONTENT_SYNC_INTERVAL_COLUMN> = 5;

        <com.android.emailcommon.provider.Account: int CONTENT_SYNC_LOOKBACK_COLUMN> = 4;

        <com.android.emailcommon.provider.Account: int CONTENT_SYNC_KEY_COLUMN> = 3;

        <com.android.emailcommon.provider.Account: int CONTENT_EMAIL_ADDRESS_COLUMN> = 2;

        <com.android.emailcommon.provider.Account: int CONTENT_DISPLAY_NAME_COLUMN> = 1;

        <com.android.emailcommon.provider.Account: int CONTENT_ID_COLUMN> = 0;

        <com.android.emailcommon.provider.Account: java.lang.String JSON_TAG_HOST_AUTH_SEND> = "hostAuthSend";

        <com.android.emailcommon.provider.Account: java.lang.String JSON_TAG_HOST_AUTH_RECV> = "hostAuthRecv";

        <com.android.emailcommon.provider.Account: int CHECK_INTERVAL_PUSH> = -2;

        <com.android.emailcommon.provider.Account: int CHECK_INTERVAL_NEVER> = -1;

        <com.android.emailcommon.provider.Account: int DELETE_POLICY_ON_DELETE> = 2;

        <com.android.emailcommon.provider.Account: int DELETE_POLICY_7DAYS> = 1;

        <com.android.emailcommon.provider.Account: int DELETE_POLICY_NEVER> = 0;

        <com.android.emailcommon.provider.Account: int FLAGS_INITIAL_FOLDER_LIST_LOADED> = 8192;

        <com.android.emailcommon.provider.Account: int FLAGS_SUPPORTS_GLOBAL_SEARCH> = 4096;

        <com.android.emailcommon.provider.Account: int FLAGS_SUPPORTS_SEARCH> = 2048;

        <com.android.emailcommon.provider.Account: int FLAGS_SYNC_DISABLED> = 1024;

        <com.android.emailcommon.provider.Account: int FLAGS_SYNC_ADAPTER> = 512;

        <com.android.emailcommon.provider.Account: int FLAGS_BACKGROUND_ATTACHMENTS> = 256;

        <com.android.emailcommon.provider.Account: int FLAGS_SUPPORTS_SMART_FORWARD> = 128;

        <com.android.emailcommon.provider.Account: int FLAGS_SECURITY_HOLD> = 32;

        <com.android.emailcommon.provider.Account: int FLAGS_INCOMPLETE> = 16;

        <com.android.emailcommon.provider.Account: int FLAGS_DELETE_POLICY_SHIFT> = 2;

        <com.android.emailcommon.provider.Account: int FLAGS_DELETE_POLICY_MASK> = 12;

        <com.android.emailcommon.provider.Account: int FLAGS_VIBRATE> = 2;

        <com.android.emailcommon.provider.Account: int FLAGS_NOTIFY_NEW_MAIL> = 1;

        <com.android.emailcommon.provider.Account: long NO_ACCOUNT> = -1L;

        <com.android.emailcommon.provider.Account: long ACCOUNT_ID_COMBINED_VIEW> = 1152921504606846976L;

        <com.android.emailcommon.provider.Account: java.lang.String TABLE_NAME> = "Account";

        $r0 = newarray (java.lang.String)[17];

        $r0[0] = "_id";

        $r0[1] = "displayName";

        $r0[2] = "emailAddress";

        $r0[3] = "syncKey";

        $r0[4] = "syncLookback";

        $r0[5] = "syncInterval";

        $r0[6] = "hostAuthKeyRecv";

        $r0[7] = "hostAuthKeySend";

        $r0[8] = "flags";

        $r0[9] = "senderName";

        $r0[10] = "ringtoneUri";

        $r0[11] = "protocolVersion";

        $r0[12] = "securitySyncKey";

        $r0[13] = "signature";

        $r0[14] = "policyKey";

        $r0[15] = "pingDuration";

        $r0[16] = "maxAttachmentSize";

        <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "_id";

        $r1[1] = "flags";

        <com.android.emailcommon.provider.Account: java.lang.String[] ACCOUNT_FLAGS_PROJECTION> = $r1;

        $r2 = new com.android.emailcommon.provider.Account$1;

        specialinvoke $r2.<com.android.emailcommon.provider.Account$1: void <init>()>();

        <com.android.emailcommon.provider.Account: android.os.Parcelable$Creator CREATOR> = $r2;

        return;
    }
}
