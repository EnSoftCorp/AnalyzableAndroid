class com.google.common.collect.MinMaxPriorityQueue$Heap extends java.lang.Object
{
    final com.google.common.collect.Ordering ordering;
    com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap;
    final com.google.common.collect.MinMaxPriorityQueue this$0;

    void <init>(com.google.common.collect.MinMaxPriorityQueue, com.google.common.collect.Ordering)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        com.google.common.collect.MinMaxPriorityQueue r1;
        com.google.common.collect.Ordering r2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        r1 := @parameter0: com.google.common.collect.MinMaxPriorityQueue;

        r2 := @parameter1: com.google.common.collect.Ordering;

        r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering> = r2;

        return;
    }

    int compareElements(int, int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, $i2;
        com.google.common.collect.MinMaxPriorityQueue $r1, $r4;
        com.google.common.collect.Ordering $r2;
        java.lang.Object $r3, $r5;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r3 = virtualinvoke $r1.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i0);

        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r5 = virtualinvoke $r4.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        $i2 = virtualinvoke $r2.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r3, $r5);

        return $i2;
    }

    com.google.common.collect.MinMaxPriorityQueue$MoveDesc tryCrossOverAndBubbleUp(int, int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0, $r4;
        int i0, i1, i2, $i3, $i4;
        java.lang.Object r1, r2;
        com.google.common.collect.MinMaxPriorityQueue $r3, $r6;
        com.google.common.collect.MinMaxPriorityQueue$MoveDesc $r5;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        i2 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOver(int,java.lang.Object)>(i1, r1);

        if i2 != i1 goto label1;

        return null;

     label1:
        if i2 >= i0 goto label2;

        $r6 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        r2 = virtualinvoke $r6.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i0);

        goto label3;

     label2:
        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i3 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i0);

        r2 = virtualinvoke $r3.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>($i3);

     label3:
        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap>;

        $i4 = virtualinvoke $r4.<com.google.common.collect.MinMaxPriorityQueue$Heap: int bubbleUpAlternatingLevels(int,java.lang.Object)>(i2, r1);

        if $i4 >= i0 goto label4;

        $r5 = new com.google.common.collect.MinMaxPriorityQueue$MoveDesc;

        specialinvoke $r5.<com.google.common.collect.MinMaxPriorityQueue$MoveDesc: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r5;

     label4:
        return null;
    }

    void bubbleUp(int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0, r2;
        int i0, i1;
        java.lang.Object r1;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOverUp(int,java.lang.Object)>(i0, r1);

        if i1 != i0 goto label1;

        r2 = r0;

        goto label2;

     label1:
        i0 = i1;

        r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap>;

     label2:
        virtualinvoke r2.<com.google.common.collect.MinMaxPriorityQueue$Heap: int bubbleUpAlternatingLevels(int,java.lang.Object)>(i0, r1);

        return;
    }

    int bubbleUpAlternatingLevels(int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, $i2;
        java.lang.Object r1, r2;
        com.google.common.collect.MinMaxPriorityQueue $r3, $r5, $r7;
        java.lang.Object[] $r4, $r8;
        com.google.common.collect.Ordering $r6;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

     label1:
        if i0 <= 2 goto label3;

        i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getGrandparentIndex(int)>(i0);

        $r5 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        r2 = virtualinvoke $r5.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        $r6 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i2 = virtualinvoke $r6.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r2, r1);

        if $i2 > 0 goto label2;

        goto label3;

     label2:
        $r7 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r8 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r7);

        $r8[i0] = r2;

        i0 = i1;

        goto label1;

     label3:
        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r3);

        $r4[i0] = r1;

        return i0;
    }

    int findMin(int, int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        com.google.common.collect.MinMaxPriorityQueue $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i5 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        if i0 < $i5 goto label1;

        return -1;

     label1:
        if i0 <= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i6 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        $i7 = $i6 - i1;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i7);

        i2 = $i8 + i1;

        i3 = i0;

        i4 = i0 + 1;

     label4:
        if i4 >= i2 goto label6;

        $i9 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>(i4, i3);

        if $i9 >= 0 goto label5;

        i3 = i4;

     label5:
        i4 = i4 + 1;

        goto label4;

     label6:
        return i3;
    }

    int findMinChild(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i0);

        $i2 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMin(int,int)>($i1, 2);

        return $i2;
    }

    int findMinGrandChild(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i0);

        if i1 >= 0 goto label1;

        return -1;

     label1:
        $i2 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i1);

        $i3 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMin(int,int)>($i2, 4);

        return $i3;
    }

    int crossOverUp(int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.Object r1, r2, r3;
        com.google.common.collect.MinMaxPriorityQueue $r4, $r6, $r8, $r9, $r12, $r13, $r16;
        com.google.common.collect.Ordering $r5, $r14;
        java.lang.Object[] $r7, $r10, $r11, $r15;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        if i0 != 0 goto label1;

        $r16 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r15 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r16);

        $r15[0] = r1;

        return 0;

     label1:
        i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i0);

        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        r2 = virtualinvoke $r4.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        if i1 == 0 goto label2;

        i2 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i1);

        i3 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>(i2);

        if i3 == i1 goto label2;

        $i5 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i3);

        $r12 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i6 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r12);

        if $i5 < $i6 goto label2;

        $r13 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        r3 = virtualinvoke $r13.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i3);

        $r14 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i7 = virtualinvoke $r14.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r3, r2);

        if $i7 >= 0 goto label2;

        i1 = i3;

        r2 = r3;

     label2:
        $r5 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i4 = virtualinvoke $r5.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r2, r1);

        if $i4 >= 0 goto label3;

        $r8 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r10 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r8);

        $r10[i0] = r2;

        $r9 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r11 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r9);

        $r11[i1] = r1;

        return i1;

     label3:
        $r6 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r7 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r6);

        $r7[i0] = r1;

        return i0;
    }

    int getCorrectLastElement(java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        java.lang.Object r1, r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.google.common.collect.MinMaxPriorityQueue $r3, $r4, $r5, $r6, $r9, $r11, $r12;
        com.google.common.collect.Ordering $r7;
        java.lang.Object[] $r8, $r10;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i3 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r3);

        i0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i3);

        if i0 == 0 goto label1;

        i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i0);

        i2 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>(i1);

        if i2 == i0 goto label1;

        $i5 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i2);

        $r5 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i6 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r5);

        if $i5 < $i6 goto label1;

        $r6 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        r2 = virtualinvoke $r6.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i2);

        $r7 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $i7 = virtualinvoke $r7.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>(r2, r1);

        if $i7 >= 0 goto label1;

        $r9 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r8 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r9);

        $r8[i2] = r1;

        $r11 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r10 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r11);

        $r12 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i8 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r12);

        $r10[$i8] = r2;

        return i2;

     label1:
        $r4 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i4 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r4);

        return $i4;
    }

    int crossOver(int, java.lang.Object)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, $i2, $i3;
        java.lang.Object r1, $r4, $r8;
        com.google.common.collect.MinMaxPriorityQueue $r2, $r5, $r7, $r9;
        com.google.common.collect.Ordering $r3;
        java.lang.Object[] $r6, $r10;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        i1 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMinChild(int)>(i0);

        if i1 <= 0 goto label1;

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.Ordering ordering>;

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r2.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        $i3 = virtualinvoke $r3.<com.google.common.collect.Ordering: int compare(java.lang.Object,java.lang.Object)>($r4, r1);

        if $i3 >= 0 goto label1;

        $r5 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r6 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r5);

        $r7 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        $r6[i0] = $r8;

        $r9 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r10 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r9);

        $r10[i1] = r1;

        return i1;

     label1:
        $i2 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int crossOverUp(int,java.lang.Object)>(i0, r1);

        return $i2;
    }

    int fillHoleAt(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, i1, $i2;
        com.google.common.collect.MinMaxPriorityQueue $r1, $r3;
        java.lang.Object[] $r2;
        java.lang.Object $r4;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

     label1:
        $i2 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int findMinGrandChild(int)>(i0);

        i1 = $i2;

        if $i2 <= 0 goto label2;

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        $r3 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $r4 = virtualinvoke $r3.<com.google.common.collect.MinMaxPriorityQueue: java.lang.Object elementData(int)>(i1);

        $r2[i0] = $r4;

        i0 = i1;

        goto label1;

     label2:
        return i0;
    }

    private boolean verifyIndex(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.google.common.collect.MinMaxPriorityQueue $r1, $r2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i0);

        $r1 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i2 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r1);

        if $i1 >= $i2 goto label1;

        $i11 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getLeftChildIndex(int)>(i0);

        $i12 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>(i0, $i11);

        if $i12 <= 0 goto label1;

        return 0;

     label1:
        $i3 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>(i0);

        $r2 = r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: com.google.common.collect.MinMaxPriorityQueue this$0>;

        $i4 = staticinvoke <com.google.common.collect.MinMaxPriorityQueue: int access$600(com.google.common.collect.MinMaxPriorityQueue)>($r2);

        if $i3 >= $i4 goto label2;

        $i9 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getRightChildIndex(int)>(i0);

        $i10 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>(i0, $i9);

        if $i10 <= 0 goto label2;

        return 0;

     label2:
        if i0 <= 0 goto label3;

        $i7 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i0);

        $i8 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>(i0, $i7);

        if $i8 <= 0 goto label3;

        return 0;

     label3:
        if i0 <= 2 goto label4;

        $i5 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getGrandparentIndex(int)>(i0);

        $i6 = virtualinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int compareElements(int,int)>($i5, i0);

        if $i6 <= 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private int getLeftChildIndex(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = i0 * 2;

        $i2 = $i1 + 1;

        return $i2;
    }

    private int getRightChildIndex(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = i0 * 2;

        $i2 = $i1 + 2;

        return $i2;
    }

    private int getParentIndex(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        $i2 = $i1 / 2;

        return $i2;
    }

    private int getGrandparentIndex(int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0, $i1, $i2;

        r0 := @this: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter0: int;

        $i1 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>(i0);

        $i2 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: int getParentIndex(int)>($i1);

        return $i2;
    }

    static boolean access$400(com.google.common.collect.MinMaxPriorityQueue$Heap, int)
    {
        com.google.common.collect.MinMaxPriorityQueue$Heap r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.google.common.collect.MinMaxPriorityQueue$Heap;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.google.common.collect.MinMaxPriorityQueue$Heap: boolean verifyIndex(int)>(i0);

        return $z0;
    }
}
