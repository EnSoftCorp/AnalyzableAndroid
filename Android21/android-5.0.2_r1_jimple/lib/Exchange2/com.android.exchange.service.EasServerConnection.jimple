public class com.android.exchange.service.EasServerConnection extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final long CONNECTION_TIMEOUT;
    protected static final long COMMAND_TIMEOUT;
    private static final java.lang.String DEVICE_TYPE;
    private static final java.lang.String USER_AGENT;
    private static final java.lang.String EAS_14_MIME_TYPE;
    public static final int STOPPED_REASON_NONE;
    public static final int STOPPED_REASON_ABORT;
    public static final int STOPPED_REASON_RESTART;
    private static final java.lang.String[] ACCOUNT_SECURITY_KEY_PROJECTION;
    private static java.lang.String sDeviceId;
    protected final android.content.Context mContext;
    protected final com.android.emailcommon.provider.HostAuth mHostAuth;
    protected final com.android.emailcommon.provider.Account mAccount;
    private final long mAccountId;
    private org.apache.http.client.methods.HttpUriRequest mPendingRequest;
    private boolean mStopped;
    private int mStoppedReason;
    private double mProtocolVersion;
    private boolean mProtocolVersionIsSet;
    private org.apache.http.client.HttpClient mClient;
    private com.android.emailcommon.utility.EmailClientConnectionManager mClientConnectionManager;

    public void <init>(android.content.Context, com.android.emailcommon.provider.Account, com.android.emailcommon.provider.HostAuth)
    {
        com.android.exchange.service.EasServerConnection r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.HostAuth r3;
        long $l0;
        java.lang.String $r4;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        r3 := @parameter2: com.android.emailcommon.provider.HostAuth;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest> = null;

        r0.<com.android.exchange.service.EasServerConnection: boolean mStopped> = 0;

        r0.<com.android.exchange.service.EasServerConnection: int mStoppedReason> = 0;

        r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion> = 0.0;

        r0.<com.android.exchange.service.EasServerConnection: boolean mProtocolVersionIsSet> = 0;

        r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext> = r1;

        r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth> = r3;

        r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.Account mAccount> = r2;

        $l0 = r2.<com.android.emailcommon.provider.Account: long mId>;

        r0.<com.android.exchange.service.EasServerConnection: long mAccountId> = $l0;

        $r4 = r2.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        virtualinvoke r0.<com.android.exchange.service.EasServerConnection: boolean setProtocolVersion(java.lang.String)>($r4);

        return;
    }

    protected com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager() throws java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        com.android.emailcommon.utility.EmailClientConnectionManager r1, $r5;
        com.android.exchange.eas.EasConnectionCache $r2;
        com.android.emailcommon.provider.HostAuth $r3;
        android.content.Context $r4;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r2 = staticinvoke <com.android.exchange.eas.EasConnectionCache: com.android.exchange.eas.EasConnectionCache instance()>();

        $r4 = r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext>;

        $r3 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        r1 = virtualinvoke $r2.<com.android.exchange.eas.EasConnectionCache: com.android.emailcommon.utility.EmailClientConnectionManager getConnectionManager(android.content.Context,com.android.emailcommon.provider.HostAuth)>($r4, $r3);

        $r5 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager mClientConnectionManager>;

        if $r5 == r1 goto label1;

        r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager mClientConnectionManager> = r1;

        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient mClient> = null;

     label1:
        return r1;
    }

    public void redirectHostAuth(java.lang.String)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1;
        android.content.ContentValues r2, $r7;
        com.android.emailcommon.provider.HostAuth $r3, $r4, $r6, $r9;
        boolean $z0;
        com.android.exchange.eas.EasConnectionCache $r5;
        android.content.Context $r8;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient mClient> = null;

        $r3 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r3.<com.android.emailcommon.provider.HostAuth: java.lang.String mAddress> = r1;

        $r4 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $z0 = virtualinvoke $r4.<com.android.emailcommon.provider.HostAuth: boolean isSaved()>();

        if $z0 == 0 goto label1;

        $r5 = staticinvoke <com.android.exchange.eas.EasConnectionCache: com.android.exchange.eas.EasConnectionCache instance()>();

        $r6 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        virtualinvoke $r5.<com.android.exchange.eas.EasConnectionCache: void uncacheConnectionManager(com.android.emailcommon.provider.HostAuth)>($r6);

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>(int)>(1);

        r2 = $r7;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("address", r1);

        $r9 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r8 = r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext>;

        virtualinvoke $r9.<com.android.emailcommon.provider.HostAuth: int update(android.content.Context,android.content.ContentValues)>($r8, r2);

     label1:
        return;
    }

    private org.apache.http.client.HttpClient getHttpClient(long) throws java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        long l0;
        org.apache.http.params.BasicHttpParams r1, $r4;
        org.apache.http.client.HttpClient $r2, $r3;
        int $i1;
        com.android.exchange.service.EasServerConnection$1 $r5;
        com.android.emailcommon.utility.EmailClientConnectionManager $r6;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient mClient>;

        if $r2 != null goto label1;

        $r4 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r4.<org.apache.http.params.BasicHttpParams: void <init>()>();

        r1 = $r4;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r1, 20000);

        $i1 = (int) l0;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r1, $i1);

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSocketBufferSize(org.apache.http.params.HttpParams,int)>(r1, 8192);

        $r5 = new com.android.exchange.service.EasServerConnection$1;

        $r6 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager()>();

        specialinvoke $r5.<com.android.exchange.service.EasServerConnection$1: void <init>(com.android.exchange.service.EasServerConnection,org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r0, $r6, r1);

        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient mClient> = $r5;

     label1:
        $r3 = r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient mClient>;

        return $r3;
    }

    private java.lang.String makeAuthString()
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1, $r4, $r8, $r13, $r15;
        java.lang.StringBuilder $r2, $r5, $r6, $r9, $r10, $r11, $r14;
        com.android.emailcommon.provider.HostAuth $r3, $r7;
        byte[] $r12;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r4 = $r3.<com.android.emailcommon.provider.HostAuth: java.lang.String mLogin>;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r8 = $r7.<com.android.emailcommon.provider.HostAuth: java.lang.String mPassword>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Basic ");

        $r12 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        $r13 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r12, 2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    private java.lang.String makeUserString()
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String $r1, $r5, $r6, $r9, $r13, $r16, $r17;
        java.lang.StringBuilder $r2, $r3, $r7, $r8, $r10, $r11, $r12;
        com.android.emailcommon.provider.HostAuth $r4;
        com.android.emailcommon.service.AccountServiceProxy $r14;
        android.content.Context $r15;
        java.lang.Object[] $r18;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r1 = <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId>;

        if $r1 != null goto label1;

        $r14 = new com.android.emailcommon.service.AccountServiceProxy;

        $r15 = r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext>;

        specialinvoke $r14.<com.android.emailcommon.service.AccountServiceProxy: void <init>(android.content.Context)>($r15);

        $r17 = virtualinvoke $r14.<com.android.emailcommon.service.AccountServiceProxy: java.lang.String getDeviceId()>();

        <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId> = $r17;

        $r16 = <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId>;

        if $r16 != null goto label1;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Could not get device id, defaulting to \'0\'", $r18);

        <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId> = "0";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&User=");

        $r4 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r5 = $r4.<com.android.emailcommon.provider.HostAuth: java.lang.String mLogin>;

        $r6 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&DeviceId=");

        $r9 = <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&DeviceType=");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Android");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private java.lang.String makeBaseUriString()
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.StringBuilder $r1, $r7, $r8, $r11, $r12;
        com.android.emailcommon.provider.HostAuth $r2, $r3, $r4, $r9;
        boolean $z0, $z1;
        java.lang.String $r5, $r6, $r10, $r13;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $z0 = virtualinvoke $r2.<com.android.emailcommon.provider.HostAuth: boolean shouldUseSsl()>();

        $r3 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $z1 = virtualinvoke $r3.<com.android.emailcommon.provider.HostAuth: boolean shouldTrustAllServerCerts()>();

        $r4 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r5 = $r4.<com.android.emailcommon.provider.HostAuth: java.lang.String mClientCertAlias>;

        $r6 = staticinvoke <com.android.emailcommon.utility.EmailClientConnectionManager: java.lang.String makeScheme(boolean,boolean,java.lang.String)>($z0, $z1, $r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r9 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r10 = $r9.<com.android.emailcommon.provider.HostAuth: java.lang.String mAddress>;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Microsoft-Server-ActiveSync");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String makeUriString(java.lang.String)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r8;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeBaseUriString()>();

        if r1 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?Cmd=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeUserString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r2;
    }

    private java.lang.String makeUriString(java.lang.String, java.lang.String)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1, r2, $r4, $r7;
        java.lang.StringBuilder $r3, $r5, $r6;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeUriString(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean setProtocolVersion(java.lang.String)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1;
        double d0, $d1, $d2;
        java.lang.Double $r2;
        byte $b0;
        boolean $z0, $z1;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.android.exchange.service.EasServerConnection: boolean mProtocolVersionIsSet> = $z1;

        if r1 != null goto label3;

        r1 = "2.5";

     label3:
        d0 = r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion>;

        $r2 = staticinvoke <com.android.exchange.Eas: java.lang.Double getProtocolVersionDouble(java.lang.String)>(r1);

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion> = $d1;

        $d2 = r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion>;

        $b0 = d0 cmpl $d2;

        if $b0 == 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public double getProtocolVersion()
    {
        com.android.exchange.service.EasServerConnection r0;
        double $d0;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $d0 = r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion>;

        return $d0;
    }

    public final java.lang.String getUserAgent()
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String $r1;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r1 = <com.android.exchange.service.EasServerConnection: java.lang.String USER_AGENT>;

        return $r1;
    }

    protected com.android.exchange.EasResponse sendHttpClientOptions() throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        org.apache.http.client.methods.HttpOptions r1, $r2;
        java.lang.String $r3, $r5, $r6;
        java.net.URI $r4;
        com.android.emailcommon.utility.EmailClientConnectionManager $r7;
        org.apache.http.client.HttpClient $r8;
        com.android.exchange.EasResponse $r9;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r2 = new org.apache.http.client.methods.HttpOptions;

        $r3 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeBaseUriString()>();

        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        specialinvoke $r2.<org.apache.http.client.methods.HttpOptions: void <init>(java.net.URI)>($r4);

        r1 = $r2;

        $r5 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeAuthString()>();

        virtualinvoke r1.<org.apache.http.client.methods.HttpOptions: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r5);

        $r6 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String getUserAgent()>();

        virtualinvoke r1.<org.apache.http.client.methods.HttpOptions: void setHeader(java.lang.String,java.lang.String)>("User-Agent", $r6);

        $r7 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager()>();

        $r8 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient getHttpClient(long)>(30000L);

        $r9 = staticinvoke <com.android.exchange.EasResponse: com.android.exchange.EasResponse fromHttpRequest(com.android.emailcommon.utility.EmailClientConnectionManager,org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)>($r7, $r8, r1);

        return $r9;
    }

    protected void resetAuthorization(org.apache.http.client.methods.HttpPost)
    {
        com.android.exchange.service.EasServerConnection r0;
        org.apache.http.client.methods.HttpPost r1;
        java.lang.String $r2;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: org.apache.http.client.methods.HttpPost;

        virtualinvoke r1.<org.apache.http.client.methods.HttpPost: void removeHeaders(java.lang.String)>("Authorization");

        $r2 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeAuthString()>();

        virtualinvoke r1.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r2);

        return;
    }

    public org.apache.http.client.methods.HttpPost makePost(java.lang.String, org.apache.http.HttpEntity, java.lang.String, boolean)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1, r3, r5, r6, $r8, $r9, $r10;
        org.apache.http.HttpEntity r2;
        boolean z0, $z1;
        org.apache.http.client.methods.HttpPost r4, $r7;
        double $d0;
        byte $b0;
        long $l1, $l2;
        android.net.Uri $r11, $r12;
        android.content.Context $r13;
        java.lang.String[] $r14;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.HttpEntity;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r7 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r7.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>(r1);

        r4 = $r7;

        $r8 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeAuthString()>();

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r8);

        $d0 = r0.<com.android.exchange.service.EasServerConnection: double mProtocolVersion>;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("MS-ASProtocolVersion", $r9);

        $r10 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String getUserAgent()>();

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("User-Agent", $r10);

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

        if r3 == null goto label1;

        if r2 == null goto label1;

        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Content-Type", r3);

     label1:
        if z0 == 0 goto label6;

        $l1 = r0.<com.android.exchange.service.EasServerConnection: long mAccountId>;

        $b0 = $l1 cmp -1L;

        if $b0 != 0 goto label2;

        r6 = null;

        goto label3;

     label2:
        $r13 = r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext>;

        $r11 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l2 = r0.<com.android.exchange.service.EasServerConnection: long mAccountId>;

        $r12 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r11, $l2);

        $r14 = <com.android.exchange.service.EasServerConnection: java.lang.String[] ACCOUNT_SECURITY_KEY_PROJECTION>;

        r6 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String getFirstRowString(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)>($r13, $r12, $r14, null, null, null, 0);

     label3:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label4;

        r5 = r6;

        goto label5;

     label4:
        r5 = "0";

     label5:
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("X-MS-PolicyKey", r5);

     label6:
        virtualinvoke r4.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>(r2);

        return r4;
    }

    public org.apache.http.client.methods.HttpGet makeGet(java.lang.String)
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1;
        org.apache.http.client.methods.HttpGet r2, $r3;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        $r3 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r3.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>(r1);

        r2 = $r3;

        return r2;
    }

    public org.apache.http.client.methods.HttpOptions makeOptions()
    {
        com.android.exchange.service.EasServerConnection r0;
        org.apache.http.client.methods.HttpOptions r1, $r2;
        java.lang.String $r3, $r5, $r6;
        java.net.URI $r4;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r2 = new org.apache.http.client.methods.HttpOptions;

        $r3 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeBaseUriString()>();

        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        specialinvoke $r2.<org.apache.http.client.methods.HttpOptions: void <init>(java.net.URI)>($r4);

        r1 = $r2;

        $r5 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeAuthString()>();

        virtualinvoke r1.<org.apache.http.client.methods.HttpOptions: void setHeader(java.lang.String,java.lang.String)>("Authorization", $r5);

        $r6 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String getUserAgent()>();

        virtualinvoke r1.<org.apache.http.client.methods.HttpOptions: void setHeader(java.lang.String,java.lang.String)>("User-Agent", $r6);

        return r1;
    }

    protected com.android.exchange.EasResponse sendHttpClientPost(java.lang.String, org.apache.http.HttpEntity, long) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1, r3, r4, r7;
        org.apache.http.HttpEntity r2;
        long l0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i1;
        org.apache.http.client.methods.HttpPost r5;
        com.android.exchange.EasResponse $r6;
        double $d0;
        byte $b2;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.HttpEntity;

        l0 := @parameter2: long;

        z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("Ping");

        r3 = null;

        z1 = 0;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SmartForward&");

        if $z2 != 0 goto label01;

        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SmartReply&");

        if $z4 == 0 goto label02;

     label01:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(38);

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i1);

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        z1 = 1;

        goto label03;

     label02:
        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SendMail&");

        if $z5 == 0 goto label03;

        z1 = 1;

     label03:
        if z1 == 0 goto label04;

        $d0 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: double getProtocolVersion()>();

        $b2 = $d0 cmpg 14.0;

        if $b2 >= 0 goto label04;

        r7 = "message/rfc822";

        goto label06;

     label04:
        if r2 == null goto label05;

        r7 = "application/vnd.ms-sync.wbxml";

        goto label06;

     label05:
        r7 = null;

     label06:
        if r3 != null goto label07;

        r4 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeUriString(java.lang.String)>(r1);

        goto label08;

     label07:
        r4 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: java.lang.String makeUriString(java.lang.String,java.lang.String)>(r1, r3);

     label08:
        if z0 != 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        r5 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpPost makePost(java.lang.String,org.apache.http.HttpEntity,java.lang.String,boolean)>(r4, r2, r7, $z3);

        if z0 == 0 goto label11;

        virtualinvoke r5.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>("Connection", "close");

     label11:
        $r6 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.exchange.EasResponse executeHttpUriRequest(org.apache.http.client.methods.HttpUriRequest,long)>(r5, l0);

        return $r6;
    }

    public com.android.exchange.EasResponse sendHttpClientPost(java.lang.String, byte[], long) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1;
        byte[] r2;
        long l0;
        org.apache.http.entity.ByteArrayEntity r3, $r4;
        com.android.exchange.EasResponse $r5;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        l0 := @parameter2: long;

        if r2 != null goto label1;

        r3 = null;

        goto label2;

     label1:
        $r4 = new org.apache.http.entity.ByteArrayEntity;

        specialinvoke $r4.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>(r2);

        r3 = $r4;

     label2:
        $r5 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,org.apache.http.HttpEntity,long)>(r1, r3, l0);

        return $r5;
    }

    protected com.android.exchange.EasResponse sendHttpClientPost(java.lang.String, byte[]) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        java.lang.String r1;
        byte[] r2;
        com.android.exchange.EasResponse $r3;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        $r3 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.exchange.EasResponse sendHttpClientPost(java.lang.String,byte[],long)>(r1, r2, 30000L);

        return $r3;
    }

    public com.android.exchange.EasResponse executeHttpUriRequest(org.apache.http.client.methods.HttpUriRequest, long) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0, r2, r5, r8;
        org.apache.http.client.methods.HttpUriRequest r1;
        long l0;
        java.lang.Throwable r3, r6, r7, r9, $r16, $r18, $r19, $r20;
        com.android.exchange.EasResponse r4, r22;
        java.lang.Object[] $r10;
        org.apache.http.RequestLine $r11;
        boolean $z0, z1;
        com.android.emailcommon.utility.EmailClientConnectionManager $r13;
        org.apache.http.client.HttpClient $r14;
        java.io.IOException $r17;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        l0 := @parameter1: long;

        $r10 = newarray (java.lang.Object)[1];

        $r11 = interfaceinvoke r1.<org.apache.http.client.methods.HttpUriRequest: org.apache.http.RequestLine getRequestLine()>();

        $r10[0] = $r11;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "EasServerConnection about to make request %s", $r10);

        r2 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.exchange.service.EasServerConnection: boolean mStopped>;

        if $z0 == 0 goto label02;

        r0.<com.android.exchange.service.EasServerConnection: boolean mStopped> = 0;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("Command was stopped before POST");

        throw $r17;

     label02:
        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest> = r1;

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r2;

     label05:
        throw r3;

     label06:
        z1 = 0;

     label07:
        $r13 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager()>();

        $r14 = specialinvoke r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.HttpClient getHttpClient(long)>(l0);

        r22 = staticinvoke <com.android.exchange.EasResponse: com.android.exchange.EasResponse fromHttpRequest(com.android.emailcommon.utility.EmailClientConnectionManager,org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)>($r13, $r14, r1);

        z1 = 1;

        r4 = r22;

     label08:
        r5 = r0;

        entermonitor r0;

     label09:
        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest> = null;

        if z1 == 0 goto label10;

        r0.<com.android.exchange.service.EasServerConnection: int mStoppedReason> = 0;

     label10:
        exitmonitor r5;

     label11:
        goto label14;

     label12:
        $r18 := @caughtexception;

        r6 = $r18;

        exitmonitor r5;

     label13:
        throw r6;

     label14:
        return r4;

     label15:
        $r19 := @caughtexception;

        r7 = $r19;

     label16:
        r8 = r0;

        entermonitor r0;

     label17:
        r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest> = null;

        if z1 == 0 goto label18;

        r0.<com.android.exchange.service.EasServerConnection: int mStoppedReason> = 0;

     label18:
        exitmonitor r8;

     label19:
        goto label22;

     label20:
        $r20 := @caughtexception;

        r9 = $r20;

        exitmonitor r8;

     label21:
        throw r9;

     label22:
        throw r7;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label17 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected com.android.exchange.EasResponse executePost(org.apache.http.client.methods.HttpPost) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.exchange.service.EasServerConnection r0;
        org.apache.http.client.methods.HttpPost r1;
        com.android.exchange.EasResponse $r2;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        r1 := @parameter0: org.apache.http.client.methods.HttpPost;

        $r2 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.exchange.EasResponse executeHttpUriRequest(org.apache.http.client.methods.HttpUriRequest,long)>(r1, 30000L);

        return $r2;
    }

    public synchronized void stop(int)
    {
        com.android.exchange.service.EasServerConnection r0;
        int i0;
        boolean z0, $z1;
        org.apache.http.client.methods.HttpUriRequest $r1, $r6;
        java.lang.Object[] $r2;
        java.lang.Integer $r5;
        java.lang.String $r7;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        i0 := @parameter0: int;

        if i0 < 1 goto label6;

        if i0 > 2 goto label6;

        $r1 = r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest>;

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = newarray (java.lang.Object)[2];

        if z0 == 0 goto label3;

        $r7 = "Interrupt";

        goto label4;

     label3:
        $r7 = "Stop next";

     label4:
        $r2[0] = $r7;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r5;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "%s with reason %d", $r2);

        r0.<com.android.exchange.service.EasServerConnection: int mStoppedReason> = i0;

        if z0 == 0 goto label5;

        $r6 = r0.<com.android.exchange.service.EasServerConnection: org.apache.http.client.methods.HttpUriRequest mPendingRequest>;

        interfaceinvoke $r6.<org.apache.http.client.methods.HttpUriRequest: void abort()>();

        goto label6;

     label5:
        r0.<com.android.exchange.service.EasServerConnection: boolean mStopped> = 1;

     label6:
        return;
    }

    public synchronized int getStoppedReason()
    {
        com.android.exchange.service.EasServerConnection r0;
        int $i0;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $i0 = r0.<com.android.exchange.service.EasServerConnection: int mStoppedReason>;

        return $i0;
    }

    public boolean registerClientCert()
    {
        com.android.exchange.service.EasServerConnection r0;
        com.android.emailcommon.provider.HostAuth $r2, $r5;
        java.lang.String $r3;
        com.android.emailcommon.utility.EmailClientConnectionManager $r4;
        android.content.Context $r6;
        java.security.cert.CertificateException $r7;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $r2 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        $r3 = $r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mClientCertAlias>;

        if $r3 == null goto label4;

     label1:
        $r4 = virtualinvoke r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.utility.EmailClientConnectionManager getClientConnectionManager()>();

        $r6 = r0.<com.android.exchange.service.EasServerConnection: android.content.Context mContext>;

        $r5 = r0.<com.android.exchange.service.EasServerConnection: com.android.emailcommon.provider.HostAuth mHostAuth>;

        virtualinvoke $r4.<com.android.emailcommon.utility.EmailClientConnectionManager: void registerClientCert(android.content.Context,com.android.emailcommon.provider.HostAuth)>($r6, $r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        return 0;

     label4:
        return 1;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }

    public boolean isProtocolVersionSet()
    {
        com.android.exchange.service.EasServerConnection r0;
        boolean $z0;

        r0 := @this: com.android.exchange.service.EasServerConnection;

        $z0 = r0.<com.android.exchange.service.EasServerConnection: boolean mProtocolVersionIsSet>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        java.lang.String $r2, $r6;
        java.lang.String[] $r7;

        <com.android.exchange.service.EasServerConnection: int STOPPED_REASON_RESTART> = 2;

        <com.android.exchange.service.EasServerConnection: int STOPPED_REASON_ABORT> = 1;

        <com.android.exchange.service.EasServerConnection: int STOPPED_REASON_NONE> = 0;

        <com.android.exchange.service.EasServerConnection: java.lang.String EAS_14_MIME_TYPE> = "application/vnd.ms-sync.wbxml";

        <com.android.exchange.service.EasServerConnection: java.lang.String DEVICE_TYPE> = "Android";

        <com.android.exchange.service.EasServerConnection: long COMMAND_TIMEOUT> = 30000L;

        <com.android.exchange.service.EasServerConnection: long CONNECTION_TIMEOUT> = 20000L;

        <com.android.exchange.service.EasServerConnection: java.lang.String TAG> = "Exchange";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Android/");

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EAS-2.0");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.exchange.service.EasServerConnection: java.lang.String USER_AGENT> = $r6;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "securitySyncKey";

        <com.android.exchange.service.EasServerConnection: java.lang.String[] ACCOUNT_SECURITY_KEY_PROJECTION> = $r7;

        <com.android.exchange.service.EasServerConnection: java.lang.String sDeviceId> = null;

        return;
    }
}
