public class com.android.calendarcommon2.RecurrenceSet extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String RULE_SEPARATOR;
    private static final java.lang.String FOLDING_SEPARATOR;
    public com.android.calendarcommon2.EventRecurrence[] rrules;
    public long[] rdates;
    public com.android.calendarcommon2.EventRecurrence[] exrules;
    public long[] exdates;
    private static final java.util.regex.Pattern IGNORABLE_ICAL_WHITESPACE_RE;
    private static final java.util.regex.Pattern FOLD_RE;

    public void <init>(android.content.ContentValues) throws com.android.calendarcommon2.EventRecurrence$InvalidFormatException
    {
        com.android.calendarcommon2.RecurrenceSet r0;
        android.content.ContentValues r1;
        java.lang.String r2, r3, r4, r5;

        r0 := @this: com.android.calendarcommon2.RecurrenceSet;

        r1 := @parameter0: android.content.ContentValues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] rdates> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] exdates> = null;

        r2 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rrule");

        r3 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rdate");

        r4 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exrule");

        r5 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exdate");

        specialinvoke r0.<com.android.calendarcommon2.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5);

        return;
    }

    public void <init>(android.database.Cursor) throws com.android.calendarcommon2.EventRecurrence$InvalidFormatException
    {
        com.android.calendarcommon2.RecurrenceSet r0;
        android.database.Cursor r1;
        int i0, i1, i2, i3;
        java.lang.String r2, r3, r4, r5;

        r0 := @this: com.android.calendarcommon2.RecurrenceSet;

        r1 := @parameter0: android.database.Cursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] rdates> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] exdates> = null;

        i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rrule");

        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rdate");

        i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exrule");

        i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exdate");

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i2);

        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i3);

        specialinvoke r0.<com.android.calendarcommon2.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.android.calendarcommon2.EventRecurrence$InvalidFormatException
    {
        com.android.calendarcommon2.RecurrenceSet r0;
        java.lang.String r1, r2, r3, r4;

        r0 := @this: com.android.calendarcommon2.RecurrenceSet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] rdates> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules> = null;

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] exdates> = null;

        specialinvoke r0.<com.android.calendarcommon2.RecurrenceSet: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    private void init(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.android.calendarcommon2.EventRecurrence$InvalidFormatException
    {
        com.android.calendarcommon2.RecurrenceSet r0;
        java.lang.String r1, r2, r3, r4, r7, $r23;
        java.lang.String[] r5, r24, r27;
        int i0, i1, i2, i3, $i5, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        com.android.calendarcommon2.EventRecurrence r6, $r19, $r22, r25;
        long[] r8, r9, $r11, $r13, $r18;
        long l4, $l6;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.util.ArrayList $r10, r26;
        java.lang.Object $r12;
        java.lang.Long $r14, $r15;
        com.android.calendarcommon2.EventRecurrence[] $r16, $r17, $r20, $r21;

        r0 := @this: com.android.calendarcommon2.RecurrenceSet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label01;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z6 != 0 goto label12;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label03;

        r5 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i10 = lengthof r5;

        $r20 = newarray (com.android.calendarcommon2.EventRecurrence)[$i10];

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules> = $r20;

        i0 = 0;

     label02:
        $i9 = lengthof r5;

        if i0 >= $i9 goto label03;

        $r22 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r22.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r6 = $r22;

        $r23 = r5[i0];

        virtualinvoke r6.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>($r23);

        $r21 = r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        $r21[i0] = r6;

        i0 = i0 + 1;

        goto label02;

     label03:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z3 != 0 goto label04;

        $r18 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: long[] parseRecurrenceDates(java.lang.String)>(r2);

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] rdates> = $r18;

     label04:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 != 0 goto label06;

        r24 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        $i7 = lengthof r24;

        $r16 = newarray (com.android.calendarcommon2.EventRecurrence)[$i7];

        r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules> = $r16;

        i11 = 0;

     label05:
        $i8 = lengthof r24;

        if i11 >= $i8 goto label06;

        $r19 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r19.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r25 = $r19;

        virtualinvoke r25.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>(r3);

        $r17 = r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] exrules>;

        $r17[i11] = r25;

        i11 = i11 + 1;

        goto label05;

     label06:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z4 != 0 goto label12;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r26 = $r10;

        r27 = virtualinvoke r4.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i12 = lengthof r27;

        i1 = 0;

     label07:
        if i1 >= i12 goto label10;

        r7 = r27[i1];

        r8 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: long[] parseRecurrenceDates(java.lang.String)>(r7);

        r9 = r8;

        i2 = lengthof r9;

        i3 = 0;

     label08:
        if i3 >= i2 goto label09;

        l4 = r9[i3];

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        interfaceinvoke r26.<java.util.List: boolean add(java.lang.Object)>($r15);

        i3 = i3 + 1;

        goto label08;

     label09:
        i1 = i1 + 1;

        goto label07;

     label10:
        $i5 = interfaceinvoke r26.<java.util.List: int size()>();

        $r11 = newarray (long)[$i5];

        r0.<com.android.calendarcommon2.RecurrenceSet: long[] exdates> = $r11;

        i13 = 0;

        i14 = interfaceinvoke r26.<java.util.List: int size()>();

     label11:
        if i13 >= i14 goto label12;

        $r13 = r0.<com.android.calendarcommon2.RecurrenceSet: long[] exdates>;

        $r12 = interfaceinvoke r26.<java.util.List: java.lang.Object get(int)>(i13);

        $r14 = (java.lang.Long) $r12;

        $l6 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $r13[i13] = $l6;

        i13 = i13 + 1;

        goto label11;

     label12:
        return;
    }

    public boolean hasRecurrence()
    {
        com.android.calendarcommon2.RecurrenceSet r0;
        com.android.calendarcommon2.EventRecurrence[] $r1;
        long[] $r2;
        boolean $z0;

        r0 := @this: com.android.calendarcommon2.RecurrenceSet;

        $r1 = r0.<com.android.calendarcommon2.RecurrenceSet: com.android.calendarcommon2.EventRecurrence[] rrules>;

        if $r1 != null goto label1;

        $r2 = r0.<com.android.calendarcommon2.RecurrenceSet: long[] rdates>;

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static long[] parseRecurrenceDates(java.lang.String) throws com.android.calendarcommon2.EventRecurrence$InvalidFormatException
    {
        java.lang.String r0, r1, $r7, $r13, $r16;
        int i0, i1, i2, $i4;
        android.text.format.Time r2, $r6;
        java.lang.String[] r3;
        long[] r4;
        long $l3;
        com.android.calendarcommon2.EventRecurrence$InvalidFormatException $r8;
        android.util.TimeFormatException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        r1 = "UTC";

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        if i0 == -1 goto label1;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i4 = i0 + 1;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4);

     label1:
        $r6 = new android.text.format.Time;

        specialinvoke $r6.<android.text.format.Time: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i1 = lengthof r3;

        r4 = newarray (long)[i1];

        i2 = 0;

     label2:
        if i2 >= i1 goto label7;

     label3:
        $r7 = r3[i2];

        virtualinvoke r2.<android.text.format.Time: boolean parse(java.lang.String)>($r7);

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

        $r8 = new com.android.calendarcommon2.EventRecurrence$InvalidFormatException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeFormatException thrown when parsing time ");

        $r13 = r3[i2];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in recurrence ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.calendarcommon2.EventRecurrence$InvalidFormatException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label6:
        $l3 = virtualinvoke r2.<android.text.format.Time: long toMillis(boolean)>(0);

        r4[i2] = $l3;

        r2.<android.text.format.Time: java.lang.String timezone> = r1;

        i2 = i2 + 1;

        goto label2;

     label7:
        return r4;

        catch android.util.TimeFormatException from label3 to label4 with label5;
    }

    public static boolean populateContentValues(com.android.calendarcommon2.ICalendar$Component, android.content.ContentValues)
    {
        com.android.calendarcommon2.ICalendar$Component r0;
        android.content.ContentValues r1;
        com.android.calendarcommon2.ICalendar$Property r2, $r13, $r14;
        java.lang.String r3, r5, r7, r8, r9, r10, r11, $r17, $r20, $r23, $r25;
        com.android.calendarcommon2.ICalendar$Parameter r4;
        android.text.format.Time r6, $r12;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        long l0;
        byte $b1, $b2;
        java.lang.Long $r16;
        java.lang.Integer $r18;
        java.lang.StringBuilder $r19, $r22, $r24;
        android.util.TimeFormatException $r21;

        r0 := @parameter0: com.android.calendarcommon2.ICalendar$Component;

        r1 := @parameter1: android.content.ContentValues;

     label01:
        r2 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)>("DTSTART");

        r3 = virtualinvoke r2.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        r4 = virtualinvoke r2.<com.android.calendarcommon2.ICalendar$Property: com.android.calendarcommon2.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if r4 != null goto label02;

        $r20 = null;

        goto label03;

     label02:
        $r20 = r4.<com.android.calendarcommon2.ICalendar$Parameter: java.lang.String value>;

     label03:
        r5 = $r20;

        $r12 = new android.text.format.Time;

        if r4 != null goto label04;

        $r17 = "UTC";

        goto label05;

     label04:
        $r17 = r5;

     label05:
        specialinvoke $r12.<android.text.format.Time: void <init>(java.lang.String)>($r17);

        r6 = $r12;

        z0 = virtualinvoke r6.<android.text.format.Time: boolean parse(java.lang.String)>(r3);

        z1 = r6.<android.text.format.Time: boolean allDay>;

        if z0 != 0 goto label06;

        if z1 == 0 goto label07;

     label06:
        r5 = "UTC";

     label07:
        r7 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String computeDuration(android.text.format.Time,com.android.calendarcommon2.ICalendar$Component)>(r6, r0);

        r8 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String flattenProperties(com.android.calendarcommon2.ICalendar$Component,java.lang.String)>(r0, "RRULE");

        $r13 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)>("RDATE");

        r9 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String extractDates(com.android.calendarcommon2.ICalendar$Property)>($r13);

        r10 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String flattenProperties(com.android.calendarcommon2.ICalendar$Component,java.lang.String)>(r0, "EXRULE");

        $r14 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)>("EXDATE");

        r11 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String extractDates(com.android.calendarcommon2.ICalendar$Property)>($r14);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z3 != 0 goto label08;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z2 != 0 goto label08;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z4 == 0 goto label09;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z5 == 0 goto label09;

     label08:
        return 0;

     label09:
        if z1 == 0 goto label10;

        r6.<android.text.format.Time: java.lang.String timezone> = "UTC";

     label10:
        l0 = virtualinvoke r6.<android.text.format.Time: long toMillis(boolean)>(0);

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r16);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label12;

     label11:
        return 0;

     label12:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r8);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rdate", r9);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("exrule", r10);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("exdate", r11);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", r5);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", r7);

        if z1 == 0 goto label13;

        $b2 = 1;

        goto label14;

     label13:
        $b2 = 0;

     label14:
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("allDay", $r18);

     label15:
        return 1;

     label16:
        $r21 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse event: ");

        $r25 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: java.lang.String toString()>();

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("RecurrenceSet", $r23);

        return 0;

        catch android.util.TimeFormatException from label01 to label08 with label16;
        catch android.util.TimeFormatException from label09 to label11 with label16;
        catch android.util.TimeFormatException from label12 to label15 with label16;
    }

    public static boolean populateComponent(android.database.Cursor, com.android.calendarcommon2.ICalendar$Component)
    {
        android.database.Cursor r0;
        com.android.calendarcommon2.ICalendar$Component r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i10;
        long l8;
        java.lang.String r2, r3, r4, r5, r6, r7, $r14;
        com.android.calendarcommon2.ICalendar$Property r8, r9, $r11, $r15;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte $b9;
        android.text.format.Time $r10, $r13, r17;
        com.android.calendarcommon2.ICalendar$Parameter $r12, $r16;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: com.android.calendarcommon2.ICalendar$Component;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("dtstart");

        i1 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("duration");

        i2 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("eventTimezone");

        i3 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rrule");

        i4 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("rdate");

        i5 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exrule");

        i6 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("exdate");

        i7 = interfaceinvoke r0.<android.database.Cursor: int getColumnIndex(java.lang.String)>("allDay");

        l8 = -1L;

        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean isNull(int)>(i0);

        if $z1 != 0 goto label1;

        l8 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(i0);

     label1:
        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r3 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i2);

        r4 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i3);

        r5 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i4);

        r7 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i5);

        r6 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i6);

        $i10 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(i7);

        if $i10 != 1 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        z0 = $z5;

        $b9 = l8 cmp -1L;

        if $b9 == 0 goto label4;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label4;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z4 == 0 goto label5;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z6 == 0 goto label5;

     label4:
        return 0;

     label5:
        $r11 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r11.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>("DTSTART");

        r8 = $r11;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z3 != 0 goto label7;

        if z0 != 0 goto label6;

        $r16 = new com.android.calendarcommon2.ICalendar$Parameter;

        specialinvoke $r16.<com.android.calendarcommon2.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("TZID", r3);

        virtualinvoke r8.<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)>($r16);

     label6:
        $r13 = new android.text.format.Time;

        specialinvoke $r13.<android.text.format.Time: void <init>(java.lang.String)>(r3);

        r17 = $r13;

        goto label8;

     label7:
        $r10 = new android.text.format.Time;

        specialinvoke $r10.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r17 = $r10;

     label8:
        virtualinvoke r17.<android.text.format.Time: void set(long)>(l8);

        if z0 == 0 goto label9;

        $r12 = new com.android.calendarcommon2.ICalendar$Parameter;

        specialinvoke $r12.<com.android.calendarcommon2.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("VALUE", "DATE");

        virtualinvoke r8.<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)>($r12);

        r17.<android.text.format.Time: boolean allDay> = 1;

        r17.<android.text.format.Time: int hour> = 0;

        r17.<android.text.format.Time: int minute> = 0;

        r17.<android.text.format.Time: int second> = 0;

     label9:
        $r14 = virtualinvoke r17.<android.text.format.Time: java.lang.String format2445()>();

        virtualinvoke r8.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>($r14);

        virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r8);

        $r15 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r15.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>("DURATION");

        r9 = $r15;

        virtualinvoke r9.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>(r2);

        virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r9);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertiesForRuleStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "RRULE", r4);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertyForDateStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "RDATE", r5);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertiesForRuleStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "EXRULE", r7);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertyForDateStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "EXDATE", r6);

        return 1;
    }

    public static boolean populateComponent(android.content.ContentValues, com.android.calendarcommon2.ICalendar$Component)
    {
        android.content.ContentValues r0;
        com.android.calendarcommon2.ICalendar$Component r1;
        long l0;
        java.lang.String r2, r3, r4, r5, r6, r7, $r12;
        java.lang.Integer r8;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.calendarcommon2.ICalendar$Property r9, r10, $r11, $r15;
        byte $b1;
        android.text.format.Time $r13, $r16, r19;
        com.android.calendarcommon2.ICalendar$Parameter $r14, $r17;
        int $i2;
        java.lang.Long $r18;

        r0 := @parameter0: android.content.ContentValues;

        r1 := @parameter1: com.android.calendarcommon2.ICalendar$Component;

        l0 = -1L;

        $z1 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtstart");

        if $z1 == 0 goto label01;

        $r18 = virtualinvoke r0.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("dtstart");

        l0 = virtualinvoke $r18.<java.lang.Long: long longValue()>();

     label01:
        r2 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("duration");

        r3 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventTimezone");

        r4 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rrule");

        r5 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("rdate");

        r6 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exrule");

        r7 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("exdate");

        r8 = virtualinvoke r0.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        if null == r8 goto label03;

        $i2 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        if $i2 != 1 goto label02;

        $z6 = 1;

        goto label04;

     label02:
        goto label04;

     label03:
        $z6 = 0;

     label04:
        z0 = $z6;

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label05;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z3 != 0 goto label05;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 == 0 goto label06;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z5 == 0 goto label06;

     label05:
        return 0;

     label06:
        $r11 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r11.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>("DTSTART");

        r9 = $r11;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z4 != 0 goto label08;

        if z0 != 0 goto label07;

        $r17 = new com.android.calendarcommon2.ICalendar$Parameter;

        specialinvoke $r17.<com.android.calendarcommon2.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("TZID", r3);

        virtualinvoke r9.<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)>($r17);

     label07:
        $r16 = new android.text.format.Time;

        specialinvoke $r16.<android.text.format.Time: void <init>(java.lang.String)>(r3);

        r19 = $r16;

        goto label09;

     label08:
        $r13 = new android.text.format.Time;

        specialinvoke $r13.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r19 = $r13;

     label09:
        virtualinvoke r19.<android.text.format.Time: void set(long)>(l0);

        if z0 == 0 goto label10;

        $r14 = new com.android.calendarcommon2.ICalendar$Parameter;

        specialinvoke $r14.<com.android.calendarcommon2.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("VALUE", "DATE");

        virtualinvoke r9.<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)>($r14);

        r19.<android.text.format.Time: boolean allDay> = 1;

        r19.<android.text.format.Time: int hour> = 0;

        r19.<android.text.format.Time: int minute> = 0;

        r19.<android.text.format.Time: int second> = 0;

     label10:
        $r12 = virtualinvoke r19.<android.text.format.Time: java.lang.String format2445()>();

        virtualinvoke r9.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>($r12);

        virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r9);

        $r15 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r15.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>("DURATION");

        r10 = $r15;

        virtualinvoke r10.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>(r2);

        virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r10);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertiesForRuleStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "RRULE", r4);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertyForDateStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "RDATE", r5);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertiesForRuleStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "EXRULE", r6);

        staticinvoke <com.android.calendarcommon2.RecurrenceSet: void addPropertyForDateStr(com.android.calendarcommon2.ICalendar$Component,java.lang.String,java.lang.String)>(r1, "EXDATE", r7);

        return 1;
    }

    public static void addPropertiesForRuleStr(com.android.calendarcommon2.ICalendar$Component, java.lang.String, java.lang.String)
    {
        com.android.calendarcommon2.ICalendar$Component r0;
        java.lang.String r1, r2, r5;
        java.lang.String[] r3, r4;
        int i0, i1;
        com.android.calendarcommon2.ICalendar$Property r6, $r7;
        boolean $z0;

        r0 := @parameter0: com.android.calendarcommon2.ICalendar$Component;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String[] getRuleStrings(java.lang.String)>(r2);

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r5 = r4[i1];

        $r7 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r7.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>(r1);

        r6 = $r7;

        virtualinvoke r6.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>(r5);

        virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r6);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    private static java.lang.String[] getRuleStrings(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4;
        java.lang.String[] r2, $r5;
        int i0, i1;

        r0 := @parameter0: java.lang.String;

        if null != r0 goto label1;

        $r5 = newarray (java.lang.String)[0];

        return $r5;

     label1:
        r1 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String unfold(java.lang.String)>(r0);

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r3 = r2[i1];

        $r4 = staticinvoke <com.android.calendarcommon2.RecurrenceSet: java.lang.String fold(java.lang.String)>($r3);

        r2[i1] = $r4;

        i1 = i1 + 1;

        goto label2;

     label3:
        return r2;
    }

    public static java.lang.String fold(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.calendarcommon2.RecurrenceSet: java.util.regex.Pattern FOLD_RE>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("$0\r\n ");

        return $r3;
    }

    public static java.lang.String unfold(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.calendarcommon2.RecurrenceSet: java.util.regex.Pattern IGNORABLE_ICAL_WHITESPACE_RE>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        return $r3;
    }

    public static void addPropertyForDateStr(com.android.calendarcommon2.ICalendar$Component, java.lang.String, java.lang.String)
    {
        com.android.calendarcommon2.ICalendar$Component r0;
        java.lang.String r1, r2, r4;
        com.android.calendarcommon2.ICalendar$Property r3, $r5;
        int i0, $i1;
        boolean $z0, $z1;
        com.android.calendarcommon2.ICalendar$Parameter $r6;

        r0 := @parameter0: com.android.calendarcommon2.ICalendar$Component;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new com.android.calendarcommon2.ICalendar$Property;

        specialinvoke $r5.<com.android.calendarcommon2.ICalendar$Property: void <init>(java.lang.String)>(r1);

        r3 = $r5;

        r4 = null;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(";");

        if i0 == -1 goto label2;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 != 0 goto label3;

        $r6 = new com.android.calendarcommon2.ICalendar$Parameter;

        specialinvoke $r6.<com.android.calendarcommon2.ICalendar$Parameter: void <init>(java.lang.String,java.lang.String)>("TZID", r4);

        virtualinvoke r3.<com.android.calendarcommon2.ICalendar$Property: void addParameter(com.android.calendarcommon2.ICalendar$Parameter)>($r6);

     label3:
        virtualinvoke r3.<com.android.calendarcommon2.ICalendar$Property: void setValue(java.lang.String)>(r2);

        virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: void addProperty(com.android.calendarcommon2.ICalendar$Property)>(r3);

        return;
    }

    private static java.lang.String computeDuration(android.text.format.Time, com.android.calendarcommon2.ICalendar$Component)
    {
        android.text.format.Time r0, r6, $r7;
        com.android.calendarcommon2.ICalendar$Component r1;
        com.android.calendarcommon2.ICalendar$Property r2, r3;
        com.android.calendarcommon2.ICalendar$Parameter r4;
        java.lang.String r5, $r8, $r13, $r18, $r19, $r20;
        long l0, l1, $l2, $l3, $l4, $l6;
        boolean $z1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        byte $b5;

        r0 := @parameter0: android.text.format.Time;

        r1 := @parameter1: com.android.calendarcommon2.ICalendar$Component;

        r2 = virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)>("DURATION");

        if r2 == null goto label1;

        $r18 = virtualinvoke r2.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        return $r18;

     label1:
        r3 = virtualinvoke r1.<com.android.calendarcommon2.ICalendar$Component: com.android.calendarcommon2.ICalendar$Property getFirstProperty(java.lang.String)>("DTEND");

        if r3 != null goto label2;

        return "+P0S";

     label2:
        r4 = virtualinvoke r3.<com.android.calendarcommon2.ICalendar$Property: com.android.calendarcommon2.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if r4 != null goto label3;

        $r20 = r0.<android.text.format.Time: java.lang.String timezone>;

        goto label4;

     label3:
        $r20 = r4.<com.android.calendarcommon2.ICalendar$Parameter: java.lang.String value>;

     label4:
        r5 = $r20;

        $r7 = new android.text.format.Time;

        specialinvoke $r7.<android.text.format.Time: void <init>(java.lang.String)>(r5);

        r6 = $r7;

        $r8 = virtualinvoke r3.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        virtualinvoke r6.<android.text.format.Time: boolean parse(java.lang.String)>($r8);

        $l2 = virtualinvoke r6.<android.text.format.Time: long toMillis(boolean)>(0);

        $l3 = virtualinvoke r0.<android.text.format.Time: long toMillis(boolean)>(0);

        l0 = $l2 - $l3;

        l1 = l0 / 1000L;

        $z1 = r0.<android.text.format.Time: boolean allDay>;

        if $z1 == 0 goto label5;

        $l4 = l1 % 86400L;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label5;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $l6 = l1 / 86400L;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label5:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private static java.lang.String flattenProperties(com.android.calendarcommon2.ICalendar$Component, java.lang.String)
    {
        com.android.calendarcommon2.ICalendar$Component r0;
        java.lang.String r1, $r8, $r10, $r14;
        java.util.List r2, $r7;
        java.lang.StringBuilder r3, $r6;
        boolean z0, $z1, $z2;
        java.util.Iterator r4;
        com.android.calendarcommon2.ICalendar$Property r5, $r15;
        int $i0;
        java.lang.Object $r9, $r12;

        r0 := @parameter0: com.android.calendarcommon2.ICalendar$Component;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: java.util.List getProperties(java.lang.String)>(r1);

        if r2 == null goto label1;

        $z1 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r15 = (com.android.calendarcommon2.ICalendar$Property) $r12;

        $r14 = virtualinvoke $r15.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        return $r14;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r3 = $r6;

        z0 = 1;

        $r7 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Component: java.util.List getProperties(java.lang.String)>(r1);

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r9 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.calendarcommon2.ICalendar$Property) $r9;

        if z0 == 0 goto label5;

        z0 = 0;

        goto label6;

     label5:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label6:
        $r10 = virtualinvoke r5.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        goto label4;

     label7:
        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String extractDates(com.android.calendarcommon2.ICalendar$Property)
    {
        com.android.calendarcommon2.ICalendar$Property r0;
        com.android.calendarcommon2.ICalendar$Parameter r1;
        java.lang.String $r2, $r4, $r7, $r9;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;

        r0 := @parameter0: com.android.calendarcommon2.ICalendar$Property;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Property: com.android.calendarcommon2.ICalendar$Parameter getFirstParameter(java.lang.String)>("TZID");

        if r1 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<com.android.calendarcommon2.ICalendar$Parameter: java.lang.String value>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r7 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;

     label2:
        $r2 = virtualinvoke r0.<com.android.calendarcommon2.ICalendar$Property: java.lang.String getValue()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        <com.android.calendarcommon2.RecurrenceSet: java.lang.String FOLDING_SEPARATOR> = "\n ";

        <com.android.calendarcommon2.RecurrenceSet: java.lang.String RULE_SEPARATOR> = "\n";

        <com.android.calendarcommon2.RecurrenceSet: java.lang.String TAG> = "RecurrenceSet";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?:\\r\\n?|\\n)[ \t]");

        <com.android.calendarcommon2.RecurrenceSet: java.util.regex.Pattern IGNORABLE_ICAL_WHITESPACE_RE> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(".{75}");

        <com.android.calendarcommon2.RecurrenceSet: java.util.regex.Pattern FOLD_RE> = $r1;

        return;
    }
}
