public class android.support.v4.widget.ViewDragHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int INVALID_POINTER;
    public static final int STATE_IDLE;
    public static final int STATE_DRAGGING;
    public static final int STATE_SETTLING;
    public static final int EDGE_LEFT;
    public static final int EDGE_RIGHT;
    public static final int EDGE_TOP;
    public static final int EDGE_BOTTOM;
    public static final int EDGE_ALL;
    public static final int DIRECTION_HORIZONTAL;
    public static final int DIRECTION_VERTICAL;
    public static final int DIRECTION_ALL;
    private static final int EDGE_SIZE;
    private static final int BASE_SETTLE_DURATION;
    private static final int MAX_SETTLE_DURATION;
    private int mDragState;
    private int mTouchSlop;
    private int mActivePointerId;
    private float[] mInitialMotionX;
    private float[] mInitialMotionY;
    private float[] mLastMotionX;
    private float[] mLastMotionY;
    private int[] mInitialEdgesTouched;
    private int[] mEdgeDragsInProgress;
    private int[] mEdgeDragsLocked;
    private int mPointersDown;
    private android.view.VelocityTracker mVelocityTracker;
    private float mMaxVelocity;
    private float mMinVelocity;
    private int mEdgeSize;
    private int mTrackingEdges;
    private android.support.v4.widget.ScrollerCompat mScroller;
    private final android.support.v4.widget.ViewDragHelper$Callback mCallback;
    private android.view.View mCapturedView;
    private boolean mReleaseInProgress;
    private final android.view.ViewGroup mParentView;
    private static final android.view.animation.Interpolator sInterpolator;
    private final java.lang.Runnable mSetIdleRunnable;

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup r0;
        android.support.v4.widget.ViewDragHelper$Callback r1;
        android.support.v4.widget.ViewDragHelper $r2;
        android.content.Context $r3;

        r0 := @parameter0: android.view.ViewGroup;

        r1 := @parameter1: android.support.v4.widget.ViewDragHelper$Callback;

        $r2 = new android.support.v4.widget.ViewDragHelper;

        $r3 = virtualinvoke r0.<android.view.ViewGroup: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.widget.ViewDragHelper: void <init>(android.content.Context,android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>($r3, r0, r1);

        return $r2;
    }

    public static android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup, float, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.view.ViewGroup r0;
        float f0, $f1, $f2, $f3;
        android.support.v4.widget.ViewDragHelper$Callback r1;
        android.support.v4.widget.ViewDragHelper r2;
        int $i0, $i1;

        r0 := @parameter0: android.view.ViewGroup;

        f0 := @parameter1: float;

        r1 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;

        r2 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback)>(r0, r1);

        $i0 = r2.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f2 = (float) $i0;

        $f1 = 1.0F / f0;

        $f3 = $f2 * $f1;

        $i1 = (int) $f3;

        r2.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i1;

        return r2;
    }

    private void <init>(android.content.Context, android.view.ViewGroup, android.support.v4.widget.ViewDragHelper$Callback)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.content.Context r1;
        android.view.ViewGroup r2;
        android.support.v4.widget.ViewDragHelper$Callback r3;
        android.view.ViewConfiguration r4;
        float f0, $f1, $f2, $f3, $f4;
        android.support.v4.widget.ViewDragHelper$2 $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        int $i0, $i1, $i2, $i3;
        android.support.v4.widget.ScrollerCompat $r8;
        android.view.animation.Interpolator $r9;
        java.lang.IllegalArgumentException $r10, $r11;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.support.v4.widget.ViewDragHelper$Callback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        $r5 = new android.support.v4.widget.ViewDragHelper$2;

        specialinvoke $r5.<android.support.v4.widget.ViewDragHelper$2: void <init>(android.support.v4.widget.ViewDragHelper)>(r0);

        r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable> = $r5;

        if r2 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parent view may not be null");

        throw $r10;

     label1:
        if r3 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Callback may not be null");

        throw $r11;

     label2:
        r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView> = r2;

        r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback> = r3;

        r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r7.<android.util.DisplayMetrics: float density>;

        $f1 = 20.0F * f0;

        $f2 = $f1 + 0.5F;

        $i0 = (int) $f2;

        r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize> = $i0;

        $i1 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop> = $i1;

        $i2 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $f3 = (float) $i2;

        r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity> = $f3;

        $i3 = virtualinvoke r4.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $f4 = (float) $i3;

        r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = $f4;

        $r9 = <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator>;

        $r8 = staticinvoke <android.support.v4.widget.ScrollerCompat: android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator)>(r1, $r9);

        r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller> = $r8;

        return;
    }

    public void setMinVelocity(float)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity> = f0;

        return;
    }

    public float getMinVelocity()
    {
        android.support.v4.widget.ViewDragHelper r0;
        float $f0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $f0 = r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        return $f0;
    }

    public int getViewDragState()
    {
        android.support.v4.widget.ViewDragHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        return $i0;
    }

    public void setEdgeTrackingEnabled(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges> = i0;

        return;
    }

    public int getEdgeSize()
    {
        android.support.v4.widget.ViewDragHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        return $i0;
    }

    public void captureChildView(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1;
        int i0;
        android.view.ViewParent $r2;
        android.view.ViewGroup $r3, $r8;
        android.support.v4.widget.ViewDragHelper$Callback $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        if $r2 == $r3 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("captureChildView: parameter must be a descendant of the ViewDragHelper\'s tracked parent view (");

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = r1;

        r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = i0;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper$Callback: void onViewCaptured(android.view.View,int)>(r1, i0);

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(1);

        return;
    }

    public android.view.View getCapturedView()
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View $r1;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        return $r1;
    }

    public int getActivePointerId()
    {
        android.support.v4.widget.ViewDragHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        return $i0;
    }

    public int getTouchSlop()
    {
        android.support.v4.widget.ViewDragHelper r0;
        int $i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        return $i0;
    }

    public void cancel()
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory()>();

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    public void abort()
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.support.v4.widget.ScrollerCompat $r1, $r2, $r3, $r4, $r5;
        android.view.View $r6;
        android.support.v4.widget.ViewDragHelper$Callback $r7;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i4 != 2 goto label1;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i0 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i1 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r3.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i2 = virtualinvoke $r4.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i3 = virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i6 = i2 - i0;

        $i5 = i3 - i1;

        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r6, i2, i3, $i6, $i5);

     label1:
        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

        return;
    }

    public boolean smoothSlideViewTo(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1, $r2;
        int i0, i1, $i2;
        boolean z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = r1;

        r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = -1;

        z0 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>(i0, i1, 0, 0);

        if z0 != 0 goto label1;

        $i2 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i2 != 0 goto label1;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r2 == null goto label1;

        r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        return z0;
    }

    public boolean settleCapturedViewAt(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.view.VelocityTracker $r1, $r2;
        float $f0, $f1;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot settleCapturedViewAt outside of a call to Callback#onViewReleased");

        throw $r3;

     label1:
        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i2 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r1, $i2);

        $i4 = (int) $f0;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i3 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r2, $i3);

        $i5 = (int) $f1;

        $z1 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean forceSettleCapturedViewAt(int,int,int,int)>(i0, i1, $i4, $i5);

        return $z1;
    }

    private boolean forceSettleCapturedViewAt(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        android.view.View $r1, $r2, $r3;
        android.support.v4.widget.ScrollerCompat $r4, $r5;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i5 = virtualinvoke $r2.<android.view.View: int getTop()>();

        i6 = i0 - i4;

        i7 = i1 - i5;

        if i6 != 0 goto label1;

        if i7 != 0 goto label1;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r4.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

        return 0;

     label1:
        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i8 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int computeSettleDuration(android.view.View,int,int,int,int)>($r3, i6, i7, i2, i3);

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r5.<android.support.v4.widget.ScrollerCompat: void startScroll(int,int,int,int,int)>(i4, i5, i6, i7, i8);

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);

        return 1;
    }

    private int computeSettleDuration(android.view.View, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        android.support.v4.widget.ViewDragHelper$Callback $r2, $r3;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $f3 = r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $i12 = (int) $f3;

        $f2 = r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $i13 = (int) $f2;

        i19 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>(i2, $i12, $i13);

        $f4 = r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $i15 = (int) $f4;

        $f5 = r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        $i14 = (int) $f5;

        i20 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int clampMag(int,int,int)>(i3, $i15, $i14);

        i4 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        i5 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        i6 = staticinvoke <java.lang.Math: int abs(int)>(i19);

        i7 = staticinvoke <java.lang.Math: int abs(int)>(i20);

        i8 = i6 + i7;

        i9 = i4 + i5;

        if i19 == 0 goto label1;

        $f18 = (float) i6;

        $f19 = (float) i8;

        $f17 = $f18 / $f19;

        goto label2;

     label1:
        $f6 = (float) i4;

        $f7 = (float) i9;

        $f17 = $f6 / $f7;

     label2:
        f0 = $f17;

        if i20 == 0 goto label3;

        $f15 = (float) i7;

        $f14 = (float) i8;

        $f20 = $f15 / $f14;

        goto label4;

     label3:
        $f9 = (float) i5;

        $f8 = (float) i9;

        $f20 = $f9 / $f8;

     label4:
        f1 = $f20;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i16 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>(r1);

        i10 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>(i0, i19, $i16);

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i17 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>(r1);

        i11 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int computeAxisDuration(int,int,int)>(i1, i20, $i17);

        $f12 = (float) i10;

        $f11 = $f12 * f0;

        $f13 = (float) i11;

        $f10 = $f13 * f1;

        $f16 = $f11 + $f10;

        $i18 = (int) $f16;

        return $i18;
    }

    private int computeAxisDuration(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, i10;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        android.view.ViewGroup $r1;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        i3 = virtualinvoke $r1.<android.view.ViewGroup: int getWidth()>();

        i4 = i3 / 2;

        $i6 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f4 = (float) $i6;

        $f3 = (float) i3;

        $f5 = $f4 / $f3;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f5);

        $f7 = (float) i4;

        $f6 = (float) i4;

        $f9 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: float distanceInfluenceForSnapDuration(float)>(f0);

        $f8 = $f6 * $f9;

        f1 = $f7 + $f8;

        i10 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        if i10 <= 0 goto label2;

        $f14 = (float) i10;

        $f15 = f1 / $f14;

        $f17 = staticinvoke <java.lang.Math: float abs(float)>($f15);

        $f16 = 1000.0F * $f17;

        $i9 = staticinvoke <java.lang.Math: int round(float)>($f16);

        i5 = 4 * $i9;

        goto label3;

     label2:
        $i7 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $f10 = (float) $i7;

        $f11 = (float) i2;

        f2 = $f10 / $f11;

        $f13 = f2 + 1.0F;

        $f12 = $f13 * 256.0F;

        i5 = (int) $f12;

     label3:
        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i5, 600);

        return $i8;
    }

    private int clampMag(int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        if i3 >= i1 goto label1;

        return 0;

     label1:
        if i3 <= i2 goto label4;

        if i0 <= 0 goto label2;

        $i4 = i2;

        goto label3;

     label2:
        $i4 = neg i2;

     label3:
        return $i4;

     label4:
        return i0;
    }

    private float clampMag(float, float, float)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1, f2, f3, $f4;
        byte $b0, $b1, $b2;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $b0 = f3 cmpg f1;

        if $b0 >= 0 goto label1;

        return 0.0F;

     label1:
        $b1 = f3 cmpl f2;

        if $b1 <= 0 goto label4;

        $b2 = f0 cmpl 0.0F;

        if $b2 <= 0 goto label2;

        $f4 = f2;

        goto label3;

     label2:
        $f4 = neg f2;

     label3:
        return $f4;

     label4:
        return f0;
    }

    private float distanceInfluenceForSnapDuration(float)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, $f1, f2, f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f2 = f0 - 0.5F;

        $d0 = (double) f2;

        $d1 = $d0 * 0.4712389167638204;

        f3 = (float) $d1;

        $d2 = (double) f3;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $f1 = (float) $d3;

        return $f1;
    }

    public void flingCapturedView(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        android.view.View $r1, $r3;
        android.support.v4.widget.ScrollerCompat $r2;
        android.view.VelocityTracker $r4, $r5;
        float $f0, $f1;
        java.lang.IllegalStateException $r6;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $z0 = r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress>;

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot flingCapturedView outside of a call to Callback#onViewReleased");

        throw $r6;

     label1:
        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i4 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i5 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i6 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f0 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r4, $i6);

        $i8 = (int) $f0;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i7 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f1 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r5, $i7);

        $i9 = (int) $f1;

        virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: void fling(int,int,int,int,int,int,int,int)>($i4, $i5, $i8, $i9, i0, i2, i1, i3);

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(2);

        return;
    }

    public boolean continueSettling(boolean)
    {
        android.support.v4.widget.ViewDragHelper r0;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.support.v4.widget.ScrollerCompat $r1, $r2, $r3, $r10, $r11, $r12;
        android.view.View $r4, $r5, $r7, $r13, $r14;
        android.support.v4.widget.ViewDragHelper$Callback $r6;
        android.view.ViewGroup $r8;
        java.lang.Runnable $r9;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i4 != 2 goto label7;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        z1 = virtualinvoke $r1.<android.support.v4.widget.ScrollerCompat: boolean computeScrollOffset()>();

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i0 = virtualinvoke $r2.<android.support.v4.widget.ScrollerCompat: int getCurrX()>();

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        i1 = virtualinvoke $r3.<android.support.v4.widget.ScrollerCompat: int getCurrY()>();

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i6 = virtualinvoke $r4.<android.view.View: int getLeft()>();

        i2 = i0 - $i6;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i7 = virtualinvoke $r5.<android.view.View: int getTop()>();

        i3 = i1 - $i7;

        if i2 == 0 goto label1;

        $r13 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r13.<android.view.View: void offsetLeftAndRight(int)>(i2);

     label1:
        if i3 == 0 goto label2;

        $r14 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r14.<android.view.View: void offsetTopAndBottom(int)>(i3);

     label2:
        if i2 != 0 goto label3;

        if i3 == 0 goto label4;

     label3:
        $r6 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r7, i0, i1, i2, i3);

     label4:
        if z1 == 0 goto label5;

        $r10 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i8 = virtualinvoke $r10.<android.support.v4.widget.ScrollerCompat: int getFinalX()>();

        if i0 != $i8 goto label5;

        $r11 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        $i9 = virtualinvoke $r11.<android.support.v4.widget.ScrollerCompat: int getFinalY()>();

        if i1 != $i9 goto label5;

        $r12 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ScrollerCompat mScroller>;

        virtualinvoke $r12.<android.support.v4.widget.ScrollerCompat: void abortAnimation()>();

        z1 = 0;

     label5:
        if z1 != 0 goto label7;

        if z0 == 0 goto label6;

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r9 = r0.<android.support.v4.widget.ViewDragHelper: java.lang.Runnable mSetIdleRunnable>;

        virtualinvoke $r8.<android.view.ViewGroup: boolean post(java.lang.Runnable)>($r9);

        goto label7;

     label6:
        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

     label7:
        $i5 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i5 != 2 goto label8;

        $z2 = 1;

        goto label9;

     label8:
        $z2 = 0;

     label9:
        return $z2;
    }

    private void dispatchViewReleased(float, float)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1;
        android.view.View $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;
        int $i0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 1;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onViewReleased(android.view.View,float,float)>($r1, f0, f1);

        r0.<android.support.v4.widget.ViewDragHelper: boolean mReleaseInProgress> = 0;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i0 != 1 goto label1;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void setDragState(int)>(0);

     label1:
        return;
    }

    private void clearMotionHistory()
    {
        android.support.v4.widget.ViewDragHelper r0;
        float[] $r1, $r2, $r3, $r4, $r5;
        int[] $r6, $r7, $r8;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r2, 0.0F);

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r3, 0.0F);

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r4, 0.0F);

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r5, 0.0F);

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r6, 0);

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r7, 0);

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r8, 0);

        r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = 0;

        return;
    }

    private void clearMotionHistory(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, $i1, $i2, $i3, $i4;
        float[] $r1, $r2, $r3, $r4, $r5;
        int[] $r6, $r7, $r8;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r2[i0] = 0.0F;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r3[i0] = 0.0F;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r4[i0] = 0.0F;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r5[i0] = 0.0F;

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $r6[i0] = 0;

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $r7[i0] = 0;

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $r8[i0] = 0;

        $i3 = r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i1 = 1 << i0;

        $i2 = $i1 ^ -1;

        $i4 = $i3 & $i2;

        r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i4;

        return;
    }

    private void ensureMotionHistorySizeForId(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        float[] r1, r2, r3, r4, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r23;
        int[] r5, r6, r7, $r18, $r19, $r20, $r21, $r22, $r24;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r8 == null goto label1;

        $r23 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i15 = lengthof $r23;

        if $i15 > i0 goto label3;

     label1:
        $i1 = i0 + 1;

        r1 = newarray (float)[$i1];

        $i2 = i0 + 1;

        r2 = newarray (float)[$i2];

        $i3 = i0 + 1;

        r3 = newarray (float)[$i3];

        $i4 = i0 + 1;

        r4 = newarray (float)[$i4];

        $i5 = i0 + 1;

        r5 = newarray (int)[$i5];

        $i6 = i0 + 1;

        r6 = newarray (int)[$i6];

        $i7 = i0 + 1;

        r7 = newarray (int)[$i7];

        $r9 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        if $r9 == null goto label2;

        $r12 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r10 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $i8 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, r1, 0, $i8);

        $r13 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r11 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $i9 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r2, 0, $i9);

        $r16 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r14 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $i10 = lengthof $r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, 0, r3, 0, $i10);

        $r17 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r15 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $i11 = lengthof $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, r4, 0, $i11);

        $r20 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $r18 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i12 = lengthof $r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r20, 0, r5, 0, $i12);

        $r19 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $r21 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i13 = lengthof $r21;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, r6, 0, $i13);

        $r22 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $r24 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i14 = lengthof $r24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r22, 0, r7, 0, $i14);

     label2:
        r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX> = r1;

        r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY> = r2;

        r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX> = r3;

        r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY> = r4;

        r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched> = r5;

        r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress> = r6;

        r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked> = r7;

     label3:
        return;
    }

    private void saveInitialMotion(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float[] $r1, $r2, $r3, $r4;
        int[] $r5;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void ensureMotionHistorySizeForId(int)>(i0);

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r1[i0] = f0;

        $r2[i0] = f0;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r3[i0] = f1;

        $r4[i0] = f1;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = (int) f0;

        $i1 = (int) f1;

        $i3 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: int getEdgesTouched(int,int)>($i2, $i1);

        $r5[i0] = $i3;

        $i5 = r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i4 = 1 << i0;

        $i6 = $i5 | $i4;

        r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown> = $i6;

        return;
    }

    private void saveLastMotion(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        float f0, f1;
        float[] $r2, $r3;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>(r1);

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i1);

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i1);

        f1 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $r2[i2] = f0;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $r3[i2] = f1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public boolean isPointerDown(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $i2 = r0.<android.support.v4.widget.ViewDragHelper: int mPointersDown>;

        $i1 = 1 << i0;

        $i3 = $i2 & $i1;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void setDragState(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, $i1, $i2;
        android.support.v4.widget.ViewDragHelper$Callback $r1;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i1 == i0 goto label1;

        r0.<android.support.v4.widget.ViewDragHelper: int mDragState> = i0;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper$Callback: void onViewDragStateChanged(int)>(i0);

        $i2 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i2 != 0 goto label1;

        r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView> = null;

     label1:
        return;
    }

    boolean tryCaptureViewForDrag(android.view.View, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1, $r2;
        int i0, $i1;
        android.support.v4.widget.ViewDragHelper$Callback $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if r1 != $r2 goto label1;

        $i1 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        if $i1 != i0 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $z0 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: boolean tryCaptureView(android.view.View,int)>(r1, i0);

        if $z0 == 0 goto label2;

        r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId> = i0;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void captureChildView(android.view.View,int)>(r1, i0);

        return 1;

     label2:
        return 0;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        android.view.ViewGroup r2;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i4 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i5 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i6 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i7 = i6 - 1;

     label1:
        if i7 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i7);

        $i10 = i2 + i4;

        $i12 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if $i10 < $i12 goto label2;

        $i11 = i2 + i4;

        $i14 = virtualinvoke r3.<android.view.View: int getRight()>();

        if $i11 >= $i14 goto label2;

        $i13 = i3 + i5;

        $i16 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i13 < $i16 goto label2;

        $i15 = i3 + i5;

        $i17 = virtualinvoke r3.<android.view.View: int getBottom()>();

        if $i15 >= $i17 goto label2;

        $i20 = i2 + i4;

        $i21 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i18 = $i20 - $i21;

        $i19 = i3 + i5;

        $i22 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i23 = $i19 - $i22;

        $z5 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean canScroll(android.view.View,boolean,int,int,int,int)>(r3, 1, i0, i1, $i18, $i23);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        i7 = i7 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label5;

        $i8 = neg i0;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>(r1, $i8);

        if $z2 != 0 goto label4;

        $i9 = neg i1;

        $z4 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollVertically(android.view.View,int)>(r1, $i9);

        if $z4 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    public boolean shouldInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, i37, i38, i39, i40;
        float f0, f1, f2, f3, $f4, $f5, f6, f7, f8, f9;
        android.view.View r2, r3, $r6, $r9, r19;
        boolean z0, $z1, $z4, $z5, $z6;
        android.view.VelocityTracker $r4, $r5, $r18;
        int[] $r7, $r10;
        android.support.v4.widget.ViewDragHelper$Callback $r8, $r11, $r14, $r15, $r16, $r17;
        float[] $r12, $r13;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>(r1);

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label01;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label01:
        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label02;

        $r18 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r18;

     label02:
        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label19;
            case 2: goto label09;
            case 3: goto label19;
            case 4: goto label20;
            case 5: goto label05;
            case 6: goto label18;
            default: goto label20;
        };

     label03:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>(f0, f1, i2);

        $i12 = (int) f0;

        $i13 = (int) f1;

        r2 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i12, $i13);

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if r2 != $r6 goto label04;

        $i19 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i19 != 2 goto label04;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r2, i2);

     label04:
        $r7 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        i3 = $r7[i2];

        $i16 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i14 = i3 & $i16;

        if $i14 == 0 goto label20;

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i18 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i17 = i3 & $i18;

        virtualinvoke $r8.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i17, i2);

        goto label20;

     label05:
        i35 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i1);

        f6 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i1);

        f7 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>(f6, f7, i35);

        $i20 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i20 != 0 goto label07;

        $r10 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        i36 = $r10[i35];

        $i25 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i24 = i36 & $i25;

        if $i24 == 0 goto label06;

        $r11 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i27 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i26 = i36 & $i27;

        virtualinvoke $r11.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i26, i35);

     label06:
        goto label20;

     label07:
        $i21 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i21 != 2 goto label20;

        $i22 = (int) f6;

        $i23 = (int) f7;

        r19 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i22, $i23);

        $r9 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if r19 != $r9 goto label08;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r19, i35);

     label08:
        goto label20;

     label09:
        i37 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>(r1);

        i38 = 0;

     label10:
        if i38 >= i37 goto label17;

        i39 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i38);

        f8 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i38);

        f9 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i38);

        $r12 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f4 = $r12[i39];

        f2 = f8 - $f4;

        $r13 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f5 = $r13[i39];

        f3 = f9 - $f5;

        $i28 = (int) f8;

        $i30 = (int) f9;

        r3 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i28, $i30);

        if r3 == null goto label11;

        $z6 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>(r3, f2, f3);

        if $z6 == 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        z0 = $z5;

        if z0 == 0 goto label14;

        i4 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i33 = (int) f2;

        i5 = i4 + $i33;

        $r14 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i34 = (int) f2;

        i6 = virtualinvoke $r14.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>(r3, i5, $i34);

        i8 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i31 = (int) f3;

        i7 = i8 + $i31;

        $r16 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i32 = (int) f3;

        i10 = virtualinvoke $r16.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>(r3, i7, $i32);

        $r17 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        i9 = virtualinvoke $r17.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>(r3);

        $r15 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        i11 = virtualinvoke $r15.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>(r3);

        if i9 == 0 goto label13;

        if i9 <= 0 goto label14;

        if i6 != i4 goto label14;

     label13:
        if i11 == 0 goto label17;

        if i11 <= 0 goto label14;

        if i10 != i8 goto label14;

        goto label17;

     label14:
        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>(f2, f3, i39);

        $i29 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i29 != 1 goto label15;

        goto label17;

     label15:
        if z0 == 0 goto label16;

        $z4 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r3, i39);

        if $z4 == 0 goto label16;

        goto label17;

     label16:
        i38 = i38 + 1;

        goto label10;

     label17:
        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>(r1);

        goto label20;

     label18:
        i40 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i1);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>(i40);

        goto label20;

     label19:
        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label20:
        $i15 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i15 != 1 goto label21;

        $z1 = 1;

        goto label22;

     label21:
        $z1 = 0;

     label22:
        return $z1;
    }

    public void processTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, i37, i38, i39, i40, i41, i42, i43, i44, i45, i46, i47, i48, i49;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13, f14, f15, f16, f17;
        android.view.View r2, r3, $r8, $r9, $r10, $r11, $r18, $r19, r21;
        android.view.VelocityTracker $r4, $r5, $r20;
        int[] $r6, $r12;
        android.support.v4.widget.ViewDragHelper$Callback $r7, $r13;
        boolean $z1, $z3, $z5, $z6;
        float[] $r14, $r15, $r16, $r17;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>(r1);

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label01;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label01:
        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label02;

        $r20 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker> = $r20;

     label02:
        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label19;
            case 2: goto label07;
            case 3: goto label21;
            case 4: goto label23;
            case 5: goto label04;
            case 6: goto label13;
            default: goto label23;
        };

     label03:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        $i5 = (int) f0;

        $i4 = (int) f1;

        r2 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i5, $i4);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>(f0, f1, i2);

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r2, i2);

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        i3 = $r6[i2];

        $i7 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i6 = i3 & $i7;

        if $i6 == 0 goto label23;

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i9 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i8 = i3 & $i9;

        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i8, i2);

        goto label23;

     label04:
        i37 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i1);

        f10 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i1);

        f11 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveInitialMotion(float,float,int)>(f10, f11, i37);

        $i15 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i15 != 0 goto label06;

        $i18 = (int) f10;

        $i19 = (int) f11;

        r21 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i18, $i19);

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r21, i37);

        $r12 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        i38 = $r12[i37];

        $i22 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i21 = i38 & $i22;

        if $i21 == 0 goto label05;

        $r13 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i20 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i25 = i38 & $i20;

        virtualinvoke $r13.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeTouched(int,int)>($i25, i37);

     label05:
        goto label23;

     label06:
        $i17 = (int) f10;

        $i16 = (int) f11;

        $z3 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean isCapturedViewUnder(int,int)>($i17, $i16);

        if $z3 == 0 goto label23;

        $r11 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r11, i37);

        goto label23;

     label07:
        $i23 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i23 != 1 goto label08;

        $i26 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        i39 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i26);

        f12 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i39);

        f13 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i39);

        $r17 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $i31 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f7 = $r17[$i31];

        $f6 = f12 - $f7;

        i40 = (int) $f6;

        $r16 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $i30 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f9 = $r16[$i30];

        $f8 = f13 - $f9;

        i41 = (int) $f8;

        $r19 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i35 = virtualinvoke $r19.<android.view.View: int getLeft()>();

        $i32 = $i35 + i40;

        $r18 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i34 = virtualinvoke $r18.<android.view.View: int getTop()>();

        $i33 = $i34 + i41;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void dragTo(int,int,int,int)>($i32, $i33, i40, i41);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>(r1);

        goto label23;

     label08:
        i42 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>(r1);

        i43 = 0;

     label09:
        if i43 >= i42 goto label12;

        i44 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i43);

        f14 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i43);

        f15 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i43);

        $r14 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f4 = $r14[i44];

        f2 = f14 - $f4;

        $r15 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f5 = $r15[i44];

        f3 = f15 - $f5;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void reportNewEdgeDrags(float,float,int)>(f2, f3, i44);

        $i27 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i27 != 1 goto label10;

        goto label12;

     label10:
        $i29 = (int) f14;

        $i28 = (int) f15;

        r3 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i29, $i28);

        $z5 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(android.view.View,float,float)>(r3, f2, f3);

        if $z5 == 0 goto label11;

        $z6 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>(r3, i44);

        if $z6 == 0 goto label11;

        goto label12;

     label11:
        i43 = i43 + 1;

        goto label09;

     label12:
        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void saveLastMotion(android.view.MotionEvent)>(r1);

        goto label23;

     label13:
        i45 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i1);

        $i11 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i11 != 1 goto label18;

        $i10 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        if i45 != $i10 goto label18;

        i46 = -1;

        i47 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>(r1);

        i48 = 0;

     label14:
        if i48 >= i47 goto label17;

        i49 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i48);

        $i12 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        if i49 != $i12 goto label15;

        goto label16;

     label15:
        f16 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i48);

        f17 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i48);

        $i13 = (int) f16;

        $i14 = (int) f17;

        $r8 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i13, $i14);

        $r9 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        if $r8 != $r9 goto label16;

        $r10 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $z1 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean tryCaptureViewForDrag(android.view.View,int)>($r10, i49);

        if $z1 == 0 goto label16;

        i46 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        goto label17;

     label16:
        i48 = i48 + 1;

        goto label14;

     label17:
        if i46 != -1 goto label18;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label18:
        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void clearMotionHistory(int)>(i45);

        goto label23;

     label19:
        $i36 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i36 != 1 goto label20;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void releaseViewForPointerUp()>();

     label20:
        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        goto label23;

     label21:
        $i24 = r0.<android.support.v4.widget.ViewDragHelper: int mDragState>;

        if $i24 != 1 goto label22;

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>(0.0F, 0.0F);

     label22:
        virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label23:
        return;
    }

    private void reportNewEdgeDrags(float, float, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1;
        int i0, $i2, $i3;
        byte b1;
        boolean $z0, $z1, $z2, $z3;
        int[] $r1;
        android.support.v4.widget.ViewDragHelper$Callback $r2;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        b1 = 0;

        $z0 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>(f0, f1, i0, 1);

        if $z0 == 0 goto label1;

        b1 = b1 | 1;

     label1:
        $z1 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>(f1, f0, i0, 4);

        if $z1 == 0 goto label2;

        b1 = b1 | 4;

     label2:
        $z2 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>(f0, f1, i0, 2);

        if $z2 == 0 goto label3;

        b1 = b1 | 2;

     label3:
        $z3 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkNewEdgeDrag(float,float,int,int)>(f1, f0, i0, 8);

        if $z3 == 0 goto label4;

        b1 = b1 | 8;

     label4:
        if b1 == 0 goto label5;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i2 = $r1[i0];

        $i3 = $i2 | b1;

        $r1[i0] = $i3;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: void onEdgeDragStarted(int,int)>(b1, i0);

     label5:
        return;
    }

    private boolean checkNewEdgeDrag(float, float, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i17, $i19, $i20;
        int[] $r1, $r2, $r3, $r4, $r5;
        byte $b11, $b12, $b16, $b18;
        boolean $z0, $z1;
        android.support.v4.widget.ViewDragHelper$Callback $r6;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        f2 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        f3 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = $r1[i0];

        $i3 = $i2 & i1;

        if $i3 != i1 goto label1;

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mTrackingEdges>;

        $i5 = $i4 & i1;

        if $i5 == 0 goto label1;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i6 = $r2[i0];

        $i7 = $i6 & i1;

        if $i7 == i1 goto label1;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i9 = $r3[i0];

        $i8 = $i9 & i1;

        if $i8 == i1 goto label1;

        $i10 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f4 = (float) $i10;

        $b11 = f2 cmpg $f4;

        if $b11 > 0 goto label2;

        $i20 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f7 = (float) $i20;

        $b18 = f3 cmpg $f7;

        if $b18 > 0 goto label2;

     label1:
        return 0;

     label2:
        $f5 = f3 * 0.5F;

        $b12 = f2 cmpg $f5;

        if $b12 >= 0 goto label3;

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $z1 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper$Callback: boolean onEdgeLock(int)>(i1);

        if $z1 == 0 goto label3;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsLocked>;

        $i17 = $r5[i0];

        $i19 = $i17 | i1;

        $r5[i0] = $i19;

        return 0;

     label3:
        $r4 = r0.<android.support.v4.widget.ViewDragHelper: int[] mEdgeDragsInProgress>;

        $i14 = $r4[i0];

        $i13 = $i14 & i1;

        if $i13 != 0 goto label4;

        $i15 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f6 = (float) $i15;

        $b16 = f2 cmpl $f6;

        if $b16 <= 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private boolean checkTouchSlop(android.view.View, float, float)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.support.v4.widget.ViewDragHelper$Callback $r2, $r3;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8;
        byte $b3, $b5, $b9;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        if r1 != null goto label01;

        return 0;

     label01:
        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i0 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper$Callback: int getViewHorizontalDragRange(android.view.View)>(r1);

        if $i0 <= 0 goto label02;

        $z6 = 1;

        goto label03;

     label02:
        $z6 = 0;

     label03:
        z0 = $z6;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i1 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: int getViewVerticalDragRange(android.view.View)>(r1);

        if $i1 <= 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z1 = $z4;

        if z0 == 0 goto label08;

        if z1 == 0 goto label08;

        $f6 = f0 * f0;

        $f7 = f1 * f1;

        $f9 = $f6 + $f7;

        $i6 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i7 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i8 = $i6 * $i7;

        $f8 = (float) $i8;

        $b9 = $f9 cmpl $f8;

        if $b9 <= 0 goto label06;

        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        return $z5;

     label08:
        if z0 == 0 goto label11;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f5 = (float) $i4;

        $b5 = $f4 cmpl $f5;

        if $b5 <= 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        return $z3;

     label11:
        if z1 == 0 goto label14;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i2 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 <= 0 goto label12;

        $z2 = 1;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        return $z2;

     label14:
        return 0;
    }

    public boolean checkTouchSlop(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2;
        float[] $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        i1 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $z0 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int,int)>(i0, i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean checkTouchSlop(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, $i2, $i3, $i4, $i6, $i8, $i9, $i11;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        float[] $r1, $r2, $r3, $r4;
        byte $b5, $b7, $b10;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z2 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>(i1);

        if $z2 != 0 goto label01;

        return 0;

     label01:
        $i2 = i0 & 1;

        if $i2 != 1 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        z0 = $z5;

        $i3 = i0 & 2;

        if $i3 != 2 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        z1 = $z7;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionX>;

        $f3 = $r1[i1];

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionX>;

        $f2 = $r2[i1];

        f0 = $f3 - $f2;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: float[] mLastMotionY>;

        $f4 = $r3[i1];

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: float[] mInitialMotionY>;

        $f5 = $r4[i1];

        f1 = $f4 - $f5;

        if z0 == 0 goto label08;

        if z1 == 0 goto label08;

        $f10 = f0 * f0;

        $f11 = f1 * f1;

        $f12 = $f10 + $f11;

        $i8 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i9 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $i11 = $i8 * $i9;

        $f13 = (float) $i11;

        $b10 = $f12 cmpl $f13;

        if $b10 <= 0 goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        return $z6;

     label08:
        if z0 == 0 goto label11;

        $f8 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i6 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f9 = (float) $i6;

        $b7 = $f8 cmpl $f9;

        if $b7 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        return $z4;

     label11:
        if z1 == 0 goto label14;

        $f6 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mTouchSlop>;

        $f7 = (float) $i4;

        $b5 = $f6 cmpl $f7;

        if $b5 <= 0 goto label12;

        $z3 = 1;

        goto label13;

     label12:
        $z3 = 0;

     label13:
        return $z3;

     label14:
        return 0;
    }

    public boolean isEdgeTouched(int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2;
        int[] $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        i1 = lengthof $r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        $z0 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean isEdgeTouched(int,int)>(i0, i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean isEdgeTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, $i2, $i3;
        boolean $z0, $z1;
        int[] $r1;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean isPointerDown(int)>(i1);

        if $z0 == 0 goto label1;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: int[] mInitialEdgesTouched>;

        $i2 = $r1[i1];

        $i3 = $i2 & i0;

        if $i3 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void releaseViewForPointerUp()
    {
        android.support.v4.widget.ViewDragHelper r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        android.view.VelocityTracker $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $f2 = r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        virtualinvoke $r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f2);

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i0 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f3 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>($r2, $i0);

        $f5 = r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $f4 = r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        f0 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f3, $f5, $f4);

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.VelocityTracker mVelocityTracker>;

        $i1 = r0.<android.support.v4.widget.ViewDragHelper: int mActivePointerId>;

        $f6 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>($r3, $i1);

        $f8 = r0.<android.support.v4.widget.ViewDragHelper: float mMinVelocity>;

        $f7 = r0.<android.support.v4.widget.ViewDragHelper: float mMaxVelocity>;

        f1 = specialinvoke r0.<android.support.v4.widget.ViewDragHelper: float clampMag(float,float,float)>($f6, $f8, $f7);

        specialinvoke r0.<android.support.v4.widget.ViewDragHelper: void dispatchViewReleased(float,float)>(f0, f1);

        return;
    }

    private void dragTo(int, int, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11;
        android.view.View $r1, $r2, $r3, $r4, $r7, $r9, $r10;
        android.support.v4.widget.ViewDragHelper$Callback $r5, $r6, $r8;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 = i0;

        i5 = i1;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i6 = virtualinvoke $r1.<android.view.View: int getLeft()>();

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i7 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if i2 == 0 goto label1;

        $r8 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r9 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i4 = virtualinvoke $r8.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionHorizontal(android.view.View,int,int)>($r9, i0, i2);

        $r10 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i11 = i4 - i6;

        virtualinvoke $r10.<android.view.View: void offsetLeftAndRight(int)>($i11);

     label1:
        if i3 == 0 goto label2;

        $r6 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        i5 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper$Callback: int clampViewPositionVertical(android.view.View,int,int)>($r4, i1, i3);

        $r7 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $i10 = i5 - i7;

        virtualinvoke $r7.<android.view.View: void offsetTopAndBottom(int)>($i10);

     label2:
        if i2 != 0 goto label3;

        if i3 == 0 goto label4;

     label3:
        i8 = i4 - i6;

        i9 = i5 - i7;

        $r5 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper$Callback: void onViewPositionChanged(android.view.View,int,int,int,int)>($r3, i4, i5, i8, i9);

     label4:
        return;
    }

    public boolean isCapturedViewUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.View mCapturedView>;

        $z0 = virtualinvoke r0.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r1, i0, i1);

        return $z0;
    }

    public boolean isViewUnder(android.view.View, int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        android.view.View r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r1 != null goto label1;

        return 0;

     label1:
        $i2 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if i0 < $i2 goto label2;

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        if i0 >= $i3 goto label2;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        if i1 < $i4 goto label2;

        $i5 = virtualinvoke r1.<android.view.View: int getBottom()>();

        if i1 >= $i5 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public android.view.View findTopChildUnder(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.view.ViewGroup $r2, $r4;
        android.support.v4.widget.ViewDragHelper$Callback $r3;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        i2 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        i3 = i2 - 1;

     label1:
        if i3 < 0 goto label3;

        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper$Callback mCallback>;

        $i4 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper$Callback: int getOrderedChildIndex(int)>(i3);

        r1 = virtualinvoke $r4.<android.view.ViewGroup: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke r1.<android.view.View: int getLeft()>();

        if i0 < $i5 goto label2;

        $i6 = virtualinvoke r1.<android.view.View: int getRight()>();

        if i0 >= $i6 goto label2;

        $i7 = virtualinvoke r1.<android.view.View: int getTop()>();

        if i1 < $i7 goto label2;

        $i8 = virtualinvoke r1.<android.view.View: int getBottom()>();

        if i1 >= $i8 goto label2;

        return r1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return null;
    }

    private int getEdgesTouched(int, int)
    {
        android.support.v4.widget.ViewDragHelper r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        byte b2;
        android.view.ViewGroup $r1, $r2, $r3, $r4;

        r0 := @this: android.support.v4.widget.ViewDragHelper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        b2 = 0;

        $r1 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i3 = virtualinvoke $r1.<android.view.ViewGroup: int getLeft()>();

        $i4 = r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i5 = $i3 + $i4;

        if i0 >= $i5 goto label1;

        b2 = b2 | 1;

     label1:
        $r2 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i6 = virtualinvoke $r2.<android.view.ViewGroup: int getTop()>();

        $i7 = r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i8 = $i6 + $i7;

        if i1 >= $i8 goto label2;

        b2 = b2 | 4;

     label2:
        $r3 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i9 = virtualinvoke $r3.<android.view.ViewGroup: int getRight()>();

        $i10 = r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i11 = $i9 - $i10;

        if i0 <= $i11 goto label3;

        b2 = b2 | 2;

     label3:
        $r4 = r0.<android.support.v4.widget.ViewDragHelper: android.view.ViewGroup mParentView>;

        $i12 = virtualinvoke $r4.<android.view.ViewGroup: int getBottom()>();

        $i14 = r0.<android.support.v4.widget.ViewDragHelper: int mEdgeSize>;

        $i13 = $i12 - $i14;

        if i1 <= $i13 goto label4;

        b2 = b2 | 8;

     label4:
        return b2;
    }

    static void <clinit>()
    {
        android.support.v4.widget.ViewDragHelper$1 $r0;

        <android.support.v4.widget.ViewDragHelper: int MAX_SETTLE_DURATION> = 600;

        <android.support.v4.widget.ViewDragHelper: int BASE_SETTLE_DURATION> = 256;

        <android.support.v4.widget.ViewDragHelper: int EDGE_SIZE> = 20;

        <android.support.v4.widget.ViewDragHelper: int DIRECTION_ALL> = 3;

        <android.support.v4.widget.ViewDragHelper: int DIRECTION_VERTICAL> = 2;

        <android.support.v4.widget.ViewDragHelper: int DIRECTION_HORIZONTAL> = 1;

        <android.support.v4.widget.ViewDragHelper: int EDGE_ALL> = 15;

        <android.support.v4.widget.ViewDragHelper: int EDGE_BOTTOM> = 8;

        <android.support.v4.widget.ViewDragHelper: int EDGE_TOP> = 4;

        <android.support.v4.widget.ViewDragHelper: int EDGE_RIGHT> = 2;

        <android.support.v4.widget.ViewDragHelper: int EDGE_LEFT> = 1;

        <android.support.v4.widget.ViewDragHelper: int STATE_SETTLING> = 2;

        <android.support.v4.widget.ViewDragHelper: int STATE_DRAGGING> = 1;

        <android.support.v4.widget.ViewDragHelper: int STATE_IDLE> = 0;

        <android.support.v4.widget.ViewDragHelper: int INVALID_POINTER> = -1;

        <android.support.v4.widget.ViewDragHelper: java.lang.String TAG> = "ViewDragHelper";

        $r0 = new android.support.v4.widget.ViewDragHelper$1;

        specialinvoke $r0.<android.support.v4.widget.ViewDragHelper$1: void <init>()>();

        <android.support.v4.widget.ViewDragHelper: android.view.animation.Interpolator sInterpolator> = $r0;

        return;
    }
}
