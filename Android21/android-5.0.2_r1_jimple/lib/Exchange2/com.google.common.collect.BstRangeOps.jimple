final class com.google.common.collect.BstRangeOps extends java.lang.Object
{

    public static long totalInRange(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstAggregate r0;
        com.google.common.collect.GeneralRange r1;
        com.google.common.collect.BstNode r2;
        long l0, $l1, $l2;
        boolean $z0, $z1, $z2;
        com.google.common.collect.BstSide $r5, $r6;

        r0 := @parameter0: com.google.common.collect.BstAggregate;

        r1 := @parameter1: com.google.common.collect.GeneralRange;

        r2 := @parameter2: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<com.google.common.collect.GeneralRange: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        return 0L;

     label2:
        l0 = interfaceinvoke r0.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r2);

        $z1 = virtualinvoke r1.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z1 == 0 goto label3;

        $r6 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        $l2 = staticinvoke <com.google.common.collect.BstRangeOps: long totalBeyondRangeToSide(com.google.common.collect.BstAggregate,com.google.common.collect.GeneralRange,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, $r6, r2);

        l0 = l0 - $l2;

     label3:
        $z2 = virtualinvoke r1.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z2 == 0 goto label4;

        $r5 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        $l1 = staticinvoke <com.google.common.collect.BstRangeOps: long totalBeyondRangeToSide(com.google.common.collect.BstAggregate,com.google.common.collect.GeneralRange,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, $r5, r2);

        l0 = l0 - $l1;

     label4:
        return l0;
    }

    private static long totalBeyondRangeToSide(com.google.common.collect.BstAggregate, com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstAggregate r0;
        com.google.common.collect.GeneralRange r1;
        com.google.common.collect.BstSide r2, $r6;
        com.google.common.collect.BstNode r3, $r5;
        long l0, $l2, $l3, l4;
        java.lang.Object $r4;
        boolean $z0;
        int $i1;

        r0 := @parameter0: com.google.common.collect.BstAggregate;

        r1 := @parameter1: com.google.common.collect.GeneralRange;

        r2 := @parameter2: com.google.common.collect.BstSide;

        r3 := @parameter3: com.google.common.collect.BstNode;

        l0 = 0L;

     label1:
        if r3 == null goto label3;

        $r4 = virtualinvoke r3.<com.google.common.collect.BstNode: java.lang.Object getKey()>();

        $z0 = staticinvoke <com.google.common.collect.BstRangeOps: boolean beyond(com.google.common.collect.GeneralRange,java.lang.Object,com.google.common.collect.BstSide)>(r1, $r4, r2);

        if $z0 == 0 goto label2;

        $i1 = interfaceinvoke r0.<com.google.common.collect.BstAggregate: int entryValue(com.google.common.collect.BstNode)>(r3);

        $l2 = (long) $i1;

        l4 = l0 + $l2;

        $r5 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>(r2);

        $l3 = interfaceinvoke r0.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>($r5);

        l0 = l4 + $l3;

        $r6 = virtualinvoke r2.<com.google.common.collect.BstSide: com.google.common.collect.BstSide other()>();

        r3 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r6);

        goto label1;

     label2:
        r3 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>(r2);

        goto label1;

     label3:
        return l0;
    }

    public static com.google.common.collect.BstNode minusRange(com.google.common.collect.GeneralRange, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode)
    {
        com.google.common.collect.GeneralRange r0;
        com.google.common.collect.BstBalancePolicy r1;
        com.google.common.collect.BstNodeFactory r2;
        com.google.common.collect.BstNode r3, r4, r5, $r9, $r11, $r13;
        boolean $z0, $z1;
        com.google.common.collect.BstSide $r10, $r12;

        r0 := @parameter0: com.google.common.collect.GeneralRange;

        r1 := @parameter1: com.google.common.collect.BstBalancePolicy;

        r2 := @parameter2: com.google.common.collect.BstNodeFactory;

        r3 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z0 == 0 goto label1;

        $r12 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        $r13 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange,com.google.common.collect.BstBalancePolicy,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, r2, $r12, r3);

        goto label2;

     label1:
        $r13 = null;

     label2:
        r4 = $r13;

        $z1 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z1 == 0 goto label3;

        $r10 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        $r11 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange,com.google.common.collect.BstBalancePolicy,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, r2, $r10, r3);

        goto label4;

     label3:
        $r11 = null;

     label4:
        r5 = $r11;

        $r9 = interfaceinvoke r1.<com.google.common.collect.BstBalancePolicy: com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r2, r5, r4);

        return $r9;
    }

    private static com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange, com.google.common.collect.BstBalancePolicy, com.google.common.collect.BstNodeFactory, com.google.common.collect.BstSide, com.google.common.collect.BstNode)
    {
        com.google.common.collect.GeneralRange r0;
        com.google.common.collect.BstBalancePolicy r1;
        com.google.common.collect.BstNodeFactory r2;
        com.google.common.collect.BstSide r3, $r10, $r11, $r13, $r14;
        com.google.common.collect.BstNode r4, r5, r6, $r8, $r9, $r15;
        java.lang.Object $r7;
        boolean $z0;
        int[] $r12;
        int $i0, $i1;
        java.lang.AssertionError $r16;

        r0 := @parameter0: com.google.common.collect.GeneralRange;

        r1 := @parameter1: com.google.common.collect.BstBalancePolicy;

        r2 := @parameter2: com.google.common.collect.BstNodeFactory;

        r3 := @parameter3: com.google.common.collect.BstSide;

        r4 := @parameter4: com.google.common.collect.BstNode;

        if r4 != null goto label1;

        return null;

     label1:
        $r7 = virtualinvoke r4.<com.google.common.collect.BstNode: java.lang.Object getKey()>();

        $z0 = staticinvoke <com.google.common.collect.BstRangeOps: boolean beyond(com.google.common.collect.GeneralRange,java.lang.Object,com.google.common.collect.BstSide)>(r0, $r7, r3);

        if $z0 == 0 goto label6;

        $r10 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        r5 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r10);

        $r11 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        r6 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r11);

        $r12 = <com.google.common.collect.BstRangeOps$1: int[] $SwitchMap$com$google$common$collect$BstSide>;

        $i1 = virtualinvoke r3.<com.google.common.collect.BstSide: int ordinal()>();

        $i0 = $r12[$i1];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label2:
        $r14 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        r6 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange,com.google.common.collect.BstBalancePolicy,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, r2, $r14, r6);

        goto label5;

     label3:
        $r13 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        r5 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange,com.google.common.collect.BstBalancePolicy,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, r2, $r13, r5);

        goto label5;

     label4:
        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label5:
        $r15 = interfaceinvoke r1.<com.google.common.collect.BstBalancePolicy: com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r2, r4, r5, r6);

        return $r15;

     label6:
        $r8 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>(r3);

        $r9 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstNode subTreeBeyondRangeToSide(com.google.common.collect.GeneralRange,com.google.common.collect.BstBalancePolicy,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstSide,com.google.common.collect.BstNode)>(r0, r1, r2, r3, $r8);

        return $r9;
    }

    public static com.google.common.collect.BstPath furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstNode)
    {
        com.google.common.collect.GeneralRange r0;
        com.google.common.collect.BstSide r1;
        com.google.common.collect.BstPathFactory r2;
        com.google.common.collect.BstNode r3;
        com.google.common.collect.BstPath r4, $r8;

        r0 := @parameter0: com.google.common.collect.GeneralRange;

        r1 := @parameter1: com.google.common.collect.BstSide;

        r2 := @parameter2: com.google.common.collect.BstPathFactory;

        r3 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        if r3 != null goto label1;

        return null;

     label1:
        r4 = interfaceinvoke r2.<com.google.common.collect.BstPathFactory: com.google.common.collect.BstPath initialPath(com.google.common.collect.BstNode)>(r3);

        $r8 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstPath furthestPath(com.google.common.collect.GeneralRange,com.google.common.collect.BstSide,com.google.common.collect.BstPathFactory,com.google.common.collect.BstPath)>(r0, r1, r2, r4);

        return $r8;
    }

    private static com.google.common.collect.BstPath furthestPath(com.google.common.collect.GeneralRange, com.google.common.collect.BstSide, com.google.common.collect.BstPathFactory, com.google.common.collect.BstPath)
    {
        com.google.common.collect.GeneralRange r0;
        com.google.common.collect.BstSide r1, $r7, $r9, $r10;
        com.google.common.collect.BstPathFactory r2;
        com.google.common.collect.BstPath r3, r6, $r8, $r11, r12, r13;
        com.google.common.collect.BstNode r4;
        java.lang.Object r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.google.common.collect.GeneralRange;

        r1 := @parameter1: com.google.common.collect.BstSide;

        r2 := @parameter2: com.google.common.collect.BstPathFactory;

        r3 := @parameter3: com.google.common.collect.BstPath;

        r4 = virtualinvoke r3.<com.google.common.collect.BstPath: com.google.common.collect.BstNode getTip()>();

        r5 = virtualinvoke r4.<com.google.common.collect.BstNode: java.lang.Object getKey()>();

        $z0 = staticinvoke <com.google.common.collect.BstRangeOps: boolean beyond(com.google.common.collect.GeneralRange,java.lang.Object,com.google.common.collect.BstSide)>(r0, r5, r1);

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r1.<com.google.common.collect.BstSide: com.google.common.collect.BstSide other()>();

        $z3 = virtualinvoke r4.<com.google.common.collect.BstNode: boolean hasChild(com.google.common.collect.BstSide)>($r9);

        if $z3 == 0 goto label1;

        $r10 = virtualinvoke r1.<com.google.common.collect.BstSide: com.google.common.collect.BstSide other()>();

        r12 = interfaceinvoke r2.<com.google.common.collect.BstPathFactory: com.google.common.collect.BstPath extension(com.google.common.collect.BstPath,com.google.common.collect.BstSide)>(r3, $r10);

        $r11 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstPath furthestPath(com.google.common.collect.GeneralRange,com.google.common.collect.BstSide,com.google.common.collect.BstPathFactory,com.google.common.collect.BstPath)>(r0, r1, r2, r12);

        return $r11;

     label1:
        return null;

     label2:
        $z1 = virtualinvoke r4.<com.google.common.collect.BstNode: boolean hasChild(com.google.common.collect.BstSide)>(r1);

        if $z1 == 0 goto label3;

        r6 = interfaceinvoke r2.<com.google.common.collect.BstPathFactory: com.google.common.collect.BstPath extension(com.google.common.collect.BstPath,com.google.common.collect.BstSide)>(r3, r1);

        r13 = staticinvoke <com.google.common.collect.BstRangeOps: com.google.common.collect.BstPath furthestPath(com.google.common.collect.GeneralRange,com.google.common.collect.BstSide,com.google.common.collect.BstPathFactory,com.google.common.collect.BstPath)>(r0, r1, r2, r6);

        if r13 == null goto label3;

        return r13;

     label3:
        $r7 = virtualinvoke r1.<com.google.common.collect.BstSide: com.google.common.collect.BstSide other()>();

        $z2 = staticinvoke <com.google.common.collect.BstRangeOps: boolean beyond(com.google.common.collect.GeneralRange,java.lang.Object,com.google.common.collect.BstSide)>(r0, r5, $r7);

        if $z2 == 0 goto label4;

        $r8 = null;

        goto label5;

     label4:
        $r8 = r3;

     label5:
        return $r8;
    }

    public static boolean beyond(com.google.common.collect.GeneralRange, java.lang.Object, com.google.common.collect.BstSide)
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.Object r1;
        com.google.common.collect.BstSide r2;
        int[] $r4;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.AssertionError $r5;

        r0 := @parameter0: com.google.common.collect.GeneralRange;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.common.collect.BstSide;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = <com.google.common.collect.BstRangeOps$1: int[] $SwitchMap$com$google$common$collect$BstSide>;

        $i0 = virtualinvoke r2.<com.google.common.collect.BstSide: int ordinal()>();

        $i1 = $r4[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $z1 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>(r1);

        return $z1;

     label2:
        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>(r1);

        return $z0;

     label3:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;
    }

    private void <init>()
    {
        com.google.common.collect.BstRangeOps r0;

        r0 := @this: com.google.common.collect.BstRangeOps;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
