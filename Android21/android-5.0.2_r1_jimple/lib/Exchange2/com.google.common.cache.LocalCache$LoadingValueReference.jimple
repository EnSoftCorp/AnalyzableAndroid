class com.google.common.cache.LocalCache$LoadingValueReference extends java.lang.Object implements com.google.common.cache.LocalCache$ValueReference
{
    volatile com.google.common.cache.LocalCache$ValueReference oldValue;
    final com.google.common.util.concurrent.SettableFuture futureValue;
    final com.google.common.base.Stopwatch stopwatch;

    public void <init>()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference $r1;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = staticinvoke <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ValueReference unset()>();

        specialinvoke r0.<com.google.common.cache.LocalCache$LoadingValueReference: void <init>(com.google.common.cache.LocalCache$ValueReference)>($r1);

        return;
    }

    public void <init>(com.google.common.cache.LocalCache$ValueReference)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference r1;
        com.google.common.util.concurrent.SettableFuture $r2;
        com.google.common.base.Stopwatch $r3;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: com.google.common.cache.LocalCache$ValueReference;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue> = $r2;

        $r3 = new com.google.common.base.Stopwatch;

        specialinvoke $r3.<com.google.common.base.Stopwatch: void <init>()>();

        r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.base.Stopwatch stopwatch> = $r3;

        r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue> = r1;

        return;
    }

    public boolean isLoading()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        return 1;
    }

    public boolean isActive()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference $r1;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue>;

        $z0 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ValueReference: boolean isActive()>();

        return $z0;
    }

    public int getWeight()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference $r1;
        int $i0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue>;

        $i0 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ValueReference: int getWeight()>();

        return $i0;
    }

    public boolean set(java.lang.Object)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.Object r1;
        com.google.common.util.concurrent.SettableFuture $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue>;

        $z0 = virtualinvoke $r2.<com.google.common.util.concurrent.SettableFuture: boolean set(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean setException(java.lang.Throwable)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.Throwable r1;
        com.google.common.util.concurrent.SettableFuture $r2;
        boolean $z0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue>;

        $z0 = staticinvoke <com.google.common.cache.LocalCache$LoadingValueReference: boolean setException(com.google.common.util.concurrent.SettableFuture,java.lang.Throwable)>($r2, r1);

        return $z0;
    }

    private static boolean setException(com.google.common.util.concurrent.SettableFuture, java.lang.Throwable)
    {
        com.google.common.util.concurrent.SettableFuture r0;
        java.lang.Throwable r1;
        boolean $z0;
        java.lang.Error $r3;

        r0 := @parameter0: com.google.common.util.concurrent.SettableFuture;

        r1 := @parameter1: java.lang.Throwable;

     label1:
        $z0 = virtualinvoke r0.<com.google.common.util.concurrent.SettableFuture: boolean setException(java.lang.Throwable)>(r1);

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.Error from label1 to label2 with label3;
    }

    private com.google.common.util.concurrent.ListenableFuture fullyFailedFuture(java.lang.Throwable)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.Throwable r1;
        com.google.common.util.concurrent.SettableFuture r2;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.Throwable;

        r2 = staticinvoke <com.google.common.util.concurrent.SettableFuture: com.google.common.util.concurrent.SettableFuture create()>();

        staticinvoke <com.google.common.cache.LocalCache$LoadingValueReference: boolean setException(com.google.common.util.concurrent.SettableFuture,java.lang.Throwable)>(r2, r1);

        return r2;
    }

    public void notifyNewValue(java.lang.Object)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.Object r1;
        com.google.common.cache.LocalCache$ValueReference $r2;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        virtualinvoke r0.<com.google.common.cache.LocalCache$LoadingValueReference: boolean set(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = staticinvoke <com.google.common.cache.LocalCache: com.google.common.cache.LocalCache$ValueReference unset()>();

        r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue> = $r2;

     label2:
        return;
    }

    public com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object, com.google.common.cache.CacheLoader)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.Object r1, r3, r4;
        com.google.common.cache.CacheLoader r2;
        com.google.common.base.Stopwatch $r5;
        com.google.common.cache.LocalCache$ValueReference $r7;
        com.google.common.util.concurrent.ListenableFuture $r8, $r9, $r11, r12;
        boolean $z0, $z1;
        java.lang.Throwable $r10, r13;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.google.common.cache.CacheLoader;

        $r5 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.base.Stopwatch stopwatch>;

        virtualinvoke $r5.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch start()>();

        $r7 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue>;

        r3 = interfaceinvoke $r7.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

     label1:
        if r3 != null goto label4;

        r4 = virtualinvoke r2.<com.google.common.cache.CacheLoader: java.lang.Object load(java.lang.Object)>(r1);

        $z0 = virtualinvoke r0.<com.google.common.cache.LocalCache$LoadingValueReference: boolean set(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r9 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue>;

        goto label3;

     label2:
        $r9 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(r4);

     label3:
        return $r9;

     label4:
        r12 = virtualinvoke r2.<com.google.common.cache.CacheLoader: com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object,java.lang.Object)>(r1, r3);

        if r12 == null goto label5;

        $r8 = r12;

        goto label6;

     label5:
        $r8 = staticinvoke <com.google.common.util.concurrent.Futures: com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object)>(null);

     label6:
        return $r8;

     label7:
        $r10 := @caughtexception;

        r13 = $r10;

        $z1 = virtualinvoke r0.<com.google.common.cache.LocalCache$LoadingValueReference: boolean setException(java.lang.Throwable)>(r13);

        if $z1 == 0 goto label8;

        $r11 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue>;

        goto label9;

     label8:
        $r11 = specialinvoke r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.ListenableFuture fullyFailedFuture(java.lang.Throwable)>(r13);

     label9:
        return $r11;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    public long elapsedNanos()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.util.concurrent.TimeUnit $r1;
        com.google.common.base.Stopwatch $r2;
        long $l0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r2 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.base.Stopwatch stopwatch>;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l0 = virtualinvoke $r2.<com.google.common.base.Stopwatch: long elapsedTime(java.util.concurrent.TimeUnit)>($r1);

        return $l0;
    }

    public java.lang.Object waitForValue() throws java.util.concurrent.ExecutionException
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.util.concurrent.SettableFuture $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.util.concurrent.SettableFuture futureValue>;

        $r2 = staticinvoke <com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>($r1);

        return $r2;
    }

    public java.lang.Object get()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference $r1;
        java.lang.Object $r2;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue>;

        $r2 = interfaceinvoke $r1.<com.google.common.cache.LocalCache$ValueReference: java.lang.Object get()>();

        return $r2;
    }

    public com.google.common.cache.LocalCache$ValueReference getOldValue()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        com.google.common.cache.LocalCache$ValueReference $r1;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        $r1 = r0.<com.google.common.cache.LocalCache$LoadingValueReference: com.google.common.cache.LocalCache$ValueReference oldValue>;

        return $r1;
    }

    public com.google.common.cache.LocalCache$ReferenceEntry getEntry()
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        return null;
    }

    public com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue, com.google.common.cache.LocalCache$ReferenceEntry)
    {
        com.google.common.cache.LocalCache$LoadingValueReference r0;
        java.lang.ref.ReferenceQueue r1;
        com.google.common.cache.LocalCache$ReferenceEntry r2;

        r0 := @this: com.google.common.cache.LocalCache$LoadingValueReference;

        r1 := @parameter0: java.lang.ref.ReferenceQueue;

        r2 := @parameter1: com.google.common.cache.LocalCache$ReferenceEntry;

        return r0;
    }
}
