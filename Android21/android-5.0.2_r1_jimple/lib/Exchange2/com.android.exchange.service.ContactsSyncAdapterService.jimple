public class com.android.exchange.service.ContactsSyncAdapterService extends com.android.exchange.service.AbstractSyncAdapterService
{
    private static final java.lang.String TAG;
    private static final java.lang.String ACCOUNT_AND_TYPE_CONTACTS;
    private static final java.lang.Object sSyncAdapterLock;
    private static android.content.AbstractThreadedSyncAdapter sSyncAdapter;

    public void <init>()
    {
        com.android.exchange.service.ContactsSyncAdapterService r0;

        r0 := @this: com.android.exchange.service.ContactsSyncAdapterService;

        specialinvoke r0.<com.android.exchange.service.AbstractSyncAdapterService: void <init>()>();

        return;
    }

    protected android.content.AbstractThreadedSyncAdapter getSyncAdapter()
    {
        com.android.exchange.service.ContactsSyncAdapterService r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r7;
        android.content.AbstractThreadedSyncAdapter $r4, $r5;
        com.android.exchange.service.ContactsSyncAdapterService$SyncAdapterImpl $r6;

        r0 := @this: com.android.exchange.service.ContactsSyncAdapterService;

        $r3 = <com.android.exchange.service.ContactsSyncAdapterService: java.lang.Object sSyncAdapterLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <com.android.exchange.service.ContactsSyncAdapterService: android.content.AbstractThreadedSyncAdapter sSyncAdapter>;

        if $r4 != null goto label2;

        $r6 = new com.android.exchange.service.ContactsSyncAdapterService$SyncAdapterImpl;

        specialinvoke $r6.<com.android.exchange.service.ContactsSyncAdapterService$SyncAdapterImpl: void <init>(com.android.exchange.service.ContactsSyncAdapterService,android.content.Context)>(r0, r0);

        <com.android.exchange.service.ContactsSyncAdapterService: android.content.AbstractThreadedSyncAdapter sSyncAdapter> = $r6;

     label2:
        $r5 = <com.android.exchange.service.ContactsSyncAdapterService: android.content.AbstractThreadedSyncAdapter sSyncAdapter>;

        exitmonitor r1;

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static boolean hasDirtyRows(android.content.ContentResolver, android.net.Uri, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2, $r9;
        android.database.Cursor r3;
        boolean z0, $z1;
        java.lang.Throwable r4, $r10;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.lang.String[] $r6;
        int $i0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $r6 = <com.android.emailcommon.provider.EmailContent: java.lang.String[] ID_PROJECTION>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r6, $r9, null, null);

        if r3 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

     label4:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return z0;

     label5:
        $r10 := @caughtexception;

        r4 = $r10;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static boolean access$000(android.content.ContentResolver, android.net.Uri, java.lang.String)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.android.exchange.service.ContactsSyncAdapterService: boolean hasDirtyRows(android.content.ContentResolver,android.net.Uri,java.lang.String)>(r0, r1, r2);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.exchange.service.ContactsSyncAdapterService: java.lang.String ACCOUNT_AND_TYPE_CONTACTS> = "accountKey=? AND type=66";

        <com.android.exchange.service.ContactsSyncAdapterService: java.lang.String TAG> = "Exchange";

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.exchange.service.ContactsSyncAdapterService: java.lang.Object sSyncAdapterLock> = $r0;

        <com.android.exchange.service.ContactsSyncAdapterService: android.content.AbstractThreadedSyncAdapter sSyncAdapter> = null;

        return;
    }
}
