public class com.android.exchange.utility.CurlLogger extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.android.exchange.utility.CurlLogger r0;

        r0 := @this: com.android.exchange.utility.CurlLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws java.io.IOException
    {
        com.android.exchange.utility.CurlLogger r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.protocol.HttpContext r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r5, $r7, $r8;
        org.apache.http.client.methods.HttpUriRequest $r4, $r6;

        r0 := @this: com.android.exchange.utility.CurlLogger;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $z0 = r1 instanceof org.apache.http.client.methods.HttpUriRequest;

        if $z0 == 0 goto label3;

        $r3 = <android.os.Build: java.lang.String TYPE>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("userdebug");

        if $z1 != 0 goto label1;

        $r8 = <android.os.Build: java.lang.String TYPE>;

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("eng");

        if $z4 == 0 goto label2;

     label1:
        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Exchange", 2);

        if $z2 == 0 goto label2;

        $r6 = (org.apache.http.client.methods.HttpUriRequest) r1;

        $r7 = staticinvoke <com.android.exchange.utility.CurlLogger: java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest,boolean)>($r6, 1);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Exchange", $r7);

        goto label3;

     label2:
        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("Exchange", 3);

        if $z3 == 0 goto label3;

        $r4 = (org.apache.http.client.methods.HttpUriRequest) r1;

        $r5 = staticinvoke <com.android.exchange.utility.CurlLogger: java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest,boolean)>($r4, 0);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Exchange", $r5);

     label3:
        return;
    }

    private static java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest, boolean) throws java.io.IOException
    {
        org.apache.http.client.methods.HttpUriRequest r0, $r23;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder r1, $r5, $r14, $r15, $r16, $r18, $r29, $r33;
        org.apache.http.Header[] r2;
        int i0, i1;
        org.apache.http.Header r3;
        java.lang.String r4, $r10, $r17, $r26, $r27, $r28, $r30, $r31;
        byte $b2;
        long $l3;
        java.io.ByteArrayOutputStream $r11, r38;
        byte[] $r13;
        org.apache.http.impl.client.RequestWrapper $r19;
        java.net.URI r34;
        org.apache.http.HttpRequest r35;
        org.apache.http.HttpEntityEnclosingRequest r36;
        org.apache.http.HttpEntity r37;

        r0 := @parameter0: org.apache.http.client.methods.HttpUriRequest;

        z0 := @parameter1: boolean;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("curl ");

        r2 = interfaceinvoke r0.<org.apache.http.client.methods.HttpUriRequest: org.apache.http.Header[] getAllHeaders()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--header \"");

        if z0 != 0 goto label3;

        $r30 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getName()>();

        $z5 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("Authorization");

        if $z5 != 0 goto label2;

        $r31 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getName()>();

        $z6 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("Cookie");

        if $z6 == 0 goto label3;

     label2:
        $r28 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getName()>();

        $r29 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("${token}");

        goto label4;

     label3:
        $r26 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" ");

        i1 = i1 + 1;

        goto label1;

     label5:
        r34 = interfaceinvoke r0.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        $z1 = r0 instanceof org.apache.http.impl.client.RequestWrapper;

        if $z1 == 0 goto label6;

        $r19 = (org.apache.http.impl.client.RequestWrapper) r0;

        r35 = virtualinvoke $r19.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>();

        $z4 = r35 instanceof org.apache.http.client.methods.HttpUriRequest;

        if $z4 == 0 goto label6;

        $r23 = (org.apache.http.client.methods.HttpUriRequest) r35;

        r34 = interfaceinvoke $r23.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $z2 = r0 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z2 == 0 goto label8;

        r36 = (org.apache.http.HttpEntityEnclosingRequest) r0;

        r37 = interfaceinvoke r36.<org.apache.http.HttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>();

        if r37 == null goto label8;

        $z3 = interfaceinvoke r37.<org.apache.http.HttpEntity: boolean isRepeatable()>();

        if $z3 == 0 goto label8;

        $l3 = interfaceinvoke r37.<org.apache.http.HttpEntity: long getContentLength()>();

        $b2 = $l3 cmp 1024L;

        if $b2 >= 0 goto label7;

        $r11 = new java.io.ByteArrayOutputStream;

        specialinvoke $r11.<java.io.ByteArrayOutputStream: void <init>()>();

        r38 = $r11;

        interfaceinvoke r37.<org.apache.http.HttpEntity: void writeTo(java.io.OutputStream)>(r38);

        $r13 = virtualinvoke r38.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r4 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r13, 2);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("echo \'");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' | base64 -d > /tmp/$$.bin; ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, $r17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" --data-binary @/tmp/$$.bin");

        goto label8;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [TOO MUCH DATA TO INCLUDE]");

     label8:
        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public static void <clinit>()
    {
        <com.android.exchange.utility.CurlLogger: java.lang.String TAG> = "Exchange";

        return;
    }
}
