final class com.google.common.collect.RegularImmutableTable$DenseImmutableTable extends com.google.common.collect.RegularImmutableTable
{
    private final com.google.common.collect.ImmutableBiMap rowKeyToIndex;
    private final com.google.common.collect.ImmutableBiMap columnKeyToIndex;
    private final java.lang.Object[][] values;
    private transient volatile com.google.common.collect.ImmutableMap columnMap;
    private transient volatile com.google.common.collect.ImmutableMap rowMap;

    private static com.google.common.collect.ImmutableBiMap makeIndex(com.google.common.collect.ImmutableSet)
    {
        com.google.common.collect.ImmutableSet r0;
        com.google.common.collect.ImmutableBiMap$Builder r1;
        int i0;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;
        com.google.common.collect.ImmutableBiMap $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: com.google.common.collect.ImmutableSet;

        r1 = staticinvoke <com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap$Builder builder()>();

        i0 = 0;

        r2 = virtualinvoke r0.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object)>(r3, $r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<com.google.common.collect.ImmutableBiMap$Builder: com.google.common.collect.ImmutableBiMap build()>();

        return $r4;
    }

    void <init>(com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableSet)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableSet r1, r2, r3;
        java.lang.Object[][] r4, $r10, $r21, $r25;
        java.util.Iterator r5;
        com.google.common.collect.Table$Cell r6;
        java.lang.Object r7, r8, r9, $r13, $r14, $r17, $r23;
        int i0, i1, $i2, $i3;
        com.google.common.collect.ImmutableBiMap $r11, $r12, $r15, $r18;
        boolean $z0, $z1;
        java.lang.Integer $r16, $r19;
        java.lang.Object[] $r20, $r22, $r24;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: com.google.common.collect.ImmutableSet;

        r2 := @parameter1: com.google.common.collect.ImmutableSet;

        r3 := @parameter2: com.google.common.collect.ImmutableSet;

        specialinvoke r0.<com.google.common.collect.RegularImmutableTable: void <init>(com.google.common.collect.ImmutableSet,com.google.common.collect.RegularImmutableTable$1)>(r1, null);

        $i2 = virtualinvoke r2.<com.google.common.collect.ImmutableSet: int size()>();

        $i3 = virtualinvoke r3.<com.google.common.collect.ImmutableSet: int size()>();

        $r10 = newmultiarray (java.lang.Object)[$i2][$i3];

        r4 = (java.lang.Object[][]) $r10;

        r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values> = r4;

        $r11 = staticinvoke <com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap makeIndex(com.google.common.collect.ImmutableSet)>(r2);

        r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex> = $r11;

        $r12 = staticinvoke <com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap makeIndex(com.google.common.collect.ImmutableSet)>(r3);

        r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex> = $r12;

        r5 = virtualinvoke r1.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.google.common.collect.Table$Cell) $r13;

        r7 = interfaceinvoke r6.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        r8 = interfaceinvoke r6.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r15 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r14 = virtualinvoke $r15.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r7);

        $r16 = (java.lang.Integer) $r14;

        i0 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r18 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r17 = virtualinvoke $r18.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r8);

        $r19 = (java.lang.Integer) $r17;

        i1 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        $r21 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $r20 = $r21[i0];

        r9 = $r20[i1];

        if r9 != null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r24 = newarray (java.lang.Object)[2];

        $r24[0] = r7;

        $r24[1] = r8;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "duplicate key: (%s, %s)", $r24);

        $r25 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $r22 = $r25[i0];

        $r23 = interfaceinvoke r6.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        $r22[i1] = $r23;

        goto label1;

     label4:
        return;
    }

    public com.google.common.collect.ImmutableMap column(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1, r4, $r7, $r16;
        java.lang.Integer r2, $r13;
        int i0, i1, $i2;
        com.google.common.collect.ImmutableMap$Builder r3;
        com.google.common.collect.ImmutableBiMap $r6, $r11, $r14;
        java.lang.Object[][] $r8, $r10;
        com.google.common.collect.ImmutableMap $r9, $r17;
        java.lang.Object[] $r12;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r6 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r7;

        if r2 != null goto label1;

        $r17 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r17;

     label1:
        i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        r3 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i1 = 0;

     label2:
        $r8 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $i2 = lengthof $r8;

        if i1 >= $i2 goto label4;

        $r10 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $r12 = $r10[i1];

        r4 = $r12[i0];

        if r4 == null goto label3;

        $r11 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r14 = virtualinvoke $r11.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16 = virtualinvoke $r14.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r13);

        virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r16, r4);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r9 = virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        return $r9;
    }

    public com.google.common.collect.ImmutableSet columnKeySet()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableSet $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r2;
    }

    private com.google.common.collect.ImmutableMap makeColumnMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap$Builder r1, r2;
        int i0, i1, $i2, $i3;
        java.lang.Object r3, $r11, $r19;
        com.google.common.collect.ImmutableBiMap $r4, $r6, $r7, $r8, $r14, $r17;
        com.google.common.collect.ImmutableMap $r5, $r10;
        java.lang.Integer $r9, $r16;
        java.lang.Object[][] $r12;
        java.lang.Object[] $r15;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i0 = 0;

     label1:
        $r4 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $i2 = virtualinvoke $r4.<com.google.common.collect.ImmutableBiMap: int size()>();

        if i0 >= $i2 goto label5;

        r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i1 = 0;

     label2:
        $r6 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $i3 = virtualinvoke $r6.<com.google.common.collect.ImmutableBiMap: int size()>();

        if i1 >= $i3 goto label4;

        $r12 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $r15 = $r12[i1];

        r3 = $r15[i0];

        if r3 == null goto label3;

        $r14 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r17 = virtualinvoke $r14.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r19 = virtualinvoke $r17.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r16);

        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r19, r3);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r7 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11 = virtualinvoke $r8.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r9);

        $r10 = virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        virtualinvoke r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r11, $r10);

        i0 = i0 + 1;

        goto label1;

     label5:
        $r5 = virtualinvoke r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        return $r5;
    }

    public com.google.common.collect.ImmutableMap columnMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap r1, $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap columnMap>;

        if r1 != null goto label1;

        $r2 = specialinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap makeColumnMap()>();

        r1 = $r2;

        r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap columnMap> = $r2;

     label1:
        return r1;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1, r2, $r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object get(java.lang.Object,java.lang.Object)>(r1, r2);

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean containsColumn(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableBiMap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableBiMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsRow(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableBiMap $r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $z0 = virtualinvoke $r2.<com.google.common.collect.ImmutableBiMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.Object get(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1, r2, $r6, $r8, $r11;
        java.lang.Integer r3, r4;
        com.google.common.collect.ImmutableBiMap $r5, $r7;
        java.lang.Object[][] $r9;
        int $i0, $i1;
        java.lang.Object[] $r10;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r5 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r6 = virtualinvoke $r5.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r6;

        $r7 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.lang.Integer) $r8;

        if r3 == null goto label1;

        if r4 != null goto label2;

     label1:
        $r11 = null;

        goto label3;

     label2:
        $r9 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r10 = $r9[$i0];

        $i1 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r11 = $r10[$i1];

     label3:
        return $r11;
    }

    public com.google.common.collect.ImmutableMap row(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1, r5, $r8, $r15;
        java.lang.Integer r2, $r12;
        com.google.common.collect.ImmutableMap$Builder r3;
        java.lang.Object[] r4;
        int i0, $i1, $i2;
        com.google.common.collect.ImmutableBiMap $r7, $r11, $r13;
        java.lang.Object[][] $r9;
        com.google.common.collect.ImmutableMap $r10, $r16;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r8 = virtualinvoke $r7.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r8;

        if r2 != null goto label1;

        $r16 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

        return $r16;

     label1:
        r3 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r9 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        r4 = $r9[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r4;

        if i0 >= $i2 goto label4;

        r5 = r4[i0];

        if r5 == null goto label3;

        $r11 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r13 = virtualinvoke $r11.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15 = virtualinvoke $r13.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r12);

        virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r15, r5);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r10 = virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        return $r10;
    }

    public com.google.common.collect.ImmutableSet rowKeySet()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableBiMap $r1;
        com.google.common.collect.ImmutableSet $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableSet keySet()>();

        return $r2;
    }

    private com.google.common.collect.ImmutableMap makeRowMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap$Builder r1, r3;
        int i0, i1, $i2, $i3;
        java.lang.Object[] r2;
        java.lang.Object r4, $r10, $r16;
        java.lang.Object[][] $r5, $r7;
        com.google.common.collect.ImmutableMap $r6, $r13;
        com.google.common.collect.ImmutableBiMap $r8, $r9, $r14, $r15;
        java.lang.Integer $r11, $r17;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i0 = 0;

     label1:
        $r5 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        $i2 = lengthof $r5;

        if i0 >= $i2 goto label5;

        $r7 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: java.lang.Object[][] values>;

        r2 = $r7[i0];

        r3 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        i1 = 0;

     label2:
        $i3 = lengthof r2;

        if i1 >= $i3 goto label4;

        r4 = r2[i1];

        if r4 == null goto label3;

        $r15 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap columnKeyToIndex>;

        $r14 = virtualinvoke $r15.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r16 = virtualinvoke $r14.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r17);

        virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r16, r4);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r8 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableBiMap rowKeyToIndex>;

        $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableBiMap: com.google.common.collect.ImmutableBiMap inverse()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableBiMap: java.lang.Object get(java.lang.Object)>($r11);

        $r13 = virtualinvoke r3.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        virtualinvoke r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r10, $r13);

        i0 = i0 + 1;

        goto label1;

     label5:
        $r6 = virtualinvoke r1.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        return $r6;
    }

    public com.google.common.collect.ImmutableMap rowMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap r1, $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 = r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap rowMap>;

        if r1 != null goto label1;

        $r2 = specialinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap makeRowMap()>();

        r1 = $r2;

        r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap rowMap> = $r2;

     label1:
        return r1;
    }

    public volatile java.util.Map columnMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap columnMap()>();

        return $r1;
    }

    public volatile java.util.Map rowMap()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap rowMap()>();

        return $r1;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableCollection $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = specialinvoke r0.<com.google.common.collect.RegularImmutableTable: com.google.common.collect.ImmutableCollection values()>();

        return $r1;
    }

    public volatile java.util.Set columnKeySet()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableSet columnKeySet()>();

        return $r1;
    }

    public volatile java.util.Set rowKeySet()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableSet rowKeySet()>();

        return $r1;
    }

    public volatile java.util.Set cellSet()
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        $r1 = specialinvoke r0.<com.google.common.collect.RegularImmutableTable: com.google.common.collect.ImmutableSet cellSet()>();

        return $r1;
    }

    public volatile java.util.Map column(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap column(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Map row(java.lang.Object)
    {
        com.google.common.collect.RegularImmutableTable$DenseImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.RegularImmutableTable$DenseImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.RegularImmutableTable$DenseImmutableTable: com.google.common.collect.ImmutableMap row(java.lang.Object)>(r1);

        return $r2;
    }
}
