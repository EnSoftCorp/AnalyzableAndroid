class com.android.exchange.service.EasService$RestartPingsTask extends android.os.AsyncTask
{
    private boolean mHasRestartedPing;
    final com.android.exchange.service.EasService this$0;

    private void <init>(com.android.exchange.service.EasService)
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        com.android.exchange.service.EasService r1;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: com.android.exchange.service.EasService;

        r0.<com.android.exchange.service.EasService$RestartPingsTask: com.android.exchange.service.EasService this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.android.exchange.service.EasService$RestartPingsTask: boolean mHasRestartedPing> = 0;

        return;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        java.lang.Void[] r1;
        android.database.Cursor r2;
        com.android.emailcommon.provider.Account r3, $r10;
        java.lang.Throwable r4, $r14;
        com.android.exchange.service.EasService $r5, $r12, $r13;
        android.content.ContentResolver $r6;
        android.net.Uri $r7;
        java.lang.String[] $r8;
        java.lang.String $r9;
        boolean $z0, $z1;
        java.lang.Object[] $r11;
        com.android.exchange.service.PingSyncSynchronizer $r15;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: java.lang.Void[];

        $r5 = r0.<com.android.exchange.service.EasService$RestartPingsTask: com.android.exchange.service.EasService this$0>;

        $r6 = virtualinvoke $r5.<com.android.exchange.service.EasService: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r8 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        $r9 = staticinvoke <com.android.exchange.service.EasService: java.lang.String access$200()>();

        r2 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r7, $r8, $r9, null, null);

        if r2 == null goto label6;

     label1:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $r10 = new com.android.emailcommon.provider.Account;

        specialinvoke $r10.<com.android.emailcommon.provider.Account: void <init>()>();

        r3 = $r10;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "RestartPingsTask starting ping for %s", $r11);

        virtualinvoke r3.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r2);

        $r12 = r0.<com.android.exchange.service.EasService$RestartPingsTask: com.android.exchange.service.EasService this$0>;

        $z1 = virtualinvoke $r12.<com.android.exchange.service.EasService: boolean pingNeededForAccount(com.android.emailcommon.provider.Account)>(r3);

        if $z1 == 0 goto label2;

        r0.<com.android.exchange.service.EasService$RestartPingsTask: boolean mHasRestartedPing> = 1;

        $r13 = r0.<com.android.exchange.service.EasService$RestartPingsTask: com.android.exchange.service.EasService this$0>;

        $r15 = staticinvoke <com.android.exchange.service.EasService: com.android.exchange.service.PingSyncSynchronizer access$100(com.android.exchange.service.EasService)>($r13);

        virtualinvoke $r15.<com.android.exchange.service.PingSyncSynchronizer: void pushModify(com.android.emailcommon.provider.Account)>(r3);

     label2:
        goto label1;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r14 := @caughtexception;

        r4 = $r14;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

     label6:
        return null;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void onPostExecute(java.lang.Void)
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        java.lang.Void r1;
        boolean $z0;
        java.lang.Object[] $r2;
        com.android.exchange.service.EasService $r3;
        com.android.exchange.service.PingSyncSynchronizer $r4;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: java.lang.Void;

        $z0 = r0.<com.android.exchange.service.EasService$RestartPingsTask: boolean mHasRestartedPing>;

        if $z0 != 0 goto label1;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "RestartPingsTask did not start any pings.", $r2);

        $r3 = r0.<com.android.exchange.service.EasService$RestartPingsTask: com.android.exchange.service.EasService this$0>;

        $r4 = staticinvoke <com.android.exchange.service.EasService: com.android.exchange.service.PingSyncSynchronizer access$100(com.android.exchange.service.EasService)>($r3);

        virtualinvoke $r4.<com.android.exchange.service.PingSyncSynchronizer: void stopServiceIfIdle()>();

     label1:
        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        java.lang.Object r1;
        java.lang.Void $r2;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Void) r1;

        virtualinvoke r0.<com.android.exchange.service.EasService$RestartPingsTask: void onPostExecute(java.lang.Void)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.exchange.service.EasService$RestartPingsTask: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }

    void <init>(com.android.exchange.service.EasService, com.android.exchange.service.EasService$1)
    {
        com.android.exchange.service.EasService$RestartPingsTask r0;
        com.android.exchange.service.EasService r1;
        com.android.exchange.service.EasService$1 r2;

        r0 := @this: com.android.exchange.service.EasService$RestartPingsTask;

        r1 := @parameter0: com.android.exchange.service.EasService;

        r2 := @parameter1: com.android.exchange.service.EasService$1;

        specialinvoke r0.<com.android.exchange.service.EasService$RestartPingsTask: void <init>(com.android.exchange.service.EasService)>(r1);

        return;
    }
}
