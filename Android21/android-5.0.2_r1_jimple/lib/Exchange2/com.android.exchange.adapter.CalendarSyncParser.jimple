public class com.android.exchange.adapter.CalendarSyncParser extends com.android.exchange.adapter.AbstractSyncParser
{
    private static final java.lang.String TAG;
    private final java.util.TimeZone UTC_TIMEZONE;
    private final java.util.TimeZone mLocalTimeZone;
    private final long mCalendarId;
    private final android.accounts.Account mAccountManagerAccount;
    private final android.net.Uri mAsSyncAdapterAttendees;
    private final android.net.Uri mAsSyncAdapterEvents;
    private final java.lang.String[] mBindArgument;
    private final com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps;
    private static final java.lang.String EVENT_SAVED_TIMEZONE_COLUMN;
    private static final java.lang.String SERVER_ID_AND_CALENDAR_ID;
    private static final java.lang.String CLIENT_ID_SELECTION;
    private static final java.lang.String ATTENDEES_EXCEPT_ORGANIZER;
    private static final java.lang.String[] ID_PROJECTION;
    private static final java.lang.String EVENT_ID_AND_NAME;
    private static final java.lang.String[] EXTENDED_PROPERTY_PROJECTION;
    private static final int EXTENDED_PROPERTY_ID;
    private static final java.lang.String CATEGORY_TOKENIZER_DELIMITER;
    private static final java.lang.String ATTENDEE_TOKENIZER_DELIMITER;
    private static final java.lang.String EXTENDED_PROPERTY_USER_ATTENDEE_STATUS;
    private static final java.lang.String EXTENDED_PROPERTY_ATTENDEES;
    private static final java.lang.String EXTENDED_PROPERTY_DTSTAMP;
    private static final java.lang.String EXTENDED_PROPERTY_MEETING_STATUS;
    private static final java.lang.String EXTENDED_PROPERTY_CATEGORIES;
    private static final java.lang.String EXTENDED_PROPERTY_ATTENDEES_REDACTED;
    private static final java.lang.String EXTENDED_PROPERTY_UPSYNC_PROHIBITED;
    private static final com.android.exchange.adapter.AbstractSyncAdapter$Operation PLACEHOLDER_OPERATION;
    private static final long SEPARATOR_ID;
    private static final int MAX_SYNCED_ATTENDEES;
    private static final java.lang.String BOGUS_ORGANIZER_EMAIL;
    private static final int MAX_OPS_BEFORE_EXCEPTION_ATTENDEE_REDACTION;

    public void <init>(android.content.Context, android.content.ContentResolver, java.io.InputStream, com.android.emailcommon.provider.Mailbox, com.android.emailcommon.provider.Account, android.accounts.Account, long) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        android.content.Context r1;
        android.content.ContentResolver r2;
        java.io.InputStream r3;
        com.android.emailcommon.provider.Mailbox r4;
        com.android.emailcommon.provider.Account r5, $r10, $r15, $r18, $r24;
        android.accounts.Account r6;
        long l0;
        java.util.TimeZone $r7, $r8;
        java.lang.String[] $r9;
        java.lang.String $r11, $r14, $r21, $r27;
        android.net.Uri $r12, $r13, $r16, $r17, $r20, $r22, $r23, $r25, $r26, $r28;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations $r19;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ContentResolver;

        r3 := @parameter2: java.io.InputStream;

        r4 := @parameter3: com.android.emailcommon.provider.Mailbox;

        r5 := @parameter4: com.android.emailcommon.provider.Account;

        r6 := @parameter5: android.accounts.Account;

        l0 := @parameter6: long;

        specialinvoke r0.<com.android.exchange.adapter.AbstractSyncParser: void <init>(android.content.Context,android.content.ContentResolver,java.io.InputStream,com.android.emailcommon.provider.Mailbox,com.android.emailcommon.provider.Account)>(r1, r2, r3, r4, r5);

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone UTC_TIMEZONE> = $r7;

        $r8 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone> = $r8;

        $r9 = newarray (java.lang.String)[1];

        r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] mBindArgument> = $r9;

        r0.<com.android.exchange.adapter.CalendarSyncParser: android.accounts.Account mAccountManagerAccount> = r6;

        r0.<com.android.exchange.adapter.CalendarSyncParser: long mCalendarId> = l0;

        $r12 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r10 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r11 = $r10.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r13 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r12, $r11, "com.android.exchange");

        r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterAttendees> = $r13;

        $r17 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r15 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r14 = $r15.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r16 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r17, $r14, "com.android.exchange");

        r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterEvents> = $r16;

        $r19 = new com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        $r23 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterAttendees>;

        $r22 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterEvents>;

        $r20 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        $r18 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r21 = $r18.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r25 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r20, $r21, "com.android.exchange");

        $r26 = <android.provider.CalendarContract$ExtendedProperties: android.net.Uri CONTENT_URI>;

        $r24 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r27 = $r24.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r28 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r26, $r27, "com.android.exchange");

        specialinvoke $r19.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void <init>(android.content.ContentResolver,android.net.Uri,android.net.Uri,android.net.Uri,android.net.Uri)>(r2, $r23, $r22, $r25, $r28);

        r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps> = $r19;

        return;
    }

    private static android.net.Uri asSyncAdapter(android.net.Uri, java.lang.String, java.lang.String)
    {
        android.net.Uri r0, $r7;
        java.lang.String r1, r2;
        android.net.Uri$Builder $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("caller_is_syncadapter", "true");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_name", r1);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_type", r2);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    private static void addOrganizerToAttendees(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations, long, java.lang.String, java.lang.String)
    {
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r0;
        long l0;
        java.lang.String r1, r2;
        android.content.ContentValues r3, $r4;
        java.lang.Integer $r5, $r6, $r7;
        byte $b1;

        r0 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        if r1 != null goto label1;

        if r2 == null goto label5;

     label1:
        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        r3 = $r4;

        if r1 == null goto label2;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeName", r1);

     label2:
        if r2 == null goto label3;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", r2);

     label3:
        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r7);

        $b1 = l0 cmp 0L;

        if $b1 >= 0 goto label4;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newAttendee(android.content.ContentValues)>(r3);

        goto label5;

     label4:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedAttendee(android.content.ContentValues,long)>(r3, l0);

     label5:
        return;
    }

    void setTimeRelatedValues(android.content.ContentValues, long, long, int)
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        android.content.ContentValues r1;
        long l0, l1, l3, $l6, $l7, $l8, $l9, $l11, l12;
        int i2, $i10;
        java.lang.String r2, $r12, $r16, $r25;
        java.util.GregorianCalendar r3, $r17;
        byte $b4, $b5;
        boolean $z0, $z1, $z2;
        java.lang.Long $r4, $r5, $r7, $r19, $r23;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        java.util.TimeZone $r18, $r20, $r21, $r22, $r24;
        java.lang.Integer r26;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: android.content.ContentValues;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $b4 = l0 cmp 0L;

        if $b4 >= 0 goto label1;

        return;

     label1:
        $b5 = l1 cmp 0L;

        if $b5 >= 0 goto label2;

        l1 = l0 + 1800000L;

     label2:
        if i2 == 0 goto label3;

        $r22 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

        l0 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getUtcAllDayCalendarTime(long,java.util.TimeZone)>(l0, $r22);

        $r21 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

        l1 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getUtcAllDayCalendarTime(long,java.util.TimeZone)>(l1, $r21);

        r2 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventTimezone");

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sync_data1", r2);

        $r24 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone UTC_TIMEZONE>;

        $r25 = virtualinvoke $r24.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", $r25);

     label3:
        $z0 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("originalInstanceTime");

        if $z0 == 0 goto label4;

        $z2 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("originalAllDay");

        if $z2 == 0 goto label4;

        r26 = virtualinvoke r1.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("originalAllDay");

        if r26 == null goto label4;

        $i10 = virtualinvoke r26.<java.lang.Integer: int intValue()>();

        if $i10 == 0 goto label4;

        $r19 = virtualinvoke r1.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("originalInstanceTime");

        l3 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        $r17 = new java.util.GregorianCalendar;

        $r18 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone UTC_TIMEZONE>;

        specialinvoke $r17.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r18);

        r3 = $r17;

        $r20 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

        l12 = staticinvoke <com.android.exchange.utility.CalendarUtilities: long getUtcAllDayCalendarTime(long,java.util.TimeZone)>(l3, $r20);

        virtualinvoke r3.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l12);

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int)>(11, 0);

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int)>(12, 0);

        virtualinvoke r3.<java.util.GregorianCalendar: void set(int,int)>(13, 0);

        $l11 = virtualinvoke r3.<java.util.GregorianCalendar: long getTimeInMillis()>();

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("originalInstanceTime", $r23);

     label4:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r4);

        $z1 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("rrule");

        if $z1 == 0 goto label6;

        if i2 == 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $l8 = l1 - l0;

        $l9 = $l8 / 86400000L;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", $r16);

        goto label7;

     label5:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $l7 = l1 - l0;

        $l6 = $l7 / 60000L;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("M");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", $r12);

        goto label7;

     label6:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtend", $r5);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("lastDate", $r7);

     label7:
        return;
    }

    public void addEvent(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations, java.lang.String, boolean) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        java.lang.String r2, r4, r5, r8, r11, r12, $r19, $r24, $r36, $r41, $r42, $r45, $r48, $r49, $r50, $r51, $r52, $r55, $r56, $r57, $r58, $r61, $r62, $r70, $r75, $r77, $r78, $r80, r97, r98;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z11, z12;
        android.content.ContentValues r3, r13, $r14;
        int i0, i1, i2, i3, i4, i8, i10, $i12, $i13, $i14, $i19, $i21, $i22, $i23, $i24, $i26, $i27, $i28, i31, i32, i33;
        long l5, l6, l7, l9, $l11;
        java.util.TimeZone r6, $r66, $r74;
        java.util.ArrayList r7, $r17;
        android.database.Cursor r9;
        java.lang.Throwable r10, $r92;
        java.lang.Long $r15;
        java.lang.Integer $r16, $r20, $r46, $r53, $r54, $r65;
        com.android.emailcommon.provider.Account $r18, $r40;
        android.net.Uri $r21, $r34, $r85;
        java.lang.StringBuilder $r22, $r25, $r26, $r27, $r38, $r59, $r60, $r63, $r68, $r73, $r76, r99;
        java.lang.String[] $r23, $r29, $r64, $r69, $r81, $r83, $r86, $r88;
        android.content.ContentProviderOperation$Builder $r32, $r33, $r82, $r84;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation $r35, $r71, $r72, $r79, $r87;
        byte $b15, $b16, $b17, $b20, $b25;
        java.lang.Object $r43;
        java.lang.Object[] $r47, $r90, $r91;
        java.util.GregorianCalendar $r67, r94;
        java.text.ParseException $r89, $r93, r95, r96;
        java.util.Iterator r100;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r14 = new android.content.ContentValues;

        specialinvoke $r14.<android.content.ContentValues: void <init>()>();

        r3 = $r14;

        $l11 = r0.<com.android.exchange.adapter.CalendarSyncParser: long mCalendarId>;

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("calendar_id", $r15);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_sync_id", r2);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAttendeeData", $r16);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sync_data2", "0");

        i0 = 0;

        r4 = null;

        r5 = null;

        i1 = -1;

        i2 = -1;

        i3 = 1;

        i4 = 0;

        z1 = 1;

        l5 = -1L;

        l6 = -1L;

        l7 = -1L;

        r6 = null;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r7 = $r17;

        i8 = -1;

        r8 = null;

        z2 = 0;

     label01:
        $i12 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(29);

        if $i12 == 3 goto label47;

        if z0 == 0 goto label12;

        if z1 == 0 goto label12;

        r9 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: android.database.Cursor getServerIdCursor(java.lang.String)>(r2);

        l9 = -1L;

     label02:
        if r9 == null goto label03;

        $z9 = interfaceinvoke r9.<android.database.Cursor: boolean moveToFirst()>();

        if $z9 == 0 goto label03;

        l9 = interfaceinvoke r9.<android.database.Cursor: long getLong(int)>(0);

     label03:
        if r9 == null goto label07;

        interfaceinvoke r9.<android.database.Cursor: void close()>();

        goto label07;

     label04:
        $r92 := @caughtexception;

        r10 = $r92;

     label05:
        if r9 == null goto label06;

        interfaceinvoke r9.<android.database.Cursor: void close()>();

     label06:
        throw r10;

     label07:
        $b25 = l9 cmp 0L;

        if $b25 <= 0 goto label10;

        $i28 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i28 != 273 goto label08;

        r8 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label01;

     label08:
        $i27 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i27 != 263 goto label09;

        $r81 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] mBindArgument>;

        $r80 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l9);

        $r81[0] = $r80;

        $r79 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r85 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterAttendees>;

        $r84 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r85);

        $r83 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] mBindArgument>;

        $r82 = virtualinvoke $r84.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>("event_id=? AND attendeeRelationship!=2", $r83);

        specialinvoke $r79.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation$Builder)>($r82);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: boolean add(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r79);

        l5 = l9;

        goto label11;

     label09:
        $r88 = newarray (java.lang.String)[2];

        $r88[0] = "Changing (delete/add) event ";

        $r88[1] = r2;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r88);

        i2 = virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int newDelete(long,java.lang.String)>(l9, r2);

        $r87 = <com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.AbstractSyncAdapter$Operation PLACEHOLDER_OPERATION>;

        i1 = virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int newEvent(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r87);

        goto label11;

     label10:
        $r72 = <com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.AbstractSyncAdapter$Operation PLACEHOLDER_OPERATION>;

        i1 = virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int newEvent(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r72);

        $r86 = newarray (java.lang.String)[2];

        $r86[0] = "Exchange";

        $r86[1] = "Changed item not found; treating as new.";

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r86);

     label11:
        goto label13;

     label12:
        if z1 == 0 goto label13;

        $r71 = <com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.AbstractSyncAdapter$Operation PLACEHOLDER_OPERATION>;

        i1 = virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int newEvent(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r71);

     label13:
        z1 = 0;

        $i19 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i19)
        {
            case 261: goto label21;
            case 262: goto label14;
            case 263: goto label18;
            case 267: goto label20;
            case 269: goto label42;
            case 270: goto label44;
            case 273: goto label40;
            case 274: goto label26;
            case 276: goto label29;
            case 279: goto label30;
            case 280: goto label41;
            case 281: goto label32;
            case 282: goto label35;
            case 283: goto label31;
            case 292: goto label36;
            case 293: goto label34;
            case 294: goto label33;
            case 295: goto label23;
            case 296: goto label39;
            case 300: goto label17;
            case 310: goto label43;
            case 1098: goto label19;
            default: goto label45;
        };

     label14:
        i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        if i0 == 0 goto label16;

        if r6 == null goto label16;

        $r67 = new java.util.GregorianCalendar;

        $r66 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

        specialinvoke $r67.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r66);

        r94 = $r67;

        virtualinvoke r94.<java.util.GregorianCalendar: void setTimeInMillis(long)>(l6);

        $r69 = newarray (java.lang.String)[1];

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("All-day event arrived in: ");

        $r61 = virtualinvoke r6.<java.util.TimeZone: java.lang.String getID()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        $r69[0] = $r62;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r69);

        $i24 = virtualinvoke r94.<java.util.GregorianCalendar: int get(int)>(11);

        if $i24 != 0 goto label15;

        $i26 = virtualinvoke r94.<java.util.GregorianCalendar: int get(int)>(12);

        if $i26 == 0 goto label16;

     label15:
        i0 = 0;

        $r64 = newarray (java.lang.String)[1];

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not an all-day event locally: ");

        $r74 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

        $r75 = virtualinvoke $r74.<java.util.TimeZone: java.lang.String getID()>();

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        $r64[0] = $r77;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r64);

     label16:
        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("allDay", $r65);

        goto label46;

     label17:
        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void attachmentsParser()>();

        goto label46;

     label18:
        r7 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.ArrayList attendeesParser()>();

        goto label46;

     label19:
        $r52 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String bodyParser()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r52);

        goto label46;

     label20:
        $r57 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r57);

        goto label46;

     label21:
        $r78 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        r6 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.util.TimeZone tziStringToTimeZone(java.lang.String)>($r78);

        if r6 != null goto label22;

        r6 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.util.TimeZone mLocalTimeZone>;

     label22:
        $r70 = virtualinvoke r6.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", $r70);

        goto label46;

     label23:
        $r50 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        l6 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>($r50);

     label24:
        goto label46;

     label25:
        $r93 := @caughtexception;

        r95 = $r93;

        $r91 = newarray (java.lang.Object)[1];

        $r91[0] = r95;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_START_TIME tag.", $r91);

        goto label46;

     label26:
        $r58 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        l7 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>($r58);

     label27:
        goto label46;

     label28:
        $r89 := @caughtexception;

        r96 = $r89;

        $r90 = newarray (java.lang.Object)[1];

        $r90[0] = r96;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_END_TIME tag.", $r90);

        goto label46;

     label29:
        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: void addOrganizerToAttendees(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,long,java.lang.String,java.lang.String)>(r1, l5, r4, r5);

        z2 = 1;

        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void exceptionsParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,android.content.ContentValues,java.util.ArrayList,int,int,long,long)>(r1, r3, r7, i8, i3, l6, l7);

        goto label46;

     label30:
        $r55 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventLocation", $r55);

        goto label46;

     label31:
        r97 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String recurrenceParser()>();

        if r97 == null goto label46;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r97);

        goto label46;

     label32:
        r5 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("organizer", r5);

        goto label46;

     label33:
        $r49 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r49);

        goto label46;

     label34:
        $i22 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        $i21 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: int encodeVisibility(int)>($i22);

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("accessLevel", $r54);

        goto label46;

     label35:
        r4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label46;

     label36:
        $z7 = r0.<com.android.exchange.adapter.CalendarSyncParser: boolean noContent>;

        if $z7 != 0 goto label37;

        $z8 = 1;

        goto label38;

     label37:
        $z8 = 0;

     label38:
        z11 = $z8;

        i8 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        if z11 == 0 goto label46;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newReminder(int)>(i8);

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAlarm", $r53);

        goto label46;

     label39:
        $r51 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sync_data2", $r51);

        goto label46;

     label40:
        r8 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label46;

     label41:
        $r56 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("meeting_status", $r56);

        goto label46;

     label42:
        i3 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label46;

     label43:
        i4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label46;

     label44:
        r11 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String categoriesParser()>();

        $i23 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i23 <= 0 goto label46;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("categories", r11);

        goto label46;

     label45:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

     label46:
        goto label01;

     label47:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void setTimeRelatedValues(android.content.ContentValues,long,long,int)>(r3, l6, l7, i0);

        $i13 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int availabilityFromBusyStatus(int)>(i3);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("availability", $r20);

        if z2 != 0 goto label48;

        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: void addOrganizerToAttendees(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,long,java.lang.String,java.lang.String)>(r1, l5, r4, r5);

     label48:
        $r18 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r19 = $r18.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        z12 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        i31 = virtualinvoke r7.<java.util.ArrayList: int size()>();

        if i31 <= 50 goto label52;

        $b20 = l5 cmp 0L;

        if $b20 >= 0 goto label49;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("attendeesRedacted", "1");

        if z12 == 0 goto label50;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("upsyncProhibited", "1");

        goto label50;

     label49:
        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("attendeesRedacted", "1", l5);

        if z12 == 0 goto label50;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("upsyncProhibited", "1", l5);

     label50:
        if z12 == 0 goto label51;

        r98 = "upload_disallowed@uploadisdisallowed.aaa";

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("organizer", r98);

     label51:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("hasAttendeeData", "0");

        $r47 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Maximum number of attendees exceeded; redacting", $r47);

        goto label64;

     label52:
        if i31 <= 0 goto label64;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        r99 = $r38;

        r100 = virtualinvoke r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label53:
        $z4 = interfaceinvoke r100.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label62;

        $r43 = interfaceinvoke r100.<java.util.Iterator: java.lang.Object next()>();

        r13 = (android.content.ContentValues) $r43;

        r12 = virtualinvoke r13.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("attendeeEmail");

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r40 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r41 = $r40.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $z5 = virtualinvoke $r41.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r12);

        if $z5 == 0 goto label59;

        if i4 == 0 goto label54;

        i10 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int attendeeStatusFromResponseType(int)>(i4);

        goto label56;

     label54:
        if z0 != 0 goto label55;

        i10 = 0;

        goto label56;

     label55:
        i10 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int attendeeStatusFromBusyStatus(int)>(i3);

     label56:
        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);

        virtualinvoke r13.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r46);

        if r5 == null goto label57;

        $z6 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r12);

        if $z6 != 0 goto label59;

     label57:
        $b16 = l5 cmp 0L;

        if $b16 >= 0 goto label58;

        $r48 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i10);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("userAttendeeStatus", $r48);

        goto label59;

     label58:
        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i10);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("userAttendeeStatus", $r45, l5);

     label59:
        $b17 = l5 cmp 0L;

        if $b17 >= 0 goto label60;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newAttendee(android.content.ContentValues)>(r13);

        goto label61;

     label60:
        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedAttendee(android.content.ContentValues,long)>(r13, l5);

     label61:
        goto label53;

     label62:
        $b15 = l5 cmp 0L;

        if $b15 >= 0 goto label63;

        $r42 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("attendees", $r42);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("attendeesRedacted", "0");

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("upsyncProhibited", "0");

        goto label64;

     label63:
        $r36 = virtualinvoke r99.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("attendees", $r36, l5);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("attendeesRedacted", "0", l5);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void updatedExtendedProperty(java.lang.String,java.lang.String,long)>("upsyncProhibited", "0", l5);

     label64:
        if i1 < 0 goto label69;

        if r8 == null goto label65;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newExtendedProperty(java.lang.String,java.lang.String)>("dtstamp", r8);

     label65:
        $z3 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: boolean isValidEventValues(android.content.ContentValues)>(r3);

        if $z3 == 0 goto label66;

        $r35 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r34 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterEvents>;

        $r33 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r34);

        $r32 = virtualinvoke $r33.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r3);

        specialinvoke $r35.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation$Builder)>($r32);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: java.lang.Object set(int,java.lang.Object)>(i1, $r35);

        goto label69;

     label66:
        $i14 = r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int mCount>;

        i32 = $i14 - i1;

        $r23 = newarray (java.lang.String)[2];

        $r23[0] = "Exchange";

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removing ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i32);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" inserts from mOps");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23[1] = $r24;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r23);

        i33 = 0;

     label67:
        if i33 >= i32 goto label68;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: java.lang.Object remove(int)>(i1);

        i33 = i33 + 1;

        goto label67;

     label68:
        r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int mCount> = i1;

        if i2 < 0 goto label69;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: java.lang.Object remove(int)>(i2);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: java.lang.Object remove(int)>(i2);

        $r29 = newarray (java.lang.String)[2];

        $r29[0] = "Exchange";

        $r29[1] = "Removing deletion ops from mOps";

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r29);

        r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int mCount> = i2;

     label69:
        $r21 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: void addSeparatorOperation(java.util.ArrayList,android.net.Uri)>(r1, $r21);

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.text.ParseException from label23 to label24 with label25;
        catch java.text.ParseException from label26 to label27 with label28;
    }

    private void logEventColumns(android.content.ContentValues, java.lang.String)
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        android.content.ContentValues r1;
        java.lang.String r2, $r11, $r15, $r16;
        java.lang.StringBuilder r3, $r6, $r7, $r8, $r9, $r10;
        java.util.Iterator r4;
        java.util.Map$Entry r5;
        boolean $z0, $z1;
        java.util.Set $r12;
        java.lang.String[] $r13;
        java.lang.Object $r14, $r17;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: android.content.ContentValues;

        r2 := @parameter1: java.lang.String;

        $z0 = <com.android.exchange.Eas: boolean USER_LOG>;

        if $z0 == 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event invalid, ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", skipping: Columns = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        r3 = $r6;

        $r12 = virtualinvoke r1.<android.content.ContentValues: java.util.Set valueSet()>();

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r14;

        $r17 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (java.lang.String) $r17;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        goto label1;

     label2:
        $r13 = newarray (java.lang.String)[2];

        $r13[0] = "Exchange";

        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13[1] = $r15;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r13);

     label3:
        return;
    }

    boolean isValidEventValues(android.content.ContentValues)
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        android.content.ContentValues r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r2;
        java.lang.Integer r3;
        int $i0;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: android.content.ContentValues;

        z0 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("originalInstanceTime");

        $z1 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtstart");

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void logEventColumns(android.content.ContentValues,java.lang.String)>(r1, "DTSTART missing");

        return 0;

     label1:
        if z0 != 0 goto label2;

        $z8 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("sync_data2");

        if $z8 != 0 goto label2;

        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void logEventColumns(android.content.ContentValues,java.lang.String)>(r1, "_SYNC_DATA missing");

        return 0;

     label2:
        if z0 != 0 goto label3;

        $z6 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtend");

        if $z6 != 0 goto label3;

        $z7 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("duration");

        if $z7 != 0 goto label3;

        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void logEventColumns(android.content.ContentValues,java.lang.String)>(r1, "DTEND/DURATION missing");

        return 0;

     label3:
        if z0 == 0 goto label4;

        $z5 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("dtend");

        if $z5 != 0 goto label4;

        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void logEventColumns(android.content.ContentValues,java.lang.String)>(r1, "Exception missing DTEND");

        return 0;

     label4:
        $z2 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("rrule");

        if $z2 == 0 goto label6;

        r2 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("duration");

        if r2 != null goto label5;

        return 0;

     label5:
        $z3 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("allDay");

        if $z3 == 0 goto label6;

        r3 = virtualinvoke r1.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        if r3 == null goto label6;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i0 == 0 goto label6;

        $z4 = virtualinvoke r2.<java.lang.String: boolean endsWith(java.lang.String)>("D");

        if $z4 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public java.lang.String recurrenceParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8;
        java.lang.String r1, $r2;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        i0 = -1;

        i1 = -1;

        i2 = -1;

        i3 = -1;

        i4 = -1;

        i5 = -1;

        i6 = -1;

        r1 = null;

     label01:
        $i7 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(283);

        if $i7 == 3 goto label11;

        $i8 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        tableswitch($i8)
        {
            case 284: goto label02;
            case 285: goto label09;
            case 286: goto label04;
            case 287: goto label03;
            case 288: goto label05;
            case 289: goto label06;
            case 290: goto label07;
            case 291: goto label08;
            default: goto label10;
        };

     label02:
        i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label03:
        i2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label04:
        i1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label05:
        i3 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label06:
        i4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label07:
        i5 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label08:
        i6 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label01;

     label09:
        r1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label01;

     label10:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label01;

     label11:
        $r2 = staticinvoke <com.android.exchange.utility.CalendarUtilities: java.lang.String rruleFromRecurrence(int,int,int,int,int,int,int,java.lang.String)>(i0, i1, i2, i3, i4, i5, i6, r1);

        return $r2;
    }

    private void exceptionParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations, android.content.ContentValues, java.util.ArrayList, int, int, long, long) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        android.content.ContentValues r2, r4, r10, $r11;
        java.util.ArrayList r3;
        int i0, i1, i4, $i6, $i8, $i9, $i10, $i11, $i12, $i14, i18;
        long l2, l3, $l5, $l13;
        java.lang.String r5, r6, r9, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r25, $r31, $r33, $r34, $r35, $r38, $r39, $r40, r51;
        java.text.ParseException r7, $r44, $r45, $r48, r49, r50;
        java.util.Iterator r8;
        java.lang.Long $r12, $r36;
        java.lang.Integer $r16, $r21, $r32, $r37, $r41, $r46;
        java.lang.StringBuilder $r23, $r24, $r26, $r27;
        java.lang.Object[] $r28, $r42, $r43, $r47;
        boolean $z0, $z1, $z2, z3;
        com.android.emailcommon.provider.Account $r29;
        java.lang.Object $r30;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.util.ArrayList;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r4 = $r11;

        $l5 = r0.<com.android.exchange.adapter.CalendarSyncParser: long mCalendarId>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("calendar_id", $r12);

        $r13 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("organizer");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("organizer", $r13);

        $r14 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("title");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r14);

        $r15 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("description");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r15);

        $r16 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("allDay");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("originalAllDay", $r16);

        $r17 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventLocation");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventLocation", $r17);

        $r19 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("accessLevel");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("accessLevel", $r19);

        $r18 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("eventTimezone");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", $r18);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAttendeeData", $r21);

        i4 = 0;

        $r20 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("_sync_id");

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("original_sync_id", $r20);

        r5 = "_noStartTime";

     label01:
        $i6 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(275);

        if $i6 == 3 goto label24;

        $i9 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i9)
        {
            case 262: goto label08;
            case 267: goto label10;
            case 269: goto label21;
            case 274: goto label14;
            case 277: goto label07;
            case 278: goto label03;
            case 279: goto label17;
            case 283: goto label18;
            case 293: goto label20;
            case 294: goto label19;
            case 295: goto label11;
            case 300: goto label02;
            case 1098: goto label09;
            default: goto label22;
        };

     label02:
        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void attachmentsParser()>();

        goto label23;

     label03:
        r6 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

     label04:
        $l13 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>(r6);

        $r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l13);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("originalInstanceTime", $r36);

        r5 = r6;

     label05:
        goto label23;

     label06:
        $r45 := @caughtexception;

        r7 = $r45;

        $r42 = newarray (java.lang.Object)[1];

        $r42[0] = r7;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_EXCEPTION_START_TIME tag.", $r42);

        goto label23;

     label07:
        $i14 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        if $i14 != 1 goto label23;

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r41);

        goto label23;

     label08:
        i4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("allDay", $r46);

        goto label23;

     label09:
        $r34 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String bodyParser()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r34);

        goto label23;

     label10:
        $r39 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r39);

        goto label23;

     label11:
        $r35 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        l2 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>($r35);

     label12:
        goto label23;

     label13:
        $r44 := @caughtexception;

        r49 = $r44;

        $r43 = newarray (java.lang.Object)[1];

        $r43[0] = r49;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_START_TIME tag.", $r43);

        goto label23;

     label14:
        $r40 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        l3 = staticinvoke <com.android.emailcommon.utility.Utility: long parseDateTimeToMillis(java.lang.String)>($r40);

     label15:
        goto label23;

     label16:
        $r48 := @caughtexception;

        r50 = $r48;

        $r47 = newarray (java.lang.Object)[1];

        $r47[0] = r50;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Parse error for CALENDAR_END_TIME tag.", $r47);

        goto label23;

     label17:
        $r38 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventLocation", $r38);

        goto label23;

     label18:
        r51 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String recurrenceParser()>();

        if r51 == null goto label23;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r51);

        goto label23;

     label19:
        $r33 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", $r33);

        goto label23;

     label20:
        $i11 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        $i12 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: int encodeVisibility(int)>($i11);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("accessLevel", $r37);

        goto label23;

     label21:
        i1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        goto label23;

     label22:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

     label23:
        goto label01;

     label24:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("_sync_id");

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_sync_id", $r25);

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void setTimeRelatedValues(android.content.ContentValues,long,long,int)>(r4, l2, l3, i4);

        $z0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: boolean isValidEventValues(android.content.ContentValues)>(r4);

        if $z0 != 0 goto label25;

        return;

     label25:
        i18 = r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int mCount>;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newException(android.content.ContentValues)>(r4);

        z3 = 0;

        if r3 == null goto label30;

        r8 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label26:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label30;

        $r30 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (android.content.ContentValues) $r30;

        r9 = virtualinvoke r10.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("attendeeEmail");

        $r29 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r31 = $r29.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $z2 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);

        if $z2 == 0 goto label27;

        $i10 = staticinvoke <com.android.exchange.utility.CalendarUtilities: int attendeeStatusFromBusyStatus(int)>(i1);

        $r32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r32);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newAttendee(android.content.ContentValues,int)>(r10, i18);

        goto label29;

     label27:
        $i8 = virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: int size()>();

        if $i8 >= 500 goto label28;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newAttendee(android.content.ContentValues,int)>(r10, i18);

        goto label29;

     label28:
        z3 = 1;

     label29:
        goto label26;

     label30:
        if i0 <= 0 goto label31;

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void newReminder(int,int)>(i0, i18);

     label31:
        if z3 == 0 goto label32;

        $r28 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Attendees redacted in this exception", $r28);

     label32:
        return;

        catch java.text.ParseException from label04 to label05 with label06;
        catch java.text.ParseException from label11 to label12 with label13;
        catch java.text.ParseException from label14 to label15 with label16;
    }

    private static int encodeVisibility(int)
    {
        int i0;
        byte b1;

        i0 := @parameter0: int;

        b1 = 0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        b1 = 0;

        goto label5;

     label2:
        b1 = 3;

        goto label5;

     label3:
        b1 = 2;

        goto label5;

     label4:
        b1 = 1;

     label5:
        return b1;
    }

    private void exceptionsParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations, android.content.ContentValues, java.util.ArrayList, int, int, long, long) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        android.content.ContentValues r2;
        java.util.ArrayList r3;
        int i0, i1, $i4, $i5;
        long l2, l3;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.util.ArrayList;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        l3 := @parameter6: long;

     label1:
        $i4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(276);

        if $i4 == 3 goto label4;

        $i5 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i5)
        {
            case 275: goto label2;
            default: goto label3;
        };

     label2:
        specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void exceptionParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,android.content.ContentValues,java.util.ArrayList,int,int,long,long)>(r1, r2, r3, i0, i1, l2, l3);

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label4:
        return;
    }

    private java.lang.String categoriesParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.StringBuilder r1, $r2;
        int $i0, $i1;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(270);

        if $i0 == 3 goto label4;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 271: goto label2;
            default: goto label3;
        };

     label2:
        $r4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private void attachmentsParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        int $i0, $i1;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(300);

        if $i0 == 3 goto label4;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 299: goto label2;
            default: goto label3;
        };

     label2:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipParser(int)>(299);

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label4:
        return;
    }

    private java.util.ArrayList attendeesParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        int i0, $i1, $i2;
        java.util.ArrayList r1, $r3;
        android.content.ContentValues r2;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        i0 = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

     label1:
        $i1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(263);

        if $i1 == 3 goto label5;

        $i2 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i2)
        {
            case 264: goto label2;
            default: goto label3;
        };

     label2:
        r2 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: android.content.ContentValues attendeeParser()>();

        i0 = i0 + 1;

        if i0 > 51 goto label4;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        goto label4;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

     label4:
        goto label1;

     label5:
        return r1;
    }

    private android.content.ContentValues attendeeParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        android.content.ContentValues r1, $r2;
        int i0, $i2, $i3, $i4;
        byte b1, $b5;
        java.lang.Integer $r3, $r4, $r6;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r1 = $r2;

     label01:
        $i2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(264);

        if $i2 == 3 goto label16;

        $i3 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i3)
        {
            case 265: goto label02;
            case 266: goto label03;
            case 297: goto label04;
            case 298: goto label10;
            default: goto label14;
        };

     label02:
        $r8 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", $r8);

        goto label15;

     label03:
        $r7 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeName", $r7);

        goto label15;

     label04:
        i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        if i0 != 2 goto label05;

        $b5 = 4;

        goto label09;

     label05:
        if i0 != 3 goto label06;

        $b5 = 1;

        goto label09;

     label06:
        if i0 != 4 goto label07;

        $b5 = 2;

        goto label09;

     label07:
        if i0 != 5 goto label08;

        $b5 = 3;

        goto label09;

     label08:
        $b5 = 0;

     label09:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b5);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r6);

        goto label15;

     label10:
        b1 = 0;

        $i4 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        lookupswitch($i4)
        {
            case 1: goto label11;
            case 2: goto label12;
            default: goto label13;
        };

     label11:
        b1 = 1;

        goto label13;

     label12:
        b1 = 2;

     label13:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r4);

        goto label15;

     label14:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

     label15:
        goto label01;

     label16:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r3);

        return r1;
    }

    private java.lang.String bodyParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 = null;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(1098);

        if $i0 == 3 goto label4;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 1099: goto label2;
            default: goto label3;
        };

     label2:
        r1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label4:
        if r1 != null goto label5;

        return "";

     label5:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r\n", "\n");

        return $r2;
    }

    public void addParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        java.lang.String r2;
        int $i0, $i1;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        r2 = null;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(7);

        if $i0 == 3 goto label5;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 13: goto label2;
            case 29: goto label3;
            default: goto label4;
        };

     label2:
        r2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,java.lang.String,boolean)>(r1, r2, 0);

        goto label1;

     label4:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label5:
        return;
    }

    private android.database.Cursor getServerIdCursor(java.lang.String)
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String r1, $r6;
        java.lang.String[] $r2, $r5;
        long $l0;
        android.content.ContentResolver $r3;
        android.net.Uri $r4;
        android.database.Cursor $r7;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.content.ContentResolver mContentResolver>;

        $r4 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r5 = <com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] ID_PROJECTION>;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = r1;

        $l0 = r0.<com.android.exchange.adapter.CalendarSyncParser: long mCalendarId>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2[1] = $r6;

        $r7 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r4, $r5, "_sync_id=? AND original_sync_id ISNULL AND calendar_id=?", $r2, null);

        return $r7;
    }

    private android.database.Cursor getClientIdCursor(java.lang.String)
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3, $r4;
        android.net.Uri $r5;
        android.content.ContentResolver $r6;
        android.database.Cursor $r7;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] mBindArgument>;

        $r2[0] = r1;

        $r6 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.content.ContentResolver mContentResolver>;

        $r5 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r4 = <com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] ID_PROJECTION>;

        $r3 = r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] mBindArgument>;

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r4, "sync_data2=?", $r3, null);

        return $r7;
    }

    public void deleteParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        java.lang.String r2;
        android.database.Cursor r3;
        java.lang.Throwable r4, $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.String[] $r5;
        long $l2;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

     label01:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(9);

        if $i0 == 3 goto label10;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 13: goto label02;
            default: goto label08;
        };

     label02:
        r2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        r3 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: android.database.Cursor getServerIdCursor(java.lang.String)>(r2);

     label03:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label04;

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = "Deleting ";

        $r5[1] = r2;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r5);

        $l2 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(0);

        virtualinvoke r1.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: void delete(long,java.lang.String)>($l2, r2);

     label04:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label07;

     label05:
        $r6 := @caughtexception;

        r4 = $r6;

     label06:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r4;

     label07:
        goto label09;

     label08:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

     label09:
        goto label01;

     label10:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public void changeParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations) throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations r1;
        java.lang.String r2, $r7;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 := @parameter0: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations;

        r2 = null;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(8);

        if $i0 == 3 goto label5;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 13: goto label2;
            case 29: goto label3;
            default: goto label4;
        };

     label2:
        r2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label1;

     label3:
        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changing ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r7;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r3);

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations,java.lang.String,boolean)>(r1, r2, 1);

        goto label1;

     label4:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label5:
        return;
    }

    public void commandsParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        int $i0, $i1, $i2, $i3;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations $r1, $r2, $r3;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(22);

        if $i0 == 3 goto label5;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i1 != 7 goto label2;

        $r3 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void addParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations)>($r3);

        goto label1;

     label2:
        $i2 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i2 != 9 goto label3;

        $r2 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void deleteParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations)>($r2);

        goto label1;

     label3:
        $i3 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i3 != 8 goto label4;

        $r1 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void changeParser(com.android.exchange.adapter.CalendarSyncParser$CalendarOperations)>($r1);

        goto label1;

     label4:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label5:
        return;
    }

    public void commit() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String[] $r2;
        com.android.emailcommon.provider.Mailbox $r3, $r11;
        java.lang.String $r4, $r7, $r12;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation $r5;
        com.android.emailcommon.provider.Account $r6;
        android.net.Uri $r8, $r10;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations $r9, $r16;
        android.accounts.Account $r13;
        byte[] $r14;
        android.content.ContentProviderOperation $r15;
        android.content.ContentResolver $r18;
        java.io.IOException $r19;
        android.os.RemoteException $r20;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "Calendar SyncKey saved as: ";

        $r3 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Mailbox mMailbox>;

        $r4 = $r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mSyncKey>;

        $r2[1] = $r4;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r2);

        $r9 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        $r5 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r8 = <android.provider.CalendarContract$SyncState: android.net.Uri CONTENT_URI>;

        $r6 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r7 = $r6.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r10 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.net.Uri asSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r8, $r7, "com.android.exchange");

        $r13 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.accounts.Account mAccountManagerAccount>;

        $r11 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Mailbox mMailbox>;

        $r12 = $r11.<com.android.emailcommon.provider.Mailbox: java.lang.String mSyncKey>;

        $r14 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        $r15 = staticinvoke <android.provider.SyncStateContract$Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>($r10, $r13, $r14);

        specialinvoke $r5.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation)>($r15);

        virtualinvoke $r9.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: boolean add(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r5);

     label1:
        $r18 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.content.ContentResolver mContentResolver>;

        $r16 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.content.ContentProviderResult[] safeExecute(android.content.ContentResolver,java.lang.String,java.util.ArrayList)>($r18, "com.android.calendar", $r16);

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        $r19 = new java.io.IOException;

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>("Remote exception caught; will retry");

        throw $r19;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void addResponsesParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String r1, r2, $r20, $r28;
        int i0, $i2, $i3;
        android.content.ContentValues r3, $r6;
        android.database.Cursor r4;
        long l1;
        java.lang.Throwable r5, $r26;
        boolean $z0;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation $r7;
        android.net.Uri $r8, $r9;
        com.android.exchange.adapter.CalendarSyncParser$CalendarOperations $r10;
        android.content.ContentProviderOperation$Builder $r11, $r12;
        java.lang.String[] $r13, $r24;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r27;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 = null;

        r2 = null;

        i0 = -1;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        r3 = $r6;

     label01:
        $i2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(7);

        if $i2 == 3 goto label06;

        $i3 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        tableswitch($i3)
        {
            case 12: goto label03;
            case 13: goto label02;
            case 14: goto label04;
            default: goto label05;
        };

     label02:
        r1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label01;

     label03:
        r2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label01;

     label04:
        i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int getValueInt()>();

        if i0 == 1 goto label01;

        $r24 = newarray (java.lang.String)[1];

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to add event failed with status: ");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24[0] = $r28;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r24);

        goto label01;

     label05:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label01;

     label06:
        if r2 != null goto label07;

        return;

     label07:
        if r1 != null goto label08;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FAIL:");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r1 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        r4 = specialinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: android.database.Cursor getClientIdCursor(java.lang.String)>(r2);

     label09:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label10;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_sync_id", r1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("sync_data2", r2);

        l1 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(0);

        $r10 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.CalendarSyncParser$CalendarOperations mOps>;

        $r7 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r8 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.net.Uri mAsSyncAdapterEvents>;

        $r9 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r8, l1);

        $r12 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>($r9);

        $r11 = virtualinvoke $r12.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r3);

        specialinvoke $r7.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation$Builder)>($r11);

        virtualinvoke $r10.<com.android.exchange.adapter.CalendarSyncParser$CalendarOperations: boolean add(com.android.exchange.adapter.AbstractSyncAdapter$Operation)>($r7);

        $r13 = newarray (java.lang.String)[1];

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New event ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was given serverId: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13[0] = $r20;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r13);

     label10:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label13;

     label11:
        $r26 := @caughtexception;

        r5 = $r26;

     label12:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r5;

     label13:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void changeResponsesParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.String r1, r2, $r9;
        int $i0, $i1;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        r1 = null;

        r2 = null;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(8);

        if $i0 == 3 goto label5;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        lookupswitch($i1)
        {
            case 13: goto label2;
            case 14: goto label3;
            default: goto label4;
        };

     label2:
        r1 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label1;

     label3:
        r2 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: java.lang.String getValue()>();

        goto label1;

     label4:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label5:
        if r1 == null goto label6;

        if r2 == null goto label6;

        $r3 = newarray (java.lang.String)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Changed event ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed with status: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r9;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void userLog(java.lang.String[])>($r3);

     label6:
        return;
    }

    public void responsesParser() throws java.io.IOException
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

     label1:
        $i0 = virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: int nextTag(int)>(6);

        if $i0 == 3 goto label4;

        $i1 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i1 != 7 goto label2;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void addResponsesParser()>();

        goto label1;

     label2:
        $i2 = r0.<com.android.exchange.adapter.CalendarSyncParser: int tag>;

        if $i2 != 8 goto label3;

        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void changeResponsesParser()>();

        goto label1;

     label3:
        virtualinvoke r0.<com.android.exchange.adapter.CalendarSyncParser: void skipTag()>();

        goto label1;

     label4:
        return;
    }

    private static android.content.ContentProviderResult[] execute(android.content.ContentResolver, java.lang.String, java.util.ArrayList) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.content.ContentProviderResult[] r3, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5, r7;
        java.lang.Object[] $r6;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label4;

     label1:
        r3 = virtualinvoke r0.<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>(r1, r2);

     label2:
        return r3;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r7;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Error executing operation; provider is disabled.", $r6);

     label4:
        $r4 = newarray (android.content.ContentProviderResult)[0];

        return $r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static android.content.ContentProviderOperation operationToContentProviderOperation(com.android.exchange.adapter.AbstractSyncAdapter$Operation, int)
    {
        com.android.exchange.adapter.AbstractSyncAdapter$Operation r0;
        int i0, $i1, $i2;
        android.content.ContentProviderOperation$Builder r1, $r3;
        android.content.ContentProviderOperation $r2, $r5, $r9;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @parameter0: com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: android.content.ContentProviderOperation mOp>;

        if $r2 == null goto label1;

        $r9 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: android.content.ContentProviderOperation mOp>;

        return $r9;

     label1:
        $r3 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: android.content.ContentProviderOperation$Builder mBuilder>;

        if $r3 != null goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Operation must have CPO.Builder");

        throw $r8;

     label2:
        r1 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: android.content.ContentProviderOperation$Builder mBuilder>;

        $r4 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: java.lang.String mColumnName>;

        if $r4 == null goto label3;

        $r6 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: java.lang.String mColumnName>;

        $i1 = r0.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: int mOffset>;

        $i2 = $i1 - i0;

        virtualinvoke r1.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>($r6, $i2);

     label3:
        $r5 = virtualinvoke r1.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        return $r5;
    }

    private static android.content.ContentProviderResult[] applyBatch(android.content.ContentResolver, java.lang.String, java.util.ArrayList, int) throws android.os.RemoteException, android.content.OperationApplicationException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.ArrayList r2, r3, $r6;
        int i0;
        java.util.Iterator r4;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation r5;
        boolean $z0, $z1;
        android.content.ContentProviderResult[] $r7, $r10;
        java.lang.Object $r8;
        android.content.ContentProviderOperation $r9;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        i0 := @parameter3: int;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = newarray (android.content.ContentProviderResult)[0];

        return $r10;

     label1:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r3 = $r6;

        r4 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.exchange.adapter.AbstractSyncAdapter$Operation) $r8;

        $r9 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.content.ContentProviderOperation operationToContentProviderOperation(com.android.exchange.adapter.AbstractSyncAdapter$Operation,int)>(r5, i0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        $r7 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.content.ContentProviderResult[] execute(android.content.ContentResolver,java.lang.String,java.util.ArrayList)>(r0, r1, r3);

        return $r7;
    }

    private static void applyAndCopyResults(android.content.ContentResolver, java.lang.String, java.util.ArrayList, android.content.ContentProviderResult[], int) throws android.os.RemoteException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.ArrayList r2;
        android.content.ContentProviderResult[] r3, r4;
        int i0, $i1;
        boolean $z0;
        android.content.OperationApplicationException $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 := @parameter3: android.content.ContentProviderResult[];

        i0 := @parameter4: int;

        $z0 = virtualinvoke r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r4 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.content.ContentProviderResult[] applyBatch(android.content.ContentResolver,java.lang.String,java.util.ArrayList,int)>(r0, r1, r2, i0);

        $i1 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r3, i0, $i1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.content.OperationApplicationException from label1 to label2 with label3;
    }

    protected static android.content.ContentProviderResult[] safeExecute(android.content.ContentResolver, java.lang.String, java.util.ArrayList) throws android.os.RemoteException
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.ArrayList r2, r5, $r11;
        android.content.ContentProviderResult[] r3, $r8;
        int i0, i1, $i2, i3;
        java.util.Iterator r6;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation r7, $r12;
        android.os.RemoteException $r9, r16;
        android.os.TransactionTooLargeException $r10;
        boolean $z0, $z1, $z3;
        java.lang.Object $r13, $r14;
        android.content.OperationApplicationException $r15;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.ArrayList;

        r3 = null;

     label01:
        $r8 = staticinvoke <com.android.exchange.adapter.CalendarSyncParser: android.content.ContentProviderResult[] applyBatch(android.content.ContentResolver,java.lang.String,java.util.ArrayList,int)>(r0, r1, r2, 0);

     label02:
        return $r8;

     label03:
        $r10 := @caughtexception;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r5 = $r11;

        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        r3 = newarray (android.content.ContentProviderResult)[$i2];

        i0 = 0;

        i1 = 0;

        r6 = virtualinvoke r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (com.android.exchange.adapter.AbstractSyncAdapter$Operation) $r14;

        $z3 = r7.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: boolean mSeparator>;

        if $z3 == 0 goto label05;

        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: void applyAndCopyResults(android.content.ContentResolver,java.lang.String,java.util.ArrayList,android.content.ContentProviderResult[],int)>(r0, r1, r5, r3, i1);

        virtualinvoke r5.<java.util.ArrayList: void clear()>();

        i1 = i0 + 1;

        goto label06;

     label05:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label06:
        i0 = i0 + 1;

        goto label04;

     label07:
        i3 = virtualinvoke r5.<java.util.ArrayList: int size()>();

        if i3 <= 0 goto label09;

        if i3 != 1 goto label08;

        $r13 = virtualinvoke r5.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r12 = (com.android.exchange.adapter.AbstractSyncAdapter$Operation) $r13;

        $z1 = $r12.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: boolean mSeparator>;

        if $z1 != 0 goto label09;

     label08:
        staticinvoke <com.android.exchange.adapter.CalendarSyncParser: void applyAndCopyResults(android.content.ContentResolver,java.lang.String,java.util.ArrayList,android.content.ContentProviderResult[],int)>(r0, r1, r5, r3, i1);

     label09:
        goto label12;

     label10:
        $r9 := @caughtexception;

        r16 = $r9;

        throw r16;

     label11:
        $r15 := @caughtexception;

     label12:
        return r3;

        catch android.os.TransactionTooLargeException from label01 to label02 with label03;
        catch android.os.RemoteException from label01 to label02 with label10;
        catch android.content.OperationApplicationException from label01 to label02 with label11;
    }

    protected static void addSeparatorOperation(java.util.ArrayList, android.net.Uri)
    {
        java.util.ArrayList r0;
        android.net.Uri r1, $r4;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation r2, $r3;
        android.content.ContentProviderOperation$Builder $r5;

        r0 := @parameter0: java.util.ArrayList;

        r1 := @parameter1: android.net.Uri;

        $r3 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, 9223372036854775807L);

        $r5 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r4);

        specialinvoke $r3.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation$Builder)>($r5);

        r2 = $r3;

        r2.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: boolean mSeparator> = 1;

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    protected void wipe()
    {
        com.android.exchange.adapter.CalendarSyncParser r0;
        java.lang.Object[] $r1;
        com.android.emailcommon.provider.Account $r2, $r4;
        long $l0;
        java.lang.Long $r3;
        java.lang.String $r5;
        android.content.Context $r6;

        r0 := @this: com.android.exchange.adapter.CalendarSyncParser;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $l0 = $r2.<com.android.emailcommon.provider.Account: long mId>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1[0] = $r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("Exchange", "Wiping calendar for account %d", $r1);

        $r6 = r0.<com.android.exchange.adapter.CalendarSyncParser: android.content.Context mContext>;

        $r4 = r0.<com.android.exchange.adapter.CalendarSyncParser: com.android.emailcommon.provider.Account mAccount>;

        $r5 = $r4.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        staticinvoke <com.android.exchange.eas.EasSyncCalendar: void wipeAccountFromContentProvider(android.content.Context,java.lang.String)>($r6, $r5);

        return;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $r0;

        $r0 = <com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] EXTENDED_PROPERTY_PROJECTION>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;
        com.android.exchange.adapter.AbstractSyncAdapter$Operation $r2;
        android.net.Uri $r3;
        android.content.ContentProviderOperation$Builder $r4;

        <com.android.exchange.adapter.CalendarSyncParser: int MAX_OPS_BEFORE_EXCEPTION_ATTENDEE_REDACTION> = 500;

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String BOGUS_ORGANIZER_EMAIL> = "upload_disallowed@uploadisdisallowed.aaa";

        <com.android.exchange.adapter.CalendarSyncParser: int MAX_SYNCED_ATTENDEES> = 50;

        <com.android.exchange.adapter.CalendarSyncParser: long SEPARATOR_ID> = 9223372036854775807L;

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_UPSYNC_PROHIBITED> = "upsyncProhibited";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_ATTENDEES_REDACTED> = "attendeesRedacted";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_CATEGORIES> = "categories";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_MEETING_STATUS> = "meeting_status";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_DTSTAMP> = "dtstamp";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_ATTENDEES> = "attendees";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EXTENDED_PROPERTY_USER_ATTENDEE_STATUS> = "userAttendeeStatus";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String ATTENDEE_TOKENIZER_DELIMITER> = "\\";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String CATEGORY_TOKENIZER_DELIMITER> = "\\";

        <com.android.exchange.adapter.CalendarSyncParser: int EXTENDED_PROPERTY_ID> = 0;

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EVENT_ID_AND_NAME> = "event_id=? AND name=?";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String ATTENDEES_EXCEPT_ORGANIZER> = "event_id=? AND attendeeRelationship!=2";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String CLIENT_ID_SELECTION> = "sync_data2=?";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String SERVER_ID_AND_CALENDAR_ID> = "_sync_id=? AND original_sync_id ISNULL AND calendar_id=?";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String EVENT_SAVED_TIMEZONE_COLUMN> = "sync_data1";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String TAG> = "Exchange";

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "_id";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] ID_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = "_id";

        <com.android.exchange.adapter.CalendarSyncParser: java.lang.String[] EXTENDED_PROPERTY_PROJECTION> = $r1;

        $r2 = new com.android.exchange.adapter.AbstractSyncAdapter$Operation;

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        $r4 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r3);

        specialinvoke $r2.<com.android.exchange.adapter.AbstractSyncAdapter$Operation: void <init>(android.content.ContentProviderOperation$Builder)>($r4);

        <com.android.exchange.adapter.CalendarSyncParser: com.android.exchange.adapter.AbstractSyncAdapter$Operation PLACEHOLDER_OPERATION> = $r2;

        return;
    }
}
