public class com.android.emailcommon.provider.MessageMove extends com.android.emailcommon.provider.MessageChangeLogTable
{
    public static final java.lang.String LOG_TAG;
    public static final java.lang.String TABLE_NAME;
    public static final java.lang.String PATH;
    public static android.net.Uri CONTENT_URI;
    public static final java.lang.String SRC_FOLDER_KEY;
    public static final java.lang.String DST_FOLDER_KEY;
    public static final java.lang.String SRC_FOLDER_SERVER_ID;
    public static final java.lang.String DST_FOLDER_SERVER_ID;
    private static final java.lang.String SELECTION_LAST_SYNCED_MAILBOX;
    private final long mSrcFolderKey;
    private long mDstFolderKey;
    private final java.lang.String mSrcFolderServerId;
    private java.lang.String mDstFolderServerId;

    private void <init>(long, java.lang.String, long, long, long, java.lang.String, java.lang.String)
    {
        com.android.emailcommon.provider.MessageMove r0;
        long l0, l1, l2, l3;
        java.lang.String r1, r2, r3;

        r0 := @this: com.android.emailcommon.provider.MessageMove;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        l3 := @parameter4: long;

        r2 := @parameter5: java.lang.String;

        r3 := @parameter6: java.lang.String;

        specialinvoke r0.<com.android.emailcommon.provider.MessageChangeLogTable: void <init>(long,java.lang.String,long)>(l0, r1, l1);

        r0.<com.android.emailcommon.provider.MessageMove: long mSrcFolderKey> = l2;

        r0.<com.android.emailcommon.provider.MessageMove: long mDstFolderKey> = l3;

        r0.<com.android.emailcommon.provider.MessageMove: java.lang.String mSrcFolderServerId> = r2;

        r0.<com.android.emailcommon.provider.MessageMove: java.lang.String mDstFolderServerId> = r3;

        return;
    }

    public final long getSourceFolderKey()
    {
        com.android.emailcommon.provider.MessageMove r0;
        long $l0;

        r0 := @this: com.android.emailcommon.provider.MessageMove;

        $l0 = r0.<com.android.emailcommon.provider.MessageMove: long mSrcFolderKey>;

        return $l0;
    }

    public final java.lang.String getSourceFolderId()
    {
        com.android.emailcommon.provider.MessageMove r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.MessageMove;

        $r1 = r0.<com.android.emailcommon.provider.MessageMove: java.lang.String mSrcFolderServerId>;

        return $r1;
    }

    public final java.lang.String getDestFolderId()
    {
        com.android.emailcommon.provider.MessageMove r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.provider.MessageMove;

        $r1 = r0.<com.android.emailcommon.provider.MessageMove: java.lang.String mDstFolderServerId>;

        return $r1;
    }

    public static void init()
    {
        android.net.Uri $r0, $r3;
        android.net.Uri$Builder $r1, $r2;

        $r0 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r1 = virtualinvoke $r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>("messageMove");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri build()>();

        <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI> = $r3;

        return;
    }

    public static java.util.List getMoves(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, l1, l2, l3, l4, $l8, $l10, $l11, $l13, $l14;
        android.content.ContentResolver r1;
        android.database.Cursor r2;
        android.support.v4.util.LongSparseArray r3, $r13;
        long[] r4;
        java.util.ArrayList r5, $r14;
        java.lang.String r6, r7, r9, $r17, $r18, $r20;
        com.android.emailcommon.provider.MessageMove r8, $r21, r25;
        java.lang.Throwable r10, $r23;
        android.net.Uri $r11, $r15;
        java.lang.String[] $r12;
        boolean $z0, $z1, $z3;
        int $i5, $i7, i18, i19, i20;
        java.lang.Object $r16, $r19;
        byte $b9, $b12, $b17;
        java.lang.Object[] $r22, $r24;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        $r12 = <com.android.emailcommon.provider.MessageMove$ProjectionMoveQuery: java.lang.String[] PROJECTION>;

        r2 = staticinvoke <com.android.emailcommon.provider.MessageMove: android.database.Cursor getCursor(android.content.ContentResolver,android.net.Uri,java.lang.String[],long)>(r1, $r11, $r12, l0);

        if r2 != null goto label01;

        return null;

     label01:
        $r13 = new android.support.v4.util.LongSparseArray;

        specialinvoke $r13.<android.support.v4.util.LongSparseArray: void <init>()>();

        r3 = $r13;

     label02:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label08;

        l1 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        l2 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(1);

        r6 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(2);

        l3 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(3);

        l4 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(4);

        r7 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(5);

        r9 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(6);

        $r19 = virtualinvoke r3.<android.support.v4.util.LongSparseArray: java.lang.Object get(long)>(l2);

        r8 = (com.android.emailcommon.provider.MessageMove) $r19;

        if r8 == null goto label06;

        $l13 = r8.<com.android.emailcommon.provider.MessageMove: long mLastId>;

        $b12 = $l13 cmp l1;

        if $b12 < 0 goto label03;

        $r24 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("MessageMove", "Moves were not in ascending id order", $r24);

     label03:
        $r20 = r8.<com.android.emailcommon.provider.MessageMove: java.lang.String mDstFolderServerId>;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z3 == 0 goto label04;

        $l14 = r8.<com.android.emailcommon.provider.MessageMove: long mDstFolderKey>;

        $b17 = $l14 cmp l3;

        if $b17 == 0 goto label05;

     label04:
        $r22 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("MessageMove", "existing move\'s dst not same as this move\'s src", $r22);

     label05:
        r8.<com.android.emailcommon.provider.MessageMove: long mDstFolderKey> = l4;

        r8.<com.android.emailcommon.provider.MessageMove: java.lang.String mDstFolderServerId> = r9;

        r8.<com.android.emailcommon.provider.MessageMove: long mLastId> = l1;

        goto label07;

     label06:
        $r21 = new com.android.emailcommon.provider.MessageMove;

        specialinvoke $r21.<com.android.emailcommon.provider.MessageMove: void <init>(long,java.lang.String,long,long,long,java.lang.String,java.lang.String)>(l2, r6, l1, l3, l4, r7, r9);

        virtualinvoke r3.<android.support.v4.util.LongSparseArray: void put(long,java.lang.Object)>(l2, $r21);

     label07:
        goto label02;

     label08:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label09:
        $r23 := @caughtexception;

        r10 = $r23;

     label10:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r10;

     label11:
        i18 = virtualinvoke r3.<android.support.v4.util.LongSparseArray: int size()>();

        r4 = newarray (long)[i18];

        i19 = 0;

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>(int)>(i18);

        r5 = $r14;

        i20 = 0;

     label12:
        $i5 = virtualinvoke r3.<android.support.v4.util.LongSparseArray: int size()>();

        if i20 >= $i5 goto label16;

        $r16 = virtualinvoke r3.<android.support.v4.util.LongSparseArray: java.lang.Object valueAt(int)>(i20);

        r25 = (com.android.emailcommon.provider.MessageMove) $r16;

        $r18 = r25.<com.android.emailcommon.provider.MessageMove: java.lang.String mServerId>;

        if $r18 == null goto label13;

        $r17 = r25.<com.android.emailcommon.provider.MessageMove: java.lang.String mServerId>;

        $i7 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i7 == 0 goto label13;

        $l11 = r25.<com.android.emailcommon.provider.MessageMove: long mSrcFolderKey>;

        $l10 = r25.<com.android.emailcommon.provider.MessageMove: long mDstFolderKey>;

        $b9 = $l11 cmp $l10;

        if $b9 != 0 goto label14;

     label13:
        $l8 = r25.<com.android.emailcommon.provider.MessageMove: long mMessageKey>;

        r4[i19] = $l8;

        i19 = i19 + 1;

        goto label15;

     label14:
        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r25);

     label15:
        i20 = i20 + 1;

        goto label12;

     label16:
        if i19 == 0 goto label17;

        $r15 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        staticinvoke <com.android.emailcommon.provider.MessageMove: int deleteRowsForMessages(android.content.ContentResolver,android.net.Uri,long[],int)>(r1, $r15, r4, i19);

     label17:
        $z1 = virtualinvoke r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 == 0 goto label18;

        return null;

     label18:
        return r5;

        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void upsyncSuccessful(android.content.ContentResolver, long[], int)
    {
        android.content.ContentResolver r0;
        long[] r1;
        int i0;
        android.net.Uri $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        $r2 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        staticinvoke <com.android.emailcommon.provider.MessageMove: int deleteRowsForMessages(android.content.ContentResolver,android.net.Uri,long[],int)>(r0, $r2, r1, i0);

        return;
    }

    public static void upsyncRetry(android.content.ContentResolver, long[], int)
    {
        android.content.ContentResolver r0;
        long[] r1;
        int i0;
        android.net.Uri $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        $r2 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        staticinvoke <com.android.emailcommon.provider.MessageMove: int retryMessages(android.content.ContentResolver,android.net.Uri,long[],int)>(r0, $r2, r1, i0);

        return;
    }

    public static void upsyncFail(android.content.ContentResolver, long[], int)
    {
        android.content.ContentResolver r0;
        long[] r1;
        int i0;
        android.net.Uri $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: long[];

        i0 := @parameter2: int;

        $r2 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        staticinvoke <com.android.emailcommon.provider.MessageMove: int failMessages(android.content.ContentResolver,android.net.Uri,long[],int)>(r0, $r2, r1, i0);

        return;
    }

    public static long getLastSyncedMailboxForMessage(android.content.ContentResolver, long)
    {
        android.content.ContentResolver r0;
        long l0, l1, l2;
        java.lang.String[] r1, $r5, $r8, $r12;
        android.database.Cursor r2, r15;
        java.lang.Throwable r3, r4, $r13, $r14;
        java.lang.String $r6, $r7;
        android.net.Uri $r9, $r10, $r11;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.ContentResolver;

        l0 := @parameter1: long;

        $r5 = newarray (java.lang.String)[1];

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r5[0] = $r6;

        r1 = $r5;

        $r9 = <com.android.emailcommon.provider.MessageMove: android.net.Uri CONTENT_URI>;

        $r8 = <com.android.emailcommon.provider.MessageMove$ProjectionLastSyncedMailboxQuery: java.lang.String[] PROJECTION>;

        $r7 = <com.android.emailcommon.provider.MessageMove: java.lang.String SELECTION_LAST_SYNCED_MAILBOX>;

        r2 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r8, $r7, r1, "_id ASC");

        if r2 == null goto label06;

     label01:
        $z1 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label03;

        l1 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(1);

     label02:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return l1;

     label03:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label06;

     label04:
        $r13 := @caughtexception;

        r3 = $r13;

     label05:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r3;

     label06:
        $r11 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r10 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r11, l0);

        $r12 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] MAILBOX_KEY_PROJECTION>;

        r15 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, $r12, null, null, null);

        if r15 == null goto label12;

     label07:
        $z0 = interfaceinvoke r15.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label09;

        l2 = interfaceinvoke r15.<android.database.Cursor: long getLong(int)>(0);

     label08:
        interfaceinvoke r15.<android.database.Cursor: void close()>();

        return l2;

     label09:
        interfaceinvoke r15.<android.database.Cursor: void close()>();

        goto label12;

     label10:
        $r14 := @caughtexception;

        r4 = $r14;

     label11:
        interfaceinvoke r15.<android.database.Cursor: void close()>();

        throw r4;

     label12:
        return -1L;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r2, $r4;

        <com.android.emailcommon.provider.MessageMove: java.lang.String DST_FOLDER_SERVER_ID> = "dstFolderServerId";

        <com.android.emailcommon.provider.MessageMove: java.lang.String SRC_FOLDER_SERVER_ID> = "srcFolderServerId";

        <com.android.emailcommon.provider.MessageMove: java.lang.String DST_FOLDER_KEY> = "dstFolderKey";

        <com.android.emailcommon.provider.MessageMove: java.lang.String SRC_FOLDER_KEY> = "srcFolderKey";

        <com.android.emailcommon.provider.MessageMove: java.lang.String PATH> = "messageMove";

        <com.android.emailcommon.provider.MessageMove: java.lang.String TABLE_NAME> = "MessageMove";

        <com.android.emailcommon.provider.MessageMove: java.lang.String LOG_TAG> = "MessageMove";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageKey=? and status!=");

        $r2 = <com.android.emailcommon.provider.MessageMove: java.lang.String STATUS_FAILED_STRING>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.emailcommon.provider.MessageMove: java.lang.String SELECTION_LAST_SYNCED_MAILBOX> = $r4;

        return;
    }
}
