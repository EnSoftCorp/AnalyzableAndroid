class com.android.email.provider.ContentCache$CounterMap extends java.lang.Object
{
    private java.util.HashMap mMap;

    void <init>(int)
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        int i0;
        java.util.HashMap $r1;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(i0);

        r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap> = $r1;

        return;
    }

    void <init>()
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap> = $r1;

        return;
    }

    synchronized int subtract(java.lang.Object)
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.lang.Object r1, $r4;
        java.lang.Integer r2, $r9;
        int i0, $i1, $i2, $i3;
        java.util.HashMap $r3, $r6, $r8;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i1 != 0 goto label2;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label2:
        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i2 <= 1 goto label3;

        $i3 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        i0 = $i3 - 1;

        $r8 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        goto label4;

     label3:
        i0 = 0;

        $r6 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        return i0;
    }

    synchronized void add(java.lang.Object)
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.lang.Object r1, $r4;
        java.lang.Integer r2, $r6, $r9;
        java.util.HashMap $r3, $r5, $r8;
        int $i0, $i1;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 != null goto label1;

        $r8 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        goto label2;

     label1:
        $r5 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $i1 = $i0 + 1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r6);

     label2:
        return;
    }

    synchronized boolean contains(java.lang.Object)
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.lang.Object r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    synchronized int getCount(java.lang.Object)
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.lang.Object r1, $r4;
        java.lang.Integer r2;
        java.util.HashMap $r3;
        int $i0;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.Integer) $r4;

        if r2 != null goto label1;

        $i0 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;
    }

    synchronized int size()
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.util.HashMap $r1;
        int $i0;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        $r1 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    synchronized java.util.Set entrySet()
    {
        com.android.email.provider.ContentCache$CounterMap r0;
        java.util.HashMap $r1;
        java.util.Set $r2;

        r0 := @this: com.android.email.provider.ContentCache$CounterMap;

        $r1 = r0.<com.android.email.provider.ContentCache$CounterMap: java.util.HashMap mMap>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set entrySet()>();

        return $r2;
    }
}
