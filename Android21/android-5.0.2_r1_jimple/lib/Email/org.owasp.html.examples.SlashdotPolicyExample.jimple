public class org.owasp.html.examples.SlashdotPolicyExample extends java.lang.Object
{
    public static final com.google.common.base.Function POLICY_DEFINITION;

    public void <init>()
    {
        org.owasp.html.examples.SlashdotPolicyExample r0;

        r0 := @this: org.owasp.html.examples.SlashdotPolicyExample;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;
        java.lang.String r1;
        org.owasp.html.HtmlStreamRenderer r2;
        int $i0;
        java.io.PrintStream $r3, $r8, $r13;
        java.io.InputStreamReader $r4;
        java.nio.charset.Charset $r5;
        java.io.InputStream $r6;
        org.owasp.html.examples.SlashdotPolicyExample$1 $r7;
        org.owasp.html.examples.SlashdotPolicyExample$2 $r9;
        com.google.common.base.Function $r10;
        java.lang.Object $r11;
        org.owasp.html.HtmlSanitizer$Policy $r12;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 == 0 goto label1;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Reads from STDIN and writes to STDOUT");

        staticinvoke <java.lang.System: void exit(int)>(-1);

     label1:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("[Reading from STDIN]");

        $r4 = new java.io.InputStreamReader;

        $r6 = <java.lang.System: java.io.InputStream in>;

        $r5 = <com.google.common.base.Charsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r6, $r5);

        r1 = staticinvoke <com.google.common.io.CharStreams: java.lang.String toString(java.lang.Readable)>($r4);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new org.owasp.html.examples.SlashdotPolicyExample$1;

        specialinvoke $r7.<org.owasp.html.examples.SlashdotPolicyExample$1: void <init>()>();

        $r9 = new org.owasp.html.examples.SlashdotPolicyExample$2;

        specialinvoke $r9.<org.owasp.html.examples.SlashdotPolicyExample$2: void <init>()>();

        r2 = staticinvoke <org.owasp.html.HtmlStreamRenderer: org.owasp.html.HtmlStreamRenderer create(java.lang.Appendable,org.owasp.html.Handler,org.owasp.html.Handler)>($r8, $r7, $r9);

        $r10 = <org.owasp.html.examples.SlashdotPolicyExample: com.google.common.base.Function POLICY_DEFINITION>;

        $r11 = interfaceinvoke $r10.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r2);

        $r12 = (org.owasp.html.HtmlSanitizer$Policy) $r11;

        staticinvoke <org.owasp.html.HtmlSanitizer: void sanitize(java.lang.String,org.owasp.html.HtmlSanitizer$Policy)>(r1, $r12);

        return;
    }

    static void <clinit>()
    {
        org.owasp.html.HtmlPolicyBuilder $r0, $r1, $r4, $r8, $r9, $r14, $r21, $r23, $r25;
        java.lang.String[] $r2, $r5, $r7, $r10, $r15, $r16, $r18, $r20, $r22;
        org.owasp.html.HtmlPolicyBuilder$AttributeBuilder $r3, $r6, $r11, $r13, $r17, $r19;
        java.util.regex.Pattern $r12;
        org.owasp.html.PolicyFactory $r24;

        $r0 = new org.owasp.html.HtmlPolicyBuilder;

        specialinvoke $r0.<org.owasp.html.HtmlPolicyBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowStandardUrlProtocols()>();

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "title";

        $r3 = virtualinvoke $r1.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])>($r2);

        $r4 = virtualinvoke $r3.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder globally()>();

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "href";

        $r6 = virtualinvoke $r4.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])>($r5);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = "a";

        $r8 = virtualinvoke $r6.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder onElements(java.lang.String[])>($r7);

        $r9 = virtualinvoke $r8.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder requireRelNofollowOnLinks()>();

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = "lang";

        $r11 = virtualinvoke $r9.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])>($r10);

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z]{2,20}");

        $r13 = virtualinvoke $r11.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder matching(java.util.regex.Pattern)>($r12);

        $r14 = virtualinvoke $r13.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder globally()>();

        $r15 = newarray (java.lang.String)[1];

        $r15[0] = "align";

        $r17 = virtualinvoke $r14.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])>($r15);

        $r16 = newarray (java.lang.String)[5];

        $r16[0] = "center";

        $r16[1] = "left";

        $r16[2] = "right";

        $r16[3] = "justify";

        $r16[4] = "char";

        $r19 = virtualinvoke $r17.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder matching(boolean,java.lang.String[])>(1, $r16);

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = "p";

        $r21 = virtualinvoke $r19.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder onElements(java.lang.String[])>($r18);

        $r20 = newarray (java.lang.String)[13];

        $r20[0] = "a";

        $r20[1] = "p";

        $r20[2] = "div";

        $r20[3] = "i";

        $r20[4] = "b";

        $r20[5] = "em";

        $r20[6] = "blockquote";

        $r20[7] = "tt";

        $r20[8] = "strong";

        $r20[9] = "br";

        $r20[10] = "ul";

        $r20[11] = "ol";

        $r20[12] = "li";

        $r23 = virtualinvoke $r21.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(java.lang.String[])>($r20);

        $r22 = newarray (java.lang.String)[2];

        $r22[0] = "quote";

        $r22[1] = "ecode";

        $r25 = virtualinvoke $r23.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(java.lang.String[])>($r22);

        $r24 = virtualinvoke $r25.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.PolicyFactory toFactory()>();

        <org.owasp.html.examples.SlashdotPolicyExample: com.google.common.base.Function POLICY_DEFINITION> = $r24;

        return;
    }
}
