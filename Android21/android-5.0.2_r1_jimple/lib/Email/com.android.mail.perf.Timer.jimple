public class com.android.mail.perf.Timer extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    public static final boolean ENABLE_TIMER;
    private static final boolean LOG_PERFORMANCE_STATS;
    private final java.util.Map mPoints;
    private final java.util.Map mCounts;
    private final boolean mEnabled;
    private static java.util.Map sPerformanceCollector;

    public void <init>()
    {
        com.android.mail.perf.Timer r0;

        r0 := @this: com.android.mail.perf.Timer;

        specialinvoke r0.<com.android.mail.perf.Timer: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        com.android.mail.perf.Timer r0;
        boolean z0;
        java.util.HashMap $r1, $r2;

        r0 := @this: com.android.mail.perf.Timer;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.android.mail.perf.Timer: java.util.Map mPoints> = $r1;

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.android.mail.perf.Timer: java.util.Map mCounts> = $r2;

        r0.<com.android.mail.perf.Timer: boolean mEnabled> = z0;

        return;
    }

    public boolean isEnabled()
    {
        com.android.mail.perf.Timer r0;

        r0 := @this: com.android.mail.perf.Timer;

        return 0;
    }

    public void start(java.lang.String)
    {
        com.android.mail.perf.Timer r0;
        java.lang.String r1;

        r0 := @this: com.android.mail.perf.Timer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void pause(java.lang.String)
    {
        com.android.mail.perf.Timer r0;
        java.lang.String r1;

        r0 := @this: com.android.mail.perf.Timer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void count(java.lang.String)
    {
        com.android.mail.perf.Timer r0;
        java.lang.String r1;

        r0 := @this: com.android.mail.perf.Timer;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void clear()
    {
        com.android.mail.perf.Timer r0;

        r0 := @this: com.android.mail.perf.Timer;

        return;
    }

    public void dumpResults()
    {
        com.android.mail.perf.Timer r0;

        r0 := @this: com.android.mail.perf.Timer;

        return;
    }

    public static void startTiming(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    public static void stopTiming(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    public static void stopTiming(java.lang.String, int)
    {
        java.lang.String r0;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        return;
    }

    private static void dumpTimings(java.lang.String, int, long, long)
    {
        java.lang.String r0, $r2, $r6;
        int i0;
        long l1, l2, $l3, $l5, $l6, $l7, $l8, $l9;
        java.lang.Object[] $r1, $r5;
        java.lang.Long $r3, $r4, $r7, $r8;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        $r2 = <com.android.mail.perf.Timer: java.lang.String LOG_TAG>;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r0;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r1[1] = $r3;

        $l3 = l1 / 1000000L;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r1[2] = $r4;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r2, "Perf %s wall: %d cpu: %d", $r1);

        if i0 <= 1 goto label1;

        $r6 = <com.android.mail.perf.Timer: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r0;

        $l6 = (long) i0;

        $l5 = l2 / $l6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r5[1] = $r7;

        $l7 = l1 / 1000000L;

        $l8 = (long) i0;

        $l9 = $l7 / $l8;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);

        $r5[2] = $r8;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "Perf/operation %s wall: %d cpu: %d", $r5);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        <com.android.mail.perf.Timer: boolean LOG_PERFORMANCE_STATS> = 1;

        <com.android.mail.perf.Timer: boolean ENABLE_TIMER> = 0;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.perf.Timer: java.lang.String LOG_TAG> = $r0;

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.mail.perf.Timer: java.util.Map sPerformanceCollector> = $r1;

        return;
    }
}
