public class com.android.ex.photo.PhotoViewController extends java.lang.Object implements android.support.v4.app.LoaderManager$LoaderCallbacks, android.support.v4.view.ViewPager$OnPageChangeListener, com.android.ex.photo.PhotoViewPager$OnInterceptTouchListener, com.android.ex.photo.ActionBarInterface$OnMenuVisibilityListener, com.android.ex.photo.PhotoViewCallbacks
{
    private static final java.lang.String TAG;
    private static final java.lang.String STATE_CURRENT_URI_KEY;
    private static final java.lang.String STATE_CURRENT_INDEX_KEY;
    private static final java.lang.String STATE_FULLSCREEN_KEY;
    private static final java.lang.String STATE_ACTIONBARTITLE_KEY;
    private static final java.lang.String STATE_ACTIONBARSUBTITLE_KEY;
    private static final java.lang.String STATE_ENTERANIMATIONFINISHED_KEY;
    protected static final java.lang.String ARG_IMAGE_URI;
    public static final int LOADER_PHOTO_LIST;
    public static final int ALBUM_COUNT_UNKNOWN;
    public static final int ENTER_ANIMATION_DURATION_MS;
    public static final int EXIT_ANIMATION_DURATION_MS;
    public static final java.lang.String KEY_MESSAGE;
    public static int sMemoryClass;
    public static int sMaxPhotoSize;
    private final com.android.ex.photo.PhotoViewController$ActivityInterface mActivity;
    private int mLastFlags;
    private final android.view.View$OnSystemUiVisibilityChangeListener mSystemUiVisibilityChangeListener;
    private java.lang.String mPhotosUri;
    private int mCurrentPhotoIndex;
    private java.lang.String mCurrentPhotoUri;
    private java.lang.String[] mProjection;
    protected int mAlbumCount;
    protected boolean mIsEmpty;
    protected android.view.View mRootView;
    protected android.view.View mBackground;
    protected com.android.ex.photo.PhotoViewPager mViewPager;
    protected android.widget.ImageView mTemporaryImage;
    protected com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter;
    protected boolean mFullScreen;
    private final java.util.Map mScreenListeners;
    private final java.util.Set mCursorListeners;
    private boolean mKickLoader;
    private boolean mIsDestroyedCompat;
    protected boolean mIsPaused;
    protected float mMaxInitialScale;
    protected java.lang.String mActionBarTitle;
    protected java.lang.String mActionBarSubtitle;
    private boolean mEnterAnimationFinished;
    protected boolean mScaleAnimationEnabled;
    protected int mAnimationStartX;
    protected int mAnimationStartY;
    protected int mAnimationStartWidth;
    protected int mAnimationStartHeight;
    protected boolean mActionBarHiddenInitially;
    protected boolean mDisplayThumbsFullScreen;
    protected com.android.ex.photo.PhotoViewController$BitmapCallback mBitmapCallback;
    protected final android.os.Handler mHandler;
    private long mEnterFullScreenDelayTime;
    private final java.lang.Runnable mEnterFullScreenRunnable;

    public void <init>(com.android.ex.photo.PhotoViewController$ActivityInterface)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface r1;
        java.util.HashMap $r2;
        java.util.HashSet $r3;
        android.os.Handler $r4;
        com.android.ex.photo.PhotoViewController$2 $r5;
        int $i0;
        com.android.ex.photo.PhotoViewController$1 $r6;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.PhotoViewController$ActivityInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.ex.photo.PhotoViewController: int mAlbumCount> = -1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.android.ex.photo.PhotoViewController: java.util.Set mCursorListeners> = $r3;

        r0.<com.android.ex.photo.PhotoViewController: boolean mIsPaused> = 1;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.android.ex.photo.PhotoViewController: android.os.Handler mHandler> = $r4;

        $r5 = new com.android.ex.photo.PhotoViewController$2;

        specialinvoke $r5.<com.android.ex.photo.PhotoViewController$2: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r0.<com.android.ex.photo.PhotoViewController: java.lang.Runnable mEnterFullScreenRunnable> = $r5;

        r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity> = r1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        r0.<com.android.ex.photo.PhotoViewController: android.view.View$OnSystemUiVisibilityChangeListener mSystemUiVisibilityChangeListener> = null;

        goto label2;

     label1:
        $r6 = new com.android.ex.photo.PhotoViewController$1;

        specialinvoke $r6.<com.android.ex.photo.PhotoViewController$1: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r0.<com.android.ex.photo.PhotoViewController: android.view.View$OnSystemUiVisibilityChangeListener mSystemUiVisibilityChangeListener> = $r6;

     label2:
        return;
    }

    public com.android.ex.photo.adapters.PhotoPagerAdapter createPhotoPagerAdapter(android.content.Context, android.support.v4.app.FragmentManager, android.database.Cursor, float)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.content.Context r1;
        android.support.v4.app.FragmentManager r2;
        android.database.Cursor r3;
        float f0;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r4;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.app.FragmentManager;

        r3 := @parameter2: android.database.Cursor;

        f0 := @parameter3: float;

        $r4 = new com.android.ex.photo.adapters.PhotoPagerAdapter;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mDisplayThumbsFullScreen>;

        specialinvoke $r4.<com.android.ex.photo.adapters.PhotoPagerAdapter: void <init>(android.content.Context,android.support.v4.app.FragmentManager,android.database.Cursor,float,boolean)>(r1, r2, r3, f0, $z0);

        return $r4;
    }

    public com.android.ex.photo.PhotoViewController$ActivityInterface getActivity()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        return $r1;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.os.Bundle r1, r5, $r39;
        android.app.ActivityManager r2;
        android.content.Intent r3;
        android.content.res.Resources r4;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r6, $r9, $r10, $r11, $r12, $r15, $r28, $r33, $r41;
        android.content.Context $r7, $r13;
        java.lang.Object $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        float $f0, $f1;
        android.support.v4.app.FragmentManager $r14;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r16, $r21;
        android.view.View $r17, $r18, $r20, $r23, $r30, $r37;
        android.widget.ImageView $r19;
        com.android.ex.photo.PhotoViewPager $r22, $r24, $r25, $r26, $r27, $r34;
        com.android.ex.photo.PhotoViewController$BitmapCallback $r29, $r35;
        android.support.v4.app.LoaderManager $r32, $r42;
        long $l10;
        android.view.View$OnSystemUiVisibilityChangeListener $r38;
        java.lang.String $r40, $r43, $r44, $r45, $r46, $r47;
        java.lang.String[] $r48;
        com.android.ex.photo.ActionBarInterface r49;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void initMaxPhotoSize()>();

        $r6 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r7 = interfaceinvoke $r6.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Context getApplicationContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r2 = (android.app.ActivityManager) $r8;

        $i0 = virtualinvoke r2.<android.app.ActivityManager: int getMemoryClass()>();

        <com.android.ex.photo.PhotoViewController: int sMemoryClass> = $i0;

        $r9 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        r3 = interfaceinvoke $r9.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Intent getIntent()>();

        $z0 = virtualinvoke r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("photos_uri");

        if $z0 == 0 goto label01;

        $r47 = virtualinvoke r3.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("photos_uri");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mPhotosUri> = $r47;

     label01:
        $z1 = virtualinvoke r3.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("scale_up_animation", 0);

        if $z1 == 0 goto label02;

        r0.<com.android.ex.photo.PhotoViewController: boolean mScaleAnimationEnabled> = 1;

        $i15 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("start_x_extra", 0);

        r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartX> = $i15;

        $i17 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("start_y_extra", 0);

        r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartY> = $i17;

        $i16 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("start_width_extra", 0);

        r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartWidth> = $i16;

        $i14 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("start_height_extra", 0);

        r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartHeight> = $i14;

     label02:
        $z2 = virtualinvoke r3.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("action_bar_hidden_initially", 0);

        r0.<com.android.ex.photo.PhotoViewController: boolean mActionBarHiddenInitially> = $z2;

        $z3 = virtualinvoke r3.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("display_thumbs_fullscreen", 0);

        r0.<com.android.ex.photo.PhotoViewController: boolean mDisplayThumbsFullScreen> = $z3;

        $z4 = virtualinvoke r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("projection");

        if $z4 == 0 goto label03;

        $r48 = virtualinvoke r3.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("projection");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String[] mProjection> = $r48;

        goto label04;

     label03:
        r0.<com.android.ex.photo.PhotoViewController: java.lang.String[] mProjection> = null;

     label04:
        $f0 = virtualinvoke r3.<android.content.Intent: float getFloatExtra(java.lang.String,float)>("max_scale", 1.0F);

        r0.<com.android.ex.photo.PhotoViewController: float mMaxInitialScale> = $f0;

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri> = null;

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = -1;

        $z6 = virtualinvoke r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("photo_index");

        if $z6 == 0 goto label05;

        $i12 = virtualinvoke r3.<android.content.Intent: int getIntExtra(java.lang.String,int)>("photo_index", -1);

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = $i12;

     label05:
        $z5 = virtualinvoke r3.<android.content.Intent: boolean hasExtra(java.lang.String)>("initial_photo_uri");

        if $z5 == 0 goto label06;

        $r44 = virtualinvoke r3.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("initial_photo_uri");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri> = $r44;

     label06:
        r0.<com.android.ex.photo.PhotoViewController: boolean mIsEmpty> = 1;

        if r1 == null goto label07;

        $r45 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.android.ex.PhotoViewFragment.CURRENT_URI");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri> = $r45;

        $i13 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("com.android.ex.PhotoViewFragment.CURRENT_INDEX");

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = $i13;

        $z13 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("com.android.ex.PhotoViewFragment.FULLSCREEN", 0);

        r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen> = $z13;

        $r46 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.android.ex.PhotoViewFragment.ACTIONBARTITLE");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarTitle> = $r46;

        $r43 = virtualinvoke r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>("com.android.ex.PhotoViewFragment.ACTIONBARSUBTITLE");

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarSubtitle> = $r43;

        $z12 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("com.android.ex.PhotoViewFragment.SCALEANIMATIONFINISHED", 0);

        r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished> = $z12;

        goto label08;

     label07:
        $z7 = r0.<com.android.ex.photo.PhotoViewController: boolean mActionBarHiddenInitially>;

        r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen> = $z7;

     label08:
        $r11 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $i1 = <com.android.ex.photo.R$layout: int photo_activity_view>;

        interfaceinvoke $r11.<com.android.ex.photo.PhotoViewController$ActivityInterface: void setContentView(int)>($i1);

        $r10 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r13 = interfaceinvoke $r10.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Context getContext()>();

        $r12 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r14 = interfaceinvoke $r12.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.FragmentManager getSupportFragmentManager()>();

        $f1 = r0.<com.android.ex.photo.PhotoViewController: float mMaxInitialScale>;

        $r16 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter createPhotoPagerAdapter(android.content.Context,android.support.v4.app.FragmentManager,android.database.Cursor,float)>($r13, $r14, null, $f1);

        r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter> = $r16;

        $r15 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        r4 = interfaceinvoke $r15.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.res.Resources getResources()>();

        $i2 = <com.android.ex.photo.R$id: int photo_activity_root_view>;

        $r18 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View findViewById(int)>($i2);

        r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView> = $r18;

        $i4 = <android.os.Build$VERSION: int SDK_INT>;

        if $i4 < 11 goto label09;

        $r37 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        $r38 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View$OnSystemUiVisibilityChangeListener getSystemUiVisibilityChangeListener()>();

        virtualinvoke $r37.<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)>($r38);

     label09:
        $i3 = <com.android.ex.photo.R$id: int photo_activity_background>;

        $r17 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View findViewById(int)>($i3);

        r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground> = $r17;

        $i6 = <com.android.ex.photo.R$id: int photo_activity_temporary_image>;

        $r20 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View findViewById(int)>($i6);

        $r19 = (android.widget.ImageView) $r20;

        r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage> = $r19;

        $i5 = <com.android.ex.photo.R$id: int photo_view_pager>;

        $r23 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View findViewById(int)>($i5);

        $r24 = (com.android.ex.photo.PhotoViewPager) $r23;

        r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager> = $r24;

        $r22 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $r21 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r22.<com.android.ex.photo.PhotoViewPager: void setAdapter(android.support.v4.view.PagerAdapter)>($r21);

        $r26 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r26.<com.android.ex.photo.PhotoViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)>(r0);

        $r27 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r27.<com.android.ex.photo.PhotoViewPager: void setOnInterceptTouchListener(com.android.ex.photo.PhotoViewPager$OnInterceptTouchListener)>(r0);

        $r25 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $i7 = <com.android.ex.photo.R$dimen: int photo_page_margin>;

        $i8 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelSize(int)>($i7);

        virtualinvoke $r25.<com.android.ex.photo.PhotoViewPager: void setPageMargin(int)>($i8);

        $r29 = new com.android.ex.photo.PhotoViewController$BitmapCallback;

        specialinvoke $r29.<com.android.ex.photo.PhotoViewController$BitmapCallback: void <init>(com.android.ex.photo.PhotoViewController,com.android.ex.photo.PhotoViewController$1)>(r0, null);

        r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$BitmapCallback mBitmapCallback> = $r29;

        $z8 = r0.<com.android.ex.photo.PhotoViewController: boolean mScaleAnimationEnabled>;

        if $z8 == 0 goto label10;

        $z9 = r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished>;

        if $z9 == 0 goto label11;

     label10:
        $r28 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r32 = interfaceinvoke $r28.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        virtualinvoke $r32.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(100, null, r0);

        $r30 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r30.<android.view.View: void setVisibility(int)>(0);

        goto label12;

     label11:
        $r34 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r34.<com.android.ex.photo.PhotoViewPager: void setVisibility(int)>(8);

        $r39 = new android.os.Bundle;

        specialinvoke $r39.<android.os.Bundle: void <init>()>();

        r5 = $r39;

        $r40 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        virtualinvoke r5.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("image_uri", $r40);

        $r41 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r42 = interfaceinvoke $r41.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        $r35 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$BitmapCallback mBitmapCallback>;

        virtualinvoke $r42.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(2, r5, $r35);

     label12:
        $i9 = <com.android.ex.photo.R$integer: int reenter_fullscreen_delay_time_in_millis>;

        $i11 = virtualinvoke r4.<android.content.res.Resources: int getInteger(int)>($i9);

        $l10 = (long) $i11;

        r0.<com.android.ex.photo.PhotoViewController: long mEnterFullScreenDelayTime> = $l10;

        $r33 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        r49 = interfaceinvoke $r33.<com.android.ex.photo.PhotoViewController$ActivityInterface: com.android.ex.photo.ActionBarInterface getActionBarInterface()>();

        if r49 == null goto label13;

        interfaceinvoke r49.<com.android.ex.photo.ActionBarInterface: void setDisplayHomeAsUpEnabled(boolean)>(1);

        interfaceinvoke r49.<com.android.ex.photo.ActionBarInterface: void addOnMenuVisibilityListener(com.android.ex.photo.ActionBarInterface$OnMenuVisibilityListener)>(r0);

        interfaceinvoke r49.<com.android.ex.photo.ActionBarInterface: void setDisplayOptionsShowTitle()>();

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setActionBarTitles(com.android.ex.photo.ActionBarInterface)>(r49);

     label13:
        $z11 = r0.<com.android.ex.photo.PhotoViewController: boolean mScaleAnimationEnabled>;

        if $z11 != 0 goto label14;

        $z10 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setLightsOutMode(boolean)>($z10);

        goto label15;

     label14:
        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setLightsOutMode(boolean)>(0);

     label15:
        return;
    }

    private void initMaxPhotoSize()
    {
        com.android.ex.photo.PhotoViewController r0;
        android.util.DisplayMetrics r1, $r4;
        android.view.WindowManager r2;
        com.android.ex.photo.util.ImageUtils$ImageSize r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r5;
        android.content.Context $r6;
        java.lang.Object $r7;
        android.view.Display $r8;
        int[] $r9;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $i0 = <com.android.ex.photo.PhotoViewController: int sMaxPhotoSize>;

        if $i0 != 0 goto label3;

        $r4 = new android.util.DisplayMetrics;

        specialinvoke $r4.<android.util.DisplayMetrics: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r6 = interfaceinvoke $r5.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r2 = (android.view.WindowManager) $r7;

        r3 = <com.android.ex.photo.util.ImageUtils: com.android.ex.photo.util.ImageUtils$ImageSize sUseImageSize>;

        $r8 = interfaceinvoke r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r8.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $r9 = <com.android.ex.photo.PhotoViewController$8: int[] $SwitchMap$com$android$ex$photo$util$ImageUtils$ImageSize>;

        $i1 = virtualinvoke r3.<com.android.ex.photo.util.ImageUtils$ImageSize: int ordinal()>();

        $i2 = $r9[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label2;
            default: goto label2;
        };

     label1:
        $i4 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $i3 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i5 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        $i7 = $i5 * 800;

        $i6 = $i7 / 1000;

        <com.android.ex.photo.PhotoViewController: int sMaxPhotoSize> = $i6;

        goto label3;

     label2:
        $i8 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $i9 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i9);

        <com.android.ex.photo.PhotoViewController: int sMaxPhotoSize> = $i10;

     label3:
        return;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.view.Menu r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.view.Menu;

        return 1;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.view.Menu r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.view.Menu;

        return 1;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1;
        android.content.Intent r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        return;
    }

    protected android.view.View findViewById(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;
        android.view.View $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r2 = interfaceinvoke $r1.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.view.View findViewById(int)>(i0);

        return $r2;
    }

    public void onStart()
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        return;
    }

    public void onResume()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0, $z1;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;
        android.support.v4.app.LoaderManager $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setFullScreen(boolean,boolean)>($z0, 0);

        r0.<com.android.ex.photo.PhotoViewController: boolean mIsPaused> = 0;

        $z1 = r0.<com.android.ex.photo.PhotoViewController: boolean mKickLoader>;

        if $z1 == 0 goto label1;

        r0.<com.android.ex.photo.PhotoViewController: boolean mKickLoader> = 0;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r2 = interfaceinvoke $r1.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        virtualinvoke $r2.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(100, null, r0);

     label1:
        return;
    }

    public void onPause()
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r0.<com.android.ex.photo.PhotoViewController: boolean mIsPaused> = 1;

        return;
    }

    public void onStop()
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        return;
    }

    public void onDestroy()
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r0.<com.android.ex.photo.PhotoViewController: boolean mIsDestroyedCompat> = 1;

        return;
    }

    private boolean isDestroyedCompat()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mIsDestroyedCompat>;

        return $z0;
    }

    public boolean onBackPressed()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        if $z0 == 0 goto label1;

        $z2 = r0.<com.android.ex.photo.PhotoViewController: boolean mActionBarHiddenInitially>;

        if $z2 != 0 goto label1;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void toggleFullScreen()>();

        goto label3;

     label1:
        $z1 = r0.<com.android.ex.photo.PhotoViewController: boolean mScaleAnimationEnabled>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void runExitAnimation()>();

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.os.Bundle r1;
        java.lang.String $r2, $r3, $r4;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.android.ex.PhotoViewFragment.CURRENT_URI", $r2);

        $i0 = r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("com.android.ex.PhotoViewFragment.CURRENT_INDEX", $i0);

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("com.android.ex.PhotoViewFragment.FULLSCREEN", $z0);

        $r3 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarTitle>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.android.ex.PhotoViewFragment.ACTIONBARTITLE", $r3);

        $r4 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarSubtitle>;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("com.android.ex.PhotoViewFragment.ACTIONBARSUBTITLE", $r4);

        $z1 = r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("com.android.ex.PhotoViewFragment.SCALEANIMATIONFINISHED", $z1);

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.view.MenuItem r1;
        int $i0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label1;
            default: goto label2;
        };

     label1:
        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        interfaceinvoke $r2.<com.android.ex.photo.PhotoViewController$ActivityInterface: void finish()>();

        return 1;

     label2:
        return 0;
    }

    public void addScreenListener(int, com.android.ex.photo.PhotoViewCallbacks$OnScreenListener)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        com.android.ex.photo.PhotoViewCallbacks$OnScreenListener r1;
        java.util.Map $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.ex.photo.PhotoViewCallbacks$OnScreenListener;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);

        return;
    }

    public void removeScreenListener(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

        return;
    }

    public synchronized void addCursorListener(com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener r1;
        java.util.Set $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: java.util.Set mCursorListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public synchronized void removeCursorListener(com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener r1;
        java.util.Set $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: java.util.Set mCursorListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public boolean isFragmentFullScreen(android.support.v4.app.Fragment)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.support.v4.app.Fragment r1;
        com.android.ex.photo.PhotoViewPager $r2, $r5;
        boolean $z0, $z1, $z2;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r3, $r4, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        $i0 = virtualinvoke $r4.<com.android.ex.photo.adapters.PhotoPagerAdapter: int getCount()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        return $z0;

     label2:
        $z1 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $i1 = virtualinvoke $r5.<com.android.ex.photo.PhotoViewPager: int getCurrentItem()>();

        $r6 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        $i2 = virtualinvoke $r6.<com.android.ex.photo.adapters.PhotoPagerAdapter: int getItemPosition(java.lang.Object)>(r1);

        if $i1 == $i2 goto label4;

     label3:
        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public void toggleFullScreen()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0, $z1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setFullScreen(boolean,boolean)>($z1, 1);

        return;
    }

    public void onPhotoRemoved(long)
    {
        com.android.ex.photo.PhotoViewController r0;
        long l0;
        android.database.Cursor r1;
        int i1;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r2;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r3, $r6;
        android.support.v4.app.LoaderManager $r4;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        l0 := @parameter0: long;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        r1 = virtualinvoke $r2.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor getCursor()>();

        if r1 != null goto label1;

        return;

     label1:
        i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if i1 > 1 goto label2;

        $r6 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        interfaceinvoke $r6.<com.android.ex.photo.PhotoViewController$ActivityInterface: void finish()>();

        return;

     label2:
        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r4 = interfaceinvoke $r3.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        virtualinvoke $r4.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(100, null, r0);

        return;
    }

    public android.support.v4.content.Loader onCreateLoader(int, android.os.Bundle)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        android.os.Bundle r1;
        com.android.ex.photo.loaders.PhotoPagerLoader $r2;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        android.net.Uri $r6;
        java.lang.String[] $r7;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        if i0 != 100 goto label1;

        $r2 = new com.android.ex.photo.loaders.PhotoPagerLoader;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r4 = interfaceinvoke $r3.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Context getContext()>();

        $r5 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mPhotosUri>;

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        $r7 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String[] mProjection>;

        specialinvoke $r2.<com.android.ex.photo.loaders.PhotoPagerLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[])>($r4, $r6, $r7);

        return $r2;

     label1:
        return null;
    }

    public android.support.v4.content.Loader onCreateBitmapLoader(int, android.os.Bundle, java.lang.String)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        android.os.Bundle r1;
        java.lang.String r2;
        com.android.ex.photo.loaders.PhotoBitmapLoader $r3;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r4;
        android.content.Context $r5;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: java.lang.String;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = new com.android.ex.photo.loaders.PhotoBitmapLoader;

        $r4 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r5 = interfaceinvoke $r4.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Context getContext()>();

        specialinvoke $r3.<com.android.ex.photo.loaders.PhotoBitmapLoader: void <init>(android.content.Context,java.lang.String)>($r5, r2);

        return $r3;

     label2:
        return null;
    }

    public void onLoadFinished(android.support.v4.content.Loader, android.database.Cursor)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.support.v4.content.Loader r1;
        android.database.Cursor r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.net.Uri r3, r5, $r18, $r22, $r26, $r30;
        java.lang.String r4, $r8, $r19, $r31;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r6, $r10, $r15, $r17;
        boolean $z0, $z2, $z3, z4;
        android.support.v4.view.PagerAdapter $r11;
        com.android.ex.photo.PhotoViewPager $r12, $r13, $r14;
        android.net.Uri$Builder $r20, $r21, $r23, $r24, $r25, $r27, $r28, $r29;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.support.v4.content.Loader;

        r2 := @parameter1: android.database.Cursor;

        i0 = virtualinvoke r1.<android.support.v4.content.Loader: int getId()>();

        if i0 != 100 goto label14;

        if r2 == null goto label01;

        $i3 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        if $i3 != 0 goto label02;

     label01:
        r0.<com.android.ex.photo.PhotoViewController: boolean mIsEmpty> = 1;

        $r6 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r6.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(null);

        goto label13;

     label02:
        $i4 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        r0.<com.android.ex.photo.PhotoViewController: int mAlbumCount> = $i4;

        $r8 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        if $r8 == null goto label09;

        i1 = 0;

        i2 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("uri");

        $i8 = <android.os.Build$VERSION: int SDK_INT>;

        if $i8 < 11 goto label03;

        $r31 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        $r30 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r31);

        $r29 = virtualinvoke $r30.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r28 = virtualinvoke $r29.<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>();

        r3 = virtualinvoke $r28.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label04;

     label03:
        $r19 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        $r18 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r21 = virtualinvoke $r20.<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>(null);

        r3 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri build()>();

     label04:
        interfaceinvoke r2.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label05:
        $z2 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label09;

        r4 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i2);

        $i9 = <android.os.Build$VERSION: int SDK_INT>;

        if $i9 < 11 goto label06;

        $r26 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r25 = virtualinvoke $r27.<android.net.Uri$Builder: android.net.Uri$Builder clearQuery()>();

        r5 = virtualinvoke $r25.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label07;

     label06:
        $r22 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);

        $r23 = virtualinvoke $r22.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r24 = virtualinvoke $r23.<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>(null);

        r5 = virtualinvoke $r24.<android.net.Uri$Builder: android.net.Uri build()>();

     label07:
        if r3 == null goto label08;

        $z3 = virtualinvoke r3.<android.net.Uri: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label08;

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = i1;

        goto label09;

     label08:
        i1 = i1 + 1;

        goto label05;

     label09:
        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mIsPaused>;

        if $z0 == 0 goto label10;

        r0.<com.android.ex.photo.PhotoViewController: boolean mKickLoader> = 1;

        $r17 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r17.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(null);

        return;

     label10:
        z4 = r0.<com.android.ex.photo.PhotoViewController: boolean mIsEmpty>;

        r0.<com.android.ex.photo.PhotoViewController: boolean mIsEmpty> = 0;

        $r10 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r10.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(r2);

        $r12 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $r11 = virtualinvoke $r12.<com.android.ex.photo.PhotoViewPager: android.support.v4.view.PagerAdapter getAdapter()>();

        if $r11 != null goto label11;

        $r14 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $r15 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r14.<com.android.ex.photo.PhotoViewPager: void setAdapter(android.support.v4.view.PagerAdapter)>($r15);

     label11:
        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void notifyCursorListeners(android.database.Cursor)>(r2);

        $i6 = r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex>;

        if $i6 >= 0 goto label12;

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = 0;

     label12:
        $r13 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $i5 = r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex>;

        virtualinvoke $r13.<com.android.ex.photo.PhotoViewPager: void setCurrentItem(int,boolean)>($i5, 0);

        if z4 == 0 goto label13;

        $i7 = r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex>;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setViewActivated(int)>($i7);

     label13:
        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void updateActionItems()>();

     label14:
        return;
    }

    public void onLoaderReset(android.support.v4.content.Loader)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.support.v4.content.Loader r1;
        boolean $z0;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.support.v4.content.Loader;

        $z0 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: boolean isDestroyedCompat()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        virtualinvoke $r2.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(null);

     label1:
        return;
    }

    public void updateActionItems()
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        return;
    }

    private synchronized void notifyCursorListeners(android.database.Cursor)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.database.Cursor r1;
        java.util.Iterator r2;
        com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.database.Cursor;

        $r4 = r0.<com.android.ex.photo.PhotoViewController: java.util.Set mCursorListeners>;

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener) $r5;

        interfaceinvoke r3.<com.android.ex.photo.PhotoViewCallbacks$CursorChangedListener: void onCursorChanged(android.database.Cursor)>(r1);

        goto label1;

     label2:
        return;
    }

    public void onPageScrolled(int, float, int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1, $i3, $i4;
        float f0;
        com.android.ex.photo.PhotoViewCallbacks$OnScreenListener r1, r2;
        double $d0;
        byte $b2;
        java.util.Map $r3, $r6;
        java.lang.Integer $r4, $r7;
        java.lang.Object $r5, $r8;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 := @parameter2: int;

        $d0 = (double) f0;

        $b2 = $d0 cmpg 1.0E-4;

        if $b2 >= 0 goto label2;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $i3 = i0 - 1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (com.android.ex.photo.PhotoViewCallbacks$OnScreenListener) $r5;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: void onViewUpNext()>();

     label1:
        $r6 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $i4 = i0 + 1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r7);

        r2 = (com.android.ex.photo.PhotoViewCallbacks$OnScreenListener) $r8;

        if r2 == null goto label2;

        interfaceinvoke r2.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: void onViewUpNext()>();

     label2:
        return;
    }

    public void onPageSelected(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = i0;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setViewActivated(int)>(i0);

        return;
    }

    public void onPageScrollStateChanged(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        return;
    }

    public boolean isFragmentActive(android.support.v4.app.Fragment)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.support.v4.app.Fragment r1;
        com.android.ex.photo.PhotoViewPager $r2, $r4;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r3, $r5;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.support.v4.app.Fragment;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        if $r3 != null goto label2;

     label1:
        return 0;

     label2:
        $r4 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $i0 = virtualinvoke $r4.<com.android.ex.photo.PhotoViewPager: int getCurrentItem()>();

        $r5 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        $i1 = virtualinvoke $r5.<com.android.ex.photo.adapters.PhotoPagerAdapter: int getItemPosition(java.lang.Object)>(r1);

        if $i0 != $i1 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void onFragmentVisible(com.android.ex.photo.fragments.PhotoViewFragment)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.fragments.PhotoViewFragment r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.fragments.PhotoViewFragment;

        return;
    }

    public com.android.ex.photo.PhotoViewPager$InterceptType onTouchIntercept(float, float)
    {
        com.android.ex.photo.PhotoViewController r0;
        float f0, f1;
        boolean z0, z1, $z2;
        java.util.Iterator r1;
        com.android.ex.photo.PhotoViewCallbacks$OnScreenListener r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        com.android.ex.photo.PhotoViewPager$InterceptType $r5, $r6, $r7, $r8;
        java.lang.Object $r9;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 = 0;

        z1 = 0;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.ex.photo.PhotoViewCallbacks$OnScreenListener) $r9;

        if z0 != 0 goto label2;

        z0 = interfaceinvoke r2.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: boolean onInterceptMoveLeft(float,float)>(f0, f1);

     label2:
        if z1 != 0 goto label3;

        z1 = interfaceinvoke r2.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: boolean onInterceptMoveRight(float,float)>(f0, f1);

     label3:
        goto label1;

     label4:
        if z0 == 0 goto label6;

        if z1 == 0 goto label5;

        $r8 = <com.android.ex.photo.PhotoViewPager$InterceptType: com.android.ex.photo.PhotoViewPager$InterceptType BOTH>;

        return $r8;

     label5:
        $r7 = <com.android.ex.photo.PhotoViewPager$InterceptType: com.android.ex.photo.PhotoViewPager$InterceptType LEFT>;

        return $r7;

     label6:
        if z1 == 0 goto label7;

        $r6 = <com.android.ex.photo.PhotoViewPager$InterceptType: com.android.ex.photo.PhotoViewPager$InterceptType RIGHT>;

        return $r6;

     label7:
        $r5 = <com.android.ex.photo.PhotoViewPager$InterceptType: com.android.ex.photo.PhotoViewPager$InterceptType NONE>;

        return $r5;
    }

    protected void setFullScreen(boolean, boolean)
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Iterator r1;
        com.android.ex.photo.PhotoViewCallbacks$OnScreenListener r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        java.lang.Object $r5;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z3 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        if z0 == $z3 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        z2 = $z7;

        r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen> = z0;

        $z4 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        if $z4 == 0 goto label3;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setLightsOutMode(boolean)>(1);

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void cancelEnterFullScreenRunnable()>();

        goto label4;

     label3:
        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setLightsOutMode(boolean)>(0);

        if z1 == 0 goto label4;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void postEnterFullScreenRunnableWithDelay()>();

     label4:
        if z2 == 0 goto label6;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z5 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.ex.photo.PhotoViewCallbacks$OnScreenListener) $r5;

        $z6 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        interfaceinvoke r2.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: void onFullScreenChanged(boolean)>($z6);

        goto label5;

     label6:
        return;
    }

    private void postEnterFullScreenRunnableWithDelay()
    {
        com.android.ex.photo.PhotoViewController r0;
        long $l0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: android.os.Handler mHandler>;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: java.lang.Runnable mEnterFullScreenRunnable>;

        $l0 = r0.<com.android.ex.photo.PhotoViewController: long mEnterFullScreenDelayTime>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, $l0);

        return;
    }

    private void cancelEnterFullScreenRunnable()
    {
        com.android.ex.photo.PhotoViewController r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: android.os.Handler mHandler>;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: java.lang.Runnable mEnterFullScreenRunnable>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    protected void setLightsOutMode(boolean)
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setImmersiveMode(boolean)>(z0);

        return;
    }

    public void setViewActivated(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1;
        com.android.ex.photo.PhotoViewCallbacks$OnScreenListener r1;
        android.database.Cursor r2;
        java.util.Map $r3;
        java.lang.Integer $r4;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: java.util.Map mScreenListeners>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r1 = (com.android.ex.photo.PhotoViewCallbacks$OnScreenListener) $r5;

        if r1 == null goto label1;

        interfaceinvoke r1.<com.android.ex.photo.PhotoViewCallbacks$OnScreenListener: void onViewActivated()>();

     label1:
        r2 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.database.Cursor getCursorAtProperPosition()>();

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = i0;

        i1 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndex(java.lang.String)>("uri");

        $r6 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri> = $r6;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void updateActionBar()>();

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void cancelEnterFullScreenRunnable()>();

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void postEnterFullScreenRunnableWithDelay()>();

        return;
    }

    public void updateActionBar()
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1, $z2;
        android.database.Cursor r1;
        com.android.ex.photo.PhotoViewPager $r2;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r3, $r5;
        com.android.ex.photo.ActionBarInterface $r4;
        android.content.res.Resources $r6;
        java.lang.Object[] $r7;
        java.lang.Integer $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $i2 = virtualinvoke $r2.<com.android.ex.photo.PhotoViewPager: int getCurrentItem()>();

        i0 = $i2 + 1;

        $i3 = r0.<com.android.ex.photo.PhotoViewController: int mAlbumCount>;

        if $i3 < 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        r1 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.database.Cursor getCursorAtProperPosition()>();

        if r1 == null goto label3;

        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_display_name");

        $r11 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarTitle> = $r11;

        goto label4;

     label3:
        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarTitle> = null;

     label4:
        $z1 = r0.<com.android.ex.photo.PhotoViewController: boolean mIsEmpty>;

        if $z1 != 0 goto label5;

        if z0 == 0 goto label5;

        if i0 > 0 goto label6;

     label5:
        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarSubtitle> = null;

        goto label7;

     label6:
        $r5 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r6 = interfaceinvoke $r5.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.res.Resources getResources()>();

        $i4 = <com.android.ex.photo.R$string: int photo_view_count>;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r8;

        $i5 = r0.<com.android.ex.photo.PhotoViewController: int mAlbumCount>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r7[1] = $r10;

        $r9 = virtualinvoke $r6.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>($i4, $r7);

        r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarSubtitle> = $r9;

     label7:
        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r4 = interfaceinvoke $r3.<com.android.ex.photo.PhotoViewController$ActivityInterface: com.android.ex.photo.ActionBarInterface getActionBarInterface()>();

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setActionBarTitles(com.android.ex.photo.ActionBarInterface)>($r4);

        return;
    }

    protected final void setActionBarTitles(com.android.ex.photo.ActionBarInterface)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.ActionBarInterface r1;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.ActionBarInterface;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarTitle>;

        $r3 = staticinvoke <com.android.ex.photo.PhotoViewController: java.lang.String getInputOrEmpty(java.lang.String)>($r2);

        interfaceinvoke r1.<com.android.ex.photo.ActionBarInterface: void setTitle(java.lang.CharSequence)>($r3);

        $r4 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mActionBarSubtitle>;

        $r5 = staticinvoke <com.android.ex.photo.PhotoViewController: java.lang.String getInputOrEmpty(java.lang.String)>($r4);

        interfaceinvoke r1.<com.android.ex.photo.ActionBarInterface: void setSubtitle(java.lang.CharSequence)>($r5);

        return;
    }

    private static final java.lang.String getInputOrEmpty(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        return r0;
    }

    public android.database.Cursor getCursorAtProperPosition()
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;
        android.database.Cursor r1;
        com.android.ex.photo.PhotoViewPager $r2, $r3;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r4;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        i0 = virtualinvoke $r3.<com.android.ex.photo.PhotoViewPager: int getCurrentItem()>();

        $r4 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        r1 = virtualinvoke $r4.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor getCursor()>();

        if r1 != null goto label2;

        return null;

     label2:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(i0);

        return r1;
    }

    public android.database.Cursor getCursor()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r1, $r2;
        android.database.Cursor $r3;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        $r3 = virtualinvoke $r2.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.database.Cursor getCursor()>();

     label2:
        return $r3;
    }

    public void onMenuVisibilityChanged(boolean)
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void cancelEnterFullScreenRunnable()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void postEnterFullScreenRunnableWithDelay()>();

     label2:
        return;
    }

    public void onNewPhotoLoaded(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        return;
    }

    protected void setPhotoIndex(int)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        r0.<com.android.ex.photo.PhotoViewController: int mCurrentPhotoIndex> = i0;

        return;
    }

    public void onFragmentPhotoLoadComplete(com.android.ex.photo.fragments.PhotoViewFragment, boolean)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.fragments.PhotoViewFragment r1;
        boolean z0, $z1;
        android.widget.ImageView $r2, $r5, $r7;
        int $i0;
        java.lang.String $r3, $r4;
        com.android.ex.photo.PhotoViewPager $r6, $r8;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.fragments.PhotoViewFragment;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $i0 = virtualinvoke $r2.<android.widget.ImageView: int getVisibility()>();

        if $i0 == 8 goto label2;

        $r3 = virtualinvoke r1.<com.android.ex.photo.fragments.PhotoViewFragment: java.lang.String getPhotoUri()>();

        $r4 = r0.<com.android.ex.photo.PhotoViewController: java.lang.String mCurrentPhotoUri>;

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r3, $r4);

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r7 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r7.<android.widget.ImageView: void setVisibility(int)>(8);

        $r8 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r8.<com.android.ex.photo.PhotoViewPager: void setVisibility(int)>(0);

        goto label2;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PhotoViewController", "Failed to load fragment image");

        $r5 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r5.<android.widget.ImageView: void setVisibility(int)>(8);

        $r6 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r6.<com.android.ex.photo.PhotoViewPager: void setVisibility(int)>(0);

     label2:
        return;
    }

    protected boolean isFullScreen()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        return $z0;
    }

    public void onCursorChanged(com.android.ex.photo.fragments.PhotoViewFragment, android.database.Cursor)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.fragments.PhotoViewFragment r1;
        android.database.Cursor r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: com.android.ex.photo.fragments.PhotoViewFragment;

        r2 := @parameter1: android.database.Cursor;

        return;
    }

    public com.android.ex.photo.adapters.PhotoPagerAdapter getAdapter()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.adapters.PhotoPagerAdapter $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.adapters.PhotoPagerAdapter mAdapter>;

        return $r1;
    }

    public void onEnterAnimationComplete()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewPager $r1;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished> = 1;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r1.<com.android.ex.photo.PhotoViewPager: void setVisibility(int)>(0);

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mFullScreen>;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void setLightsOutMode(boolean)>($z0);

        return;
    }

    private void onExitAnimationComplete()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1, $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        interfaceinvoke $r1.<com.android.ex.photo.PhotoViewController$ActivityInterface: void finish()>();

        $r2 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        interfaceinvoke $r2.<com.android.ex.photo.PhotoViewController$ActivityInterface: void overridePendingTransition(int,int)>(0, 0);

        return;
    }

    private void runEnterAnimation()
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        com.android.ex.photo.PhotoViewController$3 r1, $r27;
        android.view.ViewPropertyAnimator r2, $r19, $r21, $r22, $r29, $r30, $r31, $r32, $r34;
        android.view.animation.ScaleAnimation r3, $r13;
        android.view.animation.AnimationSet r4, $r14;
        com.android.ex.photo.PhotoViewController$4 r5, $r17;
        android.view.View $r6, $r7, $r9, $r12, $r15, $r16, $r20;
        android.widget.ImageView $r8, $r18, $r23, $r24, $r25, $r26, $r28;
        android.view.animation.TranslateAnimation $r10, r37;
        android.view.animation.AlphaAnimation $r11, r36;
        android.os.Handler $r33;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r6 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        i0 = virtualinvoke $r6.<android.view.View: int getMeasuredWidth()>();

        $r7 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        i1 = virtualinvoke $r7.<android.view.View: int getMeasuredHeight()>();

        $r8 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r8.<android.widget.ImageView: void setVisibility(int)>(0);

        $i5 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartWidth>;

        $f3 = (float) $i5;

        $f4 = (float) i0;

        f0 = $f3 / $f4;

        $i6 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartHeight>;

        $f6 = (float) $i6;

        $f5 = (float) i1;

        f1 = $f6 / $f5;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        $i7 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartX>;

        $i8 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartWidth>;

        i2 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: int calculateTranslate(int,int,int,float)>($i7, $i8, i0, f2);

        $i10 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartY>;

        $i9 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartHeight>;

        i3 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: int calculateTranslate(int,int,int,float)>($i10, $i9, i1, f2);

        i4 = <android.os.Build$VERSION: int SDK_INT>;

        if i4 < 14 goto label3;

        $r15 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r15.<android.view.View: void setAlpha(float)>(0.0F);

        $r16 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        $r21 = virtualinvoke $r16.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r22 = virtualinvoke $r21.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r19 = virtualinvoke $r22.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        virtualinvoke $r19.<android.view.ViewPropertyAnimator: void start()>();

        $r20 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r20.<android.view.View: void setVisibility(int)>(0);

        $r25 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r25.<android.widget.ImageView: void setScaleX(float)>(f2);

        $r24 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r24.<android.widget.ImageView: void setScaleY(float)>(f2);

        $r23 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $f9 = (float) i2;

        virtualinvoke $r23.<android.widget.ImageView: void setTranslationX(float)>($f9);

        $r28 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $f10 = (float) i3;

        virtualinvoke $r28.<android.widget.ImageView: void setTranslationY(float)>($f10);

        $r27 = new com.android.ex.photo.PhotoViewController$3;

        specialinvoke $r27.<com.android.ex.photo.PhotoViewController$3: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r1 = $r27;

        $r26 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $r32 = virtualinvoke $r26.<android.widget.ImageView: android.view.ViewPropertyAnimator animate()>();

        $r31 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(1.0F);

        $r30 = virtualinvoke $r31.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(1.0F);

        $r29 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>(0.0F);

        $r34 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>(0.0F);

        r2 = virtualinvoke $r34.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        if i4 < 16 goto label1;

        virtualinvoke r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>(r1);

        goto label2;

     label1:
        $r33 = r0.<com.android.ex.photo.PhotoViewController: android.os.Handler mHandler>;

        virtualinvoke $r33.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, 250L);

     label2:
        virtualinvoke r2.<android.view.ViewPropertyAnimator: void start()>();

        goto label4;

     label3:
        $r11 = new android.view.animation.AlphaAnimation;

        specialinvoke $r11.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        r36 = $r11;

        virtualinvoke r36.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r12 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r12.<android.view.View: void startAnimation(android.view.animation.Animation)>(r36);

        $r9 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r9.<android.view.View: void setVisibility(int)>(0);

        $r10 = new android.view.animation.TranslateAnimation;

        $f8 = (float) i2;

        $f7 = (float) i3;

        specialinvoke $r10.<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>($f8, $f7, 0.0F, 0.0F);

        r37 = $r10;

        virtualinvoke r37.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r13 = new android.view.animation.ScaleAnimation;

        specialinvoke $r13.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>(f2, f2, 0.0F, 0.0F);

        r3 = $r13;

        virtualinvoke r3.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r14 = new android.view.animation.AnimationSet;

        specialinvoke $r14.<android.view.animation.AnimationSet: void <init>(boolean)>(1);

        r4 = $r14;

        virtualinvoke r4.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r37);

        virtualinvoke r4.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r3);

        $r17 = new com.android.ex.photo.PhotoViewController$4;

        specialinvoke $r17.<com.android.ex.photo.PhotoViewController$4: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r5 = $r17;

        virtualinvoke r4.<android.view.animation.AnimationSet: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r5);

        $r18 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r18.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>(r4);

     label4:
        return;
    }

    private void runExitAnimation()
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        com.android.ex.photo.PhotoViewController$5 r1, $r17;
        com.android.ex.photo.PhotoViewController$6 r2, $r11;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r3;
        android.view.View $r4, $r5, $r6, $r9, $r16, $r20;
        android.view.animation.ScaleAnimation $r7, r36;
        android.view.animation.AlphaAnimation $r8, r35;
        com.android.ex.photo.PhotoViewPager $r10, $r23;
        android.widget.ImageView $r12, $r15, $r18, $r30;
        android.view.ViewPropertyAnimator $r13, $r14, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r29, $r31, $r32, $r33, r34;
        android.os.Handler $r26;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r3 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        interfaceinvoke $r3.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.content.Intent getIntent()>();

        $r4 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        i0 = virtualinvoke $r4.<android.view.View: int getMeasuredWidth()>();

        $r5 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        i1 = virtualinvoke $r5.<android.view.View: int getMeasuredHeight()>();

        $i5 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartWidth>;

        $f3 = (float) $i5;

        $f4 = (float) i0;

        f0 = $f3 / $f4;

        $i6 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartHeight>;

        $f6 = (float) $i6;

        $f5 = (float) i1;

        f1 = $f6 / $f5;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        $i7 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartX>;

        $i8 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartWidth>;

        i2 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: int calculateTranslate(int,int,int,float)>($i7, $i8, i0, f2);

        $i10 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartY>;

        $i9 = r0.<com.android.ex.photo.PhotoViewController: int mAnimationStartHeight>;

        i3 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: int calculateTranslate(int,int,int,float)>($i10, $i9, i1, f2);

        i4 = <android.os.Build$VERSION: int SDK_INT>;

        if i4 < 14 goto label5;

        $r16 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        $r13 = virtualinvoke $r16.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r14 = virtualinvoke $r13.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r19 = virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        virtualinvoke $r19.<android.view.ViewPropertyAnimator: void start()>();

        $r20 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r20.<android.view.View: void setVisibility(int)>(0);

        $r17 = new com.android.ex.photo.PhotoViewController$5;

        specialinvoke $r17.<com.android.ex.photo.PhotoViewController$5: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r1 = $r17;

        $r18 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $i12 = virtualinvoke $r18.<android.widget.ImageView: int getVisibility()>();

        if $i12 != 0 goto label1;

        $r30 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $r29 = virtualinvoke $r30.<android.widget.ImageView: android.view.ViewPropertyAnimator animate()>();

        $r28 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(f2);

        $r32 = virtualinvoke $r28.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(f2);

        $f9 = (float) i2;

        $r33 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>($f9);

        $f10 = (float) i3;

        $r31 = virtualinvoke $r33.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>($f10);

        r34 = virtualinvoke $r31.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

        goto label2;

     label1:
        $r23 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        $r22 = virtualinvoke $r23.<com.android.ex.photo.PhotoViewPager: android.view.ViewPropertyAnimator animate()>();

        $r21 = virtualinvoke $r22.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(f2);

        $r25 = virtualinvoke $r21.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(f2);

        $f8 = (float) i2;

        $r24 = virtualinvoke $r25.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>($f8);

        $f7 = (float) i3;

        $r27 = virtualinvoke $r24.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>($f7);

        r34 = virtualinvoke $r27.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(250L);

     label2:
        if i4 < 16 goto label3;

        virtualinvoke r34.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>(r1);

        goto label4;

     label3:
        $r26 = r0.<com.android.ex.photo.PhotoViewController: android.os.Handler mHandler>;

        virtualinvoke $r26.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, 250L);

     label4:
        virtualinvoke r34.<android.view.ViewPropertyAnimator: void start()>();

        goto label7;

     label5:
        $r8 = new android.view.animation.AlphaAnimation;

        specialinvoke $r8.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        r35 = $r8;

        virtualinvoke r35.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r9 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r9.<android.view.View: void startAnimation(android.view.animation.Animation)>(r35);

        $r6 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mBackground>;

        virtualinvoke $r6.<android.view.View: void setVisibility(int)>(0);

        $r7 = new android.view.animation.ScaleAnimation;

        specialinvoke $r7.<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>(1.0F, 1.0F, f2, f2);

        r36 = $r7;

        virtualinvoke r36.<android.view.animation.Animation: void setDuration(long)>(250L);

        $r11 = new com.android.ex.photo.PhotoViewController$6;

        specialinvoke $r11.<com.android.ex.photo.PhotoViewController$6: void <init>(com.android.ex.photo.PhotoViewController)>(r0);

        r2 = $r11;

        virtualinvoke r36.<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation$AnimationListener)>(r2);

        $r12 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        $i11 = virtualinvoke $r12.<android.widget.ImageView: int getVisibility()>();

        if $i11 != 0 goto label6;

        $r15 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r15.<android.widget.ImageView: void startAnimation(android.view.animation.Animation)>(r36);

        goto label7;

     label6:
        $r10 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewPager mViewPager>;

        virtualinvoke $r10.<com.android.ex.photo.PhotoViewPager: void startAnimation(android.view.animation.Animation)>(r36);

     label7:
        return;
    }

    private int calculateTranslate(int, int, int, float)
    {
        com.android.ex.photo.PhotoViewController r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        f0 := @parameter3: float;

        $f3 = (float) i2;

        $f1 = (float) i2;

        $f2 = $f1 * f0;

        $f4 = $f3 - $f2;

        $f5 = $f4 / 2.0F;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f5);

        $f6 = (float) i2;

        $f8 = $f6 * f0;

        $f7 = (float) i1;

        $f10 = $f8 - $f7;

        $f9 = $f10 / 2.0F;

        i4 = staticinvoke <java.lang.Math: int round(float)>($f9);

        $i5 = i0 - i3;

        $i6 = $i5 - i4;

        return $i6;
    }

    private void initTemporaryImage(android.graphics.drawable.Drawable)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.graphics.drawable.Drawable r1;
        int i0;
        android.view.View r2, $r7;
        boolean $z0;
        android.widget.ImageView $r3;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r4;
        android.support.v4.app.LoaderManager $r5;
        android.view.ViewTreeObserver $r8;
        com.android.ex.photo.PhotoViewController$7 $r9;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.ex.photo.PhotoViewController: android.widget.ImageView mTemporaryImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        if r1 == null goto label3;

        $r7 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        i0 = virtualinvoke $r7.<android.view.View: int getMeasuredWidth()>();

        if i0 != 0 goto label2;

        r2 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        $r8 = virtualinvoke r2.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r9 = new com.android.ex.photo.PhotoViewController$7;

        specialinvoke $r9.<com.android.ex.photo.PhotoViewController$7: void <init>(com.android.ex.photo.PhotoViewController,android.view.View)>(r0, r2);

        virtualinvoke $r8.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r9);

        goto label3;

     label2:
        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void runEnterAnimation()>();

     label3:
        $r4 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r5 = interfaceinvoke $r4.<com.android.ex.photo.PhotoViewController$ActivityInterface: android.support.v4.app.LoaderManager getSupportLoaderManager()>();

        virtualinvoke $r5.<android.support.v4.app.LoaderManager: android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks)>(100, null, r0);

        return;
    }

    public void showActionBar()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;
        com.android.ex.photo.ActionBarInterface $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r2 = interfaceinvoke $r1.<com.android.ex.photo.PhotoViewController$ActivityInterface: com.android.ex.photo.ActionBarInterface getActionBarInterface()>();

        interfaceinvoke $r2.<com.android.ex.photo.ActionBarInterface: void show()>();

        return;
    }

    public void hideActionBar()
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;
        com.android.ex.photo.ActionBarInterface $r2;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        $r2 = interfaceinvoke $r1.<com.android.ex.photo.PhotoViewController$ActivityInterface: com.android.ex.photo.ActionBarInterface getActionBarInterface()>();

        interfaceinvoke $r2.<com.android.ex.photo.ActionBarInterface: void hide()>();

        return;
    }

    public boolean isScaleAnimationEnabled()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mScaleAnimationEnabled>;

        return $z0;
    }

    public boolean isEnterAnimationFinished()
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean $z0;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $z0 = r0.<com.android.ex.photo.PhotoViewController: boolean mEnterAnimationFinished>;

        return $z0;
    }

    public android.view.View getRootView()
    {
        com.android.ex.photo.PhotoViewController r0;
        android.view.View $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: android.view.View mRootView>;

        return $r1;
    }

    public void setImmersiveMode(boolean)
    {
        com.android.ex.photo.PhotoViewController r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        short s0;
        int i1;
        android.view.View $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        z0 := @parameter0: boolean;

        s0 = 0;

        i1 = <android.os.Build$VERSION: int SDK_INT>;

        if i1 >= 16 goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z1 = $z5;

        if z0 == 0 goto label09;

        $z2 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: boolean isScaleAnimationEnabled()>();

        if $z2 == 0 goto label03;

        $z4 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: boolean isEnterAnimationFinished()>();

        if $z4 == 0 goto label09;

     label03:
        if i1 > 19 goto label04;

        if i1 != 19 goto label05;

        $z3 = specialinvoke r0.<com.android.ex.photo.PhotoViewController: boolean kitkatIsSecondaryUser()>();

        if $z3 != 0 goto label05;

     label04:
        s0 = 3846;

        goto label08;

     label05:
        if i1 < 16 goto label06;

        s0 = 1285;

        goto label08;

     label06:
        if i1 < 14 goto label07;

        s0 = 1;

        goto label08;

     label07:
        if i1 < 11 goto label08;

        s0 = 1;

     label08:
        if z1 == 0 goto label14;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void hideActionBar()>();

        goto label14;

     label09:
        if i1 < 19 goto label10;

        s0 = 1792;

        goto label13;

     label10:
        if i1 < 16 goto label11;

        s0 = 1280;

        goto label13;

     label11:
        if i1 < 14 goto label12;

        s0 = 0;

        goto label13;

     label12:
        if i1 < 11 goto label13;

        s0 = 0;

     label13:
        if z1 == 0 goto label14;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void showActionBar()>();

     label14:
        if i1 < 11 goto label15;

        r0.<com.android.ex.photo.PhotoViewController: int mLastFlags> = s0;

        $r1 = virtualinvoke r0.<com.android.ex.photo.PhotoViewController: android.view.View getRootView()>();

        virtualinvoke $r1.<android.view.View: void setSystemUiVisibility(int)>(s0);

     label15:
        return;
    }

    private boolean kitkatIsSecondaryUser()
    {
        com.android.ex.photo.PhotoViewController r0;
        int $i0, $i1;
        boolean $z0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 19 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("kitkatIsSecondary user is only callable on KitKat");

        throw $r1;

     label1:
        $i1 = staticinvoke <android.os.Process: int myUid()>();

        if $i1 <= 100000 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public android.view.View$OnSystemUiVisibilityChangeListener getSystemUiVisibilityChangeListener()
    {
        com.android.ex.photo.PhotoViewController r0;
        android.view.View$OnSystemUiVisibilityChangeListener $r1;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: android.view.View$OnSystemUiVisibilityChangeListener mSystemUiVisibilityChangeListener>;

        return $r1;
    }

    public volatile void onLoadFinished(android.support.v4.content.Loader, java.lang.Object)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.support.v4.content.Loader r1;
        java.lang.Object r2;
        android.database.Cursor $r3;

        r0 := @this: com.android.ex.photo.PhotoViewController;

        r1 := @parameter0: android.support.v4.content.Loader;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) r2;

        virtualinvoke r0.<com.android.ex.photo.PhotoViewController: void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor)>(r1, $r3);

        return;
    }

    static int access$000(com.android.ex.photo.PhotoViewController)
    {
        com.android.ex.photo.PhotoViewController r0;
        int $i0;

        r0 := @parameter0: com.android.ex.photo.PhotoViewController;

        $i0 = r0.<com.android.ex.photo.PhotoViewController: int mLastFlags>;

        return $i0;
    }

    static void access$200(com.android.ex.photo.PhotoViewController)
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @parameter0: com.android.ex.photo.PhotoViewController;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void onExitAnimationComplete()>();

        return;
    }

    static void access$300(com.android.ex.photo.PhotoViewController)
    {
        com.android.ex.photo.PhotoViewController r0;

        r0 := @parameter0: com.android.ex.photo.PhotoViewController;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void runEnterAnimation()>();

        return;
    }

    static com.android.ex.photo.PhotoViewController$ActivityInterface access$400(com.android.ex.photo.PhotoViewController)
    {
        com.android.ex.photo.PhotoViewController r0;
        com.android.ex.photo.PhotoViewController$ActivityInterface $r1;

        r0 := @parameter0: com.android.ex.photo.PhotoViewController;

        $r1 = r0.<com.android.ex.photo.PhotoViewController: com.android.ex.photo.PhotoViewController$ActivityInterface mActivity>;

        return $r1;
    }

    static void access$500(com.android.ex.photo.PhotoViewController, android.graphics.drawable.Drawable)
    {
        com.android.ex.photo.PhotoViewController r0;
        android.graphics.drawable.Drawable r1;

        r0 := @parameter0: com.android.ex.photo.PhotoViewController;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.android.ex.photo.PhotoViewController: void initTemporaryImage(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.ex.photo.PhotoViewController: java.lang.String KEY_MESSAGE> = "dialog_message";

        <com.android.ex.photo.PhotoViewController: int EXIT_ANIMATION_DURATION_MS> = 250;

        <com.android.ex.photo.PhotoViewController: int ENTER_ANIMATION_DURATION_MS> = 250;

        <com.android.ex.photo.PhotoViewController: int ALBUM_COUNT_UNKNOWN> = -1;

        <com.android.ex.photo.PhotoViewController: int LOADER_PHOTO_LIST> = 100;

        <com.android.ex.photo.PhotoViewController: java.lang.String ARG_IMAGE_URI> = "image_uri";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_ENTERANIMATIONFINISHED_KEY> = "com.android.ex.PhotoViewFragment.SCALEANIMATIONFINISHED";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_ACTIONBARSUBTITLE_KEY> = "com.android.ex.PhotoViewFragment.ACTIONBARSUBTITLE";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_ACTIONBARTITLE_KEY> = "com.android.ex.PhotoViewFragment.ACTIONBARTITLE";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_FULLSCREEN_KEY> = "com.android.ex.PhotoViewFragment.FULLSCREEN";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_CURRENT_INDEX_KEY> = "com.android.ex.PhotoViewFragment.CURRENT_INDEX";

        <com.android.ex.photo.PhotoViewController: java.lang.String STATE_CURRENT_URI_KEY> = "com.android.ex.PhotoViewFragment.CURRENT_URI";

        <com.android.ex.photo.PhotoViewController: java.lang.String TAG> = "PhotoViewController";

        return;
    }
}
