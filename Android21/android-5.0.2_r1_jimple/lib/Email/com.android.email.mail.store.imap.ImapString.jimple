public abstract class com.android.email.mail.store.imap.ImapString extends com.android.email.mail.store.imap.ImapElement
{
    private static final byte[] EMPTY_BYTES;
    public static final com.android.email.mail.store.imap.ImapString EMPTY;
    private static final java.text.SimpleDateFormat DATE_TIME_FORMAT;
    private boolean mIsInteger;
    private int mParsedInteger;
    private java.util.Date mParsedDate;

    public void <init>()
    {
        com.android.email.mail.store.imap.ImapString r0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        specialinvoke r0.<com.android.email.mail.store.imap.ImapElement: void <init>()>();

        return;
    }

    public final boolean isList()
    {
        com.android.email.mail.store.imap.ImapString r0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        return 0;
    }

    public final boolean isString()
    {
        com.android.email.mail.store.imap.ImapString r0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        return 1;
    }

    public final boolean isEmpty()
    {
        com.android.email.mail.store.imap.ImapString r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        $r1 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public abstract java.lang.String getString();

    public abstract java.io.InputStream getAsStream();

    public final boolean isNumber()
    {
        com.android.email.mail.store.imap.ImapString r0;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        java.lang.NumberFormatException $r3;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        $z0 = r0.<com.android.email.mail.store.imap.ImapString: boolean mIsInteger>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r0.<com.android.email.mail.store.imap.ImapString: int mParsedInteger> = $i0;

        r0.<com.android.email.mail.store.imap.ImapString: boolean mIsInteger> = 1;

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public final int getNumberOrZero()
    {
        com.android.email.mail.store.imap.ImapString r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        $z0 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: boolean isNumber()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = r0.<com.android.email.mail.store.imap.ImapString: int mParsedInteger>;

        return $i0;
    }

    public final boolean isDate()
    {
        com.android.email.mail.store.imap.ImapString r0;
        java.util.Date $r2, $r5;
        boolean $z0;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4, $r8, $r9, $r12;
        java.text.ParseException $r6;
        java.lang.StringBuilder $r7, $r10, $r11;
        java.lang.Object[] $r13;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        $r2 = r0.<com.android.email.mail.store.imap.ImapString: java.util.Date mParsedDate>;

        if $r2 == null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $r3 = <com.android.email.mail.store.imap.ImapString: java.text.SimpleDateFormat DATE_TIME_FORMAT>;

        $r4 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r4);

        r0.<com.android.email.mail.store.imap.ImapString: java.util.Date mParsedDate> = $r5;

     label3:
        return 1;

     label4:
        $r6 := @caughtexception;

        $r8 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can\'t be parsed as a date.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r8, $r12, $r13);

        return 0;

        catch java.text.ParseException from label2 to label3 with label4;
    }

    public final java.util.Date getDateOrNull()
    {
        com.android.email.mail.store.imap.ImapString r0;
        boolean $z0;
        java.util.Date $r1;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        $z0 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: boolean isDate()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.android.email.mail.store.imap.ImapString: java.util.Date mParsedDate>;

        return $r1;
    }

    public final boolean is(java.lang.String)
    {
        com.android.email.mail.store.imap.ImapString r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z0;
    }

    public final boolean startsWith(java.lang.String)
    {
        com.android.email.mail.store.imap.ImapString r0;
        java.lang.String r1, r2, $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        return 0;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        return $z0;
    }

    public abstract java.lang.String toString();

    public final boolean equalsForTest(com.android.email.mail.store.imap.ImapElement)
    {
        com.android.email.mail.store.imap.ImapString r0, r2;
        com.android.email.mail.store.imap.ImapElement r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.email.mail.store.imap.ImapString;

        r1 := @parameter0: com.android.email.mail.store.imap.ImapElement;

        $z0 = specialinvoke r0.<com.android.email.mail.store.imap.ImapElement: boolean equalsForTest(com.android.email.mail.store.imap.ImapElement)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.email.mail.store.imap.ImapString) r1;

        $r3 = virtualinvoke r0.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $r4 = virtualinvoke r2.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    static byte[] access$000()
    {
        byte[] $r0;

        $r0 = <com.android.email.mail.store.imap.ImapString: byte[] EMPTY_BYTES>;

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0;
        com.android.email.mail.store.imap.ImapString$1 $r1;
        java.text.SimpleDateFormat $r2;
        java.util.Locale $r3;

        $r0 = newarray (byte)[0];

        <com.android.email.mail.store.imap.ImapString: byte[] EMPTY_BYTES> = $r0;

        $r1 = new com.android.email.mail.store.imap.ImapString$1;

        specialinvoke $r1.<com.android.email.mail.store.imap.ImapString$1: void <init>()>();

        <com.android.email.mail.store.imap.ImapString: com.android.email.mail.store.imap.ImapString EMPTY> = $r1;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd-MMM-yyyy HH:mm:ss Z", $r3);

        <com.android.email.mail.store.imap.ImapString: java.text.SimpleDateFormat DATE_TIME_FORMAT> = $r2;

        return;
    }
}
