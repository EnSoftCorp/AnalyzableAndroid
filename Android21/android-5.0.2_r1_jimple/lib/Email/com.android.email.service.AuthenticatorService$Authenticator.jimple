class com.android.email.service.AuthenticatorService$Authenticator extends android.accounts.AbstractAccountAuthenticator
{
    final com.android.email.service.AuthenticatorService this$0;

    public void <init>(com.android.email.service.AuthenticatorService, android.content.Context)
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        com.android.email.service.AuthenticatorService r1;
        android.content.Context r2;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: com.android.email.service.AuthenticatorService;

        r2 := @parameter1: android.content.Context;

        r0.<com.android.email.service.AuthenticatorService$Authenticator: com.android.email.service.AuthenticatorService this$0> = r1;

        specialinvoke r0.<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>(r2);

        return;
    }

    public android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle) throws android.accounts.NetworkErrorException
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        java.lang.String r2, r3, r6, $r17, $r18, $r20, $r21, $r22;
        java.lang.String[] r4;
        android.os.Bundle r5, r9, $r12, $r23, r24;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r7;
        android.accounts.Account r8, $r15;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7, z8, z9;
        com.android.email.service.AuthenticatorService $r10, $r11, $r13, $r16;
        android.accounts.AccountManager $r19;
        android.content.Intent r25;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.Bundle;

        $r10 = r0.<com.android.email.service.AuthenticatorService$Authenticator: com.android.email.service.AuthenticatorService this$0>;

        r6 = staticinvoke <com.android.email.service.EmailServiceUtils: java.lang.String getProtocolFromAccountType(android.content.Context,java.lang.String)>($r10, r2);

        $r11 = r0.<com.android.email.service.AuthenticatorService$Authenticator: com.android.email.service.AuthenticatorService this$0>;

        r7 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>($r11, r6);

        if r5 == null goto label4;

        $z1 = virtualinvoke r5.<android.os.Bundle: boolean containsKey(java.lang.String)>("password");

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r5.<android.os.Bundle: boolean containsKey(java.lang.String)>("username");

        if $z2 == 0 goto label4;

        $r15 = new android.accounts.Account;

        $r17 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("username");

        specialinvoke $r15.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>($r17, r2);

        r8 = $r15;

        $r16 = r0.<com.android.email.service.AuthenticatorService$Authenticator: com.android.email.service.AuthenticatorService this$0>;

        $r19 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>($r16);

        $r18 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("password");

        virtualinvoke $r19.<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>(r8, $r18, null);

        $z3 = r7.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncContacts>;

        if $z3 == 0 goto label1;

        z0 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("contacts", 0);

        staticinvoke <android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>(r8, "com.android.contacts", 1);

        staticinvoke <android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>(r8, "com.android.contacts", z0);

     label1:
        $z6 = r7.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncCalendar>;

        if $z6 == 0 goto label2;

        z8 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("calendar", 0);

        staticinvoke <android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>(r8, "com.android.calendar", 1);

        staticinvoke <android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>(r8, "com.android.calendar", z8);

     label2:
        z9 = 0;

        $z5 = virtualinvoke r5.<android.os.Bundle: boolean containsKey(java.lang.String)>("email");

        if $z5 == 0 goto label3;

        $z7 = virtualinvoke r5.<android.os.Bundle: boolean getBoolean(java.lang.String)>("email");

        if $z7 == 0 goto label3;

        z9 = 1;

     label3:
        $r21 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>(r8, $r21, 1);

        $r20 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>(r8, $r20, z9);

        $r23 = new android.os.Bundle;

        specialinvoke $r23.<android.os.Bundle: void <init>()>();

        r9 = $r23;

        $r22 = virtualinvoke r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("username");

        virtualinvoke r9.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("authAccount", $r22);

        virtualinvoke r9.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("accountType", r2);

        return r9;

     label4:
        $r12 = new android.os.Bundle;

        specialinvoke $r12.<android.os.Bundle: void <init>()>();

        r24 = $r12;

        $r13 = r0.<com.android.email.service.AuthenticatorService$Authenticator: com.android.email.service.AuthenticatorService this$0>;

        r25 = staticinvoke <com.android.email.activity.setup.AccountSetupFinal: android.content.Intent actionGetCreateAccountIntent(android.content.Context,java.lang.String)>($r13, r2);

        virtualinvoke r25.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("accountAuthenticatorResponse", r1);

        virtualinvoke r24.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("intent", r25);

        return r24;
    }

    public android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: android.os.Bundle;

        return null;
    }

    public android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String)
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        java.lang.String r2;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        return null;
    }

    public android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle) throws android.accounts.NetworkErrorException
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return null;
    }

    public java.lang.String getAuthTokenLabel(java.lang.String)
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        java.lang.String r1;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[]) throws android.accounts.NetworkErrorException
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String[] r3;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String[];

        return null;
    }

    public android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)
    {
        com.android.email.service.AuthenticatorService$Authenticator r0;
        android.accounts.AccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String r3;
        android.os.Bundle r4;

        r0 := @this: com.android.email.service.AuthenticatorService$Authenticator;

        r1 := @parameter0: android.accounts.AccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        return null;
    }
}
