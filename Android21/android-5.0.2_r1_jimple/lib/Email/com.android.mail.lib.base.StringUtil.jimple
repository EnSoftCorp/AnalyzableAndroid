public final class com.android.mail.lib.base.StringUtil extends java.lang.Object
{
    public static final java.lang.String WHITE_SPACES;
    public static final java.lang.String LINE_BREAKS;
    private static final com.android.mail.lib.base.Splitter NEWLINE_SPLITTER;
    private static final com.android.mail.lib.base.Splitter TO_WORDS;
    private static final com.android.mail.lib.base.CharMatcher FANCY_SINGLE_QUOTE;
    private static final com.android.mail.lib.base.CharMatcher FANCY_DOUBLE_QUOTE;
    static final java.util.Map ESCAPE_STRINGS;
    static final java.util.Set HEX_LETTERS;
    private static final com.android.mail.lib.base.CharEscaper LT_GT_ESCAPE;
    private static final java.util.regex.Pattern htmlTagPattern;
    private static final com.android.mail.lib.base.CharMatcher CONTROL_MATCHER;
    private static final com.android.mail.lib.base.CharEscaper JAVA_ESCAPE;
    private static final com.android.mail.lib.base.CharEscaper REGEX_ESCAPE;
    private static final java.util.regex.Pattern characterReferencePattern;
    private static final java.util.Set CJK_BLOCKS;
    private static final char[] HEX_CHARS;
    private static final char[] OCTAL_CHARS;
    private static final java.util.regex.Pattern dbSpecPattern;
    private static final java.util.Set JS_ESCAPE_CHARS;
    private static final java.util.Set JSON_ESCAPE_CHARS;

    private void <init>()
    {
        com.android.mail.lib.base.StringUtil r0;

        r0 := @this: com.android.mail.lib.base.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isEmpty(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.mail.lib.base.Strings: boolean isNullOrEmpty(java.lang.String)>(r0);

        return $z0;
    }

    public static boolean isEmptyOrWhitespace(java.lang.String)
    {
        java.lang.String r0;
        com.android.mail.lib.base.CharMatcher $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher WHITESPACE>;

        $z0 = virtualinvoke $r1.<com.android.mail.lib.base.CharMatcher: boolean matchesAllOf(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.lang.String makeSafe(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.Strings: java.lang.String nullToEmpty(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.String toNullIfEmpty(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.Strings: java.lang.String emptyToNull(java.lang.String)>(r0);

        return $r1;
    }

    public static java.lang.String toNullIfEmptyOrWhitespace(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isEmptyOrWhitespace(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = r0;

     label2:
        return $r1;
    }

    public static java.lang.String repeat(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.mail.lib.base.Strings: java.lang.String repeat(java.lang.String,int)>(r0, i0);

        return $r1;
    }

    public static int indexOfChars(java.lang.CharSequence, java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, r1;
        int i0, i1, $i3, $i4, $i5, i6;
        java.util.Set r2;
        boolean[] r3;
        char c2, c7;
        java.lang.Character $r4, $r5;
        boolean $z0, $z1, $z2;
        java.util.HashSet $r6;

        r0 := @parameter0: java.lang.CharSequence;

        r1 := @parameter1: java.lang.CharSequence;

        i0 := @parameter2: int;

        $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i0 < $i3 goto label01;

        return -1;

     label01:
        r2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r3 = newarray (boolean)[128];

        i1 = 0;

     label02:
        $i4 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if i1 >= $i4 goto label06;

        c2 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i1);

        if c2 >= 128 goto label03;

        r3[c2] = 1;

        goto label05;

     label03:
        $z2 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label04;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r2 = $r6;

     label04:
        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c2);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label05:
        i1 = i1 + 1;

        goto label02;

     label06:
        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 0);

     label07:
        $i5 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i6 >= $i5 goto label10;

        c7 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i6);

        if c7 >= 128 goto label08;

        $z1 = r3[c7];

        if $z1 == 0 goto label09;

        return i6;

     label08:
        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c7);

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label09;

        return i6;

     label09:
        i6 = i6 + 1;

        goto label07;

     label10:
        return -1;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String[] split(java.lang.String,java.lang.String,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.lang.String[] split(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r5, $r6, $r7;
        boolean z0;
        java.util.StringTokenizer r2, $r4;
        int i0, i1;
        java.lang.String[] r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, r1);

        r2 = $r4;

        i0 = virtualinvoke r2.<java.util.StringTokenizer: int countTokens()>();

        r3 = newarray (java.lang.String)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        if z0 == 0 goto label2;

        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        r3[i1] = $r7;

        goto label3;

     label2:
        $r5 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r3[i1] = $r5;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r3;
    }

    public static java.lang.String trimStart(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String trimStart(java.lang.String,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.String trimStart(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i2, $i3;
        char c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1);

        if $z0 != 0 goto label2;

        if r1 == null goto label3;

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(c1);

        if $i3 < 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if i0 != 0 goto label4;

        return r0;

     label4:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r2;
    }

    public static java.lang.String trimEnd(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String trimEnd(java.lang.String,java.lang.String)>(r0, null);

        return $r1;
    }

    public static java.lang.String trimEnd(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        char c1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        $i6 = $i5 - i0;

        $i7 = $i6 - 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1);

        if $z0 != 0 goto label2;

        if r1 == null goto label3;

        $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(c1);

        if $i8 < 0 goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if i0 != 0 goto label4;

        return r0;

     label4:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - i0;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        return $r2;
    }

    public static java.lang.String[] splitAndTrim(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        java.lang.String[] $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String[] split(java.lang.String,java.lang.String,boolean)>(r0, r1, 1);

        return $r2;
    }

    public static int[] splitInts(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, r3;
        java.util.StringTokenizer r1, $r4;
        int i0, i1, $i2;
        int[] r2;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ",");

        r1 = $r4;

        i0 = virtualinvoke r1.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (int)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        r2[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static long[] splitLongs(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, r3;
        java.util.StringTokenizer r1, $r4;
        int i0, i1;
        long[] r2;
        long $l2;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.util.StringTokenizer;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ",");

        r1 = $r4;

        i0 = virtualinvoke r1.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (long)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = virtualinvoke r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        r2[i1] = $l2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.String replace(java.lang.String, java.lang.CharSequence, java.lang.CharSequence)
    {
        java.lang.String r0, $r3;
        java.lang.CharSequence r1, r2;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.mail.lib.base.Preconditions: void checkArgument(boolean)>($z0);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r1, r2);

        return $r3;
    }

    public static java.lang.String fixedWidth(java.lang.String, int)
    {
        java.lang.String r0, r3, $r9;
        int i0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        com.android.mail.lib.base.Splitter $r5;
        java.lang.Iterable $r6;
        boolean $z0;
        java.lang.String[] $r7, r11;
        java.lang.Object[] $r8;
        java.lang.Object $r10;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.Splitter NEWLINE_SPLITTER>;

        $r6 = virtualinvoke $r5.<com.android.mail.lib.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);

        r2 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r10;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        $r7 = newarray (java.lang.String)[0];

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        r11 = (java.lang.String[]) $r8;

        $r9 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String fixedWidth(java.lang.String[],int)>(r11, i0);

        return $r9;
    }

    public static java.lang.String fixedWidth(java.lang.String[], int)
    {
        java.lang.String[] r0, r2;
        int i0, i1, i2;
        java.util.ArrayList r1, $r4;
        java.lang.String r3, $r6, $r7;
        com.google.common.base.Joiner $r5;

        r0 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        r2 = r0;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r3 = r2[i2];

        $r7 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String formatLineToFixedWidth(java.lang.String,int)>(r3, i0);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r5 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(char)>(10);

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner: java.lang.String join(java.lang.Iterable)>(r1);

        return $r6;
    }

    private static java.lang.String formatLineToFixedWidth(java.lang.String, int)
    {
        java.lang.String r0, r3, $r7;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.StringBuilder r1, $r4;
        java.util.Iterator r2;
        com.android.mail.lib.base.Splitter $r5;
        java.lang.Iterable $r6;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i3 > i0 goto label1;

        return r0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        i1 = 0;

        $r5 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.Splitter TO_WORDS>;

        $r6 = virtualinvoke $r5.<com.android.mail.lib.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);

        r2 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r8;

        if i1 != 0 goto label3;

        i1 = virtualinvoke r3.<java.lang.String: int length()>();

        goto label5;

     label3:
        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = i1 + $i4;

        i2 = $i5 + 1;

        if i2 > i0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        i1 = i2;

        goto label5;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        i1 = virtualinvoke r3.<java.lang.String: int length()>();

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        goto label2;

     label6:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.util.List fixedSplit(java.lang.String, int)
    {
        java.lang.String r0, r3;
        int i0;
        java.util.ArrayList r1, $r4;
        java.util.Iterator r2;
        com.android.mail.lib.base.Splitter $r5;
        java.lang.Iterable $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = staticinvoke <com.android.mail.lib.base.Splitter: com.android.mail.lib.base.Splitter fixedLength(int)>(i0);

        $r6 = virtualinvoke $r5.<com.android.mail.lib.base.Splitter: java.lang.Iterable split(java.lang.CharSequence)>(r0);

        r2 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r7;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return r1;
    }

    public static java.lang.String indent(java.lang.String, int)
    {
        java.lang.String r0, $r4, $r5;
        int i0, i1;
        java.lang.StringBuilder r1, $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", $r4);

        return $r5;
    }

    public static java.lang.String megastrip(java.lang.String, boolean, boolean, java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4, $r5;
        boolean z0, z1;
        com.android.mail.lib.base.CharMatcher r2;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>(r1);

        if z0 == 0 goto label3;

        if z1 == 0 goto label2;

        $r5 = virtualinvoke r2.<com.android.mail.lib.base.CharMatcher: java.lang.String trimFrom(java.lang.CharSequence)>(r0);

        return $r5;

     label2:
        $r4 = virtualinvoke r2.<com.android.mail.lib.base.CharMatcher: java.lang.String trimLeadingFrom(java.lang.CharSequence)>(r0);

        return $r4;

     label3:
        if z1 == 0 goto label4;

        $r3 = virtualinvoke r2.<com.android.mail.lib.base.CharMatcher: java.lang.String trimTrailingFrom(java.lang.CharSequence)>(r0);

        return $r3;

     label4:
        return r0;
    }

    public static java.lang.String strip(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharMatcher $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher LEGACY_WHITESPACE>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharMatcher: java.lang.String trimFrom(java.lang.CharSequence)>(r0);

     label2:
        return $r2;
    }

    public static java.lang.String stripAndCollapse(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharMatcher $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher LEGACY_WHITESPACE>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharMatcher: java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char)>(r0, 32);

     label2:
        return $r2;
    }

    public static java.lang.String stripPrefix(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String stripPrefixIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean startsWithIgnoreCase(java.lang.String,java.lang.String)>(r0, r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String stripSuffix(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String stripSuffixIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        boolean $z0;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean endsWithIgnoreCase(java.lang.String,java.lang.String)>(r0, r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public static java.lang.String stripNonDigits(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharMatcher $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher JAVA_DIGIT>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharMatcher: java.lang.String retainFrom(java.lang.CharSequence)>(r0);

        return $r2;
    }

    public static int lastIndexNotOf(java.lang.String, java.lang.String, int)
    {
        java.lang.String r0, r1;
        int i0, i1, $i2, $i3, $i5, i6;
        char $c4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        i1 = i6;

     label1:
        if i1 < 0 goto label3;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i5 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($c4);

        if $i5 >= 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    public static java.lang.String replaceChars(java.lang.String, java.lang.CharSequence, char)
    {
        java.lang.String r0, $r3;
        java.lang.CharSequence r1;
        char c0;
        com.android.mail.lib.base.CharMatcher $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.CharSequence;

        c0 := @parameter2: char;

        $r2 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>(r1);

        $r3 = virtualinvoke $r2.<com.android.mail.lib.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>(r0, c0);

        return $r3;
    }

    public static java.lang.String removeChars(java.lang.String, java.lang.CharSequence)
    {
        java.lang.String r0, $r3;
        java.lang.CharSequence r1;
        com.android.mail.lib.base.CharMatcher $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.CharSequence;

        $r2 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>(r1);

        $r3 = virtualinvoke $r2.<com.android.mail.lib.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)>(r0);

        return $r3;
    }

    public static java.lang.String replaceSmartQuotes(java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        com.android.mail.lib.base.CharMatcher $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher FANCY_SINGLE_QUOTE>;

        r1 = virtualinvoke $r2.<com.android.mail.lib.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>(r0, 39);

        $r3 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher FANCY_DOUBLE_QUOTE>;

        $r4 = virtualinvoke $r3.<com.android.mail.lib.base.CharMatcher: java.lang.String replaceFrom(java.lang.CharSequence,char)>(r1, 34);

        return $r4;
    }

    public static byte[] hexToBytes(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        byte[] r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15, $i16, $i17, $i19;
        char c2;
        boolean $z0;
        byte $b11, $b12, $b14, $b18;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i4 = $i3 + 1;

        $i5 = $i4 / 2;

        r1 = newarray (byte)[$i5];

        $i6 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i6 != 0 goto label1;

        return r1;

     label1:
        r1[0] = 0;

        $i7 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i0 = $i7 % 2;

        i1 = 0;

     label2:
        $i8 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i1 >= $i8 goto label6;

        c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1);

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isHex(char)>(c2);

        if $z0 != 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("string contains non-hex chars");

        throw $r2;

     label3:
        $i9 = i0 % 2;

        if $i9 != 0 goto label4;

        $i17 = i0 >> 1;

        $i16 = staticinvoke <com.android.mail.lib.base.StringUtil: int hexValue(char)>(c2);

        $i19 = $i16 << 4;

        $b18 = (byte) $i19;

        r1[$i17] = $b18;

        goto label5;

     label4:
        $i10 = i0 >> 1;

        $b11 = r1[$i10];

        $i13 = staticinvoke <com.android.mail.lib.base.StringUtil: int hexValue(char)>(c2);

        $b12 = (byte) $i13;

        $i15 = $b11 + $b12;

        $b14 = (byte) $i15;

        r1[$i10] = $b14;

     label5:
        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label2;

     label6:
        return r1;
    }

    public static java.lang.String convertEOLToLF(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder r1, $r3;
        char[] r2;
        int i0, i1, i2, $i3, $i4, $i6, $i7, $i8;
        char $c5, $c9;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i3);

        r1 = $r3;

        r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = 0;

        i1 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        $c5 = r2[i2];

        if $c5 != 13 goto label3;

        $i6 = i2 - i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, i0, $i6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $i8 = i2 + 1;

        if $i8 >= i1 goto label2;

        $i7 = i2 + 1;

        $c9 = r2[$i7];

        if $c9 != 10 goto label2;

        i2 = i2 + 1;

     label2:
        i0 = i2 + 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        if i0 != 0 goto label5;

        return r0;

     label5:
        $i4 = i1 - i0;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r2, i0, $i4);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String padLeft(java.lang.String, int, char)
    {
        java.lang.String r0, $r1;
        int i0;
        char c1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        $r1 = staticinvoke <com.android.mail.lib.base.Strings: java.lang.String padStart(java.lang.String,int,char)>(r0, i0, c1);

        return $r1;
    }

    public static java.lang.String padRight(java.lang.String, int, char)
    {
        java.lang.String r0, $r1;
        int i0;
        char c1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        $r1 = staticinvoke <com.android.mail.lib.base.Strings: java.lang.String padEnd(java.lang.String,int,char)>(r0, i0, c1);

        return $r1;
    }

    public static java.lang.String maskLeft(java.lang.String, int, char)
    {
        java.lang.String r0, $r3, $r5;
        int i0, i2, $i3, i4;
        char c1;
        java.lang.StringBuilder r1, $r2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        if i0 > 0 goto label1;

        return r0;

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i2 = 0;

     label2:
        if i2 >= i4 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static boolean isOctal(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 55 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isHex(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 <= 57 goto label3;

     label1:
        if c0 < 97 goto label2;

        if c0 <= 102 goto label3;

     label2:
        if c0 < 65 goto label4;

        if c0 > 70 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    private static int hexValue(char)
    {
        char c0;
        int $i1, $i2, $i3, $i4, $i5;

        c0 := @parameter0: char;

        if c0 < 48 goto label1;

        if c0 > 57 goto label1;

        $i5 = c0 - 48;

        return $i5;

     label1:
        if c0 < 97 goto label2;

        if c0 > 102 goto label2;

        $i3 = c0 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        $i1 = c0 - 65;

        $i2 = $i1 + 10;

        return $i2;
    }

    public static java.lang.String unescapeCString(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, i3, $i4, $i5, $i6, $i8, $i10, $i12, $i13, $i15, $i17, $i18, $i22, $i23, $i24, i25;
        char c2, $c7, $c9, $c11, $c14, $c16, $c19, $c20, $c21;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        $i4 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(92);

        if $i4 >= 0 goto label01;

        return r0;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label21;

        $i5 = i1;

        i1 = i1 + 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        if c2 != 92 goto label20;

        if i1 >= i0 goto label20;

        $i6 = i1;

        i1 = i1 + 1;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        lookupswitch(c2)
        {
            case 34: goto label13;
            case 39: goto label12;
            case 63: goto label11;
            case 92: goto label10;
            case 97: goto label03;
            case 98: goto label04;
            case 102: goto label05;
            case 110: goto label06;
            case 114: goto label07;
            case 116: goto label08;
            case 118: goto label09;
            default: goto label14;
        };

     label03:
        c2 = 7;

        goto label20;

     label04:
        c2 = 8;

        goto label20;

     label05:
        c2 = 12;

        goto label20;

     label06:
        c2 = 10;

        goto label20;

     label07:
        c2 = 13;

        goto label20;

     label08:
        c2 = 9;

        goto label20;

     label09:
        c2 = 11;

        goto label20;

     label10:
        c2 = 92;

        goto label20;

     label11:
        c2 = 63;

        goto label20;

     label12:
        c2 = 39;

        goto label20;

     label13:
        c2 = 34;

        goto label20;

     label14:
        if c2 != 120 goto label16;

        if i1 >= i0 goto label16;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z3 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isHex(char)>($c16);

        if $z3 == 0 goto label16;

        $i18 = i1;

        i1 = i1 + 1;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i18);

        i3 = staticinvoke <com.android.mail.lib.base.StringUtil: int hexValue(char)>($c20);

        if i1 >= i0 goto label15;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z4 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isHex(char)>($c19);

        if $z4 == 0 goto label15;

        $i24 = i3 * 16;

        $i23 = i1;

        i1 = i1 + 1;

        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i23);

        $i22 = staticinvoke <com.android.mail.lib.base.StringUtil: int hexValue(char)>($c21);

        i3 = $i24 + $i22;

     label15:
        c2 = (char) i3;

        goto label20;

     label16:
        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isOctal(char)>(c2);

        if $z0 == 0 goto label19;

        i25 = c2 - 48;

        if i1 >= i0 goto label17;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z2 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isOctal(char)>($c11);

        if $z2 == 0 goto label17;

        $i15 = i25 * 8;

        $i13 = i1;

        i1 = i1 + 1;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i13);

        $i17 = $c14 - 48;

        i25 = $i15 + $i17;

     label17:
        if i1 >= i0 goto label18;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isOctal(char)>($c7);

        if $z1 == 0 goto label18;

        $i10 = i25 * 8;

        $i8 = i1;

        i1 = i1 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $i12 = $c9 - 48;

        i25 = $i10 + $i12;

     label18:
        c2 = (char) i25;

        goto label20;

     label19:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

     label20:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label02;

     label21:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String unescapeMySQLString(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, $r6, $r7, $r11, $r15;
        char[] r1;
        int i0, i2, $i3, $i4, $i5, $i8, $i10, $i11, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i27, $i28, $i30;
        byte b1;
        java.lang.IllegalArgumentException $r2, $r8, $r14;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r10, $r12, $r13, $r16, $r17;
        char $c6, $c7, $c9, $c12, $c13, $c14, $c16, $c25, $c26, $c29, $c31, $c32, $c33;

        r0 := @parameter0: java.lang.String;

        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i3 = lengthof r1;

        if $i3 < 2 goto label01;

        $c7 = r1[0];

        $i4 = lengthof r1;

        $i5 = $i4 - 1;

        $c6 = r1[$i5];

        if $c7 != $c6 goto label01;

        $c9 = r1[0];

        if $c9 == 39 goto label02;

        $c33 = r1[0];

        if $c33 == 34 goto label02;

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a valid MySQL string: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label02:
        i0 = 1;

        b1 = 0;

        i2 = 1;

     label03:
        $i8 = lengthof r1;

        $i10 = $i8 - 1;

        if i2 >= $i10 goto label21;

        if b1 != 0 goto label06;

        $c26 = r1[i2];

        if $c26 != 92 goto label04;

        b1 = 1;

        goto label20;

     label04:
        $c31 = r1[i2];

        $c32 = r1[0];

        if $c31 != $c32 goto label05;

        b1 = 2;

        goto label20;

     label05:
        $i30 = i0;

        i0 = i0 + 1;

        $c29 = r1[i2];

        r1[$i30] = $c29;

        goto label20;

     label06:
        if b1 != 1 goto label18;

        $c16 = r1[i2];

        lookupswitch($c16)
        {
            case 34: goto label09;
            case 39: goto label08;
            case 48: goto label07;
            case 92: goto label15;
            case 98: goto label10;
            case 110: goto label11;
            case 114: goto label12;
            case 116: goto label13;
            case 122: goto label14;
            default: goto label16;
        };

     label07:
        $i21 = i0;

        i0 = i0 + 1;

        r1[$i21] = 0;

        goto label17;

     label08:
        $i22 = i0;

        i0 = i0 + 1;

        r1[$i22] = 39;

        goto label17;

     label09:
        $i27 = i0;

        i0 = i0 + 1;

        r1[$i27] = 34;

        goto label17;

     label10:
        $i23 = i0;

        i0 = i0 + 1;

        r1[$i23] = 8;

        goto label17;

     label11:
        $i18 = i0;

        i0 = i0 + 1;

        r1[$i18] = 10;

        goto label17;

     label12:
        $i17 = i0;

        i0 = i0 + 1;

        r1[$i17] = 13;

        goto label17;

     label13:
        $i20 = i0;

        i0 = i0 + 1;

        r1[$i20] = 9;

        goto label17;

     label14:
        $i19 = i0;

        i0 = i0 + 1;

        r1[$i19] = 26;

        goto label17;

     label15:
        $i24 = i0;

        i0 = i0 + 1;

        r1[$i24] = 92;

        goto label17;

     label16:
        $i28 = i0;

        i0 = i0 + 1;

        $c25 = r1[i2];

        r1[$i28] = $c25;

     label17:
        b1 = 0;

        goto label20;

     label18:
        $c12 = r1[i2];

        $c13 = r1[0];

        if $c12 == $c13 goto label19;

        $r14 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a valid MySQL string: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label19:
        $i15 = i0;

        i0 = i0 + 1;

        $c14 = r1[0];

        r1[$i15] = $c14;

        b1 = 0;

     label20:
        i2 = i2 + 1;

        goto label03;

     label21:
        if b1 == 0 goto label22;

        $r8 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a valid MySQL string: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label22:
        $r7 = new java.lang.String;

        $i11 = i0 - 1;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>(r1, 1, $i11);

        return $r7;
    }

    public static final java.lang.String unescapeHTML(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String unescapeHTML(java.lang.String,boolean)>(r0, 0);

        return $r1;
    }

    public static final java.lang.String unescapeHTML(java.lang.String, boolean)
    {
        java.lang.String r0, $r4, $r5, $r8, $r9, r14;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, z7;
        int i0, i1, i2, i3, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i22, $i24, $i27, $i28, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i42, $i43;
        char[] r1, r2;
        char c4, c5, $c8, $c15, $c21, $c23, $c25, $c29, $c38, $c39, $c40, $c41;
        java.lang.Character r3, $r10;
        java.util.Map $r6;
        java.lang.Object $r7;
        byte $b26, $b30;
        java.util.Set $r11;
        java.lang.NumberFormatException $r12;
        long l44;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(38);

        if i0 != -1 goto label01;

        return r0;

     label01:
        r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i7 = lengthof r1;

        r2 = newarray (char)[$i7];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

        i1 = i0;

        i2 = i0;

     label02:
        $i6 = lengthof r1;

        if i2 >= $i6 goto label22;

        $c8 = r1[i2];

        if $c8 == 38 goto label03;

        $i42 = i1;

        i1 = i1 + 1;

        $i43 = i2;

        i2 = i2 + 1;

        $c39 = r1[$i43];

        r2[$i42] = $c39;

        goto label02;

     label03:
        i3 = i2 + 1;

        z1 = 0;

        $i10 = lengthof r1;

        if i3 >= $i10 goto label04;

        $c41 = r1[i3];

        if $c41 != 35 goto label04;

        i3 = i3 + 1;

        z1 = 1;

     label04:
        z2 = 0;

        $i9 = lengthof r1;

        if i3 >= $i9 goto label06;

        $c38 = r1[i3];

        if $c38 == 120 goto label05;

        $c40 = r1[i3];

        if $c40 != 88 goto label06;

     label05:
        i3 = i3 + 1;

        z2 = 1;

     label06:
        $i12 = lengthof r1;

        if i3 >= $i12 goto label10;

        c4 = r1[i3];

        z3 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c4);

        if z1 == 0 goto label08;

        if z2 != 0 goto label07;

        if z3 != 0 goto label07;

        goto label10;

     label07:
        if z2 == 0 goto label08;

        if z3 != 0 goto label08;

        $r11 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r10 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c4);

        $z6 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z6 != 0 goto label08;

        goto label10;

     label08:
        if z3 != 0 goto label09;

        $z5 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c4);

        if $z5 != 0 goto label09;

        goto label10;

     label09:
        i3 = i3 + 1;

        goto label06;

     label10:
        z7 = 0;

        $i11 = lengthof r1;

        if i3 > $i11 goto label11;

        if z0 != 0 goto label12;

     label11:
        $i14 = lengthof r1;

        if i3 >= $i14 goto label20;

        $c15 = r1[i3];

        if $c15 != 59 goto label20;

     label12:
        $i17 = i2 + 2;

        $i18 = lengthof r1;

        if $i17 >= $i18 goto label18;

        $i22 = i2 + 1;

        $c23 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i22);

        if $c23 != 35 goto label18;

     label13:
        l44 = 0L;

        $i27 = i2 + 2;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i27);

        if z2 == 0 goto label14;

        $r9 = new java.lang.String;

        $i37 = i2 + 3;

        $i36 = i3 - i2;

        $i35 = $i36 - 3;

        specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>(r1, $i37, $i35);

        l44 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r9, 16);

        goto label15;

     label14:
        $z4 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c5);

        if $z4 == 0 goto label15;

        $r8 = new java.lang.String;

        $i32 = i2 + 2;

        $i34 = i3 - i2;

        $i33 = $i34 - 2;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>(r1, $i32, $i33);

        l44 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

     label15:
        $b26 = l44 cmp 0L;

        if $b26 <= 0 goto label16;

        $b30 = l44 cmp 65536L;

        if $b30 >= 0 goto label16;

        $i31 = i1;

        i1 = i1 + 1;

        $i28 = (int) l44;

        $c29 = (char) $i28;

        r2[$i31] = $c29;

        z7 = 1;

     label16:
        goto label19;

     label17:
        $r12 := @caughtexception;

        goto label19;

     label18:
        $r5 = new java.lang.String;

        $i19 = i3 - i2;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>(r1, i2, $i19);

        r14 = $r5;

        $r6 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r14);

        r3 = (java.lang.Character) $r7;

        if r3 == null goto label19;

        $i24 = i1;

        i1 = i1 + 1;

        $c25 = virtualinvoke r3.<java.lang.Character: char charValue()>();

        r2[$i24] = $c25;

        z7 = 1;

     label19:
        $i20 = lengthof r1;

        if i3 >= $i20 goto label20;

        $c21 = r1[i3];

        if $c21 != 59 goto label20;

        i3 = i3 + 1;

     label20:
        if z7 != 0 goto label21;

        $i13 = i3 - i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i2, r2, i1, $i13);

        $i16 = i3 - i2;

        i1 = i1 + $i16;

     label21:
        i2 = i3;

        goto label02;

     label22:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i1);

        return $r4;

        catch java.lang.NumberFormatException from label13 to label16 with label17;
    }

    public static java.lang.String stripHtmlTags(java.lang.String)
    {
        java.lang.String r0, r1, $r2, $r6;
        boolean $z0;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        com.android.mail.lib.base.CharEscaper $r5;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r2 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        return r0;

     label2:
        $r3 = <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern htmlTagPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        r1 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r5 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper LT_GT_ESCAPE>;

        $r6 = virtualinvoke $r5.<com.android.mail.lib.base.CharEscaper: java.lang.String escape(java.lang.String)>(r1);

        return $r6;
    }

    public static java.lang.String javaScriptEscape(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String javaScriptEscapeHelper(java.lang.CharSequence,boolean)>(r0, 0);

        return $r1;
    }

    public static java.lang.String javaScriptEscapeToAscii(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String javaScriptEscapeHelper(java.lang.CharSequence,boolean)>(r0, 1);

        return $r1;
    }

    private static java.lang.String javaScriptEscapeHelper(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        boolean z0;
        java.lang.StringBuilder r1, $r3;
        java.io.IOException r2, $r6;
        int $i0, $i1, $i2;
        com.android.mail.lib.base.StringUtil$JsEscapingMode $r4;
        java.lang.String $r5;
        java.lang.RuntimeException $r7;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $r3 = new java.lang.StringBuilder;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i1 = $i0 * 9;

        $i2 = $i1 / 8;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i2);

        r1 = $r3;

     label1:
        $r4 = <com.android.mail.lib.base.StringUtil$JsEscapingMode: com.android.mail.lib.base.StringUtil$JsEscapingMode EMBEDDABLE_JS>;

        staticinvoke <com.android.mail.lib.base.StringUtil: void escapeStringBody(java.lang.CharSequence,boolean,com.android.mail.lib.base.StringUtil$JsEscapingMode,java.lang.Appendable)>(r0, z0, $r4, r1);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

     label4:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void escapeStringBody(java.lang.CharSequence, boolean, com.android.mail.lib.base.StringUtil$JsEscapingMode, java.lang.Appendable) throws java.io.IOException
    {
        java.lang.CharSequence r0;
        boolean z0, z1, $z2, $z3, $z4;
        com.android.mail.lib.base.StringUtil$JsEscapingMode r1, $r5, $r7, $r8;
        java.lang.Appendable r2, $r9;
        int i0, i1, i2, i3, i4, $i6, $i8;
        char $c5, $c7, $c9, $c10;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.mail.lib.base.StringUtil$JsEscapingMode;

        r2 := @parameter3: java.lang.Appendable;

        i0 = 0;

        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i4 = 0;

     label01:
        if i4 >= i1 goto label18;

        i2 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(r0, i4);

        i3 = staticinvoke <java.lang.Character: int charCount(int)>(i2);

        $z2 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean shouldEscapeChar(int,boolean,com.android.mail.lib.base.StringUtil$JsEscapingMode)>(i2, z0, r1);

        if $z2 != 0 goto label02;

        goto label17;

     label02:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(r0, i0, i4);

        i0 = i4 + i3;

        lookupswitch(i2)
        {
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label09;
            case 39: goto label09;
            case 92: goto label08;
            default: goto label11;
        };

     label03:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\b");

        goto label17;

     label04:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\t");

        goto label17;

     label05:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\n");

        goto label17;

     label06:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\f");

        goto label17;

     label07:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\r");

        goto label17;

     label08:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\\\");

        goto label17;

     label09:
        $r5 = <com.android.mail.lib.base.StringUtil$JsEscapingMode: com.android.mail.lib.base.StringUtil$JsEscapingMode JSON>;

        if r1 != $r5 goto label10;

        if 39 != i2 goto label10;

        $c10 = (char) i2;

        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c10);

        goto label17;

     label10:
        $r8 = <com.android.mail.lib.base.StringUtil$JsEscapingMode: com.android.mail.lib.base.StringUtil$JsEscapingMode EMBEDDABLE_JS>;

        if r1 == $r8 goto label11;

        $r9 = interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(char)>(92);

        $c9 = (char) i2;

        interfaceinvoke $r9.<java.lang.Appendable: java.lang.Appendable append(char)>($c9);

        goto label17;

     label11:
        if i2 >= 256 goto label12;

        $r7 = <com.android.mail.lib.base.StringUtil$JsEscapingMode: com.android.mail.lib.base.StringUtil$JsEscapingMode JSON>;

        if r1 != $r7 goto label13;

     label12:
        staticinvoke <com.android.mail.lib.base.StringUtil: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>(i2, r2);

        goto label17;

     label13:
        $i6 = i4 + i3;

        if $i6 >= i1 goto label14;

        $i8 = i4 + i3;

        $c7 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>($i8);

        $z4 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isOctal(char)>($c7);

        if $z4 == 0 goto label15;

     label14:
        $z3 = 1;

        goto label16;

     label15:
        $z3 = 0;

     label16:
        z1 = $z3;

        $c5 = (char) i2;

        staticinvoke <com.android.mail.lib.base.StringUtil: void appendOctalJavaScriptRepresentation(char,boolean,java.lang.Appendable)>($c5, z1, r2);

     label17:
        i4 = i4 + i3;

        goto label01;

     label18:
        interfaceinvoke r2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(r0, i0, i1);

        return;
    }

    private static boolean shouldEscapeChar(int, boolean, com.android.mail.lib.base.StringUtil$JsEscapingMode)
    {
        int i0;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.mail.lib.base.StringUtil$JsEscapingMode r0, $r1;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0 := @parameter2: com.android.mail.lib.base.StringUtil$JsEscapingMode;

        if z0 == 0 goto label2;

        if i0 < 32 goto label1;

        if i0 <= 126 goto label2;

     label1:
        return 1;

     label2:
        $r1 = <com.android.mail.lib.base.StringUtil$JsEscapingMode: com.android.mail.lib.base.StringUtil$JsEscapingMode JSON>;

        if r0 != $r1 goto label6;

        $z2 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean mustEscapeCharInJsonString(int)>(i0);

        if $z2 != 0 goto label3;

        $z3 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean mustEscapeCharInJsString(int)>(i0);

        if $z3 == 0 goto label4;

     label3:
        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        return $z4;

     label6:
        $z1 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean mustEscapeCharInJsString(int)>(i0);

        return $z1;
    }

    private static void appendHexJavaScriptRepresentation(int, java.lang.Appendable) throws java.io.IOException
    {
        int i0, $i1, $i2, $i4, $i5, $i7, $i8, $i10;
        java.lang.Appendable r0, $r2, $r4, $r6, $r8;
        char[] r1, $r3, $r5, $r7, $r9;
        boolean $z0;
        char $c3, $c6, $c9, $c11, $c12, $c13;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.Appendable;

        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>(i0);

        if $z0 == 0 goto label1;

        r1 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0);

        $c12 = r1[0];

        staticinvoke <com.android.mail.lib.base.StringUtil: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($c12, r0);

        $c13 = r1[1];

        staticinvoke <com.android.mail.lib.base.StringUtil: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>($c13, r0);

        return;

     label1:
        $r2 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\u");

        $r3 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $i1 = i0 >>> 12;

        $i2 = $i1 & 15;

        $c3 = $r3[$i2];

        $r4 = interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

        $r5 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $i4 = i0 >>> 8;

        $i5 = $i4 & 15;

        $c6 = $r5[$i5];

        $r6 = interfaceinvoke $r4.<java.lang.Appendable: java.lang.Appendable append(char)>($c6);

        $r7 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $i7 = i0 >>> 4;

        $i8 = $i7 & 15;

        $c9 = $r7[$i8];

        $r8 = interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(char)>($c9);

        $r9 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $i10 = i0 & 15;

        $c11 = $r9[$i10];

        interfaceinvoke $r8.<java.lang.Appendable: java.lang.Appendable append(char)>($c11);

        return;
    }

    private static void appendOctalJavaScriptRepresentation(char, boolean, java.lang.Appendable) throws java.io.IOException
    {
        char c0, $c1, $c2, $c3, $c4, $c5, $c6, $c7, $c8, $c9, $c10, $c11, $c12, $c13, $c14, $c15;
        boolean z0;
        java.lang.Appendable r0, $r1, $r3, $r5, $r8, $r10, $r13;
        char[] $r2, $r4, $r6, $r9, $r12, $r14;

        c0 := @parameter0: char;

        z0 := @parameter1: boolean;

        r0 := @parameter2: java.lang.Appendable;

        if c0 >= 64 goto label1;

        if z0 == 0 goto label2;

     label1:
        $r1 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(92);

        $r2 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c1 = c0 >>> 6;

        $c2 = $c1 & 7;

        $c3 = $r2[$c2];

        $r3 = interfaceinvoke $r1.<java.lang.Appendable: java.lang.Appendable append(char)>($c3);

        $r4 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c4 = c0 >>> 3;

        $c5 = $c4 & 7;

        $c6 = $r4[$c5];

        $r5 = interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(char)>($c6);

        $r6 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c7 = c0 & 7;

        $c8 = $r6[$c7];

        interfaceinvoke $r5.<java.lang.Appendable: java.lang.Appendable append(char)>($c8);

        goto label4;

     label2:
        if c0 < 8 goto label3;

        $r10 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(92);

        $r12 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c12 = c0 >>> 3;

        $c11 = $c12 & 7;

        $c13 = $r12[$c11];

        $r13 = interfaceinvoke $r10.<java.lang.Appendable: java.lang.Appendable append(char)>($c13);

        $r14 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c14 = c0 & 7;

        $c15 = $r14[$c14];

        interfaceinvoke $r13.<java.lang.Appendable: java.lang.Appendable append(char)>($c15);

        goto label4;

     label3:
        $r8 = interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(char)>(92);

        $r9 = <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS>;

        $c9 = c0 & 7;

        $c10 = $r9[$c9];

        interfaceinvoke $r8.<java.lang.Appendable: java.lang.Appendable append(char)>($c10);

     label4:
        return;
    }

    public static void appendHexJavaScriptRepresentation(java.lang.StringBuilder, char)
    {
        java.lang.StringBuilder r0;
        char c0;
        java.io.IOException r1, $r2;
        java.lang.RuntimeException $r3;

        r0 := @parameter0: java.lang.StringBuilder;

        c0 := @parameter1: char;

     label1:
        staticinvoke <com.android.mail.lib.base.StringUtil: void appendHexJavaScriptRepresentation(int,java.lang.Appendable)>(c0, r0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String javaScriptUnescape(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.lang.StringBuilder r1, $r2;
        int i0, $i2, $i3, $i4;
        char c1;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        r1 = $r2;

        i0 = 0;

     label1:
        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i3 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if c1 != 92 goto label2;

        $i4 = i0 + 1;

        i0 = staticinvoke <com.android.mail.lib.base.StringUtil: int javaScriptUnescapeHelper(java.lang.String,int,java.lang.StringBuilder)>(r0, $i4, r1);

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        i0 = i0 + 1;

     label3:
        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static int javaScriptUnescapeHelper(java.lang.String, int, java.lang.StringBuilder)
    {
        java.lang.String r0, r2, $r11, $r25, $r26, $r37, $r38, $r52;
        int i0, i2, $i5, $i6, $i9, $i11, $i12, $i13, $i14, i17, i18, i19;
        java.lang.StringBuilder r1, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r48, $r49, $r50, $r51;
        char c1, $c7, $c10, $c16;
        byte b3, b4, $b8, $b15;
        boolean $z0;
        java.lang.IllegalArgumentException $r16, $r22, $r32, $r47;
        java.lang.IndexOutOfBoundsException $r33;
        java.lang.NumberFormatException $r46;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.StringBuilder;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 < $i5 goto label01;

        $r22 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End-of-string after escape character in [");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r22;

     label01:
        i17 = i0 + 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        lookupswitch(c1)
        {
            case 34: goto label07;
            case 39: goto label07;
            case 48: goto label08;
            case 49: goto label08;
            case 50: goto label08;
            case 51: goto label08;
            case 52: goto label08;
            case 53: goto label08;
            case 54: goto label08;
            case 55: goto label08;
            case 62: goto label07;
            case 92: goto label07;
            case 98: goto label05;
            case 102: goto label06;
            case 110: goto label02;
            case 114: goto label03;
            case 116: goto label04;
            case 117: goto label13;
            case 120: goto label13;
            default: goto label23;
        };

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label24;

     label03:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label24;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label24;

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label24;

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label24;

     label07:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label24;

     label08:
        i18 = i17 + -1;

        i2 = 1;

        if c1 >= 52 goto label09;

        $b15 = 3;

        goto label10;

     label09:
        $b15 = 2;

     label10:
        b3 = $b15;

     label11:
        if i2 >= b3 goto label12;

        $i12 = i18 + i2;

        $i14 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i12 >= $i14 goto label12;

        $i13 = i18 + i2;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i13);

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isOctal(char)>($c16);

        if $z0 == 0 goto label12;

        i2 = i2 + 1;

        goto label11;

     label12:
        $i9 = i18 + i2;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i18, $i9);

        $i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r11, 8);

        $c10 = (char) $i11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        i17 = i18 + i2;

        goto label24;

     label13:
        if c1 != 117 goto label14;

        $b8 = 4;

        goto label15;

     label14:
        $b8 = 2;

     label15:
        b4 = $b8;

     label16:
        $i6 = i17 + b4;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i17, $i6);

     label17:
        goto label19;

     label18:
        $r33 := @caughtexception;

        $r32 = new java.lang.IllegalArgumentException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid unicode sequence [");

        $r37 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i17);

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] at index ");

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r41 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in [");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r38);

        throw $r32;

     label19:
        i19 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r2, 16);

     label20:
        goto label22;

     label21:
        $r46 := @caughtexception;

        $r47 = new java.lang.IllegalArgumentException;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid unicode sequence [");

        $r42 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] at index ");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in [");

        $r50 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r52);

        throw $r47;

     label22:
        $c7 = (char) i19;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c7);

        i17 = i17 + b4;

        goto label24;

     label23:
        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown escape code [");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] at index ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i17);

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in [");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r16;

     label24:
        return i17;

        catch java.lang.IndexOutOfBoundsException from label16 to label17 with label18;
        catch java.lang.NumberFormatException from label19 to label20 with label21;
    }

    public static java.lang.String xmlCDataEscape(java.lang.String)
    {
        java.lang.String r0, $r4, $r7, $r9, r10;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder r1, $r3;
        com.android.mail.lib.base.CharMatcher $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher CONTROL_MATCHER>;

        r10 = virtualinvoke $r2.<com.android.mail.lib.base.CharMatcher: java.lang.String removeFrom(java.lang.CharSequence)>(r0);

        i0 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>("]]>");

        if i0 != -1 goto label1;

        return r10;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        i1 = 0;

     label2:
        $i2 = i0 + 3;

        $r4 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(i1, $i2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]]&gt;<![CDATA[");

        i1 = i0 + 3;

        $i3 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String,int)>("]]>", i1);

        i0 = $i3;

        if $i3 != -1 goto label2;

        $r7 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>(i1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public static java.lang.String javaEscape(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharEscaper $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper JAVA_ESCAPE>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharEscaper: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String regexEscape(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharEscaper $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper REGEX_ESCAPE>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharEscaper: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    public static java.util.LinkedList string2List(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        java.util.LinkedList r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r2 = $r3;

        staticinvoke <com.android.mail.lib.base.StringUtil: java.util.Collection string2Collection(java.lang.String,java.lang.String,boolean,java.util.Collection)>(r0, r1, z0, r2);

        return r2;
    }

    public static java.util.Set string2Set(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        java.util.HashSet r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r2 = $r3;

        staticinvoke <com.android.mail.lib.base.StringUtil: java.util.Collection string2Collection(java.lang.String,java.lang.String,boolean,java.util.Collection)>(r0, r1, z0, r2);

        return r2;
    }

    public static java.util.Collection string2Collection(java.lang.String, java.lang.String, boolean, java.util.Collection)
    {
        java.lang.String r0, r1, r3, r5;
        boolean z0;
        java.util.Collection r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 := @parameter3: java.util.Collection;

        if r0 != null goto label01;

        return null;

     label01:
        if r2 != null goto label02;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

     label02:
        if r1 == null goto label03;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label04;

     label03:
        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r0);

        return r2;

     label04:
        i0 = 0;

     label05:
        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>(r1, i0);

        i1 = $i3;

        if $i3 < 0 goto label09;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        if z0 == 0 goto label06;

        r3 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>(r3);

     label06:
        if z0 == 0 goto label07;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i5 <= 0 goto label08;

     label07:
        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r3);

     label08:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = i1 + $i6;

        goto label05;

     label09:
        r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        if z0 == 0 goto label10;

        r5 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>(r5);

     label10:
        if z0 == 0 goto label11;

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i4 <= 0 goto label12;

     label11:
        interfaceinvoke r2.<java.util.Collection: boolean add(java.lang.Object)>(r5);

     label12:
        return r2;
    }

    public static java.util.HashMap string2Map(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        java.util.HashMap $r3, $r5;
        java.util.Map $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = staticinvoke <com.android.mail.lib.base.StringUtil: java.util.Map stringToMapImpl(java.util.Map,java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, r0, r1, r2, z0);

        $r5 = (java.util.HashMap) $r4;

        return $r5;
    }

    public static java.util.Map stringToOrderedMap(java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, r2;
        boolean z0;
        java.util.LinkedHashMap $r3;
        java.util.Map $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.util.LinkedHashMap;

        specialinvoke $r3.<java.util.LinkedHashMap: void <init>()>();

        $r4 = staticinvoke <com.android.mail.lib.base.StringUtil: java.util.Map stringToMapImpl(java.util.Map,java.lang.String,java.lang.String,java.lang.String,boolean)>($r3, r0, r1, r2, z0);

        return $r4;
    }

    private static java.util.Map stringToMapImpl(java.util.Map, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.util.Map r0;
        java.lang.String r1, r2, r3, r5, r6, $r7, $r12, $r13, $r14;
        boolean z0, $z1, $z2, $z3;
        java.util.Iterator r4;
        int i0, i1, $i2;
        java.util.LinkedList $r9;
        java.lang.Object $r10;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $z1 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isEmpty(java.lang.String)>(r2);

        if $z1 != 0 goto label1;

        $z2 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isEmpty(java.lang.String)>(r3);

        if $z2 == 0 goto label2;

     label1:
        $r7 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>(r1);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, "");

        return r0;

     label2:
        $r9 = staticinvoke <com.android.mail.lib.base.StringUtil: java.util.LinkedList string2List(java.lang.String,java.lang.String,boolean)>(r1, r2, 0);

        r4 = virtualinvoke $r9.<java.util.LinkedList: java.util.Iterator iterator()>();

        i0 = virtualinvoke r3.<java.lang.String: int length()>();

     label3:
        $z3 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r10;

        i1 = virtualinvoke r5.<java.lang.String: int indexOf(java.lang.String)>(r3);

        if i1 <= 0 goto label5;

        $i2 = i1 + i0;

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i2);

        if z0 == 0 goto label4;

        r6 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>(r6);

     label4:
        $r14 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r13 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>($r14);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r6);

        goto label6;

     label5:
        $r12 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String strip(java.lang.String)>(r5);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, "");

     label6:
        goto label3;

     label7:
        return r0;
    }

    public static java.lang.String map2String(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map r0;
        java.lang.String r1, r2, $r6;
        com.google.common.base.Joiner $r3, $r4;
        com.google.common.base.Joiner$MapJoiner $r5;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r3 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<com.google.common.base.Joiner: com.google.common.base.Joiner useForNull(java.lang.String)>("null");

        $r5 = virtualinvoke $r4.<com.google.common.base.Joiner: com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<com.google.common.base.Joiner$MapJoiner: java.lang.String join(java.util.Map)>(r0);

     label2:
        return $r6;
    }

    public static java.util.Map lowercaseKeys(java.util.Map)
    {
        java.util.Map r0;
        java.util.HashMap r1, $r5;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.String r4, $r9, $r10;
        int $i0;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r8, $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @parameter0: java.util.Map;

        $r5 = new java.util.HashMap;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>($i0);

        r1 = $r5;

        $r6 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r7;

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r8;

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = interfaceinvoke r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r9);

        if $z1 == 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Duplicate string key in map when lower casing");

        throw $r12;

     label2:
        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);

        goto label1;

     label3:
        return r1;
    }

    public static java.lang.String collapseWhitespace(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharMatcher $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r1 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher LEGACY_WHITESPACE>;

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharMatcher: java.lang.String collapseFrom(java.lang.CharSequence,char)>(r0, 32);

     label2:
        return $r2;
    }

    public static java.lang.String collapse(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, $r5;
        java.lang.StringBuilder r3, $r4;
        boolean z0;
        char c0;
        int i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r3 = $r4;

        z0 = 0;

        i1 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label6;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(c0);

        if $i3 == -1 goto label4;

        if z0 == 0 goto label3;

        goto label5;

     label3:
        z0 = 1;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        goto label5;

     label4:
        z0 = 0;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r5 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String collapseControlChars(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4;
        java.lang.StringBuilder r2, $r3;
        boolean z0, $z1;
        char c0;
        int i1, $i2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        z0 = 0;

        i1 = 0;

     label2:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label6;

        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(c0);

        if $z1 == 0 goto label4;

        if z0 == 0 goto label3;

        goto label5;

     label3:
        z0 = 1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        goto label5;

     label4:
        z0 = 0;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String stream2String(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, i2, $i3;
        byte[] r1;
        java.io.StringWriter r2, $r3;
        java.lang.String $r4, $r5;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r1 = newarray (byte)[4096];

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        r2 = $r3;

        i1 = 0;

        i2 = 0;

     label1:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int)>(r1, 0, i2);

        virtualinvoke r2.<java.io.StringWriter: void write(java.lang.String)>($r4);

        i1 = i1 + i2;

        $i3 = lengthof r1;

        i2 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, 0, $i3);

        if -1 == i0 goto label2;

        if i1 >= i0 goto label3;

     label2:
        if i2 != -1 goto label1;

     label3:
        $r5 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String[] parseDelimitedList(java.lang.String, char)
    {
        java.lang.String r0, r1, r4, r6, $r14, $r21;
        char c0;
        java.util.StringTokenizer r2, $r10;
        java.util.ArrayList r3, $r17;
        java.lang.StringBuilder r5, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16;
        java.lang.String[] $r18, $r19;
        boolean $z0, $z1, $z3;
        java.lang.Object[] $r20;
        int $i1;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.util.StringTokenizer;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r14, r1, 1);

        r2 = $r10;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r3 = $r17;

        r4 = "";

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        r5 = $r16;

     label1:
        $z0 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        if r4 == null goto label4;

        $z1 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label4;

        r6 = null;

        goto label4;

     label2:
        $i1 = virtualinvoke r5.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label3;

        $r21 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

     label3:
        virtualinvoke r5.<java.lang.StringBuilder: void setLength(int)>(0);

     label4:
        r4 = r6;

        goto label1;

     label5:
        $r18 = newarray (java.lang.String)[0];

        $r20 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r18);

        $r19 = (java.lang.String[]) $r20;

        return $r19;
    }

    public static int compareToIgnoreCase(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1;
        boolean z0;
        int $i0;
        byte $b1, $b2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if r0 != r1 goto label1;

        return 0;

     label1:
        if r0 != null goto label4;

        if z0 == 0 goto label2;

        $b2 = 1;

        goto label3;

     label2:
        $b2 = -1;

     label3:
        return $b2;

     label4:
        if r1 != null goto label7;

        if z0 == 0 goto label5;

        $b1 = -1;

        goto label6;

     label5:
        $b1 = 1;

     label6:
        return $b1;

     label7:
        $i0 = virtualinvoke r0.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r1);

        return $i0;
    }

    public static java.lang.String lastToken(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3;
        com.android.mail.lib.base.CharMatcher $r2;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>(r1);

        $i0 = virtualinvoke $r2.<com.android.mail.lib.base.CharMatcher: int lastIndexIn(java.lang.CharSequence)>(r0);

        $i1 = $i0 + 1;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r3;
    }

    public static boolean containsCharRef(java.lang.String)
    {
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern characterReferencePattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    public static boolean isHebrew(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i2 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isHebrew(int)>($i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isHebrew(int)
    {
        int i0;
        java.lang.Character$UnicodeBlock $r0, $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HEBREW>;

        $r1 = staticinvoke <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(int)>(i0);

        $z0 = virtualinvoke $r0.<java.lang.Character$UnicodeBlock: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean isCjk(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $i2 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i1);

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isCjk(int)>($i2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isCjk(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <com.android.mail.lib.base.StringUtil: boolean isCjk(int)>(c0);

        return $z0;
    }

    public static boolean isCjk(int)
    {
        int i0, $i1;
        java.util.Set $r0;
        java.lang.Character$UnicodeBlock $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & -256;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r0 = <com.android.mail.lib.base.StringUtil: java.util.Set CJK_BLOCKS>;

        $r1 = staticinvoke <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(int)>(i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public static int displayWidth(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1, i2, $i4;
        char $c3;

        r0 := @parameter0: java.lang.String;

        i0 = 0;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i4 = staticinvoke <com.android.mail.lib.base.StringUtil: int displayWidth(char)>($c3);

        i0 = i0 + $i4;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    public static int displayWidth(char)
    {
        char c0;

        c0 := @parameter0: char;

        if c0 <= 1273 goto label09;

        if c0 == 1470 goto label09;

        if c0 < 1488 goto label01;

        if c0 <= 1514 goto label09;

     label01:
        if c0 == 1523 goto label09;

        if c0 == 1524 goto label09;

        if c0 < 1536 goto label02;

        if c0 <= 1791 goto label09;

     label02:
        if c0 < 1872 goto label03;

        if c0 <= 1919 goto label09;

     label03:
        if c0 < 64336 goto label04;

        if c0 <= 65023 goto label09;

     label04:
        if c0 < 65136 goto label05;

        if c0 <= 65279 goto label09;

     label05:
        if c0 < 7680 goto label06;

        if c0 <= 8367 goto label09;

     label06:
        if c0 < 8448 goto label07;

        if c0 <= 8506 goto label09;

     label07:
        if c0 < 3584 goto label08;

        if c0 <= 3711 goto label09;

     label08:
        if c0 < 65377 goto label10;

        if c0 > 65500 goto label10;

     label09:
        return 1;

     label10:
        return 2;
    }

    public static java.lang.String toString(float[])
    {
        float[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r5;
        float $f0;

        r0 := @parameter0: float[];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label4;

        $f0 = r0[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if i0 == $i3 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(long[])
    {
        long[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i3, $i4;
        java.lang.String $r5;
        long $l2;

        r0 := @parameter0: long[];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label4;

        $l2 = r0[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        if i0 == $i4 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(int[])
    {
        int[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5;

        r0 := @parameter0: int[];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label4;

        $i2 = r0[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        if i0 == $i4 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1, $r2, $r6, $r8;
        int i0, $i1, $i2, $i3;
        java.lang.String $r5, $r7;

        r0 := @parameter0: java.lang.String[];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label4;

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = r0[i0];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if i0 == $i3 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 + 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(int[][])
    {
        int[][] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r5;
        int[] $r7, $r10, $r11;

        r0 := @parameter0: int[][];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i1 = 0;

     label3:
        $r7 = r0[i0];

        $i3 = lengthof $r7;

        if i1 >= $i3 goto label5;

        $r10 = r0[i0];

        $i6 = $r10[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r11 = r0[i0];

        $i8 = lengthof $r11;

        $i7 = $i8 - 1;

        if i1 == $i7 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $i4 = lengthof r0;

        $i5 = $i4 - 1;

        if i0 == $i5 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label6:
        i0 = i0 + 1;

        goto label2;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(long[][])
    {
        long[][] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8;
        java.lang.String $r5;
        long[] $r7, $r10, $r11;
        long $l6;

        r0 := @parameter0: long[][];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i2 = lengthof r0;

        if i0 >= $i2 goto label7;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i1 = 0;

     label3:
        $r7 = r0[i0];

        $i3 = lengthof $r7;

        if i1 >= $i3 goto label5;

        $r10 = r0[i0];

        $l6 = $r10[i1];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r11 = r0[i0];

        $i8 = lengthof $r11;

        $i7 = $i8 - 1;

        if i1 == $i7 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $i4 = lengthof r0;

        $i5 = $i4 - 1;

        if i0 == $i5 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label6:
        i0 = i0 + 1;

        goto label2;

     label7:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String toString(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3;
        java.lang.String $r5, $r7;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.Object[];

        if r0 != null goto label1;

        return "NULL";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = 0;

     label2:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label4;

        $r6 = r0[i0];

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $i2 = lengthof r0;

        $i3 = $i2 - 1;

        if i0 == $i3 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] r0;
        java.lang.String $r1;

        r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.android.mail.lib.base.ByteArrays: java.lang.String toHexString(byte[])>(r0);

        return $r1;
    }

    public static java.lang.String bytesToHexString(byte[], java.lang.Character)
    {
        byte[] r0;
        java.lang.Character r1;
        java.lang.StringBuilder r2, $r3;
        byte b0, b1, $b6, $b7, $b8, $b12;
        int i2, $i3, $i4, $i5;
        java.lang.String $r4;
        char[] $r5, $r6;
        char $c9, $c10, $c11;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.Character;

        $r3 = new java.lang.StringBuilder;

        $i3 = lengthof r0;

        if r1 != null goto label1;

        $b12 = 2;

        goto label2;

     label1:
        $b12 = 3;

     label2:
        $i4 = $i3 * $b12;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i4);

        r2 = $r3;

        i2 = 0;

     label3:
        $i5 = lengthof r0;

        if i2 >= $i5 goto label5;

        $b6 = r0[i2];

        $b7 = $b6 >>> 4;

        b0 = $b7 & 15;

        $b8 = r0[i2];

        b1 = $b8 & 15;

        if i2 <= 0 goto label4;

        if r1 == null goto label4;

        $c11 = virtualinvoke r1.<java.lang.Character: char charValue()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11);

     label4:
        $r5 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $c9 = $r5[b0];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9);

        $r6 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        $c10 = $r6[b1];

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        i2 = i2 + 1;

        goto label3;

     label5:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String toUpperCase(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        return $r1;
    }

    public static java.lang.String toLowerCase(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;
    }

    public static java.lang.String expandShardNames(java.lang.String) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException
    {
        java.lang.String r0, r2, r3, $r6, $r7, $r10, $r20;
        java.util.regex.Matcher r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.StringBuilder r4, $r8, $r9, $r12, $r15, $r16, $r19;
        java.util.regex.Pattern $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r13, $r18;
        java.lang.NumberFormatException $r17;

        r0 := @parameter0: java.lang.String;

        $r5 = <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern dbSpecPattern>;

        r1 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label8;

     label1:
        $i3 = virtualinvoke r1.<java.util.regex.Matcher: int start(int)>(1);

        $i4 = virtualinvoke r1.<java.util.regex.Matcher: int end(int)>(1);

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $i5 = virtualinvoke r1.<java.util.regex.Matcher: int start(int)>(2);

        $i6 = virtualinvoke r1.<java.util.regex.Matcher: int end(int)>(2);

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i6);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $i8 = virtualinvoke r1.<java.util.regex.Matcher: int start(int)>(3);

        $i7 = virtualinvoke r1.<java.util.regex.Matcher: int end(int)>(3);

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $i10 = virtualinvoke r1.<java.util.regex.Matcher: int start(int)>(4);

        $i9 = virtualinvoke r1.<java.util.regex.Matcher: int end(int)>(4);

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i10, $i9);

        if i0 <= i1 goto label2;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Maximum shard must be greater than or equal to the minimum shard");

        throw $r13;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r4 = $r8;

        i2 = i0;

     label3:
        if i2 > i1 goto label5;

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        if i2 == i1 goto label4;

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        return $r10;

     label7:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed DB specification component: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label8:
        return r0;

        catch java.lang.NumberFormatException from label1 to label6 with label7;
    }

    public static java.lang.String capitalize(java.lang.String)
    {
        java.lang.String r0, $r3, $r5;
        char c0, c1;
        int $i2;
        java.lang.StringBuilder $r1, $r2, $r4;

        r0 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label1;

        return r0;

     label1:
        c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c0);

        if c0 != c1 goto label2;

        $r5 = r0;

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r5;
    }

    public static boolean startsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r1, 0, $i0);

        return $z0;
    }

    public static boolean endsWithIgnoreCase(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 - i0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, $i2, r1, 0, i0);

        return $z0;
    }

    private static int bytesUtf8(int)
    {
        int i0;

        i0 := @parameter0: int;

        if i0 >= 128 goto label1;

        return 1;

     label1:
        if i0 >= 2048 goto label2;

        return 2;

     label2:
        if i0 >= 65536 goto label3;

        return 3;

     label3:
        if i0 >= 2097152 goto label4;

        return 4;

     label4:
        if i0 >= 67108864 goto label5;

        return 5;

     label5:
        return 6;
    }

    public static int bytesStorage(java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        i0 = 0;

        i1 = 0;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 >= $i2 goto label2;

        $i3 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i1);

        $i4 = staticinvoke <com.android.mail.lib.base.StringUtil: int bytesUtf8(int)>($i3);

        i0 = i0 + $i4;

        i1 = virtualinvoke r1.<java.lang.String: int offsetByCodePoints(int,int)>(i1, 1);

        goto label1;

     label2:
        return i0;
    }

    public static java.lang.String truncateStringForUtf8Storage(java.lang.String, int)
    {
        java.lang.String r0, r1, $r2, $r3;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        java.lang.IndexOutOfBoundsException $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r4;

     label1:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        i1 = 0;

        i6 = 0;

     label2:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i6 >= $i3 goto label4;

        $i4 = virtualinvoke r1.<java.lang.String: int codePointAt(int)>(i6);

        i2 = staticinvoke <com.android.mail.lib.base.StringUtil: int bytesUtf8(int)>($i4);

        $i5 = i1 + i2;

        if $i5 <= i0 goto label3;

        goto label4;

     label3:
        i1 = i1 + i2;

        i6 = virtualinvoke r1.<java.lang.String: int offsetByCodePoints(int,int)>(i6, 1);

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

        return $r3;
    }

    public static java.lang.String truncateIfNecessary(java.lang.String, int)
    {
        java.lang.String r0, r1, r3, r4, $r5;
        int i0, i1, $i2, $i3, $i5;
        com.android.mail.lib.base.CharMatcher r2;
        char $c4, $c6;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i2 > i0 goto label1;

        return r0;

     label1:
        r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String unicodePreservingSubstring(java.lang.String,int,int)>(r0, 0, i0);

        r2 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher LEGACY_WHITESPACE>;

        r3 = virtualinvoke r2.<com.android.mail.lib.base.CharMatcher: java.lang.String trimTrailingFrom(java.lang.CharSequence)>(r1);

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i3 >= i0 goto label2;

        return r3;

     label2:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c4);

        if $z0 == 0 goto label3;

        return r3;

     label3:
        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        i1 = $i5 - 1;

     label4:
        if i1 < 0 goto label6;

        $c6 = virtualinvoke r3.<java.lang.String: char charAt(int)>(i1);

        $z1 = staticinvoke <java.lang.Character: boolean isSpaceChar(char)>($c6);

        if $z1 == 0 goto label5;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r5 = virtualinvoke r2.<com.android.mail.lib.base.CharMatcher: java.lang.String trimTrailingFrom(java.lang.CharSequence)>(r4);

        return $r5;

     label5:
        i1 = i1 + -1;

        goto label4;

     label6:
        return r3;
    }

    public static java.lang.String truncateAtMaxLength(java.lang.String, int, boolean)
    {
        java.lang.String r0, $r1, $r3, $r6;
        int i0, $i1, $i2;
        boolean z0;
        java.lang.StringBuilder $r2, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 > i0 goto label1;

        return r0;

     label1:
        if z0 == 0 goto label2;

        if i0 <= 3 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i2 = i0 - 3;

        $r3 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String unicodePreservingSubstring(java.lang.String,int,int)>(r0, 0, $i2);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label2:
        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String unicodePreservingSubstring(java.lang.String,int,int)>(r0, 0, i0);

        return $r1;
    }

    public static int unicodePreservingIndex(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1, $i2, $i5;
        char $c3, $c4;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 <= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label1;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>($c3);

        if $z0 == 0 goto label1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $z1 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>($c4);

        if $z1 == 0 goto label1;

        $i5 = i0 - 1;

        return $i5;

     label1:
        return i0;
    }

    public static java.lang.String unicodePreservingSubstring(java.lang.String, int, int)
    {
        java.lang.String r0, $r1;
        int i0, i1, $i2, $i3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <com.android.mail.lib.base.StringUtil: int unicodePreservingIndex(java.lang.String,int)>(r0, i0);

        $i3 = staticinvoke <com.android.mail.lib.base.StringUtil: int unicodePreservingIndex(java.lang.String,int)>(r0, i1);

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        return $r1;
    }

    public static java.lang.String unicodePreservingSubstring(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0, $i1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = staticinvoke <com.android.mail.lib.base.StringUtil: java.lang.String unicodePreservingSubstring(java.lang.String,int,int)>(r0, i0, $i1);

        return $r1;
    }

    static boolean mustEscapeCharInJsString(int)
    {
        int i0;
        java.util.Set $r0;
        java.lang.Integer $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <com.android.mail.lib.base.StringUtil: java.util.Set JS_ESCAPE_CHARS>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    static boolean mustEscapeCharInJsonString(int)
    {
        int i0;
        java.util.Set $r0;
        java.lang.Integer $r1;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <com.android.mail.lib.base.StringUtil: java.util.Set JSON_ESCAPE_CHARS>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r0.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public static java.lang.String xmlEscape(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharEscaper $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.CharEscapers: com.android.mail.lib.base.CharEscaper xmlEscaper()>();

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharEscaper: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    public static java.lang.String htmlEscape(java.lang.String)
    {
        java.lang.String r0, $r2;
        com.android.mail.lib.base.CharEscaper $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.mail.lib.base.CharEscapers: com.android.mail.lib.base.CharEscaper asciiHtmlEscaper()>();

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.CharEscaper: java.lang.String escape(java.lang.String)>(r0);

        return $r2;
    }

    static void <clinit>()
    {
        java.util.HashSet r0, $r723, $r776;
        com.android.mail.lib.base.Splitter $r1, $r2, $r4, $r5;
        com.android.mail.lib.base.CharMatcher $r3, $r6, $r7, $r844;
        java.util.HashMap $r8;
        java.util.Map $r9, $r12, $r14, $r17, $r20, $r23, $r28, $r31, $r34, $r37, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r62, $r65, $r68, $r71, $r76, $r79, $r82, $r85, $r87, $r90, $r93, $r96, $r98, $r101, $r104, $r107, $r111, $r114, $r117, $r120, $r123, $r126, $r129, $r132, $r136, $r139, $r142, $r145, $r146, $r149, $r152, $r155, $r159, $r162, $r165, $r168, $r171, $r174, $r177, $r180, $r184, $r187, $r190, $r193, $r195, $r198, $r201, $r204, $r208, $r211, $r214, $r217, $r218, $r221, $r224, $r227, $r231, $r234, $r237, $r240, $r243, $r246, $r249, $r252, $r256, $r259, $r262, $r265, $r266, $r269, $r272, $r275, $r279, $r282, $r285, $r288, $r292, $r295, $r298, $r301, $r303, $r306, $r309, $r312, $r315, $r318, $r321, $r324, $r326, $r329, $r332, $r335, $r340, $r343, $r346, $r349, $r351, $r354, $r357, $r360, $r363, $r366, $r369, $r372, $r374, $r377, $r380, $r383, $r388, $r391, $r394, $r397, $r399, $r402, $r405, $r408, $r411, $r414, $r417, $r420, $r422, $r425, $r428, $r431, $r436, $r439, $r442, $r445, $r447, $r450, $r453, $r456, $r459, $r462, $r465, $r468, $r470, $r473, $r476, $r479, $r483, $r486, $r489, $r492, $r496, $r499, $r502, $r505, $r506, $r509, $r512, $r515, $r519, $r522, $r525, $r528, $r531, $r534, $r537, $r540, $r544, $r547, $r550, $r553, $r554, $r557, $r560, $r563, $r567, $r570, $r573, $r576, $r578, $r581, $r584, $r587, $r591, $r594, $r597, $r600, $r603, $r606, $r609, $r612, $r616, $r619, $r622, $r625, $r626, $r629, $r632, $r635, $r639, $r642, $r645, $r648, $r651, $r654, $r657, $r660, $r664, $r667, $r670, $r673, $r675, $r678, $r681, $r684, $r686, $r689, $r692, $r695, $r700, $r703, $r706, $r709, $r711, $r714, $r717, $r720, $r729, $r732, $r734, $r737, $r740, $r743, $r748, $r751, $r754, $r757, $r759, $r762, $r765, $r768;
        java.lang.Character $r10, $r13, $r16, $r19, $r22, $r25, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r52, $r55, $r58, $r61, $r64, $r67, $r70, $r73, $r74, $r77, $r80, $r83, $r86, $r89, $r92, $r95, $r100, $r103, $r106, $r109, $r112, $r115, $r118, $r121, $r122, $r125, $r128, $r131, $r134, $r137, $r140, $r143, $r148, $r151, $r154, $r157, $r160, $r163, $r166, $r169, $r170, $r173, $r176, $r179, $r182, $r185, $r188, $r191, $r194, $r197, $r200, $r203, $r206, $r209, $r212, $r215, $r220, $r223, $r226, $r229, $r232, $r235, $r238, $r241, $r242, $r245, $r248, $r251, $r254, $r257, $r260, $r263, $r268, $r271, $r274, $r277, $r280, $r283, $r286, $r289, $r290, $r293, $r296, $r299, $r302, $r305, $r308, $r311, $r316, $r319, $r322, $r325, $r328, $r331, $r334, $r337, $r338, $r341, $r344, $r347, $r350, $r353, $r356, $r359, $r364, $r367, $r370, $r373, $r376, $r379, $r382, $r385, $r386, $r389, $r392, $r395, $r398, $r401, $r404, $r407, $r412, $r415, $r418, $r421, $r424, $r427, $r430, $r433, $r434, $r437, $r440, $r443, $r446, $r449, $r452, $r455, $r460, $r463, $r466, $r469, $r472, $r475, $r478, $r481, $r482, $r485, $r488, $r491, $r494, $r497, $r500, $r503, $r508, $r511, $r514, $r517, $r520, $r523, $r526, $r529, $r530, $r533, $r536, $r539, $r542, $r545, $r548, $r551, $r556, $r559, $r562, $r565, $r568, $r571, $r574, $r577, $r580, $r583, $r586, $r589, $r592, $r595, $r598, $r601, $r602, $r605, $r608, $r611, $r614, $r617, $r620, $r623, $r628, $r631, $r634, $r637, $r640, $r643, $r646, $r649, $r650, $r653, $r656, $r659, $r662, $r665, $r668, $r671, $r676, $r679, $r682, $r685, $r688, $r691, $r694, $r697, $r698, $r701, $r704, $r707, $r710, $r713, $r716, $r719, $r725, $r727, $r730, $r733, $r736, $r739, $r742, $r745, $r746, $r749, $r752, $r755, $r758, $r761, $r764, $r767, $r814, $r816, $r819, $r821, $r823, $r824, $r827, $r830, $r831, $r834;
        java.util.Set $r724, $r726, $r791, $r813, $r815, $r817, $r818, $r820, $r822, $r825, $r826, $r832, $r833, $r877, $r882;
        java.lang.Character$UnicodeBlock $r770, $r771, $r772, $r773, $r774, $r775, $r777, $r778, $r779, $r780, $r781, $r782, $r783, $r784, $r785, $r786, $r792, $r793, $r794, $r795, $r796;
        java.util.regex.Pattern $r787, $r843, $r855;
        com.android.mail.lib.base.StringUtil$UnicodeSetBuilder $r788, $r797, $r798, $r799, $r800, $r801, $r802, $r803, $r804, $r805, $r806, $r807, $r808, $r809, $r810, $r811, $r812, $r867, $r868, $r869, $r870, $r871, $r872, $r873, $r874, $r875, $r876, $r878, $r879, $r880, $r881;
        char[] $r789, $r790;
        com.android.mail.lib.base.CharEscaperBuilder $r828, $r829, $r835, $r836, $r837, $r838, $r840, $r841, $r842, $r845, $r847, $r848, $r849, $r850, $r851, $r852, $r853, $r854, $r857, $r858, $r859, $r860, $r861, $r862, $r863, $r864, $r865, $r866;
        com.android.mail.lib.base.CharEscaper $r839, $r846, $r856;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        <com.android.mail.lib.base.StringUtil: java.lang.String LINE_BREAKS> = "\r\n";

        <com.android.mail.lib.base.StringUtil: java.lang.String WHITE_SPACES> = " \r\n\t\u3000\u00a0\u2007\u202f";

        $r1 = staticinvoke <com.android.mail.lib.base.Splitter: com.android.mail.lib.base.Splitter on(char)>(10);

        $r2 = virtualinvoke $r1.<com.android.mail.lib.base.Splitter: com.android.mail.lib.base.Splitter omitEmptyStrings()>();

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.Splitter NEWLINE_SPLITTER> = $r2;

        $r3 = <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher BREAKING_WHITESPACE>;

        $r4 = staticinvoke <com.android.mail.lib.base.Splitter: com.android.mail.lib.base.Splitter on(com.android.mail.lib.base.CharMatcher)>($r3);

        $r5 = virtualinvoke $r4.<com.android.mail.lib.base.Splitter: com.android.mail.lib.base.Splitter omitEmptyStrings()>();

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.Splitter TO_WORDS> = $r5;

        $r6 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>("\u0091\u0092\u2018\u2019");

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher FANCY_SINGLE_QUOTE> = $r6;

        $r7 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>("\u0093\u0094\u201c\u201d");

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher FANCY_DOUBLE_QUOTE> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>(int)>(252);

        <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS> = $r8;

        $r9 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r10 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(160);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nbsp", $r10);

        $r12 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r13 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(161);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&iexcl", $r13);

        $r14 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r16 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(162);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cent", $r16);

        $r17 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r19 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(163);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&pound", $r19);

        $r20 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r22 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(164);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&curren", $r22);

        $r23 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r25 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(165);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&yen", $r25);

        $r28 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r26 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(166);

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&brvbar", $r26);

        $r31 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r29 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(167);

        interfaceinvoke $r31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sect", $r29);

        $r34 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r32 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(168);

        interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&uml", $r32);

        $r37 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r35 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(169);

        interfaceinvoke $r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&copy", $r35);

        $r39 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r38 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(170);

        interfaceinvoke $r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ordf", $r38);

        $r42 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r41 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(171);

        interfaceinvoke $r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&laquo", $r41);

        $r45 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r44 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(172);

        interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&not", $r44);

        $r48 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r47 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(173);

        interfaceinvoke $r48.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&shy", $r47);

        $r54 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r55 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(174);

        interfaceinvoke $r54.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&reg", $r55);

        $r51 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r52 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(175);

        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&macr", $r52);

        $r60 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r61 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(176);

        interfaceinvoke $r60.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&deg", $r61);

        $r57 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r58 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(177);

        interfaceinvoke $r57.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&plusmn", $r58);

        $r65 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r67 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(178);

        interfaceinvoke $r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sup2", $r67);

        $r62 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r64 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(179);

        interfaceinvoke $r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sup3", $r64);

        $r71 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r73 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(180);

        interfaceinvoke $r71.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&acute", $r73);

        $r68 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r70 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(181);

        interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&micro", $r70);

        $r79 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r77 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(182);

        interfaceinvoke $r79.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&para", $r77);

        $r76 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r74 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(183);

        interfaceinvoke $r76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&middot", $r74);

        $r85 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r83 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(184);

        interfaceinvoke $r85.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cedil", $r83);

        $r82 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r80 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(185);

        interfaceinvoke $r82.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sup1", $r80);

        $r90 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r89 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(186);

        interfaceinvoke $r90.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ordm", $r89);

        $r87 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r86 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(187);

        interfaceinvoke $r87.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&raquo", $r86);

        $r96 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r95 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(188);

        interfaceinvoke $r96.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&frac14", $r95);

        $r93 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r92 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(189);

        interfaceinvoke $r93.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&frac12", $r92);

        $r104 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r106 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(190);

        interfaceinvoke $r104.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&frac34", $r106);

        $r107 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r109 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(191);

        interfaceinvoke $r107.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&iquest", $r109);

        $r98 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r100 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(192);

        interfaceinvoke $r98.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Agrave", $r100);

        $r101 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r103 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(193);

        interfaceinvoke $r101.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Aacute", $r103);

        $r117 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r118 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(194);

        interfaceinvoke $r117.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Acirc", $r118);

        $r120 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r121 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(195);

        interfaceinvoke $r120.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Atilde", $r121);

        $r111 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r112 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(196);

        interfaceinvoke $r111.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Auml", $r112);

        $r114 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r115 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(197);

        interfaceinvoke $r114.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Aring", $r115);

        $r129 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r128 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(198);

        interfaceinvoke $r129.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&AElig", $r128);

        $r132 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r131 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(199);

        interfaceinvoke $r132.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ccedil", $r131);

        $r123 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r122 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(200);

        interfaceinvoke $r123.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Egrave", $r122);

        $r126 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r125 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(201);

        interfaceinvoke $r126.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Eacute", $r125);

        $r142 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r140 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(202);

        interfaceinvoke $r142.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ecirc", $r140);

        $r145 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r143 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(203);

        interfaceinvoke $r145.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Euml", $r143);

        $r136 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r134 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(204);

        interfaceinvoke $r136.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Igrave", $r134);

        $r139 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r137 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(205);

        interfaceinvoke $r139.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Iacute", $r137);

        $r155 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r157 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(206);

        interfaceinvoke $r155.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Icirc", $r157);

        $r152 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r154 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(207);

        interfaceinvoke $r152.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Iuml", $r154);

        $r149 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r151 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(208);

        interfaceinvoke $r149.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ETH", $r151);

        $r146 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r148 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(209);

        interfaceinvoke $r146.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ntilde", $r148);

        $r168 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r169 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(210);

        interfaceinvoke $r168.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ograve", $r169);

        $r165 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r166 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(211);

        interfaceinvoke $r165.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Oacute", $r166);

        $r162 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r163 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(212);

        interfaceinvoke $r162.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ocirc", $r163);

        $r159 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r160 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(213);

        interfaceinvoke $r159.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Otilde", $r160);

        $r180 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r179 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(214);

        interfaceinvoke $r180.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ouml", $r179);

        $r177 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r176 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(215);

        interfaceinvoke $r177.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&times", $r176);

        $r174 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r173 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(216);

        interfaceinvoke $r174.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Oslash", $r173);

        $r171 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r170 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(217);

        interfaceinvoke $r171.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ugrave", $r170);

        $r193 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r191 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(218);

        interfaceinvoke $r193.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Uacute", $r191);

        $r190 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r188 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(219);

        interfaceinvoke $r190.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Ucirc", $r188);

        $r187 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r185 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(220);

        interfaceinvoke $r187.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Uuml", $r185);

        $r184 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r182 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(221);

        interfaceinvoke $r184.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Yacute", $r182);

        $r208 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r206 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(222);

        interfaceinvoke $r208.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&THORN", $r206);

        $r211 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r209 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(223);

        interfaceinvoke $r211.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&szlig", $r209);

        $r214 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r212 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(224);

        interfaceinvoke $r214.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&agrave", $r212);

        $r217 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r215 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(225);

        interfaceinvoke $r217.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&aacute", $r215);

        $r195 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r194 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(226);

        interfaceinvoke $r195.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&acirc", $r194);

        $r198 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r197 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(227);

        interfaceinvoke $r198.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&atilde", $r197);

        $r201 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r200 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(228);

        interfaceinvoke $r201.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&auml", $r200);

        $r204 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r203 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(229);

        interfaceinvoke $r204.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&aring", $r203);

        $r231 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r232 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(230);

        interfaceinvoke $r231.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&aelig", $r232);

        $r234 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r235 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(231);

        interfaceinvoke $r234.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ccedil", $r235);

        $r237 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r238 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(232);

        interfaceinvoke $r237.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&egrave", $r238);

        $r240 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r241 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(233);

        interfaceinvoke $r240.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&eacute", $r241);

        $r218 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r220 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(234);

        interfaceinvoke $r218.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ecirc", $r220);

        $r221 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r223 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(235);

        interfaceinvoke $r221.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&euml", $r223);

        $r224 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r226 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(236);

        interfaceinvoke $r224.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&igrave", $r226);

        $r227 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r229 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(237);

        interfaceinvoke $r227.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&iacute", $r229);

        $r259 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r257 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(238);

        interfaceinvoke $r259.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&icirc", $r257);

        $r256 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r254 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(239);

        interfaceinvoke $r256.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&iuml", $r254);

        $r265 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r263 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(240);

        interfaceinvoke $r265.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&eth", $r263);

        $r262 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r260 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(241);

        interfaceinvoke $r262.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ntilde", $r260);

        $r246 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r245 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(242);

        interfaceinvoke $r246.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ograve", $r245);

        $r243 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r242 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(243);

        interfaceinvoke $r243.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&oacute", $r242);

        $r252 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r251 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(244);

        interfaceinvoke $r252.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ocirc", $r251);

        $r249 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r248 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(245);

        interfaceinvoke $r249.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&otilde", $r248);

        $r282 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r283 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(246);

        interfaceinvoke $r282.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ouml", $r283);

        $r279 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r280 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(247);

        interfaceinvoke $r279.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&divide", $r280);

        $r288 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r289 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(248);

        interfaceinvoke $r288.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&oslash", $r289);

        $r285 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r286 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(249);

        interfaceinvoke $r285.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ugrave", $r286);

        $r269 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r271 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(250);

        interfaceinvoke $r269.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&uacute", $r271);

        $r266 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r268 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(251);

        interfaceinvoke $r266.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ucirc", $r268);

        $r275 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r277 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(252);

        interfaceinvoke $r275.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&uuml", $r277);

        $r272 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r274 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(253);

        interfaceinvoke $r272.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&yacute", $r274);

        $r309 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r308 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(254);

        interfaceinvoke $r309.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&thorn", $r308);

        $r312 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r311 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(255);

        interfaceinvoke $r312.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&yuml", $r311);

        $r303 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r302 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(402);

        interfaceinvoke $r303.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&fnof", $r302);

        $r306 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r305 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(913);

        interfaceinvoke $r306.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Alpha", $r305);

        $r298 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r296 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(914);

        interfaceinvoke $r298.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Beta", $r296);

        $r301 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r299 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(915);

        interfaceinvoke $r301.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Gamma", $r299);

        $r292 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r290 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(916);

        interfaceinvoke $r292.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Delta", $r290);

        $r295 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r293 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(917);

        interfaceinvoke $r295.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Epsilon", $r293);

        $r332 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r334 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(918);

        interfaceinvoke $r332.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Zeta", $r334);

        $r335 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r337 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(919);

        interfaceinvoke $r335.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Eta", $r337);

        $r326 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r328 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(920);

        interfaceinvoke $r326.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Theta", $r328);

        $r329 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r331 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(921);

        interfaceinvoke $r329.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Iota", $r331);

        $r321 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r322 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(922);

        interfaceinvoke $r321.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Kappa", $r322);

        $r324 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r325 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(923);

        interfaceinvoke $r324.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Lambda", $r325);

        $r315 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r316 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(924);

        interfaceinvoke $r315.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Mu", $r316);

        $r318 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r319 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(925);

        interfaceinvoke $r318.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Nu", $r319);

        $r360 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r359 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(926);

        interfaceinvoke $r360.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Xi", $r359);

        $r357 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r356 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(927);

        interfaceinvoke $r357.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Omicron", $r356);

        $r354 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r353 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(928);

        interfaceinvoke $r354.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Pi", $r353);

        $r351 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r350 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(929);

        interfaceinvoke $r351.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Rho", $r350);

        $r349 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r347 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(931);

        interfaceinvoke $r349.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Sigma", $r347);

        $r346 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r344 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(932);

        interfaceinvoke $r346.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Tau", $r344);

        $r343 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r341 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(933);

        interfaceinvoke $r343.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Upsilon", $r341);

        $r340 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r338 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(934);

        interfaceinvoke $r340.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Phi", $r338);

        $r383 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r385 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(935);

        interfaceinvoke $r383.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Chi", $r385);

        $r380 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r382 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(936);

        interfaceinvoke $r380.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Psi", $r382);

        $r377 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r379 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(937);

        interfaceinvoke $r377.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Omega", $r379);

        $r374 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r376 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(945);

        interfaceinvoke $r374.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&alpha", $r376);

        $r372 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r373 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(946);

        interfaceinvoke $r372.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&beta", $r373);

        $r369 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r370 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(947);

        interfaceinvoke $r369.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&gamma", $r370);

        $r366 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r367 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(948);

        interfaceinvoke $r366.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&delta", $r367);

        $r363 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r364 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(949);

        interfaceinvoke $r363.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&epsilon", $r364);

        $r414 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r415 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(950);

        interfaceinvoke $r414.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&zeta", $r415);

        $r411 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r412 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(951);

        interfaceinvoke $r411.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&eta", $r412);

        $r420 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r421 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(952);

        interfaceinvoke $r420.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&theta", $r421);

        $r417 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r418 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(953);

        interfaceinvoke $r417.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&iota", $r418);

        $r425 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r427 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(954);

        interfaceinvoke $r425.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&kappa", $r427);

        $r422 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r424 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(955);

        interfaceinvoke $r422.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lambda", $r424);

        $r431 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r433 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(956);

        interfaceinvoke $r431.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&mu", $r433);

        $r428 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r430 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(957);

        interfaceinvoke $r428.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nu", $r430);

        $r391 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r389 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(958);

        interfaceinvoke $r391.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&xi", $r389);

        $r388 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r386 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(959);

        interfaceinvoke $r388.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&omicron", $r386);

        $r397 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r395 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(960);

        interfaceinvoke $r397.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&pi", $r395);

        $r394 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r392 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(961);

        interfaceinvoke $r394.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rho", $r392);

        $r402 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r401 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(962);

        interfaceinvoke $r402.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sigmaf", $r401);

        $r399 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r398 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(963);

        interfaceinvoke $r399.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sigma", $r398);

        $r408 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r407 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(964);

        interfaceinvoke $r408.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&tau", $r407);

        $r405 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r404 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(965);

        interfaceinvoke $r405.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&upsilon", $r404);

        $r459 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r460 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(966);

        interfaceinvoke $r459.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&phi", $r460);

        $r462 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r463 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(967);

        interfaceinvoke $r462.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&chi", $r463);

        $r465 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r466 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(968);

        interfaceinvoke $r465.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&psi", $r466);

        $r468 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r469 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(969);

        interfaceinvoke $r468.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&omega", $r469);

        $r470 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r472 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(977);

        interfaceinvoke $r470.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&thetasym", $r472);

        $r473 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r475 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(978);

        interfaceinvoke $r473.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&upsih", $r475);

        $r476 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r478 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(982);

        interfaceinvoke $r476.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&piv", $r478);

        $r479 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r481 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8226);

        interfaceinvoke $r479.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&bull", $r481);

        $r436 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r434 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8230);

        interfaceinvoke $r436.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&hellip", $r434);

        $r439 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r437 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8242);

        interfaceinvoke $r439.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&prime", $r437);

        $r442 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r440 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8243);

        interfaceinvoke $r442.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Prime", $r440);

        $r445 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r443 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8254);

        interfaceinvoke $r445.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&oline", $r443);

        $r447 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r446 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8260);

        interfaceinvoke $r447.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&frasl", $r446);

        $r450 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r449 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8472);

        interfaceinvoke $r450.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&weierp", $r449);

        $r453 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r452 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8465);

        interfaceinvoke $r453.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&image", $r452);

        $r456 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r455 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8476);

        interfaceinvoke $r456.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&real", $r455);

        $r515 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r517 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8482);

        interfaceinvoke $r515.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&trade", $r517);

        $r512 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r514 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8501);

        interfaceinvoke $r512.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&alefsym", $r514);

        $r509 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r511 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8592);

        interfaceinvoke $r509.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&larr", $r511);

        $r506 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r508 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8593);

        interfaceinvoke $r506.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&uarr", $r508);

        $r528 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r529 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8594);

        interfaceinvoke $r528.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rarr", $r529);

        $r525 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r526 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8595);

        interfaceinvoke $r525.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&darr", $r526);

        $r522 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r523 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8596);

        interfaceinvoke $r522.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&harr", $r523);

        $r519 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r520 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8629);

        interfaceinvoke $r519.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&crarr", $r520);

        $r492 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r491 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8656);

        interfaceinvoke $r492.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lArr", $r491);

        $r489 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r488 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8657);

        interfaceinvoke $r489.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&uArr", $r488);

        $r486 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r485 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8658);

        interfaceinvoke $r486.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rArr", $r485);

        $r483 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r482 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8659);

        interfaceinvoke $r483.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&dArr", $r482);

        $r505 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r503 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8660);

        interfaceinvoke $r505.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&hArr", $r503);

        $r502 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r500 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8704);

        interfaceinvoke $r502.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&forall", $r500);

        $r499 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r497 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8706);

        interfaceinvoke $r499.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&part", $r497);

        $r496 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r494 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8707);

        interfaceinvoke $r496.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&exist", $r494);

        $r560 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r562 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8709);

        interfaceinvoke $r560.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&empty", $r562);

        $r563 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r565 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8711);

        interfaceinvoke $r563.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nabla", $r565);

        $r554 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r556 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8712);

        interfaceinvoke $r554.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&isin", $r556);

        $r557 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r559 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8713);

        interfaceinvoke $r557.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&notin", $r559);

        $r573 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r574 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8715);

        interfaceinvoke $r573.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ni", $r574);

        $r576 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r577 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8719);

        interfaceinvoke $r576.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&prod", $r577);

        $r567 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r568 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8721);

        interfaceinvoke $r567.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sum", $r568);

        $r570 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r571 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8722);

        interfaceinvoke $r570.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&minus", $r571);

        $r537 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r536 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8727);

        interfaceinvoke $r537.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lowast", $r536);

        $r540 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r539 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8730);

        interfaceinvoke $r540.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&radic", $r539);

        $r531 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r530 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8733);

        interfaceinvoke $r531.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&prop", $r530);

        $r534 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r533 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8734);

        interfaceinvoke $r534.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&infin", $r533);

        $r550 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r548 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8736);

        interfaceinvoke $r550.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ang", $r548);

        $r553 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r551 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8743);

        interfaceinvoke $r553.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&and", $r551);

        $r544 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r542 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8744);

        interfaceinvoke $r544.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&or", $r542);

        $r547 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r545 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8745);

        interfaceinvoke $r547.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cap", $r545);

        $r619 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r617 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8746);

        interfaceinvoke $r619.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cup", $r617);

        $r616 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r614 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8747);

        interfaceinvoke $r616.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&int", $r614);

        $r625 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r623 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8756);

        interfaceinvoke $r625.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&there4", $r623);

        $r622 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r620 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8764);

        interfaceinvoke $r622.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sim", $r620);

        $r606 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r605 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8773);

        interfaceinvoke $r606.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&cong", $r605);

        $r603 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r602 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8776);

        interfaceinvoke $r603.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&asymp", $r602);

        $r612 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r611 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8800);

        interfaceinvoke $r612.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ne", $r611);

        $r609 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r608 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8801);

        interfaceinvoke $r609.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&equiv", $r608);

        $r594 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r595 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8804);

        interfaceinvoke $r594.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&le", $r595);

        $r591 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r592 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8805);

        interfaceinvoke $r591.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ge", $r592);

        $r600 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r601 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8834);

        interfaceinvoke $r600.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sub", $r601);

        $r597 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r598 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8835);

        interfaceinvoke $r597.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sup", $r598);

        $r581 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r583 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8836);

        interfaceinvoke $r581.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&nsub", $r583);

        $r578 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r580 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8838);

        interfaceinvoke $r578.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sube", $r580);

        $r587 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r589 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8839);

        interfaceinvoke $r587.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&supe", $r589);

        $r584 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r586 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8853);

        interfaceinvoke $r584.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&oplus", $r586);

        $r664 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r662 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8855);

        interfaceinvoke $r664.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&otimes", $r662);

        $r667 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r665 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8869);

        interfaceinvoke $r667.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&perp", $r665);

        $r670 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r668 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8901);

        interfaceinvoke $r670.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sdot", $r668);

        $r673 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r671 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8968);

        interfaceinvoke $r673.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lceil", $r671);

        $r651 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r650 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8969);

        interfaceinvoke $r651.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rceil", $r650);

        $r654 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r653 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8970);

        interfaceinvoke $r654.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lfloor", $r653);

        $r657 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r656 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8971);

        interfaceinvoke $r657.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rfloor", $r656);

        $r660 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r659 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9001);

        interfaceinvoke $r660.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lang", $r659);

        $r639 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r640 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9002);

        interfaceinvoke $r639.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rang", $r640);

        $r642 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r643 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9674);

        interfaceinvoke $r642.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&loz", $r643);

        $r645 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r646 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9824);

        interfaceinvoke $r645.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&spades", $r646);

        $r648 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r649 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9827);

        interfaceinvoke $r648.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&clubs", $r649);

        $r626 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r628 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9829);

        interfaceinvoke $r626.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&hearts", $r628);

        $r629 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r631 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(9830);

        interfaceinvoke $r629.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&diams", $r631);

        $r632 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r634 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(34);

        interfaceinvoke $r632.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&quot", $r634);

        $r635 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r637 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(38);

        interfaceinvoke $r635.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&amp", $r637);

        $r720 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r719 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(60);

        interfaceinvoke $r720.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lt", $r719);

        $r717 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r716 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(62);

        interfaceinvoke $r717.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&gt", $r716);

        $r714 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r713 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(338);

        interfaceinvoke $r714.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&OElig", $r713);

        $r711 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r710 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(339);

        interfaceinvoke $r711.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&oelig", $r710);

        $r709 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r707 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(352);

        interfaceinvoke $r709.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Scaron", $r707);

        $r706 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r704 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(353);

        interfaceinvoke $r706.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&scaron", $r704);

        $r703 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r701 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(376);

        interfaceinvoke $r703.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Yuml", $r701);

        $r700 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r698 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(710);

        interfaceinvoke $r700.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&circ", $r698);

        $r695 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r697 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(732);

        interfaceinvoke $r695.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&tilde", $r697);

        $r692 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r694 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8194);

        interfaceinvoke $r692.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ensp", $r694);

        $r689 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r691 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8195);

        interfaceinvoke $r689.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&emsp", $r691);

        $r686 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r688 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8201);

        interfaceinvoke $r686.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&thinsp", $r688);

        $r684 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r685 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8204);

        interfaceinvoke $r684.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&zwnj", $r685);

        $r681 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r682 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8205);

        interfaceinvoke $r681.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&zwj", $r682);

        $r678 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r679 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8206);

        interfaceinvoke $r678.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lrm", $r679);

        $r675 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r676 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8207);

        interfaceinvoke $r675.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rlm", $r676);

        $r765 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r764 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8211);

        interfaceinvoke $r765.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ndash", $r764);

        $r768 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r767 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8212);

        interfaceinvoke $r768.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&mdash", $r767);

        $r759 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r758 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8216);

        interfaceinvoke $r759.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lsquo", $r758);

        $r762 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r761 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8217);

        interfaceinvoke $r762.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rsquo", $r761);

        $r754 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r752 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8218);

        interfaceinvoke $r754.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&sbquo", $r752);

        $r757 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r755 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8220);

        interfaceinvoke $r757.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&ldquo", $r755);

        $r748 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r746 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8221);

        interfaceinvoke $r748.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rdquo", $r746);

        $r751 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r749 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8222);

        interfaceinvoke $r751.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&bdquo", $r749);

        $r740 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r742 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8224);

        interfaceinvoke $r740.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&dagger", $r742);

        $r743 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r745 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8225);

        interfaceinvoke $r743.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&Dagger", $r745);

        $r734 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r736 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8240);

        interfaceinvoke $r734.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&permil", $r736);

        $r737 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r739 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8249);

        interfaceinvoke $r737.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&lsaquo", $r739);

        $r729 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r730 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8250);

        interfaceinvoke $r729.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&rsaquo", $r730);

        $r732 = <com.android.mail.lib.base.StringUtil: java.util.Map ESCAPE_STRINGS>;

        $r733 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(8364);

        interfaceinvoke $r732.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("&euro", $r733);

        $r723 = new java.util.HashSet;

        specialinvoke $r723.<java.util.HashSet: void <init>(int)>(12);

        <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS> = $r723;

        $r724 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r725 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(97);

        interfaceinvoke $r724.<java.util.Set: boolean add(java.lang.Object)>($r725);

        $r726 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r727 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(65);

        interfaceinvoke $r726.<java.util.Set: boolean add(java.lang.Object)>($r727);

        $r818 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r819 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(98);

        interfaceinvoke $r818.<java.util.Set: boolean add(java.lang.Object)>($r819);

        $r820 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r821 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(66);

        interfaceinvoke $r820.<java.util.Set: boolean add(java.lang.Object)>($r821);

        $r822 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r823 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(99);

        interfaceinvoke $r822.<java.util.Set: boolean add(java.lang.Object)>($r823);

        $r813 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r814 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(67);

        interfaceinvoke $r813.<java.util.Set: boolean add(java.lang.Object)>($r814);

        $r815 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r816 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(100);

        interfaceinvoke $r815.<java.util.Set: boolean add(java.lang.Object)>($r816);

        $r817 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r830 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(68);

        interfaceinvoke $r817.<java.util.Set: boolean add(java.lang.Object)>($r830);

        $r832 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r831 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(101);

        interfaceinvoke $r832.<java.util.Set: boolean add(java.lang.Object)>($r831);

        $r833 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r834 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(69);

        interfaceinvoke $r833.<java.util.Set: boolean add(java.lang.Object)>($r834);

        $r825 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r824 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(102);

        interfaceinvoke $r825.<java.util.Set: boolean add(java.lang.Object)>($r824);

        $r826 = <com.android.mail.lib.base.StringUtil: java.util.Set HEX_LETTERS>;

        $r827 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(70);

        interfaceinvoke $r826.<java.util.Set: boolean add(java.lang.Object)>($r827);

        $r829 = new com.android.mail.lib.base.CharEscaperBuilder;

        specialinvoke $r829.<com.android.mail.lib.base.CharEscaperBuilder: void <init>()>();

        $r828 = virtualinvoke $r829.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(60, "&lt;");

        $r845 = virtualinvoke $r828.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(62, "&gt;");

        $r846 = virtualinvoke $r845.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaper toEscaper()>();

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper LT_GT_ESCAPE> = $r846;

        $r843 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("</?[a-zA-Z][^>]*>");

        <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern htmlTagPattern> = $r843;

        $r844 = staticinvoke <com.android.mail.lib.base.CharMatcher: com.android.mail.lib.base.CharMatcher anyOf(java.lang.CharSequence)>("\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\u0008\u000b\f\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f\ufffe\uffff");

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharMatcher CONTROL_MATCHER> = $r844;

        $r849 = new com.android.mail.lib.base.CharEscaperBuilder;

        specialinvoke $r849.<com.android.mail.lib.base.CharEscaperBuilder: void <init>()>();

        $r850 = virtualinvoke $r849.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(10, "\\n");

        $r847 = virtualinvoke $r850.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(13, "\\r");

        $r848 = virtualinvoke $r847.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(9, "\\t");

        $r837 = virtualinvoke $r848.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(92, "\\\\");

        $r838 = virtualinvoke $r837.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(34, "\\\"");

        $r835 = virtualinvoke $r838.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(38, "&amp;");

        $r836 = virtualinvoke $r835.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(60, "&lt;");

        $r841 = virtualinvoke $r836.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(62, "&gt;");

        $r842 = virtualinvoke $r841.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(39, "\\\'");

        $r839 = virtualinvoke $r842.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaper toEscaper()>();

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper JAVA_ESCAPE> = $r839;

        $r840 = new com.android.mail.lib.base.CharEscaperBuilder;

        specialinvoke $r840.<com.android.mail.lib.base.CharEscaperBuilder: void <init>()>();

        $r862 = virtualinvoke $r840.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(40, "\\(");

        $r861 = virtualinvoke $r862.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(41, "\\)");

        $r860 = virtualinvoke $r861.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(124, "\\|");

        $r859 = virtualinvoke $r860.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(42, "\\*");

        $r866 = virtualinvoke $r859.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(43, "\\+");

        $r865 = virtualinvoke $r866.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(63, "\\?");

        $r864 = virtualinvoke $r865.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(46, "\\.");

        $r863 = virtualinvoke $r864.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(123, "\\{");

        $r854 = virtualinvoke $r863.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(125, "\\}");

        $r853 = virtualinvoke $r854.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(91, "\\[");

        $r852 = virtualinvoke $r853.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(93, "\\]");

        $r851 = virtualinvoke $r852.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(36, "\\$");

        $r858 = virtualinvoke $r851.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(94, "\\^");

        $r857 = virtualinvoke $r858.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaperBuilder addEscape(char,java.lang.String)>(92, "\\\\");

        $r856 = virtualinvoke $r857.<com.android.mail.lib.base.CharEscaperBuilder: com.android.mail.lib.base.CharEscaper toEscaper()>();

        <com.android.mail.lib.base.StringUtil: com.android.mail.lib.base.CharEscaper REGEX_ESCAPE> = $r856;

        $r855 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("&#?[a-zA-Z0-9]{1,8};");

        <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern characterReferencePattern> = $r855;

        $r776 = new java.util.HashSet;

        specialinvoke $r776.<java.util.HashSet: void <init>()>();

        r0 = $r776;

        $r777 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HANGUL_JAMO>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r777);

        $r778 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_RADICALS_SUPPLEMENT>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r778);

        $r774 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock KANGXI_RADICALS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r774);

        $r775 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_SYMBOLS_AND_PUNCTUATION>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r775);

        $r772 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HIRAGANA>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r772);

        $r773 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock KATAKANA>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r773);

        $r770 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock BOPOMOFO>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r770);

        $r771 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HANGUL_COMPATIBILITY_JAMO>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r771);

        $r785 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock KANBUN>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r785);

        $r786 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock BOPOMOFO_EXTENDED>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r786);

        $r783 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock KATAKANA_PHONETIC_EXTENSIONS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r783);

        $r784 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock ENCLOSED_CJK_LETTERS_AND_MONTHS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r784);

        $r781 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_COMPATIBILITY>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r781);

        $r782 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r782);

        $r779 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r779);

        $r780 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HANGUL_SYLLABLES>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r780);

        $r796 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r796);

        $r795 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_COMPATIBILITY_FORMS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r795);

        $r794 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r794);

        $r793 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r793);

        $r792 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT>;

        interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>($r792);

        $r791 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r0);

        <com.android.mail.lib.base.StringUtil: java.util.Set CJK_BLOCKS> = $r791;

        $r789 = newarray (char)[16];

        $r789[0] = 48;

        $r789[1] = 49;

        $r789[2] = 50;

        $r789[3] = 51;

        $r789[4] = 52;

        $r789[5] = 53;

        $r789[6] = 54;

        $r789[7] = 55;

        $r789[8] = 56;

        $r789[9] = 57;

        $r789[10] = 97;

        $r789[11] = 98;

        $r789[12] = 99;

        $r789[13] = 100;

        $r789[14] = 101;

        $r789[15] = 102;

        <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS> = $r789;

        $r790 = <com.android.mail.lib.base.StringUtil: char[] HEX_CHARS>;

        <com.android.mail.lib.base.StringUtil: char[] OCTAL_CHARS> = $r790;

        $r787 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(.*)\\{(\\d+),(\\d+)\\}(.*)");

        <com.android.mail.lib.base.StringUtil: java.util.regex.Pattern dbSpecPattern> = $r787;

        $r788 = new com.android.mail.lib.base.StringUtil$UnicodeSetBuilder;

        specialinvoke $r788.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: void <init>(com.android.mail.lib.base.StringUtil$1)>(null);

        $r812 = virtualinvoke $r788.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(173);

        $r811 = virtualinvoke $r812.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(1536, 1539);

        $r810 = virtualinvoke $r811.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(1757);

        $r809 = virtualinvoke $r810.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(1807);

        $r808 = virtualinvoke $r809.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(6068, 6069);

        $r807 = virtualinvoke $r808.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(8203, 8207);

        $r806 = virtualinvoke $r807.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(8234, 8238);

        $r805 = virtualinvoke $r806.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(8288, 8292);

        $r804 = virtualinvoke $r805.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(8298, 8303);

        $r803 = virtualinvoke $r804.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(65279);

        $r802 = virtualinvoke $r803.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(65529, 65531);

        $r801 = virtualinvoke $r802.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(119155, 119162);

        $r800 = virtualinvoke $r801.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(917505);

        $r799 = virtualinvoke $r800.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(917536, 917631);

        $r798 = virtualinvoke $r799.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(0);

        $r797 = virtualinvoke $r798.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(10);

        $r868 = virtualinvoke $r797.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(13);

        $r867 = virtualinvoke $r868.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(8232, 8233);

        $r869 = virtualinvoke $r867.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>(133);

        $i0 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("\'", 0);

        $r870 = virtualinvoke $r869.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i0);

        $i1 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("\"", 0);

        $r871 = virtualinvoke $r870.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i1);

        $i2 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("&", 0);

        $r872 = virtualinvoke $r871.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i2);

        $i3 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("<", 0);

        $r873 = virtualinvoke $r872.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i3);

        $i4 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>(">", 0);

        $r874 = virtualinvoke $r873.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i4);

        $i5 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("=", 0);

        $r875 = virtualinvoke $r874.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i5);

        $i6 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("\\", 0);

        $r876 = virtualinvoke $r875.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i6);

        $r877 = virtualinvoke $r876.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: java.util.Set create()>();

        <com.android.mail.lib.base.StringUtil: java.util.Set JS_ESCAPE_CHARS> = $r877;

        $r878 = new com.android.mail.lib.base.StringUtil$UnicodeSetBuilder;

        specialinvoke $r878.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: void <init>(com.android.mail.lib.base.StringUtil$1)>(null);

        $i7 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("\"", 0);

        $r879 = virtualinvoke $r878.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i7);

        $i8 = staticinvoke <java.lang.Character: int codePointAt(java.lang.CharSequence,int)>("\\", 0);

        $r880 = virtualinvoke $r879.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addCodePoint(int)>($i8);

        $r881 = virtualinvoke $r880.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: com.android.mail.lib.base.StringUtil$UnicodeSetBuilder addRange(int,int)>(0, 31);

        $r882 = virtualinvoke $r881.<com.android.mail.lib.base.StringUtil$UnicodeSetBuilder: java.util.Set create()>();

        <com.android.mail.lib.base.StringUtil: java.util.Set JSON_ESCAPE_CHARS> = $r882;

        return;
    }
}
