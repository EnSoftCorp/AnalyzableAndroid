class com.google.common.collect.Sets$CartesianSet extends java.util.AbstractSet
{
    final com.google.common.collect.ImmutableList axes;
    final int size;

    void <init>(java.util.List)
    {
        com.google.common.collect.Sets$CartesianSet r0;
        java.util.List r1;
        int i0, $i1;
        com.google.common.collect.ImmutableList$Builder r2;
        java.util.Iterator r3;
        java.util.Set r4;
        com.google.common.collect.Sets$CartesianSet$Axis r5, $r8;
        boolean $z0;
        com.google.common.collect.ImmutableList $r6;
        java.lang.Object $r7;
        java.lang.IllegalArgumentException $r10;
        java.lang.ArithmeticException $r11;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        i0 = 1;

        r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

     label1:
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Set) $r7;

        $r8 = new com.google.common.collect.Sets$CartesianSet$Axis;

        specialinvoke $r8.<com.google.common.collect.Sets$CartesianSet$Axis: void <init>(com.google.common.collect.Sets$CartesianSet,java.util.Set,int)>(r0, r4, i0);

        r5 = $r8;

        virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>(r5);

        $i1 = virtualinvoke r5.<com.google.common.collect.Sets$CartesianSet$Axis: int size()>();

        i0 = staticinvoke <com.google.common.math.IntMath: int checkedMultiply(int,int)>(i0, $i1);

        goto label2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cartesian product too big");

        throw $r10;

     label5:
        $r6 = virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes> = $r6;

        r0.<com.google.common.collect.Sets$CartesianSet: int size> = i0;

        return;

        catch java.lang.ArithmeticException from label1 to label3 with label4;
    }

    public int size()
    {
        com.google.common.collect.Sets$CartesianSet r0;
        int $i0;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        $i0 = r0.<com.google.common.collect.Sets$CartesianSet: int size>;

        return $i0;
    }

    public com.google.common.collect.UnmodifiableIterator iterator()
    {
        com.google.common.collect.Sets$CartesianSet r0;
        com.google.common.collect.Sets$CartesianSet$1 $r1;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        $r1 = new com.google.common.collect.Sets$CartesianSet$1;

        specialinvoke $r1.<com.google.common.collect.Sets$CartesianSet$1: void <init>(com.google.common.collect.Sets$CartesianSet)>(r0);

        return $r1;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.Sets$CartesianSet r0;
        java.lang.Object r1, $r5, $r7;
        java.util.List r2;
        int i0, i1, $i2;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableList $r3, $r4;
        com.google.common.collect.Sets$CartesianSet$Axis $r6;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.util.List;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.List) r1;

        $r3 = r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        i0 = virtualinvoke $r3.<com.google.common.collect.ImmutableList: int size()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i2 == i0 goto label2;

        return 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        $r4 = r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        $r5 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(i1);

        $r6 = (com.google.common.collect.Sets$CartesianSet$Axis) $r5;

        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = virtualinvoke $r6.<com.google.common.collect.Sets$CartesianSet$Axis: boolean contains(java.lang.Object)>($r7);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.Sets$CartesianSet r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        com.google.common.collect.ImmutableList $r3, $r4;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.google.common.collect.Sets$CartesianSet;

        if $z0 == 0 goto label1;

        r2 = (com.google.common.collect.Sets$CartesianSet) r1;

        $r4 = r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        $r3 = r2.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        $z2 = virtualinvoke $r4.<com.google.common.collect.ImmutableList: boolean equals(java.lang.Object)>($r3);

        return $z2;

     label1:
        $z1 = specialinvoke r0.<java.util.AbstractSet: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }

    public int hashCode()
    {
        com.google.common.collect.Sets$CartesianSet r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.google.common.collect.ImmutableList $r1, $r2;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        $i2 = r0.<com.google.common.collect.Sets$CartesianSet: int size>;

        i0 = $i2 - 1;

        i1 = 0;

     label1:
        $r1 = r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        $i3 = virtualinvoke $r1.<com.google.common.collect.ImmutableList: int size()>();

        if i1 >= $i3 goto label2;

        i0 = i0 * 31;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r2 = r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.ImmutableList axes>;

        $i4 = virtualinvoke $r2.<com.google.common.collect.ImmutableList: int hashCode()>();

        $i5 = $i4 + i0;

        return $i5;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.Sets$CartesianSet r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.Sets$CartesianSet;

        $r1 = virtualinvoke r0.<com.google.common.collect.Sets$CartesianSet: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }
}
