final class com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter extends java.lang.Object
{
    private static final java.lang.String HTML_SPACE_EQUIVALENTS;
    private final java.lang.StringBuilder sb;
    private int quoteDepth;
    private int endingNewLines;
    private com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator;

    void <init>()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.StringBuilder $r1;
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator $r2;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb> = $r1;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth> = 0;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines> = 2;

        $r2 = <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator None>;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator> = $r2;

        return;
    }

    private static boolean isHtmlWhiteSpace(char)
    {
        char c0;
        java.lang.String $r0;
        int $i1;
        boolean $z0;

        c0 := @parameter0: char;

        $r0 = " \n\r\t\f";

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(c0);

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final int getTextLength()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.StringBuilder $r1;
        int $i0;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        $r1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        return $i0;
    }

    final java.lang.String getText()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        $r1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    final void setSeparator(com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator)
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator r1, $r2;
        int $i0, $i1;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        r1 := @parameter0: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator;

        $i0 = virtualinvoke r1.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: int ordinal()>();

        $r2 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator>;

        $i1 = virtualinvoke $r2.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: int ordinal()>();

        if $i0 <= $i1 goto label1;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator> = r1;

     label1:
        return;
    }

    final void incQuoteDepth()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        int $i0, $i1;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        $i0 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth>;

        $i1 = $i0 + 1;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth> = $i1;

        return;
    }

    final void decQuoteDepth()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        $i0 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth>;

        $i1 = $i0 - 1;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth> = $i2;

        return;
    }

    final void appendNormalText(java.lang.String)
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.String r1, r6, r7;
        boolean z0, z1;
        int $i0, $i2, $i3;
        char $c1, $c4;
        com.google.android.mail.common.base.CharMatcher $r2, $r3;
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator $r4, $r5;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        z0 = staticinvoke <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: boolean isHtmlWhiteSpace(char)>($c1);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        z1 = staticinvoke <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: boolean isHtmlWhiteSpace(char)>($c4);

        $r2 = staticinvoke <com.google.android.mail.common.base.CharMatcher: com.google.android.mail.common.base.CharMatcher anyOf(java.lang.CharSequence)>(" \n\r\t\f");

        r6 = virtualinvoke $r2.<com.google.android.mail.common.base.CharMatcher: java.lang.String trimFrom(java.lang.CharSequence)>(r1);

        $r3 = staticinvoke <com.google.android.mail.common.base.CharMatcher: com.google.android.mail.common.base.CharMatcher anyOf(java.lang.CharSequence)>(" \n\r\t\f");

        r7 = virtualinvoke $r3.<com.google.android.mail.common.base.CharMatcher: java.lang.String collapseFrom(java.lang.CharSequence,char)>(r6, 32);

        if z0 == 0 goto label2;

        $r5 = <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator Space>;

        virtualinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void setSeparator(com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator)>($r5);

     label2:
        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendTextDirect(java.lang.String)>(r7);

        if z1 == 0 goto label3;

        $r4 = <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator Space>;

        virtualinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void setSeparator(com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator)>($r4);

     label3:
        return;
    }

    final void appendPreText(java.lang.String)
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.String r1, $r3, $r4;
        java.lang.String[] r2;
        int i0, $i1;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("[\\r\\n]", -1);

        $r3 = r2[0];

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendTextDirect(java.lang.String)>($r3);

        i0 = 1;

     label1:
        $i1 = lengthof r2;

        if i0 >= $i1 goto label2;

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendNewLine()>();

        $r4 = r2[i0];

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendTextDirect(java.lang.String)>($r4);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private void appendTextDirect(java.lang.String)
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.String r1;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10);

        if $i1 >= 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        staticinvoke <com.google.android.mail.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z0, "text must not contain newlines.");

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void flushSeparator()>();

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void maybeAddQuoteMarks(boolean)>(1);

        $r2 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines> = 0;

        return;
    }

    final void appendForcedLineBreak()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void flushSeparator()>();

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendNewLine()>();

        return;
    }

    private void flushSeparator()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator $r1, $r3;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r4;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        $r2 = <com.google.android.mail.common.html.parser.HtmlTree$2: int[] $SwitchMap$com$google$android$mail$common$html$parser$HtmlTree$PlainTextPrinter$Separator>;

        $r1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator>;

        $i0 = virtualinvoke $r1.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $i2 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines>;

        if $i2 != 0 goto label4;

        $r4 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label4;

     label2:
        $i4 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines>;

        if $i4 >= 1 goto label4;

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendNewLine()>();

        goto label2;

     label3:
        $i3 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines>;

        if $i3 >= 2 goto label4;

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void appendNewLine()>();

        goto label3;

     label4:
        $r3 = <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator None>;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter$Separator separator> = $r3;

        return;
    }

    private void appendNewLine()
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        specialinvoke r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: void maybeAddQuoteMarks(boolean)>(0);

        $r1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $i0 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines>;

        $i1 = $i0 + 1;

        r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines> = $i1;

        return;
    }

    private void maybeAddQuoteMarks(boolean)
    {
        com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3;

        r0 := @this: com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter;

        z0 := @parameter0: boolean;

        $i1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int endingNewLines>;

        if $i1 <= 0 goto label3;

        $i2 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth>;

        if $i2 <= 0 goto label3;

        i0 = 0;

     label1:
        $i3 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: int quoteDepth>;

        if i0 >= $i3 goto label2;

        $r3 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        i0 = i0 + 1;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        $r1 = r0.<com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.google.android.mail.common.html.parser.HtmlTree$PlainTextPrinter: java.lang.String HTML_SPACE_EQUIVALENTS> = " \n\r\t\f";

        return;
    }
}
