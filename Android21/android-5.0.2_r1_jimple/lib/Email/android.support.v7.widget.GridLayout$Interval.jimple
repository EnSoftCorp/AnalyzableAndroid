final class android.support.v7.widget.GridLayout$Interval extends java.lang.Object
{
    public final int min;
    public final int max;

    public void <init>(int, int)
    {
        android.support.v7.widget.GridLayout$Interval r0;
        int i0, i1;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.support.v7.widget.GridLayout$Interval: int min> = i0;

        r0.<android.support.v7.widget.GridLayout$Interval: int max> = i1;

        return;
    }

    int size()
    {
        android.support.v7.widget.GridLayout$Interval r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        $i1 = r0.<android.support.v7.widget.GridLayout$Interval: int max>;

        $i0 = r0.<android.support.v7.widget.GridLayout$Interval: int min>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    android.support.v7.widget.GridLayout$Interval inverse()
    {
        android.support.v7.widget.GridLayout$Interval r0, $r1;
        int $i0, $i1;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        $r1 = new android.support.v7.widget.GridLayout$Interval;

        $i1 = r0.<android.support.v7.widget.GridLayout$Interval: int max>;

        $i0 = r0.<android.support.v7.widget.GridLayout$Interval: int min>;

        specialinvoke $r1.<android.support.v7.widget.GridLayout$Interval: void <init>(int,int)>($i1, $i0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        android.support.v7.widget.GridLayout$Interval r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (android.support.v7.widget.GridLayout$Interval) r1;

        $i1 = r0.<android.support.v7.widget.GridLayout$Interval: int max>;

        $i0 = r2.<android.support.v7.widget.GridLayout$Interval: int max>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<android.support.v7.widget.GridLayout$Interval: int min>;

        $i2 = r2.<android.support.v7.widget.GridLayout$Interval: int min>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        android.support.v7.widget.GridLayout$Interval r0;
        int i0, $i1, $i2, i3;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        i0 = r0.<android.support.v7.widget.GridLayout$Interval: int min>;

        $i2 = 31 * i0;

        $i1 = r0.<android.support.v7.widget.GridLayout$Interval: int max>;

        i3 = $i2 + $i1;

        return i3;
    }

    public java.lang.String toString()
    {
        android.support.v7.widget.GridLayout$Interval r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1;
        java.lang.String $r7;

        r0 := @this: android.support.v7.widget.GridLayout$Interval;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<android.support.v7.widget.GridLayout$Interval: int min>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $i1 = r0.<android.support.v7.widget.GridLayout$Interval: int max>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
