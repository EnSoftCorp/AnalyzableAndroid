abstract class com.google.common.hash.AbstractStreamingHashFunction extends java.lang.Object implements com.google.common.hash.HashFunction
{

    void <init>()
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.hash.HashCode hashString(java.lang.CharSequence)
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        java.lang.CharSequence r1;
        com.google.common.hash.Hasher $r2, $r3;
        com.google.common.hash.HashCode $r4;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putString(java.lang.CharSequence)>(r1);

        $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r4;
    }

    public com.google.common.hash.HashCode hashString(java.lang.CharSequence, java.nio.charset.Charset)
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        java.lang.CharSequence r1;
        java.nio.charset.Charset r2;
        com.google.common.hash.Hasher $r3, $r4;
        com.google.common.hash.HashCode $r5;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.nio.charset.Charset;

        $r3 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset)>(r1, r2);

        $r5 = interfaceinvoke $r4.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r5;
    }

    public com.google.common.hash.HashCode hashLong(long)
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        long l0;
        com.google.common.hash.Hasher $r1, $r2;
        com.google.common.hash.HashCode $r3;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        $r2 = interfaceinvoke $r1.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putLong(long)>(l0);

        $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r3;
    }

    public com.google.common.hash.HashCode hashBytes(byte[])
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        byte[] r1;
        com.google.common.hash.Hasher $r2, $r3;
        com.google.common.hash.HashCode $r4;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putBytes(byte[])>(r1);

        $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r4;
    }

    public com.google.common.hash.HashCode hashBytes(byte[], int, int)
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        byte[] r1;
        int i0, i1;
        com.google.common.hash.Hasher $r2, $r3;
        com.google.common.hash.HashCode $r4;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.Hasher putBytes(byte[],int,int)>(r1, i0, i1);

        $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();

        return $r4;
    }

    public com.google.common.hash.Hasher newHasher(int)
    {
        com.google.common.hash.AbstractStreamingHashFunction r0;
        int i0;
        com.google.common.hash.Hasher $r1;
        boolean $z0;

        r0 := @this: com.google.common.hash.AbstractStreamingHashFunction;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $r1 = virtualinvoke r0.<com.google.common.hash.AbstractStreamingHashFunction: com.google.common.hash.Hasher newHasher()>();

        return $r1;
    }
}
