abstract class android.support.v7.app.ActionBarActivityDelegate extends java.lang.Object
{
    static final java.lang.String METADATA_UI_OPTIONS;
    private static final java.lang.String TAG;
    final android.support.v7.app.ActionBarActivity mActivity;
    private android.support.v7.app.ActionBar mActionBar;
    private android.view.MenuInflater mMenuInflater;
    boolean mHasActionBar;
    boolean mOverlayActionBar;
    boolean mOverlayActionMode;
    boolean mIsFloating;
    final android.support.v7.internal.app.WindowCallback mDefaultWindowCallback;
    private android.support.v7.internal.app.WindowCallback mWindowCallback;
    private boolean mIsDestroyed;

    static android.support.v7.app.ActionBarActivityDelegate createDelegate(android.support.v7.app.ActionBarActivity)
    {
        android.support.v7.app.ActionBarActivity r0;
        int $i0;
        android.support.v7.app.ActionBarActivityDelegateBase $r1;
        android.support.v7.app.ActionBarActivityDelegateHC $r2;

        r0 := @parameter0: android.support.v7.app.ActionBarActivity;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r2 = new android.support.v7.app.ActionBarActivityDelegateHC;

        specialinvoke $r2.<android.support.v7.app.ActionBarActivityDelegateHC: void <init>(android.support.v7.app.ActionBarActivity)>(r0);

        return $r2;

     label1:
        $r1 = new android.support.v7.app.ActionBarActivityDelegateBase;

        specialinvoke $r1.<android.support.v7.app.ActionBarActivityDelegateBase: void <init>(android.support.v7.app.ActionBarActivity)>(r0);

        return $r1;
    }

    void <init>(android.support.v7.app.ActionBarActivity)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.app.ActionBarActivity r1;
        android.support.v7.app.ActionBarActivityDelegate$1 $r2;
        android.support.v7.internal.app.WindowCallback $r3;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 := @parameter0: android.support.v7.app.ActionBarActivity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.support.v7.app.ActionBarActivityDelegate$1;

        specialinvoke $r2.<android.support.v7.app.ActionBarActivityDelegate$1: void <init>(android.support.v7.app.ActionBarActivityDelegate)>(r0);

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.internal.app.WindowCallback mDefaultWindowCallback> = $r2;

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity> = r1;

        $r3 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.internal.app.WindowCallback mDefaultWindowCallback>;

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.internal.app.WindowCallback mWindowCallback> = $r3;

        return;
    }

    abstract android.support.v7.app.ActionBar createSupportActionBar();

    final android.support.v7.app.ActionBar getSupportActionBar()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        boolean $z0;
        android.support.v7.app.ActionBar $r1, $r2, $r3;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $z0 = r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mHasActionBar>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar createSupportActionBar()>();

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar> = $r3;

     label1:
        $r1 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar>;

        return $r1;
    }

    protected final void setSupportActionBar(android.support.v7.app.ActionBar)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.app.ActionBar r1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 := @parameter0: android.support.v7.app.ActionBar;

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar mActionBar> = r1;

        return;
    }

    abstract void setSupportActionBar(android.support.v7.widget.Toolbar);

    android.view.MenuInflater getMenuInflater()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.view.MenuInflater $r1, $r2;
        android.support.v7.internal.view.SupportMenuInflater $r3;
        android.content.Context $r4;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater>;

        if $r1 != null goto label1;

        $r3 = new android.support.v7.internal.view.SupportMenuInflater;

        $r4 = virtualinvoke r0.<android.support.v7.app.ActionBarActivityDelegate: android.content.Context getActionBarThemedContext()>();

        specialinvoke $r3.<android.support.v7.internal.view.SupportMenuInflater: void <init>(android.content.Context)>($r4);

        r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater> = $r3;

     label1:
        $r2 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.view.MenuInflater mMenuInflater>;

        return $r2;
    }

    void onCreate(android.os.Bundle)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.os.Bundle r1;
        android.content.res.TypedArray r2;
        int[] $r3;
        android.support.v7.app.ActionBarActivity $r4;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 := @parameter0: android.os.Bundle;

        $r4 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r3 = <android.support.v7.appcompat.R$styleable: int[] Theme>;

        r2 = virtualinvoke $r4.<android.support.v7.app.ActionBarActivity: android.content.res.TypedArray obtainStyledAttributes(int[])>($r3);

        $i0 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBar>;

        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean hasValue(int)>($i0);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        throw $r5;

     label1:
        $i1 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBar>;

        $z1 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i1, 0);

        r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mHasActionBar> = $z1;

        $i2 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionBarOverlay>;

        $z2 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i2, 0);

        r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mOverlayActionBar> = $z2;

        $i3 = <android.support.v7.appcompat.R$styleable: int Theme_windowActionModeOverlay>;

        $z3 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i3, 0);

        r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mOverlayActionMode> = $z3;

        $i4 = <android.support.v7.appcompat.R$styleable: int Theme_android_windowIsFloating>;

        $z4 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i4, 0);

        r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mIsFloating> = $z4;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    abstract void onConfigurationChanged(android.content.res.Configuration);

    abstract void onStop();

    abstract void onPostResume();

    abstract void setContentView(android.view.View);

    abstract void setContentView(int);

    abstract void setContentView(android.view.View, android.view.ViewGroup$LayoutParams);

    abstract void addContentView(android.view.View, android.view.ViewGroup$LayoutParams);

    abstract void onTitleChanged(java.lang.CharSequence);

    abstract void supportInvalidateOptionsMenu();

    abstract boolean supportRequestWindowFeature(int);

    abstract android.view.View onCreatePanelView(int);

    abstract boolean onPreparePanel(int, android.view.View, android.view.Menu);

    abstract void onPanelClosed(int, android.view.Menu);

    abstract boolean onMenuOpened(int, android.view.Menu);

    boolean onPrepareOptionsPanel(android.view.View, android.view.Menu)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.view.View r1;
        android.view.Menu r2;
        int $i0;
        android.support.v7.app.ActionBarActivity $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.Menu;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        $r4 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $z1 = virtualinvoke $r4.<android.support.v7.app.ActionBarActivity: boolean onPrepareOptionsMenu(android.view.Menu)>(r2);

        return $z1;

     label1:
        $r3 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $z0 = virtualinvoke $r3.<android.support.v7.app.ActionBarActivity: boolean superOnPrepareOptionsPanel(android.view.View,android.view.Menu)>(r1, r2);

        return $z0;
    }

    abstract boolean onCreatePanelMenu(int, android.view.Menu);

    abstract boolean onBackPressed();

    abstract android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback);

    abstract void setSupportProgressBarVisibility(boolean);

    abstract void setSupportProgressBarIndeterminateVisibility(boolean);

    abstract void setSupportProgressBarIndeterminate(boolean);

    abstract void setSupportProgress(int);

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    abstract boolean onKeyShortcut(int, android.view.KeyEvent);

    final android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl $r1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = new android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl: void <init>(android.support.v7.app.ActionBarActivityDelegate,android.support.v7.app.ActionBarActivityDelegate$1)>(r0, null);

        return $r1;
    }

    final android.support.v7.app.ActionBarDrawerToggle$Delegate getV7DrawerToggleDelegate()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl $r1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = new android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<android.support.v7.app.ActionBarActivityDelegate$ActionBarDrawableToggleImpl: void <init>(android.support.v7.app.ActionBarActivityDelegate,android.support.v7.app.ActionBarActivityDelegate$1)>(r0, null);

        return $r1;
    }

    abstract int getHomeAsUpIndicatorAttrId();

    abstract void onContentChanged();

    final java.lang.String getUiOptionsFromMetadata()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.content.pm.PackageManager r1;
        android.content.pm.ActivityInfo r2;
        java.lang.String r3, $r15, $r16;
        android.support.v7.app.ActionBarActivity $r4, $r5, $r13;
        android.content.ComponentName $r6;
        android.os.Bundle $r7, $r8;
        android.content.pm.PackageManager$NameNotFoundException $r9;
        java.lang.StringBuilder $r10, $r11, $r14, $r17;
        java.lang.Class $r12;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

     label1:
        $r4 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        r1 = virtualinvoke $r4.<android.support.v7.app.ActionBarActivity: android.content.pm.PackageManager getPackageManager()>();

        $r5 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r6 = virtualinvoke $r5.<android.support.v7.app.ActionBarActivity: android.content.ComponentName getComponentName()>();

        r2 = virtualinvoke r1.<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>($r6, 128);

        r3 = null;

        $r7 = r2.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        if $r7 == null goto label2;

        $r8 = r2.<android.content.pm.ActivityInfo: android.os.Bundle metaData>;

        r3 = virtualinvoke $r8.<android.os.Bundle: java.lang.String getString(java.lang.String)>("android.support.UI_OPTIONS");

     label2:
        return r3;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getUiOptionsFromMetadata: Activity \'");

        $r13 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

        $r12 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not in manifest");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActionBarActivityDelegate", $r16);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    protected final android.content.Context getActionBarThemedContext()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.content.Context r1;
        android.support.v7.app.ActionBar r2;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 = null;

        r2 = virtualinvoke r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBar getSupportActionBar()>();

        if r2 == null goto label1;

        r1 = virtualinvoke r2.<android.support.v7.app.ActionBar: android.content.Context getThemedContext()>();

     label1:
        if r1 != null goto label2;

        r1 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.app.ActionBarActivity mActivity>;

     label2:
        return r1;
    }

    abstract android.view.View createView(java.lang.String, android.util.AttributeSet);

    abstract android.support.v7.view.ActionMode startSupportActionModeFromWindow(android.support.v7.view.ActionMode$Callback);

    final void setWindowCallback(android.support.v7.internal.app.WindowCallback)
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.internal.app.WindowCallback r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r1 := @parameter0: android.support.v7.internal.app.WindowCallback;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("callback can not be null");

        throw $r2;

     label1:
        r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.internal.app.WindowCallback mWindowCallback> = r1;

        return;
    }

    final android.support.v7.internal.app.WindowCallback getWindowCallback()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        android.support.v7.internal.app.WindowCallback $r1;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $r1 = r0.<android.support.v7.app.ActionBarActivityDelegate: android.support.v7.internal.app.WindowCallback mWindowCallback>;

        return $r1;
    }

    final void destroy()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mIsDestroyed> = 1;

        return;
    }

    final boolean isDestroyed()
    {
        android.support.v7.app.ActionBarActivityDelegate r0;
        boolean $z0;

        r0 := @this: android.support.v7.app.ActionBarActivityDelegate;

        $z0 = r0.<android.support.v7.app.ActionBarActivityDelegate: boolean mIsDestroyed>;

        return $z0;
    }

    public static void <clinit>()
    {
        <android.support.v7.app.ActionBarActivityDelegate: java.lang.String TAG> = "ActionBarActivityDelegate";

        <android.support.v7.app.ActionBarActivityDelegate: java.lang.String METADATA_UI_OPTIONS> = "android.support.UI_OPTIONS";

        return;
    }
}
