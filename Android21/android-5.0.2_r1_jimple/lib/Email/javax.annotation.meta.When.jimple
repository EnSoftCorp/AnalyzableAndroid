public final enum class javax.annotation.meta.When extends java.lang.Enum
{
    public static final enum javax.annotation.meta.When ALWAYS;
    public static final enum javax.annotation.meta.When UNKNOWN;
    public static final enum javax.annotation.meta.When MAYBE;
    public static final enum javax.annotation.meta.When NEVER;
    private static final javax.annotation.meta.When[] $VALUES;

    public static javax.annotation.meta.When[] values()
    {
        javax.annotation.meta.When[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <javax.annotation.meta.When: javax.annotation.meta.When[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (javax.annotation.meta.When[]) $r1;

        return $r2;
    }

    public static javax.annotation.meta.When valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        javax.annotation.meta.When $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "javax/annotation/meta/When", r0);

        $r2 = (javax.annotation.meta.When) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        javax.annotation.meta.When r0;
        java.lang.String r1;
        int i0;

        r0 := @this: javax.annotation.meta.When;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        javax.annotation.meta.When $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        javax.annotation.meta.When[] $r4;

        $r0 = new javax.annotation.meta.When;

        specialinvoke $r0.<javax.annotation.meta.When: void <init>(java.lang.String,int)>("ALWAYS", 0);

        <javax.annotation.meta.When: javax.annotation.meta.When ALWAYS> = $r0;

        $r1 = new javax.annotation.meta.When;

        specialinvoke $r1.<javax.annotation.meta.When: void <init>(java.lang.String,int)>("UNKNOWN", 1);

        <javax.annotation.meta.When: javax.annotation.meta.When UNKNOWN> = $r1;

        $r2 = new javax.annotation.meta.When;

        specialinvoke $r2.<javax.annotation.meta.When: void <init>(java.lang.String,int)>("MAYBE", 2);

        <javax.annotation.meta.When: javax.annotation.meta.When MAYBE> = $r2;

        $r3 = new javax.annotation.meta.When;

        specialinvoke $r3.<javax.annotation.meta.When: void <init>(java.lang.String,int)>("NEVER", 3);

        <javax.annotation.meta.When: javax.annotation.meta.When NEVER> = $r3;

        $r4 = newarray (javax.annotation.meta.When)[4];

        $r5 = <javax.annotation.meta.When: javax.annotation.meta.When ALWAYS>;

        $r4[0] = $r5;

        $r6 = <javax.annotation.meta.When: javax.annotation.meta.When UNKNOWN>;

        $r4[1] = $r6;

        $r7 = <javax.annotation.meta.When: javax.annotation.meta.When MAYBE>;

        $r4[2] = $r7;

        $r8 = <javax.annotation.meta.When: javax.annotation.meta.When NEVER>;

        $r4[3] = $r8;

        <javax.annotation.meta.When: javax.annotation.meta.When[] $VALUES> = $r4;

        return;
    }
}
