public class com.android.bitmap.drawable.CircularBitmapDrawable extends com.android.bitmap.drawable.ExtendedBitmapDrawable
{
    private static android.graphics.Matrix sMatrix;
    private final android.graphics.Paint mBitmapPaint;
    private final android.graphics.Paint mBorderPaint;
    private float mBorderWidth;
    private android.graphics.Bitmap mShaderBitmap;

    public void <init>(android.content.res.Resources, com.android.bitmap.BitmapCache, boolean)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.content.res.Resources r1;
        com.android.bitmap.BitmapCache r2;
        boolean z0;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: com.android.bitmap.BitmapCache;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void <init>(android.content.res.Resources,com.android.bitmap.BitmapCache,boolean,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>(r1, r2, z0, null);

        return;
    }

    public void <init>(android.content.res.Resources, com.android.bitmap.BitmapCache, boolean, com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.content.res.Resources r1;
        com.android.bitmap.BitmapCache r2;
        boolean z0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r3;
        android.graphics.Paint $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13;
        android.graphics.Paint$Style $r10;
        float $f0;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: com.android.bitmap.BitmapCache;

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void <init>(android.content.res.Resources,com.android.bitmap.BitmapCache,boolean,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>(r1, r2, z0, r3);

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint> = $r5;

        $r6 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r7 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r8 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setDither(boolean)>(1);

        $r9 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>(0);

        $r11 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $r12 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        $f0 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: float mBorderWidth>;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r13 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return;
    }

    public void setBorderWidth(float)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        float f0, $f1;
        boolean z0, $z1;
        android.graphics.Paint $r1, $r2;
        byte $b0;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        $f1 = virtualinvoke $r1.<android.graphics.Paint: float getStrokeWidth()>();

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(f0);

        r0.<com.android.bitmap.drawable.CircularBitmapDrawable: float mBorderWidth> = f0;

        if z0 == 0 goto label3;

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    public void setBorderColor(int)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        int i0, $i1;
        boolean z0, $z1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        $i1 = virtualinvoke $r1.<android.graphics.Paint: int getColor()>();

        if $i1 == i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r2 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i0);

        if z0 == 0 goto label3;

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    protected void onDrawBitmap(android.graphics.Canvas, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2, r3;
        com.android.bitmap.ReusableBitmap $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.graphics.Rect;

        r3 := @parameter2: android.graphics.Rect;

        $r4 = virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: com.android.bitmap.ReusableBitmap getBitmap()>();

        $r5 = $r4.<com.android.bitmap.ReusableBitmap: android.graphics.Bitmap bmp>;

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void onDrawCircularBitmap(android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Rect,android.graphics.Rect,float)>($r5, r1, r2, r3, 1.0F);

        return;
    }

    protected void onDrawPlaceholderOrProgress(android.graphics.Canvas, com.android.bitmap.drawable.TileDrawable)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.graphics.Canvas r1;
        com.android.bitmap.drawable.TileDrawable r2;
        android.graphics.drawable.BitmapDrawable r3;
        android.graphics.Bitmap r4;
        float f0, $f1;
        android.graphics.drawable.Drawable $r5;
        android.graphics.Paint $r6;
        int $i0, $i1, $i2;
        android.graphics.Rect $r7, $r8, $r9;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: com.android.bitmap.drawable.TileDrawable;

        $r5 = virtualinvoke r2.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable getInnerDrawable()>();

        r3 = (android.graphics.drawable.BitmapDrawable) $r5;

        r4 = virtualinvoke r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        $r6 = virtualinvoke r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>();

        $i0 = virtualinvoke $r6.<android.graphics.Paint: int getAlpha()>();

        $f1 = (float) $i0;

        f0 = $f1 / 255.0F;

        $r7 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Rect sRect>;

        $i1 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r7.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i1, $i2);

        $r9 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Rect sRect>;

        $r8 = virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void onDrawCircularBitmap(android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Rect,android.graphics.Rect,float)>(r4, r1, $r9, $r8, f0);

        return;
    }

    protected void onDrawCircularBitmap(android.graphics.Bitmap, android.graphics.Canvas, android.graphics.Rect, android.graphics.Rect)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2;
        android.graphics.Rect r3, r4;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void onDrawCircularBitmap(android.graphics.Bitmap,android.graphics.Canvas,android.graphics.Rect,android.graphics.Rect,float)>(r1, r2, r3, r4, 1.0F);

        return;
    }

    protected void onDrawCircularBitmap(android.graphics.Bitmap, android.graphics.Canvas, android.graphics.Rect, android.graphics.Rect, float)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.graphics.Bitmap r1, $r21;
        android.graphics.Canvas r2;
        android.graphics.Rect r3, r4;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21;
        android.graphics.BitmapShader r5, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Paint $r6, $r14, $r17, $r18, $r19, $r20, $r22;
        android.graphics.Shader $r7;
        android.graphics.Shader$TileMode $r9, $r10;
        android.graphics.Matrix $r11, $r12, $r13, $r15;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.Rect;

        r4 := @parameter3: android.graphics.Rect;

        f0 := @parameter4: float;

        $r6 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        $r7 = virtualinvoke $r6.<android.graphics.Paint: android.graphics.Shader getShader()>();

        r5 = (android.graphics.BitmapShader) $r7;

        if r5 == null goto label1;

        $r21 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Bitmap mShaderBitmap>;

        if $r21 == r1 goto label2;

     label1:
        $r8 = new android.graphics.BitmapShader;

        $r10 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r9 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r8.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r1, $r10, $r9);

        r5 = $r8;

        r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Bitmap mShaderBitmap> = r1;

     label2:
        $r11 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Matrix sMatrix>;

        virtualinvoke $r11.<android.graphics.Matrix: void reset()>();

        $i1 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $f2 = (float) $i1;

        $i2 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $f4 = (float) $i2;

        $f3 = $f2 / $f4;

        $i3 = virtualinvoke r4.<android.graphics.Rect: int height()>();

        $f5 = (float) $i3;

        $i4 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        $f6 = (float) $i4;

        $f7 = $f5 / $f6;

        f1 = staticinvoke <java.lang.Math: float max(float,float)>($f3, $f7);

        $r12 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Matrix sMatrix>;

        virtualinvoke $r12.<android.graphics.Matrix: boolean postScale(float,float)>(f1, f1);

        $r15 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Matrix sMatrix>;

        $i6 = r4.<android.graphics.Rect: int left>;

        $f8 = (float) $i6;

        $i5 = r4.<android.graphics.Rect: int top>;

        $f9 = (float) $i5;

        virtualinvoke $r15.<android.graphics.Matrix: boolean postTranslate(float,float)>($f8, $f9);

        $r13 = <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Matrix sMatrix>;

        virtualinvoke r5.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>($r13);

        $r14 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r14.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r5);

        $r17 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        i0 = virtualinvoke $r17.<android.graphics.Paint: int getAlpha()>();

        $r18 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        $f10 = (float) i0;

        $f11 = $f10 * f0;

        $i8 = (int) $f11;

        virtualinvoke $r18.<android.graphics.Paint: void setAlpha(int)>($i8);

        $i7 = virtualinvoke r4.<android.graphics.Rect: int centerX()>();

        $f13 = (float) $i7;

        $i10 = virtualinvoke r4.<android.graphics.Rect: int centerY()>();

        $f12 = (float) $i10;

        $i9 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $i11 = $i9 / 2;

        $f14 = (float) $i11;

        $r20 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f13, $f12, $f14, $r20);

        $r19 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r19.<android.graphics.Paint: void setAlpha(int)>(i0);

        $i13 = virtualinvoke r4.<android.graphics.Rect: int centerX()>();

        $f16 = (float) $i13;

        $i12 = virtualinvoke r4.<android.graphics.Rect: int centerY()>();

        $f15 = (float) $i12;

        $i14 = virtualinvoke r4.<android.graphics.Rect: int width()>();

        $f19 = (float) $i14;

        $f21 = $f19 / 2.0F;

        $f18 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: float mBorderWidth>;

        $f17 = $f18 / 2.0F;

        $f20 = $f21 - $f17;

        $r22 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f16, $f15, $f20, $r22);

        return;
    }

    public void setAlpha(int)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        int i0, i1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setAlpha(int)>(i0);

        $r1 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        $r2 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        if i0 == i1 goto label1;

        virtualinvoke r0.<com.android.bitmap.drawable.CircularBitmapDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.bitmap.drawable.CircularBitmapDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.bitmap.drawable.CircularBitmapDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        $r2 = r0.<com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        <com.android.bitmap.drawable.CircularBitmapDrawable: android.graphics.Matrix sMatrix> = $r0;

        return;
    }
}
