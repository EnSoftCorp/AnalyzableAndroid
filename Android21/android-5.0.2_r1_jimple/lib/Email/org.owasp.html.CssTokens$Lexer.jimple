final class org.owasp.html.CssTokens$Lexer extends java.lang.Object
{
    private final java.lang.String css;
    private final java.lang.StringBuilder sb;
    private int pos;
    private final int cssLimit;
    private java.util.List tokenTypes;
    private int[] tokenBreaks;
    private int tokenBreaksLimit;
    private int[] brackets;
    private int bracketsLimit;
    private int[] open;
    private int openLimit;
    private static final long HEX_ENCODED_BITMASK;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String)
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int[] $r2, $r3, $r4;
        java.lang.StringBuilder $r5;
        int $i0;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = 0;

        r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes> = null;

        $r2 = newarray (int)[128];

        r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks> = $r2;

        r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit> = 0;

        $r3 = staticinvoke <org.owasp.html.CssTokens: int[] access$300()>();

        r0.<org.owasp.html.CssTokens$Lexer: int[] brackets> = $r3;

        r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit> = 0;

        $r4 = staticinvoke <org.owasp.html.CssTokens: int[] access$300()>();

        r0.<org.owasp.html.CssTokens$Lexer: int[] open> = $r4;

        r0.<org.owasp.html.CssTokens$Lexer: int openLimit> = 0;

        r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css> = r1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb> = $r5;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<org.owasp.html.CssTokens$Lexer: int cssLimit> = $i0;

        return;
    }

    org.owasp.html.CssTokens$TokenType openBracket(char)
    {
        org.owasp.html.CssTokens$Lexer r0;
        char c0;
        byte b1;
        org.owasp.html.CssTokens$TokenType r1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        java.lang.AssertionError $r13;
        java.lang.String $r16;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        c0 := @parameter0: char;

        lookupswitch(c0)
        {
            case 40: goto label1;
            case 91: goto label2;
            case 123: goto label3;
            default: goto label4;
        };

     label1:
        b1 = 41;

        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType LEFT_PAREN>;

        goto label5;

     label2:
        b1 = 93;

        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType LEFT_SQUARE>;

        goto label5;

     label3:
        b1 = 125;

        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType LEFT_CURLY>;

        goto label5;

     label4:
        $r13 = new java.lang.AssertionError;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid open bracket ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>($r16);

        throw $r13;

     label5:
        $r2 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i2 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $r3 = staticinvoke <org.owasp.html.CssTokens: int[] access$400(int[],int,int)>($r2, $i2, 2);

        r0.<org.owasp.html.CssTokens$Lexer: int[] brackets> = $r3;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        $r5 = staticinvoke <org.owasp.html.CssTokens: int[] access$400(int[],int,int)>($r4, $i3, 2);

        r0.<org.owasp.html.CssTokens$Lexer: int[] open> = $r5;

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i4 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        $i5 = $i4 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int openLimit> = $i5;

        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $r6[$i4] = $i6;

        $r7 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        $i8 = $i7 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int openLimit> = $i8;

        $r7[$i7] = b1;

        $r8 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $i10 = $i9 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit> = $i10;

        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $r8[$i9] = $i12;

        $r9 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $i13 = $i11 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit> = $i13;

        $r9[$i11] = -1;

        $r11 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        return r1;
    }

    void closeBracket(char)
    {
        org.owasp.html.CssTokens$Lexer r0;
        char c0;
        int i1, $i2, $i3;
        int[] $r1;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        c0 := @parameter0: char;

        i1 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

     label1:
        if i1 != 0 goto label2;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        return;

     label2:
        i1 = i1 + -2;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i2 = i1 + 1;

        $i3 = $r1[$i2];

        if c0 != $i3 goto label1;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void closeBrackets(int)>(i1);

        return;
    }

    private void closeBrackets(int)
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        java.lang.StringBuilder $r8;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        i0 := @parameter0: int;

        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        i1 = $i6 - i0;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $r2 = staticinvoke <org.owasp.html.CssTokens: int[] access$400(int[],int,int)>($r1, $i7, i1);

        r0.<org.owasp.html.CssTokens$Lexer: int[] brackets> = $r2;

        i2 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

     label1:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        if $i8 <= i0 goto label2;

        $r3 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        $i10 = $i9 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int openLimit> = $i10;

        i3 = $r3[$i10];

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: int[] open>;

        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int openLimit>;

        $i12 = $i11 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int openLimit> = $i12;

        i4 = $r4[$i12];

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        i5 = $r5[i4];

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i13 = i4 + 1;

        $r6[$i13] = i2;

        $r7 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i14 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $i15 = $i14 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit> = $i15;

        $r7[$i14] = i2;

        $r9 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i17 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        $i16 = $i17 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit> = $i16;

        $r9[$i17] = i5;

        $r8 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    org.owasp.html.CssTokens build()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12;
        java.lang.String r1;
        int[] r2, $r7, $r10, $r11, $r12, $r13, r23;
        org.owasp.html.CssTokens$TokenType[] r3, $r14;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r18;
        java.util.List $r6, $r15, $r20;
        org.owasp.html.CssTokens $r16, $r22;
        java.lang.Object[] $r17;
        char $c9;
        org.owasp.html.CssTokens$Brackets $r19;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i0 = virtualinvoke $r4.<java.lang.StringBuilder: int length()>();

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void closeBrackets(int)>(0);

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i2 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitMergedTokens(int,int)>(i0, $i2);

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes>;

        if $r6 != null goto label1;

        $r22 = staticinvoke <org.owasp.html.CssTokens: org.owasp.html.CssTokens access$500()>();

        return $r22;

     label1:
        $r7 = r0.<org.owasp.html.CssTokens$Lexer: int[] brackets>;

        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int bracketsLimit>;

        r23 = staticinvoke <org.owasp.html.CssTokens: int[] access$600(int[],int)>($r7, $i3);

        $r8 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i1 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        if i1 <= 0 goto label2;

        $r18 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i10 = i1 - 1;

        $c9 = virtualinvoke $r18.<java.lang.StringBuilder: char charAt(int)>($i10);

        if $c9 != 32 goto label2;

        i1 = i1 + -1;

        $r20 = r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes>;

        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $i12 = $i11 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit> = $i12;

        interfaceinvoke $r20.<java.util.List: java.lang.Object remove(int)>($i12);

     label2:
        $r9 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, i1);

        $r10 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i4 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $r11 = staticinvoke <org.owasp.html.CssTokens: int[] access$400(int[],int,int)>($r10, $i4, 1);

        r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks> = $r11;

        $r12 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $i6 = $i5 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit> = $i6;

        $i8 = virtualinvoke r1.<java.lang.String: int length()>();

        $r12[$i5] = $i8;

        $r13 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        r2 = staticinvoke <org.owasp.html.CssTokens: int[] access$600(int[],int)>($r13, $i7);

        $r15 = r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes>;

        $r14 = staticinvoke <org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] access$700()>();

        $r17 = interfaceinvoke $r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        r3 = (org.owasp.html.CssTokens$TokenType[]) $r17;

        $r16 = new org.owasp.html.CssTokens;

        $r19 = new org.owasp.html.CssTokens$Brackets;

        specialinvoke $r19.<org.owasp.html.CssTokens$Brackets: void <init>(int[],org.owasp.html.CssTokens$1)>(r23, null);

        specialinvoke $r16.<org.owasp.html.CssTokens: void <init>(java.lang.String,org.owasp.html.CssTokens$Brackets,int[],org.owasp.html.CssTokens$TokenType[],org.owasp.html.CssTokens$1)>(r1, $r19, r2, r3, null);

        return $r16;
    }

    void lex()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1, $r21, $r24, $r45;
        int i0, i2, i3, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, i63, i64;
        char c1, c4, c5, $c12, $c14, $c16, $c18, $c25, $c41, $c45, $c46, c60, c61, c62;
        org.owasp.html.CssTokens$TokenType r2, $r7, $r8, $r10, $r12, $r15, r47, r48, r49;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r13, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r27, $r28, $r31, $r33, $r34, $r36, $r40, $r41, $r42, $r43, $r44, $r46;
        java.util.ArrayList $r4;
        boolean $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11;
        java.lang.AssertionError $r14, $r18, $r38;
        java.util.List $r39;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        if $i7 != $i6 goto label01;

        return;

     label01:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes> = $r4;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

     label02:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i8 >= i0 goto label57;

        $z1 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $i56 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $r39 = r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes>;

        $i55 = interfaceinvoke $r39.<java.util.List: int size()>();

        if $i56 == $i55 goto label03;

        $r38 = new java.lang.AssertionError;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("token and types out of sync at ");

        $i59 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in `");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r46 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("`");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.lang.AssertionError: void <init>(java.lang.Object)>($r45);

        throw $r38;

     label03:
        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i9);

        i2 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i3 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        lookupswitch(c1)
        {
            case 9: goto label04;
            case 10: goto label04;
            case 12: goto label04;
            case 13: goto label04;
            case 32: goto label04;
            case 34: goto label17;
            case 35: goto label15;
            case 36: goto label37;
            case 39: goto label17;
            case 40: goto label35;
            case 41: goto label36;
            case 42: goto label37;
            case 43: goto label21;
            case 44: goto label34;
            case 45: goto label21;
            case 46: goto label21;
            case 47: goto label05;
            case 48: goto label20;
            case 49: goto label20;
            case 50: goto label20;
            case 51: goto label20;
            case 52: goto label20;
            case 53: goto label20;
            case 54: goto label20;
            case 55: goto label20;
            case 56: goto label20;
            case 57: goto label20;
            case 58: goto label32;
            case 59: goto label33;
            case 60: goto label10;
            case 62: goto label12;
            case 64: goto label13;
            case 85: goto label18;
            case 91: goto label35;
            case 92: goto label43;
            case 93: goto label36;
            case 94: goto label37;
            case 95: goto label42;
            case 117: goto label18;
            case 123: goto label35;
            case 124: goto label37;
            case 125: goto label36;
            case 126: goto label37;
            case 65279: goto label04;
            default: goto label45;
        };

     label04:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label52;

     label05:
        $i26 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i27 = $i26 + 1;

        if $i27 >= i0 goto label06;

        $i23 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i24 = $i23 + 1;

        $c25 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i24);

        goto label07;

     label06:
        $c25 = 0;

     label07:
        c4 = $c25;

        if c4 == 47 goto label08;

        if c4 != 42 goto label09;

     label08:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label52;

     label09:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label10:
        $z7 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        if $z7 == 0 goto label11;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label52;

     label11:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(60);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label12:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        $r27 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        $i22 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i21 = $i22 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i21;

        goto label52;

     label13:
        $z4 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeAtKeyword()>();

        if $z4 == 0 goto label14;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType AT>;

        goto label52;

     label14:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label15:
        $r34 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(35);

        r47 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeHash()>();

        if r47 == null goto label16;

        r2 = r47;

        goto label52;

     label16:
        $i54 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i53 = $i54 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i53;

        $r36 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label17:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeString()>();

        goto label52;

     label18:
        $z5 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeUnicodeRange()>();

        if $z5 == 0 goto label19;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType UNICODE_RANGE>;

        goto label52;

     label19:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()>();

        goto label52;

     label20:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeNumberOrPercentageOrDimension()>();

        goto label52;

     label21:
        $i29 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i30 = $i29 + 1;

        if $i30 >= i0 goto label22;

        $i43 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i44 = $i43 + 1;

        $c41 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i44);

        goto label23;

     label22:
        $c41 = 0;

     label23:
        c60 = $c41;

        $z9 = staticinvoke <org.owasp.html.CssTokens: boolean access$900(char)>(c60);

        if $z9 != 0 goto label24;

        if c60 != 46 goto label25;

        $i37 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i36 = $i37 + 2;

        if $i36 >= i0 goto label25;

        $i39 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i38 = $i39 + 2;

        $c45 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i38);

        $z11 = staticinvoke <org.owasp.html.CssTokens: boolean access$900(char)>($c45);

        if $z11 == 0 goto label25;

     label24:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeNumberOrPercentageOrDimension()>();

        goto label52;

     label25:
        if c1 != 43 goto label26;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label26:
        if c1 != 45 goto label28;

        $z10 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        if $z10 == 0 goto label27;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label52;

     label27:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()>();

        goto label52;

     label28:
        $z8 = staticinvoke <org.owasp.html.CssTokens: boolean access$1000(int)>(c60);

        if $z8 == 0 goto label31;

        $r28 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i28 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i34 = $i28 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i34;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeIdent(boolean)>(0);

        $i35 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i33 = i2 + 1;

        if $i35 == $i33 goto label30;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DOT_IDENT>;

        $i31 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i31 >= i0 goto label52;

        $i32 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i32);

        if 40 != c5 goto label29;

        $r33 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label29:
        goto label52;

     label30:
        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        $r31 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label52;

     label31:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(46);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label32:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType COLON>;

        goto label52;

     label33:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType SEMICOLON>;

        goto label52;

     label34:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType COMMA>;

        goto label52;

     label35:
        r2 = virtualinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType openBracket(char)>(c1);

        $i51 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i52 = $i51 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i52;

        goto label52;

     label36:
        virtualinvoke r0.<org.owasp.html.CssTokens$Lexer: void closeBracket(char)>(c1);

        $i42 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i40 = $i42 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i40;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label37:
        $i49 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i50 = $i49 + 1;

        if $i50 >= i0 goto label38;

        $i47 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i48 = $i47 + 1;

        $c46 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i48);

        goto label39;

     label38:
        $c46 = 0;

     label39:
        c61 = $c46;

        if c61 != 61 goto label40;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeMatch(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType MATCH>;

        goto label52;

     label40:
        if c1 != 124 goto label41;

        if c61 != 124 goto label41;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeColumn()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType COLUMN>;

        goto label52;

     label41:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label42:
        r2 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()>();

        goto label52;

     label43:
        r48 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()>();

        if r48 != null goto label44;

        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i20 = $i19 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i20;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label52;

     label44:
        r2 = r48;

        goto label52;

     label45:
        c62 = c1 | 32;

        if 97 > c62 goto label46;

        if c62 <= 122 goto label47;

     label46:
        if c1 < 128 goto label50;

     label47:
        r49 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()>();

        if r49 == null goto label48;

        r2 = r49;

        goto label49;

     label48:
        $i58 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i57 = $i58 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i57;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

     label49:
        goto label52;

     label50:
        if c1 <= 32 goto label51;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeDelim(char)>(c1);

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        goto label52;

     label51:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeIgnorable()>();

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

     label52:
        $z2 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z2 != 0 goto label53;

        $i15 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i15 > i2 goto label53;

        $r18 = new java.lang.AssertionError;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("empty token at ");

        $i17 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ch0=");

        $c16 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c16);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":U+");

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $r21 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($c18);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.AssertionError: void <init>(java.lang.Object)>($r24);

        throw $r18;

     label53:
        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i63 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        if i63 <= i3 goto label56;

        $r8 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

        if r2 != $r8 goto label54;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitMergedTokens(int,int)>(i3, i63);

        goto label56;

     label54:
        $r7 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        if r2 == $r7 goto label55;

        $r13 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $c14 = virtualinvoke $r13.<java.lang.StringBuilder: char charAt(int)>(i3);

        if $c14 != 32 goto label55;

        $r15 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitToken(org.owasp.html.CssTokens$TokenType,int)>($r15, i3);

        i3 = i3 + 1;

        $z3 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z3 != 0 goto label55;

        if i3 != i63 goto label55;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label55:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitToken(org.owasp.html.CssTokens$TokenType,int)>(r2, i3);

        $r10 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        if r2 == $r10 goto label56;

        $r9 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i64 = virtualinvoke $r9.<java.lang.StringBuilder: int length()>();

        $i10 = i3 + 1;

        if $i10 >= i64 goto label56;

        $r11 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i11 = i64 - 1;

        $c12 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>($i11);

        if $c12 != 32 goto label56;

        $r12 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        $i13 = i64 - 1;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitToken(org.owasp.html.CssTokens$TokenType,int)>($r12, $i13);

     label56:
        goto label02;

     label57:
        return;
    }

    private void emitMergedTokens(int, int)
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, i2;
        org.owasp.html.CssTokens$TokenType r1;
        java.lang.StringBuilder $r2;
        char $c3;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = i0;

     label1:
        if i2 >= i1 goto label8;

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $c3 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>(i2);

        lookupswitch($c3)
        {
            case 32: goto label2;
            case 41: goto label4;
            case 93: goto label5;
            case 125: goto label3;
            default: goto label6;
        };

     label2:
        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        goto label7;

     label3:
        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType RIGHT_CURLY>;

        goto label7;

     label4:
        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType RIGHT_PAREN>;

        goto label7;

     label5:
        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType RIGHT_SQUARE>;

        goto label7;

     label6:
        r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DELIM>;

     label7:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void emitToken(org.owasp.html.CssTokens$TokenType,int)>(r1, i2);

        i2 = i2 + 1;

        goto label1;

     label8:
        return;
    }

    private void emitToken(org.owasp.html.CssTokens$TokenType, int)
    {
        org.owasp.html.CssTokens$Lexer r0;
        org.owasp.html.CssTokens$TokenType r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r2, $r3, $r4, $r6;
        java.util.List $r5;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 := @parameter0: org.owasp.html.CssTokens$TokenType;

        i0 := @parameter1: int;

        $i1 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        if $i1 == 0 goto label1;

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $i6 = $i5 - 1;

        $i7 = $r6[$i6];

        if $i7 == i0 goto label2;

     label1:
        $r2 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i2 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $r3 = staticinvoke <org.owasp.html.CssTokens: int[] access$400(int[],int,int)>($r2, $i2, 1);

        r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks> = $r3;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: int[] tokenBreaks>;

        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit>;

        $i4 = $i3 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int tokenBreaksLimit> = $i4;

        $r4[$i3] = i0;

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.util.List tokenTypes>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    private void consumeDelim(char)
    {
        org.owasp.html.CssTokens$Lexer r0;
        char c0;
        java.lang.StringBuilder $r1, $r3;
        int $i1, $i2;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        c0 := @parameter0: char;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        lookupswitch(c0)
        {
            case 36: goto label1;
            case 43: goto label1;
            case 45: goto label1;
            case 46: goto label1;
            case 47: goto label1;
            case 60: goto label1;
            case 64: goto label1;
            case 92: goto label1;
            case 94: goto label1;
            case 124: goto label1;
            case 126: goto label1;
            default: goto label2;
        };

     label1:
        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label2;

     label2:
        $i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i2 = $i1 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i2;

        return;
    }

    private boolean consumeIgnorable()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i1, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i54, $i55;
        char c2, c3, $c17, $c20, $c27, $c30, $c34, $c40, $c52, $c53;
        boolean $z0;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

     label01:
        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i5 >= i0 goto label16;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        if c2 <= 32 goto label02;

        if c2 != 65279 goto label03;

     label02:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i9 = $i8 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i9;

        goto label15;

     label03:
        $i10 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i11 = $i10 + 1;

        if $i11 != i0 goto label04;

        goto label16;

     label04:
        if c2 != 47 goto label13;

        $i33 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i38 = $i33 + 1;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i38);

        if c3 != 42 goto label10;

        $i39 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i44 = $i39 + 2;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i44;

     label05:
        $i43 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i43 >= i0 goto label12;

        $i42 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        i4 = virtualinvoke r1.<java.lang.String: int indexOf(int,int)>(42, $i42);

        if i4 >= 0 goto label06;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i0;

        goto label12;

     label06:
        $i48 = i4 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i48;

     label07:
        $i47 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i47 >= i0 goto label08;

        $i49 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c53 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i49);

        if $c53 != 42 goto label08;

        $i54 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i55 = $i54 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i55;

        goto label07;

     label08:
        $i46 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i46 >= i0 goto label09;

        $i45 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c52 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i45);

        if $c52 != 47 goto label09;

        $i51 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i50 = $i51 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i50;

        goto label12;

     label09:
        goto label05;

     label10:
        if c3 != 47 goto label16;

     label11:
        $i36 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i37 = $i36 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i37;

        if $i37 >= i0 goto label12;

        $i41 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c40 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i41);

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>($c40);

        if $z0 == 0 goto label11;

        goto label12;

     label12:
        goto label15;

     label13:
        if c2 != 60 goto label14;

        $i21 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i24 = $i21 + 3;

        if $i24 >= i0 goto label16;

        $i23 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i25 = $i23 + 1;

        $c27 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i25);

        if 33 != $c27 goto label16;

        $i28 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i26 = $i28 + 2;

        $c30 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i26);

        if 45 != $c30 goto label16;

        $i31 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i29 = $i31 + 3;

        $c34 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i29);

        if 45 != $c34 goto label16;

        $i35 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i32 = $i35 + 4;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i32;

        goto label15;

     label14:
        if c2 != 45 goto label16;

        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i14 = $i12 + 2;

        if $i14 >= i0 goto label16;

        $i13 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i15 = $i13 + 1;

        $c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i15);

        if 45 != $c17 goto label16;

        $i16 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i18 = $i16 + 2;

        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i18);

        if 62 != $c20 goto label16;

        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i22 = $i19 + 3;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i22;

     label15:
        goto label01;

     label16:
        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i6 != i1 goto label17;

        return 0;

     label17:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        return 1;
    }

    private void breakOutput()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        char $c2;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i0 = $i1 - 1;

        if i0 < 0 goto label1;

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $c2 = virtualinvoke $r2.<java.lang.StringBuilder: char charAt(int)>(i0);

        if $c2 == 32 goto label1;

        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        return;
    }

    private void consumeColumn()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $i0 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i1 = $i0 + 2;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i1;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("||");

        return;
    }

    private void consumeMatch(char)
    {
        org.owasp.html.CssTokens$Lexer r0;
        char c0;
        int $i1, $i2;
        java.lang.StringBuilder $r1, $r2;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        c0 := @parameter0: char;

        $i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i2 = $i1 + 2;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i2;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        return;
    }

    private void consumeIdent(boolean)
    {
        org.owasp.html.CssTokens$Lexer r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9;
        java.lang.StringBuilder $r1, $r3, $r4;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        z0 := @parameter0: boolean;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        i1 = -1;

        i2 = 0;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i3 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i4 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

     label1:
        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i7 >= i0 goto label8;

        i5 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        i6 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: int readCodepoint()>();

        if i6 != 92 goto label2;

        i6 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: int consumeAndDecodeEscapeSequence()>();

        goto label3;

     label2:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i9 = $i8 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i9;

     label3:
        if i6 < 0 goto label6;

        $z1 = staticinvoke <org.owasp.html.CssTokens: boolean access$1000(int)>(i6);

        if $z1 == 0 goto label6;

        if z0 != 0 goto label5;

        if i2 >= 2 goto label5;

        if 48 > i6 goto label5;

        if i6 > 57 goto label5;

        if i1 == 45 goto label4;

        if i1 != -1 goto label5;

     label4:
        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i4;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(i3);

        return;

     label5:
        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i6);

        i1 = i6;

        i2 = i2 + 1;

        goto label7;

     label6:
        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i5;

        return;

     label7:
        goto label1;

     label8:
        return;
    }

    private boolean consumeAtKeyword()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r5;
        java.lang.AssertionError $r6;
        char $c8;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $z0 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c8 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i7);

        if $c8 == 64 goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label1:
        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $i2 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i3 = $i2 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i3;

        i1 = $i3;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeIdent(boolean)>(0);

        $i4 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i4 != i1 goto label2;

        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i6 = $i5 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i6;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(i0);

        return 0;

     label2:
        return 1;
    }

    private int consumeAndDecodeEscapeSequence()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i3, i4, i5, i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i24;
        char c1, c2, c7, $c23;
        boolean $z0, $z1, $z2, $z3;
        java.lang.AssertionError $r2;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        $z0 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i24 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c23 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i24);

        if $c23 == 92 goto label01;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label01:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i9 = $i8 + 1;

        if $i9 < i0 goto label02;

        return -1;

     label02:
        $i10 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i11 = $i10 + 1;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i11);

        $z1 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c1);

        if $z1 == 0 goto label03;

        return -1;

     label03:
        c2 = c1 | 32;

        if 48 > c1 goto label04;

        if c1 <= 57 goto label05;

     label04:
        if 97 > c2 goto label15;

        if c2 > 102 goto label15;

     label05:
        i3 = 0;

        $i13 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        i4 = $i13 + 1;

        $i16 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i15 = $i16 + 7;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i15, i0);

        i6 = i4;

     label06:
        $i18 = i3 << 4;

        if c1 > 57 goto label07;

        $i17 = c1 - 48;

        goto label08;

     label07:
        $i17 = c2 - 87;

     label08:
        i3 = $i18 | $i17;

        i6 = i6 + 1;

        if i6 != i5 goto label09;

        goto label11;

     label09:
        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        c2 = c1 | 32;

        if 48 > c1 goto label10;

        if c1 <= 57 goto label06;

     label10:
        if 97 > c2 goto label11;

        if c2 <= 102 goto label06;

     label11:
        $z2 = staticinvoke <java.lang.Character: boolean isDefined(int)>(i3);

        if $z2 != 0 goto label12;

        i3 = 65533;

     label12:
        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i6;

        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i19 >= i0 goto label14;

        $i20 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i20);

        if c7 == 32 goto label13;

        if c7 == 9 goto label13;

        $z3 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c7);

        if $z3 == 0 goto label14;

     label13:
        $i22 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i21 = $i22 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i21;

     label14:
        return i3;

     label15:
        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i14 = $i12 + 2;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i14;

        return c1;
    }

    private static boolean isHexEncoded(int)
    {
        int i0;
        long $l1, $l2;
        byte $b3;
        boolean $z0;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 >= 63 goto label1;

        $l1 = 1L << i0;

        $l2 = $l1 & 5764608364847838209L;

        $b3 = 0L cmp $l2;

        if $b3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void encodeCharOntoOutput(int, int)
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, $i2, $i3;
        java.lang.StringBuilder $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r14, $r16, $r18, $r20, $r24, $r26;
        boolean $z0;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        lookupswitch(i0)
        {
            case 0: goto label02;
            case 10: goto label03;
            case 12: goto label04;
            case 13: goto label05;
            case 34: goto label06;
            case 38: goto label07;
            case 39: goto label08;
            case 45: goto label11;
            case 60: goto label09;
            case 62: goto label10;
            case 92: goto label01;
            default: goto label12;
        };

     label01:
        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label16;

     label02:
        $r20 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\0");

        goto label16;

     label03:
        $r18 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\a");

        goto label16;

     label04:
        $r16 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\c");

        goto label16;

     label05:
        $r14 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\d");

        goto label16;

     label06:
        $r13 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\22");

        goto label16;

     label07:
        $r11 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\26");

        goto label16;

     label08:
        $r9 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\27");

        goto label16;

     label09:
        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\3c");

        goto label16;

     label10:
        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\3e");

        goto label16;

     label11:
        $r7 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        goto label16;

     label12:
        $z0 = staticinvoke <org.owasp.html.CssTokens$Lexer: boolean isHexEncoded(int)>(i1);

        if $z0 == 0 goto label15;

        if i0 == 32 goto label14;

        if i0 == 9 goto label14;

        if 48 > i0 goto label13;

        if i0 <= 57 goto label14;

     label13:
        $i3 = i0 | 32;

        if 97 > $i3 goto label15;

        $i2 = i0 | 32;

        if $i2 > 102 goto label15;

     label14:
        $r26 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label15:
        $r24 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i0);

     label16:
        return;
    }

    private org.owasp.html.CssTokens$TokenType consumeNumberOrPercentageOrDimension()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i1, i4, i6, i7, i10, i11, i13, $i14, $i15, $i16, $i17, $i19, $i23, $i26, $i27, $i31, $i33, i37, i38, i39, i41, i42;
        boolean z0, z1, z2, $z3, $z4;
        char c2, c3, c5, c8, c9, c12, $c18, $c20, $c21, $c22, $c24, $c25, $c28, $c29, $c30, $c32, $c34, $c35, $c36, c40;
        org.owasp.html.CssTokens$TokenType r2, $r9, $r10;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r11, $r12, $r14, $r15, $r16, $r18, $r21, $r22, $r24, $r26, $r28, $r29, $r31, $r33, $r34;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        z0 = 1;

        i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if i1 >= i0 goto label02;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if c2 == 45 goto label01;

        if c2 != 43 goto label02;

     label01:
        i1 = i1 + 1;

     label02:
        i37 = i1;

     label03:
        if i37 >= i0 goto label06;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i37);

        if 48 > c3 goto label06;

        if c3 <= 57 goto label04;

        goto label06;

     label04:
        if c3 == 48 goto label05;

        z0 = 0;

     label05:
        i37 = i37 + 1;

        goto label03;

     label06:
        i38 = i37;

        i4 = i38;

        if i4 >= i0 goto label10;

        $c36 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if 46 != $c36 goto label10;

        i4 = i4 + 1;

     label07:
        if i4 >= i0 goto label10;

        c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        if 48 > c5 goto label10;

        if c5 <= 57 goto label08;

        goto label10;

     label08:
        if c5 == 48 goto label09;

        z0 = 0;

     label09:
        i4 = i4 + 1;

        goto label07;

     label10:
        i39 = i4;

        i6 = i39;

        i7 = i39;

        z1 = 1;

        if i39 >= i0 goto label17;

        $c35 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i39);

        $c34 = $c35 | 32;

        if 101 != $c34 goto label17;

        i7 = i39 + 1;

        if i7 >= i0 goto label12;

        c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if c8 == 43 goto label11;

        if c8 != 45 goto label12;

     label11:
        i7 = i7 + 1;

     label12:
        i6 = i7;

     label13:
        if i7 >= i0 goto label16;

        c40 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i7);

        if 48 > c40 goto label16;

        if c40 <= 57 goto label14;

        goto label16;

     label14:
        if c40 == 48 goto label15;

        z1 = 0;

     label15:
        i7 = i7 + 1;

        goto label13;

     label16:
        if i7 != i6 goto label17;

        i7 = i39;

        i6 = i39;

        z1 = 1;

     label17:
        i41 = i7;

     label18:
        if i41 >= i0 goto label20;

        c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i41);

        if c9 == 32 goto label19;

        $z4 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c9);

        if $z4 == 0 goto label20;

     label19:
        i41 = i41 + 1;

        goto label18;

     label20:
        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i14 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i14 == 0 goto label21;

        $r34 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r33 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i33 = virtualinvoke $r33.<java.lang.StringBuilder: int length()>();

        $i31 = $i33 - 1;

        $c32 = virtualinvoke $r34.<java.lang.StringBuilder: char charAt(int)>($i31);

        $z3 = staticinvoke <org.owasp.html.CssTokens: boolean access$1000(int)>($c32);

        if $z3 == 0 goto label21;

        $r31 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label21:
        $i15 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if i1 == $i15 goto label22;

        $i27 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c28 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i27);

        if 45 != $c28 goto label22;

        if z0 != 0 goto label22;

        $r28 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label22:
        if z0 == 0 goto label23;

        $r29 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        goto label31;

     label23:
        if i1 >= i37 goto label24;

        $c30 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if $c30 != 48 goto label24;

        i1 = i1 + 1;

        goto label23;

     label24:
        if i4 <= i38 goto label25;

        $i26 = i4 - 1;

        $c29 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i26);

        if $c29 != 48 goto label25;

        i4 = i4 + -1;

        goto label24;

     label25:
        if i1 != i37 goto label26;

        $r26 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        goto label27;

     label26:
        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i1, i37);

     label27:
        $i16 = i38 + 1;

        if i4 <= $i16 goto label28;

        $r22 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i38, i4);

     label28:
        if z1 != 0 goto label31;

        $r18 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(101);

        $i23 = i6 - 1;

        $c24 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i23);

        if 45 != $c24 goto label29;

        $r24 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

     label29:
        if i6 >= i7 goto label30;

        $c25 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        if $c25 != 48 goto label30;

        i6 = i6 + 1;

        goto label29;

     label30:
        $r21 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r1, i6, i7);

     label31:
        if i41 >= i0 goto label32;

        $c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i41);

        if 37 != $c22 goto label32;

        i42 = i41 + 1;

        r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType PERCENTAGE>;

        $r15 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        goto label42;

     label32:
        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i10 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i41;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeIdent(boolean)>(0);

        $r7 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i11 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        $r8 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        z2 = staticinvoke <org.owasp.html.CssTokens: boolean isWellKnownUnit(java.lang.CharSequence,int,int)>($r8, i10, i11);

        if i41 == i7 goto label33;

        if z2 == 0 goto label37;

     label33:
        i42 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        i13 = i10;

     label34:
        if i13 >= i11 goto label36;

        $r11 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        c12 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>(i13);

        if 65 > c12 goto label35;

        if c12 > 90 goto label35;

        $r14 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $c21 = c12 | 32;

        $c20 = (char) $c21;

        virtualinvoke $r14.<java.lang.StringBuilder: void setCharAt(int,char)>(i13, $c20);

     label35:
        i13 = i13 + 1;

        goto label34;

     label36:
        goto label38;

     label37:
        i41 = i7;

        i42 = i7;

        $r16 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(i10);

     label38:
        if i41 != i42 goto label39;

        $r10 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType NUMBER>;

        goto label41;

     label39:
        if z2 == 0 goto label40;

        $r10 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType DIMENSION>;

        goto label41;

     label40:
        $r10 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType BAD_DIMENSION>;

     label41:
        r2 = $r10;

     label42:
        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i42;

        $r9 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType PERCENTAGE>;

        if r2 == $r9 goto label43;

        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i19 >= i0 goto label43;

        $i17 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i17);

        if $c18 != 46 goto label43;

        $r12 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label43:
        return r2;
    }

    private org.owasp.html.CssTokens$TokenType consumeString()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31;
        char c1, c4, $c15, $c22, $c29;
        boolean z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;
        org.owasp.html.CssTokens$TokenType $r7, $r8;
        java.lang.AssertionError $r10;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $z1 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label01;

        if c1 == 34 goto label01;

        if c1 == 39 goto label01;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label01:
        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i8 = $i7 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i8;

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i2 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        i3 = -1;

        z0 = 0;

     label02:
        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i9 >= i0 goto label09;

        $i10 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i10);

        if c4 != c1 goto label03;

        $i31 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i30 = $i31 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i30;

        z0 = 1;

        goto label09;

     label03:
        $z2 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c4);

        if $z2 == 0 goto label04;

        goto label09;

     label04:
        i5 = c4;

        if c4 != 92 goto label07;

        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i14 = $i12 + 1;

        if $i14 >= i0 goto label06;

        $i16 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i17 = $i16 + 1;

        $c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i17);

        $z3 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>($c15);

        if $z3 == 0 goto label06;

        $i20 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i21 = $i20 + 2;

        if $i21 >= i0 goto label05;

        $i24 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i25 = $i24 + 1;

        $c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i25);

        if $c22 != 13 goto label05;

        $i23 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i28 = $i23 + 2;

        $c29 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i28);

        if $c29 != 10 goto label05;

        $i26 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i27 = $i26 + 3;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i27;

        goto label02;

     label05:
        $i18 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i19 = $i18 + 2;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i19;

        goto label02;

     label06:
        i5 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: int consumeAndDecodeEscapeSequence()>();

        if i5 >= 0 goto label08;

        goto label09;

     label07:
        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i13 = $i11 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i13;

     label08:
        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void encodeCharOntoOutput(int,int)>(i5, i3);

        i3 = i5;

        goto label02;

     label09:
        if z0 == 0 goto label10;

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r8 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType STRING>;

        return $r8;

     label10:
        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: void setLength(int)>(i2);

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        $r7 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        return $r7;
    }

    private org.owasp.html.CssTokens$TokenType consumeHash()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i9, $i10;
        char c2, $c7, $c8, $c11;
        boolean $z0;
        org.owasp.html.CssTokens$TokenType $r1, $r3;
        java.lang.String $r2, $r4;
        java.lang.AssertionError $r5;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $z0 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i10 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c11 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i10);

        if $c11 == 35 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i4 = $i3 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i4;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeIdent(boolean)>(1);

        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i5 != i0 goto label2;

        $i9 = i0 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i9;

        return null;

     label2:
        i1 = i0;

     label3:
        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if i1 >= $i6 goto label7;

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $c7 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i1);

        $c8 = $c7 | 32;

        c2 = (char) $c8;

        if 48 > c2 goto label4;

        if c2 <= 57 goto label6;

     label4:
        if 97 > c2 goto label5;

        if c2 <= 102 goto label6;

     label5:
        $r3 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType HASH_ID>;

        return $r3;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        $r1 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType HASH_UNRESTRICTED>;

        return $r1;
    }

    private boolean consumeUnicodeRange()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i1, i2, i3, i5, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, $i23, $i26, $i27, $i28, $i30, $i31, $i32, $i35, $i36, $i37, $i38, $i39;
        boolean z0, $z1, z2;
        char c4, c6, $c10, $c17, $c24, $c25, $c29, $c33, $c34, $c40, $c41;
        java.lang.Throwable r2, $r22;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r14, $r16, $r17, $r18, $r20, $r23;
        java.lang.AssertionError $r24;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        $z1 = <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i36 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i36 >= i0 goto label01;

        $i39 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c40 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i39);

        $c41 = $c40 | 32;

        if $c41 == 117 goto label02;

     label01:
        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label02:
        i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $r3 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i2 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i8 = $i7 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i8;

        z0 = 0;

     label03:
        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i9 == i0 goto label04;

        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c10 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i11);

        if $c10 == 43 goto label05;

     label04:
        if z0 != 0 goto label27;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i1;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r4.<java.lang.StringBuilder: void setLength(int)>(i2);

        goto label27;

     label05:
        $i13 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i12 = $i13 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i12;

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("U+");

        i3 = 0;

     label06:
        $i15 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i15 >= i0 goto label09;

        if i3 >= 6 goto label09;

        $i35 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c34 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i35);

        $c33 = $c34 | 32;

        c4 = (char) $c33;

        if 48 > c4 goto label07;

        if c4 <= 57 goto label08;

     label07:
        if 97 > c4 goto label09;

        if c4 > 102 goto label09;

     label08:
        $r20 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        i3 = i3 + 1;

        $i38 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i37 = $i38 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i37;

        goto label06;

     label09:
        if i3 != 0 goto label11;

     label10:
        if z0 != 0 goto label27;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i1;

        $r18 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r18.<java.lang.StringBuilder: void setLength(int)>(i2);

        goto label27;

     label11:
        z2 = 0;

     label12:
        $i14 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i14 >= i0 goto label13;

        if i3 >= 6 goto label13;

        $i30 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c29 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i30);

        if $c29 != 63 goto label13;

        z2 = 1;

        $r16 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        i3 = i3 + 1;

        $i32 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i31 = $i32 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i31;

        goto label12;

     label13:
        if i3 != 0 goto label15;

     label14:
        if z0 != 0 goto label27;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i1;

        $r17 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r17.<java.lang.StringBuilder: void setLength(int)>(i2);

        goto label27;

     label15:
        $i16 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i16 >= i0 goto label22;

        $i18 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i18);

        if $c17 != 45 goto label22;

        if z2 != 0 goto label21;

        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i20 = $i19 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i20;

        $r10 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        i5 = 0;

     label16:
        $i22 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i22 >= i0 goto label19;

        if i5 >= 6 goto label19;

        $i26 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c24 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i26);

        $c25 = $c24 | 32;

        c6 = (char) $c25;

        if 48 > c6 goto label17;

        if c6 <= 57 goto label18;

     label17:
        if 97 > c6 goto label19;

        if c6 > 102 goto label19;

     label18:
        i5 = i5 + 1;

        $i27 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i28 = $i27 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i28;

        $r14 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        goto label16;

     label19:
        if i5 != 0 goto label20;

        $i23 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i21 = $i23 - 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i21;

        $r12 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label20:
        goto label22;

     label21:
        $r9 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label22:
        z0 = 1;

     label23:
        if z0 != 0 goto label27;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i1;

        $r7 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r7.<java.lang.StringBuilder: void setLength(int)>(i2);

        goto label27;

     label24:
        $r22 := @caughtexception;

        r2 = $r22;

     label25:
        if z0 != 0 goto label26;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = i1;

        $r23 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r23.<java.lang.StringBuilder: void setLength(int)>(i2);

     label26:
        throw r2;

     label27:
        return z0;

        catch java.lang.Throwable from label03 to label04 with label24;
        catch java.lang.Throwable from label05 to label10 with label24;
        catch java.lang.Throwable from label11 to label14 with label24;
        catch java.lang.Throwable from label15 to label23 with label24;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    private org.owasp.html.CssTokens$TokenType consumeIdentOrUrlOrFunction()
    {
        org.owasp.html.CssTokens$Lexer r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i23, $i25, $i26, $i27;
        boolean z0, $z1, $z2;
        char c2, $c13, $c17, $c19, $c20, $c21, $c22, $c24, $c28;
        java.lang.StringBuilder $r1, $r2, $r6, $r9, $r11, $r12, $r14, $r15, $r16, $r19;
        org.owasp.html.CssTokens$TokenType $r3, $r10, $r13, $r18;
        java.lang.String $r4, $r5, $r17;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        $r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        i1 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void consumeIdent(boolean)>(0);

        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i3 != i1 goto label1;

        return null;

     label1:
        $i5 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i4 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        if $i5 >= $i4 goto label2;

        $r17 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i27 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c28 = virtualinvoke $r17.<java.lang.String: char charAt(int)>($i27);

        if $c28 != 40 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i6 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i7 = $i6 - i0;

        if $i7 != 3 goto label5;

        $r9 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $c19 = virtualinvoke $r9.<java.lang.StringBuilder: char charAt(int)>(i0);

        $c17 = $c19 | 32;

        if 117 != $c17 goto label5;

        $r11 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i18 = i0 + 1;

        $c20 = virtualinvoke $r11.<java.lang.StringBuilder: char charAt(int)>($i18);

        $c21 = $c20 | 32;

        if 114 != $c21 goto label5;

        $r12 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i23 = i0 + 2;

        $c22 = virtualinvoke $r12.<java.lang.StringBuilder: char charAt(int)>($i23);

        $c24 = $c22 | 32;

        if 108 != $c24 goto label5;

        if z0 == 0 goto label4;

        $z1 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: boolean consumeUrlValue()>();

        if $z1 == 0 goto label4;

        $r16 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r16.<java.lang.StringBuilder: void setCharAt(int,char)>(i0, 117);

        $r15 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i26 = i0 + 1;

        virtualinvoke $r15.<java.lang.StringBuilder: void setCharAt(int,char)>($i26, 114);

        $r19 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $i25 = i0 + 2;

        virtualinvoke $r19.<java.lang.StringBuilder: void setCharAt(int,char)>($i25, 108);

        $r18 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType URL>;

        return $r18;

     label4:
        $r14 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r14.<java.lang.StringBuilder: void setLength(int)>(i0);

        specialinvoke r0.<org.owasp.html.CssTokens$Lexer: void breakOutput()>();

        $r13 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        return $r13;

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r0.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens$TokenType openBracket(char)>(40);

        $i16 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i15 = $i16 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i15;

        $r10 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType FUNCTION>;

        return $r10;

     label6:
        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i10 = $i8 + 1;

        $i9 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        if $i10 >= $i9 goto label7;

        $r4 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i11 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c13 = virtualinvoke $r4.<java.lang.String: char charAt(int)>($i11);

        if 46 != $c13 goto label7;

        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i14 = $i12 + 1;

        c2 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i14);

        if 48 > c2 goto label7;

        if c2 > 57 goto label7;

        $r6 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label7:
        $r3 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType IDENT>;

        return $r3;
    }

    private boolean consumeUrlValue()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        int i0, i3, i4, i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i42, $i44, $i45, $i47, $i48, $i49, $i50, $i52, $i53, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i66, $i67, $i68, $i69, $i70, $i72, $i74, $i75, $i77, $i78, $i80, $i81, $i82, $i84, $i85, $i86, $i88, $i89, $i90, $i91, $i92, $i93, $i96, $i97, $i99, $i100, $i102, $i103, $i105, $i106, $i107, $i108, $i110, $i111, i113, i114, i115, i116, i117, i118;
        char c1, c2, $c9, $c20, $c40, $c41, $c43, $c46, $c51, $c54, $c55, $c64, $c65, $c71, $c73, $c76, $c79, $c83, $c87, $c94, $c95, $c98, $c101, $c104, $c109, c112, c119;
        java.lang.StringBuilder $r2, $r5, $r7, $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r21, $r23, $r24, $r25, $r28, $r29, $r31, $r33, $r34, $r36, $r38, $r40, $r42, $r45, $r47, $r48, $r51, $r52, $r54, $r55, $r57, $r58, $r62;
        boolean $z0, $z1, $z2;
        boolean[] $r6, $r59;
        char[] $r8, $r10, $r14, $r17, $r19, $r20, $r22, $r26, $r30, $r32, $r35, $r37, $r39, $r41, $r43, $r44, $r49, $r53, $r56, $r63;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        i0 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        $i7 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i7 == i0 goto label01;

        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c9 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i8);

        if $c9 == 40 goto label02;

     label01:
        return 0;

     label02:
        $i10 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i11 = $i10 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i11;

     label03:
        $i12 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i12 >= i0 goto label05;

        $i107 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i107);

        if c1 == 32 goto label04;

        $z2 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c1);

        if $z2 != 0 goto label04;

        goto label05;

     label04:
        $i110 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i111 = $i110 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i111;

        goto label03;

     label05:
        $i13 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i13 >= i0 goto label11;

        $i15 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i15 >= i0 goto label06;

        $i108 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c109 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i108);

        goto label07;

     label06:
        $c109 = 0;

     label07:
        c2 = $c109;

        if c2 == 34 goto label08;

        if c2 != 39 goto label09;

     label08:
        c112 = c2;

        $i14 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i16 = $i14 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i16;

        goto label10;

     label09:
        c112 = 0;

     label10:
        goto label12;

     label11:
        return 0;

     label12:
        $r2 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(\'");

     label13:
        $i17 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i17 >= i0 goto label23;

        i113 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: int readCodepoint()>();

        if c112 == 0 goto label14;

        if i113 != c112 goto label15;

        $i100 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i99 = $i100 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i99;

        goto label23;

     label14:
        if i113 <= 32 goto label23;

        if i113 != 41 goto label15;

        goto label23;

     label15:
        if i113 != 92 goto label16;

        i113 = specialinvoke r0.<org.owasp.html.CssTokens$Lexer: int consumeAndDecodeEscapeSequence()>();

        if i113 >= 0 goto label17;

        return 0;

     label16:
        $i28 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i29 = $i28 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i29;

     label17:
        $r6 = staticinvoke <org.owasp.html.CssTokens: boolean[] access$1200()>();

        $i27 = lengthof $r6;

        if i113 >= $i27 goto label18;

        $r59 = staticinvoke <org.owasp.html.CssTokens: boolean[] access$1200()>();

        $z1 = $r59[i113];

        if $z1 == 0 goto label18;

        $r58 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(i113);

        goto label22;

     label18:
        if i113 >= 128 goto label19;

        $r51 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r53 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i103 = i113 >>> 4;

        $i102 = $i103 & 15;

        $c101 = $r53[$i102];

        $r62 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c101);

        $r63 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i106 = i113 >>> 0;

        $i105 = $i106 & 15;

        $c104 = $r63[$i105];

        virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c104);

        goto label22;

     label19:
        if i113 >= 2048 goto label20;

        $i89 = i113 >>> 6;

        $i91 = $i89 & 31;

        i3 = 192 | $i91;

        $i90 = i113 & 63;

        i4 = 128 | $i90;

        $r48 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r43 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i82 = i3 >>> 4;

        $i84 = $i82 & 15;

        $c83 = $r43[$i84];

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c83);

        $r44 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i86 = i3 >>> 0;

        $i85 = $i86 & 15;

        $c95 = $r44[$i85];

        $r54 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c95);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r56 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i96 = i4 >>> 4;

        $i97 = $i96 & 15;

        $c98 = $r56[$i97];

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c98);

        $r49 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i92 = i4 >>> 0;

        $i93 = $i92 & 15;

        $c94 = $r49[$i93];

        virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c94);

        goto label22;

     label20:
        if i113 >= 65536 goto label21;

        $i59 = i113 >>> 12;

        $i58 = $i59 & 15;

        i114 = 224 | $i58;

        $i61 = i113 >>> 6;

        $i60 = $i61 & 63;

        i115 = 128 | $i60;

        $i68 = i113 & 63;

        i5 = 128 | $i68;

        $r31 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r30 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i66 = i114 >>> 4;

        $i67 = $i66 & 15;

        $c65 = $r30[$i67];

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c65);

        $r35 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i72 = i114 >>> 0;

        $i70 = $i72 & 15;

        $c71 = $r35[$i70];

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c71);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r32 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i69 = i115 >>> 4;

        $i77 = $i69 & 15;

        $c76 = $r32[$i77];

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c76);

        $r37 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i75 = i115 >>> 0;

        $i74 = $i75 & 15;

        $c73 = $r37[$i74];

        $r36 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c73);

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r41 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i81 = i5 >>> 4;

        $i80 = $i81 & 15;

        $c79 = $r41[$i80];

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c79);

        $r39 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i78 = i5 >>> 0;

        $i88 = $i78 & 15;

        $c87 = $r39[$i88];

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c87);

        goto label22;

     label21:
        $i32 = i113 >>> 18;

        $i33 = $i32 & 7;

        i116 = 240 | $i33;

        $i30 = i113 >>> 12;

        $i31 = $i30 & 63;

        i117 = 128 | $i31;

        $i35 = i113 >>> 6;

        $i36 = $i35 & 63;

        i118 = 128 | $i36;

        $i34 = i113 & 63;

        i6 = 128 | $i34;

        $r7 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r8 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i38 = i116 >>> 4;

        $i37 = $i38 & 15;

        $c40 = $r8[$i37];

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c40);

        $r10 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i39 = i116 >>> 0;

        $i42 = $i39 & 15;

        $c41 = $r10[$i42];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c41);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r14 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i45 = i117 >>> 4;

        $i44 = $i45 & 15;

        $c43 = $r14[$i44];

        $r18 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c43);

        $r19 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i47 = i117 >>> 0;

        $i48 = $i47 & 15;

        $c46 = $r19[$i48];

        $r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c46);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r17 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i52 = i118 >>> 4;

        $i53 = $i52 & 15;

        $c54 = $r17[$i53];

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c54);

        $r20 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i49 = i118 >>> 0;

        $i50 = $i49 & 15;

        $c51 = $r20[$i50];

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c51);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(37);

        $r26 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i57 = i6 >>> 4;

        $i56 = $i57 & 15;

        $c55 = $r26[$i56];

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c55);

        $r22 = staticinvoke <org.owasp.html.CssTokens: char[] access$1300()>();

        $i63 = i6 >>> 0;

        $i62 = $i63 & 15;

        $c64 = $r22[$i62];

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c64);

     label22:
        goto label13;

     label23:
        $i19 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i19 >= i0 goto label25;

        $i24 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c119 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i24);

        if c119 == 32 goto label24;

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean access$1100(char)>(c119);

        if $z0 != 0 goto label24;

        goto label25;

     label24:
        $i25 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i26 = $i25 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i26;

        goto label23;

     label25:
        $i18 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        if $i18 >= i0 goto label26;

        $i21 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i21);

        if $c20 != 41 goto label26;

        $i23 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i22 = $i23 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i22;

     label26:
        $r5 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.StringBuilder sb>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        return 1;
    }

    private int readCodepoint()
    {
        org.owasp.html.CssTokens$Lexer r0;
        java.lang.String r1;
        char c0, c1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean $z0, $z1;

        r0 := @this: org.owasp.html.CssTokens$Lexer;

        r1 = r0.<org.owasp.html.CssTokens$Lexer: java.lang.String css>;

        $i2 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c0);

        if $z0 == 0 goto label1;

        $i3 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i5 = $i3 + 1;

        $i4 = r0.<org.owasp.html.CssTokens$Lexer: int cssLimit>;

        if $i5 >= $i4 goto label1;

        $i6 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i7 = $i6 + 1;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        $z1 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);

        if $z1 == 0 goto label1;

        $i8 = r0.<org.owasp.html.CssTokens$Lexer: int pos>;

        $i9 = $i8 + 1;

        r0.<org.owasp.html.CssTokens$Lexer: int pos> = $i9;

        $i11 = c0 - 55296;

        $i13 = $i11 << 10;

        $i10 = c1 - 56320;

        $i12 = $i13 | $i10;

        $i14 = 65536 + $i12;

        return $i14;

     label1:
        return c0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.owasp.html.CssTokens$Lexer: long HEX_ENCODED_BITMASK> = 5764608364847838209L;

        $r0 = class "org/owasp/html/CssTokens";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.owasp.html.CssTokens$Lexer: boolean $assertionsDisabled> = $z1;

        return;
    }
}
