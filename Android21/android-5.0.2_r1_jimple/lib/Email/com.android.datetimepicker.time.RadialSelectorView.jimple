public class com.android.datetimepicker.time.RadialSelectorView extends android.view.View
{
    private static final java.lang.String TAG;
    private static final int SELECTED_ALPHA;
    private static final int SELECTED_ALPHA_THEME_DARK;
    private static final int FULL_ALPHA;
    private final android.graphics.Paint mPaint;
    private boolean mIsInitialized;
    private boolean mDrawValuesReady;
    private float mCircleRadiusMultiplier;
    private float mAmPmCircleRadiusMultiplier;
    private float mInnerNumbersRadiusMultiplier;
    private float mOuterNumbersRadiusMultiplier;
    private float mNumbersRadiusMultiplier;
    private float mSelectionRadiusMultiplier;
    private float mAnimationRadiusMultiplier;
    private boolean mIs24HourMode;
    private boolean mHasInnerCircle;
    private int mSelectionAlpha;
    private int mXCenter;
    private int mYCenter;
    private int mCircleRadius;
    private float mTransitionMidRadiusMultiplier;
    private float mTransitionEndRadiusMultiplier;
    private int mLineLength;
    private int mSelectionRadius;
    private com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener;
    private int mSelectionDegrees;
    private double mSelectionRadians;
    private boolean mForceDrawDot;

    public void <init>(android.content.Context)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.content.Context r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint> = $r2;

        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized> = 0;

        return;
    }

    public void initialize(android.content.Context, boolean, boolean, boolean, int, boolean)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.content.Context r1;
        boolean z0, z1, z2, z3, $z4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i9, $i10, $i11;
        android.content.res.Resources r2;
        android.graphics.Paint $r3, $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.lang.String $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        byte $b7, $b8;
        com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener $r9;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        i0 := @parameter4: int;

        z3 := @parameter5: boolean;

        $z4 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized>;

        if $z4 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialSelectorView", "This RadialSelectorView may only be initialized once.");

        return;

     label1:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = <com.android.datetimepicker.R$color: int blue>;

        i1 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        $r3 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i1);

        $r4 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionAlpha> = 51;

        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIs24HourMode> = z0;

        if z0 == 0 goto label2;

        $i11 = <com.android.datetimepicker.R$string: int circle_radius_multiplier_24HourMode>;

        $r11 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i11);

        $f12 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r11);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mCircleRadiusMultiplier> = $f12;

        goto label3;

     label2:
        $i3 = <com.android.datetimepicker.R$string: int circle_radius_multiplier>;

        $r5 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mCircleRadiusMultiplier> = $f0;

        $i4 = <com.android.datetimepicker.R$string: int ampm_circle_radius_multiplier>;

        $r6 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i4);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r6);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mAmPmCircleRadiusMultiplier> = $f1;

     label3:
        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mHasInnerCircle> = z1;

        if z1 == 0 goto label4;

        $i10 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_inner>;

        $r10 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i10);

        $f10 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r10);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mInnerNumbersRadiusMultiplier> = $f10;

        $i9 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_outer>;

        $r12 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i9);

        $f11 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r12);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mOuterNumbersRadiusMultiplier> = $f11;

        goto label5;

     label4:
        $i5 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_normal>;

        $r7 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i5);

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r7);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mNumbersRadiusMultiplier> = $f2;

     label5:
        $i6 = <com.android.datetimepicker.R$string: int selection_radius_multiplier>;

        $r8 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i6);

        $f4 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r8);

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mSelectionRadiusMultiplier> = $f4;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mAnimationRadiusMultiplier> = 1.0F;

        if z2 == 0 goto label6;

        $b8 = -1;

        goto label7;

     label6:
        $b8 = 1;

     label7:
        $f3 = (float) $b8;

        $f6 = 0.05F * $f3;

        $f5 = 1.0F + $f6;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionMidRadiusMultiplier> = $f5;

        if z2 == 0 goto label8;

        $b7 = 1;

        goto label9;

     label8:
        $b7 = -1;

     label9:
        $f8 = (float) $b7;

        $f7 = 0.3F * $f8;

        $f9 = 1.0F + $f7;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionEndRadiusMultiplier> = $f9;

        $r9 = new com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener;

        specialinvoke $r9.<com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener: void <init>(com.android.datetimepicker.time.RadialSelectorView,com.android.datetimepicker.time.RadialSelectorView$1)>(r0, null);

        r0.<com.android.datetimepicker.time.RadialSelectorView: com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener> = $r9;

        virtualinvoke r0.<com.android.datetimepicker.time.RadialSelectorView: void setSelection(int,boolean,boolean)>(i0, z3, 0);

        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized> = 1;

        return;
    }

    void setTheme(android.content.Context, boolean)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.content.Context r1;
        boolean z0;
        android.content.res.Resources r2;
        int i0, $i1, $i2;
        android.graphics.Paint $r3;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label1;

        $i2 = <com.android.datetimepicker.R$color: int red>;

        i0 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionAlpha> = 102;

        goto label2;

     label1:
        $i1 = <com.android.datetimepicker.R$color: int blue>;

        i0 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionAlpha> = 51;

     label2:
        $r3 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        return;
    }

    public void setSelection(int, boolean, boolean)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        int i0;
        boolean z0, z1, $z2;
        double $d0, $d1, $d2;
        float $f0, $f1;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionDegrees> = i0;

        $d0 = (double) i0;

        $d1 = $d0 * 3.141592653589793;

        $d2 = $d1 / 180.0;

        r0.<com.android.datetimepicker.time.RadialSelectorView: double mSelectionRadians> = $d2;

        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mForceDrawDot> = z1;

        $z2 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mHasInnerCircle>;

        if $z2 == 0 goto label2;

        if z0 == 0 goto label1;

        $f1 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mInnerNumbersRadiusMultiplier>;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mNumbersRadiusMultiplier> = $f1;

        goto label2;

     label1:
        $f0 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mOuterNumbersRadiusMultiplier>;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mNumbersRadiusMultiplier> = $f0;

     label2:
        return;
    }

    public boolean hasOverlappingRendering()
    {
        com.android.datetimepicker.time.RadialSelectorView r0;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        return 0;
    }

    public void setAnimationRadiusMultiplier(float)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        float f0;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        f0 := @parameter0: float;

        r0.<com.android.datetimepicker.time.RadialSelectorView: float mAnimationRadiusMultiplier> = f0;

        return;
    }

    public int getDegreesFromCoords(float, float, boolean, java.lang.Boolean[])
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, f39;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Boolean[] r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i26, $i28, i29, i30, i31, i32, i33, i34;
        byte $b9, $b11, $b22, $b23, $b24, $b25;
        java.lang.Boolean $r2, $r3, $r4;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.Boolean[];

        $z3 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mDrawValuesReady>;

        if $z3 != 0 goto label01;

        return -1;

     label01:
        $i4 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $f2 = (float) $i4;

        $f4 = f1 - $f2;

        $i5 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $f3 = (float) $i5;

        $f5 = f1 - $f3;

        $f10 = $f4 * $f5;

        $i6 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $f6 = (float) $i6;

        $f8 = f0 - $f6;

        $i7 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $f7 = (float) $i7;

        $f9 = f0 - $f7;

        $f11 = $f8 * $f9;

        $f12 = $f10 + $f11;

        $d1 = (double) $f12;

        d0 = staticinvoke <java.lang.Math: double sqrt(double)>($d1);

        $z4 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mHasInnerCircle>;

        if $z4 == 0 goto label08;

        if z0 == 0 goto label04;

        $i26 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f34 = (float) $i26;

        $f35 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mInnerNumbersRadiusMultiplier>;

        $f33 = $f34 * $f35;

        i0 = (int) $f33;

        $d13 = (double) i0;

        $d15 = d0 - $d13;

        $d14 = staticinvoke <java.lang.Math: double abs(double)>($d15);

        i1 = (int) $d14;

        $i28 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f36 = (float) $i28;

        $f38 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mOuterNumbersRadiusMultiplier>;

        $f37 = $f36 * $f38;

        i2 = (int) $f37;

        $d17 = (double) i2;

        $d18 = d0 - $d17;

        $d16 = staticinvoke <java.lang.Math: double abs(double)>($d18);

        i3 = (int) $d16;

        if i1 > i3 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z7);

        r1[0] = $r4;

        goto label09;

     label04:
        $i15 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f23 = (float) $i15;

        $f19 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mInnerNumbersRadiusMultiplier>;

        $f22 = $f23 * $f19;

        $i16 = (int) $f22;

        $i17 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius>;

        i29 = $i16 - $i17;

        $i21 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f26 = (float) $i21;

        $f25 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mOuterNumbersRadiusMultiplier>;

        $f27 = $f26 * $f25;

        $i19 = (int) $f27;

        $i18 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius>;

        i30 = $i19 + $i18;

        $i20 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f32 = (float) $i20;

        $f29 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mOuterNumbersRadiusMultiplier>;

        $f24 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mInnerNumbersRadiusMultiplier>;

        $f30 = $f29 + $f24;

        $f31 = $f30 / 2.0F;

        $f28 = $f32 * $f31;

        i31 = (int) $f28;

        $d9 = (double) i29;

        $b22 = d0 cmpl $d9;

        if $b22 < 0 goto label05;

        $d11 = (double) i31;

        $b23 = d0 cmpg $d11;

        if $b23 > 0 goto label05;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r1[0] = $r3;

        goto label07;

     label05:
        $d10 = (double) i30;

        $b24 = d0 cmpg $d10;

        if $b24 > 0 goto label06;

        $d12 = (double) i31;

        $b25 = d0 cmpl $d12;

        if $b25 < 0 goto label06;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r1[0] = $r2;

        goto label07;

     label06:
        return -1;

     label07:
        goto label09;

     label08:
        if z0 != 0 goto label09;

        $i13 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mLineLength>;

        $d7 = (double) $i13;

        $d6 = d0 - $d7;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d6);

        i32 = (int) $d8;

        $i14 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f21 = (float) $i14;

        $f18 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mNumbersRadiusMultiplier>;

        $f17 = 1.0F - $f18;

        $f20 = $f21 * $f17;

        i33 = (int) $f20;

        if i32 <= i33 goto label09;

        return -1;

     label09:
        $i8 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $f14 = (float) $i8;

        $f13 = f1 - $f14;

        f39 = staticinvoke <java.lang.Math: float abs(float)>($f13);

        $d3 = (double) f39;

        $d4 = $d3 / d0;

        d19 = staticinvoke <java.lang.Math: double asin(double)>($d4);

        $d2 = d19 * 180.0;

        $d5 = $d2 / 3.141592653589793;

        i34 = (int) $d5;

        $i10 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $f15 = (float) $i10;

        $b9 = f0 cmpl $f15;

        if $b9 <= 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        z1 = $z6;

        $i12 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $f16 = (float) $i12;

        $b11 = f1 cmpg $f16;

        if $b11 >= 0 goto label12;

        $z5 = 1;

        goto label13;

     label12:
        $z5 = 0;

     label13:
        z2 = $z5;

        if z1 == 0 goto label14;

        if z2 == 0 goto label14;

        i34 = 90 - i34;

        goto label17;

     label14:
        if z1 == 0 goto label15;

        if z2 != 0 goto label15;

        i34 = 90 + i34;

        goto label17;

     label15:
        if z1 != 0 goto label16;

        if z2 != 0 goto label16;

        i34 = 270 - i34;

        goto label17;

     label16:
        if z1 != 0 goto label17;

        if z2 == 0 goto label17;

        i34 = 270 + i34;

     label17:
        return i34;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, i40, i41;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        android.graphics.Paint $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<com.android.datetimepicker.time.RadialSelectorView: int getWidth()>();

        if i0 == 0 goto label1;

        $z0 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label4;

        $i29 = virtualinvoke r0.<com.android.datetimepicker.time.RadialSelectorView: int getWidth()>();

        $i30 = $i29 / 2;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter> = $i30;

        $i31 = virtualinvoke r0.<com.android.datetimepicker.time.RadialSelectorView: int getHeight()>();

        $i32 = $i31 / 2;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter> = $i32;

        $i27 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $i26 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i27, $i26);

        $f20 = (float) $i28;

        $f15 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mCircleRadiusMultiplier>;

        $f19 = $f20 * $f15;

        $i34 = (int) $f19;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius> = $i34;

        $z5 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIs24HourMode>;

        if $z5 != 0 goto label3;

        $i38 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f22 = (float) $i38;

        $f23 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mAmPmCircleRadiusMultiplier>;

        $f21 = $f22 * $f23;

        i1 = (int) $f21;

        $i37 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $i35 = i1 / 2;

        $i36 = $i37 - $i35;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter> = $i36;

     label3:
        $i33 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f18 = (float) $i33;

        $f16 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mSelectionRadiusMultiplier>;

        $f17 = $f18 * $f16;

        $i39 = (int) $f17;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius> = $i39;

        r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mDrawValuesReady> = 1;

     label4:
        $i4 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mCircleRadius>;

        $f1 = (float) $i4;

        $f0 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mNumbersRadiusMultiplier>;

        $f3 = $f1 * $f0;

        $f2 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mAnimationRadiusMultiplier>;

        $f4 = $f3 * $f2;

        $i5 = (int) $f4;

        r0.<com.android.datetimepicker.time.RadialSelectorView: int mLineLength> = $i5;

        $i7 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $i6 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mLineLength>;

        $d1 = (double) $i6;

        $d0 = r0.<com.android.datetimepicker.time.RadialSelectorView: double mSelectionRadians>;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d0);

        $d2 = $d1 * $d3;

        $i9 = (int) $d2;

        i40 = $i7 + $i9;

        $i10 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $i8 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mLineLength>;

        $d6 = (double) $i8;

        $d4 = r0.<com.android.datetimepicker.time.RadialSelectorView: double mSelectionRadians>;

        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        $d7 = $d6 * $d5;

        $i11 = (int) $d7;

        i2 = $i10 - $i11;

        $r2 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        $i12 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionAlpha>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i12);

        $f7 = (float) i40;

        $f6 = (float) i2;

        $i13 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius>;

        $f5 = (float) $i13;

        $r3 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f7, $f6, $f5, $r3);

        $z2 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mForceDrawDot>;

        $i15 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionDegrees>;

        $i14 = $i15 % 30;

        if $i14 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        $z3 = $z2 | $z4;

        if $z3 == 0 goto label7;

        $r7 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAlpha(int)>(255);

        $f14 = (float) i40;

        $f13 = (float) i2;

        $i23 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius>;

        $i24 = $i23 * 2;

        $i25 = $i24 / 7;

        $f12 = (float) $i25;

        $r8 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f14, $f13, $f12, $r8);

        goto label8;

     label7:
        i3 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mLineLength>;

        $i17 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mSelectionRadius>;

        i41 = i3 - $i17;

        $i16 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $d10 = (double) i41;

        $d8 = r0.<com.android.datetimepicker.time.RadialSelectorView: double mSelectionRadians>;

        $d11 = staticinvoke <java.lang.Math: double sin(double)>($d8);

        $d9 = $d10 * $d11;

        $i18 = (int) $d9;

        i40 = $i16 + $i18;

        $i19 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $d13 = (double) i41;

        $d14 = r0.<com.android.datetimepicker.time.RadialSelectorView: double mSelectionRadians>;

        $d12 = staticinvoke <java.lang.Math: double cos(double)>($d14);

        $d15 = $d13 * $d12;

        $i20 = (int) $d15;

        i2 = $i19 - $i20;

     label8:
        $r5 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(255);

        $r4 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $i22 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mXCenter>;

        $f9 = (float) $i22;

        $i21 = r0.<com.android.datetimepicker.time.RadialSelectorView: int mYCenter>;

        $f10 = (float) $i21;

        $f11 = (float) i40;

        $f8 = (float) i2;

        $r6 = r0.<com.android.datetimepicker.time.RadialSelectorView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f9, $f10, $f11, $f8, $r6);

        return;
    }

    public android.animation.ObjectAnimator getDisappearAnimator()
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.animation.Keyframe r1, r2, r3, r12, r13;
        float f0, $f1, $f2;
        short s0;
        android.animation.PropertyValuesHolder r4, r5;
        android.animation.ObjectAnimator r6, $r10;
        boolean $z0, $z1;
        android.animation.Keyframe[] $r7, $r8;
        android.animation.PropertyValuesHolder[] $r9;
        long $l2;
        com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener $r11;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        $z0 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialSelectorView", "RadialSelectorView was not ready for animation.");

        return null;

     label2:
        f0 = 0.2F;

        s0 = 500;

        r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        $f1 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionMidRadiusMultiplier>;

        r2 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f0, $f1);

        $f2 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionEndRadiusMultiplier>;

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, $f2);

        $r7 = newarray (android.animation.Keyframe)[3];

        $r7[0] = r1;

        $r7[1] = r2;

        $r7[2] = r3;

        r4 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("animationRadiusMultiplier", $r7);

        r12 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        r13 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 0.0F);

        $r8 = newarray (android.animation.Keyframe)[2];

        $r8[0] = r12;

        $r8[1] = r13;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("alpha", $r8);

        $r9 = newarray (android.animation.PropertyValuesHolder)[2];

        $r9[0] = r4;

        $r9[1] = r5;

        $r10 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r9);

        $l2 = (long) s0;

        r6 = virtualinvoke $r10.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        $r11 = r0.<com.android.datetimepicker.time.RadialSelectorView: com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke r6.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r11);

        return r6;
    }

    public android.animation.ObjectAnimator getReappearAnimator()
    {
        com.android.datetimepicker.time.RadialSelectorView r0;
        android.animation.Keyframe r1, r2, r3, r4, r13, r14, r15;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15;
        short s0;
        int i1;
        android.animation.PropertyValuesHolder r5, r6;
        android.animation.ObjectAnimator r7, $r12;
        boolean $z0, $z1;
        android.animation.Keyframe[] $r8, $r10;
        android.animation.PropertyValuesHolder[] $r9;
        com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener $r11;
        long $l3;

        r0 := @this: com.android.datetimepicker.time.RadialSelectorView;

        $z0 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.datetimepicker.time.RadialSelectorView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialSelectorView", "RadialSelectorView was not ready for animation.");

        return null;

     label2:
        f0 = 0.2F;

        s0 = 500;

        f1 = 0.25F;

        f2 = 1.0F;

        f3 = f2 + f1;

        $f6 = (float) s0;

        $f5 = $f6 * f3;

        i1 = (int) $f5;

        $f8 = (float) s0;

        $f10 = f1 * $f8;

        $f7 = (float) i1;

        f4 = $f10 / $f7;

        $f9 = 1.0F - f4;

        $f12 = f0 * $f9;

        f15 = 1.0F - $f12;

        $f11 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionEndRadiusMultiplier>;

        r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, $f11);

        $f13 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionEndRadiusMultiplier>;

        r2 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f4, $f13);

        $f14 = r0.<com.android.datetimepicker.time.RadialSelectorView: float mTransitionMidRadiusMultiplier>;

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f15, $f14);

        r4 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r8 = newarray (android.animation.Keyframe)[4];

        $r8[0] = r1;

        $r8[1] = r2;

        $r8[2] = r3;

        $r8[3] = r4;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("animationRadiusMultiplier", $r8);

        r13 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 0.0F);

        r14 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f4, 0.0F);

        r15 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r10 = newarray (android.animation.Keyframe)[3];

        $r10[0] = r13;

        $r10[1] = r14;

        $r10[2] = r15;

        r6 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("alpha", $r10);

        $r9 = newarray (android.animation.PropertyValuesHolder)[2];

        $r9[0] = r5;

        $r9[1] = r6;

        $r12 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r9);

        $l3 = (long) i1;

        r7 = virtualinvoke $r12.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        $r11 = r0.<com.android.datetimepicker.time.RadialSelectorView: com.android.datetimepicker.time.RadialSelectorView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke r7.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r11);

        return r7;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.time.RadialSelectorView: int FULL_ALPHA> = 255;

        <com.android.datetimepicker.time.RadialSelectorView: int SELECTED_ALPHA_THEME_DARK> = 102;

        <com.android.datetimepicker.time.RadialSelectorView: int SELECTED_ALPHA> = 51;

        <com.android.datetimepicker.time.RadialSelectorView: java.lang.String TAG> = "RadialSelectorView";

        return;
    }
}
