public class com.android.email.service.EmailServiceUtils extends java.lang.Object
{
    private static final android.content.res.Configuration sOldConfiguration;
    private static java.util.Map sServiceMap;
    private static final java.lang.Object sServiceMapLock;

    public void <init>()
    {
        com.android.email.service.EmailServiceUtils r0;

        r0 := @this: com.android.email.service.EmailServiceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void killService(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r1);

        if r2 == null goto label1;

        $r4 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r4 == null goto label1;

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("ServiceProxy.FORCE_SHUTDOWN", 1);

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r3);

     label1:
        return;
    }

    public static void startService(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        android.content.Intent r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r1);

        if r2 == null goto label1;

        $r4 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r4 == null goto label1;

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r2);

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r3);

     label1:
        return;
    }

    public static void startRemoteServices(android.content.Context)
    {
        android.content.Context r0;
        java.util.Iterator r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        android.content.Intent r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        r0 := @parameter0: android.content.Context;

        $r4 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Collection getServiceInfoList(android.content.Context)>(r0);

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r5;

        $r6 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r6 == null goto label2;

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r2);

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r3);

     label2:
        goto label1;

     label3:
        return;
    }

    public static boolean areRemoteServicesInstalled(android.content.Context)
    {
        android.content.Context r0;
        java.util.Iterator r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        java.util.Collection $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @parameter0: android.content.Context;

        $r3 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Collection getServiceInfoList(android.content.Context)>(r0);

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r4;

        $r5 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r5 == null goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public static void setRemoteServicesLogging(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        java.util.Iterator r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        com.android.emailcommon.service.EmailServiceProxy r3;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r5 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Collection getServiceInfoList(android.content.Context)>(r0);

        r1 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r6;

        $r7 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r7 == null goto label5;

        $r8 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.EmailServiceProxy getService(android.content.Context,java.lang.String)>(r0, $r8);

        if r3 == null goto label5;

     label2:
        virtualinvoke r3.<com.android.emailcommon.service.EmailServiceProxy: void setLogging(int)>(i0);

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public static boolean isServiceAvailable(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        android.content.Intent r3;
        java.lang.Class $r4;
        com.android.emailcommon.service.EmailServiceProxy $r5;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r1);

        if r2 != null goto label1;

        return 0;

     label1:
        $r4 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass>;

        if $r4 == null goto label2;

        return 1;

     label2:
        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r2);

        $r5 = new com.android.emailcommon.service.EmailServiceProxy;

        specialinvoke $r5.<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,android.content.Intent)>(r0, r3);

        $z0 = virtualinvoke $r5.<com.android.emailcommon.service.EmailServiceProxy: boolean test()>();

        return $z0;
    }

    private static android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)
    {
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r0;
        android.content.Intent r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @parameter0: com.android.email.service.EmailServiceUtils$EmailServiceInfo;

        $r2 = new android.content.Intent;

        $r3 = r0.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $r4 = r0.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentPackage>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r4);

        return r1;
    }

    public static com.android.emailcommon.service.EmailServiceProxy getServiceForAccount(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String $r1;
        com.android.emailcommon.service.EmailServiceProxy $r2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r1 = staticinvoke <com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)>(r0, l0);

        $r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.EmailServiceProxy getService(android.content.Context,java.lang.String)>(r0, $r1);

        return $r2;
    }

    public static com.android.emailcommon.service.EmailServiceProxy getService(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r5;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        com.android.emailcommon.service.EmailServiceProxy $r3, $r6;
        java.lang.Object[] $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = null;

        if r1 == null goto label1;

        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r1);

     label1:
        if r2 != null goto label2;

        $r5 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r5, "Returning NullService for %s", $r4);

        $r6 = new com.android.emailcommon.service.EmailServiceProxy;

        specialinvoke $r6.<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/service/EmailServiceUtils$NullService");

        return $r6;

     label2:
        $r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.EmailServiceProxy getServiceFromInfo(android.content.Context,com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r0, r2);

        return $r3;
    }

    public static com.android.emailcommon.service.EmailServiceProxy getServiceFromInfo(android.content.Context, com.android.email.service.EmailServiceUtils$EmailServiceInfo)
    {
        android.content.Context r0;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r1;
        android.content.Intent r2;
        java.lang.Class $r3, $r6;
        com.android.emailcommon.service.EmailServiceProxy $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.email.service.EmailServiceUtils$EmailServiceInfo;

        $r3 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass>;

        if $r3 == null goto label1;

        $r5 = new com.android.emailcommon.service.EmailServiceProxy;

        $r6 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass>;

        specialinvoke $r5.<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,java.lang.Class)>(r0, $r6);

        return $r5;

     label1:
        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: android.content.Intent getServiceIntent(com.android.email.service.EmailServiceUtils$EmailServiceInfo)>(r1);

        $r4 = new com.android.emailcommon.service.EmailServiceProxy;

        specialinvoke $r4.<com.android.emailcommon.service.EmailServiceProxy: void <init>(android.content.Context,android.content.Intent)>(r0, r2);

        return $r4;
    }

    public static com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfoForAccount(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        java.lang.String r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo $r2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)>(r0, l0);

        $r2 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Map getServiceMap(android.content.Context)>(r0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r3;

        return $r4;
    }

    public static java.util.Collection getServiceInfoList(android.content.Context)
    {
        android.content.Context r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Map getServiceMap(android.content.Context)>(r0);

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    private static void finishAccountManagerBlocker(android.accounts.AccountManagerFuture)
    {
        android.accounts.AccountManagerFuture r0;
        android.accounts.OperationCanceledException r1, $r9;
        android.accounts.AuthenticatorException $r3, r12;
        java.lang.Object[] $r4, $r7, $r10;
        java.lang.String $r5, $r8, $r11;
        java.io.IOException $r6, r13;

        r0 := @parameter0: android.accounts.AccountManagerFuture;

     label1:
        interfaceinvoke r0.<android.accounts.AccountManagerFuture: java.lang.Object getResult()>();

     label2:
        goto label6;

     label3:
        $r9 := @caughtexception;

        r1 = $r9;

        $r11 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r11, r1, "finishAccountManagerBlocker", $r10);

        goto label6;

     label4:
        $r3 := @caughtexception;

        r12 = $r3;

        $r5 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r5, r12, "finishAccountManagerBlocker", $r4);

        goto label6;

     label5:
        $r6 := @caughtexception;

        r13 = $r6;

        $r8 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r8, r13, "finishAccountManagerBlocker", $r7);

     label6:
        return;

        catch android.accounts.OperationCanceledException from label1 to label2 with label3;
        catch android.accounts.AuthenticatorException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    public static android.accounts.AccountManagerFuture setupAccountManagerAccount(android.content.Context, com.android.emailcommon.provider.Account, boolean, boolean, boolean, android.accounts.AccountManagerCallback)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        boolean z0, z1, z2;
        android.accounts.AccountManagerCallback r2;
        com.android.emailcommon.provider.HostAuth r3;
        long $l0;
        android.accounts.AccountManagerFuture $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r2 := @parameter5: android.accounts.AccountManagerCallback;

        $l0 = r1.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        r3 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r0, $l0);

        $r4 = staticinvoke <com.android.email.service.EmailServiceUtils: android.accounts.AccountManagerFuture setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,com.android.emailcommon.provider.HostAuth,android.accounts.AccountManagerCallback)>(r0, r1, z0, z1, z2, r3, r2);

        return $r4;
    }

    public static android.accounts.AccountManagerFuture setupAccountManagerAccount(android.content.Context, com.android.emailcommon.provider.Account, boolean, boolean, boolean, com.android.emailcommon.provider.HostAuth, android.accounts.AccountManagerCallback)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        boolean z0, z1, z2;
        com.android.emailcommon.provider.HostAuth r2;
        android.accounts.AccountManagerCallback r3;
        android.os.Bundle r4, $r6;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5;
        java.lang.String $r7, $r8, $r9, $r11;
        android.accounts.AccountManager $r10;
        android.accounts.AccountManagerFuture $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r2 := @parameter5: com.android.emailcommon.provider.HostAuth;

        r3 := @parameter6: android.accounts.AccountManagerCallback;

        if r2 != null goto label1;

        return null;

     label1:
        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>(int)>(5);

        r4 = $r6;

        $r7 = r1.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("username", $r7);

        $r8 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mPassword>;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("password", $r8);

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("contacts", z2);

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("calendar", z1);

        virtualinvoke r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("email", z0);

        $r9 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        r5 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, $r9);

        $r10 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r11 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        $r12 = virtualinvoke $r10.<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>($r11, null, null, r4, null, r3, null);

        return $r12;
    }

    public static void updateAccountManagerType(android.content.Context, android.accounts.Account, java.util.Map)
    {
        android.content.Context r0;
        android.accounts.Account r1, $r47, $r51, $r71, $r89;
        java.util.Map r2;
        android.content.ContentResolver r3, $r49, $r54, $r61, $r64, $r73, $r77;
        android.database.Cursor r4;
        com.android.emailcommon.provider.Account r5, $r26;
        com.android.emailcommon.provider.HostAuth r6;
        java.lang.String r7, r11, r13, $r24, $r28, $r29, $r32, $r38, $r40, $r44, $r57, $r58, $r66, $r69, $r70, $r74, $r78, $r81, $r82, $r84, $r85, $r90, $r94, $r100, $r102, $r106, $r109, r116;
        android.content.ContentValues r8, r10, $r31, $r37;
        int i0, $i2, $i4, $i5, $i16, $i18;
        android.net.Uri r9, $r25, $r34, $r35, $r36, $r45, $r46, $r50, $r52, $r53, $r72, $r76, $r80, $r86, $r87;
        boolean z0, z1, z2, $z3;
        android.content.ContentProviderClient r12, r112, r118, r119;
        byte[] r15, r113;
        java.lang.Throwable r16, r17, r18, r20, r21, $r97, $r101, $r103, $r104, $r105;
        java.lang.String[] $r22, $r23;
        long $l1, $l7, $l8;
        java.lang.Object[] $r27, $r39, $r43, $r59, $r60, $r68, $r75, $r79, $r83, $r88, $r91, $r93, $r96, $r99, $r107, $r111;
        java.lang.Object $r30, $r63;
        java.lang.Integer $r33, $r67, $r108;
        java.lang.Boolean $r41, $r42, $r48;
        java.lang.StringBuilder $r55, $r56, $r65;
        android.accounts.AccountManager $r62;
        android.os.RemoteException $r92, $r95, $r98, $r110;
        android.accounts.AccountManagerFuture r115, r117;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.accounts.Account;

        r2 := @parameter2: java.util.Map;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r25 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r23 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        $r22 = newarray (java.lang.String)[1];

        $r24 = r1.<android.accounts.Account: java.lang.String name>;

        $r22[0] = $r24;

        r4 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r25, $r23, "emailAddress=?", $r22, null);

        if r4 != null goto label01;

        return;

     label01:
        $z3 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label38;

        $r26 = new com.android.emailcommon.provider.Account;

        specialinvoke $r26.<com.android.emailcommon.provider.Account: void <init>()>();

        r5 = $r26;

        virtualinvoke r5.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r4);

        $l1 = r5.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        r6 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r0, $l1);

        if r6 != null goto label03;

     label02:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return;

     label03:
        $r29 = r6.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r30 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r29);

        r7 = (java.lang.String) $r30;

        if r7 != null goto label05;

     label04:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return;

     label05:
        $r32 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r27 = newarray (java.lang.Object)[2];

        $r28 = r1.<android.accounts.Account: java.lang.String name>;

        $r27[0] = $r28;

        $r27[1] = r7;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r32, "Converting %s to %s", $r27);

        $r31 = new android.content.ContentValues;

        specialinvoke $r31.<android.content.ContentValues: void <init>()>();

        r8 = $r31;

        i0 = r5.<com.android.emailcommon.provider.Account: int mFlags>;

        $i2 = r5.<com.android.emailcommon.provider.Account: int mFlags>;

        $i4 = $i2 | 16;

        r5.<com.android.emailcommon.provider.Account: int mFlags> = $i4;

        $i5 = r5.<com.android.emailcommon.provider.Account: int mFlags>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r33);

        $r34 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l7 = r5.<com.android.emailcommon.provider.Account: long mId>;

        r9 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r34, $l7);

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r9, r8, null, null);

        $r37 = new android.content.ContentValues;

        specialinvoke $r37.<android.content.ContentValues: void <init>()>();

        r10 = $r37;

        virtualinvoke r10.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("protocol", r7);

        $r36 = <com.android.emailcommon.provider.HostAuth: android.net.Uri CONTENT_URI>;

        $l8 = r6.<com.android.emailcommon.provider.HostAuth: long mId>;

        $r35 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r36, $l8);

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r35, r10, null, null);

        $r38 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r39 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r38, "Updated HostAuths", $r39);

     label06:
        $r40 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        z0 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>(r1, $r40);

        if z0 != 0 goto label07;

        z0 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>(r1, "com.android.email.provider");

     label07:
        z1 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>(r1, "com.android.contacts");

        z2 = staticinvoke <android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>(r1, "com.android.calendar");

        $r44 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r43 = newarray (java.lang.Object)[3];

        $r41 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r43[0] = $r41;

        $r42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r43[1] = $r42;

        $r48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r43[2] = $r48;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r44, "Email: %s, Contacts: %s Calendar: %s", $r43);

        r11 = r1.<android.accounts.Account: java.lang.String name>;

        r13 = r1.<android.accounts.Account: java.lang.String type>;

        $r49 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r50 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        r12 = virtualinvoke $r49.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r50);

        r15 = null;

     label08:
        $r45 = <android.provider.CalendarContract$SyncState: android.net.Uri CONTENT_URI>;

        $r46 = staticinvoke <com.android.email.service.EmailServiceUtils: android.net.Uri asCalendarSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r45, r11, r13);

        $r47 = new android.accounts.Account;

        specialinvoke $r47.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r11, r13);

        r15 = staticinvoke <android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>(r12, $r46, $r47);

     label09:
        virtualinvoke r12.<android.content.ContentProviderClient: boolean release()>();

        goto label14;

     label10:
        $r92 := @caughtexception;

        $r94 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r93 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r94, "Get calendar key FAILED", $r93);

     label11:
        virtualinvoke r12.<android.content.ContentProviderClient: boolean release()>();

        goto label14;

     label12:
        $r104 := @caughtexception;

        r17 = $r104;

     label13:
        virtualinvoke r12.<android.content.ContentProviderClient: boolean release()>();

        throw r17;

     label14:
        $r54 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r53 = <android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>;

        r112 = virtualinvoke $r54.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r53);

        r113 = null;

     label15:
        $r52 = <android.provider.ContactsContract$SyncState: android.net.Uri CONTENT_URI>;

        $r51 = new android.accounts.Account;

        specialinvoke $r51.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r11, r13);

        r113 = staticinvoke <android.provider.SyncStateContract$Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>(r112, $r52, $r51);

     label16:
        virtualinvoke r112.<android.content.ContentProviderClient: boolean release()>();

        goto label21;

     label17:
        $r95 := @caughtexception;

        $r106 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r96 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r106, "Get contacts key FAILED", $r96);

     label18:
        virtualinvoke r112.<android.content.ContentProviderClient: boolean release()>();

        goto label21;

     label19:
        $r103 := @caughtexception;

        r16 = $r103;

     label20:
        virtualinvoke r112.<android.content.ContentProviderClient: boolean release()>();

        throw r16;

     label21:
        if r15 == null goto label22;

        $r84 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r83 = newarray (java.lang.Object)[1];

        $r85 = new java.lang.String;

        specialinvoke $r85.<java.lang.String: void <init>(byte[])>(r15);

        $r83[0] = $r85;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r84, "Got calendar key: %s", $r83);

     label22:
        if r113 == null goto label23;

        $r81 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r91 = newarray (java.lang.Object)[1];

        $r82 = new java.lang.String;

        specialinvoke $r82.<java.lang.String: void <init>(byte[])>(r113);

        $r91[0] = $r82;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r81, "Got contacts key: %s", $r91);

     label23:
        r115 = staticinvoke <com.android.email.service.EmailServiceUtils: android.accounts.AccountManagerFuture setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>(r0, r5, z0, z2, z1, null);

        staticinvoke <com.android.email.service.EmailServiceUtils: void finishAccountManagerBlocker(android.accounts.AccountManagerFuture)>(r115);

        $r58 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r59 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r58, "Created new AccountManager account", $r59);

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = r6.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r65 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_type");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        $r63 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r66);

        r116 = (java.lang.String) $r63;

        $r64 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.email.service.EmailServiceUtils: void moveCalendarData(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>($r64, r11, r13, r116);

        $r61 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.email.service.EmailServiceUtils: void moveContactsData(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>($r61, r11, r13, r116);

        $r62 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        r117 = virtualinvoke $r62.<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>(r1, null, null);

        staticinvoke <com.android.email.service.EmailServiceUtils: void finishAccountManagerBlocker(android.accounts.AccountManagerFuture)>(r117);

        $r70 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r60 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r70, "Deleted old AccountManager account", $r60);

        if r116 == null goto label30;

        if r15 == null goto label30;

        $i18 = lengthof r15;

        if $i18 == 0 goto label30;

        $r77 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r76 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        r118 = virtualinvoke $r77.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r76);

     label24:
        $r87 = <android.provider.CalendarContract$SyncState: android.net.Uri CONTENT_URI>;

        $r86 = staticinvoke <com.android.email.service.EmailServiceUtils: android.net.Uri asCalendarSyncAdapter(android.net.Uri,java.lang.String,java.lang.String)>($r87, r11, r116);

        $r89 = new android.accounts.Account;

        specialinvoke $r89.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r11, r116);

        staticinvoke <android.provider.SyncStateContract$Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>(r118, $r86, $r89, r15);

        $r90 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r88 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r90, "Set calendar key...", $r88);

     label25:
        virtualinvoke r118.<android.content.ContentProviderClient: boolean release()>();

        goto label30;

     label26:
        $r110 := @caughtexception;

        $r109 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r111 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r109, "Set calendar key FAILED", $r111);

     label27:
        virtualinvoke r118.<android.content.ContentProviderClient: boolean release()>();

        goto label30;

     label28:
        $r101 := @caughtexception;

        r18 = $r101;

     label29:
        virtualinvoke r118.<android.content.ContentProviderClient: boolean release()>();

        throw r18;

     label30:
        if r116 == null goto label34;

        if r113 == null goto label34;

        $i16 = lengthof r113;

        if $i16 == 0 goto label34;

        $r73 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r72 = <android.provider.ContactsContract: android.net.Uri AUTHORITY_URI>;

        r119 = virtualinvoke $r73.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r72);

     label31:
        $r80 = <android.provider.ContactsContract$SyncState: android.net.Uri CONTENT_URI>;

        $r71 = new android.accounts.Account;

        specialinvoke $r71.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r11, r116);

        staticinvoke <android.provider.SyncStateContract$Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>(r119, $r80, $r71, r113);

        $r78 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r79 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r78, "Set contacts key...", $r79);

     label32:
        goto label34;

     label33:
        $r98 := @caughtexception;

        $r100 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r99 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r100, "Set contacts key FAILED", $r99);

     label34:
        $r69 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r68 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r69, "Account update completed.", $r68);

     label35:
        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r67);

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r9, r8, null, null);

        $r74 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r75 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r74, "[Incomplete flag cleared]", $r75);

        goto label38;

     label36:
        $r105 := @caughtexception;

        r21 = $r105;

     label37:
        $r108 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r108);

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r9, r8, null, null);

        $r102 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r107 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r102, "[Incomplete flag cleared]", $r107);

        throw r21;

     label38:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label41;

     label39:
        $r97 := @caughtexception;

        r20 = $r97;

     label40:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r20;

     label41:
        return;

        catch android.os.RemoteException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch android.os.RemoteException from label15 to label16 with label17;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch android.os.RemoteException from label24 to label25 with label26;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
        catch android.os.RemoteException from label31 to label32 with label33;
        catch java.lang.Throwable from label06 to label35 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label01 to label02 with label39;
        catch java.lang.Throwable from label03 to label04 with label39;
        catch java.lang.Throwable from label05 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    private static void moveCalendarData(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3;
        android.net.Uri r4, $r6;
        android.content.ContentValues r5, $r11;
        android.net.Uri$Builder $r7, $r8, $r9, $r10;
        java.lang.String[] $r12;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r6 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r7 = virtualinvoke $r6.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("caller_is_syncadapter", "true");

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_name", r1);

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_type", r2);

        r4 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r5 = $r11;

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("account_type", r3);

        $r12 = newarray (java.lang.String)[2];

        $r12[0] = r1;

        $r12[1] = r2;

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r4, r5, "account_name=? AND account_type=?", $r12);

        return;
    }

    private static void moveContactsData(android.content.ContentResolver, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, r3;
        android.net.Uri r4, $r6;
        android.content.ContentValues r5, $r11;
        android.net.Uri$Builder $r7, $r8, $r9, $r10;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r6 = <android.provider.ContactsContract$RawContacts: android.net.Uri CONTENT_URI>;

        $r7 = virtualinvoke $r6.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("caller_is_syncadapter", "true");

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_name", r1);

        $r10 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_type", r2);

        r4 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri build()>();

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r5 = $r11;

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("account_type", r3);

        virtualinvoke r0.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r4, r5, null, null);

        return;
    }

    private static java.util.Map getServiceMap(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object r1, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.google.common.collect.ImmutableMap$Builder r2;
        android.content.res.Resources r3, $r13, $r39;
        android.content.res.XmlResourceParser r4;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5, $r20;
        android.content.res.TypedArray r6;
        java.lang.String r7, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r30, $r32, $r35, $r43;
        java.lang.Throwable r9, $r45;
        java.util.Map $r11, $r15, $r17, $r37;
        android.content.res.Configuration $r12, $r14, $r38, $r40;
        com.google.common.collect.ImmutableMap $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;
        int[] $r21;
        java.lang.CharSequence[] $r28, $r29;
        java.lang.IllegalStateException $r31, $r41, $r46;
        java.lang.Class $r33, $r34, $r42;
        java.lang.StringBuilder $r44, $r48, $r49;
        java.lang.ClassNotFoundException $r47;
        java.io.IOException $r50;
        org.xmlpull.v1.XmlPullParserException $r51;

        r0 := @parameter0: android.content.Context;

        $r10 = <com.android.email.service.EmailServiceUtils: java.lang.Object sServiceMapLock>;

        r1 = $r10;

        entermonitor $r10;

     label01:
        $r11 = <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap>;

        if $r11 != null goto label02;

        $r38 = <com.android.email.service.EmailServiceUtils: android.content.res.Configuration sOldConfiguration>;

        $r39 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r40 = virtualinvoke $r39.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        virtualinvoke $r38.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>($r40);

     label02:
        $r12 = <com.android.email.service.EmailServiceUtils: android.content.res.Configuration sOldConfiguration>;

        $r13 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = virtualinvoke $r12.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r14);

        $r15 = <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap>;

        if $r15 == null goto label04;

        $z20 = staticinvoke <android.content.res.Configuration: boolean needNewResources(int,int)>(i0, 4);

        if $z20 != 0 goto label04;

        $r37 = <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap>;

        exitmonitor r1;

     label03:
        return $r37;

     label04:
        r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

     label05:
        r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(2131099669);

     label06:
        $i2 = interfaceinvoke r4.<android.content.res.XmlResourceParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label13;

        if i1 != 2 goto label06;

        $r19 = "emailservice";

        $r18 = interfaceinvoke r4.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z0 == 0 goto label06;

        $r20 = new com.android.email.service.EmailServiceUtils$EmailServiceInfo;

        specialinvoke $r20.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: void <init>()>();

        r5 = $r20;

        $r21 = <com.android.email.R$styleable: int[] EmailServiceInfo>;

        r6 = virtualinvoke r3.<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>(r4, $r21);

        $r23 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol> = $r23;

        $r24 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(3);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType> = $r24;

        $r22 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(1);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String name> = $r22;

        $z1 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean hide> = $z1;

        r7 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        $r26 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction> = $r26;

        $r25 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(6);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentPackage> = $r25;

        $z2 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean defaultSsl> = $z2;

        $i3 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(7, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int port> = $i3;

        $i4 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(8, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int portSsl> = $i4;

        $z3 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerTls> = $z3;

        $z4 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(11, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerCerts> = $z4;

        $z6 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(12, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerOAuth> = $z6;

        $z7 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(13, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLocalDeletes> = $z7;

        $i5 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(14, 2);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultLocalDeletes> = $i5;

        $z5 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(15, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerPrefix> = $z5;

        $z10 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(16, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp> = $z10;

        $z9 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(20, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesAutodiscover> = $z9;

        $z8 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(21, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLookback> = $z8;

        $i6 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(24, 2);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultLookback> = $i6;

        $z14 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(17, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncChanges> = $z14;

        $z13 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(18, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncContacts> = $z13;

        $z12 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(19, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncCalendar> = $z12;

        $z11 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(25, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerAttachmentPreload> = $z11;

        $r29 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(26);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.CharSequence[] syncIntervalStrings> = $r29;

        $r28 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>(27);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.CharSequence[] syncIntervals> = $r28;

        $i7 = virtualinvoke r6.<android.content.res.TypedArray: int getInteger(int,int)>(28, 15);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultSyncInterval> = $i7;

        $r27 = virtualinvoke r6.<android.content.res.TypedArray: java.lang.String getString(int)>(29);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String inferPrefix> = $r27;

        $z18 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(22, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLoadMore> = $z18;

        $z17 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(23, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerMoveTo> = $z17;

        $z16 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(30, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean requiresSetup> = $z16;

        $z15 = virtualinvoke r6.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(31, 0);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean isGmailStub> = $z15;

        if r7 == null goto label10;

     label07:
        $r42 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r7);

        r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass> = $r42;

     label08:
        goto label10;

     label09:
        $r47 := @caughtexception;

        $r46 = new java.lang.IllegalStateException;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found in service descriptor: ");

        $r44 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r43);

        throw $r46;

     label10:
        $r33 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass>;

        if $r33 != null goto label11;

        $r32 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r32 != null goto label11;

        $z19 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean isGmailStub>;

        if $z19 != 0 goto label11;

        $r41 = new java.lang.IllegalStateException;

        specialinvoke $r41.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No class or intent action specified in service descriptor");

        throw $r41;

     label11:
        $r34 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.Class klass>;

        if $r34 == null goto label12;

        $r30 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String intentAction>;

        if $r30 == null goto label12;

        $r31 = new java.lang.IllegalStateException;

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Both class and intent action specified in service descriptor");

        throw $r31;

     label12:
        $r35 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r35, r5);

        goto label06;

     label13:
        goto label16;

     label14:
        $r51 := @caughtexception;

        goto label16;

     label15:
        $r50 := @caughtexception;

     label16:
        $r16 = virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap> = $r16;

        $r17 = <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap>;

        exitmonitor r1;

     label17:
        return $r17;

     label18:
        $r45 := @caughtexception;

        r9 = $r45;

        exitmonitor r1;

     label19:
        throw r9;

        catch java.lang.ClassNotFoundException from label07 to label08 with label09;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label13 with label14;
        catch java.io.IOException from label05 to label13 with label15;
        catch java.lang.Throwable from label01 to label03 with label18;
        catch java.lang.Throwable from label04 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public static java.lang.String getProtocolFromAccountType(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r3, $r8, $r9;
        java.util.Map r2;
        java.util.Iterator r4;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r6;
        java.lang.Object $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Map getServiceMap(android.content.Context)>(r0);

        r3 = null;

        $r6 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>();

        r4 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r7;

        $r8 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r8);

        if $z2 == 0 goto label4;

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z3 != 0 goto label3;

        $r9 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r3, $r9);

        if $z4 != 0 goto label3;

        return null;

     label3:
        r3 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

     label4:
        goto label2;

     label5:
        return r3;
    }

    private static android.net.Uri asCalendarSyncAdapter(android.net.Uri, java.lang.String, java.lang.String)
    {
        android.net.Uri r0, $r7;
        java.lang.String r1, r2;
        android.net.Uri$Builder $r3, $r4, $r5, $r6;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = virtualinvoke r0.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("caller_is_syncadapter", "true");

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_name", r1);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account_type", r2);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public static void setComponentStatus(android.content.Context, java.lang.Class, boolean)
    {
        android.content.Context r0;
        java.lang.Class r1;
        boolean z0;
        android.content.ComponentName r2, $r3;
        java.lang.String $r4;
        android.content.pm.PackageManager $r5;
        byte $b0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r3 = new android.content.ComponentName;

        $r4 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r3.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r0, $r4);

        r2 = $r3;

        $r5 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        virtualinvoke $r5.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>(r2, $b0, 1);

        return;
    }

    public static void enableExchangeComponent(android.content.Context)
    {
        android.content.Context r0;
        com.android.emailcommon.VendorPolicyLoader $r1;
        boolean $z0;
        java.lang.Object[] $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.emailcommon.VendorPolicyLoader: com.android.emailcommon.VendorPolicyLoader getInstance(android.content.Context)>(r0);

        $z0 = virtualinvoke $r1.<com.android.emailcommon.VendorPolicyLoader: boolean useAlternateExchangeStrings()>();

        if $z0 == 0 goto label1;

        $r5 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r5, "Enabling alternate EAS authenticator", $r4);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorServiceAlternate", 1);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorService", 0);

        goto label2;

     label1:
        $r3 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "Enabling EAS authenticator", $r2);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorService", 1);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorServiceAlternate", 0);

     label2:
        return;
    }

    public static void disableExchangeComponents(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r2, "Disabling EAS authenticators", $r1);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorServiceAlternate", 0);

        staticinvoke <com.android.email.service.EmailServiceUtils: void setComponentStatus(android.content.Context,java.lang.Class,boolean)>(r0, class "com/android/email/service/EasAuthenticatorService", 0);

        return;
    }

    static void <clinit>()
    {
        android.content.res.Configuration $r0;
        java.lang.Object $r1;

        $r0 = new android.content.res.Configuration;

        specialinvoke $r0.<android.content.res.Configuration: void <init>()>();

        <com.android.email.service.EmailServiceUtils: android.content.res.Configuration sOldConfiguration> = $r0;

        <com.android.email.service.EmailServiceUtils: java.util.Map sServiceMap> = null;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.android.email.service.EmailServiceUtils: java.lang.Object sServiceMapLock> = $r1;

        return;
    }
}
