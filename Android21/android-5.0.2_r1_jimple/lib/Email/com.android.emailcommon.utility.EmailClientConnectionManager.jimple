public class com.android.emailcommon.utility.EmailClientConnectionManager extends org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager
{
    private static final int STANDARD_PORT;
    private static final int STANDARD_SSL_PORT;
    private static final boolean LOG_ENABLED;
    private final com.android.emailcommon.utility.SSLUtils$TrackingKeyManager mTrackingKeyManager;

    private void <init>(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry, com.android.emailcommon.utility.SSLUtils$TrackingKeyManager)
    {
        com.android.emailcommon.utility.EmailClientConnectionManager r0;
        org.apache.http.params.HttpParams r1;
        org.apache.http.conn.scheme.SchemeRegistry r2;
        com.android.emailcommon.utility.SSLUtils$TrackingKeyManager r3;

        r0 := @this: com.android.emailcommon.utility.EmailClientConnectionManager;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        r2 := @parameter1: org.apache.http.conn.scheme.SchemeRegistry;

        r3 := @parameter2: com.android.emailcommon.utility.SSLUtils$TrackingKeyManager;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r1, r2);

        r0.<com.android.emailcommon.utility.EmailClientConnectionManager: com.android.emailcommon.utility.SSLUtils$TrackingKeyManager mTrackingKeyManager> = r3;

        return;
    }

    public static com.android.emailcommon.utility.EmailClientConnectionManager newInstance(android.content.Context, org.apache.http.params.HttpParams, com.android.emailcommon.provider.HostAuth)
    {
        android.content.Context r0;
        org.apache.http.params.HttpParams r1;
        com.android.emailcommon.provider.HostAuth r2;
        com.android.emailcommon.utility.SSLUtils$TrackingKeyManager r3, $r5;
        boolean z0;
        int i0, $i1, $i2, $i3;
        org.apache.http.conn.scheme.SchemeRegistry r4, $r6;
        org.apache.http.conn.scheme.Scheme $r7, $r11, $r16;
        org.apache.http.conn.scheme.PlainSocketFactory $r9;
        com.android.emailcommon.utility.SSLSocketFactory $r14, $r18;
        com.android.emailcommon.utility.EmailClientConnectionManager $r19;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.apache.http.params.HttpParams;

        r2 := @parameter2: com.android.emailcommon.provider.HostAuth;

        $r5 = new com.android.emailcommon.utility.SSLUtils$TrackingKeyManager;

        specialinvoke $r5.<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: void <init>()>();

        r3 = $r5;

        z0 = virtualinvoke r2.<com.android.emailcommon.provider.HostAuth: boolean shouldUseSsl()>();

        i0 = r2.<com.android.emailcommon.provider.HostAuth: int mPort>;

        $r6 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r6.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        r4 = $r6;

        $r7 = new org.apache.http.conn.scheme.Scheme;

        $r9 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        if z0 == 0 goto label1;

        $i2 = 80;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        specialinvoke $r7.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r9, $i2);

        virtualinvoke r4.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r7);

        $r11 = new org.apache.http.conn.scheme.Scheme;

        $r14 = staticinvoke <com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(android.content.Context,com.android.emailcommon.provider.HostAuth,javax.net.ssl.KeyManager,boolean)>(r0, r2, r3, 0);

        if z0 == 0 goto label3;

        $i3 = i0;

        goto label4;

     label3:
        $i3 = 443;

     label4:
        specialinvoke $r11.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r14, $i3);

        virtualinvoke r4.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r11);

        $r16 = new org.apache.http.conn.scheme.Scheme;

        $r18 = staticinvoke <com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(android.content.Context,com.android.emailcommon.provider.HostAuth,javax.net.ssl.KeyManager,boolean)>(r0, r2, r3, 1);

        if z0 == 0 goto label5;

        $i1 = i0;

        goto label6;

     label5:
        $i1 = 443;

     label6:
        specialinvoke $r16.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("httpts", $r18, $i1);

        virtualinvoke r4.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r16);

        $r19 = new com.android.emailcommon.utility.EmailClientConnectionManager;

        specialinvoke $r19.<com.android.emailcommon.utility.EmailClientConnectionManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry,com.android.emailcommon.utility.SSLUtils$TrackingKeyManager)>(r1, r4, r3);

        return $r19;
    }

    public synchronized void registerClientCert(android.content.Context, com.android.emailcommon.provider.HostAuth) throws java.security.cert.CertificateException
    {
        com.android.emailcommon.utility.EmailClientConnectionManager r0;
        android.content.Context r1;
        com.android.emailcommon.provider.HostAuth r2;
        org.apache.http.conn.scheme.SchemeRegistry r3;
        java.lang.String r4, $r8, $r9, $r10;
        org.apache.http.conn.scheme.Scheme r5, $r11;
        com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager r6;
        boolean z0, $z1, $z2;
        com.android.emailcommon.utility.SSLSocketFactory r7;
        int $i0;

        r0 := @this: com.android.emailcommon.utility.EmailClientConnectionManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.HostAuth;

        $r8 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mClientCertAlias>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z1 == 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r0.<com.android.emailcommon.utility.EmailClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r9 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mClientCertAlias>;

        $z2 = virtualinvoke r2.<com.android.emailcommon.provider.HostAuth: boolean shouldTrustAllServerCerts()>();

        r4 = staticinvoke <com.android.emailcommon.utility.EmailClientConnectionManager: java.lang.String makeSchemeForClientCert(java.lang.String,boolean)>($r9, $z2);

        r5 = virtualinvoke r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>(r4);

        if r5 != null goto label2;

        $r10 = r2.<com.android.emailcommon.provider.HostAuth: java.lang.String mClientCertAlias>;

        r6 = staticinvoke <com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager: com.android.emailcommon.utility.SSLUtils$KeyChainKeyManager fromAlias(android.content.Context,java.lang.String)>(r1, $r10);

        z0 = virtualinvoke r2.<com.android.emailcommon.provider.HostAuth: boolean shouldTrustAllServerCerts()>();

        r7 = staticinvoke <com.android.emailcommon.utility.SSLUtils: com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(android.content.Context,com.android.emailcommon.provider.HostAuth,javax.net.ssl.KeyManager,boolean)>(r1, r2, r6, z0);

        $r11 = new org.apache.http.conn.scheme.Scheme;

        $i0 = r2.<com.android.emailcommon.provider.HostAuth: int mPort>;

        specialinvoke $r11.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>(r4, r7, $i0);

        virtualinvoke r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r11);

     label2:
        return;
    }

    public synchronized void unregisterClientCert(java.lang.String, boolean)
    {
        com.android.emailcommon.utility.EmailClientConnectionManager r0;
        java.lang.String r1, r3;
        boolean z0;
        org.apache.http.conn.scheme.SchemeRegistry r2;
        org.apache.http.conn.scheme.Scheme r4;

        r0 := @this: com.android.emailcommon.utility.EmailClientConnectionManager;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<com.android.emailcommon.utility.EmailClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        r3 = staticinvoke <com.android.emailcommon.utility.EmailClientConnectionManager: java.lang.String makeSchemeForClientCert(java.lang.String,boolean)>(r1, z0);

        r4 = virtualinvoke r2.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>(r3);

        if r4 == null goto label1;

        virtualinvoke r2.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme unregister(java.lang.String)>(r3);

     label1:
        return;
    }

    public static java.lang.String makeScheme(boolean, boolean, java.lang.String)
    {
        boolean z0, z1, $z2;
        java.lang.String r0, $r1, $r2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0 := @parameter2: java.lang.String;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z2 != 0 goto label1;

        $r2 = staticinvoke <com.android.emailcommon.utility.EmailClientConnectionManager: java.lang.String makeSchemeForClientCert(java.lang.String,boolean)>(r0, z1);

        return $r2;

     label1:
        if z0 == 0 goto label3;

        if z1 == 0 goto label2;

        $r1 = "httpts";

        goto label4;

     label2:
        $r1 = "https";

        goto label4;

     label3:
        $r1 = "http";

     label4:
        return $r1;
    }

    private static java.lang.String makeSchemeForClientCert(java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r6, $r7;
        boolean z0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <com.android.emailcommon.utility.SSLUtils: java.lang.String escapeForSchemeName(java.lang.String)>(r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label1;

        $r7 = "httpts";

        goto label2;

     label1:
        $r7 = "https";

     label2:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+clientCert+");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public synchronized boolean hasDetectedUnsatisfiedCertReq(long)
    {
        com.android.emailcommon.utility.EmailClientConnectionManager r0;
        long l0, $l1;
        com.android.emailcommon.utility.SSLUtils$TrackingKeyManager $r1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.emailcommon.utility.EmailClientConnectionManager;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.emailcommon.utility.EmailClientConnectionManager: com.android.emailcommon.utility.SSLUtils$TrackingKeyManager mTrackingKeyManager>;

        $l1 = virtualinvoke $r1.<com.android.emailcommon.utility.SSLUtils$TrackingKeyManager: long getLastCertReqTime()>();

        $b2 = $l1 cmp l0;

        if $b2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.emailcommon.utility.EmailClientConnectionManager: boolean LOG_ENABLED> = 0;

        <com.android.emailcommon.utility.EmailClientConnectionManager: int STANDARD_SSL_PORT> = 443;

        <com.android.emailcommon.utility.EmailClientConnectionManager: int STANDARD_PORT> = 80;

        return;
    }
}
