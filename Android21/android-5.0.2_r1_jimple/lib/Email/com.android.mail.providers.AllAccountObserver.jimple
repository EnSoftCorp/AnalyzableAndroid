public abstract class com.android.mail.providers.AllAccountObserver extends android.database.DataSetObserver
{
    private com.android.mail.ui.AccountController mController;
    private static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.android.mail.providers.AllAccountObserver r0;

        r0 := @this: com.android.mail.providers.AllAccountObserver;

        specialinvoke r0.<android.database.DataSetObserver: void <init>()>();

        return;
    }

    public com.android.mail.providers.Account[] initialize(com.android.mail.ui.AccountController)
    {
        com.android.mail.providers.AllAccountObserver r0;
        com.android.mail.ui.AccountController r1, $r2, $r3;
        com.android.mail.providers.Account[] $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;

        r0 := @this: com.android.mail.providers.AllAccountObserver;

        r1 := @parameter0: com.android.mail.ui.AccountController;

        if r1 != null goto label1;

        $r6 = <com.android.mail.providers.AllAccountObserver: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "AllAccountObserver initialized with null controller!", $r5);

     label1:
        r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController> = r1;

        $r2 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        interfaceinvoke $r2.<com.android.mail.ui.AccountController: void registerAllAccountObserver(android.database.DataSetObserver)>(r0);

        $r3 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        $r4 = interfaceinvoke $r3.<com.android.mail.ui.AccountController: com.android.mail.providers.Account[] getAllAccounts()>();

        return $r4;
    }

    public final void onChanged()
    {
        com.android.mail.providers.AllAccountObserver r0;
        com.android.mail.ui.AccountController $r1, $r2;
        com.android.mail.providers.Account[] $r3;

        r0 := @this: com.android.mail.providers.AllAccountObserver;

        $r1 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        $r3 = interfaceinvoke $r2.<com.android.mail.ui.AccountController: com.android.mail.providers.Account[] getAllAccounts()>();

        virtualinvoke r0.<com.android.mail.providers.AllAccountObserver: void onChanged(com.android.mail.providers.Account[])>($r3);

        return;
    }

    public abstract void onChanged(com.android.mail.providers.Account[]);

    public final com.android.mail.providers.Account[] getAllAccounts()
    {
        com.android.mail.providers.AllAccountObserver r0;
        com.android.mail.ui.AccountController $r1, $r2;
        com.android.mail.providers.Account[] $r3;

        r0 := @this: com.android.mail.providers.AllAccountObserver;

        $r1 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        $r3 = interfaceinvoke $r2.<com.android.mail.ui.AccountController: com.android.mail.providers.Account[] getAllAccounts()>();

        return $r3;
    }

    public void unregisterAndDestroy()
    {
        com.android.mail.providers.AllAccountObserver r0;
        com.android.mail.ui.AccountController $r1, $r2;

        r0 := @this: com.android.mail.providers.AllAccountObserver;

        $r1 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.mail.providers.AllAccountObserver: com.android.mail.ui.AccountController mController>;

        interfaceinvoke $r2.<com.android.mail.ui.AccountController: void unregisterAllAccountObserver(android.database.DataSetObserver)>(r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.providers.AllAccountObserver: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
