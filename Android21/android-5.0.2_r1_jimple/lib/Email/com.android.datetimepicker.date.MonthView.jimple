public abstract class com.android.datetimepicker.date.MonthView extends android.view.View
{
    private static final java.lang.String TAG;
    public static final java.lang.String VIEW_PARAMS_HEIGHT;
    public static final java.lang.String VIEW_PARAMS_MONTH;
    public static final java.lang.String VIEW_PARAMS_YEAR;
    public static final java.lang.String VIEW_PARAMS_SELECTED_DAY;
    public static final java.lang.String VIEW_PARAMS_WEEK_START;
    public static final java.lang.String VIEW_PARAMS_NUM_DAYS;
    public static final java.lang.String VIEW_PARAMS_FOCUS_MONTH;
    public static final java.lang.String VIEW_PARAMS_SHOW_WK_NUM;
    protected static int DEFAULT_HEIGHT;
    protected static int MIN_HEIGHT;
    protected static final int DEFAULT_SELECTED_DAY;
    protected static final int DEFAULT_WEEK_START;
    protected static final int DEFAULT_NUM_DAYS;
    protected static final int DEFAULT_SHOW_WK_NUM;
    protected static final int DEFAULT_FOCUS_MONTH;
    protected static final int DEFAULT_NUM_ROWS;
    protected static final int MAX_NUM_ROWS;
    private static final int SELECTED_CIRCLE_ALPHA;
    protected static int DAY_SEPARATOR_WIDTH;
    protected static int MINI_DAY_NUMBER_TEXT_SIZE;
    protected static int MONTH_LABEL_TEXT_SIZE;
    protected static int MONTH_DAY_LABEL_TEXT_SIZE;
    protected static int MONTH_HEADER_SIZE;
    protected static int DAY_SELECTED_CIRCLE_SIZE;
    protected static float mScale;
    protected com.android.datetimepicker.date.DatePickerController mController;
    protected int mEdgePadding;
    private java.lang.String mDayOfWeekTypeface;
    private java.lang.String mMonthTitleTypeface;
    protected android.graphics.Paint mMonthNumPaint;
    protected android.graphics.Paint mMonthTitlePaint;
    protected android.graphics.Paint mMonthTitleBGPaint;
    protected android.graphics.Paint mSelectedCirclePaint;
    protected android.graphics.Paint mMonthDayLabelPaint;
    private final java.util.Formatter mFormatter;
    private final java.lang.StringBuilder mStringBuilder;
    protected int mFirstJulianDay;
    protected int mFirstMonth;
    protected int mLastMonth;
    protected int mMonth;
    protected int mYear;
    protected int mWidth;
    protected int mRowHeight;
    protected boolean mHasToday;
    protected int mSelectedDay;
    protected int mToday;
    protected int mWeekStart;
    protected int mNumDays;
    protected int mNumCells;
    protected int mSelectedLeft;
    protected int mSelectedRight;
    private final java.util.Calendar mCalendar;
    protected final java.util.Calendar mDayLabelCalendar;
    private final com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper;
    protected int mNumRows;
    protected com.android.datetimepicker.date.MonthView$OnDayClickListener mOnDayClickListener;
    private boolean mLockAccessibilityDelegate;
    protected int mDayTextColor;
    protected int mTodayNumberColor;
    protected int mDisabledDayTextColor;
    protected int mMonthTitleColor;
    protected int mMonthTitleBGColor;
    private int mDayOfWeekStart;

    public void <init>(android.content.Context)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.content.Context r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.datetimepicker.date.MonthView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.content.res.Resources r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        java.util.Calendar $r4, $r5;
        java.lang.String $r6, $r7;
        java.lang.StringBuilder $r8, $r9;
        java.util.Formatter $r10;
        java.util.Locale $r11;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r12, $r13;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding> = 0;

        r0.<com.android.datetimepicker.date.MonthView: int mFirstJulianDay> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mFirstMonth> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mLastMonth> = -1;

        $i0 = <com.android.datetimepicker.date.MonthView: int DEFAULT_HEIGHT>;

        r0.<com.android.datetimepicker.date.MonthView: int mRowHeight> = $i0;

        r0.<com.android.datetimepicker.date.MonthView: boolean mHasToday> = 0;

        r0.<com.android.datetimepicker.date.MonthView: int mSelectedDay> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mToday> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mWeekStart> = 1;

        r0.<com.android.datetimepicker.date.MonthView: int mNumDays> = 7;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        r0.<com.android.datetimepicker.date.MonthView: int mNumCells> = $i1;

        r0.<com.android.datetimepicker.date.MonthView: int mSelectedLeft> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mSelectedRight> = -1;

        r0.<com.android.datetimepicker.date.MonthView: int mNumRows> = 6;

        r0.<com.android.datetimepicker.date.MonthView: int mDayOfWeekStart> = 0;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mDayLabelCalendar> = $r4;

        $r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar> = $r5;

        $i2 = <com.android.datetimepicker.R$string: int day_of_week_label_typeface>;

        $r6 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        r0.<com.android.datetimepicker.date.MonthView: java.lang.String mDayOfWeekTypeface> = $r6;

        $i3 = <com.android.datetimepicker.R$string: int sans_serif>;

        $r7 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        r0.<com.android.datetimepicker.date.MonthView: java.lang.String mMonthTitleTypeface> = $r7;

        $i4 = <com.android.datetimepicker.R$color: int date_picker_text_normal>;

        $i5 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i4);

        r0.<com.android.datetimepicker.date.MonthView: int mDayTextColor> = $i5;

        $i6 = <com.android.datetimepicker.R$color: int blue>;

        $i8 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i6);

        r0.<com.android.datetimepicker.date.MonthView: int mTodayNumberColor> = $i8;

        $i7 = <com.android.datetimepicker.R$color: int date_picker_text_disabled>;

        $i10 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i7);

        r0.<com.android.datetimepicker.date.MonthView: int mDisabledDayTextColor> = $i10;

        $i9 = <com.android.datetimepicker.R$color: int white>;

        $i12 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i9);

        r0.<com.android.datetimepicker.date.MonthView: int mMonthTitleColor> = $i12;

        $i11 = <com.android.datetimepicker.R$color: int circle_background>;

        $i13 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>($i11);

        r0.<com.android.datetimepicker.date.MonthView: int mMonthTitleBGColor> = $i13;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(int)>(50);

        r0.<com.android.datetimepicker.date.MonthView: java.lang.StringBuilder mStringBuilder> = $r8;

        $r10 = new java.util.Formatter;

        $r9 = r0.<com.android.datetimepicker.date.MonthView: java.lang.StringBuilder mStringBuilder>;

        $r11 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r10.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r9, $r11);

        r0.<com.android.datetimepicker.date.MonthView: java.util.Formatter mFormatter> = $r10;

        $i14 = <com.android.datetimepicker.R$dimen: int day_number_size>;

        $i16 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i14);

        <com.android.datetimepicker.date.MonthView: int MINI_DAY_NUMBER_TEXT_SIZE> = $i16;

        $i15 = <com.android.datetimepicker.R$dimen: int month_label_size>;

        $i18 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i15);

        <com.android.datetimepicker.date.MonthView: int MONTH_LABEL_TEXT_SIZE> = $i18;

        $i17 = <com.android.datetimepicker.R$dimen: int month_day_label_text_size>;

        $i21 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i17);

        <com.android.datetimepicker.date.MonthView: int MONTH_DAY_LABEL_TEXT_SIZE> = $i21;

        $i22 = <com.android.datetimepicker.R$dimen: int month_list_item_header_height>;

        $i19 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i22);

        <com.android.datetimepicker.date.MonthView: int MONTH_HEADER_SIZE> = $i19;

        $i20 = <com.android.datetimepicker.R$dimen: int day_number_select_circle_radius>;

        $i25 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>($i20);

        <com.android.datetimepicker.date.MonthView: int DAY_SELECTED_CIRCLE_SIZE> = $i25;

        $i26 = <com.android.datetimepicker.R$dimen: int date_picker_view_animator_height>;

        $i23 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i26);

        $i24 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        $i27 = $i23 - $i24;

        $i28 = $i27 / 6;

        r0.<com.android.datetimepicker.date.MonthView: int mRowHeight> = $i28;

        $r12 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper getMonthViewTouchHelper()>();

        r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper> = $r12;

        $r13 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r13);

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

        r0.<com.android.datetimepicker.date.MonthView: boolean mLockAccessibilityDelegate> = 1;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void initView()>();

        return;
    }

    public void setDatePickerController(com.android.datetimepicker.date.DatePickerController)
    {
        com.android.datetimepicker.date.MonthView r0;
        com.android.datetimepicker.date.DatePickerController r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerController;

        r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.DatePickerController mController> = r1;

        return;
    }

    protected com.android.datetimepicker.date.MonthView$MonthViewTouchHelper getMonthViewTouchHelper()
    {
        com.android.datetimepicker.date.MonthView r0;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $r1 = new com.android.datetimepicker.date.MonthView$MonthViewTouchHelper;

        specialinvoke $r1.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: void <init>(com.android.datetimepicker.date.MonthView,android.view.View)>(r0, r0);

        return $r1;
    }

    public void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.view.View$AccessibilityDelegate r1;
        boolean $z0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.view.View$AccessibilityDelegate;

        $z0 = r0.<com.android.datetimepicker.date.MonthView: boolean mLockAccessibilityDelegate>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>(r1);

     label1:
        return;
    }

    public void setOnDayClickListener(com.android.datetimepicker.date.MonthView$OnDayClickListener)
    {
        com.android.datetimepicker.date.MonthView r0;
        com.android.datetimepicker.date.MonthView$OnDayClickListener r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: com.android.datetimepicker.date.MonthView$OnDayClickListener;

        r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$OnDayClickListener mOnDayClickListener> = r1;

        return;
    }

    public boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.view.MotionEvent r1;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        $z0 = virtualinvoke $r2.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.view.MotionEvent r1;
        int i0, $i1;
        float $f0, $f1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i1)
        {
            case 1: goto label1;
            default: goto label2;
        };

     label1:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getDayFromLocation(float,float)>($f0, $f1);

        if i0 < 0 goto label2;

        specialinvoke r0.<com.android.datetimepicker.date.MonthView: void onDayClick(int)>(i0);

     label2:
        return 1;
    }

    protected void initView()
    {
        com.android.datetimepicker.date.MonthView r0;
        android.graphics.Paint $r1, $r2, $r3, $r4, $r6, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r33, $r35, $r38, $r40, $r41, $r43, $r44, $r45, $r47, $r49, $r50, $r51;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2;
        java.lang.String $r5, $r34;
        android.graphics.Typeface $r7, $r39;
        android.graphics.Paint$Align $r10, $r19, $r25, $r42, $r46;
        android.graphics.Paint$Style $r12, $r21, $r30, $r37, $r48;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint> = $r1;

        $r2 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);

        $r3 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r4 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        $i0 = <com.android.datetimepicker.date.MonthView: int MONTH_LABEL_TEXT_SIZE>;

        $f0 = (float) $i0;

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>($f0);

        $r6 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        $r5 = r0.<com.android.datetimepicker.date.MonthView: java.lang.String mMonthTitleTypeface>;

        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r5, 1);

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r7);

        $r9 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mDayTextColor>;

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>($i1);

        $r11 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        $r10 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r11.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r10);

        $r14 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r14.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint> = $r13;

        $r16 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint>;

        virtualinvoke $r16.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);

        $r15 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint>;

        virtualinvoke $r15.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r17 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint>;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mMonthTitleBGColor>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>($i2);

        $r18 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint>;

        $r19 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r18.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r19);

        $r20 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitleBGPaint>;

        $r21 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r20.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r21);

        $r23 = new android.graphics.Paint;

        specialinvoke $r23.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint> = $r23;

        $r22 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        virtualinvoke $r22.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);

        $r24 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        virtualinvoke $r24.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r26 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        $i3 = r0.<com.android.datetimepicker.date.MonthView: int mTodayNumberColor>;

        virtualinvoke $r26.<android.graphics.Paint: void setColor(int)>($i3);

        $r29 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        $r25 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r29.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r25);

        $r27 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        $r30 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r27.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r30);

        $r28 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mSelectedCirclePaint>;

        virtualinvoke $r28.<android.graphics.Paint: void setAlpha(int)>(60);

        $r31 = new android.graphics.Paint;

        specialinvoke $r31.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint> = $r31;

        $r32 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        virtualinvoke $r32.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r35 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        $i4 = <com.android.datetimepicker.date.MonthView: int MONTH_DAY_LABEL_TEXT_SIZE>;

        $f1 = (float) $i4;

        virtualinvoke $r35.<android.graphics.Paint: void setTextSize(float)>($f1);

        $r33 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        $i5 = r0.<com.android.datetimepicker.date.MonthView: int mDayTextColor>;

        virtualinvoke $r33.<android.graphics.Paint: void setColor(int)>($i5);

        $r38 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        $r34 = r0.<com.android.datetimepicker.date.MonthView: java.lang.String mDayOfWeekTypeface>;

        $r39 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>($r34, 0);

        virtualinvoke $r38.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r39);

        $r43 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        $r37 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r43.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r37);

        $r41 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        $r42 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r41.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r42);

        $r40 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        virtualinvoke $r40.<android.graphics.Paint: void setFakeBoldText(boolean)>(1);

        $r45 = new android.graphics.Paint;

        specialinvoke $r45.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint> = $r45;

        $r44 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint>;

        virtualinvoke $r44.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r49 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint>;

        $i6 = <com.android.datetimepicker.date.MonthView: int MINI_DAY_NUMBER_TEXT_SIZE>;

        $f2 = (float) $i6;

        virtualinvoke $r49.<android.graphics.Paint: void setTextSize(float)>($f2);

        $r47 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint>;

        $r48 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r47.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r48);

        $r51 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint>;

        $r46 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r51.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r46);

        $r50 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthNumPaint>;

        virtualinvoke $r50.<android.graphics.Paint: void setFakeBoldText(boolean)>(0);

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.graphics.Canvas r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void drawMonthTitle(android.graphics.Canvas)>(r1);

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void drawMonthDayLabels(android.graphics.Canvas)>(r1);

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void drawMonthNums(android.graphics.Canvas)>(r1);

        return;
    }

    public void setMonthParams(java.util.HashMap)
    {
        com.android.datetimepicker.date.MonthView r0;
        java.util.HashMap r1;
        android.text.format.Time r2, $r7;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r3, $r5, $r16, $r17, $r18;
        java.lang.Integer $r4, $r6, $r15, $r19, $r20;
        java.lang.String $r8;
        java.util.Calendar $r9, $r10, $r11, $r12, $r13;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r14;
        java.security.InvalidParameterException $r21;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: java.util.HashMap;

        $z0 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("month");

        if $z0 != 0 goto label1;

        $z5 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("year");

        if $z5 != 0 goto label1;

        $r21 = new java.security.InvalidParameterException;

        specialinvoke $r21.<java.security.InvalidParameterException: void <init>(java.lang.String)>("You must specify month and year for this view");

        throw $r21;

     label1:
        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void setTag(java.lang.Object)>(r1);

        $z1 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("height");

        if $z1 == 0 goto label2;

        $r17 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("height");

        $r20 = (java.lang.Integer) $r17;

        $i17 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        r0.<com.android.datetimepicker.date.MonthView: int mRowHeight> = $i17;

        $i16 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        $i15 = <com.android.datetimepicker.date.MonthView: int MIN_HEIGHT>;

        if $i16 >= $i15 goto label2;

        $i18 = <com.android.datetimepicker.date.MonthView: int MIN_HEIGHT>;

        r0.<com.android.datetimepicker.date.MonthView: int mRowHeight> = $i18;

     label2:
        $z2 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("selected_day");

        if $z2 == 0 goto label3;

        $r18 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("selected_day");

        $r19 = (java.lang.Integer) $r18;

        $i14 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        r0.<com.android.datetimepicker.date.MonthView: int mSelectedDay> = $i14;

     label3:
        $r3 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("month");

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r0.<com.android.datetimepicker.date.MonthView: int mMonth> = $i2;

        $r5 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("year");

        $r6 = (java.lang.Integer) $r5;

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        r0.<com.android.datetimepicker.date.MonthView: int mYear> = $i3;

        $r7 = new android.text.format.Time;

        $r8 = staticinvoke <android.text.format.Time: java.lang.String getCurrentTimezone()>();

        specialinvoke $r7.<android.text.format.Time: void <init>(java.lang.String)>($r8);

        r2 = $r7;

        virtualinvoke r2.<android.text.format.Time: void setToNow()>();

        r0.<com.android.datetimepicker.date.MonthView: boolean mHasToday> = 0;

        r0.<com.android.datetimepicker.date.MonthView: int mToday> = -1;

        $r9 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        virtualinvoke $r9.<java.util.Calendar: void set(int,int)>(2, $i4);

        $r10 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        $i5 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        virtualinvoke $r10.<java.util.Calendar: void set(int,int)>(1, $i5);

        $r12 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        virtualinvoke $r12.<java.util.Calendar: void set(int,int)>(5, 1);

        $r11 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        $i6 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(7);

        r0.<com.android.datetimepicker.date.MonthView: int mDayOfWeekStart> = $i6;

        $z3 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("week_start");

        if $z3 == 0 goto label4;

        $r16 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("week_start");

        $r15 = (java.lang.Integer) $r16;

        $i13 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        r0.<com.android.datetimepicker.date.MonthView: int mWeekStart> = $i13;

        goto label5;

     label4:
        $r13 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        $i7 = virtualinvoke $r13.<java.util.Calendar: int getFirstDayOfWeek()>();

        r0.<com.android.datetimepicker.date.MonthView: int mWeekStart> = $i7;

     label5:
        $i8 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        $i9 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i11 = staticinvoke <com.android.datetimepicker.Utils: int getDaysInMonth(int,int)>($i8, $i9);

        r0.<com.android.datetimepicker.date.MonthView: int mNumCells> = $i11;

        i0 = 0;

     label6:
        $i10 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        if i0 >= $i10 goto label8;

        i1 = i0 + 1;

        $z4 = specialinvoke r0.<com.android.datetimepicker.date.MonthView: boolean sameDay(int,android.text.format.Time)>(i1, r2);

        if $z4 == 0 goto label7;

        r0.<com.android.datetimepicker.date.MonthView: boolean mHasToday> = 1;

        r0.<com.android.datetimepicker.date.MonthView: int mToday> = i1;

     label7:
        i0 = i0 + 1;

        goto label6;

     label8:
        $i12 = specialinvoke r0.<com.android.datetimepicker.date.MonthView: int calculateNumRows()>();

        r0.<com.android.datetimepicker.date.MonthView: int mNumRows> = $i12;

        $r14 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r14.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: void invalidateRoot()>();

        return;
    }

    public void setSelectedDay(int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        r0.<com.android.datetimepicker.date.MonthView: int mSelectedDay> = i0;

        return;
    }

    public void reuse()
    {
        com.android.datetimepicker.date.MonthView r0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r0.<com.android.datetimepicker.date.MonthView: int mNumRows> = 6;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void requestLayout()>();

        return;
    }

    private int calculateNumRows()
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        byte $b10;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int findDayOffset()>();

        $i3 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        $i5 = i0 + $i3;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        i1 = $i5 / $i4;

        $i6 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        $i8 = i0 + $i6;

        $i7 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        i2 = $i8 % $i7;

        if i2 <= 0 goto label1;

        $b10 = 1;

        goto label2;

     label1:
        $b10 = 0;

     label2:
        $i9 = i1 + $b10;

        return $i9;
    }

    private boolean sameDay(int, android.text.format.Time)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.text.format.Time r1;
        boolean $z0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.text.format.Time;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i1 = r1.<android.text.format.Time: int year>;

        if $i2 != $i1 goto label1;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        $i3 = r1.<android.text.format.Time: int month>;

        if $i4 != $i3 goto label1;

        $i5 = r1.<android.text.format.Time: int monthDay>;

        if i0 != $i5 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected void onMeasure(int, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        $i3 = r0.<com.android.datetimepicker.date.MonthView: int mNumRows>;

        $i5 = $i4 * $i3;

        $i6 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        $i7 = $i5 + $i6;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void setMeasuredDimension(int,int)>($i2, $i7);

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, i2, i3;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r0.<com.android.datetimepicker.date.MonthView: int mWidth> = i0;

        $r1 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r1.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: void invalidateRoot()>();

        return;
    }

    public int getMonth()
    {
        com.android.datetimepicker.date.MonthView r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $i0 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        return $i0;
    }

    public int getYear()
    {
        com.android.datetimepicker.date.MonthView r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $i0 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        return $i0;
    }

    protected int getMonthHeaderSize()
    {
        com.android.datetimepicker.date.MonthView r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $i0 = <com.android.datetimepicker.date.MonthView: int MONTH_HEADER_SIZE>;

        return $i0;
    }

    private java.lang.String getMonthAndYearString()
    {
        com.android.datetimepicker.date.MonthView r0;
        byte b0;
        long l1;
        java.lang.StringBuilder $r1;
        java.util.Calendar $r2;
        android.content.Context $r3;
        java.util.Formatter $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        b0 = 52;

        $r1 = r0.<com.android.datetimepicker.date.MonthView: java.lang.StringBuilder mStringBuilder>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        $r2 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mCalendar>;

        l1 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

        $r3 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: android.content.Context getContext()>();

        $r4 = r0.<com.android.datetimepicker.date.MonthView: java.util.Formatter mFormatter>;

        $r5 = staticinvoke <android.text.format.Time: java.lang.String getCurrentTimezone()>();

        $r6 = staticinvoke <android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>($r3, $r4, l1, l1, b0, $r5);

        $r7 = virtualinvoke $r6.<java.util.Formatter: java.lang.String toString()>();

        return $r7;
    }

    protected void drawMonthTitle(android.graphics.Canvas)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r2;
        android.graphics.Paint $r3;
        float $f0, $f1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.graphics.Canvas;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mWidth>;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $i3 = 2 * $i2;

        $i5 = $i4 + $i3;

        i0 = $i5 / 2;

        $i6 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        $i7 = <com.android.datetimepicker.date.MonthView: int MONTH_DAY_LABEL_TEXT_SIZE>;

        $i8 = $i6 - $i7;

        $i11 = $i8 / 2;

        $i9 = <com.android.datetimepicker.date.MonthView: int MONTH_LABEL_TEXT_SIZE>;

        $i10 = $i9 / 3;

        i1 = $i11 + $i10;

        $r2 = specialinvoke r0.<com.android.datetimepicker.date.MonthView: java.lang.String getMonthAndYearString()>();

        $f0 = (float) i0;

        $f1 = (float) i1;

        $r3 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthTitlePaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r2, $f0, $f1, $r3);

        return;
    }

    protected void drawMonthDayLabels(android.graphics.Canvas)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        java.util.Calendar $r2, $r3;
        java.lang.String $r4, $r6;
        java.util.Locale $r5, $r7;
        float $f0, $f1;
        android.graphics.Paint $r8;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.graphics.Canvas;

        $i5 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        $i6 = <com.android.datetimepicker.date.MonthView: int MONTH_DAY_LABEL_TEXT_SIZE>;

        $i7 = $i6 / 2;

        i0 = $i5 - $i7;

        $i10 = r0.<com.android.datetimepicker.date.MonthView: int mWidth>;

        $i8 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $i9 = $i8 * 2;

        $i13 = $i10 - $i9;

        $i11 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        $i12 = $i11 * 2;

        i1 = $i13 / $i12;

        i2 = 0;

     label1:
        $i15 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        if i2 >= $i15 goto label2;

        $i14 = r0.<com.android.datetimepicker.date.MonthView: int mWeekStart>;

        $i16 = i2 + $i14;

        $i17 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        i3 = $i16 % $i17;

        $i19 = 2 * i2;

        $i18 = $i19 + 1;

        $i20 = $i18 * i1;

        $i21 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        i4 = $i20 + $i21;

        $r3 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mDayLabelCalendar>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(7, i3);

        $r2 = r0.<com.android.datetimepicker.date.MonthView: java.util.Calendar mDayLabelCalendar>;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(7, 1, $r5);

        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r7);

        $f0 = (float) i4;

        $f1 = (float) i0;

        $r8 = r0.<com.android.datetimepicker.date.MonthView: android.graphics.Paint mMonthDayLabelPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r6, $f0, $f1, $r8);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    protected void drawMonthNums(android.graphics.Canvas)
    {
        com.android.datetimepicker.date.MonthView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: android.graphics.Canvas;

        $i10 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        $i9 = <com.android.datetimepicker.date.MonthView: int MINI_DAY_NUMBER_TEXT_SIZE>;

        $i11 = $i10 + $i9;

        $i14 = $i11 / 2;

        $i12 = <com.android.datetimepicker.date.MonthView: int DAY_SEPARATOR_WIDTH>;

        $i13 = $i14 - $i12;

        $i16 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        i0 = $i13 + $i16;

        $i17 = r0.<com.android.datetimepicker.date.MonthView: int mWidth>;

        $i15 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $i18 = $i15 * 2;

        $i20 = $i17 - $i18;

        $f3 = (float) $i20;

        $i19 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        $f2 = (float) $i19;

        $f1 = $f2 * 2.0F;

        f0 = $f3 / $f1;

        i1 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int findDayOffset()>();

        i2 = 1;

     label1:
        $i22 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        if i2 > $i22 goto label3;

        $i21 = 2 * i1;

        $i23 = $i21 + 1;

        $f4 = (float) $i23;

        $f5 = $f4 * f0;

        $i24 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $f7 = (float) $i24;

        $f6 = $f5 + $f7;

        i3 = (int) $f6;

        $i28 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        $i27 = <com.android.datetimepicker.date.MonthView: int MINI_DAY_NUMBER_TEXT_SIZE>;

        $i25 = $i28 + $i27;

        $i29 = $i25 / 2;

        $i26 = <com.android.datetimepicker.date.MonthView: int DAY_SEPARATOR_WIDTH>;

        i4 = $i29 - $i26;

        $f10 = (float) i3;

        $f8 = $f10 - f0;

        i5 = (int) $f8;

        $f9 = (float) i3;

        $f11 = $f9 + f0;

        i6 = (int) $f11;

        i7 = i0 - i4;

        $i32 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        i8 = i7 + $i32;

        $i31 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i30 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthView: void drawMonthDay(android.graphics.Canvas,int,int,int,int,int,int,int,int,int)>(r1, $i31, $i30, i2, i3, i0, i5, i6, i7, i8);

        i1 = i1 + 1;

        $i34 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        if i1 != $i34 goto label2;

        i1 = 0;

        $i33 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        i0 = i0 + $i33;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public abstract void drawMonthDay(android.graphics.Canvas, int, int, int, int, int, int, int, int, int);

    protected int findDayOffset()
    {
        com.android.datetimepicker.date.MonthView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mDayOfWeekStart>;

        $i0 = r0.<com.android.datetimepicker.date.MonthView: int mWeekStart>;

        if $i1 >= $i0 goto label1;

        $i6 = r0.<com.android.datetimepicker.date.MonthView: int mDayOfWeekStart>;

        $i5 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        $i3 = $i6 + $i5;

        goto label2;

     label1:
        $i3 = r0.<com.android.datetimepicker.date.MonthView: int mDayOfWeekStart>;

     label2:
        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mWeekStart>;

        $i4 = $i3 - $i2;

        return $i4;
    }

    public int getDayFromLocation(float, float)
    {
        com.android.datetimepicker.date.MonthView r0;
        float f0, f1;
        int i0, $i1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getInternalDayFromLocation(float,float)>(f0, f1);

        if i0 < 1 goto label1;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        if i0 <= $i1 goto label2;

     label1:
        return -1;

     label2:
        return i0;
    }

    protected int getInternalDayFromLocation(float, float)
    {
        com.android.datetimepicker.date.MonthView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21;
        byte $b4, $b8;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $f2 = (float) i0;

        $b4 = f0 cmpg $f2;

        if $b4 < 0 goto label1;

        $i6 = r0.<com.android.datetimepicker.date.MonthView: int mWidth>;

        $i5 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $i7 = $i6 - $i5;

        $f3 = (float) $i7;

        $b8 = f0 cmpl $f3;

        if $b8 <= 0 goto label2;

     label1:
        return -1;

     label2:
        $i9 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int getMonthHeaderSize()>();

        $f4 = (float) $i9;

        $f5 = f1 - $f4;

        $i11 = (int) $f5;

        $i10 = r0.<com.android.datetimepicker.date.MonthView: int mRowHeight>;

        i1 = $i11 / $i10;

        $f6 = (float) i0;

        $f8 = f0 - $f6;

        $i12 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        $f7 = (float) $i12;

        $f11 = $f8 * $f7;

        $i13 = r0.<com.android.datetimepicker.date.MonthView: int mWidth>;

        $i14 = $i13 - i0;

        $i15 = r0.<com.android.datetimepicker.date.MonthView: int mEdgePadding>;

        $i16 = $i14 - $i15;

        $f9 = (float) $i16;

        $f10 = $f11 / $f9;

        i2 = (int) $f10;

        $i18 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: int findDayOffset()>();

        $i17 = i2 - $i18;

        i3 = $i17 + 1;

        $i19 = r0.<com.android.datetimepicker.date.MonthView: int mNumDays>;

        $i20 = i1 * $i19;

        i21 = i3 + $i20;

        return i21;
    }

    private void onDayClick(int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        com.android.datetimepicker.date.MonthView$OnDayClickListener $r1, $r4;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r2;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r3;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        $z0 = virtualinvoke r0.<com.android.datetimepicker.date.MonthView: boolean isOutOfRange(int,int,int)>($i2, $i1, i0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$OnDayClickListener mOnDayClickListener>;

        if $r1 == null goto label2;

        $r4 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$OnDayClickListener mOnDayClickListener>;

        $r3 = new com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i3 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        specialinvoke $r3.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: void <init>(int,int,int)>($i4, $i3, i0);

        interfaceinvoke $r4.<com.android.datetimepicker.date.MonthView$OnDayClickListener: void onDayClick(com.android.datetimepicker.date.MonthView,com.android.datetimepicker.date.MonthAdapter$CalendarDay)>(r0, $r3);

     label2:
        $r2 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r2.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: boolean sendEventForVirtualView(int,int)>(i0, 1);

        return;
    }

    protected boolean isOutOfRange(int, int, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, i2;
        boolean $z0, $z1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.datetimepicker.date.MonthView: boolean isBeforeMin(int,int,int)>(i0, i1, i2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.<com.android.datetimepicker.date.MonthView: boolean isAfterMax(int,int,int)>(i0, i1, i2);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean isBeforeMin(int, int, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Calendar r1;
        com.android.datetimepicker.date.DatePickerController $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.DatePickerController mController>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.DatePickerController mController>;

        r1 = interfaceinvoke $r3.<com.android.datetimepicker.date.DatePickerController: java.util.Calendar getMinDate()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        if i0 >= $i3 goto label3;

        return 1;

     label3:
        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        if i0 <= $i4 goto label4;

        return 0;

     label4:
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        if i1 >= $i5 goto label5;

        return 1;

     label5:
        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        if i1 <= $i6 goto label6;

        return 0;

     label6:
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        if i2 >= $i7 goto label7;

        return 1;

     label7:
        return 0;
    }

    private boolean isAfterMax(int, int, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Calendar r1;
        com.android.datetimepicker.date.DatePickerController $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.DatePickerController mController>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.DatePickerController mController>;

        r1 = interfaceinvoke $r3.<com.android.datetimepicker.date.DatePickerController: java.util.Calendar getMaxDate()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $i3 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        if i0 <= $i3 goto label3;

        return 1;

     label3:
        $i4 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        if i0 >= $i4 goto label4;

        return 0;

     label4:
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        if i1 <= $i5 goto label5;

        return 1;

     label5:
        $i6 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        if i1 >= $i6 goto label6;

        return 0;

     label6:
        $i7 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        if i2 <= $i7 goto label7;

        return 1;

     label7:
        return 0;
    }

    public com.android.datetimepicker.date.MonthAdapter$CalendarDay getAccessibilityFocus()
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0, $i1, $i2;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r1;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r2;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $r1 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        i0 = virtualinvoke $r1.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: int getFocusedVirtualView()>();

        if i0 < 0 goto label1;

        $r2 = new com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        $i1 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        specialinvoke $r2.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: void <init>(int,int,int)>($i2, $i1, i0);

        return $r2;

     label1:
        return null;
    }

    public void clearAccessibilityFocus()
    {
        com.android.datetimepicker.date.MonthView r0;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r1;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        $r1 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        virtualinvoke $r1.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: void clearFocusedVirtualView()>();

        return;
    }

    public boolean restoreAccessibilityFocus(com.android.datetimepicker.date.MonthAdapter$CalendarDay)
    {
        com.android.datetimepicker.date.MonthView r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.datetimepicker.date.MonthView$MonthViewTouchHelper $r2;

        r0 := @this: com.android.datetimepicker.date.MonthView;

        r1 := @parameter0: com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $i1 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int year>;

        $i0 = r0.<com.android.datetimepicker.date.MonthView: int mYear>;

        if $i1 != $i0 goto label1;

        $i3 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int month>;

        $i2 = r0.<com.android.datetimepicker.date.MonthView: int mMonth>;

        if $i3 != $i2 goto label1;

        $i5 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int day>;

        $i4 = r0.<com.android.datetimepicker.date.MonthView: int mNumCells>;

        if $i5 <= $i4 goto label2;

     label1:
        return 0;

     label2:
        $r2 = r0.<com.android.datetimepicker.date.MonthView: com.android.datetimepicker.date.MonthView$MonthViewTouchHelper mTouchHelper>;

        $i6 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int day>;

        virtualinvoke $r2.<com.android.datetimepicker.date.MonthView$MonthViewTouchHelper: void setFocusedVirtualView(int)>($i6);

        return 1;
    }

    static void access$000(com.android.datetimepicker.date.MonthView, int)
    {
        com.android.datetimepicker.date.MonthView r0;
        int i0;

        r0 := @parameter0: com.android.datetimepicker.date.MonthView;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.datetimepicker.date.MonthView: void onDayClick(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        <com.android.datetimepicker.date.MonthView: int SELECTED_CIRCLE_ALPHA> = 60;

        <com.android.datetimepicker.date.MonthView: int MAX_NUM_ROWS> = 6;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_NUM_ROWS> = 6;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_FOCUS_MONTH> = -1;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_SHOW_WK_NUM> = 0;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_NUM_DAYS> = 7;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_WEEK_START> = 1;

        <com.android.datetimepicker.date.MonthView: int DEFAULT_SELECTED_DAY> = -1;

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_SHOW_WK_NUM> = "show_wk_num";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_FOCUS_MONTH> = "focus_month";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_NUM_DAYS> = "num_days";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_WEEK_START> = "week_start";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_SELECTED_DAY> = "selected_day";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_YEAR> = "year";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_MONTH> = "month";

        <com.android.datetimepicker.date.MonthView: java.lang.String VIEW_PARAMS_HEIGHT> = "height";

        <com.android.datetimepicker.date.MonthView: java.lang.String TAG> = "MonthView";

        <com.android.datetimepicker.date.MonthView: int DEFAULT_HEIGHT> = 32;

        <com.android.datetimepicker.date.MonthView: int MIN_HEIGHT> = 10;

        <com.android.datetimepicker.date.MonthView: int DAY_SEPARATOR_WIDTH> = 1;

        <com.android.datetimepicker.date.MonthView: float mScale> = 0.0F;

        return;
    }
}
