public class com.android.bitmap.view.BitmapDrawableImageView extends android.widget.ImageView
{
    private static final boolean HAS_TRANSIENT_STATE_SUPPORTED;
    private static final boolean TEMPORARY;
    private static final boolean PERMANENT;
    private com.android.bitmap.drawable.BasicBitmapDrawable mDrawable;
    private boolean mAttachedToWindow;

    public void <init>(android.content.Context)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.content.Context r1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        return;
    }

    public com.android.bitmap.drawable.BasicBitmapDrawable getTypedDrawable()
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        com.android.bitmap.drawable.BasicBitmapDrawable $r2;
        java.lang.Exception $r3;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

     label1:
        $r2 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void setTypedDrawable(com.android.bitmap.drawable.BasicBitmapDrawable)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        com.android.bitmap.drawable.BasicBitmapDrawable r1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: com.android.bitmap.drawable.BasicBitmapDrawable;

        specialinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable> = r1;

        return;
    }

    private void unbindDrawable()
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable(boolean)>(0);

        return;
    }

    private void unbindDrawable(boolean)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        boolean z0;
        com.android.bitmap.drawable.BasicBitmapDrawable $r1, $r2;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        virtualinvoke $r2.<com.android.bitmap.drawable.BasicBitmapDrawable: void unbind(boolean)>(z0);

     label1:
        return;
    }

    public void setImageResource(int)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        int i0;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.ImageView: void setImageResource(int)>(i0);

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable> = null;

        return;
    }

    public void setImageURI(android.net.Uri)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.net.Uri r1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<android.widget.ImageView: void setImageURI(android.net.Uri)>(r1);

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable> = null;

        return;
    }

    public void setImageDrawable(android.graphics.drawable.Drawable)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable> = null;

        return;
    }

    public void setImageBitmap(android.graphics.Bitmap)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        android.graphics.Bitmap r1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r1);

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable> = null;

        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        com.android.bitmap.drawable.BasicBitmapDrawable $r1, $r2, $r4, $r6, $r7;
        com.android.bitmap.RequestKey $r3, $r5, $r8;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        specialinvoke r0.<android.widget.ImageView: void onAttachedToWindow()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: boolean mAttachedToWindow> = 1;

        $r1 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        $r3 = virtualinvoke $r2.<com.android.bitmap.drawable.BasicBitmapDrawable: com.android.bitmap.RequestKey getKey()>();

        if $r3 != null goto label1;

        $r4 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        $r5 = virtualinvoke $r4.<com.android.bitmap.drawable.BasicBitmapDrawable: com.android.bitmap.RequestKey getPreviousKey()>();

        if $r5 == null goto label1;

        $r7 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        $r6 = r0.<com.android.bitmap.view.BitmapDrawableImageView: com.android.bitmap.drawable.BasicBitmapDrawable mDrawable>;

        $r8 = virtualinvoke $r6.<com.android.bitmap.drawable.BasicBitmapDrawable: com.android.bitmap.RequestKey getPreviousKey()>();

        virtualinvoke $r7.<com.android.bitmap.drawable.BasicBitmapDrawable: void bind(com.android.bitmap.RequestKey)>($r8);

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        boolean $z0, $z1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        specialinvoke r0.<android.widget.ImageView: void onDetachedFromWindow()>();

        r0.<com.android.bitmap.view.BitmapDrawableImageView: boolean mAttachedToWindow> = 0;

        $z0 = <com.android.bitmap.view.BitmapDrawableImageView: boolean HAS_TRANSIENT_STATE_SUPPORTED>;

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: boolean hasTransientState()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable(boolean)>(1);

     label1:
        return;
    }

    public void setHasTransientState(boolean)
    {
        com.android.bitmap.view.BitmapDrawableImageView r0;
        boolean z0, $z1;

        r0 := @this: com.android.bitmap.view.BitmapDrawableImageView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.ImageView: void setHasTransientState(boolean)>(z0);

        if z0 != 0 goto label1;

        $z1 = r0.<com.android.bitmap.view.BitmapDrawableImageView: boolean mAttachedToWindow>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.bitmap.view.BitmapDrawableImageView: void unbindDrawable(boolean)>(1);

     label1:
        return;
    }

    static void <clinit>()
    {
        int $i0;
        boolean $z0;

        <com.android.bitmap.view.BitmapDrawableImageView: boolean PERMANENT> = 0;

        <com.android.bitmap.view.BitmapDrawableImageView: boolean TEMPORARY> = 1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        <com.android.bitmap.view.BitmapDrawableImageView: boolean HAS_TRANSIENT_STATE_SUPPORTED> = $z0;

        return;
    }
}
