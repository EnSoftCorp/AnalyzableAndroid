public class com.android.ex.photo.adapters.PhotoPagerAdapter extends com.android.ex.photo.adapters.BaseCursorPagerAdapter
{
    protected android.support.v4.util.SimpleArrayMap mColumnIndices;
    protected final float mMaxScale;
    protected boolean mDisplayThumbsFullScreen;

    public void <init>(android.content.Context, android.support.v4.app.FragmentManager, android.database.Cursor, float, boolean)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.content.Context r1;
        android.support.v4.app.FragmentManager r2;
        android.database.Cursor r3;
        float f0;
        boolean z0;
        android.support.v4.util.SimpleArrayMap $r4;
        java.lang.String[] $r5;
        int $i0;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.support.v4.app.FragmentManager;

        r3 := @parameter2: android.database.Cursor;

        f0 := @parameter3: float;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.ex.photo.adapters.BaseCursorPagerAdapter: void <init>(android.content.Context,android.support.v4.app.FragmentManager,android.database.Cursor)>(r1, r2, r3);

        $r4 = new android.support.v4.util.SimpleArrayMap;

        $r5 = <com.android.ex.photo.provider.PhotoContract$PhotoQuery: java.lang.String[] PROJECTION>;

        $i0 = lengthof $r5;

        specialinvoke $r4.<android.support.v4.util.SimpleArrayMap: void <init>(int)>($i0);

        r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices> = $r4;

        r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: float mMaxScale> = f0;

        r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: boolean mDisplayThumbsFullScreen> = z0;

        return;
    }

    public android.support.v4.app.Fragment getItem(android.content.Context, android.database.Cursor, int)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.content.Context r1, $r6;
        android.database.Cursor r2;
        int i0;
        java.lang.String r3, r4;
        boolean z0, z1, $z2;
        com.android.ex.photo.Intents$PhotoViewIntentBuilder r5, $r8, $r9, $r10;
        java.lang.Class $r7;
        float $f0;
        android.content.Intent $r11;
        com.android.ex.photo.fragments.PhotoViewFragment $r13;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        r3 = virtualinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getPhotoUri(android.database.Cursor)>(r2);

        r4 = virtualinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getThumbnailUri(android.database.Cursor)>(r2);

        z0 = virtualinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: boolean shouldShowLoadingIndicator(android.database.Cursor)>(r2);

        z1 = 0;

        if r3 != null goto label1;

        if z0 == 0 goto label1;

        z1 = 1;

     label1:
        $r6 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.content.Context mContext>;

        $r7 = virtualinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.Class getPhotoViewFragmentClass()>();

        r5 = staticinvoke <com.android.ex.photo.Intents: com.android.ex.photo.Intents$PhotoViewIntentBuilder newPhotoViewFragmentIntentBuilder(android.content.Context,java.lang.Class)>($r6, $r7);

        $r8 = virtualinvoke r5.<com.android.ex.photo.Intents$PhotoViewIntentBuilder: com.android.ex.photo.Intents$PhotoViewIntentBuilder setResolvedPhotoUri(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<com.android.ex.photo.Intents$PhotoViewIntentBuilder: com.android.ex.photo.Intents$PhotoViewIntentBuilder setThumbnailUri(java.lang.String)>(r4);

        $z2 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: boolean mDisplayThumbsFullScreen>;

        $r10 = virtualinvoke $r9.<com.android.ex.photo.Intents$PhotoViewIntentBuilder: com.android.ex.photo.Intents$PhotoViewIntentBuilder setDisplayThumbsFullScreen(boolean)>($z2);

        $f0 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: float mMaxScale>;

        virtualinvoke $r10.<com.android.ex.photo.Intents$PhotoViewIntentBuilder: com.android.ex.photo.Intents$PhotoViewIntentBuilder setMaxInitialScale(float)>($f0);

        $r11 = virtualinvoke r5.<com.android.ex.photo.Intents$PhotoViewIntentBuilder: android.content.Intent build()>();

        $r13 = virtualinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: com.android.ex.photo.fragments.PhotoViewFragment createPhotoViewFragment(android.content.Intent,int,boolean)>($r11, i0, z1);

        return $r13;
    }

    protected java.lang.Class getPhotoViewFragmentClass()
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        return class "com/android/ex/photo/fragments/PhotoViewFragment";
    }

    protected com.android.ex.photo.fragments.PhotoViewFragment createPhotoViewFragment(android.content.Intent, int, boolean)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.content.Intent r1;
        int i0;
        boolean z0;
        com.android.ex.photo.fragments.PhotoViewFragment $r2;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = staticinvoke <com.android.ex.photo.fragments.PhotoViewFragment: com.android.ex.photo.fragments.PhotoViewFragment newInstance(android.content.Intent,int,boolean)>(r1, i0, z0);

        return $r2;
    }

    public android.database.Cursor swapCursor(android.database.Cursor)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1, $r5;
        java.lang.String[] r2, r12;
        int i0, i1, i2, $i3, i4, i5;
        java.lang.String r3, r13;
        android.support.v4.util.SimpleArrayMap $r4, $r6, $r9;
        java.lang.Integer $r7, $r10;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        $r4 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices>;

        virtualinvoke $r4.<android.support.v4.util.SimpleArrayMap: void clear()>();

        if r1 == null goto label5;

        r2 = <com.android.ex.photo.provider.PhotoContract$PhotoQuery: java.lang.String[] PROJECTION>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r9 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices>;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r3);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r9.<android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        r12 = <com.android.ex.photo.provider.PhotoContract$PhotoQuery: java.lang.String[] OPTIONAL_COLUMNS>;

        i4 = lengthof r12;

        i5 = 0;

     label3:
        if i5 >= i4 goto label5;

        r13 = r12[i5];

        i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r13);

        if i2 == -1 goto label4;

        $r6 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r6.<android.support.v4.util.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, $r7);

     label4:
        i5 = i5 + 1;

        goto label3;

     label5:
        $r5 = specialinvoke r0.<com.android.ex.photo.adapters.BaseCursorPagerAdapter: android.database.Cursor swapCursor(android.database.Cursor)>(r1);

        return $r5;
    }

    public java.lang.String getPhotoUri(android.database.Cursor)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1;
        java.lang.String $r2;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        $r2 = specialinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getString(android.database.Cursor,java.lang.String)>(r1, "contentUri");

        return $r2;
    }

    public java.lang.String getThumbnailUri(android.database.Cursor)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1;
        java.lang.String $r2;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        $r2 = specialinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getString(android.database.Cursor,java.lang.String)>(r1, "thumbnailUri");

        return $r2;
    }

    public java.lang.String getContentType(android.database.Cursor)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1;
        java.lang.String $r2;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        $r2 = specialinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getString(android.database.Cursor,java.lang.String)>(r1, "contentType");

        return $r2;
    }

    public boolean shouldShowLoadingIndicator(android.database.Cursor)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1;
        java.lang.String r2;
        java.lang.Boolean $r3;
        boolean $z0;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        r2 = specialinvoke r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: java.lang.String getString(android.database.Cursor,java.lang.String)>(r1, "loadingIndicator");

        if r2 != null goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r2);

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    private java.lang.String getString(android.database.Cursor, java.lang.String)
    {
        com.android.ex.photo.adapters.PhotoPagerAdapter r0;
        android.database.Cursor r1;
        java.lang.String r2, $r7;
        android.support.v4.util.SimpleArrayMap $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Integer $r6;
        int $i0;

        r0 := @this: com.android.ex.photo.adapters.PhotoPagerAdapter;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices>;

        $z0 = virtualinvoke $r3.<android.support.v4.util.SimpleArrayMap: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.ex.photo.adapters.PhotoPagerAdapter: android.support.v4.util.SimpleArrayMap mColumnIndices>;

        $r5 = virtualinvoke $r4.<android.support.v4.util.SimpleArrayMap: java.lang.Object get(java.lang.Object)>(r2);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        return $r7;

     label1:
        return null;
    }
}
