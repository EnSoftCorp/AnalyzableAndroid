public class com.android.email.activity.setup.AccountServerSettingsActivity extends com.android.email.activity.setup.AccountSetupActivity implements com.android.email.activity.setup.SecurityRequiredDialogFragment$Callback, com.android.email.activity.setup.CheckSettingsErrorDialogFragment$Callback, com.android.email.activity.setup.AccountCheckSettingsFragment$Callback, com.android.email.activity.setup.AccountServerBaseFragment$Callback, com.android.email.activity.setup.CheckSettingsProgressDialogFragment$Callback
{
    private static final java.lang.String EXTRA_ACCOUNT;
    private static final java.lang.String EXTRA_WHICH_SETTINGS;
    private static final java.lang.String INCOMING_SETTINGS;
    private static final java.lang.String OUTGOING_SETTINGS;
    private com.android.email.activity.setup.AccountServerBaseFragment mAccountServerFragment;

    public void <init>()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void <init>()>();

        return;
    }

    public static android.content.Intent getIntentForIncoming(android.content.Context, com.android.emailcommon.provider.Account)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        android.content.Intent r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/activity/setup/AccountServerSettingsActivity");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("account", r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("whichSettings", "incoming");

        return r2;
    }

    public static android.content.Intent getIntentForOutgoing(android.content.Context, com.android.emailcommon.provider.Account)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        android.content.Intent r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/activity/setup/AccountServerSettingsActivity");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("account", r1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("whichSettings", "outgoing");

        return r2;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        android.os.Bundle r1;
        com.android.emailcommon.provider.Account r2;
        java.lang.String r3, $r10;
        com.android.email.activity.setup.AccountServerBaseFragment r4;
        com.android.email.activity.setup.SetupDataFragment $r5, $r8;
        android.content.Intent $r6, $r9;
        android.os.Parcelable $r7;
        boolean $z0;
        android.app.FragmentManager $r11;
        android.app.FragmentTransaction $r12, $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onCreate(android.os.Bundle)>(r1);

        $r5 = r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r5.<com.android.email.activity.setup.SetupDataFragment: void setFlowMode(int)>(3);

        virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void setContentView(int)>(2130968603);

        virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void setFinishOnTouchOutside(boolean)>(0);

        if r1 != null goto label4;

        $r6 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.content.Intent getIntent()>();

        $r7 = virtualinvoke $r6.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("account");

        r2 = (com.android.emailcommon.provider.Account) $r7;

        if r2 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No account present in intent");

        throw $r14;

     label1:
        $r8 = r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: void setAccount(com.android.emailcommon.provider.Account)>(r2);

        $r9 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.content.Intent getIntent()>();

        r3 = virtualinvoke $r9.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("whichSettings");

        $r10 = "outgoing";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        r4 = staticinvoke <com.android.email.activity.setup.AccountSetupOutgoingFragment: com.android.email.activity.setup.AccountSetupOutgoingFragment newInstance(boolean)>(1);

        goto label3;

     label2:
        r4 = staticinvoke <com.android.email.activity.setup.AccountSetupIncomingFragment: com.android.email.activity.setup.AccountSetupIncomingFragment newInstance(boolean)>(1);

     label3:
        $r11 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        $r12 = virtualinvoke $r11.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r13 = virtualinvoke $r12.<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>(2131624041, r4);

        virtualinvoke $r13.<android.app.FragmentTransaction: int commit()>();

     label4:
        return;
    }

    public void onAttachFragment(android.app.Fragment)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        android.app.Fragment r1;
        boolean $z0;
        com.android.email.activity.setup.AccountServerBaseFragment $r2;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        r1 := @parameter0: android.app.Fragment;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onAttachFragment(android.app.Fragment)>(r1);

        $z0 = r1 instanceof com.android.email.activity.setup.AccountServerBaseFragment;

        if $z0 == 0 goto label1;

        $r2 = (com.android.email.activity.setup.AccountServerBaseFragment) r1;

        r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment mAccountServerFragment> = $r2;

     label1:
        return;
    }

    public com.android.email.activity.setup.AccountServerBaseFragment getAccountServerFragment()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        com.android.email.activity.setup.AccountServerBaseFragment $r1;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        $r1 = r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment mAccountServerFragment>;

        return $r1;
    }

    private void forceBack()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onBackPressed()>();

        return;
    }

    public void onBackPressed()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        com.android.email.activity.setup.AccountServerBaseFragment r1;
        com.android.email.activity.setup.AccountServerSettingsActivity$UnsavedChangesDialogFragment r2;
        boolean $z0;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment getAccountServerFragment()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.email.activity.setup.AccountServerBaseFragment: boolean haveSettingsChanged()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <com.android.email.activity.setup.AccountServerSettingsActivity$UnsavedChangesDialogFragment: com.android.email.activity.setup.AccountServerSettingsActivity$UnsavedChangesDialogFragment newInstanceForBack()>();

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r2.<com.android.email.activity.setup.AccountServerSettingsActivity$UnsavedChangesDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "UnsavedChangesDialogFragment");

        return;

     label1:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onBackPressed()>();

        return;
    }

    public void onNextButton()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        return;
    }

    public void onAccountServerSaveComplete()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onBackPressed()>();

        return;
    }

    public void onAccountServerUIComplete(int)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        int i0;
        com.android.email.activity.setup.CheckSettingsProgressDialogFragment r1;
        com.android.email.activity.setup.AccountCheckSettingsFragment r2;
        android.app.FragmentManager $r3;
        android.app.FragmentTransaction $r4, $r5, $r6;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        i0 := @parameter0: int;

        r1 = staticinvoke <com.android.email.activity.setup.CheckSettingsProgressDialogFragment: com.android.email.activity.setup.CheckSettingsProgressDialogFragment newInstance(int)>(i0);

        r2 = staticinvoke <com.android.email.activity.setup.AccountCheckSettingsFragment: com.android.email.activity.setup.AccountCheckSettingsFragment newInstance(int)>(i0);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        $r4 = virtualinvoke $r3.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r5 = virtualinvoke $r4.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r1, "CheckProgressDialog");

        $r6 = virtualinvoke $r5.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r2, "AccountCheckStgFrag");

        virtualinvoke $r6.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    public void onCheckSettingsProgressDialogCancel()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void dismissCheckSettingsFragment()>();

        return;
    }

    public void onCheckSettingsComplete()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        com.android.email.activity.setup.AccountServerBaseFragment r1;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void dismissCheckSettingsFragment()>();

        r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment getAccountServerFragment()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.email.activity.setup.AccountServerBaseFragment: void saveSettings()>();

     label1:
        return;
    }

    public void onCheckSettingsSecurityRequired(java.lang.String)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        java.lang.String r1;
        com.android.email.activity.setup.SecurityRequiredDialogFragment $r2;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void dismissCheckSettingsFragment()>();

        $r2 = staticinvoke <com.android.email.activity.setup.SecurityRequiredDialogFragment: com.android.email.activity.setup.SecurityRequiredDialogFragment newInstance(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r2.<com.android.email.activity.setup.SecurityRequiredDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "SecurityRequiredDialog");

        return;
    }

    public void onCheckSettingsError(int, java.lang.String)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        int i0;
        java.lang.String r1;
        com.android.email.activity.setup.CheckSettingsErrorDialogFragment $r2;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void dismissCheckSettingsFragment()>();

        $r2 = staticinvoke <com.android.email.activity.setup.CheckSettingsErrorDialogFragment: com.android.email.activity.setup.CheckSettingsErrorDialogFragment newInstance(int,java.lang.String)>(i0, r1);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r2.<com.android.email.activity.setup.CheckSettingsErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "CheckSettingsErrorDialog");

        return;
    }

    public void onCheckSettingsAutoDiscoverComplete(int)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        int i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        i0 := @parameter0: int;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;
    }

    private void dismissCheckSettingsFragment()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        android.app.Fragment r1, r2;
        android.app.FragmentManager $r3, $r4, $r5;
        android.app.FragmentTransaction $r6, $r7, $r8;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        r1 = virtualinvoke $r3.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("AccountCheckStgFrag");

        $r4 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        r2 = virtualinvoke $r4.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("CheckProgressDialog");

        $r5 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: android.app.FragmentManager getFragmentManager()>();

        $r6 = virtualinvoke $r5.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r7 = virtualinvoke $r6.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r1);

        $r8 = virtualinvoke $r7.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r2);

        virtualinvoke $r8.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    public void onSecurityRequiredDialogResult(boolean)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        boolean z0;
        com.android.email.activity.setup.AccountServerBaseFragment r1;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment getAccountServerFragment()>();

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.email.activity.setup.AccountServerBaseFragment: void saveSettings()>();

     label1:
        return;
    }

    public void onCheckSettingsErrorDialogEditSettings()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        return;
    }

    public void onCheckSettingsErrorDialogEditCertificate()
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;
        com.android.email.activity.setup.AccountServerBaseFragment r1;
        com.android.email.activity.setup.AccountSetupIncomingFragment r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.String $r4;

        r0 := @this: com.android.email.activity.setup.AccountServerSettingsActivity;

        r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: com.android.email.activity.setup.AccountServerBaseFragment getAccountServerFragment()>();

        $z0 = r1 instanceof com.android.email.activity.setup.AccountSetupIncomingFragment;

        if $z0 == 0 goto label1;

        r2 = (com.android.email.activity.setup.AccountSetupIncomingFragment) r1;

        virtualinvoke r2.<com.android.email.activity.setup.AccountSetupIncomingFragment: void onCertificateRequested()>();

        goto label2;

     label1:
        $r4 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r4, "Tried to change cert on non-incoming screen?", $r3);

     label2:
        return;
    }

    static void access$000(com.android.email.activity.setup.AccountServerSettingsActivity)
    {
        com.android.email.activity.setup.AccountServerSettingsActivity r0;

        r0 := @parameter0: com.android.email.activity.setup.AccountServerSettingsActivity;

        specialinvoke r0.<com.android.email.activity.setup.AccountServerSettingsActivity: void forceBack()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.email.activity.setup.AccountServerSettingsActivity: java.lang.String OUTGOING_SETTINGS> = "outgoing";

        <com.android.email.activity.setup.AccountServerSettingsActivity: java.lang.String INCOMING_SETTINGS> = "incoming";

        <com.android.email.activity.setup.AccountServerSettingsActivity: java.lang.String EXTRA_WHICH_SETTINGS> = "whichSettings";

        <com.android.email.activity.setup.AccountServerSettingsActivity: java.lang.String EXTRA_ACCOUNT> = "account";

        return;
    }
}
