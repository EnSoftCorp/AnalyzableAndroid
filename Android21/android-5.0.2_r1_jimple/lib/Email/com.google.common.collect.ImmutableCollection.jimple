public abstract class com.google.common.collect.ImmutableCollection extends java.lang.Object implements java.util.Collection, java.io.Serializable
{
    static final com.google.common.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION;
    private transient com.google.common.collect.ImmutableList asList;

    void <init>()
    {
        com.google.common.collect.ImmutableCollection r0;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.google.common.collect.UnmodifiableIterator iterator();

    public java.lang.Object[] toArray()
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.Object[] $r1;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = staticinvoke <com.google.common.collect.ObjectArrays: java.lang.Object[] toArrayImpl(java.util.Collection)>(r0);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.Object[] r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object[];

        $r2 = staticinvoke <com.google.common.collect.ObjectArrays: java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[])>(r0, r1);

        return $r2;
    }

    public boolean contains(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.Object r1;
        com.google.common.collect.UnmodifiableIterator $r2;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>();

        $z0 = staticinvoke <com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>($r2, r1);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean containsAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <com.google.common.collect.Collections2: boolean containsAllImpl(java.util.Collection,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public boolean isEmpty()
    {
        com.google.common.collect.ImmutableCollection r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = staticinvoke <com.google.common.collect.Collections2: java.lang.String toStringImpl(java.util.Collection)>(r0);

        return $r1;
    }

    public final boolean add(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean remove(java.lang.Object)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.Object r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.lang.Object;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean addAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean removeAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final boolean retainAll(java.util.Collection)
    {
        com.google.common.collect.ImmutableCollection r0;
        java.util.Collection r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 := @parameter0: java.util.Collection;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final void clear()
    {
        com.google.common.collect.ImmutableCollection r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public com.google.common.collect.ImmutableList asList()
    {
        com.google.common.collect.ImmutableCollection r0;
        com.google.common.collect.ImmutableList r1, $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        r1 = r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList>;

        if r1 != null goto label1;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList createAsList()>();

        r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableList asList> = $r2;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        return $r2;
    }

    com.google.common.collect.ImmutableList createAsList()
    {
        com.google.common.collect.ImmutableCollection r0;
        int $i0;
        com.google.common.collect.UnmodifiableIterator $r1;
        java.lang.Object $r2;
        com.google.common.collect.ImmutableList $r3, $r4;
        com.google.common.collect.ImmutableAsList $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $i0 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: int size()>();

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        $r4 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();

        return $r4;

     label2:
        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.UnmodifiableIterator: java.lang.Object next()>();

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>($r2);

        return $r3;

     label3:
        $r5 = new com.google.common.collect.ImmutableAsList;

        $r6 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>();

        specialinvoke $r5.<com.google.common.collect.ImmutableAsList: void <init>(java.lang.Object[],com.google.common.collect.ImmutableCollection)>($r6, r0);

        return $r5;
    }

    abstract boolean isPartialView();

    java.lang.Object writeReplace()
    {
        com.google.common.collect.ImmutableCollection r0;
        com.google.common.collect.ImmutableCollection$SerializedForm $r1;
        java.lang.Object[] $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = new com.google.common.collect.ImmutableCollection$SerializedForm;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: java.lang.Object[] toArray()>();

        specialinvoke $r1.<com.google.common.collect.ImmutableCollection$SerializedForm: void <init>(java.lang.Object[])>($r2);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.common.collect.ImmutableCollection r0;
        com.google.common.collect.UnmodifiableIterator $r1;

        r0 := @this: com.google.common.collect.ImmutableCollection;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableCollection: com.google.common.collect.UnmodifiableIterator iterator()>();

        return $r1;
    }

    static void <clinit>()
    {
        com.google.common.collect.ImmutableCollection$EmptyImmutableCollection $r0;

        $r0 = new com.google.common.collect.ImmutableCollection$EmptyImmutableCollection;

        specialinvoke $r0.<com.google.common.collect.ImmutableCollection$EmptyImmutableCollection: void <init>(com.google.common.collect.ImmutableCollection$1)>(null);

        <com.google.common.collect.ImmutableCollection: com.google.common.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION> = $r0;

        return;
    }
}
