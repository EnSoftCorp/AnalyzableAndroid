public class com.android.mail.bitmap.ContactResolver extends java.lang.Object implements java.lang.Runnable
{
    private static final java.lang.String TAG;
    protected final android.content.ContentResolver mResolver;
    private final com.android.bitmap.BitmapCache mCache;
    private final java.util.LinkedHashSet mBatch;
    private final android.os.Handler mHandler;
    private com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask;
    private static final java.util.concurrent.Executor SMALL_POOL_EXECUTOR;
    private static final java.util.concurrent.Executor EXECUTOR;

    public void <init>(android.content.ContentResolver, com.android.bitmap.BitmapCache)
    {
        com.android.mail.bitmap.ContactResolver r0;
        android.content.ContentResolver r1;
        com.android.bitmap.BitmapCache r2;
        android.os.Handler $r3;
        java.util.LinkedHashSet $r4;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        r1 := @parameter0: android.content.ContentResolver;

        r2 := @parameter1: com.android.bitmap.BitmapCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.android.mail.bitmap.ContactResolver: android.os.Handler mHandler> = $r3;

        r0.<com.android.mail.bitmap.ContactResolver: android.content.ContentResolver mResolver> = r1;

        r0.<com.android.mail.bitmap.ContactResolver: com.android.bitmap.BitmapCache mCache> = r2;

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch> = $r4;

        return;
    }

    public void run()
    {
        com.android.mail.bitmap.ContactResolver r0;
        java.util.LinkedHashSet r1, $r2, $r6, $r7;
        boolean $z0;
        com.android.mail.bitmap.ContactResolver$ContactResolverTask $r3, $r8, $r9, $r12, $r14, $r16;
        java.lang.Object[] $r4, $r17;
        java.lang.String $r5, $r19;
        java.lang.Void[] $r10;
        java.util.concurrent.Executor $r11;
        android.os.AsyncTask$Status $r15, $r18;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        $r2 = r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch>;

        $z0 = virtualinvoke $r2.<java.util.LinkedHashSet: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask>;

        if $r3 == null goto label2;

        $r16 = r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask>;

        $r15 = virtualinvoke $r16.<com.android.mail.bitmap.ContactResolver$ContactResolverTask: android.os.AsyncTask$Status getStatus()>();

        $r18 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status RUNNING>;

        if $r15 != $r18 goto label2;

        $r19 = <com.android.mail.bitmap.ContactResolver: java.lang.String TAG>;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "ContactResolver << batch skip", $r17);

        return;

     label2:
        staticinvoke <com.android.ex.photo.util.Trace: void beginSection(java.lang.String)>("ContactResolver run");

        $r5 = <com.android.mail.bitmap.ContactResolver: java.lang.String TAG>;

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r5, "ContactResolver >> batch start", $r4);

        $r6 = new java.util.LinkedHashSet;

        $r7 = r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch>;

        specialinvoke $r6.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r7);

        r1 = $r6;

        $r8 = r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask>;

        if $r8 == null goto label3;

        $r14 = r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask>;

        virtualinvoke $r14.<com.android.mail.bitmap.ContactResolver$ContactResolverTask: boolean cancel(boolean)>(1);

     label3:
        $r9 = virtualinvoke r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask getContactResolverTask(java.util.LinkedHashSet)>(r1);

        r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask> = $r9;

        $r12 = r0.<com.android.mail.bitmap.ContactResolver: com.android.mail.bitmap.ContactResolver$ContactResolverTask mTask>;

        $r11 = <com.android.mail.bitmap.ContactResolver: java.util.concurrent.Executor EXECUTOR>;

        $r10 = newarray (java.lang.Void)[0];

        virtualinvoke $r12.<com.android.mail.bitmap.ContactResolver$ContactResolverTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r11, $r10);

        staticinvoke <com.android.ex.photo.util.Trace: void endSection()>();

        return;
    }

    protected com.android.mail.bitmap.ContactResolver$ContactResolverTask getContactResolverTask(java.util.LinkedHashSet)
    {
        com.android.mail.bitmap.ContactResolver r0;
        java.util.LinkedHashSet r1;
        com.android.mail.bitmap.ContactResolver$ContactResolverTask $r2;
        com.android.bitmap.BitmapCache $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        r1 := @parameter0: java.util.LinkedHashSet;

        $r2 = new com.android.mail.bitmap.ContactResolver$ContactResolverTask;

        $r4 = r0.<com.android.mail.bitmap.ContactResolver: android.content.ContentResolver mResolver>;

        $r3 = r0.<com.android.mail.bitmap.ContactResolver: com.android.bitmap.BitmapCache mCache>;

        specialinvoke $r2.<com.android.mail.bitmap.ContactResolver$ContactResolverTask: void <init>(java.util.Set,android.content.ContentResolver,com.android.bitmap.BitmapCache,com.android.mail.bitmap.ContactResolver)>(r1, $r4, $r3, r0);

        return $r2;
    }

    public com.android.bitmap.BitmapCache getCache()
    {
        com.android.mail.bitmap.ContactResolver r0;
        com.android.bitmap.BitmapCache $r1;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        $r1 = r0.<com.android.mail.bitmap.ContactResolver: com.android.bitmap.BitmapCache mCache>;

        return $r1;
    }

    public void add(com.android.mail.bitmap.ContactRequest, com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)
    {
        com.android.mail.bitmap.ContactResolver r0;
        com.android.mail.bitmap.ContactRequest r1;
        com.android.mail.bitmap.ContactResolver$ContactDrawableInterface r2;
        com.android.mail.bitmap.ContactRequest$ContactRequestHolder $r3;
        java.util.LinkedHashSet $r4;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        r1 := @parameter0: com.android.mail.bitmap.ContactRequest;

        r2 := @parameter1: com.android.mail.bitmap.ContactResolver$ContactDrawableInterface;

        $r4 = r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch>;

        $r3 = new com.android.mail.bitmap.ContactRequest$ContactRequestHolder;

        specialinvoke $r3.<com.android.mail.bitmap.ContactRequest$ContactRequestHolder: void <init>(com.android.mail.bitmap.ContactRequest,com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)>(r1, r2);

        virtualinvoke $r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r3);

        specialinvoke r0.<com.android.mail.bitmap.ContactResolver: void notifyBatchReady()>();

        return;
    }

    public void remove(com.android.mail.bitmap.ContactRequest, com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)
    {
        com.android.mail.bitmap.ContactResolver r0;
        com.android.mail.bitmap.ContactRequest r1;
        com.android.mail.bitmap.ContactResolver$ContactDrawableInterface r2;
        com.android.mail.bitmap.ContactRequest$ContactRequestHolder $r3;
        java.util.LinkedHashSet $r4;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        r1 := @parameter0: com.android.mail.bitmap.ContactRequest;

        r2 := @parameter1: com.android.mail.bitmap.ContactResolver$ContactDrawableInterface;

        $r4 = r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch>;

        $r3 = new com.android.mail.bitmap.ContactRequest$ContactRequestHolder;

        specialinvoke $r3.<com.android.mail.bitmap.ContactRequest$ContactRequestHolder: void <init>(com.android.mail.bitmap.ContactRequest,com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)>(r1, r2);

        virtualinvoke $r4.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>($r3);

        return;
    }

    private void notifyBatchReady()
    {
        com.android.mail.bitmap.ContactResolver r0;
        java.lang.Object[] $r1;
        java.util.LinkedHashSet $r2;
        java.lang.String $r3;
        int $i0;
        java.lang.Integer $r4;
        android.os.Handler $r5, $r6;

        r0 := @this: com.android.mail.bitmap.ContactResolver;

        $r3 = <com.android.mail.bitmap.ContactResolver: java.lang.String TAG>;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.android.mail.bitmap.ContactResolver: java.util.LinkedHashSet mBatch>;

        $i0 = virtualinvoke $r2.<java.util.LinkedHashSet: int size()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r4;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "ContactResolver  > batch   %d", $r1);

        $r5 = r0.<com.android.mail.bitmap.ContactResolver: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        $r6 = r0.<com.android.mail.bitmap.ContactResolver: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String $r0;

        $r0 = <com.android.mail.bitmap.ContactResolver: java.lang.String TAG>;

        return $r0;
    }

    static void access$200(com.android.mail.bitmap.ContactResolver)
    {
        com.android.mail.bitmap.ContactResolver r0;

        r0 := @parameter0: com.android.mail.bitmap.ContactResolver;

        specialinvoke r0.<com.android.mail.bitmap.ContactResolver: void notifyBatchReady()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.concurrent.ThreadPoolExecutor $r1;
        java.util.concurrent.LinkedBlockingQueue $r2;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.Executor $r4;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.bitmap.ContactResolver: java.lang.String TAG> = $r0;

        $r1 = new java.util.concurrent.ThreadPoolExecutor;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        specialinvoke $r1.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(1, 1, 1L, $r3, $r2);

        <com.android.mail.bitmap.ContactResolver: java.util.concurrent.Executor SMALL_POOL_EXECUTOR> = $r1;

        $r4 = <com.android.mail.bitmap.ContactResolver: java.util.concurrent.Executor SMALL_POOL_EXECUTOR>;

        <com.android.mail.bitmap.ContactResolver: java.util.concurrent.Executor EXECUTOR> = $r4;

        return;
    }
}
