public final class com.android.email.provider.ContentCache extends java.lang.Object
{
    private static final boolean DEBUG_CACHE;
    private static final boolean DEBUG_TOKENS;
    private static final boolean DEBUG_NOT_CACHEABLE;
    private static final boolean DEBUG_STATISTICS;
    private static final boolean READ_CACHE_ENABLED;
    private static int sNotCacheable;
    private static final com.android.email.provider.ContentCache$CounterMap sNotCacheableMap;
    private final android.util.LruCache mLruCache;
    private static final java.util.ArrayList sContentCaches;
    static final com.android.email.provider.ContentCache$CounterMap sActiveCursors;
    private final com.android.email.provider.ContentCache$CounterMap mLockMap;
    com.android.email.provider.ContentCache$TokenList mTokenList;
    private final java.lang.String mName;
    private final java.lang.String[] mBaseProjection;
    private final java.lang.String mLogTag;
    private final com.android.email.provider.ContentCache$Statistics mStats;
    private static boolean sLockCache;

    public void <init>(java.lang.String, java.lang.String[], int)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1, $r8, $r11;
        java.lang.String[] r2;
        int i0;
        com.android.email.provider.ContentCache$CounterMap $r3;
        com.android.email.provider.ContentCache$1 $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.util.ArrayList $r9;
        com.android.email.provider.ContentCache$TokenList $r10;
        com.android.email.provider.ContentCache$Statistics $r12;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new com.android.email.provider.ContentCache$CounterMap;

        specialinvoke $r3.<com.android.email.provider.ContentCache$CounterMap: void <init>(int)>(4);

        r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap mLockMap> = $r3;

        r0.<com.android.email.provider.ContentCache: java.lang.String mName> = r1;

        $r4 = new com.android.email.provider.ContentCache$1;

        specialinvoke $r4.<com.android.email.provider.ContentCache$1: void <init>(com.android.email.provider.ContentCache,int)>(r0, i0);

        r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache> = $r4;

        r0.<com.android.email.provider.ContentCache: java.lang.String[] mBaseProjection> = r2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentCache-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.email.provider.ContentCache: java.lang.String mLogTag> = $r8;

        $r9 = <com.android.email.provider.ContentCache: java.util.ArrayList sContentCaches>;

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r10 = new com.android.email.provider.ContentCache$TokenList;

        $r11 = r0.<com.android.email.provider.ContentCache: java.lang.String mName>;

        specialinvoke $r10.<com.android.email.provider.ContentCache$TokenList: void <init>(java.lang.String)>($r11);

        r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList> = $r10;

        $r12 = new com.android.email.provider.ContentCache$Statistics;

        specialinvoke $r12.<com.android.email.provider.ContentCache$Statistics: void <init>(com.android.email.provider.ContentCache)>(r0);

        r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats> = $r12;

        return;
    }

    public java.lang.String[] getProjection()
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: java.lang.String[] mBaseProjection>;

        return $r1;
    }

    public synchronized com.android.email.provider.ContentCache$CacheToken getCacheToken(java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        com.android.email.provider.ContentCache$CacheToken r2;
        com.android.email.provider.ContentCache$TokenList $r3;
        com.android.email.provider.ContentCache$CounterMap $r4;
        boolean $z0;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        r2 = virtualinvoke $r3.<com.android.email.provider.ContentCache$TokenList: com.android.email.provider.ContentCache$CacheToken add(java.lang.String)>(r1);

        $r4 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap mLockMap>;

        $z0 = virtualinvoke $r4.<com.android.email.provider.ContentCache$CounterMap: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<com.android.email.provider.ContentCache$CacheToken: void invalidate()>();

     label1:
        return r2;
    }

    public int size()
    {
        com.android.email.provider.ContentCache r0;
        android.util.LruCache $r1;
        int $i0;

        r0 := @this: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        $i0 = virtualinvoke $r1.<android.util.LruCache: int size()>();

        return $i0;
    }

    android.database.Cursor get(java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        android.util.LruCache $r2;
        java.lang.Object $r3;
        android.database.Cursor $r4;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        $r3 = virtualinvoke $r2.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.database.Cursor) $r3;

        return $r4;
    }

    protected java.util.Map getSnapshot()
    {
        com.android.email.provider.ContentCache r0;
        android.util.LruCache $r1;
        java.util.Map $r2;

        r0 := @this: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        $r2 = virtualinvoke $r1.<android.util.LruCache: java.util.Map snapshot()>();

        return $r2;
    }

    public android.database.Cursor putCursor(android.database.Cursor, java.lang.String, java.lang.String[], com.android.email.provider.ContentCache$CacheToken)
    {
        com.android.email.provider.ContentCache r0;
        android.database.Cursor r1, $r5;
        java.lang.String r2;
        java.lang.String[] r3;
        com.android.email.provider.ContentCache$CacheToken r4;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: com.android.email.provider.ContentCache$CacheToken;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(0);

        $r5 = virtualinvoke r0.<com.android.email.provider.ContentCache: android.database.Cursor putCursorImpl(android.database.Cursor,java.lang.String,java.lang.String[],com.android.email.provider.ContentCache$CacheToken)>(r1, r2, r3, r4);

        return $r5;
    }

    public synchronized android.database.Cursor putCursorImpl(android.database.Cursor, java.lang.String, java.lang.String[], com.android.email.provider.ContentCache$CacheToken)
    {
        com.android.email.provider.ContentCache r0;
        android.database.Cursor r1, r5, r18, r19;
        java.lang.String r2;
        java.lang.String[] r3, $r9;
        com.android.email.provider.ContentCache$CacheToken r4;
        com.android.email.provider.ContentCache$CachedCursor r6, $r13;
        java.lang.Throwable r7, $r17;
        boolean $z0, $z2, $z3, $z4, $z5;
        com.android.email.provider.ContentCache$TokenList $r8, $r12, $r15, $r16;
        android.util.LruCache $r11;
        com.android.email.provider.ContentCache$Statistics $r14;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: com.android.email.provider.ContentCache$CacheToken;

     label01:
        $z0 = virtualinvoke r4.<com.android.email.provider.ContentCache$CacheToken: boolean isValid()>();

        if $z0 != 0 goto label04;

        $z5 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z5 == 0 goto label02;

     label02:
        $r14 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$208(com.android.email.provider.ContentCache$Statistics)>($r14);

        r5 = r1;

     label03:
        $r15 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r15.<com.android.email.provider.ContentCache$TokenList: boolean remove(com.android.email.provider.ContentCache$CacheToken)>(r4);

        return r5;

     label04:
        if r1 == null goto label08;

        $r9 = r0.<com.android.email.provider.ContentCache: java.lang.String[] mBaseProjection>;

        $z2 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(r3, $r9);

        if $z2 == 0 goto label08;

        $z3 = <com.android.email.provider.ContentCache: boolean sLockCache>;

        if $z3 != 0 goto label08;

        $z4 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z4 == 0 goto label05;

     label05:
        r18 = virtualinvoke r0.<com.android.email.provider.ContentCache: android.database.Cursor get(java.lang.String)>(r2);

        if r18 == null goto label06;

        specialinvoke r0.<com.android.email.provider.ContentCache: void unlockImpl(java.lang.String,android.content.ContentValues,boolean)>(r2, null, 0);

     label06:
        $r11 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        virtualinvoke $r11.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        $r13 = new com.android.email.provider.ContentCache$CachedCursor;

        specialinvoke $r13.<com.android.email.provider.ContentCache$CachedCursor: void <init>(android.database.Cursor,com.android.email.provider.ContentCache,java.lang.String)>(r1, r0, r2);

        r6 = $r13;

     label07:
        $r12 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r12.<com.android.email.provider.ContentCache$TokenList: boolean remove(com.android.email.provider.ContentCache$CacheToken)>(r4);

        return r6;

     label08:
        r19 = r1;

     label09:
        $r8 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r8.<com.android.email.provider.ContentCache$TokenList: boolean remove(com.android.email.provider.ContentCache$CacheToken)>(r4);

        return r19;

     label10:
        $r17 := @caughtexception;

        r7 = $r17;

     label11:
        $r16 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r16.<com.android.email.provider.ContentCache$TokenList: boolean remove(com.android.email.provider.ContentCache$CacheToken)>(r4);

        throw r7;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public synchronized android.database.Cursor getCachedCursor(java.lang.String, java.lang.String[])
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        java.lang.String[] r2, $r3;
        boolean $z0;
        android.database.MatrixCursor $r4;
        com.android.email.provider.ContentCache$CachedCursor $r5;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $z0 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z0 == 0 goto label1;

     label1:
        $r3 = r0.<com.android.email.provider.ContentCache: java.lang.String[] mBaseProjection>;

        if r2 != $r3 goto label2;

        $r5 = specialinvoke r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CachedCursor getCachedCursorImpl(java.lang.String)>(r1);

        return $r5;

     label2:
        $r4 = specialinvoke r0.<com.android.email.provider.ContentCache: android.database.MatrixCursor getMatrixCursor(java.lang.String,java.lang.String[])>(r1, r2);

        return $r4;
    }

    private com.android.email.provider.ContentCache$CachedCursor getCachedCursorImpl(java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        android.database.Cursor r2;
        com.android.email.provider.ContentCache$Statistics $r3, $r4;
        com.android.email.provider.ContentCache$CachedCursor $r5;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.email.provider.ContentCache: android.database.Cursor get(java.lang.String)>(r1);

        if r2 == null goto label1;

        $r4 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$308(com.android.email.provider.ContentCache$Statistics)>($r4);

        $r5 = new com.android.email.provider.ContentCache$CachedCursor;

        specialinvoke $r5.<com.android.email.provider.ContentCache$CachedCursor: void <init>(android.database.Cursor,com.android.email.provider.ContentCache,java.lang.String)>(r2, r0, r1);

        return $r5;

     label1:
        $r3 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$408(com.android.email.provider.ContentCache$Statistics)>($r3);

        return null;
    }

    private android.database.MatrixCursor getMatrixCursor(java.lang.String, java.lang.String[])
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.database.MatrixCursor $r3;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r3 = specialinvoke r0.<com.android.email.provider.ContentCache: android.database.MatrixCursor getMatrixCursor(java.lang.String,java.lang.String[],android.content.ContentValues)>(r1, r2, null);

        return $r3;
    }

    private android.database.MatrixCursor getMatrixCursor(java.lang.String, java.lang.String[], android.content.ContentValues)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1, r8, r9, $r16;
        java.lang.String[] r2, r7;
        android.content.ContentValues r3, $r15;
        android.database.Cursor r4;
        com.android.mail.utils.MatrixCursorWithCachedColumns r5, $r12;
        java.lang.Object[] r6;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i9;
        java.lang.Object r10;
        com.android.email.provider.ContentCache$Statistics $r11, $r13, $r17;
        boolean $z0, $z1;
        java.lang.Boolean $r14;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: android.content.ContentValues;

        r4 = virtualinvoke r0.<com.android.email.provider.ContentCache: android.database.Cursor get(java.lang.String)>(r1);

        if r4 == null goto label13;

        $r12 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r12.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r2, 1);

        r5 = $r12;

        $i5 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        if $i5 != 0 goto label01;

        return r5;

     label01:
        $i6 = lengthof r2;

        r6 = newarray (java.lang.Object)[$i6];

        if r3 == null goto label02;

        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>(android.content.ContentValues)>(r3);

        r3 = $r15;

     label02:
        i0 = 0;

        r7 = r2;

        i1 = lengthof r7;

        i2 = 0;

     label03:
        if i2 >= i1 goto label11;

        r8 = r7[i2];

        i3 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>(r8);

        if i3 >= 0 goto label04;

        $r17 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$508(com.android.email.provider.ContentCache$Statistics)>($r17);

        return null;

     label04:
        if r3 == null goto label09;

        $z0 = virtualinvoke r3.<android.content.ContentValues: boolean containsKey(java.lang.String)>(r8);

        if $z0 == 0 goto label09;

        r10 = virtualinvoke r3.<android.content.ContentValues: java.lang.Object get(java.lang.String)>(r8);

        $z1 = r10 instanceof java.lang.Boolean;

        if $z1 == 0 goto label07;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        if r10 != $r14 goto label05;

        $r16 = "1";

        goto label06;

     label05:
        $r16 = "0";

     label06:
        r9 = $r16;

        goto label08;

     label07:
        r9 = virtualinvoke r3.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>(r8);

     label08:
        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>(r8);

        goto label10;

     label09:
        r9 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i3);

     label10:
        $i9 = i0;

        i0 = i0 + 1;

        r6[$i9] = r9;

        i2 = i2 + 1;

        goto label03;

     label11:
        if r3 == null goto label12;

        $i7 = virtualinvoke r3.<android.content.ContentValues: int size()>();

        if $i7 == 0 goto label12;

        return null;

     label12:
        virtualinvoke r5.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r6);

        $r13 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$308(com.android.email.provider.ContentCache$Statistics)>($r13);

        return r5;

     label13:
        $r11 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$408(com.android.email.provider.ContentCache$Statistics)>($r11);

        return null;
    }

    public synchronized void lock(java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        com.android.email.provider.ContentCache$CounterMap $r2;
        com.android.email.provider.ContentCache$TokenList $r3;
        boolean $z0;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap mLockMap>;

        virtualinvoke $r2.<com.android.email.provider.ContentCache$CounterMap: void add(java.lang.Object)>(r1);

        $r3 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r3.<com.android.email.provider.ContentCache$TokenList: int invalidateTokens(java.lang.String)>(r1);

        $z0 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z0 == 0 goto label1;

     label1:
        return;
    }

    public synchronized void unlock(java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.email.provider.ContentCache: void unlockImpl(java.lang.String,android.content.ContentValues,boolean)>(r1, null, 1);

        return;
    }

    public synchronized void unlock(java.lang.String, android.content.ContentValues)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        android.content.ContentValues r2;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.ContentValues;

        specialinvoke r0.<com.android.email.provider.ContentCache: void unlockImpl(java.lang.String,android.content.ContentValues,boolean)>(r1, r2, 1);

        return;
    }

    private void unlockImpl(java.lang.String, android.content.ContentValues, boolean)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1;
        android.content.ContentValues r2;
        boolean z0, $z1, $z2, $z3, $z4;
        android.database.Cursor r3;
        android.database.MatrixCursor r4;
        com.android.email.provider.ContentCache$CounterMap $r5, $r8;
        android.util.LruCache $r6, $r10, $r12;
        java.lang.String[] $r9;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.content.ContentValues;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r0.<com.android.email.provider.ContentCache: android.database.Cursor get(java.lang.String)>(r1);

        if r3 == null goto label7;

        $z1 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z1 == 0 goto label1;

     label1:
        if r2 == null goto label5;

        $z3 = <com.android.email.provider.ContentCache: boolean sLockCache>;

        if $z3 != 0 goto label5;

        $r9 = r0.<com.android.email.provider.ContentCache: java.lang.String[] mBaseProjection>;

        r4 = specialinvoke r0.<com.android.email.provider.ContentCache: android.database.MatrixCursor getMatrixCursor(java.lang.String,java.lang.String[],android.content.ContentValues)>(r1, $r9, r2);

        if r4 == null goto label3;

        $z4 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z4 == 0 goto label2;

     label2:
        virtualinvoke r4.<android.database.MatrixCursor: boolean moveToFirst()>();

        $r12 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        virtualinvoke $r12.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        goto label4;

     label3:
        $r10 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        virtualinvoke $r10.<android.util.LruCache: java.lang.Object remove(java.lang.Object)>(r1);

     label4:
        goto label6;

     label5:
        $r6 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        virtualinvoke $r6.<android.util.LruCache: java.lang.Object remove(java.lang.Object)>(r1);

     label6:
        $r8 = <com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap sActiveCursors>;

        $z2 = virtualinvoke $r8.<com.android.email.provider.ContentCache$CounterMap: boolean contains(java.lang.Object)>(r3);

        if $z2 != 0 goto label7;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label7:
        if z0 == 0 goto label8;

        $r5 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap mLockMap>;

        virtualinvoke $r5.<com.android.email.provider.ContentCache$CounterMap: int subtract(java.lang.Object)>(r1);

     label8:
        return;
    }

    public synchronized void invalidate()
    {
        com.android.email.provider.ContentCache r0;

        r0 := @this: com.android.email.provider.ContentCache;

        virtualinvoke r0.<com.android.email.provider.ContentCache: void invalidate(java.lang.String,android.net.Uri,java.lang.String)>(null, null, null);

        return;
    }

    public synchronized void invalidate(java.lang.String, android.net.Uri, java.lang.String)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String r1, r3;
        android.net.Uri r2;
        com.android.email.provider.ContentCache$Statistics $r4;
        android.util.LruCache $r5;
        com.android.email.provider.ContentCache$TokenList $r6;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$708(com.android.email.provider.ContentCache$Statistics)>($r4);

        $r5 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        virtualinvoke $r5.<android.util.LruCache: void evictAll()>();

        $r6 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$TokenList mTokenList>;

        virtualinvoke $r6.<com.android.email.provider.ContentCache$TokenList: void invalidate()>();

        return;
    }

    private void dumpOnCount(int)
    {
        com.android.email.provider.ContentCache r0;
        int i0, $i2, $i3;
        com.android.email.provider.ContentCache$Statistics $r1, $r2;

        r0 := @this: com.android.email.provider.ContentCache;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$808(com.android.email.provider.ContentCache$Statistics)>($r1);

        $r2 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        $i2 = staticinvoke <com.android.email.provider.ContentCache$Statistics: int access$800(com.android.email.provider.ContentCache$Statistics)>($r2);

        $i3 = $i2 % i0;

        if $i3 != 0 goto label1;

        staticinvoke <com.android.email.provider.ContentCache: void dumpStats()>();

     label1:
        return;
    }

    void recordQueryTime(android.database.Cursor, long)
    {
        com.android.email.provider.ContentCache r0;
        android.database.Cursor r1;
        long l0;
        boolean $z0;
        int $i1;
        com.android.email.provider.ContentCache$Statistics $r2, $r3, $r4, $r5;

        r0 := @this: com.android.email.provider.ContentCache;

        r1 := @parameter0: android.database.Cursor;

        l0 := @parameter1: long;

        $z0 = r1 instanceof com.android.email.provider.ContentCache$CachedCursor;

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: long access$914(com.android.email.provider.ContentCache$Statistics,long)>($r4, l0);

        $r5 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: long access$1008(com.android.email.provider.ContentCache$Statistics)>($r5);

        goto label2;

     label1:
        $i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i1 != 1 goto label2;

        $r2 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: long access$1114(com.android.email.provider.ContentCache$Statistics,long)>($r2, l0);

        $r3 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        staticinvoke <com.android.email.provider.ContentCache$Statistics: long access$1208(com.android.email.provider.ContentCache$Statistics)>($r3);

     label2:
        return;
    }

    public static synchronized void notCacheable(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        return;
    }

    public static void invalidateAllCaches()
    {
        java.util.Iterator r0;
        com.android.email.provider.ContentCache r1;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;

        $r2 = <com.android.email.provider.ContentCache: java.util.ArrayList sContentCaches>;

        r0 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        r1 = (com.android.email.provider.ContentCache) $r3;

        virtualinvoke r1.<com.android.email.provider.ContentCache: void invalidate()>();

        goto label1;

     label2:
        return;
    }

    public static void setLockCacheForTest(boolean)
    {
        boolean z0, $z1;

        z0 := @parameter0: boolean;

        <com.android.email.provider.ContentCache: boolean sLockCache> = z0;

        $z1 = <com.android.email.provider.ContentCache: boolean sLockCache>;

        if $z1 == 0 goto label1;

        staticinvoke <com.android.email.provider.ContentCache: void invalidateAllCaches()>();

     label1:
        return;
    }

    public static void dumpStats()
    {
        com.android.email.provider.ContentCache$Statistics r0, $r3, $r9;
        java.util.Iterator r1;
        com.android.email.provider.ContentCache r2;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.String $r5, $r6, $r10, $r11;
        java.lang.Object[] $r7, $r12;
        java.lang.Object $r8;

        $r3 = new com.android.email.provider.ContentCache$Statistics;

        specialinvoke $r3.<com.android.email.provider.ContentCache$Statistics: void <init>(java.lang.String)>("Totals");

        r0 = $r3;

        $r4 = <com.android.email.provider.ContentCache: java.util.ArrayList sContentCaches>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.email.provider.ContentCache) $r8;

        if r2 == null goto label2;

        $r10 = r2.<com.android.email.provider.ContentCache: java.lang.String mName>;

        $r9 = r2.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        $r11 = virtualinvoke $r9.<com.android.email.provider.ContentCache$Statistics: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r10, $r11, $r12);

        staticinvoke <com.android.email.provider.ContentCache$Statistics: void access$1500(com.android.email.provider.ContentCache$Statistics,com.android.email.provider.ContentCache)>(r0, r2);

     label2:
        goto label1;

     label3:
        $r5 = staticinvoke <com.android.email.provider.ContentCache$Statistics: java.lang.String access$1600(com.android.email.provider.ContentCache$Statistics)>(r0);

        $r6 = virtualinvoke r0.<com.android.email.provider.ContentCache$Statistics: java.lang.String toString()>();

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r5, $r6, $r7);

        return;
    }

    static android.util.LruCache access$100(com.android.email.provider.ContentCache)
    {
        com.android.email.provider.ContentCache r0;
        android.util.LruCache $r1;

        r0 := @parameter0: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: android.util.LruCache mLruCache>;

        return $r1;
    }

    static java.lang.String access$1300(com.android.email.provider.ContentCache)
    {
        com.android.email.provider.ContentCache r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: java.lang.String mName>;

        return $r1;
    }

    static com.android.email.provider.ContentCache$Statistics access$1400(com.android.email.provider.ContentCache)
    {
        com.android.email.provider.ContentCache r0;
        com.android.email.provider.ContentCache$Statistics $r1;

        r0 := @parameter0: com.android.email.provider.ContentCache;

        $r1 = r0.<com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$Statistics mStats>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.email.provider.ContentCache$CounterMap $r0, $r2;
        java.util.ArrayList $r1;

        <com.android.email.provider.ContentCache: boolean READ_CACHE_ENABLED> = 1;

        <com.android.email.provider.ContentCache: boolean DEBUG_STATISTICS> = 0;

        <com.android.email.provider.ContentCache: boolean DEBUG_NOT_CACHEABLE> = 0;

        <com.android.email.provider.ContentCache: boolean DEBUG_TOKENS> = 0;

        <com.android.email.provider.ContentCache: boolean DEBUG_CACHE> = 0;

        <com.android.email.provider.ContentCache: int sNotCacheable> = 0;

        $r0 = new com.android.email.provider.ContentCache$CounterMap;

        specialinvoke $r0.<com.android.email.provider.ContentCache$CounterMap: void <init>()>();

        <com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap sNotCacheableMap> = $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        <com.android.email.provider.ContentCache: java.util.ArrayList sContentCaches> = $r1;

        $r2 = new com.android.email.provider.ContentCache$CounterMap;

        specialinvoke $r2.<com.android.email.provider.ContentCache$CounterMap: void <init>(int)>(24);

        <com.android.email.provider.ContentCache: com.android.email.provider.ContentCache$CounterMap sActiveCursors> = $r2;

        return;
    }
}
