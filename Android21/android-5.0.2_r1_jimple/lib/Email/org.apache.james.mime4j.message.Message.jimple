public class org.apache.james.mime4j.message.Message extends org.apache.james.mime4j.message.Entity implements org.apache.james.mime4j.message.Body
{

    public void <init>()
    {
        org.apache.james.mime4j.message.Message r0;

        r0 := @this: org.apache.james.mime4j.message.Message;

        specialinvoke r0.<org.apache.james.mime4j.message.Entity: void <init>()>();

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message r0;
        java.io.InputStream r1;
        org.apache.james.mime4j.MimeStreamParser r2, $r3;
        org.apache.james.mime4j.message.Message$MessageBuilder $r4;

        r0 := @this: org.apache.james.mime4j.message.Message;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.Entity: void <init>()>();

        $r3 = new org.apache.james.mime4j.MimeStreamParser;

        specialinvoke $r3.<org.apache.james.mime4j.MimeStreamParser: void <init>()>();

        r2 = $r3;

        $r4 = new org.apache.james.mime4j.message.Message$MessageBuilder;

        specialinvoke $r4.<org.apache.james.mime4j.message.Message$MessageBuilder: void <init>(org.apache.james.mime4j.message.Message)>(r0);

        virtualinvoke r2.<org.apache.james.mime4j.MimeStreamParser: void setContentHandler(org.apache.james.mime4j.ContentHandler)>($r4);

        virtualinvoke r2.<org.apache.james.mime4j.MimeStreamParser: void parse(java.io.InputStream)>(r1);

        return;
    }

    public org.apache.james.mime4j.field.UnstructuredField getSubject()
    {
        org.apache.james.mime4j.message.Message r0;
        org.apache.james.mime4j.message.Header $r1;
        org.apache.james.mime4j.field.Field $r2;
        org.apache.james.mime4j.field.UnstructuredField $r3;

        r0 := @this: org.apache.james.mime4j.message.Message;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.message.Message: org.apache.james.mime4j.message.Header getHeader()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.message.Header: org.apache.james.mime4j.field.Field getField(java.lang.String)>("Subject");

        $r3 = (org.apache.james.mime4j.field.UnstructuredField) $r2;

        return $r3;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message r0;
        java.io.OutputStream r1;
        org.apache.james.mime4j.message.Body r2;
        org.apache.james.mime4j.message.Multipart r3;
        org.apache.james.mime4j.message.Header $r4;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.message.Message;

        r1 := @parameter0: java.io.OutputStream;

        $r4 = virtualinvoke r0.<org.apache.james.mime4j.message.Message: org.apache.james.mime4j.message.Header getHeader()>();

        virtualinvoke $r4.<org.apache.james.mime4j.message.Header: void writeTo(java.io.OutputStream)>(r1);

        r2 = virtualinvoke r0.<org.apache.james.mime4j.message.Message: org.apache.james.mime4j.message.Body getBody()>();

        $z0 = r2 instanceof org.apache.james.mime4j.message.Multipart;

        if $z0 == 0 goto label1;

        r3 = (org.apache.james.mime4j.message.Multipart) r2;

        virtualinvoke r3.<org.apache.james.mime4j.message.Multipart: void writeTo(java.io.OutputStream)>(r1);

        goto label2;

     label1:
        interfaceinvoke r2.<org.apache.james.mime4j.message.Body: void writeTo(java.io.OutputStream)>(r1);

     label2:
        return;
    }
}
