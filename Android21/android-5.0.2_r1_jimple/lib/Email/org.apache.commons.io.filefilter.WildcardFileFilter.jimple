public class org.apache.commons.io.filefilter.WildcardFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    private final java.lang.String[] wildcards;
    private final org.apache.commons.io.IOCase caseSensitivity;

    public void <init>(java.lang.String)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null);

        return;
    }

    public void <init>(java.lang.String, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.lang.String r1;
        org.apache.commons.io.IOCase r2, $r4;
        java.lang.String[] $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The wildcard must not be null");

        throw $r5;

     label1:
        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards> = $r3;

        if r2 != null goto label2;

        $r4 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r4 = r2;

     label3:
        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r4;

        return;
    }

    public void <init>(java.lang.String[])
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.lang.String[] r1;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, null);

        return;
    }

    public void <init>(java.lang.String[], org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.lang.String[] r1;
        org.apache.commons.io.IOCase r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The wildcard array must not be null");

        throw $r4;

     label1:
        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards> = r1;

        if r2 != null goto label2;

        $r3 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r3 = r2;

     label3:
        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r3;

        return;
    }

    public void <init>(java.util.List)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.util.List r1;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, null);

        return;
    }

    public void <init>(java.util.List, org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.util.List r1;
        org.apache.commons.io.IOCase r2, $r6;
        int $i0;
        java.lang.String[] $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.commons.io.IOCase;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The wildcard list must not be null");

        throw $r7;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards> = $r5;

        if r2 != null goto label2;

        $r6 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label3;

     label2:
        $r6 = r2;

     label3:
        r0.<org.apache.commons.io.filefilter.WildcardFileFilter: org.apache.commons.io.IOCase caseSensitivity> = $r6;

        return;
    }

    public boolean accept(java.io.File, java.lang.String)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.io.File r1;
        java.lang.String r2, $r6;
        int i0, $i1;
        java.lang.String[] $r3, $r4;
        org.apache.commons.io.IOCase $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $r6 = $r4[i0];

        $r5 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r2, $r6, $r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.io.File r1;
        java.lang.String r2, $r6;
        int i0, $i1;
        java.lang.String[] $r3, $r4;
        org.apache.commons.io.IOCase $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $i1 = lengthof $r3;

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $r6 = $r4[i0];

        $r5 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: org.apache.commons.io.IOCase caseSensitivity>;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean wildcardMatch(java.lang.String,java.lang.String,org.apache.commons.io.IOCase)>(r2, $r6, $r5);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.filefilter.WildcardFileFilter r0;
        java.lang.StringBuffer r1, $r2;
        int i0, $i1;
        java.lang.String $r3, $r8, $r11;
        java.lang.String[] $r6, $r9, $r10;

        r0 := @this: org.apache.commons.io.filefilter.WildcardFileFilter;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r3 = specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r6 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        if $r6 == null goto label3;

        i0 = 0;

     label1:
        $r9 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $i1 = lengthof $r9;

        if i0 >= $i1 goto label3;

        if i0 <= 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        $r10 = r0.<org.apache.commons.io.filefilter.WildcardFileFilter: java.lang.String[] wildcards>;

        $r11 = $r10[i0];

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        i0 = i0 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
