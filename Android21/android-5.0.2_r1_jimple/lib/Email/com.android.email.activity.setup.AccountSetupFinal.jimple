public class com.android.email.activity.setup.AccountSetupFinal extends com.android.email.activity.setup.AccountSetupActivity implements com.android.email.activity.setup.AccountFinalizeFragment$Callback, com.android.email.activity.setup.AccountSetupNoteDialogFragment$Callback, com.android.email.activity.setup.AccountCreationFragment$Callback, com.android.email.activity.setup.AccountCheckSettingsFragment$Callback, com.android.email.activity.setup.SecurityRequiredDialogFragment$Callback, com.android.email.activity.setup.CheckSettingsErrorDialogFragment$Callback, com.android.email.activity.setup.CheckSettingsProgressDialogFragment$Callback, com.android.email.activity.setup.AccountSetupTypeFragment$Callback, com.android.email.activity.setup.AccountSetupNamesFragment$Callback, com.android.email.activity.setup.AccountSetupOptionsFragment$Callback, com.android.email.activity.setup.AccountSetupBasicsFragment$Callback, com.android.email.activity.setup.AccountServerBaseFragment$Callback, com.android.email.activity.setup.AccountSetupCredentialsFragment$Callback, com.android.email.activity.setup.DuplicateAccountDialogFragment$Callback, com.android.email.activity.setup.AccountSetupABFragment$Callback
{
    private static java.lang.String INTENT_FORCE_CREATE_ACCOUNT;
    private static final java.lang.String EXTRA_FLOW_MODE;
    private static final java.lang.String EXTRA_FLOW_ACCOUNT_TYPE;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_EMAIL;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_USER;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_PASSWORD;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_INCOMING;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_OUTGOING;
    private static final java.lang.String EXTRA_CREATE_ACCOUNT_SYNC_LOOKBACK;
    private static final java.lang.String CREATE_ACCOUNT_SYNC_ALL_VALUE;
    private static final java.lang.Boolean DEBUG_ALLOW_NON_TEST_HARNESS_CREATION;
    protected static final java.lang.String ACTION_JUMP_TO_INCOMING;
    protected static final java.lang.String ACTION_JUMP_TO_OUTGOING;
    protected static final java.lang.String ACTION_JUMP_TO_OPTIONS;
    private static final java.lang.String SAVESTATE_KEY_IS_PROCESSING;
    private static final java.lang.String SAVESTATE_KEY_STATE;
    private static final java.lang.String SAVESTATE_KEY_PROVIDER;
    private static final java.lang.String SAVESTATE_KEY_AUTHENTICATOR_RESPONSE;
    private static final java.lang.String SAVESTATE_KEY_REPORT_AUTHENTICATOR_ERROR;
    private static final java.lang.String SAVESTATE_KEY_IS_PRE_CONFIGURED;
    private static final java.lang.String SAVESTATE_KEY_SKIP_AUTO_DISCOVER;
    private static final java.lang.String SAVESTATE_KEY_PASSWORD_FAILED;
    private static final java.lang.String CONTENT_FRAGMENT_TAG;
    private static final java.lang.String CREDENTIALS_BACKSTACK_TAG;
    private static final int STATE_BASICS;
    private static final int STATE_BASICS_POST;
    private static final int STATE_TYPE;
    private static final int STATE_AB;
    private static final int STATE_CREDENTIALS;
    private static final int STATE_CHECKING_PRECONFIGURED;
    private static final int STATE_AUTO_DISCOVER;
    private static final int STATE_MANUAL_INCOMING;
    private static final int STATE_CHECKING_INCOMING;
    private static final int STATE_MANUAL_OUTGOING;
    private static final int STATE_CHECKING_OUTGOING;
    private static final int STATE_OPTIONS;
    private static final int STATE_CREATING;
    private static final int STATE_NAMES;
    private static final int STATE_FINALIZE;
    private int mState;
    private boolean mIsProcessing;
    private boolean mForceCreate;
    private boolean mReportAccountAuthenticatorError;
    private android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse;
    private boolean mIsPreConfiguredProvider;
    private boolean mSkipAutoDiscover;
    private boolean mPreConfiguredFailed;
    private com.android.emailcommon.VendorPolicyLoader$Provider mProvider;
    private boolean mPasswordFailed;
    private static final int OWNER_NAME_LOADER_ID;
    private java.lang.String mOwnerName;
    private static final int EXISTING_ACCOUNTS_LOADER_ID;
    private java.util.Map mExistingAccountsMap;

    public void <init>()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void <init>()>();

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mForceCreate> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed> = 0;

        return;
    }

    public static android.content.Intent actionNewAccountIntent(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/activity/setup/AccountSetupFinal");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("FLOW_MODE", 0);

        return r1;
    }

    public static android.content.Intent actionNewAccountWithResultIntent(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/activity/setup/AccountSetupFinal");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("FLOW_MODE", 8);

        return r1;
    }

    public static android.content.Intent actionGetCreateAccountIntent(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.Intent r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/activity/setup/AccountSetupFinal");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("FLOW_MODE", 1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("FLOW_ACCOUNT_TYPE", r1);

        return r2;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.os.Bundle r1;
        android.content.Intent r2, $r16;
        java.lang.String r3, r4, r5, r6, r7, r8, r10, $r14, $r19, $r20, $r32, $r39, $r40, $r42, $r45, $r52, r54, r55;
        int i0, $i2, $i7;
        byte b1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        java.lang.String[] r9;
        com.android.emailcommon.provider.HostAuth r11, r13, r57, r58;
        com.android.emailcommon.provider.Account r12, r56;
        android.os.Parcelable $r15, $r47;
        android.accounts.AccountAuthenticatorResponse $r17, $r18, $r48;
        com.android.email.activity.setup.SetupDataFragment $r21, $r22, $r29, $r31, $r38, $r43, $r44;
        com.android.email.activity.setup.AccountSetupFinal$1 $r23;
        android.app.LoaderManager $r24, $r25;
        com.android.email.activity.setup.AccountSetupFinal$2 $r26;
        java.lang.Object[] $r30, $r34, $r41, $r46;
        java.lang.Boolean $r33;
        android.app.FragmentManager $r35;
        com.android.emailcommon.VendorPolicyLoader$Provider $r36, $r37, $r50;
        java.io.Serializable $r49;
        android.widget.Toast $r51;
        java.net.URISyntaxException $r53;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.content.Intent getIntent()>();

        r3 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $r14 = <com.android.email.activity.setup.AccountSetupFinal: java.lang.String INTENT_FORCE_CREATE_ACCOUNT>;

        if $r14 != null goto label01;

        $r52 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.String getString(int)>(2131296964);

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String INTENT_FORCE_CREATE_ACCOUNT> = $r52;

     label01:
        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setContentView(int)>(2130968609);

        if r1 == null goto label02;

        $z21 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("AccountSetupFinal.is_processing", 0);

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing> = $z21;

        $i7 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String,int)>("AccountSetupFinal.state", 11);

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = $i7;

        $r49 = virtualinvoke r1.<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>("AccountSetupFinal.provider");

        $r50 = (com.android.emailcommon.VendorPolicyLoader$Provider) $r49;

        r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider> = $r50;

        $r47 = virtualinvoke r1.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("AccountSetupFinal.authResp");

        $r48 = (android.accounts.AccountAuthenticatorResponse) $r47;

        r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse> = $r48;

        $z19 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("AccountSetupFinal.authErr");

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mReportAccountAuthenticatorError> = $z19;

        $z20 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("AccountSetupFinal.preconfig");

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = $z20;

        $z22 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("AccountSetupFinal.noAuto");

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = $z22;

        $z23 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("AccountSetupFinal.passwordFailed");

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed> = $z23;

        goto label09;

     label02:
        $r16 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.content.Intent getIntent()>();

        $r15 = virtualinvoke $r16.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("accountAuthenticatorResponse");

        $r18 = (android.accounts.AccountAuthenticatorResponse) $r15;

        r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse> = $r18;

        $r17 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        if $r17 == null goto label03;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mReportAccountAuthenticatorError> = 1;

     label03:
        $r19 = <com.android.email.activity.setup.AccountSetupFinal: java.lang.String INTENT_FORCE_CREATE_ACCOUNT>;

        $z3 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z3 == 0 goto label04;

        $r44 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r44.<com.android.email.activity.setup.SetupDataFragment: void setFlowMode(int)>(4);

        goto label05;

     label04:
        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("FLOW_MODE", -1);

        r4 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("FLOW_ACCOUNT_TYPE");

        $r21 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r20 = staticinvoke <com.android.email.service.EmailServiceUtils: java.lang.String getProtocolFromAccountType(android.content.Context,java.lang.String)>(r0, r4);

        virtualinvoke $r21.<com.android.email.activity.setup.SetupDataFragment: void setAmProtocol(java.lang.String)>($r20);

        $r22 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r22.<com.android.email.activity.setup.SetupDataFragment: void setFlowMode(int)>(i0);

     label05:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 0;

        $z6 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>("jumpToIncoming", r3);

        if $z6 == 0 goto label06;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 7;

        goto label08;

     label06:
        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>("jumpToOutgoing", r3);

        if $z4 == 0 goto label07;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 9;

        goto label08;

     label07:
        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>("jumpToOptions", r3);

        if $z5 == 0 goto label08;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 11;

     label08:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(0);

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed> = 0;

     label09:
        $z7 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing>;

        if $z7 != 0 goto label27;

        $r29 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $i2 = virtualinvoke $r29.<com.android.email.activity.setup.SetupDataFragment: int getFlowMode()>();

        if $i2 != 4 goto label27;

        r54 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("EMAIL");

        r55 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("USER");

        r5 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("PASSWORD");

        r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("INCOMING");

        r7 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("OUTGOING");

        r8 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("SYNC_LOOKBACK");

        $z8 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r8, "ALL");

        if $z8 == 0 goto label10;

        b1 = 6;

        goto label11;

     label10:
        b1 = -1;

     label11:
        $z11 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r55);

        if $z11 != 0 goto label12;

        $z16 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z16 != 0 goto label12;

        $z15 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z15 != 0 goto label12;

        $z17 = 1;

        goto label13;

     label12:
        $z17 = 0;

     label13:
        z0 = $z17;

        $z10 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z10 != 0 goto label14;

        if z0 != 0 goto label14;

        $z18 = 1;

        goto label15;

     label14:
        $z18 = 0;

     label15:
        z1 = $z18;

        $z9 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r54);

        if $z9 != 0 goto label16;

        if z0 != 0 goto label17;

        if z1 != 0 goto label17;

     label16:
        $r32 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r30 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r32, "Force account create requires extras EMAIL, USER, INCOMING, OUTGOING, or EMAIL and PASSWORD", $r30);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;

     label17:
        if z1 == 0 goto label20;

        r9 = virtualinvoke r54.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        $r40 = r9[1];

        r10 = virtualinvoke $r40.<java.lang.String: java.lang.String trim()>();

        $r36 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context,java.lang.String)>(r0, r10);

        r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider> = $r36;

        $r37 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        if $r37 != null goto label18;

        $r45 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r46 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r45, "findProviderForDomain couldn\'t find provider", $r46);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;

     label18:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 1;

        $r38 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r38.<com.android.email.activity.setup.SetupDataFragment: void setEmail(java.lang.String)>(r54);

        z2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean finishAutoSetup()>();

        if z2 != 0 goto label19;

        $r42 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r41 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r42, "Force create account failed to create account", $r41);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;

     label19:
        $r43 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r12 = virtualinvoke $r43.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r11 = virtualinvoke r12.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        r11.<com.android.emailcommon.provider.HostAuth: java.lang.String mPassword> = r5;

        r13 = virtualinvoke r12.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r0);

        r13.<com.android.emailcommon.provider.HostAuth: java.lang.String mPassword> = r5;

        goto label25;

     label20:
        $r31 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r56 = virtualinvoke $r31.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

     label21:
        r57 = virtualinvoke r56.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        virtualinvoke r57.<com.android.emailcommon.provider.HostAuth: void setHostAuthFromString(java.lang.String)>(r6);

        r58 = virtualinvoke r56.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r0);

        virtualinvoke r58.<com.android.emailcommon.provider.HostAuth: void setHostAuthFromString(java.lang.String)>(r7);

     label22:
        goto label24;

     label23:
        $r53 := @caughtexception;

        $r51 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>(r0, 2131296756, 1);

        virtualinvoke $r51.<android.widget.Toast: void show()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;

     label24:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void populateSetupData(java.lang.String,java.lang.String)>(r55, r54);

        if b1 < 0 goto label25;

        if b1 > 6 goto label25;

        r56.<com.android.emailcommon.provider.Account: int mSyncLookback> = b1;

     label25:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 11;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(0);

        $r35 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r35.<android.app.FragmentManager: boolean executePendingTransactions()>();

        $r33 = <com.android.email.activity.setup.AccountSetupFinal: java.lang.Boolean DEBUG_ALLOW_NON_TEST_HARNESS_CREATION>;

        $z12 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        if $z12 != 0 goto label26;

        $z13 = staticinvoke <android.app.ActivityManager: boolean isRunningInTestHarness()>();

        if $z13 != 0 goto label26;

        $r39 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r34 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r39, "ERROR: Force account create only allowed while in test harness", $r34);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;

     label26:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mForceCreate> = 1;

     label27:
        $r24 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.LoaderManager getLoaderManager()>();

        $r23 = new com.android.email.activity.setup.AccountSetupFinal$1;

        specialinvoke $r23.<com.android.email.activity.setup.AccountSetupFinal$1: void <init>(com.android.email.activity.setup.AccountSetupFinal)>(r0);

        virtualinvoke $r24.<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(0, null, $r23);

        $r25 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.LoaderManager getLoaderManager()>();

        $r26 = new com.android.email.activity.setup.AccountSetupFinal$2;

        specialinvoke $r26.<com.android.email.activity.setup.AccountSetupFinal$2: void <init>(com.android.email.activity.setup.AccountSetupFinal)>(r0);

        virtualinvoke $r25.<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks)>(1, null, $r26);

        return;

        catch java.net.URISyntaxException from label21 to label22 with label23;
    }

    protected void onResume()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onResume()>();

        $z0 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mForceCreate>;

        if $z0 == 0 goto label1;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mForceCreate> = 0;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

     label1:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        com.android.emailcommon.VendorPolicyLoader$Provider $r2;
        android.accounts.AccountAuthenticatorResponse $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onSaveInstanceState(android.os.Bundle)>(r1);

        $z0 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("AccountSetupFinal.is_processing", $z0);

        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("AccountSetupFinal.state", $i0);

        $r2 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("AccountSetupFinal.provider", $r2);

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("AccountSetupFinal.authResp", $r3);

        $z1 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mReportAccountAuthenticatorError>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("AccountSetupFinal.authErr", $z1);

        $z2 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("AccountSetupFinal.preconfig", $z2);

        $z3 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("AccountSetupFinal.passwordFailed", $z3);

        return;
    }

    private void updateContentFragment(boolean)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean z0, $z2;
        com.android.email.activity.setup.AccountSetupFragment r1;
        java.lang.String r2, $r12, $r14, $r16, $r19, $r21, $r23, $r28;
        android.app.FragmentTransaction r3;
        android.view.inputmethod.InputMethodManager r4;
        android.view.View r5;
        int $i0, $i1, $i3;
        android.app.FragmentManager $r6;
        java.lang.Object $r9;
        android.os.IBinder $r10;
        com.android.email.activity.setup.SetupDataFragment $r13, $r15, $r17, $r18, $r20, $r22;
        java.lang.StringBuilder $r24, $r26, $r27;
        java.lang.IllegalStateException $r25;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        z0 := @parameter0: boolean;

        r2 = null;

        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        tableswitch($i0)
        {
            case 0: goto label01;
            case 1: goto label09;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label09;
            case 6: goto label09;
            case 7: goto label05;
            case 8: goto label09;
            case 9: goto label06;
            case 10: goto label09;
            case 11: goto label07;
            case 12: goto label09;
            case 13: goto label08;
            default: goto label09;
        };

     label01:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupBasicsFragment: com.android.email.activity.setup.AccountSetupBasicsFragment newInstance()>();

        goto label10;

     label02:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupTypeFragment: com.android.email.activity.setup.AccountSetupTypeFragment newInstance()>();

        goto label10;

     label03:
        $r20 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r21 = virtualinvoke $r20.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

        $r18 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r19 = virtualinvoke $r18.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getAmProtocol()>();

        $r22 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r23 = virtualinvoke $r22.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getIncomingProtocol(android.content.Context)>(r0);

        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupABFragment: com.android.email.activity.setup.AccountSetupABFragment newInstance(java.lang.String,java.lang.String,java.lang.String)>($r21, $r19, $r23);

        goto label10;

     label04:
        $r13 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r12 = virtualinvoke $r13.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

        $r15 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r14 = virtualinvoke $r15.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getIncomingProtocol(android.content.Context)>(r0);

        $r17 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r16 = virtualinvoke $r17.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getClientCert(android.content.Context)>(r0);

        $z2 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed>;

        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupCredentialsFragment: com.android.email.activity.setup.AccountSetupCredentialsFragment newInstance(java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r12, $r14, $r16, $z2, 0);

        r2 = "AccountSetupCredentialsFragment";

        goto label10;

     label05:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupIncomingFragment: com.android.email.activity.setup.AccountSetupIncomingFragment newInstance(boolean)>(0);

        goto label10;

     label06:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupOutgoingFragment: com.android.email.activity.setup.AccountSetupOutgoingFragment newInstance(boolean)>(0);

        goto label10;

     label07:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupOptionsFragment: com.android.email.activity.setup.AccountSetupOptionsFragment newInstance()>();

        goto label10;

     label08:
        r1 = staticinvoke <com.android.email.activity.setup.AccountSetupNamesFragment: com.android.email.activity.setup.AccountSetupNamesFragment newInstance()>();

        goto label10;

     label09:
        $r25 = new java.lang.IllegalStateException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incorrect state ");

        $i3 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r25;

     label10:
        $i1 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        virtualinvoke r1.<com.android.email.activity.setup.AccountSetupFragment: void setState(int)>($i1);

        $r6 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r3 = virtualinvoke $r6.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        virtualinvoke r3.<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>(2131034120, 2131034121, 2131034120, 2131034121);

        virtualinvoke r3.<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>(2131624049, r1, "AccountSetupContentFragment");

        if z0 == 0 goto label11;

        virtualinvoke r3.<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>(r2);

     label11:
        virtualinvoke r3.<android.app.FragmentTransaction: int commit()>();

        $r9 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.Object getSystemService(java.lang.String)>("input_method");

        r4 = (android.view.inputmethod.InputMethodManager) $r9;

        r5 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.view.View findViewById(int)>(2131624049);

        $r10 = virtualinvoke r5.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r10, 0);

        return;
    }

    private com.android.email.activity.setup.AccountSetupFragment getContentFragment()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.app.FragmentManager $r1;
        android.app.Fragment $r2;
        com.android.email.activity.setup.AccountSetupFragment $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        $r2 = virtualinvoke $r1.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("AccountSetupContentFragment");

        $r3 = (com.android.email.activity.setup.AccountSetupFragment) $r2;

        return $r3;
    }

    private void resetStateFromCurrentFragment()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupFragment r1;
        int $i0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        $i0 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupFragment: int getState()>();

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = $i0;

        return;
    }

    protected void proceed()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupFragment r1, $r17;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z10, $z11, $z12, $z14, $z15, $z16;
        java.lang.String r2, $r8, $r10, $r12, $r19;
        com.android.emailcommon.provider.Account r3;
        android.app.FragmentManager $r4, $r15, r21;
        int $i0, $i1, $i2;
        com.android.email.activity.setup.SetupDataFragment $r5, $r6, $r7, $r9, $r11, $r13, $r14, $r16;
        java.lang.Object[] $r18;
        java.lang.Integer $r20;
        com.android.email.activity.setup.AccountSetupCredentialsFragment r22;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r23;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing> = 0;

        r1 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        if r1 == null goto label01;

        virtualinvoke r1.<com.android.email.activity.setup.AccountSetupFragment: void setNextButtonEnabled(boolean)>(1);

     label01:
        $r4 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r4.<android.app.FragmentManager: boolean executePendingTransactions()>();

        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        tableswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label09;
            case 3: goto label10;
            case 4: goto label12;
            case 5: goto label15;
            case 6: goto label18;
            case 7: goto label19;
            case 8: goto label20;
            case 9: goto label23;
            case 10: goto label24;
            case 11: goto label25;
            case 12: goto label26;
            case 13: goto label27;
            case 14: goto label28;
            default: goto label29;
        };

     label02:
        z0 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean onBasicsComplete()>();

        if z0 != 0 goto label03;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 1;

        goto label30;

     label03:
        $z2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean shouldDivertToManual()>();

        if $z2 == 0 goto label04;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = 1;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 2;

        goto label08;

     label04:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = 0;

        $z3 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider>;

        if $z3 == 0 goto label06;

        $r9 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r8 = virtualinvoke $r9.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getAmProtocol()>();

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r8);

        if $z6 != 0 goto label05;

        $r11 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r10 = virtualinvoke $r11.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getAmProtocol()>();

        $r13 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r12 = virtualinvoke $r13.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getIncomingProtocol(android.content.Context)>(r0);

        $z7 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r10, $r12);

        if $z7 != 0 goto label05;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 3;

        goto label08;

     label05:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 4;

        $z5 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean possiblyDivertToGmail()>();

        if $z5 == 0 goto label08;

        return;

     label06:
        $r5 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r2 = virtualinvoke $r5.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getAmProtocol()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z4 != 0 goto label07;

        $r6 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r6.<com.android.email.activity.setup.SetupDataFragment: void setIncomingProtocol(android.content.Context,java.lang.String)>(r0, r2);

        $r7 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r3 = virtualinvoke $r7.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setDefaultsForProtocol(com.android.emailcommon.provider.Account)>(r3);

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 4;

        goto label08;

     label07:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 2;

     label08:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label09:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 4;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label10:
        $z14 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean possiblyDivertToGmail()>();

        if $z14 == 0 goto label11;

        return;

     label11:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 4;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label12:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void collectCredentials()>();

        $z15 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider>;

        if $z15 == 0 goto label13;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 5;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateCheckSettingsFragment(int)>(3);

        goto label30;

     label13:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void populateHostAuthsFromSetupData()>();

        $z16 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover>;

        if $z16 == 0 goto label14;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 7;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label14:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 6;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateAutoDiscover()>();

        goto label30;

     label15:
        $z9 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed>;

        if $z9 == 0 goto label17;

        $z10 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed>;

        if $z10 == 0 goto label16;

        r21 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r21.<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>("AccountSetupCredentialsFragment", 0);

        $r17 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r22 = (com.android.email.activity.setup.AccountSetupCredentialsFragment) $r17;

        $z12 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed>;

        virtualinvoke r22.<com.android.email.activity.setup.AccountSetupCredentialsFragment: void setPasswordFailed(boolean)>($z12);

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

        goto label30;

     label16:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 7;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label17:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 11;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label18:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 7;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label19:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void onIncomingComplete()>();

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 8;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateCheckSettingsFragment(int)>(1);

        goto label30;

     label20:
        $r16 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r23 = virtualinvoke $r16.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $z11 = r23.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp>;

        if $z11 == 0 goto label21;

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 9;

        goto label22;

     label21:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 11;

     label22:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label23:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void onOutgoingComplete()>();

        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 10;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateCheckSettingsFragment(int)>(2);

        goto label30;

     label24:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 11;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        goto label30;

     label25:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 12;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateAccountCreation()>();

        goto label30;

     label26:
        r0.<com.android.email.activity.setup.AccountSetupFinal: int mState> = 13;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void updateContentFragment(boolean)>(1);

        $r14 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $i1 = virtualinvoke $r14.<com.android.email.activity.setup.SetupDataFragment: int getFlowMode()>();

        if $i1 != 4 goto label30;

        $r15 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r15.<android.app.FragmentManager: boolean executePendingTransactions()>();

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateAccountFinalize()>();

        goto label30;

     label27:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateAccountFinalize()>();

        goto label30;

     label28:
        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        goto label30;

     label29:
        $r19 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r18 = newarray (java.lang.Object)[1];

        $i2 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r18[0] = $r20;

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "Unknown state %d", $r18);

     label30:
        return;
    }

    private boolean possiblyDivertToGmail()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r1;
        android.os.Bundle r2, $r5;
        com.android.email.activity.setup.SetupDataFragment $r3;
        java.lang.String $r4;
        boolean $z0;
        android.accounts.AccountManager $r6;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r1 = virtualinvoke $r3.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $r4 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, "gmail");

        if $z0 == 0 goto label1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(int)>(1);

        r2 = $r5;

        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("allowSkip", 0);

        $r6 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        virtualinvoke $r6.<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>("com.google", "mail", null, r2, r0, null, null);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return 1;

     label1:
        return 0;
    }

    public void onBackPressed()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $z0 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        if $i0 != 13 goto label2;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void onBackPressed()>();

     label3:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

        return;
    }

    public void setAccount(com.android.emailcommon.provider.Account)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.activity.setup.SetupDataFragment $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: com.android.emailcommon.provider.Account;

        $r2 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r2.<com.android.email.activity.setup.SetupDataFragment: void setAccount(com.android.emailcommon.provider.Account)>(r1);

        return;
    }

    public void finish()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean $z0;
        android.accounts.AccountAuthenticatorResponse $r1, $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $z0 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mReportAccountAuthenticatorError>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        virtualinvoke $r2.<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>(4, "canceled");

        r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse> = null;

     label1:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupActivity: void finish()>();

        return;
    }

    public void onNextButton()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $z0 = r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

     label1:
        return;
    }

    private boolean onBasicsComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupBasicsFragment r1;
        java.lang.String r2, r4, $r9, $r11, $r16, $r17, $r19, $r22, r24;
        java.lang.String[] r3;
        com.android.email.activity.setup.AccountSetupNoteDialogFragment r5;
        com.android.email.activity.setup.AccountSetupFragment $r6;
        com.android.email.activity.setup.SetupDataFragment $r7, $r8, $r10;
        boolean $z0, $z1, $z2;
        com.android.emailcommon.VendorPolicyLoader$Provider $r12, $r13, $r20, $r21;
        java.util.Map $r14, $r15;
        java.lang.Object $r18;
        android.app.FragmentManager $r23;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r6 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupBasicsFragment) $r6;

        r2 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupBasicsFragment: java.lang.String getEmail()>();

        $r7 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r7.<com.android.email.activity.setup.SetupDataFragment: void setIncomingProtocol(android.content.Context,java.lang.String)>(r0, null);

        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r9 = virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, $r9);

        if $z0 != 0 goto label1;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed> = 0;

     label1:
        $r10 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r10.<com.android.email.activity.setup.SetupDataFragment: void setEmail(java.lang.String)>(r2);

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        $r11 = r3[1];

        r4 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        $r13 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context,java.lang.String)>(r0, r4);

        r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider> = $r13;

        $r12 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        if $r12 == null goto label3;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 1;

        $r20 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r19 = $r20.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String note>;

        if $r19 == null goto label2;

        $r21 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r22 = $r21.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String note>;

        r5 = staticinvoke <com.android.email.activity.setup.AccountSetupNoteDialogFragment: com.android.email.activity.setup.AccountSetupNoteDialogFragment newInstance(java.lang.String)>($r22);

        $r23 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r5.<com.android.email.activity.setup.AccountSetupNoteDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r23, "NoteDialogFragment");

        return 0;

     label2:
        $z2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean finishAutoSetup()>();

        return $z2;

     label3:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 0;

        $r14 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap>;

        if $r14 == null goto label4;

        $r15 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap>;

        $r18 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r17 = (java.lang.String) $r18;

        goto label5;

     label4:
        $r17 = null;

     label5:
        r24 = $r17;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r24);

        if $z1 != 0 goto label6;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void showDuplicateAccountDialog(java.lang.String)>(r24);

        return 0;

     label6:
        $r16 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.String mOwnerName>;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void populateSetupData(java.lang.String,java.lang.String)>($r16, r2);

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = 0;

        return 1;
    }

    private void showDuplicateAccountDialog(java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1;
        com.android.email.activity.setup.DuplicateAccountDialogFragment r2;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <com.android.email.activity.setup.DuplicateAccountDialogFragment: com.android.email.activity.setup.DuplicateAccountDialogFragment newInstance(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r2.<com.android.email.activity.setup.DuplicateAccountDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "DuplicateAccountDialogFragment");

        return;
    }

    public void onDuplicateAccountDialogDismiss()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

        return;
    }

    private boolean shouldDivertToManual()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupBasicsFragment r1;
        com.android.email.activity.setup.AccountSetupFragment $r2;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupBasicsFragment) $r2;

        $z0 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupBasicsFragment: boolean isManualSetup()>();

        return $z0;
    }

    public void onCredentialsComplete(android.os.Bundle)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.os.Bundle r1;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: android.os.Bundle;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    private void collectCredentials()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupCredentialsFragment r1;
        android.os.Bundle r2, $r11, $r14;
        com.android.emailcommon.provider.Account r3;
        com.android.emailcommon.provider.HostAuth r4, r6;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5;
        com.android.email.activity.setup.AccountSetupFragment $r7;
        com.android.email.activity.setup.SetupDataFragment $r8, $r9, $r10, $r12, $r13, $r15, $r16;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r7 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupCredentialsFragment) $r7;

        r2 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupCredentialsFragment: android.os.Bundle getCredentialResults()>();

        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: void setCredentialResults(android.os.Bundle)>(r2);

        $r9 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r3 = virtualinvoke $r9.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r4 = virtualinvoke r3.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        $r10 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r11 = virtualinvoke $r10.<com.android.email.activity.setup.SetupDataFragment: android.os.Bundle getCredentialResults()>();

        staticinvoke <com.android.email.activity.setup.AccountSetupCredentialsFragment: void populateHostAuthWithResults(android.content.Context,com.android.emailcommon.provider.HostAuth,android.os.Bundle)>(r0, r4, $r11);

        $r12 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r12.<com.android.email.activity.setup.SetupDataFragment: void setIncomingCredLoaded(boolean)>(1);

        $r13 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r5 = virtualinvoke $r13.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $z0 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp>;

        if $z0 == 0 goto label1;

        r6 = virtualinvoke r3.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r0);

        $r15 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r14 = virtualinvoke $r15.<com.android.email.activity.setup.SetupDataFragment: android.os.Bundle getCredentialResults()>();

        staticinvoke <com.android.email.activity.setup.AccountSetupCredentialsFragment: void populateHostAuthWithResults(android.content.Context,com.android.emailcommon.provider.HostAuth,android.os.Bundle)>(r0, r6, $r14);

        $r16 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r16.<com.android.email.activity.setup.SetupDataFragment: void setOutgoingCredLoaded(boolean)>(1);

     label1:
        return;
    }

    public void onNoteDialogComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: boolean finishAutoSetup()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    public void onNoteDialogCancel()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

        return;
    }

    private boolean finishAutoSetup()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1, r2, r4, $r10, $r12, $r14, $r17, $r20, $r22, $r24, $r26, $r27, $r30, $r32, r34;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r3;
        com.android.emailcommon.provider.HostAuth r5, r6;
        com.android.email.activity.setup.SetupDataFragment $r7, $r11;
        com.android.emailcommon.VendorPolicyLoader$Provider $r8, $r9, $r13, $r15, $r21, $r23, $r28, $r29;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.util.Map $r16, $r19;
        java.lang.Object $r18;
        java.lang.Object[] $r25;
        java.net.URISyntaxException $r31;
        com.android.emailcommon.provider.Account r33;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r7 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r1 = virtualinvoke $r7.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

     label01:
        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        virtualinvoke $r8.<com.android.emailcommon.VendorPolicyLoader$Provider: void expandTemplates(java.lang.String)>(r1);

        $r9 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r10 = $r9.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUri>;

        r2 = staticinvoke <com.android.emailcommon.provider.HostAuth: java.lang.String getProtocolFromString(java.lang.String)>($r10);

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r2);

        $z0 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean isGmailStub>;

        if $z0 != 0 goto label02;

        $r27 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        $z2 = staticinvoke <com.android.email.service.EmailServiceUtils: boolean isServiceAvailable(android.content.Context,java.lang.String)>(r0, $r27);

        if $z2 != 0 goto label02;

        $r30 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r25 = newarray (java.lang.Object)[1];

        $r26 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String protocol>;

        $r25[0] = $r26;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r30, "Protocol %s not available, using alternate", $r25);

        $r28 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        virtualinvoke $r28.<com.android.emailcommon.VendorPolicyLoader$Provider: void expandAlternateTemplates(java.lang.String)>(r1);

        $r29 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r32 = $r29.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUri>;

        r4 = staticinvoke <com.android.emailcommon.provider.HostAuth: java.lang.String getProtocolFromString(java.lang.String)>($r32);

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r4);

     label02:
        $r11 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r33 = virtualinvoke $r11.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r5 = virtualinvoke r33.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        $r13 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r12 = $r13.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUri>;

        virtualinvoke r5.<com.android.emailcommon.provider.HostAuth: void setHostAuthFromString(java.lang.String)>($r12);

        $r15 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r14 = $r15.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUsername>;

        virtualinvoke r5.<com.android.emailcommon.provider.HostAuth: void setUserName(java.lang.String)>($r14);

        $i1 = r5.<com.android.emailcommon.provider.HostAuth: int mFlags>;

        $i0 = $i1 & 1;

        if $i0 == 0 goto label03;

        $i2 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int portSsl>;

        goto label04;

     label03:
        $i2 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int port>;

     label04:
        r5.<com.android.emailcommon.provider.HostAuth: int mPort> = $i2;

        $z1 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp>;

        if $z1 == 0 goto label05;

        r6 = virtualinvoke r33.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r0);

        $r23 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r24 = $r23.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String outgoingUri>;

        virtualinvoke r6.<com.android.emailcommon.provider.HostAuth: void setHostAuthFromString(java.lang.String)>($r24);

        $r21 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.emailcommon.VendorPolicyLoader$Provider mProvider>;

        $r22 = $r21.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String outgoingUsername>;

        virtualinvoke r6.<com.android.emailcommon.provider.HostAuth: void setUserName(java.lang.String)>($r22);

     label05:
        $r17 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.String mOwnerName>;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void populateSetupData(java.lang.String,java.lang.String)>($r17, r1);

        $r16 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap>;

        if $r16 == null goto label06;

        $r19 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap>;

        $r18 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r20 = (java.lang.String) $r18;

        goto label07;

     label06:
        $r20 = null;

     label07:
        r34 = $r20;

        if r34 == null goto label09;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void showDuplicateAccountDialog(java.lang.String)>(r34);

     label08:
        return 0;

     label09:
        goto label11;

     label10:
        $r31 := @caughtexception;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mSkipAutoDiscover> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed> = 1;

     label11:
        return 1;

        catch java.net.URISyntaxException from label01 to label08 with label10;
    }

    public void setDefaultsForProtocol(com.android.emailcommon.provider.Account)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r2;
        com.android.email.activity.setup.SetupDataFragment $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: com.android.emailcommon.provider.Account;

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r2 = virtualinvoke $r3.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        if r2 != null goto label1;

        return;

     label1:
        $i0 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultSyncInterval>;

        r1.<com.android.emailcommon.provider.Account: int mSyncInterval> = $i0;

        $i1 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultLookback>;

        r1.<com.android.emailcommon.provider.Account: int mSyncLookback> = $i1;

        $z0 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLocalDeletes>;

        if $z0 == 0 goto label2;

        $i2 = r2.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: int defaultLocalDeletes>;

        virtualinvoke r1.<com.android.emailcommon.provider.Account: void setDeletePolicy(int)>($i2);

     label2:
        return;
    }

    private void populateSetupData(java.lang.String, java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1, r2;
        com.android.emailcommon.provider.Account r3;
        com.android.email.activity.setup.SetupDataFragment $r4;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r3 = virtualinvoke $r4.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        virtualinvoke r3.<com.android.emailcommon.provider.Account: void setSenderName(java.lang.String)>(r1);

        virtualinvoke r3.<com.android.emailcommon.provider.Account: void setEmailAddress(java.lang.String)>(r2);

        virtualinvoke r3.<com.android.emailcommon.provider.Account: void setDisplayName(java.lang.String)>(r2);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setDefaultsForProtocol(com.android.emailcommon.provider.Account)>(r3);

        return;
    }

    private void onIncomingComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupIncomingFragment r1;
        com.android.email.activity.setup.AccountSetupFragment $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupIncomingFragment) $r2;

        virtualinvoke r1.<com.android.email.activity.setup.AccountSetupIncomingFragment: void collectUserInput()>();

        return;
    }

    private void onOutgoingComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupOutgoingFragment r1;
        com.android.email.activity.setup.AccountSetupFragment $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupOutgoingFragment) $r2;

        virtualinvoke r1.<com.android.email.activity.setup.AccountSetupOutgoingFragment: void collectUserInput()>();

        return;
    }

    public void onAccountServerUIComplete(int)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        int i0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        i0 := @parameter0: int;

        return;
    }

    public void onAccountServerSaveComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        return;
    }

    private void populateHostAuthsFromSetupData()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1, r3, $r11;
        java.lang.String[] r2;
        com.android.emailcommon.provider.Account r4;
        com.android.emailcommon.provider.HostAuth r5, r7;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r6;
        com.android.email.activity.setup.SetupDataFragment $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17;
        android.os.Bundle $r12, $r18;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r1 = virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("@");

        r3 = r2[1];

        $r9 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r4 = virtualinvoke $r9.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r5 = virtualinvoke r4.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        virtualinvoke r5.<com.android.emailcommon.provider.HostAuth: void setUserName(java.lang.String)>(r1);

        $r10 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r11 = virtualinvoke $r10.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getIncomingProtocol()>();

        virtualinvoke r5.<com.android.emailcommon.provider.HostAuth: void setConnection(java.lang.String,java.lang.String,int,int)>($r11, r3, -1, 0);

        $r13 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r12 = virtualinvoke $r13.<com.android.email.activity.setup.SetupDataFragment: android.os.Bundle getCredentialResults()>();

        staticinvoke <com.android.email.activity.setup.AccountSetupCredentialsFragment: void populateHostAuthWithResults(android.content.Context,com.android.emailcommon.provider.HostAuth,android.os.Bundle)>(r0, r5, $r12);

        $r15 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r15.<com.android.email.activity.setup.SetupDataFragment: void setIncomingCredLoaded(boolean)>(1);

        $r14 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r6 = virtualinvoke $r14.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $z0 = r6.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp>;

        if $z0 == 0 goto label1;

        r7 = virtualinvoke r4.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>(r0);

        virtualinvoke r7.<com.android.emailcommon.provider.HostAuth: void setUserName(java.lang.String)>(r1);

        virtualinvoke r7.<com.android.emailcommon.provider.HostAuth: void setConnection(java.lang.String,java.lang.String,int,int)>("smtp", r3, -1, 0);

        $r16 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r18 = virtualinvoke $r16.<com.android.email.activity.setup.SetupDataFragment: android.os.Bundle getCredentialResults()>();

        staticinvoke <com.android.email.activity.setup.AccountSetupCredentialsFragment: void populateHostAuthWithResults(android.content.Context,com.android.emailcommon.provider.HostAuth,android.os.Bundle)>(r0, r7, $r18);

        $r17 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r17.<com.android.email.activity.setup.SetupDataFragment: void setOutgoingCredLoaded(boolean)>(1);

     label1:
        return;
    }

    private void initiateAutoDiscover()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void initiateCheckSettingsFragment(int)>(4);

        return;
    }

    private void initiateCheckSettingsFragment(int)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        int i0;
        com.android.email.activity.setup.AccountCheckSettingsFragment r1;
        com.android.email.activity.setup.CheckSettingsProgressDialogFragment r2;
        android.app.FragmentManager $r3;
        android.app.FragmentTransaction $r4, $r5, $r6;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        i0 := @parameter0: int;

        r1 = staticinvoke <com.android.email.activity.setup.AccountCheckSettingsFragment: com.android.email.activity.setup.AccountCheckSettingsFragment newInstance(int)>(i0);

        r2 = staticinvoke <com.android.email.activity.setup.CheckSettingsProgressDialogFragment: com.android.email.activity.setup.CheckSettingsProgressDialogFragment newInstance(int)>(i0);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        $r4 = virtualinvoke $r3.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r5 = virtualinvoke $r4.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r1, "AccountCheckStgFrag");

        $r6 = virtualinvoke $r5.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r2, "CheckProgressDialog");

        virtualinvoke $r6.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    public void onCheckSettingsProgressDialogCancel()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCheckSettingsFragment()>();

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

        return;
    }

    private void dismissCheckSettingsFragment()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.app.Fragment r1, r2;
        android.app.FragmentManager $r3, $r4, $r5;
        android.app.FragmentTransaction $r6, $r7, $r8;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r1 = virtualinvoke $r3.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("AccountCheckStgFrag");

        $r4 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r2 = virtualinvoke $r4.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("CheckProgressDialog");

        $r5 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        $r6 = virtualinvoke $r5.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r7 = virtualinvoke $r6.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r1);

        $r8 = virtualinvoke $r7.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r2);

        virtualinvoke $r8.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    public void onCheckSettingsError(int, java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        int i0;
        java.lang.String r1;
        com.android.email.activity.setup.CheckSettingsErrorDialogFragment r2;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        if i0 == 1 goto label1;

        if i0 != 2 goto label2;

     label1:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed> = 1;

     label2:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCheckSettingsFragment()>();

        r2 = staticinvoke <com.android.email.activity.setup.CheckSettingsErrorDialogFragment: com.android.email.activity.setup.CheckSettingsErrorDialogFragment newInstance(int,java.lang.String)>(i0, r1);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r2.<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "CheckSettingsErrorDialog");

        return;
    }

    public void onCheckSettingsErrorDialogEditCertificate()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupIncomingFragment r1;
        int $i0;
        com.android.email.activity.setup.AccountSetupFragment $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        if $i0 != 5 goto label1;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed> = 1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

     label2:
        $r2 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupIncomingFragment) $r2;

        virtualinvoke r1.<com.android.email.activity.setup.AccountSetupIncomingFragment: void onCertificateRequested()>();

        return;
    }

    public void onCheckSettingsErrorDialogEditSettings()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        int $i0, $i1;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $i0 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        if $i0 == 5 goto label1;

        $i1 = r0.<com.android.email.activity.setup.AccountSetupFinal: int mState>;

        if $i1 != 6 goto label2;

     label1:
        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed> = 1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

     label3:
        return;
    }

    public void onCheckSettingsComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPreConfiguredFailed> = 0;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mPasswordFailed> = 0;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCheckSettingsFragment()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    public void onCheckSettingsAutoDiscoverComplete(int)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        int i0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCheckSettingsFragment()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    public void onCheckSettingsSecurityRequired(java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1;
        com.android.email.activity.setup.SecurityRequiredDialogFragment r2;
        android.app.FragmentManager $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCheckSettingsFragment()>();

        r2 = staticinvoke <com.android.email.activity.setup.SecurityRequiredDialogFragment: com.android.email.activity.setup.SecurityRequiredDialogFragment newInstance(java.lang.String)>(r1);

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r2.<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r3, "SecurityRequiredDialog");

        return;
    }

    public void onSecurityRequiredDialogResult(boolean)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        boolean z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void resetStateFromCurrentFragment()>();

     label2:
        return;
    }

    public void onChooseProtocol(java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1;
        com.android.emailcommon.provider.Account r2;
        com.android.email.activity.setup.SetupDataFragment $r3, $r4;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r3.<com.android.email.activity.setup.SetupDataFragment: void setIncomingProtocol(android.content.Context,java.lang.String)>(r0, r1);

        $r4 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r2 = virtualinvoke $r4.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setDefaultsForProtocol(com.android.emailcommon.provider.Account)>(r2);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    public void onABProtocolDisambiguated(java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1, $r4;
        com.android.emailcommon.provider.Account r2;
        com.android.email.activity.setup.SetupDataFragment $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r4 = virtualinvoke $r3.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getIncomingProtocol(android.content.Context)>(r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, r1);

        if $z0 != 0 goto label1;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsPreConfiguredProvider> = 0;

        $r5 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        virtualinvoke $r5.<com.android.email.activity.setup.SetupDataFragment: void setIncomingProtocol(android.content.Context,java.lang.String)>(r0, r1);

        $r6 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r2 = virtualinvoke $r6.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setDefaultsForProtocol(com.android.emailcommon.provider.Account)>(r2);

     label1:
        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    private void initiateAccountCreation()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.activity.setup.AccountSetupOptionsFragment r2;
        int i0, $i1, $i2, $i4, $i5, $i6;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r3;
        com.android.emailcommon.provider.HostAuth r4, $r10;
        double d0;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        com.android.email.activity.setup.AccountCreationFragment r5;
        android.app.FragmentTransaction r6;
        com.android.email.activity.setup.AccountSetupFragment $r7, $r9;
        com.android.email.activity.setup.SetupDataFragment $r8, $r12, $r17, $r20;
        java.lang.String $r11, $r13, $r14, $r21, $r25;
        java.lang.Integer $r15, r29;
        com.android.emailcommon.provider.Policy $r16, $r22;
        android.app.FragmentManager $r19;
        java.lang.IllegalStateException $r23, $r24;
        byte $b7;
        java.lang.Object[] $r26;
        java.lang.NumberFormatException $r27, r28;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing> = 1;

        $r7 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        virtualinvoke $r7.<com.android.email.activity.setup.AccountSetupFragment: void setNextButtonEnabled(boolean)>(0);

        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r1 = virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        $r10 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r10 != null goto label01;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("in AccountSetupOptions with null mHostAuthRecv");

        throw $r23;

     label01:
        $r9 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r2 = (com.android.email.activity.setup.AccountSetupOptionsFragment) $r9;

        if r2 != null goto label02;

        $r24 = new java.lang.IllegalStateException;

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Fragment missing!");

        throw $r24;

     label02:
        $r11 = virtualinvoke r1.<com.android.emailcommon.provider.Account: java.lang.String getEmailAddress()>();

        virtualinvoke r1.<com.android.emailcommon.provider.Account: void setDisplayName(java.lang.String)>($r11);

        $i1 = virtualinvoke r1.<com.android.emailcommon.provider.Account: int getFlags()>();

        i0 = $i1 & -257;

        $r12 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r3 = virtualinvoke $r12.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $z4 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerAttachmentPreload>;

        if $z4 == 0 goto label03;

        $z12 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: boolean getBackgroundAttachmentsValue()>();

        if $z12 == 0 goto label03;

        i0 = i0 | 256;

     label03:
        r4 = virtualinvoke r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r0);

        $r14 = r4.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r13 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.String getString(int)>(2131296973);

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label07;

     label04:
        $r21 = r1.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r21);

        $b7 = d0 cmpl 12.0;

        if $b7 < 0 goto label05;

        i0 = i0 | 6272;

     label05:
        goto label07;

     label06:
        $r27 := @caughtexception;

        r28 = $r27;

        $r25 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r26 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r25, r28, "Exception thrown parsing the protocol version.", $r26);

     label07:
        virtualinvoke r1.<com.android.emailcommon.provider.Account: void setFlags(int)>(i0);

        $r15 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: java.lang.Integer getCheckFrequencyValue()>();

        $i2 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<com.android.emailcommon.provider.Account: void setSyncInterval(int)>($i2);

        r29 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: java.lang.Integer getAccountSyncWindowValue()>();

        if r29 == null goto label08;

        $i6 = virtualinvoke r29.<java.lang.Integer: int intValue()>();

        virtualinvoke r1.<com.android.emailcommon.provider.Account: void setSyncLookback(int)>($i6);

     label08:
        $r17 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r16 = virtualinvoke $r17.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Policy getPolicy()>();

        if $r16 == null goto label09;

        $i5 = r1.<com.android.emailcommon.provider.Account: int mFlags>;

        $i4 = $i5 | 32;

        r1.<com.android.emailcommon.provider.Account: int mFlags> = $i4;

        $r20 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r22 = virtualinvoke $r20.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Policy getPolicy()>();

        r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy> = $r22;

     label09:
        z0 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: boolean getSyncEmailValue()>();

        $z7 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncCalendar>;

        if $z7 == 0 goto label10;

        $z9 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: boolean getSyncCalendarValue()>();

        if $z9 == 0 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        z1 = $z11;

        $z6 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncContacts>;

        if $z6 == 0 goto label12;

        $z10 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: boolean getSyncContactsValue()>();

        if $z10 == 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z2 = $z8;

        z3 = virtualinvoke r2.<com.android.email.activity.setup.AccountSetupOptionsFragment: boolean getNotifyValue()>();

        r5 = staticinvoke <com.android.email.activity.setup.AccountCreationFragment: com.android.email.activity.setup.AccountCreationFragment newInstance(com.android.emailcommon.provider.Account,boolean,boolean,boolean,boolean)>(r1, z0, z1, z2, z3);

        $r19 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r6 = virtualinvoke $r19.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        virtualinvoke r6.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r5, "AccountCreationFragment");

        virtualinvoke r6.<android.app.FragmentTransaction: int commit()>();

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void showCreateAccountDialog()>();

        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
    }

    public void onAccountCreationFragmentComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r1;
        android.os.Bundle r2, $r5;
        android.accounts.AccountAuthenticatorResponse $r3, $r9;
        com.android.email.activity.setup.SetupDataFragment $r4, $r6;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void destroyAccountCreationFragment()>();

        $r3 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r1 = virtualinvoke $r4.<com.android.email.activity.setup.SetupDataFragment: com.android.email.service.EmailServiceUtils$EmailServiceInfo getIncomingServiceInfo(android.content.Context)>(r0);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(int)>(2);

        r2 = $r5;

        $r6 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r7 = virtualinvoke $r6.<com.android.email.activity.setup.SetupDataFragment: java.lang.String getEmail()>();

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("authAccount", $r7);

        $r8 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("accountType", $r8);

        $r9 = r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse>;

        virtualinvoke $r9.<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r2);

        r0.<com.android.email.activity.setup.AccountSetupFinal: android.accounts.AccountAuthenticatorResponse mAccountAuthenticatorResponse> = null;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mReportAccountAuthenticatorError> = 0;

     label1:
        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void setResult(int)>(-1);

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void proceed()>();

        return;
    }

    public void destroyAccountCreationFragment()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.app.Fragment r1;
        android.app.FragmentManager $r2, $r3;
        android.app.FragmentTransaction $r4, $r5;
        java.lang.Object[] $r6;
        java.lang.String $r7;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void dismissCreateAccountDialog()>();

        $r2 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r1 = virtualinvoke $r2.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("AccountCreationFragment");

        if r1 != null goto label1;

        $r7 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "Couldn\'t find AccountCreationFragment to destroy", $r6);

     label1:
        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        $r4 = virtualinvoke $r3.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r5 = virtualinvoke $r4.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r1);

        virtualinvoke $r5.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    protected void showCreateAccountDialog()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupFinal$CreateAccountDialogFragment $r1;
        android.app.FragmentManager $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r1 = staticinvoke <com.android.email.activity.setup.AccountSetupFinal$CreateAccountDialogFragment: com.android.email.activity.setup.AccountSetupFinal$CreateAccountDialogFragment newInstance()>();

        $r2 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r1.<com.android.email.activity.setup.AccountSetupFinal$CreateAccountDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r2, "CreateAccountDialogFragment");

        return;
    }

    protected void dismissCreateAccountDialog()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        android.app.DialogFragment r1;
        android.app.FragmentManager $r2;
        android.app.Fragment $r3;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r2 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        $r3 = virtualinvoke $r2.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("CreateAccountDialogFragment");

        r1 = (android.app.DialogFragment) $r3;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.DialogFragment: void dismiss()>();

     label1:
        return;
    }

    public void showCreateAccountErrorDialog()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupFinal$CreateAccountErrorDialogFragment $r1;
        android.app.FragmentManager $r2;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        $r1 = new com.android.email.activity.setup.AccountSetupFinal$CreateAccountErrorDialogFragment;

        specialinvoke $r1.<com.android.email.activity.setup.AccountSetupFinal$CreateAccountErrorDialogFragment: void <init>()>();

        $r2 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r1.<com.android.email.activity.setup.AccountSetupFinal$CreateAccountErrorDialogFragment: void show(android.app.FragmentManager,java.lang.String)>($r2, null);

        return;
    }

    private void initiateAccountFinalize()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        com.android.email.activity.setup.AccountSetupNamesFragment r1;
        com.android.emailcommon.provider.Account r2;
        java.lang.String r3, $r9;
        com.android.email.activity.setup.AccountFinalizeFragment r4;
        android.app.FragmentTransaction r5;
        com.android.email.activity.setup.AccountSetupFragment $r6, $r7;
        com.android.email.activity.setup.SetupDataFragment $r8;
        boolean $z0;
        android.app.FragmentManager $r10;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        r0.<com.android.email.activity.setup.AccountSetupFinal: boolean mIsProcessing> = 1;

        $r6 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        virtualinvoke $r6.<com.android.email.activity.setup.AccountSetupFragment: void setNextButtonEnabled(boolean)>(0);

        $r7 = specialinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.AccountSetupFragment getContentFragment()>();

        r1 = (com.android.email.activity.setup.AccountSetupNamesFragment) $r7;

        $r8 = r0.<com.android.email.activity.setup.AccountSetupFinal: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        r2 = virtualinvoke $r8.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r3 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupNamesFragment: java.lang.String getDescription()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<com.android.emailcommon.provider.Account: void setDisplayName(java.lang.String)>(r3);

     label1:
        $r9 = virtualinvoke r1.<com.android.email.activity.setup.AccountSetupNamesFragment: java.lang.String getSenderName()>();

        virtualinvoke r2.<com.android.emailcommon.provider.Account: void setSenderName(java.lang.String)>($r9);

        r4 = staticinvoke <com.android.email.activity.setup.AccountFinalizeFragment: com.android.email.activity.setup.AccountFinalizeFragment newInstance(com.android.emailcommon.provider.Account)>(r2);

        $r10 = virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: android.app.FragmentManager getFragmentManager()>();

        r5 = virtualinvoke $r10.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        virtualinvoke r5.<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>(r4, "AccountFinalizeFragment");

        virtualinvoke r5.<android.app.FragmentTransaction: int commit()>();

        return;
    }

    public void onAccountFinalizeFragmentComplete()
    {
        com.android.email.activity.setup.AccountSetupFinal r0;

        r0 := @this: com.android.email.activity.setup.AccountSetupFinal;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSetupFinal: void finish()>();

        return;
    }

    static java.lang.String access$002(com.android.email.activity.setup.AccountSetupFinal, java.lang.String)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.email.activity.setup.AccountSetupFinal: java.lang.String mOwnerName> = r1;

        return r1;
    }

    static java.util.Map access$102(com.android.email.activity.setup.AccountSetupFinal, java.util.Map)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.util.Map r1;

        r0 := @parameter0: com.android.email.activity.setup.AccountSetupFinal;

        r1 := @parameter1: java.util.Map;

        r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap> = r1;

        return r1;
    }

    static java.util.Map access$100(com.android.email.activity.setup.AccountSetupFinal)
    {
        com.android.email.activity.setup.AccountSetupFinal r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.email.activity.setup.AccountSetupFinal;

        $r1 = r0.<com.android.email.activity.setup.AccountSetupFinal: java.util.Map mExistingAccountsMap>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Boolean $r0;

        <com.android.email.activity.setup.AccountSetupFinal: int EXISTING_ACCOUNTS_LOADER_ID> = 1;

        <com.android.email.activity.setup.AccountSetupFinal: int OWNER_NAME_LOADER_ID> = 0;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_FINALIZE> = 14;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_NAMES> = 13;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_CREATING> = 12;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_OPTIONS> = 11;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_CHECKING_OUTGOING> = 10;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_MANUAL_OUTGOING> = 9;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_CHECKING_INCOMING> = 8;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_MANUAL_INCOMING> = 7;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_AUTO_DISCOVER> = 6;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_CHECKING_PRECONFIGURED> = 5;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_CREDENTIALS> = 4;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_AB> = 3;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_TYPE> = 2;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_BASICS_POST> = 1;

        <com.android.email.activity.setup.AccountSetupFinal: int STATE_BASICS> = 0;

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String CREDENTIALS_BACKSTACK_TAG> = "AccountSetupCredentialsFragment";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String CONTENT_FRAGMENT_TAG> = "AccountSetupContentFragment";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_PASSWORD_FAILED> = "AccountSetupFinal.passwordFailed";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_SKIP_AUTO_DISCOVER> = "AccountSetupFinal.noAuto";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_IS_PRE_CONFIGURED> = "AccountSetupFinal.preconfig";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_REPORT_AUTHENTICATOR_ERROR> = "AccountSetupFinal.authErr";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_AUTHENTICATOR_RESPONSE> = "AccountSetupFinal.authResp";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_PROVIDER> = "AccountSetupFinal.provider";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_STATE> = "AccountSetupFinal.state";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String SAVESTATE_KEY_IS_PROCESSING> = "AccountSetupFinal.is_processing";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String ACTION_JUMP_TO_OPTIONS> = "jumpToOptions";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String ACTION_JUMP_TO_OUTGOING> = "jumpToOutgoing";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String ACTION_JUMP_TO_INCOMING> = "jumpToIncoming";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String CREATE_ACCOUNT_SYNC_ALL_VALUE> = "ALL";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_SYNC_LOOKBACK> = "SYNC_LOOKBACK";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_OUTGOING> = "OUTGOING";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_INCOMING> = "INCOMING";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_PASSWORD> = "PASSWORD";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_USER> = "USER";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_CREATE_ACCOUNT_EMAIL> = "EMAIL";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_FLOW_ACCOUNT_TYPE> = "FLOW_ACCOUNT_TYPE";

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.String EXTRA_FLOW_MODE> = "FLOW_MODE";

        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        <com.android.email.activity.setup.AccountSetupFinal: java.lang.Boolean DEBUG_ALLOW_NON_TEST_HARNESS_CREATION> = $r0;

        return;
    }
}
