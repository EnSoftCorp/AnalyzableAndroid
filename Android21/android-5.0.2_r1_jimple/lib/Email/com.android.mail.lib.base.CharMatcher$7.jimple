final class com.android.mail.lib.base.CharMatcher$7 extends com.android.mail.lib.base.CharMatcher
{

    void <init>()
    {
        com.android.mail.lib.base.CharMatcher$7 r0;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        specialinvoke r0.<com.android.mail.lib.base.CharMatcher: void <init>()>();

        return;
    }

    public boolean matches(char)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        char c0;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        c0 := @parameter0: char;

        return 0;
    }

    public int indexIn(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return -1;
    }

    public int indexIn(java.lang.CharSequence, int)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        int i0, i1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        staticinvoke <com.android.mail.lib.base.Preconditions: int checkPositionIndex(int,int)>(i0, i1);

        return -1;
    }

    public int lastIndexIn(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return -1;
    }

    public boolean matchesAllOf(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean matchesNoneOf(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return 1;
    }

    public java.lang.String removeFrom(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, char)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        char c0;
        java.lang.String $r2;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1, r2;
        java.lang.String $r4;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.CharSequence;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String collapseFrom(java.lang.CharSequence, char)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        char c0;
        java.lang.String $r2;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        c0 := @parameter1: char;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String trimFrom(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;
        java.lang.String $r2;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public int countIn(java.lang.CharSequence)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.CharSequence r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.CharSequence;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return 0;
    }

    public com.android.mail.lib.base.CharMatcher and(com.android.mail.lib.base.CharMatcher)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        com.android.mail.lib.base.CharMatcher r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: com.android.mail.lib.base.CharMatcher;

        staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        return r0;
    }

    public com.android.mail.lib.base.CharMatcher or(com.android.mail.lib.base.CharMatcher)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        com.android.mail.lib.base.CharMatcher r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: com.android.mail.lib.base.CharMatcher;

        $r2 = staticinvoke <com.android.mail.lib.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.android.mail.lib.base.CharMatcher) $r2;

        return $r3;
    }

    public com.android.mail.lib.base.CharMatcher negate()
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        com.android.mail.lib.base.CharMatcher $r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        $r1 = <com.android.mail.lib.base.CharMatcher$7: com.android.mail.lib.base.CharMatcher ANY>;

        return $r1;
    }

    protected void setBits(com.android.mail.lib.base.CharMatcher$LookupTable)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        com.android.mail.lib.base.CharMatcher$LookupTable r1;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: com.android.mail.lib.base.CharMatcher$LookupTable;

        return;
    }

    public com.android.mail.lib.base.CharMatcher precomputed()
    {
        com.android.mail.lib.base.CharMatcher$7 r0;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        return r0;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.android.mail.lib.base.CharMatcher$7 r0;
        java.lang.Object r1;
        java.lang.Character $r2;
        boolean $z0;

        r0 := @this: com.android.mail.lib.base.CharMatcher$7;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.Character) r1;

        $z0 = specialinvoke r0.<com.android.mail.lib.base.CharMatcher: boolean apply(java.lang.Character)>($r2);

        return $z0;
    }
}
