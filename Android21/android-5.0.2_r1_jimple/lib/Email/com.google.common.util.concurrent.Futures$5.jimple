final class com.google.common.util.concurrent.Futures$5 extends java.lang.Object implements java.util.concurrent.Future
{
    final java.util.concurrent.Future val$future;
    final com.google.common.base.Function val$function;

    void <init>(java.util.concurrent.Future, com.google.common.base.Function)
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future r1;
        com.google.common.base.Function r2;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        r1 := @parameter0: java.util.concurrent.Future;

        r2 := @parameter1: com.google.common.base.Function;

        r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future> = r1;

        r0.<com.google.common.util.concurrent.Futures$5: com.google.common.base.Function val$function> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean cancel(boolean)
    {
        com.google.common.util.concurrent.Futures$5 r0;
        boolean z0, $z1;
        java.util.concurrent.Future $r1;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z1 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean cancel(boolean)>(z0);

        return $z1;
    }

    public boolean isCancelled()
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isCancelled()>();

        return $z0;
    }

    public boolean isDone()
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $z0 = interfaceinvoke $r1.<java.util.concurrent.Future: boolean isDone()>();

        return $z0;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.util.concurrent.Future $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        $r1 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $r2 = interfaceinvoke $r1.<java.util.concurrent.Future: java.lang.Object get()>();

        $r3 = specialinvoke r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object applyTransformation(java.lang.Object)>($r2);

        return $r3;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        com.google.common.util.concurrent.Futures$5 r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.Future $r2;
        java.lang.Object $r3, $r4;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<com.google.common.util.concurrent.Futures$5: java.util.concurrent.Future val$future>;

        $r3 = interfaceinvoke $r2.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l0, r1);

        $r4 = specialinvoke r0.<com.google.common.util.concurrent.Futures$5: java.lang.Object applyTransformation(java.lang.Object)>($r3);

        return $r4;
    }

    private java.lang.Object applyTransformation(java.lang.Object) throws java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.Futures$5 r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r5;
        com.google.common.base.Function $r3;
        java.util.concurrent.ExecutionException $r6;

        r0 := @this: com.google.common.util.concurrent.Futures$5;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r3 = r0.<com.google.common.util.concurrent.Futures$5: com.google.common.base.Function val$function>;

        $r4 = interfaceinvoke $r3.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.util.concurrent.ExecutionException;

        specialinvoke $r6.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
