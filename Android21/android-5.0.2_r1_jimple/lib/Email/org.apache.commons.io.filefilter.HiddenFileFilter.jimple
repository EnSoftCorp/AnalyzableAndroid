public class org.apache.commons.io.filefilter.HiddenFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    public static final org.apache.commons.io.filefilter.IOFileFilter HIDDEN;
    public static final org.apache.commons.io.filefilter.IOFileFilter VISIBLE;

    protected void <init>()
    {
        org.apache.commons.io.filefilter.HiddenFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.HiddenFileFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.HiddenFileFilter r0;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.apache.commons.io.filefilter.HiddenFileFilter;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isHidden()>();

        return $z0;
    }

    static void <clinit>()
    {
        org.apache.commons.io.filefilter.HiddenFileFilter $r0;
        org.apache.commons.io.filefilter.NotFileFilter $r1;
        org.apache.commons.io.filefilter.IOFileFilter $r2;

        $r0 = new org.apache.commons.io.filefilter.HiddenFileFilter;

        specialinvoke $r0.<org.apache.commons.io.filefilter.HiddenFileFilter: void <init>()>();

        <org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter HIDDEN> = $r0;

        $r1 = new org.apache.commons.io.filefilter.NotFileFilter;

        $r2 = <org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter HIDDEN>;

        specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2);

        <org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter VISIBLE> = $r1;

        return;
    }
}
