class com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader extends com.android.mail.ui.MailAsyncTaskLoader
{
    private final long mAccountId;
    public final boolean mShowDialog;
    public final boolean mPasswordExpiring;
    public final boolean mPasswordExpired;
    private final android.content.Context mContext;

    void <init>(android.content.Context, long, boolean, boolean, boolean)
    {
        com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader r0;
        android.content.Context r1;
        long l0;
        boolean z0, z1, z2;

        r0 := @this: com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        specialinvoke r0.<com.android.mail.ui.MailAsyncTaskLoader: void <init>(android.content.Context)>(r1);

        r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: android.content.Context mContext> = r1;

        r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: long mAccountId> = l0;

        r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: boolean mShowDialog> = z0;

        r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: boolean mPasswordExpiring> = z1;

        r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: boolean mPasswordExpired> = z2;

        return;
    }

    public com.android.emailcommon.provider.Account loadInBackground()
    {
        com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader r0;
        com.android.emailcommon.provider.Account r1;
        long l0, $l1;
        android.content.Context $r2, $r3, $r5;
        byte $b2;
        com.android.emailcommon.provider.Policy $r6;

        r0 := @this: com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader;

        $r2 = r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: android.content.Context mContext>;

        $l1 = r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: long mAccountId>;

        r1 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>($r2, $l1);

        if r1 != null goto label1;

        return null;

     label1:
        l0 = r1.<com.android.emailcommon.provider.Account: long mPolicyKey>;

        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label2;

        $r5 = r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: android.content.Context mContext>;

        $r6 = staticinvoke <com.android.emailcommon.provider.Policy: com.android.emailcommon.provider.Policy restorePolicyWithId(android.content.Context,long)>($r5, l0);

        r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy> = $r6;

     label2:
        $r3 = r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: android.content.Context mContext>;

        virtualinvoke r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>($r3);

        return r1;
    }

    protected void onDiscardResult(com.android.emailcommon.provider.Account)
    {
        com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader r0;
        com.android.emailcommon.provider.Account r1;

        r0 := @this: com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader;

        r1 := @parameter0: com.android.emailcommon.provider.Account;

        return;
    }

    protected volatile void onDiscardResult(java.lang.Object)
    {
        com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader r0;
        java.lang.Object r1;
        com.android.emailcommon.provider.Account $r2;

        r0 := @this: com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.emailcommon.provider.Account) r1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: void onDiscardResult(com.android.emailcommon.provider.Account)>($r2);

        return;
    }

    public volatile java.lang.Object loadInBackground()
    {
        com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader r0;
        com.android.emailcommon.provider.Account $r1;

        r0 := @this: com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader;

        $r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountSecurity$AccountAndPolicyLoader: com.android.emailcommon.provider.Account loadInBackground()>();

        return $r1;
    }
}
