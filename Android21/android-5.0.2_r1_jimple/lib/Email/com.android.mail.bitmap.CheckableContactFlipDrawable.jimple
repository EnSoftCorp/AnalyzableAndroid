public class com.android.mail.bitmap.CheckableContactFlipDrawable extends com.android.mail.bitmap.FlipDrawable implements android.animation.ValueAnimator$AnimatorUpdateListener
{
    private final com.android.mail.bitmap.ContactDrawable mContactDrawable;
    private final com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable;
    private final android.animation.ValueAnimator mCheckmarkScaleAnimator;
    private final android.animation.ValueAnimator mCheckmarkAlphaAnimator;
    private static final int POST_FLIP_DURATION_MS;
    private static final float CHECKMARK_SCALE_BEGIN_VALUE;
    private static final float CHECKMARK_ALPHA_BEGIN_VALUE;
    private static final float END_VALUE;

    public void <init>(android.content.res.Resources, int)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable r0;
        android.content.res.Resources r1;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        long l1, l2;
        com.android.mail.bitmap.ContactDrawable $r2, $r5;
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable $r3, $r7;
        android.graphics.drawable.Drawable $r4, $r6;
        float[] $r8, $r14;
        android.animation.ValueAnimator $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        $r2 = new com.android.mail.bitmap.ContactDrawable;

        specialinvoke $r2.<com.android.mail.bitmap.ContactDrawable: void <init>(android.content.res.Resources)>(r1);

        $r3 = new com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        specialinvoke $r3.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void <init>(android.content.res.Resources)>(r1);

        specialinvoke r0.<com.android.mail.bitmap.FlipDrawable: void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,int,int,int)>($r2, $r3, i0, 0, 150);

        $r4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.graphics.drawable.Drawable mFront>;

        $r5 = (com.android.mail.bitmap.ContactDrawable) $r4;

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.ContactDrawable mContactDrawable> = $r5;

        $r6 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.graphics.drawable.Drawable mBack>;

        $r7 = (com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable) $r6;

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable> = $r7;

        $i5 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: int mPreFlipDurationMs>;

        $i3 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: int mFlipDurationMs>;

        $i4 = $i3 / 2;

        $i7 = $i5 + $i4;

        l1 = (long) $i7;

        $i6 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: int mFlipDurationMs>;

        $i8 = $i6 / 2;

        $i9 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: int mPostFlipDurationMs>;

        $i10 = $i8 + $i9;

        l2 = (long) $i10;

        $r8 = newarray (float)[2];

        $r8[0] = 0.2F;

        $r8[1] = 1.0F;

        $r10 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r8);

        $r9 = virtualinvoke $r10.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l2);

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator> = $r9;

        $r12 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r12.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $r11 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r11.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        $r14 = newarray (float)[2];

        $r14[0] = 0.0F;

        $r14[1] = 1.0F;

        $r13 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>($r14);

        $r16 = virtualinvoke $r13.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l2);

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator> = $r16;

        $r15 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r15.<android.animation.ValueAnimator: void setStartDelay(long)>(l1);

        $r17 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r17.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>(r0);

        return;
    }

    public void reset(boolean)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable r0;
        boolean z0;
        android.animation.ValueAnimator $r1, $r2, $r3;
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable $r4, $r5;
        float $f0, $f1;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.android.mail.bitmap.FlipDrawable: void reset(boolean)>(z0);

        $r1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void cancel()>();

        $r3 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void cancel()>();

        $r4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable>;

        if z0 == 0 goto label2;

        $f1 = 0.2F;

        goto label3;

     label2:
        $f1 = 1.0F;

     label3:
        virtualinvoke $r4.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void setScaleAnimatorValue(float)>($f1);

        $r5 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable>;

        if z0 == 0 goto label4;

        $f0 = 0.0F;

        goto label5;

     label4:
        $f0 = 1.0F;

     label5:
        virtualinvoke $r5.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void setAlphaAnimatorValue(float)>($f0);

        return;
    }

    public void flip()
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable r0;
        android.animation.ValueAnimator $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable;

        specialinvoke r0.<com.android.mail.bitmap.FlipDrawable: void flip()>();

        $r1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        $z0 = virtualinvoke $r1.<android.animation.ValueAnimator: boolean isStarted()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r6.<android.animation.ValueAnimator: void reverse()>();

        $r7 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r7.<android.animation.ValueAnimator: void reverse()>();

        goto label3;

     label1:
        $z1 = virtualinvoke r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: boolean getSideFlippingTowards()>();

        if $z1 != 0 goto label2;

        $r4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r4.<android.animation.ValueAnimator: void start()>();

        $r5 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r5.<android.animation.ValueAnimator: void start()>();

        goto label3;

     label2:
        $r2 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void reverse()>();

        $r3 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void reverse()>();

     label3:
        return;
    }

    public com.android.mail.bitmap.ContactDrawable getContactDrawable()
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable r0;
        com.android.mail.bitmap.ContactDrawable $r1;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable;

        $r1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.ContactDrawable mContactDrawable>;

        return $r1;
    }

    public void onAnimationUpdate(android.animation.ValueAnimator)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable r0;
        android.animation.ValueAnimator r1, $r4, $r5;
        float f0;
        java.lang.Object $r2;
        java.lang.Float $r3;
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable $r6, $r7;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable;

        r1 := @parameter0: android.animation.ValueAnimator;

        $r2 = virtualinvoke r1.<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>();

        $r3 = (java.lang.Float) $r2;

        f0 = virtualinvoke $r3.<java.lang.Float: float floatValue()>();

        $r4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkScaleAnimator>;

        if r1 != $r4 goto label1;

        $r7 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable>;

        virtualinvoke $r7.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void setScaleAnimatorValue(float)>(f0);

        goto label2;

     label1:
        $r5 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: android.animation.ValueAnimator mCheckmarkAlphaAnimator>;

        if r1 != $r5 goto label2;

        $r6 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable mCheckmarkDrawable>;

        virtualinvoke $r6.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void setAlphaAnimatorValue(float)>(f0);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.mail.bitmap.CheckableContactFlipDrawable: float END_VALUE> = 1.0F;

        <com.android.mail.bitmap.CheckableContactFlipDrawable: float CHECKMARK_ALPHA_BEGIN_VALUE> = 0.0F;

        <com.android.mail.bitmap.CheckableContactFlipDrawable: float CHECKMARK_SCALE_BEGIN_VALUE> = 0.2F;

        <com.android.mail.bitmap.CheckableContactFlipDrawable: int POST_FLIP_DURATION_MS> = 150;

        return;
    }
}
