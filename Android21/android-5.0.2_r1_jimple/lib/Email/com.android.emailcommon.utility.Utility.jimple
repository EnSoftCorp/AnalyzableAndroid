public class com.android.emailcommon.utility.Utility extends java.lang.Object
{
    public static final java.nio.charset.Charset UTF_8;
    public static final java.nio.charset.Charset ASCII;
    public static final java.lang.String[] EMPTY_STRINGS;
    private static final java.util.regex.Pattern DATE_CLEANUP_PATTERN_WRONG_TIMEZONE;
    private static android.os.Handler sMainThreadHandler;
    private static final java.lang.String HOSTAUTH_WHERE_CREDENTIALS;
    private static final java.lang.String ACCOUNT_WHERE_HOSTAUTH;
    private static final com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mFullDateTimeFormat;
    private static final com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevDateTimeFormat;
    private static final com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevEmailDateTimeFormat;
    private static final com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormat;
    private static final com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormatWithMillis;
    private static final com.android.emailcommon.utility.Utility$CursorGetter LONG_GETTER;
    private static final com.android.emailcommon.utility.Utility$CursorGetter INT_GETTER;
    private static final com.android.emailcommon.utility.Utility$CursorGetter STRING_GETTER;
    private static final com.android.emailcommon.utility.Utility$CursorGetter BLOB_GETTER;

    public void <init>()
    {
        com.android.emailcommon.utility.Utility r0;

        r0 := @this: com.android.emailcommon.utility.Utility;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.os.Handler getMainThreadHandler()
    {
        android.os.Handler $r0, $r1, $r2;
        android.os.Looper $r3;

        $r0 = <com.android.emailcommon.utility.Utility: android.os.Handler sMainThreadHandler>;

        if $r0 != null goto label1;

        $r2 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        <com.android.emailcommon.utility.Utility: android.os.Handler sMainThreadHandler> = $r2;

     label1:
        $r1 = <com.android.emailcommon.utility.Utility: android.os.Handler sMainThreadHandler>;

        return $r1;
    }

    public static boolean arrayContains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        i0 = staticinvoke <com.android.emailcommon.utility.Utility: int arrayIndex(java.lang.Object[],java.lang.Object)>(r0, r1);

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int arrayIndex(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0;
        java.lang.Object r1, $r2;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        i0 = 0;

        i1 = lengthof r0;

     label1:
        if i0 >= i1 goto label3;

        $r2 = r0[i0];

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    public static java.lang.String combine(java.lang.Object[], char)
    {
        java.lang.Object[] r0;
        char c0;
        java.lang.StringBuilder r1, $r2;
        int i1, $i2, $i3, $i4;
        java.lang.String $r3, $r5;
        java.lang.Object $r4;

        r0 := @parameter0: java.lang.Object[];

        c0 := @parameter1: char;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i1 = 0;

     label2:
        $i2 = lengthof r0;

        if i1 >= $i2 goto label4;

        $r4 = r0[i1];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i3 = lengthof r0;

        $i4 = $i3 - 1;

        if i1 >= $i4 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static boolean isPortFieldValid(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.CharSequence r1;
        java.lang.Integer r2;
        boolean $z0, $z1;
        java.lang.String $r4;
        int $i0, $i1, $i2;
        java.lang.NumberFormatException $r5;

        r0 := @parameter0: android.widget.TextView;

        r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r4 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        return 0;

     label4:
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i1 <= 0 goto label5;

        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i2 >= 65536 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static boolean isServerNameValid(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = staticinvoke <com.android.emailcommon.utility.Utility: boolean isServerNameValid(java.lang.String)>($r2);

        return $z0;
    }

    public static boolean isServerNameValid(java.lang.String)
    {
        java.lang.String r0, r4;
        boolean $z0;
        java.net.URI $r2;
        java.net.URISyntaxException $r3;

        r0 := @parameter0: java.lang.String;

        r4 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = new java.net.URI;

        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>("http", null, r4, -1, null, null, null);

     label2:
        return 1;

     label3:
        $r3 := @caughtexception;

        return 0;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static com.android.emailcommon.provider.Account findExistingAccount(android.content.Context, long, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        long l0, l1, l2;
        java.lang.String r1, r2, r4, $r17;
        android.content.ContentResolver r3;
        android.database.Cursor r5, r6;
        com.android.emailcommon.provider.Account r7, r8;
        java.lang.Throwable r9, r10, $r18, $r20;
        java.lang.String[] $r11, $r13, $r14, $r15;
        android.net.Uri $r12, $r16;
        boolean $z0, $z1;
        byte $b3;
        com.android.emailcommon.provider.ProviderUnavailableException $r19;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "\\_");

        $r12 = <com.android.emailcommon.provider.HostAuth: android.net.Uri CONTENT_URI>;

        $r13 = <com.android.emailcommon.provider.HostAuth: java.lang.String[] ID_PROJECTION>;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = r1;

        $r11[1] = r4;

        r5 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r12, $r13, "address like ? and login like ?  ESCAPE \'\\\' and protocol not like \"smtp\"", $r11, null);

        if r5 != null goto label01;

        $r19 = new com.android.emailcommon.provider.ProviderUnavailableException;

        specialinvoke $r19.<com.android.emailcommon.provider.ProviderUnavailableException: void <init>()>();

        throw $r19;

     label01:
        $z0 = interfaceinvoke r5.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label10;

        l1 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(0);

        $r16 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r15 = <com.android.emailcommon.provider.Account: java.lang.String[] ID_PROJECTION>;

        $r14 = newarray (java.lang.String)[1];

        $r17 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r14[0] = $r17;

        r6 = virtualinvoke r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r16, $r15, "hostAuthKeyRecv=?", $r14, null);

     label02:
        $z1 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label06;

        l2 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

        $b3 = l2 cmp l0;

        if $b3 == 0 goto label05;

        r7 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, l2);

        if r7 == null goto label05;

        r8 = r7;

     label03:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label04:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return r8;

     label05:
        goto label02;

     label06:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        goto label09;

     label07:
        $r20 := @caughtexception;

        r9 = $r20;

     label08:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        throw r9;

     label09:
        goto label01;

     label10:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label13;

     label11:
        $r18 := @caughtexception;

        r10 = $r18;

     label12:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        throw r10;

     label13:
        return null;

        catch java.lang.Throwable from label02 to label03 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static long parseDateTimeToMillis(java.lang.String) throws java.text.ParseException
    {
        java.lang.String r0;
        java.util.GregorianCalendar $r1;
        long $l0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.emailcommon.utility.Utility: java.util.GregorianCalendar parseDateTimeToCalendar(java.lang.String)>(r0);

        $l0 = virtualinvoke $r1.<java.util.GregorianCalendar: long getTimeInMillis()>();

        return $l0;
    }

    public static java.util.GregorianCalendar parseDateTimeToCalendar(java.lang.String) throws java.text.ParseException
    {
        java.lang.String r0;
        java.util.GregorianCalendar r1, $r2;
        java.util.TimeZone $r3;
        int $i0;
        com.android.emailcommon.utility.Utility$ThreadLocalDateFormat $r4, $r6;
        java.util.Date $r5, $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.util.GregorianCalendar;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);

        r1 = $r2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 > 8 goto label1;

        $r6 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevDateTimeFormat>;

        $r7 = virtualinvoke $r6.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: java.util.Date parse(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTime(java.util.Date)>($r7);

        goto label2;

     label1:
        $r4 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mFullDateTimeFormat>;

        $r5 = virtualinvoke $r4.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: java.util.Date parse(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTime(java.util.Date)>($r5);

     label2:
        return r1;
    }

    public static long parseEmailDateTimeToMillis(java.lang.String) throws java.text.ParseException
    {
        java.lang.String r0;
        java.util.GregorianCalendar r1, $r2;
        java.util.TimeZone $r3;
        int $i0, $i1;
        com.android.emailcommon.utility.Utility$ThreadLocalDateFormat $r4, $r6, $r8;
        java.util.Date $r5, $r7, $r9;
        long $l2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.util.GregorianCalendar;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        specialinvoke $r2.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r3);

        r1 = $r2;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 > 10 goto label1;

        $r8 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevEmailDateTimeFormat>;

        $r9 = virtualinvoke $r8.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: java.util.Date parse(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTime(java.util.Date)>($r9);

        goto label3;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i1 > 20 goto label2;

        $r6 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormat>;

        $r7 = virtualinvoke $r6.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: java.util.Date parse(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTime(java.util.Date)>($r7);

        goto label3;

     label2:
        $r4 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormatWithMillis>;

        $r5 = virtualinvoke $r4.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: java.util.Date parse(java.lang.String)>(r0);

        virtualinvoke r1.<java.util.GregorianCalendar: void setTime(java.util.Date)>($r5);

     label3:
        $l2 = virtualinvoke r1.<java.util.GregorianCalendar: long getTimeInMillis()>();

        return $l2;
    }

    private static byte[] encode(java.nio.charset.Charset, java.lang.String)
    {
        java.nio.charset.Charset r0;
        java.lang.String r1;
        java.nio.ByteBuffer r2;
        byte[] r3;
        java.nio.CharBuffer $r4;
        int $i0;

        r0 := @parameter0: java.nio.charset.Charset;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(r1);

        r2 = virtualinvoke r0.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.nio.CharBuffer)>($r4);

        $i0 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        r3 = newarray (byte)[$i0];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        return r3;
    }

    private static java.lang.String decode(java.nio.charset.Charset, byte[])
    {
        java.nio.charset.Charset r0;
        byte[] r1;
        java.nio.CharBuffer r2;
        java.nio.ByteBuffer $r3;
        java.lang.String $r4;
        char[] $r5;
        int $i0;

        r0 := @parameter0: java.nio.charset.Charset;

        r1 := @parameter1: byte[];

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r2 = virtualinvoke r0.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r4 = new java.lang.String;

        $r5 = virtualinvoke r2.<java.nio.CharBuffer: char[] array()>();

        $i0 = virtualinvoke r2.<java.nio.CharBuffer: int length()>();

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i0);

        return $r4;
    }

    public static byte[] toUtf8(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.emailcommon.utility.Utility: java.nio.charset.Charset UTF_8>;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: byte[] encode(java.nio.charset.Charset,java.lang.String)>($r1, r0);

        return $r2;
    }

    public static java.lang.String fromUtf8(byte[])
    {
        byte[] r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        $r1 = <com.android.emailcommon.utility.Utility: java.nio.charset.Charset UTF_8>;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String decode(java.nio.charset.Charset,byte[])>($r1, r0);

        return $r2;
    }

    public static byte[] toAscii(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.emailcommon.utility.Utility: java.nio.charset.Charset ASCII>;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: byte[] encode(java.nio.charset.Charset,java.lang.String)>($r1, r0);

        return $r2;
    }

    public static java.lang.String fromAscii(byte[])
    {
        byte[] r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        $r1 = <com.android.emailcommon.utility.Utility: java.nio.charset.Charset ASCII>;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String decode(java.nio.charset.Charset,byte[])>($r1, r0);

        return $r2;
    }

    public static boolean isFirstUtf8Byte(byte)
    {
        byte b0;
        short $s1;
        boolean $z0;

        b0 := @parameter0: byte;

        $s1 = b0 & 192;

        if $s1 == 128 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String byteToHex(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.StringBuilder byteToHex(java.lang.StringBuilder,int)>($r0, i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.StringBuilder byteToHex(java.lang.StringBuilder, int)
    {
        java.lang.StringBuilder r0;
        int i0, $i1, $i3, i5;
        java.lang.String $r1, $r3;
        char $c2, $c4;

        r0 := @parameter0: java.lang.StringBuilder;

        i0 := @parameter1: int;

        i5 = i0 & 255;

        $r1 = "0123456789ABCDEF";

        $i1 = i5 >> 4;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r3 = "0123456789ABCDEF";

        $i3 = i5 & 15;

        $c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i3);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        return r0;
    }

    public static java.lang.String replaceBareLfWithCrlf(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "\r\n");

        return $r2;
    }

    public static void cancelTaskInterrupt(android.os.AsyncTask)
    {
        android.os.AsyncTask r0;

        r0 := @parameter0: android.os.AsyncTask;

        staticinvoke <com.android.emailcommon.utility.Utility: void cancelTask(android.os.AsyncTask,boolean)>(r0, 1);

        return;
    }

    public static void cancelTask(android.os.AsyncTask, boolean)
    {
        android.os.AsyncTask r0;
        boolean z0;
        android.os.AsyncTask$Status $r1, $r2;

        r0 := @parameter0: android.os.AsyncTask;

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>();

        $r2 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status FINISHED>;

        if $r1 == $r2 goto label1;

        virtualinvoke r0.<android.os.AsyncTask: boolean cancel(boolean)>(z0);

     label1:
        return;
    }

    public static java.lang.String getSmallHash(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.security.MessageDigest r1;
        byte[] $r3, $r4;
        java.security.NoSuchAlgorithmException $r6;
        int i0;

        r0 := @parameter0: java.lang.String;

     label1:
        r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        return null;

     label4:
        $r3 = staticinvoke <com.android.emailcommon.utility.Utility: byte[] toUtf8(java.lang.String)>(r0);

        virtualinvoke r1.<java.security.MessageDigest: void update(byte[])>($r3);

        $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>();

        i0 = staticinvoke <com.android.emailcommon.utility.Utility: int getSmallHashFromSha1(byte[])>($r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        return $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    static int getSmallHashFromSha1(byte[])
    {
        byte[] r0;
        byte b0, $b1, $b2, $b3, $b5, $b10, $b16;
        int $i4, $i7, $i8, $i9, $i12, $i13, $i14, $i17, $i18;
        short $s6, $s11, $s15;

        r0 := @parameter0: byte[];

        $b1 = r0[19];

        b0 = $b1 & 15;

        $b2 = r0[b0];

        $b3 = $b2 & 127;

        $i8 = $b3 << 24;

        $i4 = b0 + 1;

        $b5 = r0[$i4];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        $i13 = $i8 | $i7;

        $i9 = b0 + 2;

        $b10 = r0[$i9];

        $s11 = $b10 & 255;

        $i12 = $s11 << 8;

        $i18 = $i13 | $i12;

        $i14 = b0 + 3;

        $b16 = r0[$i14];

        $s15 = $b16 & 255;

        $i17 = $i18 | $s15;

        return $i17;
    }

    public static java.lang.String cleanUpMimeDate(java.lang.String)
    {
        java.lang.String r0, r3;
        boolean $z0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = <com.android.emailcommon.utility.Utility: java.util.regex.Pattern DATE_CLEANUP_PATTERN_WRONG_TIMEZONE>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        r3 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>("$1");

        return r3;
    }

    public static java.io.ByteArrayInputStream streamFromAsciiString(java.lang.String)
    {
        java.lang.String r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: byte[] toAscii(java.lang.String)>(r0);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r1;
    }

    public static void showToast(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.lang.String getString(int)>(i0);

        staticinvoke <com.android.emailcommon.utility.Utility: void showToast(android.content.Context,java.lang.String)>(r0, $r2);

        return;
    }

    public static void showToast(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.os.Handler $r2;
        com.android.emailcommon.utility.Utility$1 $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.emailcommon.utility.Utility: android.os.Handler getMainThreadHandler()>();

        $r3 = new com.android.emailcommon.utility.Utility$1;

        specialinvoke $r3.<com.android.emailcommon.utility.Utility$1: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public static android.os.AsyncTask runAsync(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        com.android.emailcommon.utility.Utility$2 $r1;
        java.lang.Void[] $r2;
        java.util.concurrent.Executor $r3;
        android.os.AsyncTask $r4;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = new com.android.emailcommon.utility.Utility$2;

        specialinvoke $r1.<com.android.emailcommon.utility.Utility$2: void <init>(java.lang.Runnable)>(r0);

        $r3 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r2 = newarray (java.lang.Void)[0];

        $r4 = virtualinvoke $r1.<com.android.emailcommon.utility.Utility$2: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r3, $r2);

        return $r4;
    }

    public static java.io.File createUniqueFile(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.File r0, $r3;
        java.lang.String r1;
        com.android.emailcommon.utility.Utility$NewFileCreator $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.emailcommon.utility.Utility$NewFileCreator: com.android.emailcommon.utility.Utility$NewFileCreator DEFAULT>;

        $r3 = staticinvoke <com.android.emailcommon.utility.Utility: java.io.File createUniqueFileInternal(com.android.emailcommon.utility.Utility$NewFileCreator,java.io.File,java.lang.String)>($r2, r0, r1);

        return $r3;
    }

    static java.io.File createUniqueFileInternal(com.android.emailcommon.utility.Utility$NewFileCreator, java.io.File, java.lang.String) throws java.io.IOException
    {
        com.android.emailcommon.utility.Utility$NewFileCreator r0;
        java.io.File r1, r3, r6, $r7, $r8;
        java.lang.String r2, r4, r5, $r13, $r14;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15;

        r0 := @parameter0: com.android.emailcommon.utility.Utility$NewFileCreator;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.String;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, r2);

        r3 = $r7;

        $z0 = interfaceinvoke r0.<com.android.emailcommon.utility.Utility$NewFileCreator: boolean createNewFile(java.io.File)>(r3);

        if $z0 == 0 goto label1;

        return r3;

     label1:
        i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 == -1 goto label2;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(i0);

        goto label3;

     label2:
        r4 = r2;

        r5 = "";

     label3:
        i1 = 2;

     label4:
        if i1 >= 2147483647 goto label6;

        $r8 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r14);

        r6 = $r8;

        $z1 = interfaceinvoke r0.<com.android.emailcommon.utility.Utility$NewFileCreator: boolean createNewFile(java.io.File)>(r6);

        if $z1 == 0 goto label5;

        return r6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        return null;
    }

    static android.net.Uri buildLimitOneUri(android.net.Uri)
    {
        android.net.Uri r0, $r5;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @parameter0: android.net.Uri;

        $r1 = "content";

        $r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r4 = virtualinvoke r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $r5 = staticinvoke <com.android.emailcommon.provider.EmailContent: android.net.Uri uriWithLimit(android.net.Uri,int)>(r0, 1);

        return $r5;

     label1:
        return r0;
    }

    public static java.lang.Object getFirstRowColumn(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int, java.lang.Object, com.android.emailcommon.utility.Utility$CursorGetter)
    {
        android.content.Context r0;
        android.net.Uri r1, r13;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        java.lang.Object r6, r9;
        com.android.emailcommon.utility.Utility$CursorGetter r7;
        android.database.Cursor r8;
        java.lang.Throwable r10, $r12;
        android.content.ContentResolver $r11;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.Object;

        r7 := @parameter8: com.android.emailcommon.utility.Utility$CursorGetter;

        r13 = staticinvoke <com.android.emailcommon.utility.Utility: android.net.Uri buildLimitOneUri(android.net.Uri)>(r1);

        $r11 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r8 = virtualinvoke $r11.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r13, r2, r3, r4, r5);

        if r8 == null goto label6;

     label1:
        $z0 = interfaceinvoke r8.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        r9 = interfaceinvoke r7.<com.android.emailcommon.utility.Utility$CursorGetter: java.lang.Object get(android.database.Cursor,int)>(r8, i0);

     label2:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        return r9;

     label3:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r12 := @caughtexception;

        r10 = $r12;

     label5:
        interfaceinvoke r8.<android.database.Cursor: void close()>();

        throw r10;

     label6:
        return r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static java.lang.Long getFirstRowLong(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        com.android.emailcommon.utility.Utility$CursorGetter $r6;
        java.lang.Object $r7;
        java.lang.Long $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        $r6 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter LONG_GETTER>;

        $r7 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, null, $r6);

        $r8 = (java.lang.Long) $r7;

        return $r8;
    }

    public static java.lang.Long getFirstRowLong(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int, java.lang.Long)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        java.lang.Long r6, $r9;
        com.android.emailcommon.utility.Utility$CursorGetter $r7;
        java.lang.Object $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.Long;

        $r7 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter LONG_GETTER>;

        $r8 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, r6, $r7);

        $r9 = (java.lang.Long) $r8;

        return $r9;
    }

    public static java.lang.Integer getFirstRowInt(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        com.android.emailcommon.utility.Utility$CursorGetter $r6;
        java.lang.Object $r7;
        java.lang.Integer $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        $r6 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter INT_GETTER>;

        $r7 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, null, $r6);

        $r8 = (java.lang.Integer) $r7;

        return $r8;
    }

    public static java.lang.Integer getFirstRowInt(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int, java.lang.Integer)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        java.lang.Integer r6, $r9;
        com.android.emailcommon.utility.Utility$CursorGetter $r7;
        java.lang.Object $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.Integer;

        $r7 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter INT_GETTER>;

        $r8 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, r6, $r7);

        $r9 = (java.lang.Integer) $r8;

        return $r9;
    }

    public static java.lang.String getFirstRowString(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, $r6;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        $r6 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String getFirstRowString(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.String)>(r0, r1, r2, r3, r4, r5, i0, null);

        return $r6;
    }

    public static java.lang.String getFirstRowString(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int, java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, r6, $r9;
        int i0;
        com.android.emailcommon.utility.Utility$CursorGetter $r7;
        java.lang.Object $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r6 := @parameter7: java.lang.String;

        $r7 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter STRING_GETTER>;

        $r8 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, r6, $r7);

        $r9 = (java.lang.String) $r8;

        return $r9;
    }

    public static byte[] getFirstRowBlob(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, int, byte[])
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        int i0;
        byte[] r6, $r9;
        com.android.emailcommon.utility.Utility$CursorGetter $r7;
        java.lang.Object $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        r5 := @parameter5: java.lang.String;

        i0 := @parameter6: int;

        r6 := @parameter7: byte[];

        $r7 = <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter BLOB_GETTER>;

        $r8 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.Object getFirstRowColumn(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int,java.lang.Object,com.android.emailcommon.utility.Utility$CursorGetter)>(r0, r1, r2, r3, r4, r5, i0, r6, $r7);

        $r9 = (byte[]) $r8;

        return $r9;
    }

    public static boolean attachmentExists(android.content.Context, com.android.emailcommon.provider.EmailContent$Attachment)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.EmailContent$Attachment r1;
        java.lang.String r2, $r12, $r15, r20;
        android.net.Uri r3, r21;
        java.io.InputStream r4, r22;
        byte[] $r7;
        boolean $z0, $z1;
        android.content.ContentResolver $r8, $r9;
        java.lang.Object[] $r10, $r16;
        java.io.FileNotFoundException $r11, $r14, r19;
        java.lang.RuntimeException $r13, r24;
        java.io.IOException $r17, $r18;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.EmailContent$Attachment;

        if r1 != null goto label01;

        return 0;

     label01:
        $r7 = r1.<com.android.emailcommon.provider.EmailContent$Attachment: byte[] mContentBytes>;

        if $r7 == null goto label02;

        return 1;

     label02:
        r2 = virtualinvoke r1.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getCachedFileUri()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label09;

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

     label03:
        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r9.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r3);

     label04:
        virtualinvoke r4.<java.io.InputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r17 := @caughtexception;

     label07:
        return 1;

     label08:
        $r11 := @caughtexception;

        r19 = $r11;

        $r12 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r12, r19, "not able to open cached file", $r10);

     label09:
        r20 = virtualinvoke r1.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getContentUri()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r20);

        if $z1 == 0 goto label10;

        return 0;

     label10:
        r21 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r20);

     label11:
        $r8 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r22 = virtualinvoke $r8.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r21);

     label12:
        virtualinvoke r22.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r18 := @caughtexception;

     label15:
        return 1;

     label16:
        $r14 := @caughtexception;

     label17:
        return 0;

     label18:
        $r13 := @caughtexception;

        r24 = $r13;

        $r15 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r15, r24, "attachmentExists RuntimeException", $r16);

        return 0;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label03 to label07 with label08;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.FileNotFoundException from label11 to label15 with label16;
        catch java.lang.RuntimeException from label10 to label15 with label18;
        catch java.lang.RuntimeException from label16 to label17 with label18;
    }

    public static boolean hasUnloadedAttachments(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l5, $l7, $l9, $l14;
        com.android.emailcommon.provider.EmailContent$Message r1;
        com.android.emailcommon.provider.EmailContent$Attachment[] r2, r3;
        int i1, i2, $i3, $i4, $i10, $i11, $i13, $i15;
        com.android.emailcommon.provider.EmailContent$Attachment r4;
        com.android.emailcommon.provider.Account r5;
        boolean $z0;
        java.lang.String $r6, $r9, $r11;
        android.content.ContentValues $r7, r14;
        android.net.Uri $r8, $r13;
        java.lang.Object[] $r10;
        java.lang.Long $r12;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>(r0, l0);

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment[] restoreAttachmentsWithMessageId(android.content.Context,long)>(r0, l0);

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label8;

        r4 = r3[i2];

        $z0 = staticinvoke <com.android.emailcommon.utility.Utility: boolean attachmentExists(android.content.Context,com.android.emailcommon.provider.EmailContent$Attachment)>(r0, r4);

        if $z0 != 0 goto label7;

        $i3 = r4.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i4 = $i3 & 6;

        if $i4 != 0 goto label5;

        $r11 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r10 = newarray (java.lang.Object)[2];

        $r9 = r4.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        $r10[0] = $r9;

        $l7 = r4.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        $r10[1] = $r12;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r11, "Unloaded attachment isn\'t marked for download: %s, #%d", $r10);

        $l9 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey>;

        r5 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, $l9);

        if r5 != null goto label3;

        return 1;

     label3:
        $i11 = r1.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i10 = $i11 & 2;

        if $i10 == 0 goto label4;

        $i13 = r5.<com.android.emailcommon.provider.Account: int mFlags>;

        $i15 = $i13 & 128;

        if $i15 == 0 goto label4;

        goto label7;

     label4:
        $r13 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri CONTENT_URI>;

        $l14 = r4.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: int delete(android.content.Context,android.net.Uri,long)>(r0, $r13, $l14);

        goto label6;

     label5:
        $r6 = virtualinvoke r4.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getContentUri()>();

        if $r6 == null goto label6;

        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r14 = $r7;

        virtualinvoke r14.<android.content.ContentValues: void putNull(java.lang.String)>("contentUri");

        $r8 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri CONTENT_URI>;

        $l5 = r4.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: int update(android.content.Context,android.net.Uri,long,android.content.ContentValues)>(r0, $r8, $l5, r14);

     label6:
        return 1;

     label7:
        i2 = i2 + 1;

        goto label2;

     label8:
        return 0;
    }

    public static java.lang.String[] getRowColumns(android.content.Context, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[])
    {
        android.content.Context r0;
        android.net.Uri r1;
        java.lang.String[] r2, r4, r5;
        java.lang.String r3, $r9;
        android.content.ContentResolver r6;
        android.database.Cursor r7;
        int i0, $i1, $i2;
        java.lang.Throwable r8, $r10;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String[];

        $i1 = lengthof r2;

        r5 = newarray (java.lang.String)[$i1];

        r6 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r7 = virtualinvoke r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r2, r3, r4, null);

     label1:
        $z0 = interfaceinvoke r7.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label4;

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r9 = interfaceinvoke r7.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r5[i0] = $r9;

        i0 = i0 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        interfaceinvoke r7.<android.database.Cursor: void close()>();

        return null;

     label5:
        interfaceinvoke r7.<android.database.Cursor: void close()>();

        goto label8;

     label6:
        $r10 := @caughtexception;

        r8 = $r10;

     label7:
        interfaceinvoke r7.<android.database.Cursor: void close()>();

        throw r8;

     label8:
        return r5;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static transient java.lang.String[] getRowColumns(android.content.Context, android.net.Uri, long, java.lang.String[])
    {
        android.content.Context r0;
        android.net.Uri r1, $r3;
        long l0;
        java.lang.String[] r2, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        l0 := @parameter2: long;

        r2 := @parameter3: java.lang.String[];

        $r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l0);

        $r4 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String[] getRowColumns(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[])>(r0, $r3, r2, null, null);

        return $r4;
    }

    public static boolean isExternalStorageMounted()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        return $z0;
    }

    public static void enableStrictMode(boolean)
    {
        boolean z0;
        android.os.StrictMode$ThreadPolicy $r0;
        android.os.StrictMode$VmPolicy $r1;
        android.os.StrictMode$VmPolicy$Builder $r2, $r3;
        android.os.StrictMode$ThreadPolicy$Builder $r4, $r5;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r4 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke $r4.<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>();

        $r5 = virtualinvoke $r4.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectAll()>();

        $r0 = virtualinvoke $r5.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        goto label2;

     label1:
        $r0 = <android.os.StrictMode$ThreadPolicy: android.os.StrictMode$ThreadPolicy LAX>;

     label2:
        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r0);

        if z0 == 0 goto label3;

        $r2 = new android.os.StrictMode$VmPolicy$Builder;

        specialinvoke $r2.<android.os.StrictMode$VmPolicy$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectAll()>();

        $r1 = virtualinvoke $r3.<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy build()>();

        goto label4;

     label3:
        $r1 = <android.os.StrictMode$VmPolicy: android.os.StrictMode$VmPolicy LAX>;

     label4:
        staticinvoke <android.os.StrictMode: void setVmPolicy(android.os.StrictMode$VmPolicy)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r1;
        java.lang.String[] $r2;
        java.util.regex.Pattern $r3;
        com.android.emailcommon.utility.Utility$ThreadLocalDateFormat $r4, $r5, $r6, $r7, $r8;
        com.android.emailcommon.utility.Utility$3 $r9;
        com.android.emailcommon.utility.Utility$4 $r10;
        com.android.emailcommon.utility.Utility$5 $r11;
        com.android.emailcommon.utility.Utility$6 $r12;

        <com.android.emailcommon.utility.Utility: java.lang.String ACCOUNT_WHERE_HOSTAUTH> = "hostAuthKeyRecv=?";

        <com.android.emailcommon.utility.Utility: java.lang.String HOSTAUTH_WHERE_CREDENTIALS> = "address like ? and login like ?  ESCAPE \'\\\' and protocol not like \"smtp\"";

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.android.emailcommon.utility.Utility: java.nio.charset.Charset UTF_8> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <com.android.emailcommon.utility.Utility: java.nio.charset.Charset ASCII> = $r1;

        $r2 = newarray (java.lang.String)[0];

        <com.android.emailcommon.utility.Utility: java.lang.String[] EMPTY_STRINGS> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("GMT([-+]\\d{4})$");

        <com.android.emailcommon.utility.Utility: java.util.regex.Pattern DATE_CLEANUP_PATTERN_WRONG_TIMEZONE> = $r3;

        $r4 = new com.android.emailcommon.utility.Utility$ThreadLocalDateFormat;

        specialinvoke $r4.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: void <init>(java.lang.String)>("yyyyMMdd\'T\'HHmmss\'Z\'");

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mFullDateTimeFormat> = $r4;

        $r5 = new com.android.emailcommon.utility.Utility$ThreadLocalDateFormat;

        specialinvoke $r5.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: void <init>(java.lang.String)>("yyyyMMdd");

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevDateTimeFormat> = $r5;

        $r6 = new com.android.emailcommon.utility.Utility$ThreadLocalDateFormat;

        specialinvoke $r6.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mAbbrevEmailDateTimeFormat> = $r6;

        $r7 = new com.android.emailcommon.utility.Utility$ThreadLocalDateFormat;

        specialinvoke $r7.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormat> = $r7;

        $r8 = new com.android.emailcommon.utility.Utility$ThreadLocalDateFormat;

        specialinvoke $r8.<com.android.emailcommon.utility.Utility$ThreadLocalDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'");

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$ThreadLocalDateFormat mEmailDateTimeFormatWithMillis> = $r8;

        $r9 = new com.android.emailcommon.utility.Utility$3;

        specialinvoke $r9.<com.android.emailcommon.utility.Utility$3: void <init>()>();

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter LONG_GETTER> = $r9;

        $r10 = new com.android.emailcommon.utility.Utility$4;

        specialinvoke $r10.<com.android.emailcommon.utility.Utility$4: void <init>()>();

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter INT_GETTER> = $r10;

        $r11 = new com.android.emailcommon.utility.Utility$5;

        specialinvoke $r11.<com.android.emailcommon.utility.Utility$5: void <init>()>();

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter STRING_GETTER> = $r11;

        $r12 = new com.android.emailcommon.utility.Utility$6;

        specialinvoke $r12.<com.android.emailcommon.utility.Utility$6: void <init>()>();

        <com.android.emailcommon.utility.Utility: com.android.emailcommon.utility.Utility$CursorGetter BLOB_GETTER> = $r12;

        return;
    }
}
