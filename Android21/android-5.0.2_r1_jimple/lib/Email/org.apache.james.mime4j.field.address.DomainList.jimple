public class org.apache.james.mime4j.field.address.DomainList extends java.lang.Object
{
    private java.util.ArrayList domains;

    public void <init>(java.util.ArrayList, boolean)
    {
        org.apache.james.mime4j.field.address.DomainList r0;
        java.util.ArrayList r1, $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.address.DomainList;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

     label2:
        r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains> = $r3;

        goto label4;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains> = $r2;

     label4:
        return;
    }

    public int size()
    {
        org.apache.james.mime4j.field.address.DomainList r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.address.DomainList;

        $r1 = r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public java.lang.String get(int)
    {
        org.apache.james.mime4j.field.address.DomainList r0;
        int i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.james.mime4j.field.address.DomainList;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.DomainList: int size()>();

        if $i1 > i0 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public java.lang.String toRouteString()
    {
        org.apache.james.mime4j.field.address.DomainList r0;
        java.lang.StringBuffer r1, $r2;
        int i0, $i1, $i2, $i3;
        java.util.ArrayList $r3, $r8;
        java.lang.String $r4, $r6;

        r0 := @this: org.apache.james.mime4j.field.address.DomainList;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("@");

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i2 = i0 + 1;

        $r8 = r0.<org.apache.james.mime4j.field.address.DomainList: java.util.ArrayList domains>;

        $i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        if $i2 >= $i3 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
