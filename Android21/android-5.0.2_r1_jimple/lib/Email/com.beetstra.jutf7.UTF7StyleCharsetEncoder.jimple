class com.beetstra.jutf7.UTF7StyleCharsetEncoder extends java.nio.charset.CharsetEncoder
{
    private static final float AVG_BYTES_PER_CHAR;
    private static final float MAX_BYTES_PER_CHAR;
    private final com.beetstra.jutf7.UTF7StyleCharset cs;
    private final com.beetstra.jutf7.Base64Util base64;
    private final byte shift;
    private final byte unshift;
    private final boolean strict;
    private boolean base64mode;
    private int bitsToOutput;
    private int sextet;
    static boolean useUglyHackToForceCallToFlushInJava5;

    void <init>(com.beetstra.jutf7.UTF7StyleCharset, com.beetstra.jutf7.Base64Util, boolean)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        com.beetstra.jutf7.UTF7StyleCharset r1;
        com.beetstra.jutf7.Base64Util r2;
        boolean z0;
        byte $b0, $b1;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r1 := @parameter0: com.beetstra.jutf7.UTF7StyleCharset;

        r2 := @parameter1: com.beetstra.jutf7.Base64Util;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.nio.charset.CharsetEncoder: void <init>(java.nio.charset.Charset,float,float)>(r1, 1.5F, 5.0F);

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.UTF7StyleCharset cs> = r1;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64> = r2;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean strict> = z0;

        $b0 = virtualinvoke r1.<com.beetstra.jutf7.UTF7StyleCharset: byte shift()>();

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift> = $b0;

        $b1 = virtualinvoke r1.<com.beetstra.jutf7.UTF7StyleCharset: byte unshift()>();

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift> = $b1;

        return;
    }

    protected void implReset()
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = 0;

        return;
    }

    protected java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.ByteBuffer r1;
        boolean $z0;
        java.nio.charset.CoderResult $r2, $r6;
        int $i0, $i1, $i3;
        byte $b2, $b4;
        com.beetstra.jutf7.Base64Util $r4;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= 2 goto label1;

        $r6 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return $r6;

     label1:
        $i1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i1 == 0 goto label2;

        $r4 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i3 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b4 = virtualinvoke $r4.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i3);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b4);

     label2:
        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

     label3:
        $r2 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        return $r2;
    }

    protected java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.CharBuffer r1;
        java.nio.ByteBuffer r2;
        char c0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.nio.charset.CoderResult $r3, $r4, $r9;
        int $i1, $i2, $i4;
        float $f0, $f1, $f2;
        byte $b3, $b5, $b6, $b7, $b8;
        com.beetstra.jutf7.UTF7StyleCharset $r5;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r1 := @parameter0: java.nio.CharBuffer;

        r2 := @parameter1: java.nio.ByteBuffer;

     label1:
        $z0 = virtualinvoke r1.<java.nio.CharBuffer: boolean hasRemaining()>();

        if $z0 == 0 goto label6;

        $i4 = virtualinvoke r2.<java.nio.ByteBuffer: int remaining()>();

        if $i4 >= 4 goto label2;

        $r9 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return $r9;

     label2:
        c0 = virtualinvoke r1.<java.nio.CharBuffer: char get()>();

        $r5 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.UTF7StyleCharset cs>;

        $z3 = virtualinvoke $r5.<com.beetstra.jutf7.UTF7StyleCharset: boolean canEncodeDirectly(char)>(c0);

        if $z3 == 0 goto label3;

        specialinvoke r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: void unshift(java.nio.ByteBuffer,char)>(r2, c0);

        $b8 = (byte) c0;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b8);

        goto label5;

     label3:
        $z4 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z4 != 0 goto label4;

        $b5 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        if c0 != $b5 goto label4;

        $b6 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b6);

        $b7 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b7);

        goto label5;

     label4:
        specialinvoke r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: void encodeBase64(char,java.nio.ByteBuffer)>(c0, r2);

     label5:
        goto label1;

     label6:
        $z1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z1 == 0 goto label7;

        $z2 = <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5>;

        if $z2 == 0 goto label7;

        $i1 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r1.<java.nio.CharBuffer: int limit()>();

        $f1 = (float) $i2;

        $f2 = 5.0F * $f1;

        $b3 = $f0 cmpl $f2;

        if $b3 == 0 goto label7;

        $r4 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult OVERFLOW>;

        return $r4;

     label7:
        $r3 = <java.nio.charset.CoderResult: java.nio.charset.CoderResult UNDERFLOW>;

        return $r3;
    }

    private void unshift(java.nio.ByteBuffer, char)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        java.nio.ByteBuffer r1;
        char c0;
        boolean $z0, $z1, $z2;
        int $i1, $i4;
        com.beetstra.jutf7.Base64Util $r2, $r4;
        byte $b2, $b3, $b5;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        c0 := @parameter1: char;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i1 == 0 goto label2;

        $r4 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i4 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b5 = virtualinvoke $r4.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i4);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b5);

     label2:
        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $z1 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: boolean contains(char)>(c0);

        if $z1 != 0 goto label3;

        $b3 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        if c0 == $b3 goto label3;

        $z2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean strict>;

        if $z2 == 0 goto label4;

     label3:
        $b2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte unshift>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b2);

     label4:
        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = 0;

        return;
    }

    private void encodeBase64(char, java.nio.ByteBuffer)
    {
        com.beetstra.jutf7.UTF7StyleCharsetEncoder r0;
        char c0, $c11;
        java.nio.ByteBuffer r1;
        boolean $z0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16;
        byte $b17, $b18;
        com.beetstra.jutf7.Base64Util $r2;

        r0 := @this: com.beetstra.jutf7.UTF7StyleCharsetEncoder;

        c0 := @parameter0: char;

        r1 := @parameter1: java.nio.ByteBuffer;

        $z0 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode>;

        if $z0 != 0 goto label1;

        $b18 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: byte shift>;

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b18);

     label1:
        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean base64mode> = 1;

        $i1 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i2 = $i1 + 16;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = $i2;

     label2:
        $i3 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        if $i3 < 6 goto label3;

        $i8 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i9 = $i8 - 6;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput> = $i9;

        $i12 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $i10 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $c11 = c0 >> $i10;

        $i14 = $i12 + $c11;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i14;

        $i13 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $i16 = $i13 & 63;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i16;

        $r2 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: com.beetstra.jutf7.Base64Util base64>;

        $i15 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet>;

        $b17 = virtualinvoke $r2.<com.beetstra.jutf7.Base64Util: byte getChar(int)>($i15);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>($b17);

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = 0;

        goto label2;

     label3:
        $i4 = r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int bitsToOutput>;

        $i5 = 6 - $i4;

        $i6 = c0 << $i5;

        $i7 = $i6 & 63;

        r0.<com.beetstra.jutf7.UTF7StyleCharsetEncoder: int sextet> = $i7;

        return;
    }

    static void <clinit>()
    {
        java.lang.String r0, r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: float MAX_BYTES_PER_CHAR> = 5.0F;

        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: float AVG_BYTES_PER_CHAR> = 1.5F;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.specification.version");

        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.vm.vendor");

        $r2 = "1.4";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r4 = "1.5";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5> = $z5;

        $z1 = <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5>;

        $r3 = "Sun Microsystems Inc.";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        $z3 = $z1 & $z2;

        <com.beetstra.jutf7.UTF7StyleCharsetEncoder: boolean useUglyHackToForceCallToFlushInJava5> = $z3;

        return;
    }
}
