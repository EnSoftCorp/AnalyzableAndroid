class com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder extends com.android.bitmap.drawable.TileDrawable
{
    private final android.animation.ValueAnimator mPulseAnimator;
    private boolean mPulseEnabled;
    private float mPulseAlphaFraction;

    public void <init>(android.graphics.drawable.Drawable, android.content.res.Resources, int, int, int, com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        android.graphics.drawable.Drawable r1;
        android.content.res.Resources r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r3;
        long l3;
        int[] $r4;
        android.animation.ValueAnimator $r5, $r6, $r7, $r9, $r11, $r12;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$1 $r8;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$2 $r10;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<com.android.bitmap.drawable.TileDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>(r1, i0, i1, i2, r3);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean mPulseEnabled> = 1;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: float mPulseAlphaFraction> = 1.0F;

        $i4 = r3.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int placeholderAnimationDuration>;

        if $i4 != -1 goto label1;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator> = null;

        goto label4;

     label1:
        $i5 = r3.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int placeholderAnimationDuration>;

        if $i5 != 0 goto label2;

        $i7 = <com.android.bitmap.R$integer: int bitmap_placeholder_animation_duration>;

        $i8 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>($i7);

        l3 = (long) $i8;

        goto label3;

     label2:
        $i6 = r3.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int placeholderAnimationDuration>;

        l3 = (long) $i6;

     label3:
        $r4 = newarray (int)[2];

        $r4[0] = 55;

        $r4[1] = 255;

        $r5 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r4);

        $r6 = virtualinvoke $r5.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(l3);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator> = $r6;

        $r7 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        virtualinvoke $r7.<android.animation.ValueAnimator: void setRepeatCount(int)>(-1);

        $r9 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        virtualinvoke $r9.<android.animation.ValueAnimator: void setRepeatMode(int)>(2);

        $r11 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        $r8 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$1;

        specialinvoke $r8.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$1: void <init>(com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder)>(r0);

        virtualinvoke $r11.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r8);

     label4:
        $r12 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mFadeOutAnimator>;

        $r10 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$2;

        specialinvoke $r10.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder$2: void <init>(com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder)>(r0);

        virtualinvoke $r12.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r10);

        return;
    }

    public void setInnerAlpha(int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        int i0, $i1;
        float $f0, $f1, $f2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        i0 := @parameter0: int;

        $f1 = (float) i0;

        $f0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: float mPulseAlphaFraction>;

        $f2 = $f1 * $f0;

        $i1 = (int) $f2;

        specialinvoke r0.<com.android.bitmap.drawable.TileDrawable: void setInnerAlpha(int)>($i1);

        return;
    }

    public void setPulseEnabled(boolean)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        boolean z0, $z1;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        z0 := @parameter0: boolean;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean mPulseEnabled> = z0;

        $z1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean mPulseEnabled>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void stopPulsing()>();

        goto label2;

     label1:
        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void startPulsing()>();

     label2:
        return;
    }

    private void stopPulsing()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        android.animation.ValueAnimator $r1, $r2;
        int $i0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void cancel()>();

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: float mPulseAlphaFraction> = 1.0F;

        $i0 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: int getCurrentAlpha()>();

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setInnerAlpha(int)>($i0);

     label1:
        return;
    }

    private void startPulsing()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        android.animation.ValueAnimator $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        $z0 = virtualinvoke $r2.<android.animation.ValueAnimator: boolean isStarted()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

     label1:
        return;
    }

    public boolean setVisible(boolean)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        boolean z0, z1, $z2, $z3, $z4;
        int $i0;
        android.animation.ValueAnimator $r1, $r2, $r3;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean setVisible(boolean)>(z0);

        if z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean isVisible()>();

        if $z2 == 0 goto label1;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        if $r1 == null goto label2;

        $z3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean mPulseEnabled>;

        if $z3 == 0 goto label2;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        $z4 = virtualinvoke $r2.<android.animation.ValueAnimator: boolean isStarted()>();

        if $z4 != 0 goto label2;

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: android.animation.ValueAnimator mPulseAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: int getCurrentAlpha()>();

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void stopPulsing()>();

     label2:
        return z1;
    }

    static float access$202(com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder, float)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;
        float f0;

        r0 := @parameter0: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        f0 := @parameter1: float;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: float mPulseAlphaFraction> = f0;

        return f0;
    }

    static void access$300(com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder r0;

        r0 := @parameter0: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void stopPulsing()>();

        return;
    }
}
