public class com.android.ex.photo.views.PhotoView extends android.view.View implements android.view.GestureDetector$OnGestureListener, android.view.GestureDetector$OnDoubleTapListener, android.view.ScaleGestureDetector$OnScaleGestureListener, com.android.ex.photo.fragments.PhotoViewFragment$HorizontallyScrollable
{
    public static final int TRANSLATE_NONE;
    public static final int TRANSLATE_X_ONLY;
    public static final int TRANSLATE_Y_ONLY;
    public static final int TRANSLATE_BOTH;
    private static final long ZOOM_ANIMATION_DURATION;
    private static final long ROTATE_ANIMATION_DURATION;
    private static final long SNAP_DURATION;
    private static final long SNAP_DELAY;
    private static final float DOUBLE_TAP_SCALE_FACTOR;
    private static final float SCALE_OVERZOOM_FACTOR;
    private static final float SNAP_THRESHOLD;
    private static final float CROPPED_SIZE;
    private static int sTouchSlopSquare;
    private static boolean sInitialized;
    private static int sCropSize;
    private static android.graphics.Bitmap sVideoImage;
    private static android.graphics.Bitmap sVideoNotReadyImage;
    private static android.graphics.Paint sCropDimPaint;
    private static android.graphics.Paint sCropPaint;
    private android.graphics.drawable.Drawable mDrawable;
    private android.graphics.Matrix mDrawMatrix;
    private android.graphics.Matrix mMatrix;
    private android.graphics.Matrix mOriginalMatrix;
    private int mFixedHeight;
    private boolean mHaveLayout;
    private boolean mFullScreen;
    private byte[] mVideoBlob;
    private boolean mVideoReady;
    private boolean mAllowCrop;
    private android.graphics.Rect mCropRect;
    private int mCropSize;
    private float mMaxInitialScaleFactor;
    private android.support.v4.view.GestureDetectorCompat mGestureDetector;
    private android.view.ScaleGestureDetector mScaleGetureDetector;
    private android.view.View$OnClickListener mExternalClickListener;
    private boolean mTransformsEnabled;
    private boolean mDoubleTapToZoomEnabled;
    private boolean mDoubleTapDebounce;
    private boolean mIsDoubleTouch;
    private com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable;
    private float mMinScale;
    private float mMaxScale;
    private com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable;
    private com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable;
    private com.android.ex.photo.views.PhotoView$RotateRunnable mRotateRunnable;
    private float mRotation;
    private android.graphics.RectF mTempSrc;
    private android.graphics.RectF mTempDst;
    private android.graphics.RectF mTranslateRect;
    private float[] mValues;
    private boolean mDoubleTapOccurred;
    private float mDownFocusX;
    private float mDownFocusY;
    private boolean mQuickScaleEnabled;

    public void <init>(android.content.Context)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.content.Context r1;
        android.graphics.Matrix $r2, $r3;
        android.graphics.Rect $r4;
        android.graphics.RectF $r5, $r6, $r7;
        float[] $r8;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix> = $r2;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mOriginalMatrix> = $r3;

        r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight> = -1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect> = $r4;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapToZoomEnabled> = 1;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc> = $r5;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst> = $r6;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect> = $r7;

        $r8 = newarray (float)[9];

        r0.<com.android.ex.photo.views.PhotoView: float[] mValues> = $r8;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void initialize()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Matrix $r3, $r4;
        android.graphics.Rect $r5;
        android.graphics.RectF $r6, $r7, $r8;
        float[] $r9;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix> = $r3;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mOriginalMatrix> = $r4;

        r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight> = -1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect> = $r5;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapToZoomEnabled> = 1;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc> = $r6;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst> = $r7;

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect> = $r8;

        $r9 = newarray (float)[9];

        r0.<com.android.ex.photo.views.PhotoView: float[] mValues> = $r9;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void initialize()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.graphics.Matrix $r3, $r4;
        android.graphics.Rect $r5;
        android.graphics.RectF $r6, $r7, $r8;
        float[] $r9;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix> = $r3;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mOriginalMatrix> = $r4;

        r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight> = -1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect> = $r5;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapToZoomEnabled> = 1;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc> = $r6;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst> = $r7;

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect> = $r8;

        $r9 = newarray (float)[9];

        r0.<com.android.ex.photo.views.PhotoView: float[] mValues> = $r9;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void initialize()>();

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        int i0;
        android.view.ScaleGestureDetector $r2, $r4;
        android.support.v4.view.GestureDetectorCompat $r3, $r5;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r6;
        boolean $z2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.view.ScaleGestureDetector mScaleGetureDetector>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.support.v4.view.GestureDetectorCompat mGestureDetector>;

        if $r3 != null goto label2;

     label1:
        return 1;

     label2:
        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.view.ScaleGestureDetector mScaleGetureDetector>;

        virtualinvoke $r4.<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.support.v4.view.GestureDetectorCompat mGestureDetector>;

        virtualinvoke $r5.<android.support.v4.view.GestureDetectorCompat: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch(i0)
        {
            case 1: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label3:
        $r6 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        $z2 = staticinvoke <com.android.ex.photo.views.PhotoView$TranslateRunnable: boolean access$000(com.android.ex.photo.views.PhotoView$TranslateRunnable)>($r6);

        if $z2 != 0 goto label4;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void snap()>();

     label4:
        return 1;
    }

    public boolean onDoubleTap(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred> = 1;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mQuickScaleEnabled>;

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: boolean scale(android.view.MotionEvent)>(r1);

        return $z1;

     label1:
        return 0;
    }

    public boolean onDoubleTapEvent(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        boolean z0, $z1, $z2, $z3, $z4;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mQuickScaleEnabled>;

        if $z1 == 0 goto label4;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<com.android.ex.photo.views.PhotoView: float mDownFocusX> = $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<com.android.ex.photo.views.PhotoView: float mDownFocusY> = $f1;

        goto label4;

     label2:
        $z4 = r0.<com.android.ex.photo.views.PhotoView: boolean mQuickScaleEnabled>;

        if $z4 == 0 goto label4;

        z0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: boolean scale(android.view.MotionEvent)>(r1);

        goto label4;

     label3:
        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mQuickScaleEnabled>;

        if $z2 == 0 goto label4;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred>;

        if $z3 == 0 goto label4;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f3 = r0.<com.android.ex.photo.views.PhotoView: float mDownFocusX>;

        $f4 = $f2 - $f3;

        i1 = (int) $f4;

        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f5 = r0.<com.android.ex.photo.views.PhotoView: float mDownFocusY>;

        $f7 = $f6 - $f5;

        i2 = (int) $f7;

        $i6 = i1 * i1;

        $i4 = i2 * i2;

        i3 = $i6 + $i4;

        $i5 = <com.android.ex.photo.views.PhotoView: int sTouchSlopSquare>;

        if i3 <= $i5 goto label4;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred> = 0;

     label4:
        return z0;
    }

    private boolean scale(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2, $z3, $z4;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, f42, f43, f44;
        byte $b0, $b3, $b4;
        int $i1, $i2, $i5, $i6, $i7, $i8;
        android.graphics.RectF $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r11;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = 0;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapToZoomEnabled>;

        if $z1 == 0 goto label7;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z2 == 0 goto label7;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred>;

        if $z3 == 0 goto label7;

        $z4 = r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapDebounce>;

        if $z4 != 0 goto label6;

        f0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: float getScale()>();

        $f7 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        $b0 = f0 cmpl $f7;

        if $b0 <= 0 goto label1;

        f1 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        f4 = f1 / f0;

        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i7 = $i5 / 2;

        $f35 = (float) $i7;

        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f36 = virtualinvoke $r13.<android.graphics.RectF: float centerX()>();

        $f32 = f4 * $f36;

        $f34 = $f35 - $f32;

        $f33 = 1.0F - f4;

        f2 = $f34 / $f33;

        $i6 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i8 = $i6 / 2;

        $f40 = (float) $i8;

        $r14 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f41 = virtualinvoke $r14.<android.graphics.RectF: float centerY()>();

        $f37 = f4 * $f41;

        $f39 = $f40 - $f37;

        $f38 = 1.0F - f4;

        f3 = $f39 / $f38;

        goto label5;

     label1:
        f42 = f0 * 2.0F;

        $f8 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        f43 = staticinvoke <java.lang.Math: float max(float,float)>($f8, f42);

        $f9 = r0.<com.android.ex.photo.views.PhotoView: float mMaxScale>;

        f1 = staticinvoke <java.lang.Math: float min(float,float)>($f9, f43);

        f44 = f1 / f0;

        $i1 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $f10 = (float) $i1;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f12 = virtualinvoke $r2.<android.graphics.RectF: float width()>();

        $f11 = $f10 - $f12;

        f5 = $f11 / f44;

        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $f14 = (float) $i2;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f13 = virtualinvoke $r3.<android.graphics.RectF: float height()>();

        $f15 = $f14 - $f13;

        f6 = $f15 / f44;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f16 = virtualinvoke $r4.<android.graphics.RectF: float width()>();

        $f17 = f5 * 2.0F;

        $b3 = $f16 cmpg $f17;

        if $b3 > 0 goto label2;

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f2 = virtualinvoke $r12.<android.graphics.RectF: float centerX()>();

        goto label3;

     label2:
        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f20 = $r5.<android.graphics.RectF: float left>;

        $f21 = $f20 + f5;

        $f18 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f19 = staticinvoke <java.lang.Math: float max(float,float)>($f21, $f18);

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f23 = $r6.<android.graphics.RectF: float right>;

        $f22 = $f23 - f5;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>($f19, $f22);

     label3:
        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f25 = virtualinvoke $r7.<android.graphics.RectF: float height()>();

        $f24 = f6 * 2.0F;

        $b4 = $f25 cmpg $f24;

        if $b4 > 0 goto label4;

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f3 = virtualinvoke $r10.<android.graphics.RectF: float centerY()>();

        goto label5;

     label4:
        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f28 = $r8.<android.graphics.RectF: float top>;

        $f27 = $f28 + f6;

        $f26 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f31 = staticinvoke <java.lang.Math: float max(float,float)>($f27, $f26);

        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f30 = $r9.<android.graphics.RectF: float bottom>;

        $f29 = $f30 - f6;

        f3 = staticinvoke <java.lang.Math: float min(float,float)>($f31, $f29);

     label5:
        $r11 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        virtualinvoke $r11.<com.android.ex.photo.views.PhotoView$ScaleRunnable: boolean start(float,float,float,float)>(f0, f1, f2, f3);

        z0 = 1;

     label6:
        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapDebounce> = 0;

     label7:
        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred> = 0;

        return z0;
    }

    public boolean onSingleTapConfirmed(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        android.view.View$OnClickListener $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.view.View$OnClickListener mExternalClickListener>;

        if $r2 == null goto label1;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mIsDoubleTouch>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.view.View$OnClickListener mExternalClickListener>;

        interfaceinvoke $r3.<android.view.View$OnClickListener: void onClick(android.view.View)>(r0);

     label1:
        r0.<com.android.ex.photo.views.PhotoView: boolean mIsDoubleTouch> = 0;

        return 1;
    }

    public boolean onSingleTapUp(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        return 0;
    }

    public void onLongPress(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    public void onShowPress(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        return;
    }

    public boolean onScroll(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1, r2;
        float f0, f1, $f2, $f3;
        boolean $z0, $z1;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        $z1 = staticinvoke <com.android.ex.photo.views.PhotoView$ScaleRunnable: boolean access$100(com.android.ex.photo.views.PhotoView$ScaleRunnable)>($r3);

        if $z1 != 0 goto label1;

        $f3 = neg f0;

        $f2 = neg f1;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: int translate(float,float)>($f3, $f2);

     label1:
        return 1;
    }

    public boolean onDown(android.view.MotionEvent)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1;
        boolean $z0;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r2;
        com.android.ex.photo.views.PhotoView$SnapRunnable $r3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        virtualinvoke $r2.<com.android.ex.photo.views.PhotoView$TranslateRunnable: void stop()>();

        $r3 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable>;

        virtualinvoke $r3.<com.android.ex.photo.views.PhotoView$SnapRunnable: void stop()>();

     label1:
        return 1;
    }

    public boolean onFling(android.view.MotionEvent, android.view.MotionEvent, float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.MotionEvent r1, r2;
        float f0, f1;
        boolean $z0, $z1;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r3;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r4;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        $z1 = staticinvoke <com.android.ex.photo.views.PhotoView$ScaleRunnable: boolean access$100(com.android.ex.photo.views.PhotoView$ScaleRunnable)>($r3);

        if $z1 != 0 goto label1;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        virtualinvoke $r4.<com.android.ex.photo.views.PhotoView$TranslateRunnable: boolean start(float,float)>(f0, f1);

     label1:
        return 1;
    }

    public boolean onScale(android.view.ScaleGestureDetector)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.ScaleGestureDetector r1;
        float f0, f1, $f2, $f3, $f4;
        boolean $z0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.ScaleGestureDetector;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label1;

        r0.<com.android.ex.photo.views.PhotoView: boolean mIsDoubleTouch> = 0;

        f0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: float getScale()>();

        $f2 = virtualinvoke r1.<android.view.ScaleGestureDetector: float getScaleFactor()>();

        f1 = f0 * $f2;

        $f3 = virtualinvoke r1.<android.view.ScaleGestureDetector: float getFocusX()>();

        $f4 = virtualinvoke r1.<android.view.ScaleGestureDetector: float getFocusY()>();

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void scale(float,float,float)>(f1, $f3, $f4);

     label1:
        return 1;
    }

    public boolean onScaleBegin(android.view.ScaleGestureDetector)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.ScaleGestureDetector r1;
        boolean $z0;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.ScaleGestureDetector;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        virtualinvoke $r2.<com.android.ex.photo.views.PhotoView$ScaleRunnable: void stop()>();

        r0.<com.android.ex.photo.views.PhotoView: boolean mIsDoubleTouch> = 1;

     label1:
        return 1;
    }

    public void onScaleEnd(android.view.ScaleGestureDetector)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.ScaleGestureDetector r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, f28, f29;
        byte $b0, $b7, $b8;
        boolean $z0, $z1;
        int $i1, $i2, $i3, $i4, $i5, $i6;
        android.graphics.RectF $r2, $r3, $r4, $r5;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r6;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.ScaleGestureDetector;

        f0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: float getScale()>();

        $f9 = r0.<com.android.ex.photo.views.PhotoView: float mMaxScale>;

        $b0 = f0 cmpl $f9;

        if $b0 <= 0 goto label5;

        $f11 = r0.<com.android.ex.photo.views.PhotoView: float mMaxScale>;

        $f10 = $f11 / f0;

        $f12 = 1.0F - $f10;

        f1 = 1.0F / $f12;

        f2 = 1.0F - f1;

        $i1 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i3 = $i1 / 2;

        f3 = (float) $i3;

        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i4 = $i2 / 2;

        f4 = (float) $i4;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f13 = $r2.<android.graphics.RectF: float left>;

        f5 = $f13 * f2;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f14 = $r3.<android.graphics.RectF: float top>;

        f6 = $f14 * f2;

        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $f15 = (float) $i5;

        $f19 = $f15 * f1;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f17 = $r4.<android.graphics.RectF: float right>;

        $f16 = $f17 * f2;

        f7 = $f19 + $f16;

        $i6 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $f18 = (float) $i6;

        $f20 = $f18 * f1;

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f21 = $r5.<android.graphics.RectF: float bottom>;

        $f22 = $f21 * f2;

        f8 = $f20 + $f22;

        $b7 = f7 cmpl f5;

        if $b7 <= 0 goto label1;

        $f26 = f7 + f5;

        f28 = $f26 / 2.0F;

        goto label2;

     label1:
        $f24 = staticinvoke <java.lang.Math: float max(float,float)>(f7, f3);

        f28 = staticinvoke <java.lang.Math: float min(float,float)>($f24, f5);

     label2:
        $b8 = f8 cmpl f6;

        if $b8 <= 0 goto label3;

        $f27 = f8 + f6;

        f29 = $f27 / 2.0F;

        goto label4;

     label3:
        $f23 = staticinvoke <java.lang.Math: float max(float,float)>(f8, f4);

        f29 = staticinvoke <java.lang.Math: float min(float,float)>($f23, f6);

     label4:
        $r6 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        $f25 = r0.<com.android.ex.photo.views.PhotoView: float mMaxScale>;

        virtualinvoke $r6.<com.android.ex.photo.views.PhotoView$ScaleRunnable: boolean start(float,float,float,float)>(f0, $f25, f28, f29);

     label5:
        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 == 0 goto label6;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mIsDoubleTouch>;

        if $z1 == 0 goto label6;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapDebounce> = 1;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void resetTransformations()>();

     label6:
        return;
    }

    public void setOnClickListener(android.view.View$OnClickListener)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.view.View$OnClickListener r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.view.View$OnClickListener;

        r0.<com.android.ex.photo.views.PhotoView: android.view.View$OnClickListener mExternalClickListener> = r1;

        return;
    }

    public boolean interceptMoveLeft(float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7;
        boolean $z0, $z1, $z3;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r1;
        float[] $r2, $r8;
        android.graphics.Matrix $r3, $r7;
        android.graphics.RectF $r4, $r5, $r6, $r9, $r10;
        int $i0;
        byte $b1, $b2, $b3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        $z1 = staticinvoke <com.android.ex.photo.views.PhotoView$TranslateRunnable: boolean access$000(com.android.ex.photo.views.PhotoView$TranslateRunnable)>($r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        virtualinvoke $r3.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        virtualinvoke $r5.<android.graphics.RectF: void set(android.graphics.RectF)>($r4);

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r6);

        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        f2 = (float) $i0;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        f3 = $r8[2];

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f5 = $r10.<android.graphics.RectF: float right>;

        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f6 = $r9.<android.graphics.RectF: float left>;

        f4 = $f5 - $f6;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z3 == 0 goto label3;

        $b1 = f4 cmpg f2;

        if $b1 > 0 goto label4;

     label3:
        return 0;

     label4:
        $b2 = f3 cmpl 0.0F;

        if $b2 != 0 goto label5;

        return 0;

     label5:
        $f7 = f4 + f3;

        $b3 = f2 cmpl $f7;

        if $b3 < 0 goto label6;

        return 1;

     label6:
        return 1;
    }

    public boolean interceptMoveRight(float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7;
        boolean $z0, $z1, $z3;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r1;
        float[] $r2, $r8;
        android.graphics.Matrix $r3, $r7;
        android.graphics.RectF $r4, $r5, $r6, $r9, $r10;
        int $i0;
        byte $b1, $b2, $b3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        $z1 = staticinvoke <com.android.ex.photo.views.PhotoView$TranslateRunnable: boolean access$000(com.android.ex.photo.views.PhotoView$TranslateRunnable)>($r1);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        virtualinvoke $r3.<android.graphics.Matrix: void getValues(float[])>($r2);

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        virtualinvoke $r5.<android.graphics.RectF: void set(android.graphics.RectF)>($r4);

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r6);

        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        f2 = (float) $i0;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        f3 = $r8[2];

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f5 = $r10.<android.graphics.RectF: float right>;

        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f6 = $r9.<android.graphics.RectF: float left>;

        f4 = $f5 - $f6;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z3 == 0 goto label3;

        $b1 = f4 cmpg f2;

        if $b1 > 0 goto label4;

     label3:
        return 0;

     label4:
        $b2 = f3 cmpl 0.0F;

        if $b2 != 0 goto label5;

        return 1;

     label5:
        $f7 = f4 + f3;

        $b3 = f2 cmpl $f7;

        if $b3 < 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public void clear()
    {
        com.android.ex.photo.views.PhotoView r0;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r1;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r2;
        com.android.ex.photo.views.PhotoView$SnapRunnable $r3;
        com.android.ex.photo.views.PhotoView$RotateRunnable $r4;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r0.<com.android.ex.photo.views.PhotoView: android.support.v4.view.GestureDetectorCompat mGestureDetector> = null;

        r0.<com.android.ex.photo.views.PhotoView: android.view.ScaleGestureDetector mScaleGetureDetector> = null;

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable> = null;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable>;

        virtualinvoke $r1.<com.android.ex.photo.views.PhotoView$ScaleRunnable: void stop()>();

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable> = null;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable>;

        virtualinvoke $r2.<com.android.ex.photo.views.PhotoView$TranslateRunnable: void stop()>();

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable> = null;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable>;

        virtualinvoke $r3.<com.android.ex.photo.views.PhotoView$SnapRunnable: void stop()>();

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable> = null;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$RotateRunnable mRotateRunnable>;

        virtualinvoke $r4.<com.android.ex.photo.views.PhotoView$RotateRunnable: void stop()>();

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$RotateRunnable mRotateRunnable> = null;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void setOnClickListener(android.view.View$OnClickListener)>(null);

        r0.<com.android.ex.photo.views.PhotoView: android.view.View$OnClickListener mExternalClickListener> = null;

        r0.<com.android.ex.photo.views.PhotoView: boolean mDoubleTapOccurred> = 0;

        return;
    }

    public void bindDrawable(android.graphics.drawable.Drawable)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable r1, $r2, $r3, $r4, $r5;
        boolean z0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        z0 = 0;

        if r1 == null goto label2;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if r1 == $r2 goto label2;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r3 == null goto label1;

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable> = r1;

        r0.<com.android.ex.photo.views.PhotoView: float mMinScale> = 0.0F;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        z0 = 1;

     label2:
        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void configureBounds(boolean)>(z0);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        return;
    }

    public void bindPhoto(android.graphics.Bitmap)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.Bitmap r1, r2;
        boolean z0, z1, $z2, $z3;
        android.graphics.drawable.Drawable $r3, $r4, $r5, $r8, $r10, $r11;
        android.graphics.drawable.BitmapDrawable $r6, $r9;
        android.content.res.Resources $r7;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.graphics.Bitmap;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        z0 = $r3 instanceof android.graphics.drawable.BitmapDrawable;

        if z0 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r4 == null goto label7;

        if z0 == 0 goto label7;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $r9 = (android.graphics.drawable.BitmapDrawable) $r8;

        r2 = virtualinvoke $r9.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        if r1 != r2 goto label3;

        return;

     label3:
        if r1 == null goto label5;

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $i0 = virtualinvoke $r10.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i0 != $i1 goto label4;

        $r11 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $i3 = virtualinvoke $r11.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i3 == $i2 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        z1 = $z2;

        r0.<com.android.ex.photo.views.PhotoView: float mMinScale> = 0.0F;

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable> = null;

     label7:
        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r5 != null goto label8;

        if r1 == null goto label8;

        $r6 = new android.graphics.drawable.BitmapDrawable;

        $r7 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: android.content.res.Resources getResources()>();

        specialinvoke $r6.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r7, r1);

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable> = $r6;

     label8:
        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void configureBounds(boolean)>(z1);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        return;
    }

    public android.graphics.Bitmap getPhoto()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable $r1, $r2, $r3;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable $r4;
        android.graphics.Bitmap $r5;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $z0 = $r2 instanceof android.graphics.drawable.BitmapDrawable;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $r4 = (android.graphics.drawable.BitmapDrawable) $r3;

        $r5 = virtualinvoke $r4.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        return $r5;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getDrawable()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        return $r1;
    }

    public byte[] getVideoData()
    {
        com.android.ex.photo.views.PhotoView r0;
        byte[] $r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: byte[] mVideoBlob>;

        return $r1;
    }

    public boolean isVideo()
    {
        com.android.ex.photo.views.PhotoView r0;
        byte[] $r1;
        boolean $z0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: byte[] mVideoBlob>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isVideoReady()
    {
        com.android.ex.photo.views.PhotoView r0;
        byte[] $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: byte[] mVideoBlob>;

        if $r1 == null goto label1;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mVideoReady>;

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean isPhotoBound()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setFullScreen(boolean, boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        boolean z0, z1, $z2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mFullScreen>;

        if z0 == $z2 goto label1;

        r0.<com.android.ex.photo.views.PhotoView: boolean mFullScreen> = z0;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void requestLayout()>();

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

     label1:
        return;
    }

    public void enableAllowCrop(boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        boolean z0, $z1, $z2;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mHaveLayout>;

        if $z2 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot set crop after view has been laid out");

        throw $r2;

     label1:
        if z0 != 0 goto label2;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z1 == 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot unset crop mode");

        throw $r1;

     label2:
        r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop> = z0;

        return;
    }

    public android.graphics.Bitmap getCroppedPhoto()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.graphics.Matrix r3, $r8, $r10;
        boolean $z0;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Rect $r6, $r7, $r9, $r11;
        android.graphics.drawable.Drawable $r12, $r13;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(256, 256, $r4);

        $r5 = new android.graphics.Canvas;

        specialinvoke $r5.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r5;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i2 = $r6.<android.graphics.Rect: int right>;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i1 = $r7.<android.graphics.Rect: int left>;

        i0 = $i2 - $i1;

        $f2 = (float) i0;

        f0 = 256.0F / $f2;

        $f3 = (float) i0;

        f1 = 256.0F / $f3;

        $r8 = new android.graphics.Matrix;

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        specialinvoke $r8.<android.graphics.Matrix: void <init>(android.graphics.Matrix)>($r10);

        r3 = $r8;

        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i4 = $r9.<android.graphics.Rect: int left>;

        $i3 = neg $i4;

        $f5 = (float) $i3;

        $r11 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i5 = $r11.<android.graphics.Rect: int top>;

        $i6 = neg $i5;

        $f4 = (float) $i6;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f5, $f4);

        virtualinvoke r3.<android.graphics.Matrix: boolean postScale(float,float)>(f0, f1);

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r12 == null goto label2;

        virtualinvoke r2.<android.graphics.Canvas: void concat(android.graphics.Matrix)>(r3);

        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r2);

     label2:
        return r1;
    }

    public void resetTransformations()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.Matrix $r1, $r2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mOriginalMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r1);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        return;
    }

    public void rotateClockwise()
    {
        com.android.ex.photo.views.PhotoView r0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void rotate(float,boolean)>(90.0F, 1);

        return;
    }

    public void rotateCounterClockwise()
    {
        com.android.ex.photo.views.PhotoView r0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void rotate(float,boolean)>(-90.0F, 1);

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        android.graphics.Bitmap r2, $r21;
        android.graphics.drawable.Drawable $r3, $r5, $r7, $r13;
        android.graphics.Matrix $r4, $r10, $r14, $r17, $r18, $r20;
        byte[] $r6;
        android.graphics.RectF $r8, $r19;
        android.graphics.Rect $r9, $r12, $r15;
        boolean $z0, $z3;
        float $f0, $f1, $f2, $f3;
        android.graphics.Paint $r11, $r16;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r3 == null goto label7;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        if $r4 == null goto label1;

        $r20 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r20);

     label1:
        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        $r6 = r0.<com.android.ex.photo.views.PhotoView: byte[] mVideoBlob>;

        if $r6 == null goto label4;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mVideoReady>;

        if $z3 == 0 goto label2;

        $r21 = <com.android.ex.photo.views.PhotoView: android.graphics.Bitmap sVideoImage>;

        goto label3;

     label2:
        $r21 = <com.android.ex.photo.views.PhotoView: android.graphics.Bitmap sVideoNotReadyImage>;

     label3:
        r2 = $r21;

        $i9 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i7 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        $i8 = $i9 - $i7;

        i1 = $i8 / 2;

        $i11 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i12 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        $i10 = $i11 - $i12;

        i2 = $i10 / 2;

        $f3 = (float) i1;

        $f2 = (float) i2;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r2, $f3, $f2, null);

     label4:
        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        $r9 = virtualinvoke $r7.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r8.<android.graphics.RectF: void set(android.graphics.Rect)>($r9);

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        if $r10 == null goto label5;

        $r17 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        $r19 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        virtualinvoke $r17.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r19);

     label5:
        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z0 == 0 goto label7;

        i13 = virtualinvoke r1.<android.graphics.Canvas: int getSaveCount()>();

        $i4 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $f0 = (float) $i4;

        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $f1 = (float) $i5;

        $r11 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropDimPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, $f0, $f1, $r11);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r12);

        $r14 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        if $r14 == null goto label6;

        $r18 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix>;

        virtualinvoke r1.<android.graphics.Canvas: void concat(android.graphics.Matrix)>($r18);

     label6:
        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i13);

        $r15 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $r16 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r15, $r16);

     label7:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.ex.photo.views.PhotoView r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Rect $r1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.view.View: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        r0.<com.android.ex.photo.views.PhotoView: boolean mHaveLayout> = 1;

        i4 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z1 == 0 goto label1;

        $i10 = <com.android.ex.photo.views.PhotoView: int sCropSize>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i5);

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i12);

        r0.<com.android.ex.photo.views.PhotoView: int mCropSize> = $i11;

        $i14 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        $i13 = i4 - $i14;

        i6 = $i13 / 2;

        $i16 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        $i15 = i5 - $i16;

        i7 = $i15 / 2;

        $i18 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        i8 = i6 + $i18;

        $i17 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        i9 = i7 + $i17;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        virtualinvoke $r1.<android.graphics.Rect: void set(int,int,int,int)>(i6, i7, i8, i9);

     label1:
        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void configureBounds(boolean)>(z0);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.ex.photo.views.PhotoView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight>;

        if $i2 == -1 goto label1;

        $i3 = r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight>;

        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i3, -2147483648);

        specialinvoke r0.<android.view.View: void onMeasure(int,int)>(i0, $i4);

        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getMeasuredWidth()>();

        $i6 = r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight>;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void setMeasuredDimension(int,int)>($i5, $i6);

        goto label2;

     label1:
        specialinvoke r0.<android.view.View: void onMeasure(int,int)>(i0, i1);

     label2:
        return;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 == r1 goto label1;

        $z0 = specialinvoke r0.<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        com.android.ex.photo.views.PhotoView r0;
        android.graphics.drawable.Drawable r1, $r2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r2 != r1 goto label1;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        goto label2;

     label1:
        specialinvoke r0.<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>(r1);

     label2:
        return;
    }

    public void setFixedHeight(int)
    {
        com.android.ex.photo.views.PhotoView r0;
        int i0, $i1, $i2, $i3;
        boolean z0, $z1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight>;

        if i0 == $i1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight> = i0;

        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getMeasuredWidth()>();

        $i3 = r0.<com.android.ex.photo.views.PhotoView: int mFixedHeight>;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void setMeasuredDimension(int,int)>($i2, $i3);

        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void configureBounds(boolean)>(1);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void requestLayout()>();

     label3:
        return;
    }

    public void enableImageTransforms(boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        boolean z0, $z1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        z0 := @parameter0: boolean;

        r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled> = z0;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mTransformsEnabled>;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void resetTransformations()>();

     label1:
        return;
    }

    private void configureBounds(boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3;
        android.graphics.drawable.Drawable $r1, $r2, $r3, $r4, $r7;
        android.graphics.Matrix $r5, $r6;
        float $f0;
        byte $b4;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r1 == null goto label01;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mHaveLayout>;

        if $z2 != 0 goto label02;

     label01:
        return;

     label02:
        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        i3 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        if i0 < 0 goto label03;

        if i2 != i0 goto label05;

     label03:
        if i1 < 0 goto label04;

        if i3 != i1 goto label05;

     label04:
        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z1 = $z4;

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        if z0 != 0 goto label07;

        $f0 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label08;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        if $r7 == null goto label08;

        $z5 = r0.<com.android.ex.photo.views.PhotoView: boolean mHaveLayout>;

        if $z5 == 0 goto label08;

     label07:
        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void generateMatrix()>();

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void generateScale()>();

     label08:
        if z1 != 0 goto label09;

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $z3 = virtualinvoke $r5.<android.graphics.Matrix: boolean isIdentity()>();

        if $z3 == 0 goto label10;

     label09:
        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix> = null;

        goto label11;

     label10:
        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mDrawMatrix> = $r6;

     label11:
        return;
    }

    private void generateMatrix()
    {
        com.android.ex.photo.views.PhotoView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2, $z3, $z4, $z7, $z8;
        android.graphics.RectF r1, $r4, $r5, $r6, $r7, $r8, $r9, $r15, $r18;
        android.graphics.drawable.Drawable $r2, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.graphics.Matrix$ScaleToFit $r10, $r16;
        android.graphics.Matrix $r11, $r12, $r13, $r14, $r19;
        android.graphics.Rect $r17;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i1 = virtualinvoke $r3.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z1 == 0 goto label01;

        $i4 = <com.android.ex.photo.views.PhotoView: int sCropSize>;

        goto label02;

     label01:
        $i4 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

     label02:
        i2 = $i4;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z2 == 0 goto label03;

        $i5 = <com.android.ex.photo.views.PhotoView: int sCropSize>;

        goto label04;

     label03:
        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

     label04:
        i3 = $i5;

        if i0 < 0 goto label05;

        if i2 != i0 goto label07;

     label05:
        if i1 < 0 goto label06;

        if i3 != i1 goto label07;

     label06:
        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z0 = $z7;

        if z0 == 0 goto label09;

        $z8 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z8 != 0 goto label09;

        $r19 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r19.<android.graphics.Matrix: void reset()>();

        goto label13;

     label09:
        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke $r4.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z3 == 0 goto label10;

        $r18 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst>;

        $r17 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        virtualinvoke $r18.<android.graphics.RectF: void set(android.graphics.Rect)>($r17);

        goto label11;

     label10:
        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst>;

        $f3 = (float) i2;

        $f2 = (float) i3;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f3, $f2);

     label11:
        $r6 = new android.graphics.RectF;

        $i6 = i2 / 2;

        $f8 = (float) $i6;

        $f4 = (float) i0;

        $f5 = r0.<com.android.ex.photo.views.PhotoView: float mMaxInitialScaleFactor>;

        $f7 = $f4 * $f5;

        $f6 = $f7 / 2.0F;

        $f25 = $f8 - $f6;

        $i7 = i3 / 2;

        $f11 = (float) $i7;

        $f9 = (float) i1;

        $f10 = r0.<com.android.ex.photo.views.PhotoView: float mMaxInitialScaleFactor>;

        $f12 = $f9 * $f10;

        $f13 = $f12 / 2.0F;

        $f26 = $f11 - $f13;

        $i8 = i2 / 2;

        $f20 = (float) $i8;

        $f17 = (float) i0;

        $f16 = r0.<com.android.ex.photo.views.PhotoView: float mMaxInitialScaleFactor>;

        $f14 = $f17 * $f16;

        $f15 = $f14 / 2.0F;

        $f27 = $f20 + $f15;

        $i9 = i3 / 2;

        $f21 = (float) $i9;

        $f19 = (float) i1;

        $f18 = r0.<com.android.ex.photo.views.PhotoView: float mMaxInitialScaleFactor>;

        $f23 = $f19 * $f18;

        $f24 = $f23 / 2.0F;

        $f22 = $f21 + $f24;

        specialinvoke $r6.<android.graphics.RectF: void <init>(float,float,float,float)>($f25, $f26, $f27, $f22);

        r1 = $r6;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst>;

        $z4 = virtualinvoke $r7.<android.graphics.RectF: boolean contains(android.graphics.RectF)>(r1);

        if $z4 == 0 goto label12;

        $r14 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r15 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        $r16 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke $r14.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r15, r1, $r16);

        goto label13;

     label12:
        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempDst>;

        $r10 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke $r13.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r8, $r9, $r10);

     label13:
        $r11 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mOriginalMatrix>;

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r11.<android.graphics.Matrix: void set(android.graphics.Matrix)>($r12);

        return;
    }

    private void generateScale()
    {
        com.android.ex.photo.views.PhotoView r0;
        int i0, i1, i2, i3, $i4, $i5;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0, $z1, $z2;
        float $f0, $f1, $f2, $f3;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.drawable.Drawable mDrawable>;

        i1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $z0 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z0 == 0 goto label1;

        $i4 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: int getCropSize()>();

        goto label2;

     label1:
        $i4 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

     label2:
        i2 = $i4;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z1 == 0 goto label3;

        $i5 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: int getCropSize()>();

        goto label4;

     label3:
        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

     label4:
        i3 = $i5;

        if i0 >= i2 goto label5;

        if i1 >= i3 goto label5;

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z2 != 0 goto label5;

        r0.<com.android.ex.photo.views.PhotoView: float mMinScale> = 1.0F;

        goto label6;

     label5:
        $f0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: float getScale()>();

        r0.<com.android.ex.photo.views.PhotoView: float mMinScale> = $f0;

     label6:
        $f1 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        $f2 = $f1 * 4.0F;

        $f3 = staticinvoke <java.lang.Math: float max(float,float)>($f2, 4.0F);

        r0.<com.android.ex.photo.views.PhotoView: float mMaxScale> = $f3;

        return;
    }

    private int getCropSize()
    {
        com.android.ex.photo.views.PhotoView r0;
        int $i0, $i1;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $i0 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.android.ex.photo.views.PhotoView: int mCropSize>;

        goto label2;

     label1:
        $i1 = <com.android.ex.photo.views.PhotoView: int sCropSize>;

     label2:
        return $i1;
    }

    private float getScale()
    {
        com.android.ex.photo.views.PhotoView r0;
        float[] $r1, $r3;
        android.graphics.Matrix $r2;
        float $f0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        virtualinvoke $r2.<android.graphics.Matrix: void getValues(float[])>($r1);

        $r3 = r0.<com.android.ex.photo.views.PhotoView: float[] mValues>;

        $f0 = $r3[0];

        return $f0;
    }

    private void scale(float, float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, f15, f16;
        android.graphics.Matrix $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $f5 = r0.<com.android.ex.photo.views.PhotoView: float mRotation>;

        $f6 = neg $f5;

        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i1 = $i0 / 2;

        $f7 = (float) $i1;

        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i3 = $i2 / 2;

        $f8 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f6, $f7, $f8);

        $f9 = r0.<com.android.ex.photo.views.PhotoView: float mMinScale>;

        f15 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f9);

        $f11 = r0.<com.android.ex.photo.views.PhotoView: float mMaxScale>;

        $f10 = $f11 * 1.5F;

        f16 = staticinvoke <java.lang.Math: float min(float,float)>(f15, $f10);

        f3 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: float getScale()>();

        f4 = f16 / f3;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r2.<android.graphics.Matrix: boolean postScale(float,float,float,float)>(f4, f4, f1, f2);

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $f12 = r0.<com.android.ex.photo.views.PhotoView: float mRotation>;

        $i5 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i4 = $i5 / 2;

        $f13 = (float) $i4;

        $i6 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i7 = $i6 / 2;

        $f14 = (float) $i7;

        virtualinvoke $r3.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f12, $f13, $f14);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        return;
    }

    private int translate(float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11;
        android.graphics.RectF $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r14, $r15;
        android.graphics.Matrix $r4, $r9;
        int $i0, $i2, $i6, $i7, $i8, $i9;
        byte $b1, $b3, $b4, $b5;
        android.graphics.Rect $r12, $r13, $r16, $r17;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        virtualinvoke $r3.<android.graphics.RectF: void set(android.graphics.RectF)>($r1);

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        virtualinvoke $r4.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r2);

        $z4 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z4 == 0 goto label01;

        $r16 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i8 = $r16.<android.graphics.Rect: int left>;

        $f42 = (float) $i8;

        goto label02;

     label01:
        $f42 = 0.0F;

     label02:
        f2 = $f42;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z3 == 0 goto label03;

        $r17 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i9 = $r17.<android.graphics.Rect: int right>;

        $f41 = (float) $i9;

        goto label04;

     label03:
        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $f41 = (float) $i0;

     label04:
        f3 = $f41;

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f4 = $r5.<android.graphics.RectF: float left>;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f5 = $r6.<android.graphics.RectF: float right>;

        $z5 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z5 == 0 goto label05;

        $r15 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f40 = $r15.<android.graphics.RectF: float right>;

        $f37 = f2 - $f40;

        $r14 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f35 = $r14.<android.graphics.RectF: float left>;

        $f36 = f3 - $f35;

        $f43 = staticinvoke <java.lang.Math: float min(float,float)>($f36, f0);

        f6 = staticinvoke <java.lang.Math: float max(float,float)>($f37, $f43);

        goto label07;

     label05:
        $f12 = f5 - f4;

        $f13 = f3 - f2;

        $b1 = $f12 cmpg $f13;

        if $b1 >= 0 goto label06;

        $f33 = f3 - f2;

        $f32 = f5 + f4;

        $f38 = $f33 - $f32;

        $f39 = $f38 / 2.0F;

        f6 = f2 + $f39;

        goto label07;

     label06:
        $f16 = f3 - f5;

        $f14 = f2 - f4;

        $f15 = staticinvoke <java.lang.Math: float min(float,float)>($f14, f0);

        f6 = staticinvoke <java.lang.Math: float max(float,float)>($f16, $f15);

     label07:
        $z7 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z7 == 0 goto label08;

        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i6 = $r13.<android.graphics.Rect: int top>;

        $f31 = (float) $i6;

        goto label09;

     label08:
        $f31 = 0.0F;

     label09:
        f7 = $f31;

        $z6 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z6 == 0 goto label10;

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i7 = $r12.<android.graphics.Rect: int bottom>;

        $f34 = (float) $i7;

        goto label11;

     label10:
        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $f34 = (float) $i2;

     label11:
        f8 = $f34;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f9 = $r7.<android.graphics.RectF: float top>;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f10 = $r8.<android.graphics.RectF: float bottom>;

        $z8 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z8 == 0 goto label12;

        $r11 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f27 = $r11.<android.graphics.RectF: float bottom>;

        $f29 = f7 - $f27;

        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $f26 = $r10.<android.graphics.RectF: float top>;

        $f30 = f8 - $f26;

        $f28 = staticinvoke <java.lang.Math: float min(float,float)>($f30, f1);

        f11 = staticinvoke <java.lang.Math: float max(float,float)>($f29, $f28);

        goto label14;

     label12:
        $f20 = f10 - f9;

        $f17 = f8 - f7;

        $b3 = $f20 cmpg $f17;

        if $b3 >= 0 goto label13;

        $f24 = f8 - f7;

        $f25 = f10 + f9;

        $f23 = $f24 - $f25;

        $f22 = $f23 / 2.0F;

        f11 = f7 + $f22;

        goto label14;

     label13:
        $f19 = f8 - f10;

        $f18 = f7 - f9;

        $f21 = staticinvoke <java.lang.Math: float min(float,float)>($f18, f1);

        f11 = staticinvoke <java.lang.Math: float max(float,float)>($f19, $f21);

     label14:
        $r9 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r9.<android.graphics.Matrix: boolean postTranslate(float,float)>(f6, f11);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

        $b5 = f6 cmpl f0;

        if $b5 != 0 goto label15;

        $z10 = 1;

        goto label16;

     label15:
        $z10 = 0;

     label16:
        z0 = $z10;

        $b4 = f11 cmpl f1;

        if $b4 != 0 goto label17;

        $z11 = 1;

        goto label18;

     label17:
        $z11 = 0;

     label18:
        z1 = $z11;

        if z0 == 0 goto label19;

        if z1 == 0 goto label19;

        return 3;

     label19:
        if z0 == 0 goto label20;

        return 1;

     label20:
        if z1 == 0 goto label21;

        return 2;

     label21:
        return 0;
    }

    private void snap()
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.graphics.RectF $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        android.graphics.Matrix $r4, $r10;
        boolean $z1, $z2, $z3, $z4;
        int $i0, $i4, $i10, $i11, $i12, $i13;
        byte $b1, $b2, $b3, $b5, $b6, $b7, $b8, $b9;
        com.android.ex.photo.views.PhotoView$SnapRunnable $r9;
        android.graphics.Rect $r11, $r12, $r13, $r14;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTempSrc>;

        virtualinvoke $r2.<android.graphics.RectF: void set(android.graphics.RectF)>($r1);

        $r4 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $r3 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        virtualinvoke $r4.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r3);

        $z2 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z2 == 0 goto label01;

        $r14 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i13 = $r14.<android.graphics.Rect: int left>;

        $f26 = (float) $i13;

        goto label02;

     label01:
        $f26 = 0.0F;

     label02:
        f0 = $f26;

        $z1 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z1 == 0 goto label03;

        $r13 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i12 = $r13.<android.graphics.Rect: int right>;

        $f27 = (float) $i12;

        goto label04;

     label03:
        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $f27 = (float) $i0;

     label04:
        f1 = $f27;

        $r5 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f2 = $r5.<android.graphics.RectF: float left>;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f3 = $r6.<android.graphics.RectF: float right>;

        $f11 = f3 - f2;

        $f10 = f1 - f0;

        $b1 = $f11 cmpg $f10;

        if $b1 >= 0 goto label05;

        $f21 = f1 - f0;

        $f22 = f3 + f2;

        $f25 = $f21 - $f22;

        $f24 = $f25 / 2.0F;

        f4 = f0 + $f24;

        goto label08;

     label05:
        $b3 = f2 cmpl f0;

        if $b3 <= 0 goto label06;

        f4 = f0 - f2;

        goto label08;

     label06:
        $b2 = f3 cmpg f1;

        if $b2 >= 0 goto label07;

        f4 = f1 - f3;

        goto label08;

     label07:
        f4 = 0.0F;

     label08:
        $z4 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z4 == 0 goto label09;

        $r11 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i11 = $r11.<android.graphics.Rect: int top>;

        $f23 = (float) $i11;

        goto label10;

     label09:
        $f23 = 0.0F;

     label10:
        f5 = $f23;

        $z3 = r0.<com.android.ex.photo.views.PhotoView: boolean mAllowCrop>;

        if $z3 == 0 goto label11;

        $r12 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Rect mCropRect>;

        $i10 = $r12.<android.graphics.Rect: int bottom>;

        $f20 = (float) $i10;

        goto label12;

     label11:
        $i4 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $f20 = (float) $i4;

     label12:
        f6 = $f20;

        $r7 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f7 = $r7.<android.graphics.RectF: float top>;

        $r8 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.RectF mTranslateRect>;

        f8 = $r8.<android.graphics.RectF: float bottom>;

        $f13 = f8 - f7;

        $f12 = f6 - f5;

        $b7 = $f13 cmpg $f12;

        if $b7 >= 0 goto label13;

        $f19 = f6 - f5;

        $f18 = f8 + f7;

        $f16 = $f19 - $f18;

        $f17 = $f16 / 2.0F;

        f9 = f5 + $f17;

        goto label16;

     label13:
        $b5 = f7 cmpl f5;

        if $b5 <= 0 goto label14;

        f9 = f5 - f7;

        goto label16;

     label14:
        $b6 = f8 cmpg f6;

        if $b6 >= 0 goto label15;

        f9 = f6 - f8;

        goto label16;

     label15:
        f9 = 0.0F;

     label16:
        $f14 = staticinvoke <java.lang.Math: float abs(float)>(f4);

        $b8 = $f14 cmpl 20.0F;

        if $b8 > 0 goto label17;

        $f15 = staticinvoke <java.lang.Math: float abs(float)>(f9);

        $b9 = $f15 cmpl 20.0F;

        if $b9 <= 0 goto label18;

     label17:
        $r9 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable>;

        virtualinvoke $r9.<com.android.ex.photo.views.PhotoView$SnapRunnable: boolean start(float,float)>(f4, f9);

        goto label19;

     label18:
        $r10 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        virtualinvoke $r10.<android.graphics.Matrix: boolean postTranslate(float,float)>(f4, f9);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

     label19:
        return;
    }

    private void rotate(float, boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, $f1, $f2, $f3, $f4;
        boolean z0;
        android.graphics.Matrix $r1;
        int $i0, $i1, $i2, $i3;
        com.android.ex.photo.views.PhotoView$RotateRunnable $r2;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$RotateRunnable mRotateRunnable>;

        virtualinvoke $r2.<com.android.ex.photo.views.PhotoView$RotateRunnable: void start(float)>(f0);

        goto label2;

     label1:
        $f1 = r0.<com.android.ex.photo.views.PhotoView: float mRotation>;

        $f2 = $f1 + f0;

        r0.<com.android.ex.photo.views.PhotoView: float mRotation> = $f2;

        $r1 = r0.<com.android.ex.photo.views.PhotoView: android.graphics.Matrix mMatrix>;

        $i0 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getWidth()>();

        $i1 = $i0 / 2;

        $f3 = (float) $i1;

        $i2 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: int getHeight()>();

        $i3 = $i2 / 2;

        $f4 = (float) $i3;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postRotate(float,float,float)>(f0, $f3, $f4);

        virtualinvoke r0.<com.android.ex.photo.views.PhotoView: void invalidate()>();

     label2:
        return;
    }

    private void initialize()
    {
        com.android.ex.photo.views.PhotoView r0;
        android.content.Context r1, $r11;
        android.content.res.Resources r2;
        android.view.ViewConfiguration r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1;
        android.support.v4.view.GestureDetectorCompat $r4;
        android.view.ScaleGestureDetector $r5, $r6;
        com.android.ex.photo.views.PhotoView$ScaleRunnable $r7;
        com.android.ex.photo.views.PhotoView$TranslateRunnable $r8;
        com.android.ex.photo.views.PhotoView$SnapRunnable $r9;
        com.android.ex.photo.views.PhotoView$RotateRunnable $r10;
        android.graphics.Paint $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r22;
        android.graphics.Paint$Style $r16, $r20;
        float $f0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        r1 = virtualinvoke r0.<com.android.ex.photo.views.PhotoView: android.content.Context getContext()>();

        $z0 = <com.android.ex.photo.views.PhotoView: boolean sInitialized>;

        if $z0 != 0 goto label1;

        <com.android.ex.photo.views.PhotoView: boolean sInitialized> = 1;

        $r11 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r2 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.android.ex.photo.R$dimen: int photo_crop_width>;

        $i2 = virtualinvoke r2.<android.content.res.Resources: int getDimensionPixelSize(int)>($i1);

        <com.android.ex.photo.views.PhotoView: int sCropSize> = $i2;

        $r12 = new android.graphics.Paint;

        specialinvoke $r12.<android.graphics.Paint: void <init>()>();

        <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropDimPaint> = $r12;

        $r13 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropDimPaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r14 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropDimPaint>;

        $i3 = <com.android.ex.photo.R$color: int photo_crop_dim_color>;

        $i4 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i3);

        virtualinvoke $r14.<android.graphics.Paint: void setColor(int)>($i4);

        $r15 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropDimPaint>;

        $r16 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r15.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r16);

        $r18 = new android.graphics.Paint;

        specialinvoke $r18.<android.graphics.Paint: void <init>()>();

        <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint> = $r18;

        $r17 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r19 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint>;

        $i5 = <com.android.ex.photo.R$color: int photo_crop_highlight_color>;

        $i6 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i5);

        virtualinvoke $r19.<android.graphics.Paint: void setColor(int)>($i6);

        $r22 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint>;

        $r20 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r22.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r20);

        $r21 = <com.android.ex.photo.views.PhotoView: android.graphics.Paint sCropPaint>;

        $i7 = <com.android.ex.photo.R$dimen: int photo_crop_stroke_width>;

        $f0 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>($i7);

        virtualinvoke $r21.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        i0 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        $i8 = i0 * i0;

        <com.android.ex.photo.views.PhotoView: int sTouchSlopSquare> = $i8;

     label1:
        $r4 = new android.support.v4.view.GestureDetectorCompat;

        specialinvoke $r4.<android.support.v4.view.GestureDetectorCompat: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler)>(r1, r0, null);

        r0.<com.android.ex.photo.views.PhotoView: android.support.v4.view.GestureDetectorCompat mGestureDetector> = $r4;

        $r5 = new android.view.ScaleGestureDetector;

        specialinvoke $r5.<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener)>(r1, r0);

        r0.<com.android.ex.photo.views.PhotoView: android.view.ScaleGestureDetector mScaleGetureDetector> = $r5;

        $r6 = r0.<com.android.ex.photo.views.PhotoView: android.view.ScaleGestureDetector mScaleGetureDetector>;

        $z1 = staticinvoke <android.support.v4.view.ScaleGestureDetectorCompat: boolean isQuickScaleEnabled(java.lang.Object)>($r6);

        r0.<com.android.ex.photo.views.PhotoView: boolean mQuickScaleEnabled> = $z1;

        $r7 = new com.android.ex.photo.views.PhotoView$ScaleRunnable;

        specialinvoke $r7.<com.android.ex.photo.views.PhotoView$ScaleRunnable: void <init>(com.android.ex.photo.views.PhotoView)>(r0);

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$ScaleRunnable mScaleRunnable> = $r7;

        $r8 = new com.android.ex.photo.views.PhotoView$TranslateRunnable;

        specialinvoke $r8.<com.android.ex.photo.views.PhotoView$TranslateRunnable: void <init>(com.android.ex.photo.views.PhotoView)>(r0);

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$TranslateRunnable mTranslateRunnable> = $r8;

        $r9 = new com.android.ex.photo.views.PhotoView$SnapRunnable;

        specialinvoke $r9.<com.android.ex.photo.views.PhotoView$SnapRunnable: void <init>(com.android.ex.photo.views.PhotoView)>(r0);

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$SnapRunnable mSnapRunnable> = $r9;

        $r10 = new com.android.ex.photo.views.PhotoView$RotateRunnable;

        specialinvoke $r10.<com.android.ex.photo.views.PhotoView$RotateRunnable: void <init>(com.android.ex.photo.views.PhotoView)>(r0);

        r0.<com.android.ex.photo.views.PhotoView: com.android.ex.photo.views.PhotoView$RotateRunnable mRotateRunnable> = $r10;

        return;
    }

    public void setMaxInitialScale(float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0;

        r0 := @this: com.android.ex.photo.views.PhotoView;

        f0 := @parameter0: float;

        r0.<com.android.ex.photo.views.PhotoView: float mMaxInitialScaleFactor> = f0;

        return;
    }

    static void access$200(com.android.ex.photo.views.PhotoView, float, float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1, f2;

        r0 := @parameter0: com.android.ex.photo.views.PhotoView;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void scale(float,float,float)>(f0, f1, f2);

        return;
    }

    static int access$300(com.android.ex.photo.views.PhotoView, float, float)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0, f1;
        int $i0;

        r0 := @parameter0: com.android.ex.photo.views.PhotoView;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        $i0 = specialinvoke r0.<com.android.ex.photo.views.PhotoView: int translate(float,float)>(f0, f1);

        return $i0;
    }

    static void access$400(com.android.ex.photo.views.PhotoView)
    {
        com.android.ex.photo.views.PhotoView r0;

        r0 := @parameter0: com.android.ex.photo.views.PhotoView;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void snap()>();

        return;
    }

    static void access$500(com.android.ex.photo.views.PhotoView, float, boolean)
    {
        com.android.ex.photo.views.PhotoView r0;
        float f0;
        boolean z0;

        r0 := @parameter0: com.android.ex.photo.views.PhotoView;

        f0 := @parameter1: float;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.ex.photo.views.PhotoView: void rotate(float,boolean)>(f0, z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.ex.photo.views.PhotoView: float CROPPED_SIZE> = 256.0F;

        <com.android.ex.photo.views.PhotoView: float SNAP_THRESHOLD> = 20.0F;

        <com.android.ex.photo.views.PhotoView: float SCALE_OVERZOOM_FACTOR> = 1.5F;

        <com.android.ex.photo.views.PhotoView: float DOUBLE_TAP_SCALE_FACTOR> = 2.0F;

        <com.android.ex.photo.views.PhotoView: long SNAP_DELAY> = 250L;

        <com.android.ex.photo.views.PhotoView: long SNAP_DURATION> = 100L;

        <com.android.ex.photo.views.PhotoView: long ROTATE_ANIMATION_DURATION> = 500L;

        <com.android.ex.photo.views.PhotoView: long ZOOM_ANIMATION_DURATION> = 200L;

        <com.android.ex.photo.views.PhotoView: int TRANSLATE_BOTH> = 3;

        <com.android.ex.photo.views.PhotoView: int TRANSLATE_Y_ONLY> = 2;

        <com.android.ex.photo.views.PhotoView: int TRANSLATE_X_ONLY> = 1;

        <com.android.ex.photo.views.PhotoView: int TRANSLATE_NONE> = 0;

        return;
    }
}
