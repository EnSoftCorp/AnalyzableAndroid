public class com.android.email.activity.setup.AccountSettingsUtils extends java.lang.Object
{
    private static final java.lang.String WILD_STRING;
    private static final char WILD_CHARACTER;
    private static final java.lang.String DOMAIN_SEPARATOR;

    public void <init>()
    {
        com.android.email.activity.setup.AccountSettingsUtils r0;

        r0 := @this: com.android.email.activity.setup.AccountSettingsUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void commitSettings(android.content.Context, com.android.emailcommon.provider.Account)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        java.lang.String[] r2, r5;
        android.content.ContentValues r3, $r10, r28;
        android.content.ContentResolver r4;
        int i0, i1;
        java.lang.String r6, $r14, $r16, $r18, $r19, $r21, $r26;
        boolean $z0, $z1;
        com.android.emailcommon.provider.Policy $r8, $r15, $r17, $r24, $r25;
        android.content.res.Resources $r9;
        long $l3, $l4;
        java.lang.Long $r11;
        android.net.Uri $r13;
        java.lang.StringBuilder $r20, $r22, $r23;
        java.lang.Object[] $r27;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        $z0 = virtualinvoke r1.<com.android.emailcommon.provider.Account: boolean isSaved()>();

        if $z0 != 0 goto label8;

        virtualinvoke r1.<com.android.emailcommon.provider.Account: android.net.Uri save(android.content.Context)>(r0);

        $r8 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        if $r8 == null goto label4;

        $r15 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        $r14 = $r15.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported>;

        if $r14 == null goto label1;

        $r19 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing unsupported policies ");

        $r24 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        $r21 = $r24.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported>;

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, $r26, $r27);

        $r25 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        $r25.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported> = null;

     label1:
        $l4 = virtualinvoke r1.<com.android.emailcommon.provider.Account: long getId()>();

        $r17 = r1.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        $r16 = r1.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey>;

        if $r16 != null goto label2;

        $r18 = "";

        goto label3;

     label2:
        $r18 = r1.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey>;

     label3:
        staticinvoke <com.android.emailcommon.service.PolicyServiceProxy: void setAccountPolicy2(android.content.Context,long,com.android.emailcommon.provider.Policy,java.lang.String,boolean)>(r0, $l4, $r17, $r18, 0);

     label4:
        $r9 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r9.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131689496);

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r3 = $r10;

        $l3 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("accountKey", $r11);

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label5:
        if i1 >= i0 goto label7;

        r6 = r5[i1];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label6;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("quickResponse", r6);

        $r13 = <com.android.emailcommon.provider.QuickResponse: android.net.Uri CONTENT_URI>;

        virtualinvoke r4.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r13, r3);

     label6:
        i1 = i1 + 1;

        goto label5;

     label7:
        goto label9;

     label8:
        r28 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: android.content.ContentValues getAccountContentValues(com.android.emailcommon.provider.Account)>(r1);

        virtualinvoke r1.<com.android.emailcommon.provider.Account: int update(android.content.Context,android.content.ContentValues)>(r0, r28);

     label9:
        staticinvoke <com.android.email.provider.AccountBackupRestore: void backup(android.content.Context)>(r0);

        return;
    }

    public static android.content.ContentValues getAccountContentValues(com.android.emailcommon.provider.Account)
    {
        com.android.emailcommon.provider.Account r0;
        android.content.ContentValues r1, $r2;
        java.lang.String $r3, $r4, $r5, $r9;
        int $i0, $i1, $i2;
        java.lang.Integer $r6, $r7, $r8;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r0.<com.android.emailcommon.provider.Account: java.lang.String getDisplayName()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("displayName", $r3);

        $r4 = virtualinvoke r0.<com.android.emailcommon.provider.Account: java.lang.String getSenderName()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("senderName", $r4);

        $r5 = virtualinvoke r0.<com.android.emailcommon.provider.Account: java.lang.String getSignature()>();

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("signature", $r5);

        $i0 = r0.<com.android.emailcommon.provider.Account: int mSyncInterval>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncInterval", $r6);

        $i1 = r0.<com.android.emailcommon.provider.Account: int mFlags>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r7);

        $i2 = r0.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncLookback", $r8);

        $r9 = r0.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("securitySyncKey", $r9);

        return r1;
    }

    public static android.net.Uri createOAuthRegistrationRequest(android.content.Context, com.android.emailcommon.VendorPolicyLoader$OAuthProvider, java.lang.String)
    {
        android.content.Context r0;
        com.android.emailcommon.VendorPolicyLoader$OAuthProvider r1;
        java.lang.String r2, $r4, $r6, $r8, $r10, $r12, $r14;
        android.net.Uri$Builder r3;
        android.net.Uri $r5, $r17;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.VendorPolicyLoader$OAuthProvider;

        r2 := @parameter2: java.lang.String;

        $r4 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String authEndpoint>;

        $r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r4);

        r3 = virtualinvoke $r5.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r6 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String responseType>;

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("response_type", $r6);

        $r8 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String clientId>;

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("client_id", $r8);

        $r10 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String redirectUri>;

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("redirect_uri", $r10);

        $r12 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String scope>;

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("scope", $r12);

        $r14 = r1.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String state>;

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("state", $r14);

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("login_hint", r2);

        $r17 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r17;
    }

    public static com.android.emailcommon.VendorPolicyLoader$OAuthProvider findOAuthProvider(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.emailcommon.VendorPolicyLoader$OAuthProvider $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: com.android.emailcommon.VendorPolicyLoader$OAuthProvider findOAuthProvider(android.content.Context,java.lang.String,int)>(r0, r1, 2131099662);

        return $r2;
    }

    public static java.util.List getAllOAuthProviders(android.content.Context)
    {
        android.content.Context r0;
        java.util.ArrayList r1, $r3;
        android.content.res.XmlResourceParser r2;
        int i0, $i1, $i2;
        android.content.res.Resources $r4;
        java.lang.String $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r25, $r29;
        boolean $z0;
        com.android.emailcommon.VendorPolicyLoader$OAuthProvider $r7, r30;
        java.lang.Object[] $r19, $r27;
        java.lang.Exception $r20, r31;
        java.lang.StringBuilder $r22, $r24, $r26, $r28;
        java.lang.IllegalArgumentException $r23;

        r0 := @parameter0: android.content.Context;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(2131099662);

     label2:
        $i1 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        i0 = $i1;

        if $i1 == 1 goto label6;

        if i0 != 2 goto label2;

        $r5 = "provider";

        $r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

     label3:
        $r7 = new com.android.emailcommon.VendorPolicyLoader$OAuthProvider;

        specialinvoke $r7.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: void <init>()>();

        r30 = $r7;

        $r8 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "id");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String id> = $r8;

        $r9 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "label");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String label> = $r9;

        $r11 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "auth_endpoint");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String authEndpoint> = $r11;

        $r10 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "token_endpoint");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String tokenEndpoint> = $r10;

        $r13 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "refresh_endpoint");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String refreshEndpoint> = $r13;

        $r12 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "response_type");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String responseType> = $r12;

        $r15 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "redirect_uri");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String redirectUri> = $r15;

        $r14 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "scope");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String scope> = $r14;

        $r17 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "state");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String state> = $r17;

        $r16 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "client_id");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String clientId> = $r16;

        $r18 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "client_secret");

        r30.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String clientSecret> = $r18;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r30);

     label4:
        goto label2;

     label5:
        $r23 := @caughtexception;

        $r25 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("providers line: ");

        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getLineNumber()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Domain contains multiple globals");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r25, $r29, $r27);

        goto label2;

     label6:
        return r1;

     label7:
        $r20 := @caughtexception;

        r31 = $r20;

        $r21 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r31;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r21, "Error while trying to load provider settings.", $r19);

        return null;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label6 with label7;
    }

    public static com.android.emailcommon.VendorPolicyLoader$OAuthProvider findOAuthProvider(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r24, $r25;
        int i0, i1, $i2, $i3;
        android.content.res.XmlResourceParser r2;
        android.content.res.Resources $r4;
        boolean $z0, $z1;
        com.android.emailcommon.VendorPolicyLoader$OAuthProvider $r8, r29;
        java.lang.Exception $r17, r30;
        java.lang.Object[] $r20, $r26;
        java.lang.IllegalArgumentException $r21;
        java.lang.StringBuilder $r22, $r23, $r27, $r28;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label01:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r4.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

     label02:
        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label08;

        if i1 != 2 goto label02;

        $r5 = "provider";

        $r6 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label02;

        r3 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "id");

     label03:
        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, r3);

        if $z1 == 0 goto label05;

        $r8 = new com.android.emailcommon.VendorPolicyLoader$OAuthProvider;

        specialinvoke $r8.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: void <init>()>();

        r29 = $r8;

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String id> = r1;

        $r7 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "label");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String label> = $r7;

        $r10 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "auth_endpoint");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String authEndpoint> = $r10;

        $r9 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "token_endpoint");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String tokenEndpoint> = $r9;

        $r12 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "refresh_endpoint");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String refreshEndpoint> = $r12;

        $r11 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "response_type");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String responseType> = $r11;

        $r14 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "redirect_uri");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String redirectUri> = $r14;

        $r13 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "scope");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String scope> = $r13;

        $r16 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "state");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String state> = $r16;

        $r15 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "client_id");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String clientId> = $r15;

        $r18 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "client_secret");

        r29.<com.android.emailcommon.VendorPolicyLoader$OAuthProvider: java.lang.String clientSecret> = $r18;

     label04:
        return r29;

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

        $r24 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("providers line: ");

        $i3 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getLineNumber()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Domain contains multiple globals");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r24, $r25, $r26);

     label07:
        goto label02;

     label08:
        goto label10;

     label09:
        $r17 := @caughtexception;

        r30 = $r17;

        $r19 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r20 = newarray (java.lang.Object)[1];

        $r20[0] = r30;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "Error while trying to load provider settings.", $r20);

     label10:
        return null;

        catch java.lang.IllegalArgumentException from label03 to label04 with label06;
        catch java.lang.Exception from label01 to label04 with label09;
        catch java.lang.Exception from label05 to label08 with label09;
    }

    public static com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.emailcommon.VendorPolicyLoader$Provider r2;
        com.android.emailcommon.VendorPolicyLoader $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.emailcommon.VendorPolicyLoader: com.android.emailcommon.VendorPolicyLoader getInstance(android.content.Context)>(r0);

        r2 = virtualinvoke $r3.<com.android.emailcommon.VendorPolicyLoader: com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(java.lang.String)>(r1);

        if r2 != null goto label1;

        r2 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context,java.lang.String,int)>(r0, r1, 2131099665);

     label1:
        if r2 != null goto label2;

        r2 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context,java.lang.String,int)>(r0, r1, 2131099664);

     label2:
        return r2;
    }

    static com.android.emailcommon.VendorPolicyLoader$Provider findProviderForDomain(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1, r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r33, $r34, $r36, $r43;
        int i0, i1, $i2, $i4;
        android.content.res.XmlResourceParser r2;
        com.android.emailcommon.VendorPolicyLoader$Provider r3, $r27;
        android.content.res.Resources $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object[] $r32, $r42;
        java.lang.Exception $r35, r44;
        java.lang.StringBuilder $r37, $r39, $r40, $r41;
        java.lang.IllegalArgumentException $r38;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label01:
        $r6 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(i0);

        r3 = null;

     label02:
        $i2 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        i1 = $i2;

        if $i2 == 1 goto label13;

        if i1 != 2 goto label07;

        $r23 = "provider";

        $r24 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if $z6 == 0 goto label07;

        r4 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "domain");

     label03:
        $z5 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: boolean matchProvider(java.lang.String,java.lang.String)>(r1, r4);

        if $z5 == 0 goto label04;

        $r27 = new com.android.emailcommon.VendorPolicyLoader$Provider;

        specialinvoke $r27.<com.android.emailcommon.VendorPolicyLoader$Provider: void <init>()>();

        r3 = $r27;

        $r30 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "id");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String id> = $r30;

        $r31 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "label");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String label> = $r31;

        $r28 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String domain> = $r28;

        $r29 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "note");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String note> = $r29;

        $r34 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "oauth");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String oauth> = $r34;

     label04:
        goto label06;

     label05:
        $r38 := @caughtexception;

        $r36 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("providers line: ");

        $i4 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getLineNumber()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; Domain contains multiple globals");

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r42 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r36, $r43, $r42);

     label06:
        goto label02;

     label07:
        if i1 != 2 goto label08;

        $r20 = "incoming";

        $r22 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z4 == 0 goto label08;

        if r3 == null goto label08;

        $r25 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "uri");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUriTemplate> = $r25;

        $r26 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "username");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String incomingUsernameTemplate> = $r26;

        goto label02;

     label08:
        if i1 != 2 goto label09;

        $r18 = "outgoing";

        $r17 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label09;

        if r3 == null goto label09;

        $r19 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "uri");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String outgoingUriTemplate> = $r19;

        $r21 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "username");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String outgoingUsernameTemplate> = $r21;

        goto label02;

     label09:
        if i1 != 2 goto label10;

        $r12 = "incoming-fallback";

        $r14 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label10;

        if r3 == null goto label10;

        $r16 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "uri");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String altIncomingUriTemplate> = $r16;

        $r15 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "username");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String altIncomingUsernameTemplate> = $r15;

        goto label02;

     label10:
        if i1 != 2 goto label11;

        $r9 = "outgoing-fallback";

        $r10 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z1 == 0 goto label11;

        if r3 == null goto label11;

        $r11 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "uri");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String altOutgoingUriTemplate> = $r11;

        $r13 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String getXmlAttribute(android.content.Context,android.content.res.XmlResourceParser,java.lang.String)>(r0, r2, "username");

        r3.<com.android.emailcommon.VendorPolicyLoader$Provider: java.lang.String altOutgoingUsernameTemplate> = $r13;

        goto label02;

     label11:
        if i1 != 3 goto label02;

        $r7 = "provider";

        $r8 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label02;

        if r3 == null goto label02;

     label12:
        return r3;

     label13:
        goto label15;

     label14:
        $r35 := @caughtexception;

        r44 = $r35;

        $r33 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r32 = newarray (java.lang.Object)[1];

        $r32[0] = r44;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r33, "Error while trying to load provider settings.", $r32);

     label15:
        return null;

        catch java.lang.IllegalArgumentException from label03 to label04 with label05;
        catch java.lang.Exception from label01 to label12 with label14;
    }

    public static boolean matchProvider(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r4, r5, $r6, $r7;
        java.lang.String[] r2, r3;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

        $i2 = lengthof r2;

        $i1 = lengthof r3;

        if $i2 == $i1 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label4;

        $r6 = r2[i0];

        r4 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = r3[i0];

        r5 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 != 0 goto label3;

        $z0 = staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: boolean matchWithWildcards(java.lang.String,java.lang.String)>(r4, r5);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static boolean matchWithWildcards(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, i1, $i4;
        char c2, c3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i4 == i0 goto label1;

        return 0;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if c2 == c3 goto label3;

        if c3 == 63 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static java.lang.String getXmlAttribute(android.content.Context, android.content.res.XmlResourceParser, java.lang.String)
    {
        android.content.Context r0;
        android.content.res.XmlResourceParser r1;
        java.lang.String r2, $r3, $r4;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.res.XmlResourceParser;

        r2 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r1.<android.content.res.XmlResourceParser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, r2, 0);

        if i0 != 0 goto label1;

        $r4 = interfaceinvoke r1.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r2);

        return $r4;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(i0);

        return $r3;
    }

    public static java.lang.String inferServerName(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4, $r9, $r11, $r12, $r13, $r15;
        int i0, i1;
        java.lang.String[] r5;
        boolean z0, z1;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;
        android.content.res.Resources $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(46);

        if i1 == -1 goto label4;

        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        r4 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r14 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r5 = virtualinvoke $r14.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131689498);

        z0 = staticinvoke <com.android.emailcommon.utility.Utility: boolean arrayContains(java.lang.Object[],java.lang.Object)>(r5, r4);

        $r15 = "mail";

        z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if r2 == null goto label2;

        if z0 != 0 goto label1;

        if z1 == 0 goto label4;

     label1:
        return r1;

     label2:
        if z0 == 0 goto label3;

        i0 = i1 + 1;

        goto label4;

     label3:
        if z1 == 0 goto label4;

        return r1;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        if r2 == null goto label5;

        $r11 = r2;

        goto label6;

     label5:
        $r11 = r3;

     label6:
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static void checkPasswordSpaces(android.content.Context, android.widget.EditText)
    {
        android.content.Context r0;
        android.widget.EditText r1;
        android.text.Editable r2;
        int i0, $i2;
        char $c1, $c3;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.widget.EditText;

        r2 = virtualinvoke r1.<android.widget.EditText: android.text.Editable getText()>();

        i0 = interfaceinvoke r2.<android.text.Editable: int length()>();

        if i0 <= 0 goto label2;

        $c1 = interfaceinvoke r2.<android.text.Editable: char charAt(int)>(0);

        if $c1 == 32 goto label1;

        $i2 = i0 - 1;

        $c3 = interfaceinvoke r2.<android.text.Editable: char charAt(int)>($i2);

        if $c3 != 32 goto label2;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296759);

        virtualinvoke r1.<android.widget.EditText: void setError(java.lang.CharSequence)>($r3);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String DOMAIN_SEPARATOR> = "\\.";

        <com.android.email.activity.setup.AccountSettingsUtils: char WILD_CHARACTER> = 63;

        <com.android.email.activity.setup.AccountSettingsUtils: java.lang.String WILD_STRING> = "*";

        return;
    }
}
