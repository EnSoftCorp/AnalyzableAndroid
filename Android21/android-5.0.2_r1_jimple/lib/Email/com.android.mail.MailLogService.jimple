public class com.android.mail.MailLogService extends android.app.Service
{
    public static boolean DEBUG_ENABLED;
    protected static final java.lang.String LOG_TAG;
    private static final java.lang.String HEADER;
    private static final java.util.Map sLogs;

    public void <init>()
    {
        com.android.mail.MailLogService r0;

        r0 := @this: com.android.mail.MailLogService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.mail.MailLogService r0;
        android.content.Intent r1;

        r0 := @this: com.android.mail.MailLogService;

        r1 := @parameter0: android.content.Intent;

        return null;
    }

    private static com.android.mail.MailLogService$CircularBuffer getOrCreate(java.lang.String)
    {
        java.lang.String r0;
        com.android.mail.MailLogService$CircularBuffer r1, $r3, $r8;
        java.util.Map $r2, $r4, $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.mail.MailLogService: java.util.Map sLogs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r6 = <com.android.mail.MailLogService: java.util.Map sLogs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r8 = (com.android.mail.MailLogService$CircularBuffer) $r7;

        return $r8;

     label1:
        $r3 = new com.android.mail.MailLogService$CircularBuffer;

        specialinvoke $r3.<com.android.mail.MailLogService$CircularBuffer: void <init>(com.android.mail.MailLogService$1)>(null);

        r1 = $r3;

        $r4 = <com.android.mail.MailLogService: java.util.Map sLogs>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        return r1;
    }

    public static boolean isLoggingLevelHighEnough()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = <com.android.mail.MailLogService: java.lang.String LOG_TAG>;

        $z0 = staticinvoke <com.android.mail.utils.LogUtils: boolean isLoggable(java.lang.String,int)>($r0, 3);

        return $z0;
    }

    public static transient void log(java.lang.String, java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, r1, r3;
        java.lang.Object[] r2;
        boolean $z0, $z1;
        com.android.mail.MailLogService$CircularBuffer $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        $z0 = <com.android.mail.MailLogService: boolean DEBUG_ENABLED>;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.mail.MailLogService: boolean isLoggingLevelHighEnough()>();

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r4 = staticinvoke <com.android.mail.MailLogService: com.android.mail.MailLogService$CircularBuffer getOrCreate(java.lang.String)>(r0);

        staticinvoke <com.android.mail.MailLogService$CircularBuffer: void access$100(com.android.mail.MailLogService$CircularBuffer,java.lang.String)>($r4, r3);

        return;
    }

    protected void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.mail.MailLogService r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        java.util.Iterator r4;
        java.lang.String r5, $r16;
        boolean $z0, $z1;
        java.util.Map $r6, $r12;
        java.util.Set $r7;
        java.lang.Object $r8, $r14;
        com.android.mail.MailLogService$CircularBuffer $r13;

        r0 := @this: com.android.mail.MailLogService;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $z0 = <com.android.mail.MailLogService: boolean DEBUG_ENABLED>;

        if $z0 != 0 goto label1;

        return;

     label1:
        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("**** MailLogService ***\n");

        $r6 = <com.android.mail.MailLogService: java.util.Map sLogs>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r4 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r8;

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("Logging for tag: \"");

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>(r5);

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>("\"\n");

        $r12 = <com.android.mail.MailLogService: java.util.Map sLogs>;

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        $r13 = (com.android.mail.MailLogService$CircularBuffer) $r14;

        $r16 = virtualinvoke $r13.<com.android.mail.MailLogService$CircularBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>($r16);

        goto label2;

     label3:
        specialinvoke r0.<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>(r1, r2, r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.HashMap $r1;

        <com.android.mail.MailLogService: java.lang.String HEADER> = "**** MailLogService ***\n";

        <com.android.mail.MailLogService: boolean DEBUG_ENABLED> = 0;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.MailLogService: java.lang.String LOG_TAG> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.android.mail.MailLogService: java.util.Map sLogs> = $r1;

        return;
    }
}
