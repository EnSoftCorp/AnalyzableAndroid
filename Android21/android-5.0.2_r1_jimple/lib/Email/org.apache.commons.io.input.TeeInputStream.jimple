public class org.apache.commons.io.input.TeeInputStream extends org.apache.commons.io.input.ProxyInputStream
{
    private final java.io.OutputStream branch;
    private final boolean closeBranch;

    public void <init>(java.io.InputStream, java.io.OutputStream)
    {
        org.apache.commons.io.input.TeeInputStream r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<org.apache.commons.io.input.TeeInputStream: void <init>(java.io.InputStream,java.io.OutputStream,boolean)>(r1, r2, 0);

        return;
    }

    public void <init>(java.io.InputStream, java.io.OutputStream, boolean)
    {
        org.apache.commons.io.input.TeeInputStream r0;
        java.io.InputStream r1;
        java.io.OutputStream r2;
        boolean z0;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch> = r2;

        r0.<org.apache.commons.io.input.TeeInputStream: boolean closeBranch> = z0;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.input.TeeInputStream r0;
        java.lang.Throwable r1, $r3;
        boolean $z0, $z1;
        java.io.OutputStream $r2, $r4;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

     label1:
        specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void close()>();

     label2:
        $z0 = r0.<org.apache.commons.io.input.TeeInputStream: boolean closeBranch>;

        if $z0 == 0 goto label6;

        $r2 = r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch>;

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        goto label6;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

     label4:
        $z1 = r0.<org.apache.commons.io.input.TeeInputStream: boolean closeBranch>;

        if $z1 == 0 goto label5;

        $r4 = r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch>;

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label5:
        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int read() throws java.io.IOException
    {
        org.apache.commons.io.input.TeeInputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

        i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read()>();

        if i0 == -1 goto label1;

        $r1 = r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

     label1:
        return i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.input.TeeInputStream r0;
        byte[] r1;
        int i0, i1, i2;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read(byte[],int,int)>(r1, i0, i1);

        if i2 == -1 goto label1;

        $r2 = r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i2);

     label1:
        return i2;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.commons.io.input.TeeInputStream r0;
        byte[] r1;
        int i0;
        java.io.OutputStream $r2;

        r0 := @this: org.apache.commons.io.input.TeeInputStream;

        r1 := @parameter0: byte[];

        i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read(byte[])>(r1);

        if i0 == -1 goto label1;

        $r2 = r0.<org.apache.commons.io.input.TeeInputStream: java.io.OutputStream branch>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, i0);

     label1:
        return i0;
    }
}
