class android.support.v4.media.session.MediaSessionCompatApi21 extends java.lang.Object
{

    void <init>()
    {
        android.support.v4.media.session.MediaSessionCompatApi21 r0;

        r0 := @this: android.support.v4.media.session.MediaSessionCompatApi21;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object createSession(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.media.session.MediaSession $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = new android.media.session.MediaSession;

        specialinvoke $r2.<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>(r0, r1);

        return $r2;
    }

    public static java.lang.Object verifySession(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof android.media.session.MediaSession;

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("mediaSession is not a valid MediaSession object");

        throw $r1;
    }

    public static java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback)
    {
        android.support.v4.media.session.MediaSessionCompatApi21$Callback r0;
        android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy $r1;

        r0 := @parameter0: android.support.v4.media.session.MediaSessionCompatApi21$Callback;

        $r1 = new android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy;

        specialinvoke $r1.<android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy: void <init>(android.support.v4.media.session.MediaSessionCompatApi21$Callback)>(r0);

        return $r1;
    }

    public static void setCallback(java.lang.Object, java.lang.Object, android.os.Handler)
    {
        java.lang.Object r0, r1;
        android.os.Handler r2;
        android.media.session.MediaSession$Callback $r3;
        android.media.session.MediaSession $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: android.os.Handler;

        $r4 = (android.media.session.MediaSession) r0;

        $r3 = (android.media.session.MediaSession$Callback) r1;

        virtualinvoke $r4.<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession$Callback,android.os.Handler)>($r3, r2);

        return;
    }

    public static void setFlags(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setFlags(int)>(i0);

        return;
    }

    public static void setPlaybackToLocal(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        android.media.AudioAttributes$Builder r1, $r2;
        android.media.session.MediaSession $r4;
        android.media.AudioAttributes $r5;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = new android.media.AudioAttributes$Builder;

        specialinvoke $r2.<android.media.AudioAttributes$Builder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes$Builder setLegacyStreamType(int)>(i0);

        $r4 = (android.media.session.MediaSession) r0;

        $r5 = virtualinvoke r1.<android.media.AudioAttributes$Builder: android.media.AudioAttributes build()>();

        virtualinvoke $r4.<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>($r5);

        return;
    }

    public static void setPlaybackToRemote(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.VolumeProvider $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.VolumeProvider) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>($r2);

        return;
    }

    public static void setActive(java.lang.Object, boolean)
    {
        java.lang.Object r0;
        boolean z0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void setActive(boolean)>(z0);

        return;
    }

    public static boolean isActive(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        $z0 = virtualinvoke $r1.<android.media.session.MediaSession: boolean isActive()>();

        return $z0;
    }

    public static void sendSessionEvent(java.lang.Object, java.lang.String, android.os.Bundle)
    {
        java.lang.Object r0;
        java.lang.String r1;
        android.os.Bundle r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.Bundle;

        $r3 = (android.media.session.MediaSession) r0;

        virtualinvoke $r3.<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>(r1, r2);

        return;
    }

    public static void release(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        virtualinvoke $r1.<android.media.session.MediaSession: void release()>();

        return;
    }

    public static android.os.Parcelable getSessionToken(java.lang.Object)
    {
        java.lang.Object r0;
        android.media.session.MediaSession $r1;
        android.media.session.MediaSession$Token $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = (android.media.session.MediaSession) r0;

        $r2 = virtualinvoke $r1.<android.media.session.MediaSession: android.media.session.MediaSession$Token getSessionToken()>();

        return $r2;
    }

    public static void setPlaybackState(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.session.PlaybackState $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.session.PlaybackState) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>($r2);

        return;
    }

    public static void setMetadata(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        android.media.MediaMetadata $r2;
        android.media.session.MediaSession $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        $r3 = (android.media.session.MediaSession) r0;

        $r2 = (android.media.MediaMetadata) r1;

        virtualinvoke $r3.<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>($r2);

        return;
    }
}
