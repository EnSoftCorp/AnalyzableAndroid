public abstract class com.android.datetimepicker.date.MonthAdapter extends android.widget.BaseAdapter implements com.android.datetimepicker.date.MonthView$OnDayClickListener
{
    private static final java.lang.String TAG;
    private final android.content.Context mContext;
    protected final com.android.datetimepicker.date.DatePickerController mController;
    private com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay;
    protected static int WEEK_7_OVERHANG_HEIGHT;
    protected static final int MONTHS_IN_YEAR;

    public void <init>(android.content.Context, com.android.datetimepicker.date.DatePickerController)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        android.content.Context r1;
        com.android.datetimepicker.date.DatePickerController r2, $r3;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r4;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.datetimepicker.date.DatePickerController;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.android.datetimepicker.date.MonthAdapter: android.content.Context mContext> = r1;

        r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController> = r2;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: void init()>();

        $r3 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $r4 = interfaceinvoke $r3.<com.android.datetimepicker.date.DatePickerController: com.android.datetimepicker.date.MonthAdapter$CalendarDay getSelectedDay()>();

        virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: void setSelectedDay(com.android.datetimepicker.date.MonthAdapter$CalendarDay)>($r4);

        return;
    }

    public void setSelectedDay(com.android.datetimepicker.date.MonthAdapter$CalendarDay)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay r1;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        r1 := @parameter0: com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay> = r1;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: void notifyDataSetChanged()>();

        return;
    }

    public com.android.datetimepicker.date.MonthAdapter$CalendarDay getSelectedDay()
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r1;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        $r1 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay>;

        return $r1;
    }

    protected void init()
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r1;
        long $l0;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        $r1 = new com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: void <init>(long)>($l0);

        r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay> = $r1;

        return;
    }

    public int getCount()
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.DatePickerController $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        $r1 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $i0 = interfaceinvoke $r1.<com.android.datetimepicker.date.DatePickerController: int getMaxYear()>();

        $r2 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $i1 = interfaceinvoke $r2.<com.android.datetimepicker.date.DatePickerController: int getMinYear()>();

        $i2 = $i0 - $i1;

        $i3 = $i2 + 1;

        $i4 = $i3 * 12;

        return $i4;
    }

    public java.lang.Object getItem(int)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        int i0;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        i0 := @parameter0: int;

        return null;
    }

    public long getItemId(int)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        int i0;
        long $l1;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        return $l1;
    }

    public boolean hasStableIds()
    {
        com.android.datetimepicker.date.MonthAdapter r0;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        return 1;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        int i0, i1, i2, $i3, $i4, $i5, i6;
        android.view.View r1;
        android.view.ViewGroup r2;
        com.android.datetimepicker.date.MonthView r3;
        java.util.HashMap r4, $r18;
        android.widget.AbsListView$LayoutParams r5, $r7;
        android.content.Context $r6;
        com.android.datetimepicker.date.DatePickerController $r8, $r14;
        boolean $z0;
        java.lang.Integer $r9, $r12, $r13, $r17;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r19;
        java.lang.Object $r20;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.ViewGroup;

        r4 = null;

        if r1 == null goto label1;

        r3 = (com.android.datetimepicker.date.MonthView) r1;

        $r20 = virtualinvoke r3.<com.android.datetimepicker.date.MonthView: java.lang.Object getTag()>();

        r4 = (java.util.HashMap) $r20;

        goto label2;

     label1:
        $r6 = r0.<com.android.datetimepicker.date.MonthAdapter: android.content.Context mContext>;

        r3 = virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthView createMonthView(android.content.Context)>($r6);

        $r7 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r7.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, -1);

        r5 = $r7;

        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void setClickable(boolean)>(1);

        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void setOnDayClickListener(com.android.datetimepicker.date.MonthView$OnDayClickListener)>(r0);

     label2:
        if r4 != null goto label3;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r4 = $r18;

     label3:
        virtualinvoke r4.<java.util.HashMap: void clear()>();

        i6 = i0 % 12;

        $i3 = i0 / 12;

        $r8 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $i4 = interfaceinvoke $r8.<com.android.datetimepicker.date.DatePickerController: int getMinYear()>();

        i1 = $i3 + $i4;

        i2 = -1;

        $z0 = specialinvoke r0.<com.android.datetimepicker.date.MonthAdapter: boolean isSelectedDayInMonth(int,int)>(i1, i6);

        if $z0 == 0 goto label4;

        $r19 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay>;

        i2 = $r19.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int day>;

     label4:
        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void reuse()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("selected_day", $r9);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("year", $r12);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("month", $r13);

        $r14 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $i5 = interfaceinvoke $r14.<com.android.datetimepicker.date.DatePickerController: int getFirstDayOfWeek()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week_start", $r17);

        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void setMonthParams(java.util.HashMap)>(r4);

        virtualinvoke r3.<com.android.datetimepicker.date.MonthView: void invalidate()>();

        return r3;
    }

    public abstract com.android.datetimepicker.date.MonthView createMonthView(android.content.Context);

    private boolean isSelectedDayInMonth(int, int)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        int i0, i1, $i2, $i3;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay>;

        $i2 = $r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int year>;

        if $i2 != i0 goto label1;

        $r2 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.MonthAdapter$CalendarDay mSelectedDay>;

        $i3 = $r2.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int month>;

        if $i3 != i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onDayClick(com.android.datetimepicker.date.MonthView, com.android.datetimepicker.date.MonthAdapter$CalendarDay)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.MonthView r1;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay r2;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        r1 := @parameter0: com.android.datetimepicker.date.MonthView;

        r2 := @parameter1: com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        if r2 == null goto label1;

        virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: void onDayTapped(com.android.datetimepicker.date.MonthAdapter$CalendarDay)>(r2);

     label1:
        return;
    }

    protected void onDayTapped(com.android.datetimepicker.date.MonthAdapter$CalendarDay)
    {
        com.android.datetimepicker.date.MonthAdapter r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay r1;
        com.android.datetimepicker.date.DatePickerController $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.datetimepicker.date.MonthAdapter;

        r1 := @parameter0: com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $r2 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        interfaceinvoke $r2.<com.android.datetimepicker.date.DatePickerController: void tryVibrate()>();

        $r3 = r0.<com.android.datetimepicker.date.MonthAdapter: com.android.datetimepicker.date.DatePickerController mController>;

        $i2 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int year>;

        $i1 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int month>;

        $i0 = r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int day>;

        interfaceinvoke $r3.<com.android.datetimepicker.date.DatePickerController: void onDayOfMonthSelected(int,int,int)>($i2, $i1, $i0);

        virtualinvoke r0.<com.android.datetimepicker.date.MonthAdapter: void setSelectedDay(com.android.datetimepicker.date.MonthAdapter$CalendarDay)>(r1);

        return;
    }

    static void <clinit>()
    {
        <com.android.datetimepicker.date.MonthAdapter: int MONTHS_IN_YEAR> = 12;

        <com.android.datetimepicker.date.MonthAdapter: java.lang.String TAG> = "SimpleMonthAdapter";

        <com.android.datetimepicker.date.MonthAdapter: int WEEK_7_OVERHANG_HEIGHT> = 7;

        return;
    }
}
