public class com.android.email.provider.EmailProvider extends android.content.ContentProvider implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    private static final java.lang.String TAG;
    public static final long SYNC_DELAY_MILLIS;
    public static java.lang.String EMAIL_APP_MIME_TYPE;
    public static final java.lang.String DATABASE_NAME;
    public static final java.lang.String BODY_DATABASE_NAME;
    private static final java.lang.String BACKUP_DATABASE_NAME;
    private static final java.lang.String ACCOUNT_MANAGER_JSON_TAG;
    private static final java.lang.String ACTION_NOTIFY_MESSAGE_LIST_DATASET_CHANGED;
    private static final java.lang.String EMAIL_MESSAGE_MIME_TYPE;
    private static final java.lang.String EMAIL_ATTACHMENT_MIME_TYPE;
    private static final java.lang.String NOTIFICATION_OP_DELETE;
    private static final java.lang.String NOTIFICATION_OP_INSERT;
    private static final java.lang.String NOTIFICATION_OP_UPDATE;
    protected static java.lang.String QUERY_UIREFRESH;
    private static final java.lang.String[] ORPHANS_PROJECTION;
    private static final int ORPHANS_ID;
    private static final int ORPHANS_MAILBOX_KEY;
    private static final java.lang.String WHERE_ID;
    private static final int ACCOUNT_BASE;
    private static final int ACCOUNT;
    private static final int ACCOUNT_ID;
    private static final int ACCOUNT_CHECK;
    private static final int ACCOUNT_PICK_TRASH_FOLDER;
    private static final int ACCOUNT_PICK_SENT_FOLDER;
    private static final int MAILBOX_BASE;
    private static final int MAILBOX;
    private static final int MAILBOX_ID;
    private static final int MAILBOX_NOTIFICATION;
    private static final int MAILBOX_MOST_RECENT_MESSAGE;
    private static final int MAILBOX_MESSAGE_COUNT;
    private static final int MESSAGE_BASE;
    private static final int MESSAGE;
    private static final int MESSAGE_ID;
    private static final int SYNCED_MESSAGE_ID;
    private static final int MESSAGE_SELECTION;
    private static final int MESSAGE_MOVE;
    private static final int MESSAGE_STATE_CHANGE;
    private static final int ATTACHMENT_BASE;
    private static final int ATTACHMENT;
    private static final int ATTACHMENT_ID;
    private static final int ATTACHMENTS_MESSAGE_ID;
    private static final int ATTACHMENTS_CACHED_FILE_ACCESS;
    private static final int HOSTAUTH_BASE;
    private static final int HOSTAUTH;
    private static final int HOSTAUTH_ID;
    private static final int UPDATED_MESSAGE_BASE;
    private static final int UPDATED_MESSAGE;
    private static final int UPDATED_MESSAGE_ID;
    private static final int DELETED_MESSAGE_BASE;
    private static final int DELETED_MESSAGE;
    private static final int DELETED_MESSAGE_ID;
    private static final int POLICY_BASE;
    private static final int POLICY;
    private static final int POLICY_ID;
    private static final int QUICK_RESPONSE_BASE;
    private static final int QUICK_RESPONSE;
    private static final int QUICK_RESPONSE_ID;
    private static final int QUICK_RESPONSE_ACCOUNT_ID;
    private static final int UI_BASE;
    private static final int UI_FOLDERS;
    private static final int UI_SUBFOLDERS;
    private static final int UI_MESSAGES;
    private static final int UI_MESSAGE;
    private static final int UI_UNDO;
    private static final int UI_FOLDER_REFRESH;
    private static final int UI_FOLDER;
    private static final int UI_ACCOUNT;
    private static final int UI_ACCTS;
    private static final int UI_ATTACHMENTS;
    private static final int UI_ATTACHMENT;
    private static final int UI_ATTACHMENT_BY_CID;
    private static final int UI_SEARCH;
    private static final int UI_ACCOUNT_DATA;
    private static final int UI_FOLDER_LOAD_MORE;
    private static final int UI_CONVERSATION;
    private static final int UI_RECENT_FOLDERS;
    private static final int UI_DEFAULT_RECENT_FOLDERS;
    private static final int UI_FULL_FOLDERS;
    private static final int UI_ALL_FOLDERS;
    private static final int UI_PURGE_FOLDER;
    private static final int UI_INBOX;
    private static final int UI_ACCTSETTINGS;
    private static final int BODY_BASE;
    private static final int BODY;
    private static final int BODY_ID;
    private static final int BODY_HTML;
    private static final int BODY_TEXT;
    private static final int CREDENTIAL_BASE;
    private static final int CREDENTIAL;
    private static final int CREDENTIAL_ID;
    private static final int BASE_SHIFT;
    private static final android.util.SparseArray TABLE_NAMES;
    private static final android.content.UriMatcher sURIMatcher;
    private static final java.lang.Object sDatabaseLock;
    private static final java.lang.String UPDATED_MESSAGE_INSERT;
    private static final java.lang.String UPDATED_MESSAGE_DELETE;
    private static final java.lang.String DELETED_MESSAGE_INSERT;
    private static final java.lang.String ORPHAN_BODY_MESSAGE_ID_SELECT;
    private static final java.lang.String DELETE_ORPHAN_BODIES;
    private static final java.lang.String DELETE_BODY;
    private static final android.content.ContentValues EMPTY_CONTENT_VALUES;
    private static final java.lang.String MESSAGE_URI_PARAMETER_MAILBOX_ID;
    private int mLastSequence;
    private final java.util.ArrayList mLastSequenceOps;
    private static final java.lang.String IS_UIPROVIDER;
    private static final java.lang.String SYNC_STATUS_CALLBACK_METHOD;
    public static android.net.Uri INTEGRITY_CHECK_URI;
    public static android.net.Uri ACCOUNT_BACKUP_URI;
    private static android.net.Uri FOLDER_STATUS_URI;
    private android.database.sqlite.SQLiteDatabase mDatabase;
    private android.database.sqlite.SQLiteDatabase mBodyDatabase;
    private android.os.Handler mDelayedSyncHandler;
    private final java.util.Set mDelayedSyncRequests;
    private static android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER;
    private static android.net.Uri UIPROVIDER_FOLDER_NOTIFIER;
    private static android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER;
    private static android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER;
    private static android.net.Uri UIPROVIDER_ATTACHMENT_NOTIFIER;
    private static android.net.Uri UIPROVIDER_ATTACHMENTS_NOTIFIER;
    public static android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER;
    private static android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER;
    private static android.net.Uri UIPROVIDER_RECENT_FOLDERS_NOTIFIER;
    private static final java.lang.String MESSAGE_CHANGE_LOG_TABLE_INSERT_PREFIX;
    private static final java.lang.String MESSAGE_CHANGE_LOG_TABLE_VALUES_PREFIX;
    private static final java.lang.String MESSAGE_MOVE_INSERT;
    private static final java.lang.String MESSAGE_STATE_CHANGE_INSERT;
    private static final java.lang.String ACCOUNT_INTEGRITY_SQL;
    private static final java.lang.String GET_MESSAGE_DETAILS;
    private static final int INDEX_PROTOCOL;
    private static final int INDEX_MAILBOX_KEY;
    private static final int INDEX_ACCOUNT_KEY;
    private static final java.lang.String GET_ACCOUNT_DETAILS;
    private static final int INDEX_EMAIL_ADDRESS;
    private static final int INDEX_SYNC_KEY;
    private final java.lang.ThreadLocal mTLBatchNotifications;
    private final com.android.email.provider.EmailProvider$EmailAttachmentService DEFAULT_ATTACHMENT_SERVICE;
    private com.android.email.provider.EmailProvider$EmailAttachmentService mAttachmentService;
    private static final java.lang.String NOT_A_DRAFT_STRING;
    private static final java.lang.String CONVERSATION_FLAGS;
    private static final int[] ACCOUNT_COLORS;
    private static final java.lang.String CONVERSATION_COLOR;
    private static final java.lang.String ACCOUNT_COLOR;
    private static com.android.common.content.ProjectionMap sMessageListMap;
    private static final java.lang.String MESSAGE_DRAFT_TYPE;
    private static final java.lang.String MESSAGE_FLAGS;
    private static com.android.common.content.ProjectionMap sMessageViewMap;
    private static final java.lang.String FOLDER_CAPABILITIES;
    private static final java.lang.String FOLDER_TYPE;
    private static final java.lang.String FOLDER_ICON;
    private static final java.lang.String TOTAL_COUNT;
    private static com.android.common.content.ProjectionMap sFolderListMap;
    private static com.android.common.content.ProjectionMap sAccountListMap;
    private static com.android.common.content.ProjectionMap sQuickResponseMap;
    private static final java.lang.String MAILBOX_ORDER_BY;
    private static com.android.common.content.ProjectionMap sAttachmentMap;
    private static final java.util.regex.Pattern IMG_TAG_START_REGEX;
    public static final java.lang.String LEGACY_AUTHORITY;
    private static final android.net.Uri BASE_EXTERNAL_URI;
    private static final android.net.Uri BASE_EXTERAL_URI2;
    public static final long COMBINED_ACCOUNT_ID;
    private static final java.lang.String COMBINED_ACCOUNT_ID_STRING;
    private static final java.lang.String[] MESSAGE_KEYS_PROJECTION;
    private static final int MESSAGE_KEYS_MAILBOX_KEY_COLUMN;
    private static final int MESSAGE_KEYS_ACCOUNT_KEY_COLUMN;
    public static final java.lang.String PICKER_UI_ACCOUNT;
    public static final java.lang.String PICKER_MAILBOX_TYPE;
    public static final java.lang.String PICKER_HEADER_ID;
    private static final int NOTIFY_FOLDER_LOOP_MESSAGE_ID;
    private android.os.Handler mFolderNotifierHandler;
    public static final int VISIBLE_LIMIT_INCREMENT;
    public static final int SEARCH_MORE_INCREMENT;
    private static final java.lang.String SEARCH_MAILBOX_SERVER_ID;
    private com.android.emailcommon.service.SearchParams mSearchParams;
    private static final java.lang.String MAILBOXES_FOR_ACCOUNT_SELECTION;
    private static final java.lang.String[] ACCOUNT_EMAIL_PROJECTION;
    private int[] mSavedWidgetIds;
    private final java.util.ArrayList mWidgetNotifyMailboxes;
    private android.appwidget.AppWidgetManager mAppWidgetManager;
    private android.content.ComponentName mEmailComponent;

    public void <init>()
    {
        com.android.email.provider.EmailProvider r0;
        java.util.ArrayList $r1, $r7;
        java.util.HashSet $r2;
        java.lang.ThreadLocal $r3;
        com.android.email.provider.EmailProvider$3 $r4;
        com.android.email.provider.EmailProvider$EmailAttachmentService $r5;
        int[] $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        r0.<com.android.email.provider.EmailProvider: int mLastSequence> = -1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.email.provider.EmailProvider: java.util.Set mDelayedSyncRequests> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        r0.<com.android.email.provider.EmailProvider: java.lang.ThreadLocal mTLBatchNotifications> = $r3;

        $r4 = new com.android.email.provider.EmailProvider$3;

        specialinvoke $r4.<com.android.email.provider.EmailProvider$3: void <init>(com.android.email.provider.EmailProvider)>(r0);

        r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService DEFAULT_ATTACHMENT_SERVICE> = $r4;

        $r5 = r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService DEFAULT_ATTACHMENT_SERVICE>;

        r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService mAttachmentService> = $r5;

        $r6 = newarray (int)[0];

        r0.<com.android.email.provider.EmailProvider: int[] mSavedWidgetIds> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes> = $r7;

        return;
    }

    private static int findMatch(android.net.Uri, java.lang.String)
    {
        android.net.Uri r0;
        java.lang.String r1, $r4, $r10, $r16;
        int i0;
        android.content.UriMatcher $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r9, $r12, $r14, $r15;
        java.lang.Object[] $r11;
        java.lang.IllegalArgumentException $r13;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        i0 = virtualinvoke $r2.<android.content.UriMatcher: int match(android.net.Uri)>(r0);

        if i0 >= 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown uri: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label1:
        $z0 = <com.android.emailcommon.Logging: boolean LOGD>;

        if $z0 == 0 goto label2;

        $r4 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": uri=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", match is ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>($r4, $r10, $r11);

     label2:
        return i0;
    }

    private static void reconcileAccountsAsync(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;
        com.android.email.provider.EmailProvider$1 $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(2131558419);

        if $z0 == 0 goto label1;

        $r2 = new com.android.email.provider.EmailProvider$1;

        specialinvoke $r2.<com.android.email.provider.EmailProvider$1: void <init>(android.content.Context)>(r0);

        staticinvoke <com.android.emailcommon.utility.EmailAsyncTask: com.android.emailcommon.utility.EmailAsyncTask runAsyncParallel(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    public static android.net.Uri uiUri(java.lang.String, long)
    {
        java.lang.String r0, $r1;
        long l0;
        android.net.Uri $r2;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>(r0, l0);

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String uiUriString(java.lang.String, long)
    {
        java.lang.String r0, $r3, $r10, $r12;
        long l0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        byte $b1;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r3 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r10 = "";

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static void deleteUnlinked(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, r2, r3, r4, $r12, $r15, $r18;
        int i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r16, $r17, $r19;
        java.lang.Object[] $r20;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in (select ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r1, $r12, null);

        if i0 <= 0 goto label1;

        $r15 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" orphaned row(s) in ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r15, $r18, $r20);

     label1:
        return;
    }

    private void fixParentKeys(android.database.sqlite.SQLiteDatabase)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.Object[] $r2;
        java.lang.String $r3;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r3 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "Fixing parent keys", $r2);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("update Mailbox set parentKey=(select _id from Mailbox as b where Mailbox.parentServerId=b.serverId and Mailbox.parentServerId not null and Mailbox.accountKey=b.accountKey)");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("update Mailbox set parentKey=-1 where parentKey=0 or parentKey is null");

        return;
    }

    public android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        java.lang.Object r2, $r7;
        com.android.email.provider.DBHelper$DatabaseHelper r3, $r9;
        com.android.email.provider.DBHelper$BodyDatabaseHelper r4, $r11;
        java.lang.String r5, $r28;
        java.lang.Throwable r6, $r30;
        android.database.sqlite.SQLiteDatabase $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r29;
        java.lang.StringBuilder $r23, $r24, $r26, $r27;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        $r7 = <com.android.email.provider.EmailProvider: java.lang.Object sDatabaseLock>;

        r2 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r8 == null goto label3;

        $r29 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        exitmonitor r2;

     label2:
        return $r29;

     label3:
        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        $r9 = new com.android.email.provider.DBHelper$DatabaseHelper;

        specialinvoke $r9.<com.android.email.provider.DBHelper$DatabaseHelper: void <init>(android.content.Context,java.lang.String)>(r1, "EmailProvider.db");

        r3 = $r9;

        $r10 = virtualinvoke r3.<com.android.email.provider.DBHelper$DatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase> = $r10;

        $r11 = new com.android.email.provider.DBHelper$BodyDatabaseHelper;

        specialinvoke $r11.<com.android.email.provider.DBHelper$BodyDatabaseHelper: void <init>(android.content.Context,java.lang.String)>(r1, "EmailProviderBody.db");

        r4 = $r11;

        $r12 = virtualinvoke r4.<com.android.email.provider.DBHelper$BodyDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase> = $r12;

        $r13 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase>;

        if $r13 == null goto label4;

        $r21 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase>;

        r5 = virtualinvoke $r21.<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>();

        $r25 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach \"");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" as BodyDatabase");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r28);

     label4:
        $r14 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void restoreIfNeeded(android.content.Context,android.database.sqlite.SQLiteDatabase)>(r1, $r14);

        $r15 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void deleteMessageOrphans(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r15, "Message_Updates");

        $r17 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void deleteMessageOrphans(android.database.sqlite.SQLiteDatabase,java.lang.String)>($r17, "Message_Deletes");

        $r16 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void deleteUnlinked(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r16, "Mailbox", "accountKey", "_id", "Account");

        $r19 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void deleteUnlinked(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r19, "Message", "accountKey", "_id", "Account");

        $r18 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        staticinvoke <com.android.email.provider.EmailProvider: void deleteUnlinked(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r18, "Policy", "_id", "policyKey", "Account");

        $r20 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void fixParentKeys(android.database.sqlite.SQLiteDatabase)>($r20);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void initUiProvider()>();

        $r22 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        exitmonitor r2;

     label5:
        return $r22;

     label6:
        $r30 := @caughtexception;

        r6 = $r30;

        exitmonitor r2;

     label7:
        throw r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void initUiProvider()
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @this: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("update Mailbox set uiSyncStatus=0");

        return;
    }

    private static void restoreIfNeeded(android.content.Context, android.database.sqlite.SQLiteDatabase)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r6, $r8, $r10, $r11;
        java.io.File r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] $r4;
        long $l0;
        byte $b1;
        java.lang.Object[] $r5, $r7, $r9, $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        $z0 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r11 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r11, "restoreIfNeeded...", $r12);

     label1:
        r2 = staticinvoke <com.android.email.Preferences: java.lang.String getLegacyBackupPreference(android.content.Context)>(r0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label2;

        staticinvoke <com.android.email.provider.EmailProvider: int backupAccounts(android.content.Context,android.database.sqlite.SQLiteDatabase)>(r0, r1);

        staticinvoke <com.android.email.Preferences: void clearLegacyBackupPreference(android.content.Context)>(r0);

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "Created new EmailProvider backup database", $r9);

        return;

     label2:
        r3 = virtualinvoke r0.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("EmailProviderBackup.db");

        $z2 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label3;

        staticinvoke <com.android.email.provider.EmailProvider: int backupAccounts(android.content.Context,android.database.sqlite.SQLiteDatabase)>(r0, r1);

        virtualinvoke r0.<android.content.Context: boolean deleteDatabase(java.lang.String)>("EmailProviderBackup.db");

        $r8 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "Migrated from backup database to account manager", $r7);

        return;

     label3:
        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String[] ID_PROJECTION>;

        $l0 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r1, "SELECT EXISTS (SELECT ? FROM Account )", $r4);

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label5;

        $z3 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z3 == 0 goto label4;

        $r6 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "restoreIfNeeded: Account exists.", $r5);

     label4:
        return;

     label5:
        staticinvoke <com.android.email.provider.EmailProvider: int restoreAccounts(android.content.Context)>(r0);

        return;
    }

    public void shutdown()
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase $r1, $r2, $r3, $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        virtualinvoke $r4.<android.database.sqlite.SQLiteDatabase: void close()>();

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase> = null;

     label1:
        $r2 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase>;

        virtualinvoke $r3.<android.database.sqlite.SQLiteDatabase: void close()>();

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase> = null;

     label2:
        return;
    }

    public static void deleteMessageOrphans(android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String r1, $r16, $r20;
        android.database.Cursor r2, r7;
        java.util.ArrayList r3, r4, r5, $r11, $r12, $r13;
        java.lang.String[] r6, $r10, $r19;
        long l0, l1, $l4, $l5;
        java.lang.Throwable r8, r9, $r24, $r26;
        int $i2;
        boolean $z0, $z1, $z2, $z3, $z5;
        java.lang.Object $r14;
        java.lang.Long $r15, $r17, $r18, $r21, $r22, $r23, $r25;
        java.util.Iterator r27;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label17;

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String[] ORPHANS_PROJECTION>;

        r2 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(r1, $r10, null, null, null, null, null);

     label01:
        $i2 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        if $i2 != 0 goto label03;

     label02:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return;

     label03:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r3 = $r11;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        r4 = $r13;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r5 = $r12;

        r6 = newarray (java.lang.String)[1];

     label04:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label12;

        l0 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(1);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z2 = virtualinvoke r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r17);

        if $z2 == 0 goto label05;

        $l5 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        goto label11;

     label05:
        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z3 = virtualinvoke r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r18);

        if $z3 != 0 goto label11;

        $r20 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r6[0] = $r20;

        $r19 = <com.android.emailcommon.provider.Mailbox: java.lang.String[] ID_PROJECTION>;

        r7 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Mailbox", $r19, "_id=?", r6, null, null, null);

     label06:
        $z5 = interfaceinvoke r7.<android.database.Cursor: boolean moveToFirst()>();

        if $z5 == 0 goto label07;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label08;

     label07:
        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        $l4 = interfaceinvoke r2.<android.database.Cursor: long getLong(int)>(0);

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

     label08:
        interfaceinvoke r7.<android.database.Cursor: void close()>();

        goto label11;

     label09:
        $r26 := @caughtexception;

        r8 = $r26;

     label10:
        interfaceinvoke r7.<android.database.Cursor: void close()>();

        throw r8;

     label11:
        goto label04;

     label12:
        r27 = virtualinvoke r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label13:
        $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r14 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.lang.Long) $r14;

        l1 = virtualinvoke $r15.<java.lang.Long: long longValue()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        r6[0] = $r16;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r1, "_id=?", r6);

        goto label13;

     label14:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label17;

     label15:
        $r24 := @caughtexception;

        r9 = $r24;

     label16:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r9;

     label17:
        return;

        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r21, $r24, $r29, $r30, $r39, $r40, $r41;
        java.lang.String r2, r6, r7, $r15, $r16, $r26, $r31, $r36, $r44, $r45, $r55, $r56, $r64, $r67;
        java.lang.String[] r3, $r20;
        int i0, i1, i2, i3, i4, i11, i12, i13;
        android.content.Context r4;
        android.database.sqlite.SQLiteDatabase r5;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r8, r10, r13, $r54, $r59, $r63;
        java.lang.IllegalStateException r9, r11, $r60, $r62;
        java.lang.StringBuilder $r12, $r14, $r17, $r25, $r27, $r28, $r33, $r37, $r38, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r57;
        java.lang.Object $r18, $r23, $r43;
        android.util.SparseArray $r19;
        long $l6, l15, l16, l17;
        java.util.List $r22, $r42;
        android.content.ContentValues $r32, $r35, r69, r71;
        java.lang.Long $r34;
        java.lang.IllegalArgumentException $r58;
        android.database.sqlite.SQLiteException $r61, r72;
        java.lang.Object[] $r65, $r66;
        android.database.Cursor r68, r70;
        byte b14;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r15 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Delete: ");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r15, $r16);

        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "delete");

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r5 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r4);

        i1 = i0 >> 12;

        r6 = "0";

        z0 = 0;

        $r19 = <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES>;

        $r18 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r7 = (java.lang.String) $r18;

        i2 = -1;

     label01:
        if i0 == 8193 goto label02;

        if i0 != 8194 goto label03;

     label02:
        $z1 = virtualinvoke r1.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("is_uiprovider", 0);

        if $z1 != 0 goto label03;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIConversation(android.net.Uri)>(r1);

     label03:
        lookupswitch(i0)
        {
            case 0: goto label27;
            case 1: goto label27;
            case 4096: goto label27;
            case 4097: goto label27;
            case 8192: goto label27;
            case 8193: goto label27;
            case 8194: goto label27;
            case 8195: goto label16;
            case 36867: goto label04;
            case 36871: goto label10;
            case 36877: goto label07;
            case 36884: goto label13;
            default: goto label28;
        };

     label04:
        i3 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiDeleteMessage(android.net.Uri)>(r1);

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label06:
        return i3;

     label07:
        i11 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiDeleteAccountData(android.net.Uri)>(r1);

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label09:
        return i11;

     label10:
        i12 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiDeleteAccount(android.net.Uri)>(r1);

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label12:
        return i12;

     label13:
        i13 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiPurgeFolder(android.net.Uri)>(r1);

     label14:
        if z0 == 0 goto label15;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label15:
        return i13;

     label16:
        $r20 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] ID_COLUMN_PROJECTION>;

        r68 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(r7, $r20, r2, r3, null, null, null);

     label17:
        $z2 = interfaceinvoke r68.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label21;

        $r21 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $l6 = interfaceinvoke r68.<android.database.Cursor: long getLong(int)>(0);

        $r24 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r21, $l6);

        i4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r24, null, null);

     label18:
        interfaceinvoke r68.<android.database.Cursor: void close()>();

     label19:
        if z0 == 0 goto label20;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label20:
        return i4;

     label21:
        b14 = 0;

     label22:
        interfaceinvoke r68.<android.database.Cursor: void close()>();

     label23:
        if z0 == 0 goto label24;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label24:
        return b14;

     label25:
        $r59 := @caughtexception;

        r8 = $r59;

     label26:
        interfaceinvoke r68.<android.database.Cursor: void close()>();

        throw r8;

     label27:
        z0 = 1;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label28:
        lookupswitch(i0)
        {
            case 0: goto label36;
            case 1: goto label29;
            case 4096: goto label36;
            case 4097: goto label29;
            case 8192: goto label36;
            case 8193: goto label29;
            case 8194: goto label29;
            case 8196: goto label37;
            case 8197: goto label38;
            case 12288: goto label36;
            case 12289: goto label29;
            case 12290: goto label35;
            case 16384: goto label36;
            case 16385: goto label29;
            case 20480: goto label36;
            case 20481: goto label29;
            case 24576: goto label36;
            case 24577: goto label29;
            case 28672: goto label36;
            case 28673: goto label29;
            case 32769: goto label29;
            case 40960: goto label36;
            case 40961: goto label29;
            case 45057: goto label29;
            default: goto label39;
        };

     label29:
        $r42 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r43 = interfaceinvoke $r42.<java.util.List: java.lang.Object get(int)>(1);

        r6 = (java.lang.String) $r43;

        if i0 != 8194 goto label30;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert or replace into Message_Deletes select * from Message where _id=");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r45 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r45);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete from Message_Updates where _id=");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r56 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r56);

     label30:
        if i0 != 4097 goto label31;

        l15 = staticinvoke <com.android.emailcommon.provider.Mailbox: long getAccountIdForMailbox(android.content.Context,java.lang.String)>(r4, r6);

        goto label32;

     label31:
        l15 = -1L;

     label32:
        $r44 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWithId(java.lang.String,java.lang.String)>(r6, r2);

        i2 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r7, $r44, r3);

        if i0 != 1 goto label33;

        $r40 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r40, r6);

        $r41 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r41, null);

        goto label40;

     label33:
        if i0 != 4097 goto label34;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(java.lang.String,long)>(r6, l15);

        goto label40;

     label34:
        if i0 != 12289 goto label40;

        $r39 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENT_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r39, r6);

        goto label40;

     label35:
        $r22 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(2);

        r6 = (java.lang.String) $r23;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageKey=");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWith(java.lang.String,java.lang.String)>($r26, r2);

        i2 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r7, $r31, r3);

        goto label40;

     label36:
        i2 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(r7, r2, r3);

        goto label40;

     label37:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("MessageMove", r2, r3);

        goto label40;

     label38:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("MessageStateChange", r2, r3);

        goto label40;

     label39:
        $r58 = new java.lang.IllegalArgumentException;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r55);

        throw $r58;

     label40:
        if z0 == 0 goto label57;

        if i0 != 8193 goto label45;

        $r35 = new android.content.ContentValues;

        specialinvoke $r35.<android.content.ContentValues: void <init>(int)>(2);

        r69 = $r35;

        virtualinvoke r69.<android.content.ContentValues: void putNull(java.lang.String)>("htmlContent");

        virtualinvoke r69.<android.content.ContentValues: void putNull(java.lang.String)>("textContent");

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r6);

        l16 = virtualinvoke $r34.<java.lang.Long: long longValue()>();

     label41:
        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFiles(android.content.Context,long,android.content.ContentValues)>(r4, l16, r69);

     label42:
        goto label44;

     label43:
        $r60 := @caughtexception;

        r9 = $r60;

        $r67 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r66 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r67, r9, "Exception while deleting bodies", $r66);

     label44:
        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete from Body where messageKey=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r36);

        goto label56;

     label45:
        r70 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select messageKey from Body except select _id from Message", null);

     label46:
        $r32 = new android.content.ContentValues;

        specialinvoke $r32.<android.content.ContentValues: void <init>(int)>(2);

        r71 = $r32;

        virtualinvoke r71.<android.content.ContentValues: void putNull(java.lang.String)>("htmlContent");

        virtualinvoke r71.<android.content.ContentValues: void putNull(java.lang.String)>("textContent");

     label47:
        $z3 = interfaceinvoke r70.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label52;

        l17 = interfaceinvoke r70.<android.database.Cursor: long getLong(int)>(0);

     label48:
        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFiles(android.content.Context,long,android.content.ContentValues)>(r4, l17, r71);

     label49:
        goto label51;

     label50:
        $r62 := @caughtexception;

        r11 = $r62;

        $r64 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r65 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r64, r11, "Exception while deleting bodies", $r65);

     label51:
        goto label47;

     label52:
        interfaceinvoke r70.<android.database.Cursor: void close()>();

        goto label55;

     label53:
        $r63 := @caughtexception;

        r10 = $r63;

     label54:
        interfaceinvoke r70.<android.database.Cursor: void close()>();

        throw r10;

     label55:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("delete from Body where messageKey in (select messageKey from Body except select _id from Message)");

     label56:
        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label57:
        if z0 == 0 goto label62;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label62;

     label58:
        $r61 := @caughtexception;

        r72 = $r61;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        throw r72;

     label59:
        $r54 := @caughtexception;

        r13 = $r54;

     label60:
        if z0 == 0 goto label61;

        virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label61:
        throw r13;

     label62:
        $r30 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri getBaseNotificationUri(int)>(i0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void sendNotifierChange(android.net.Uri,java.lang.String,java.lang.String)>($r30, "delete", r6);

        $r29 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r29, null);

        return i2;

        catch java.lang.Throwable from label17 to label18 with label25;
        catch java.lang.Throwable from label21 to label22 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.IllegalStateException from label41 to label42 with label43;
        catch java.lang.IllegalStateException from label48 to label49 with label50;
        catch java.lang.Throwable from label46 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch android.database.sqlite.SQLiteException from label01 to label05 with label58;
        catch android.database.sqlite.SQLiteException from label07 to label08 with label58;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label58;
        catch android.database.sqlite.SQLiteException from label13 to label14 with label58;
        catch android.database.sqlite.SQLiteException from label16 to label19 with label58;
        catch android.database.sqlite.SQLiteException from label21 to label23 with label58;
        catch android.database.sqlite.SQLiteException from label25 to label57 with label58;
        catch java.lang.Throwable from label01 to label05 with label59;
        catch java.lang.Throwable from label07 to label08 with label59;
        catch java.lang.Throwable from label10 to label11 with label59;
        catch java.lang.Throwable from label13 to label14 with label59;
        catch java.lang.Throwable from label16 to label19 with label59;
        catch java.lang.Throwable from label21 to label23 with label59;
        catch java.lang.Throwable from label25 to label57 with label59;
        catch java.lang.Throwable from label58 to label60 with label59;
    }

    public java.lang.String getType(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        int i0;
        java.lang.String r2, r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "getType");

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 4096: goto label06;
            case 4097: goto label07;
            case 8192: goto label05;
            case 8193: goto label03;
            case 12288: goto label10;
            case 12289: goto label11;
            case 12290: goto label10;
            case 16384: goto label12;
            case 16385: goto label13;
            case 20480: goto label05;
            case 20481: goto label03;
            case 40960: goto label02;
            case 40961: goto label01;
            default: goto label14;
        };

     label01:
        return "vnd.android.cursor.item/email-body";

     label02:
        return "vnd.android.cursor.dir/email-body";

     label03:
        r2 = "vnd.android.cursor.item/email-message";

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("mailboxId");

        if r3 == null goto label04;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        return r2;

     label05:
        return "vnd.android.cursor.dir/email-message";

     label06:
        return "vnd.android.cursor.dir/email-mailbox";

     label07:
        return "vnd.android.cursor.item/email-mailbox";

     label08:
        return "vnd.android.cursor.dir/email-account";

     label09:
        return "vnd.android.cursor.item/email-account";

     label10:
        return "vnd.android.cursor.dir/email-attachment";

     label11:
        return "vnd.android.cursor.item/email-attachment";

     label12:
        return "vnd.android.cursor.dir/email-hostauth";

     label13:
        return "vnd.android.cursor.item/email-hostauth";

     label14:
        return null;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r6, $r18, $r21, $r25, $r26, $r33, $r34, $r39, $r54, $r55, $r59, $r63, $r66, $r72, $r73;
        android.content.ContentValues r2, r7, $r16;
        int i0, i1, $i10, i14;
        android.content.Context r3, $r20, $r50;
        android.database.sqlite.SQLiteDatabase r4;
        java.lang.String r5, $r11, $r12, $r22, $r28, $r36, $r42, $r46, $r48, $r58, $r62, $r67, r76;
        long l2, l3, l4, $l7, $l9, $l11, $l12, l13, l15, l16, l17, l18, l19;
        java.lang.StringBuilder $r8, $r10, $r13, $r40, $r41, $r44, $r68, $r69, $r70;
        java.lang.Long r9, $r17, $r27, $r35, $r51, $r53, $r65, $r74;
        java.lang.Integer $r14, $r15, $r52, $r56;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.IllegalArgumentException $r19, $r43, $r71;
        java.util.List $r23, $r32, $r60, $r64;
        java.lang.Object $r24, $r29, $r31, $r37, $r57, $r61;
        android.util.SparseArray $r30, $r38;
        java.lang.Throwable $r45;
        java.lang.Object[] $r47;
        com.android.email.provider.EmailProvider$EmailAttachmentService $r49;
        byte $b8;
        android.database.sqlite.SQLiteException $r75, r77;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $r11 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Insert: ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r12);

        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "insert");

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r3);

        i1 = i0 >> 12;

        r5 = "0";

        if i0 == 4097 goto label01;

        if i0 != 4096 goto label02;

     label01:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("unreadCount", $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("messageCount", $r15);

     label02:
        lookupswitch(i0)
        {
            case 0: goto label06;
            case 1: goto label24;
            case 4096: goto label06;
            case 4097: goto label20;
            case 8192: goto label05;
            case 8193: goto label22;
            case 12288: goto label06;
            case 12290: goto label26;
            case 16384: goto label06;
            case 20480: goto label05;
            case 24576: goto label05;
            case 28672: goto label06;
            case 32768: goto label06;
            case 32770: goto label18;
            case 40960: goto label03;
            case 45056: goto label06;
            default: goto label27;
        };

     label03:
        $r16 = new android.content.ContentValues;

        specialinvoke $r16.<android.content.ContentValues: void <init>(android.content.ContentValues)>(r2);

        r7 = $r16;

        virtualinvoke r7.<android.content.ContentValues: void remove(java.lang.String)>("htmlContent");

        virtualinvoke r7.<android.content.ContentValues: void remove(java.lang.String)>("textContent");

        l2 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("Body", "foo", r7);

        r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l2);

        $z0 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("messageKey");

        if $z0 != 0 goto label04;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot insert body without MESSAGE_KEY");

        throw $r19;

     label04:
        $r17 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("messageKey");

        l3 = virtualinvoke $r17.<java.lang.Long: long longValue()>();

        $r20 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFiles(android.content.Context,long,android.content.ContentValues)>($r20, l3, r2);

        goto label28;

     label05:
        staticinvoke <com.android.email.provider.EmailProvider: void decodeEmailAddresses(android.content.ContentValues)>(r2);

     label06:
        $r38 = <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES>;

        $r37 = virtualinvoke $r38.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r36 = (java.lang.String) $r37;

        l13 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r36, "foo", r2);

        r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l13);

        lookupswitch(i0)
        {
            case 0: goto label11;
            case 4096: goto label09;
            case 8192: goto label07;
            case 12288: goto label14;
            case 20480: goto label13;
            case 24576: goto label13;
            default: goto label17;
        };

     label07:
        $r53 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("mailboxKey");

        l4 = virtualinvoke $r53.<java.lang.Long: long longValue()>();

        $z3 = virtualinvoke r1.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("is_uiprovider", 0);

        if $z3 != 0 goto label08;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIConversationMailbox(long)>(l4);

     label08:
        $r51 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("accountKey");

        $l7 = virtualinvoke $r51.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>(l4, $l7);

        goto label17;

     label09:
        $z4 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("type");

        if $z4 == 0 goto label17;

        $r56 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("type");

        $i10 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

        if $i10 >= 64 goto label17;

        r9 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("accountKey");

        if r9 == null goto label10;

        $l11 = virtualinvoke r9.<java.lang.Long: long longValue()>();

        $b8 = $l11 cmp 0L;

        if $b8 <= 0 goto label10;

        $r54 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER>;

        $l9 = virtualinvoke r9.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r54, $l9);

        $r55 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        $l12 = virtualinvoke r9.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r55, $l12);

     label10:
        goto label17;

     label11:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void updateAccountSyncInterval(long,android.content.ContentValues)>(l13, r2);

        $z5 = virtualinvoke r1.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("is_uiprovider", 0);

        if $z5 != 0 goto label12;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIAccount(long)>(l13);

     label12:
        $r59 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r59, null);

        goto label17;

     label13:
        $r43 = new java.lang.IllegalArgumentException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r43.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r42);

        throw $r43;

     label14:
        i14 = 0;

        $z1 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("flags");

        if $z1 == 0 goto label15;

        $r52 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("flags");

        i14 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

     label15:
        $r48 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("location");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r48);

        if $z2 == 0 goto label16;

        $r46 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r45 = new java.lang.Throwable;

        specialinvoke $r45.<java.lang.Throwable: void <init>()>();

        $r47 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r46, $r45, "attachment with blank location", $r47);

     label16:
        $r49 = r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService mAttachmentService>;

        $r50 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        interfaceinvoke $r49.<com.android.email.provider.EmailProvider$EmailAttachmentService: void attachmentChanged(android.content.Context,long,int)>($r50, l13, i14);

     label17:
        goto label28;

     label18:
        $r23 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(2);

        $r22 = (java.lang.String) $r24;

        l15 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r22);

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("accountKey", $r27);

        $r25 = <com.android.emailcommon.provider.QuickResponse: android.net.Uri CONTENT_URI>;

        $r26 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r25, r2);

     label19:
        return $r26;

     label20:
        $r60 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r57 = interfaceinvoke $r60.<java.util.List: java.lang.Object get(int)>(1);

        $r58 = (java.lang.String) $r57;

        l16 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r58);

        $r65 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("mailboxKey", $r65);

        $r66 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r63 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r66, r2);

     label21:
        return $r63;

     label22:
        $r32 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r31 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(1);

        r76 = (java.lang.String) $r31;

        l17 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r76);

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l17);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("messageKey", $r35);

        $r34 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri CONTENT_URI>;

        $r39 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r34, r2);

     label23:
        return $r39;

     label24:
        $r64 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r61 = interfaceinvoke $r64.<java.util.List: java.lang.Object get(int)>(1);

        $r62 = (java.lang.String) $r61;

        l18 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r62);

        $r74 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l18);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("accountKey", $r74);

        $r73 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r72 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r73, r2);

     label25:
        return $r72;

     label26:
        $r30 = <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES>;

        $r29 = virtualinvoke $r30.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        $r28 = (java.lang.String) $r29;

        l19 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>($r28, "foo", r2);

        $r33 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri CONTENT_URI>;

        r6 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r33, l19);

        goto label28;

     label27:
        $r71 = new java.lang.IllegalArgumentException;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r67);

        throw $r71;

     label28:
        goto label30;

     label29:
        $r75 := @caughtexception;

        r77 = $r75;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        throw r77;

     label30:
        $r21 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri getBaseNotificationUri(int)>(i0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void sendNotifierChange(android.net.Uri,java.lang.String,java.lang.String)>($r21, "insert", r5);

        $r18 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r18, null);

        return r6;

        catch android.database.sqlite.SQLiteException from label02 to label19 with label29;
        catch android.database.sqlite.SQLiteException from label20 to label21 with label29;
        catch android.database.sqlite.SQLiteException from label22 to label23 with label29;
        catch android.database.sqlite.SQLiteException from label24 to label25 with label29;
        catch android.database.sqlite.SQLiteException from label26 to label28 with label29;
    }

    public boolean onCreate()
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        android.content.Intent r2, $r4;
        android.content.res.Configuration r3, $r8, $r10;
        java.lang.String $r6;
        android.content.res.Resources $r9;
        com.android.email.provider.EmailProvider$2 $r11;
        com.android.mail.preferences.MailPrefs $r12;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        staticinvoke <com.android.emailcommon.provider.EmailContent: void init(android.content.Context)>(r1);

        staticinvoke <com.android.email.provider.EmailProvider: void init(android.content.Context)>(r1);

        staticinvoke <com.android.email2.ui.MailActivityEmail: void setServicesEnabledAsync(android.content.Context)>(r1);

        staticinvoke <com.android.email.provider.EmailProvider: void reconcileAccountsAsync(android.content.Context)>(r1);

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("com.android.mail.ACTION_NOTIFY_DATASET_CHANGED");

        r2 = $r4;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("update-all-widgets", 1);

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(2131296974);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r6);

        virtualinvoke r1.<android.content.Context: void sendBroadcast(android.content.Intent)>(r2);

        $r8 = new android.content.res.Configuration;

        $r9 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r8.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>($r10);

        r3 = $r8;

        $r11 = new com.android.email.provider.EmailProvider$2;

        specialinvoke $r11.<com.android.email.provider.EmailProvider$2: void <init>(com.android.email.provider.EmailProvider,android.content.res.Configuration)>(r0, r3);

        virtualinvoke r1.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>($r11);

        $r12 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>(r1);

        virtualinvoke $r12.<com.android.mail.preferences.MailPrefs: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);

        return 0;
    }

    private static void init(android.content.Context)
    {
        android.content.Context r0;
        android.content.UriMatcher r1, $r4, $r88, $r90, $r92, $r94, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r109, $r112, $r114, $r116, $r118, $r120, $r122, $r124, $r126, $r128, $r130, $r132, $r134, $r136, $r138, $r140, $r142, $r143, $r145, $r147, $r149, $r151, $r153, $r155, $r157, $r160, $r162, $r166, $r168, $r170, $r172, $r174, $r176, $r178, $r180, $r182, $r184, $r188, $r190, $r191, $r193, $r195, $r197, $r199, $r201, $r203, $r205, $r209, $r211;
        java.lang.String r2, $r8, $r11, $r15, $r19, $r23, $r24, $r26, $r28, $r38, $r40, $r49, $r51, $r61, $r70, $r74, $r76, $r79, $r81, $r87, $r89, $r91, $r93, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r111, $r113, $r115, $r117, $r119, $r121, $r123, $r125, $r127, $r129, $r131, $r133, $r135, $r137, $r139, $r141, $r144, $r146, $r148, $r150, $r152, $r154, $r156, $r158, $r161, $r164, $r165, $r167, $r169, $r171, $r173, $r175, $r177, $r179, $r181, $r183, $r186, $r187, $r189, $r192, $r194, $r196, $r198, $r200, $r202, $r204, $r206, $r208, $r210;
        java.lang.Throwable r3, $r207;
        android.net.Uri $r5, $r12, $r18, $r27, $r35, $r45, $r48, $r58, $r60, $r63, $r77, $r82, $r84;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r13, $r14, $r16, $r17, $r20, $r21, $r22, $r25, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r39, $r41, $r42, $r43, $r44, $r46, $r47, $r50, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r62, $r64, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r73, $r75, $r78, $r80, $r83, $r85, $r86, $r159, $r163, $r185;

        r0 := @parameter0: android.content.Context;

        $r4 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = <com.android.email.provider.EmailProvider: android.net.Uri INTEGRITY_CHECK_URI>;

        if $r5 == null goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r8 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/integrityCheck");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);

        <com.android.email.provider.EmailProvider: android.net.Uri INTEGRITY_CHECK_URI> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r15 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/accountBackup");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r19);

        <com.android.email.provider.EmailProvider: android.net.Uri ACCOUNT_BACKUP_URI> = $r18;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r23 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/status");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r24);

        <com.android.email.provider.EmailProvider: android.net.Uri FOLDER_STATUS_URI> = $r27;

        $r26 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296974);

        <com.android.email.provider.EmailProvider: java.lang.String EMAIL_APP_MIME_TYPE> = $r26;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = <com.android.emailcommon.provider.EmailContent: java.lang.String EMAIL_PACKAGE_NAME>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".uinotifications");

        r2 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r37 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uimessages");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r38);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER> = $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r39 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uifolder");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r45 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r40);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDER_NOTIFIER> = $r45;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r50 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uifolders");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        $r48 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r49);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER> = $r48;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiaccount");

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r51);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER> = $r58;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiattachment");

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r61);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENT_NOTIFIER> = $r60;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiattachments");

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        $r63 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r70);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENTS_NOTIFIER> = $r63;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r75 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiaccts");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r76);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER> = $r77;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uimessage");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        $r84 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r74);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER> = $r84;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r80 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uirecentfolders");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        $r82 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r79);

        <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_RECENT_FOLDERS_NOTIFIER> = $r82;

        $r92 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r81 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r92.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r81, "account", 0);

        $r94 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r91 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r94.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r91, "account/#", 1);

        $r88 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r93 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r88.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r93, "accountCheck/#", 2);

        $r90 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r87 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r90.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r87, "mailbox", 4096);

        $r101 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r89 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r101.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r89, "mailbox/*", 4097);

        $r99 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r102 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r99.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r102, "mailboxNotification/#", 4098);

        $r97 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r100 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r97.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r100, "mailboxMostRecentMessage/#", 4099);

        $r95 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r98 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r95.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r98, "mailboxCount/#", 4100);

        $r109 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r96 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r109.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r96, "message", 8192);

        $r107 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r110 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r107.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r110, "message/#", 8193);

        $r105 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r108 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r105.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r108, "attachment", 12288);

        $r103 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r106 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r103.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r106, "attachment/#", 12289);

        $r118 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r104 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r118.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r104, "attachment/message/#", 12290);

        $r116 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r117 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r116.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r117, "attachment/cachedFile", 12291);

        $r114 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r115 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r114.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r115, "body", 40960);

        $r112 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r113 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r112.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r113, "body/#", 40961);

        $r126 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r111 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r126.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r111, "bodyHtml/#", 40962);

        $r124 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r125 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r124.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r125, "bodyText/#", 40963);

        $r122 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r123 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r122.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r123, "hostauth", 16384);

        $r120 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r121 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r120.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r121, "hostauth/*", 16385);

        $r136 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r119 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r136.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r119, "credential", 45056);

        $r138 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r135 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r138.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r135, "credential/*", 45057);

        $r140 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r137 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r140.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r137, "syncedMessage/#", 8194);

        $r142 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r139 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r142.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r139, "messageBySelection", 8195);

        $r128 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r141 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r128.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r141, "messageMove", 8196);

        $r130 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r127 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r130.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r127, "messageChange", 8197);

        $r132 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r129 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r132.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r129, "deletedMessage", 24576);

        $r134 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r131 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r134.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r131, "deletedMessage/#", 24577);

        $r151 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r133 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r151.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r133, "updatedMessage", 20480);

        $r153 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r152 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r153.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r152, "updatedMessage/#", 20481);

        $r155 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r154 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r155.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r154, "policy", 28672);

        $r157 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r156 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r157.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r156, "policy/#", 28673);

        $r143 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r158 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r143.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r158, "quickresponse", 32768);

        $r145 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r144 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r145.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r144, "quickresponse/#", 32769);

        $r147 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r146 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r147.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r146, "quickresponse/account/#", 32770);

        $r149 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r148 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r149.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r148, "uifolders/#", 36864);

        $r170 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r150 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r170.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r150, "uifullfolders/#", 36882);

        $r168 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r169 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r168.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r169, "uiallfolders/#", 36883);

        $r174 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r167 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r174.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r167, "uisubfolders/#", 36865);

        $r172 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r173 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r172.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r173, "uimessages/#", 36866);

        $r162 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r171 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r162.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r171, "uimessage/#", 36867);

        $r160 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r161 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r160.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r161, "uiundo", 36868);

        $r166 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r165 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r159 = new java.lang.StringBuilder;

        specialinvoke $r159.<java.lang.StringBuilder: void <init>()>();

        $r164 = <com.android.email.provider.EmailProvider: java.lang.String QUERY_UIREFRESH>;

        $r163 = virtualinvoke $r159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r164);

        $r185 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/#");

        $r186 = virtualinvoke $r185.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r166.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r165, $r186, 36869);

        $r184 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r183 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r184.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r183, "uifolder/*", 36870);

        $r190 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r189 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r190.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r189, "uiinbox/#", 36885);

        $r188 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r187 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r188.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r187, "uiaccount/#", 36871);

        $r178 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r177 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r178.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r177, "uiaccts", 36872);

        $r176 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r175 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r176.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r175, "uiacctsettings", 36886);

        $r182 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r181 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r182.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r181, "uiattachments/#", 36873);

        $r180 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r179 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r180.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r179, "uiattachment/#", 36874);

        $r203 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r204 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r203.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r204, "uiattachmentbycid/#/*", 36875);

        $r205 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r206 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r205.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r206, "uisearch/#", 36876);

        $r199 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r200 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r199.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r200, "uiaccountdata/#", 36877);

        $r201 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r202 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r201.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r202, "uiloadmore/#", 36878);

        $r195 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r196 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r195.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r196, "uiconversation/#", 36879);

        $r197 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r198 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r197.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r198, "uirecentfolders/#", 36880);

        $r191 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r192 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r191.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r192, "uidefaultrecentfolders/#", 36881);

        $r193 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r194 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r193.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r194, "pickTrashFolder/#", 3);

        $r209 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r208 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r209.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r208, "pickSentFolder/#", 4);

        $r211 = <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher>;

        $r210 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke $r211.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>($r210, "uipurgefolder/#", 36884);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r207 := @caughtexception;

        r3 = $r207;

        exitmonitor r1;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void checkDatabases()
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.Object r1, $r5;
        java.io.File r2, r3;
        java.lang.Throwable r4, $r16;
        android.database.sqlite.SQLiteDatabase $r6, $r7;
        android.content.Context $r8, $r9, $r12, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r10, $r13;
        java.lang.Object[] $r11, $r14;

        r0 := @this: com.android.email.provider.EmailProvider;

        $r5 = <com.android.email.provider.EmailProvider: java.lang.Object sDatabaseLock>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        if $r6 == null goto label2;

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase> = null;

     label2:
        $r7 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase>;

        if $r7 == null goto label3;

        r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mBodyDatabase> = null;

     label3:
        $r8 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = virtualinvoke $r8.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("EmailProvider.db");

        $r9 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke $r9.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("EmailProviderBody.db");

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $z3 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label4;

        $r13 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r13, "Deleting orphaned EmailProvider database...", $r14);

        $r15 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        virtualinvoke $r15.<android.content.Context: boolean deleteDatabase(java.lang.String)>("EmailProvider.db");

        goto label5;

     label4:
        $z1 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label5;

        $z2 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label5;

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "Deleting orphaned EmailProviderBody database...", $r11);

        $r12 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        virtualinvoke $r12.<android.content.Context: boolean deleteDatabase(java.lang.String)>("EmailProviderBody.db");

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r4 = $r16;

        exitmonitor r1;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r112;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5, r8, r9, r10, r11, $r25, $r29, $r31, $r32, $r36, $r37, $r46, $r53, $r56, $r57, $r59, $r62, $r66, $r70, $r71, $r77, $r78, $r82, $r84, $r86, $r88, $r94, $r98, $r101, $r103, $r104, $r111, r115, r117, r127, r128, r129, r130;
        android.database.Cursor r6, r12, r13, r15, r116, r118, r119, r120, r121, r122, r123, r124, r125;
        int i0, i1, $i15, $i16, i18;
        java.lang.IllegalArgumentException r7, $r24, $r67, $r90, $r96;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        android.content.ContentValues r14, $r22;
        java.lang.Throwable r16, $r106;
        java.lang.StringBuilder r17, $r23, $r26, $r27, $r28, $r30, $r33, $r35, $r41, $r43, $r45, $r49, $r79, $r80, $r81, $r91, $r92, $r93, $r108, $r109, $r110;
        java.lang.Object $r18, $r44, $r72, $r74, $r76, $r100;
        android.util.SparseArray $r19;
        com.android.common.content.ProjectionMap$Builder $r20, $r21;
        java.lang.Object[] $r38, $r52, $r55, $r58, $r60, $r63, $r65, $r69, $r83, $r85, $r87, $r89, $r97, $r105;
        android.content.ContentResolver $r39;
        android.content.Context $r40, r113;
        java.util.List $r51, $r68, $r73, $r75, $r99;
        com.android.emailcommon.provider.Mailbox $r54, $r61;
        java.lang.Boolean $r64;
        android.database.sqlite.SQLiteException $r95, r131;
        com.android.mail.utils.MatrixCursorWithCachedColumns $r102;
        java.lang.RuntimeException $r107, r132;
        android.database.sqlite.SQLiteDatabase r114;
        com.android.common.content.ProjectionMap r126;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 = null;

     label01:
        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "query");

     label02:
        goto label06;

     label03:
        $r96 := @caughtexception;

        r7 = $r96;

        r8 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        if r8 == null goto label05;

        $z12 = virtualinvoke r8.<java.lang.String: boolean endsWith(java.lang.String)>("/-1");

        if $z12 == 0 goto label05;

        $r108 = new java.lang.StringBuilder;

        specialinvoke $r108.<java.lang.StringBuilder: void <init>()>();

        $i15 = virtualinvoke r8.<java.lang.String: int length()>();

        $i16 = $i15 - 2;

        $r111 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r111);

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r103 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.String toString()>();

        r112 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r103);

        i18 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r112, "query");

        lookupswitch(i18)
        {
            case 1: goto label04;
            case 4097: goto label04;
            case 8193: goto label04;
            case 12289: goto label04;
            case 16385: goto label04;
            case 20481: goto label04;
            case 24577: goto label04;
            case 28673: goto label04;
            case 40961: goto label04;
            case 45057: goto label04;
            default: goto label05;
        };

     label04:
        $r102 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r102.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r2, 0);

        return $r102;

     label05:
        throw r7;

     label06:
        r113 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r114 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r113);

        i1 = i0 >> 12;

        r9 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("limit");

        $r19 = <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES>;

        $r18 = virtualinvoke $r19.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r11 = (java.lang.String) $r18;

     label07:
        lookupswitch(i0)
        {
            case 0: goto label50;
            case 1: goto label59;
            case 4096: goto label50;
            case 4097: goto label59;
            case 4098: goto label35;
            case 4099: goto label38;
            case 4100: goto label41;
            case 8192: goto label50;
            case 8193: goto label59;
            case 8196: goto label44;
            case 8197: goto label47;
            case 12288: goto label50;
            case 12289: goto label59;
            case 12290: goto label61;
            case 16384: goto label50;
            case 16385: goto label59;
            case 20480: goto label50;
            case 20481: goto label59;
            case 24576: goto label50;
            case 24577: goto label59;
            case 28672: goto label50;
            case 28673: goto label59;
            case 32768: goto label51;
            case 32769: goto label60;
            case 32770: goto label62;
            case 36864: goto label26;
            case 36865: goto label19;
            case 36866: goto label19;
            case 36867: goto label19;
            case 36868: goto label16;
            case 36869: goto label32;
            case 36870: goto label19;
            case 36871: goto label19;
            case 36872: goto label11;
            case 36873: goto label19;
            case 36874: goto label19;
            case 36875: goto label19;
            case 36876: goto label08;
            case 36878: goto label29;
            case 36879: goto label19;
            case 36880: goto label19;
            case 36882: goto label19;
            case 36883: goto label19;
            case 36885: goto label19;
            case 40960: goto label52;
            case 40961: goto label52;
            case 45056: goto label50;
            case 45057: goto label59;
            default: goto label63;
        };

     label08:
        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiSearch(android.net.Uri,java.lang.String[])>(r1, r2);

        r12 = r6;

     label09:
        if r6 != null goto label10;

        $r53 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r52 = newarray (java.lang.Object)[2];

        $r52[0] = r1;

        $r52[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r53, "Query returning null for uri: %s selection: %s", $r52);

     label10:
        return r12;

     label11:
        r115 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("suppress_combined");

        if r115 == null goto label12;

        $z9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r115);

        if $z9 == 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z0 = $z8;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiAccounts(java.lang.String[],boolean)>(r2, z0);

        r13 = r6;

     label14:
        if r6 != null goto label15;

        $r57 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r58 = newarray (java.lang.Object)[2];

        $r58[0] = r1;

        $r58[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r57, "Query returning null for uri: %s selection: %s", $r58);

     label15:
        return r13;

     label16:
        r116 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiUndo(java.lang.String[])>(r2);

     label17:
        if r6 != null goto label18;

        $r59 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r60 = newarray (java.lang.Object)[2];

        $r60[0] = r1;

        $r60[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r59, "Query returning null for uri: %s selection: %s", $r60);

     label18:
        return r116;

     label19:
        if r3 != null goto label20;

        if r4 == null goto label21;

     label20:
        $r67 = new java.lang.IllegalArgumentException;

        specialinvoke $r67.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("UI queries can\'t have selection/args");

        throw $r67;

     label21:
        r117 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("seen");

        if r117 == null goto label22;

        $r64 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r71 = virtualinvoke $r64.<java.lang.Boolean: java.lang.String toString()>();

        $z11 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>(r117);

        if $z11 == 0 goto label22;

        $z10 = 1;

        goto label23;

     label22:
        $z10 = 0;

     label23:
        z1 = $z10;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiQuery(int,android.net.Uri,java.lang.String[],boolean)>(i0, r1, r2, z1);

        r15 = r6;

     label24:
        if r6 != null goto label25;

        $r66 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r65 = newarray (java.lang.Object)[2];

        $r65[0] = r1;

        $r65[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r66, "Query returning null for uri: %s selection: %s", $r65);

     label25:
        return r15;

     label26:
        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiFolders(android.net.Uri,java.lang.String[])>(r1, r2);

        r118 = r6;

     label27:
        if r6 != null goto label28;

        $r70 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r69 = newarray (java.lang.Object)[2];

        $r69[0] = r1;

        $r69[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r70, "Query returning null for uri: %s selection: %s", $r69);

     label28:
        return r118;

     label29:
        $r54 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getMailbox(android.net.Uri)>(r1);

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiFolderLoadMore(com.android.emailcommon.provider.Mailbox)>($r54);

        r119 = r6;

     label30:
        if r6 != null goto label31;

        $r56 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r55 = newarray (java.lang.Object)[2];

        $r55[0] = r1;

        $r55[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r56, "Query returning null for uri: %s selection: %s", $r55);

     label31:
        return r119;

     label32:
        $r61 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getMailbox(android.net.Uri)>(r1);

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiFolderRefresh(com.android.emailcommon.provider.Mailbox,int)>($r61, 0);

        r120 = r6;

     label33:
        if r6 != null goto label34;

        $r62 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r63 = newarray (java.lang.Object)[2];

        $r63[0] = r1;

        $r63[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r62, "Query returning null for uri: %s selection: %s", $r63);

     label34:
        return r120;

     label35:
        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor notificationQuery(android.net.Uri)>(r1);

        r121 = r6;

     label36:
        if r6 != null goto label37;

        $r98 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r97 = newarray (java.lang.Object)[2];

        $r97[0] = r1;

        $r97[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r98, "Query returning null for uri: %s selection: %s", $r97);

     label37:
        return r121;

     label38:
        r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor mostRecentMessageQuery(android.net.Uri)>(r1);

        r122 = r6;

     label39:
        if r6 != null goto label40;

        $r84 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r85 = newarray (java.lang.Object)[2];

        $r85[0] = r1;

        $r85[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r84, "Query returning null for uri: %s selection: %s", $r85);

     label40:
        return r122;

     label41:
        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getMailboxMessageCount(android.net.Uri)>(r1);

        r123 = r6;

     label42:
        if r6 != null goto label43;

        $r82 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r83 = newarray (java.lang.Object)[2];

        $r83[0] = r1;

        $r83[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r82, "Query returning null for uri: %s selection: %s", $r83);

     label43:
        return r123;

     label44:
        r124 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("MessageMove", r2, r3, r4, null, null, r5, r9);

     label45:
        if r6 != null goto label46;

        $r88 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r89 = newarray (java.lang.Object)[2];

        $r89[0] = r1;

        $r89[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r88, "Query returning null for uri: %s selection: %s", $r89);

     label46:
        return r124;

     label47:
        r125 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("MessageStateChange", r2, r3, r4, null, null, r5, r9);

     label48:
        if r6 != null goto label49;

        $r86 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r87 = newarray (java.lang.Object)[2];

        $r87[0] = r1;

        $r87[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r86, "Query returning null for uri: %s selection: %s", $r87);

     label49:
        return r125;

     label50:
        r6 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r11, r2, r3, r4, null, null, r5, r9);

        goto label64;

     label51:
        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiQuickResponse(java.lang.String[])>(r2);

        goto label64;

     label52:
        $r21 = new com.android.common.content.ProjectionMap$Builder;

        specialinvoke $r21.<com.android.common.content.ProjectionMap$Builder: void <init>()>();

        $r20 = virtualinvoke $r21.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder addAll(java.lang.String[])>(r2);

        r126 = virtualinvoke $r20.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        $z2 = virtualinvoke r126.<com.android.common.content.ProjectionMap: boolean containsKey(java.lang.Object)>("htmlContent");

        if $z2 != 0 goto label53;

        $z3 = virtualinvoke r126.<com.android.common.content.ProjectionMap: boolean containsKey(java.lang.Object)>("textContent");

        if $z3 == 0 goto label54;

     label53:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Body content cannot be returned in the cursor");

        throw $r24;

     label54:
        $r22 = new android.content.ContentValues;

        specialinvoke $r22.<android.content.ContentValues: void <init>(int)>(2);

        r14 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r25 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>("bodyHtml", "messageKey");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("htmlContentUri", $r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r32 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>("bodyText", "messageKey");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("textContentUri", $r31);

        r17 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>(r126, r2, r14);

        $r35 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Body");

        if i0 != 40961 goto label55;

        $r51 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r44 = interfaceinvoke $r51.<java.util.List: java.lang.Object get(int)>(1);

        r10 = (java.lang.String) $r44;

        $r45 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r46 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWithId(java.lang.String,java.lang.String)>(r10, r3);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        goto label56;

     label55:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z5 != 0 goto label56;

        $r49 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label56:
        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z4 != 0 goto label57;

        $r41 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY ");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

     label57:
        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z7 != 0 goto label58;

        $r43 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIMIT ");

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

     label58:
        $r36 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r36, r4);

        goto label64;

     label59:
        $r99 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r100 = interfaceinvoke $r99.<java.util.List: java.lang.Object get(int)>(1);

        r127 = (java.lang.String) $r100;

        $r101 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWithId(java.lang.String,java.lang.String)>(r127, r3);

        r6 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r11, r2, $r101, r4, null, null, r5, r9);

        goto label64;

     label60:
        $r75 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r74 = interfaceinvoke $r75.<java.util.List: java.lang.Object get(int)>(1);

        r128 = (java.lang.String) $r74;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiQuickResponseId(java.lang.String[],java.lang.String)>(r2, r128);

        goto label64;

     label61:
        $r73 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r72 = interfaceinvoke $r73.<java.util.List: java.lang.Object get(int)>(2);

        r129 = (java.lang.String) $r72;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageKey=");

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r129);

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        $r77 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWith(java.lang.String,java.lang.String)>($r78, r3);

        r6 = virtualinvoke r114.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("Attachment", r2, $r77, r4, null, null, r5, r9);

        goto label64;

     label62:
        $r68 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r76 = interfaceinvoke $r68.<java.util.List: java.lang.Object get(int)>(2);

        r130 = (java.lang.String) $r76;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiQuickResponseAccount(java.lang.String[],java.lang.String)>(r2, r130);

        goto label64;

     label63:
        $r90 = new java.lang.IllegalArgumentException;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r94);

        throw $r90;

     label64:
        if r6 != null goto label70;

        $r37 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r38 = newarray (java.lang.Object)[2];

        $r38[0] = r1;

        $r38[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r37, "Query returning null for uri: %s selection: %s", $r38);

        goto label70;

     label65:
        $r95 := @caughtexception;

        r131 = $r95;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        throw r131;

     label66:
        $r107 := @caughtexception;

        r132 = $r107;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        virtualinvoke r132.<java.lang.RuntimeException: void printStackTrace()>();

        throw r132;

     label67:
        $r106 := @caughtexception;

        r16 = $r106;

     label68:
        if r6 != null goto label69;

        $r104 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r105 = newarray (java.lang.Object)[2];

        $r105[0] = r1;

        $r105[1] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r104, "Query returning null for uri: %s selection: %s", $r105);

     label69:
        throw r16;

     label70:
        if r6 == null goto label71;

        $z6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: boolean isTemporary()>();

        if $z6 != 0 goto label71;

        $r40 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r39 = virtualinvoke $r40.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        interfaceinvoke r6.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r39, r1);

     label71:
        return r6;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch android.database.sqlite.SQLiteException from label07 to label09 with label65;
        catch android.database.sqlite.SQLiteException from label11 to label14 with label65;
        catch android.database.sqlite.SQLiteException from label16 to label17 with label65;
        catch android.database.sqlite.SQLiteException from label19 to label24 with label65;
        catch android.database.sqlite.SQLiteException from label26 to label27 with label65;
        catch android.database.sqlite.SQLiteException from label29 to label30 with label65;
        catch android.database.sqlite.SQLiteException from label32 to label33 with label65;
        catch android.database.sqlite.SQLiteException from label35 to label36 with label65;
        catch android.database.sqlite.SQLiteException from label38 to label39 with label65;
        catch android.database.sqlite.SQLiteException from label41 to label42 with label65;
        catch android.database.sqlite.SQLiteException from label44 to label45 with label65;
        catch android.database.sqlite.SQLiteException from label47 to label48 with label65;
        catch android.database.sqlite.SQLiteException from label50 to label64 with label65;
        catch java.lang.RuntimeException from label07 to label09 with label66;
        catch java.lang.RuntimeException from label11 to label14 with label66;
        catch java.lang.RuntimeException from label16 to label17 with label66;
        catch java.lang.RuntimeException from label19 to label24 with label66;
        catch java.lang.RuntimeException from label26 to label27 with label66;
        catch java.lang.RuntimeException from label29 to label30 with label66;
        catch java.lang.RuntimeException from label32 to label33 with label66;
        catch java.lang.RuntimeException from label35 to label36 with label66;
        catch java.lang.RuntimeException from label38 to label39 with label66;
        catch java.lang.RuntimeException from label41 to label42 with label66;
        catch java.lang.RuntimeException from label44 to label45 with label66;
        catch java.lang.RuntimeException from label47 to label48 with label66;
        catch java.lang.RuntimeException from label50 to label64 with label66;
        catch java.lang.Throwable from label07 to label09 with label67;
        catch java.lang.Throwable from label11 to label14 with label67;
        catch java.lang.Throwable from label16 to label17 with label67;
        catch java.lang.Throwable from label19 to label24 with label67;
        catch java.lang.Throwable from label26 to label27 with label67;
        catch java.lang.Throwable from label29 to label30 with label67;
        catch java.lang.Throwable from label32 to label33 with label67;
        catch java.lang.Throwable from label35 to label36 with label67;
        catch java.lang.Throwable from label38 to label39 with label67;
        catch java.lang.Throwable from label41 to label42 with label67;
        catch java.lang.Throwable from label44 to label45 with label67;
        catch java.lang.Throwable from label47 to label48 with label67;
        catch java.lang.Throwable from label50 to label64 with label67;
        catch java.lang.Throwable from label65 to label68 with label67;
    }

    private static java.lang.String whereWithId(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r6;
        java.lang.StringBuilder r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>(256);

        r2 = $r3;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        if r1 == null goto label1;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label1:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.String whereWith(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static com.android.emailcommon.provider.HostAuth restoreHostAuth(android.database.sqlite.SQLiteDatabase, long)
    {
        android.database.sqlite.SQLiteDatabase r0;
        long l0;
        android.database.Cursor r1;
        com.android.emailcommon.provider.HostAuth r2, r3, $r8;
        java.lang.Throwable r4, $r9;
        java.lang.String[] $r5, $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter1: long;

        $r6 = <com.android.emailcommon.provider.HostAuth: java.lang.String[] CONTENT_PROJECTION>;

        $r5 = newarray (java.lang.String)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r5[0] = $r7;

        r1 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("HostAuth", $r6, "_id=?", $r5, null, null, null);

     label1:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $r8 = new com.android.emailcommon.provider.HostAuth;

        specialinvoke $r8.<com.android.emailcommon.provider.HostAuth: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<com.android.emailcommon.provider.HostAuth: void restore(android.database.Cursor)>(r1);

        r3 = r2;

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r3;

     label3:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return null;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static int copyAccountTables(android.database.sqlite.SQLiteDatabase, android.database.sqlite.SQLiteDatabase)
    {
        android.database.sqlite.SQLiteDatabase r0, r1;
        int i0, $i4;
        android.database.Cursor r2;
        byte b1, $b9;
        com.android.emailcommon.provider.HostAuth r3, r25;
        java.lang.Throwable r4, r5, r6, $r20, $r21, $r22;
        java.lang.String[] $r7;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.lang.String $r9, $r13, $r23;
        java.lang.Object[] $r12, $r19;
        boolean $z0;
        long $l6, $l7, $l8, $l11, $l12;
        com.android.emailcommon.provider.Account $r14, r24;
        android.content.ContentValues $r15, $r16, $r17;
        android.database.sqlite.SQLiteException $r18, r26;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return -1;

     label02:
        i0 = 0;

        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label03:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label04:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("Account", null, null);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("HostAuth", null, null);

        $r7 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        r2 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Account", $r7, null, null, null, null, null);

        if r2 != null goto label07;

        b1 = 0;

     label05:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

     label06:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        return b1;

     label07:
        $r9 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromDatabase accounts: ");

        $i4 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r9, $r13, $r12);

     label08:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label12;

        $r14 = new com.android.emailcommon.provider.Account;

        specialinvoke $r14.<com.android.emailcommon.provider.Account: void <init>()>();

        r24 = $r14;

        virtualinvoke r24.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r2);

        r24.<com.android.emailcommon.provider.Account: java.lang.String mSecuritySyncKey> = null;

        r24.<com.android.emailcommon.provider.Account: java.lang.String mSyncKey> = null;

        r24.<com.android.emailcommon.provider.Account: long mPolicyKey> = 0L;

        $l6 = r24.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        r3 = staticinvoke <com.android.email.provider.EmailProvider: com.android.emailcommon.provider.HostAuth restoreHostAuth(android.database.sqlite.SQLiteDatabase,long)>(r0, $l6);

        if r3 != null goto label09;

        goto label08;

     label09:
        $r15 = virtualinvoke r3.<com.android.emailcommon.provider.HostAuth: android.content.ContentValues toContentValues()>();

        $l8 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("HostAuth", null, $r15);

        r24.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv> = $l8;

        $l7 = r24.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        $b9 = $l7 cmp 0L;

        if $b9 <= 0 goto label11;

        $l11 = r24.<com.android.emailcommon.provider.Account: long mHostAuthKeySend>;

        r25 = staticinvoke <com.android.email.provider.EmailProvider: com.android.emailcommon.provider.HostAuth restoreHostAuth(android.database.sqlite.SQLiteDatabase,long)>(r0, $l11);

        if r25 != null goto label10;

        goto label08;

     label10:
        $r17 = virtualinvoke r25.<com.android.emailcommon.provider.HostAuth: android.content.ContentValues toContentValues()>();

        $l12 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("HostAuth", null, $r17);

        r24.<com.android.emailcommon.provider.Account: long mHostAuthKeySend> = $l12;

     label11:
        $r16 = virtualinvoke r24.<com.android.emailcommon.provider.Account: android.content.ContentValues toContentValues()>();

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("Account", null, $r16);

        i0 = i0 + 1;

        goto label08;

     label12:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label15;

     label13:
        $r20 := @caughtexception;

        r4 = $r20;

     label14:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

     label15:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

     label16:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label19;

     label17:
        $r22 := @caughtexception;

        r5 = $r22;

     label18:
        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r5;

     label19:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label24;

     label20:
        $r18 := @caughtexception;

        r26 = $r18;

        $r23 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r26;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r23, "Exception while copying account tables", $r19);

        i0 = -1;

     label21:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        goto label24;

     label22:
        $r21 := @caughtexception;

        r6 = $r21;

     label23:
        virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        throw r6;

     label24:
        return i0;

        catch java.lang.Throwable from label08 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch android.database.sqlite.SQLiteException from label03 to label06 with label20;
        catch android.database.sqlite.SQLiteException from label07 to label19 with label20;
        catch java.lang.Throwable from label03 to label06 with label22;
        catch java.lang.Throwable from label07 to label19 with label22;
        catch java.lang.Throwable from label20 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private static int backupAccounts(android.content.Context, android.database.sqlite.SQLiteDatabase)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.accounts.AccountManager r2;
        android.database.Cursor r3;
        int i0;
        com.android.emailcommon.provider.Account r4, $r10;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5;
        java.lang.String r6, $r11, $r12, $r13;
        android.accounts.Account r7;
        java.lang.Throwable r8, $r15;
        java.lang.String[] $r9;
        boolean $z0;
        java.lang.Object[] $r14;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        r2 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        $r9 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Account", $r9, null, null, null, null, null);

        i0 = 0;

     label1:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        $r10 = new com.android.emailcommon.provider.Account;

        specialinvoke $r10.<com.android.emailcommon.provider.Account: void <init>()>();

        r4 = $r10;

        virtualinvoke r4.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r3);

        $r11 = virtualinvoke r4.<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)>(r0);

        r5 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, $r11);

        if r5 != null goto label2;

        $r13 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r13, "Could not find service info for account", $r14);

        goto label1;

     label2:
        r6 = virtualinvoke r4.<com.android.emailcommon.provider.Account: java.lang.String toJsonString(android.content.Context)>(r0);

        $r12 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        r7 = virtualinvoke r4.<com.android.emailcommon.provider.Account: android.accounts.Account getAccountManagerAccount(java.lang.String)>($r12);

        virtualinvoke r2.<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>(r7, "accountJson", r6);

        i0 = i0 + 1;

        goto label1;

     label3:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r15 := @caughtexception;

        r8 = $r15;

     label5:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r8;

     label6:
        return i0;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static int restoreAccounts(android.content.Context)
    {
        android.content.Context r0;
        java.util.Collection r1;
        java.util.HashSet r2, $r9;
        java.util.Iterator r3, r5, r20;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r4;
        java.lang.String r6, $r15, $r17, r21;
        android.accounts.Account r7;
        com.android.emailcommon.provider.Account r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r10, r18;
        java.lang.Object $r11, $r13, $r16;
        android.accounts.Account[] $r12;
        java.util.List $r14;
        android.accounts.AccountManager r19;
        int i0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Collection getServiceInfoList(android.content.Context)>(r0);

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<java.util.HashSet: void <init>(int)>(3);

        r2 = $r9;

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r16 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r16;

        $r15 = r4.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r15);

        if $z4 != 0 goto label2;

        $r17 = r4.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r17);

     label2:
        goto label1;

     label3:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r18 = $r10;

        r19 = staticinvoke <android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>(r0);

        r5 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r13;

        $r12 = virtualinvoke r19.<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>(r6);

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r12);

        interfaceinvoke r18.<java.util.List: boolean addAll(java.util.Collection)>($r14);

        goto label4;

     label5:
        i0 = 0;

        r20 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r11 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.accounts.Account) $r11;

        r21 = virtualinvoke r19.<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>(r7, "accountJson");

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r21);

        if $z3 == 0 goto label7;

        goto label6;

     label7:
        r8 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account fromJsonString(java.lang.String)>(r21);

        if r8 == null goto label8;

        staticinvoke <com.android.email.activity.setup.AccountSettingsUtils: void commitSettings(android.content.Context,com.android.emailcommon.provider.Account)>(r0, r8);

        i0 = i0 + 1;

     label8:
        goto label6;

     label9:
        return i0;
    }

    private void addToMessageMove(android.database.sqlite.SQLiteDatabase, java.lang.String, long)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r5, $r8;
        long l0;
        java.lang.Object[] $r3;
        java.util.Locale $r4;
        java.lang.Long $r6, $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_MOVE_INSERT>;

        $r3 = newarray (java.lang.Object)[8];

        $r3[0] = "MessageMove";

        $r3[1] = r2;

        $r3[2] = r2;

        $r3[3] = r2;

        $r3[4] = r2;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3[5] = $r6;

        $r3[6] = r2;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3[7] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, $r5, $r3);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r8);

        return;
    }

    private void addToMessageStateChange(android.database.sqlite.SQLiteDatabase, java.lang.String, int, int)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, $r5, $r8;
        int i0, i1;
        java.lang.Object[] $r3;
        java.util.Locale $r4;
        java.lang.Integer $r6, $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_STATE_CHANGE_INSERT>;

        $r3 = newarray (java.lang.Object)[8];

        $r3[0] = "MessageStateChange";

        $r3[1] = r2;

        $r3[2] = r2;

        $r3[3] = r2;

        $r3[4] = r2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[5] = $r6;

        $r3[6] = r2;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[7] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, $r5, $r3);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r8);

        return;
    }

    private static boolean restartPush(android.content.Context, android.database.sqlite.SQLiteDatabase, java.lang.String)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r4, r5, $r9, $r10;
        android.database.Cursor r3;
        android.accounts.Account r6;
        boolean z0, $z1, $z2, $z3;
        java.lang.Throwable r7, $r11;
        java.lang.String[] $r8;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter2: java.lang.String;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = r2;

        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT h.protocol, a.emailAddress, a.syncKey FROM Account AS a INNER JOIN HostAuth AS h ON a.hostAuthKeyRecv=h._id WHERE a._id=?", $r8);

        if r3 == null goto label6;

     label1:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label3;

        r4 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r9 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296973);

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label3;

        $r10 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(2);

        $z3 = staticinvoke <com.android.emailcommon.provider.EmailContent: boolean isInitialSyncKey(java.lang.String)>($r10);

        if $z3 != 0 goto label3;

        r5 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(1);

        r6 = staticinvoke <com.android.email.provider.EmailProvider: android.accounts.Account getAccountManagerAccount(android.content.Context,java.lang.String,java.lang.String)>(r0, r5, r4);

        if r6 == null goto label3;

        staticinvoke <com.android.email.provider.EmailProvider: void restartPush(android.accounts.Account)>(r6);

        z0 = 1;

     label2:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return z0;

     label3:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r11 := @caughtexception;

        r7 = $r11;

     label5:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r7;

     label6:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static boolean restartPushForMailbox(android.content.Context, android.database.sqlite.SQLiteDatabase, android.content.ContentValues, java.lang.String)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("syncLookback");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("syncInterval");

        if $z2 == 0 goto label2;

     label1:
        $z1 = staticinvoke <com.android.email.provider.EmailProvider: boolean restartPush(android.content.Context,android.database.sqlite.SQLiteDatabase,java.lang.String)>(r0, r1, r3);

        return $z1;

     label2:
        return 0;
    }

    private static boolean restartPushForAccount(android.content.Context, android.database.sqlite.SQLiteDatabase, android.content.ContentValues, java.lang.String)
    {
        android.content.Context r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter2: android.content.ContentValues;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("syncLookback");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("syncInterval");

        if $z2 == 0 goto label2;

     label1:
        $z1 = staticinvoke <com.android.email.provider.EmailProvider: boolean restartPush(android.content.Context,android.database.sqlite.SQLiteDatabase,java.lang.String)>(r0, r1, r3);

        return $z1;

     label2:
        return 0;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r5, $r31, $r32, $r41, $r56, $r62, $r63, $r70, $r71, $r82, $r83;
        android.content.ContentValues r2, $r34, $r44, $r58, r117, r119, r120;
        java.lang.String r3, r8, r9, r16, $r24, $r27, $r33, $r38, $r42, $r48, $r49, $r59, $r60, $r66, $r68, $r69, $r72, $r81, $r86, $r90, $r92, $r101, $r108, r112;
        java.lang.String[] r4, $r46, $r64, $r73, $r89, r122;
        int i0, i1, i2, i3, i4, i6, i7, i8, $i10, $i11, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i26, $i27, $i29, $i30, $i33, i41, i42, i43;
        android.content.Context r6, $r100, $r103;
        android.database.sqlite.SQLiteDatabase r7, $r102;
        android.database.Cursor r10, r13, r113, r123;
        java.lang.Throwable r11, r12, r15, r25, r26, $r67, $r97, $r98, $r99, $r109, $r111;
        long l5, $l12, $l13, $l14, $l22, $l25, $l28, $l31, l35, l36, l37, l38, l39, l40, l44;
        android.database.sqlite.SQLiteStatement r14, r118;
        java.lang.Integer r17, $r76, r115;
        android.os.Handler r18;
        com.android.email.provider.EmailProvider$SyncRequestMessage r19, $r94;
        android.accounts.Account r20;
        android.os.Message r21;
        java.util.Set r22, $r93, $r95, $r96;
        java.lang.StringBuilder $r23, $r29, $r30, $r37, $r39, $r40, $r47, $r51, $r52, $r78, $r79, $r80, $r87, $r88, $r91, $r104, $r106, $r107;
        java.lang.Object[] $r28, $r61, $r65, $r84;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, $z16, $z18, $z19, $z22, $z23, z24;
        java.lang.Object $r35, $r74;
        android.util.SparseArray $r36;
        java.lang.Long $r43, $r50, $r53, $r85, r114;
        java.lang.IllegalStateException $r45;
        long[] $r54, $r55, r121;
        java.util.List $r75;
        com.android.email.provider.EmailProvider$EmailAttachmentService $r77;
        java.lang.IllegalArgumentException $r105;
        android.database.sqlite.SQLiteException $r110, r124;
        byte b34;
        com.android.emailcommon.provider.EmailContent$Attachment r116;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r24 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r24, $r27, $r28);

        $r32 = <com.android.email.provider.EmailProvider: android.net.Uri INTEGRITY_CHECK_URI>;

        $z0 = virtualinvoke $r32.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        return 0;

     label01:
        $r31 = <com.android.email.provider.EmailProvider: android.net.Uri ACCOUNT_BACKUP_URI>;

        $z1 = virtualinvoke $r31.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label02;

        $r100 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r103 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r102 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r103);

        $i33 = staticinvoke <com.android.email.provider.EmailProvider: int backupAccounts(android.content.Context,android.database.sqlite.SQLiteDatabase)>($r100, $r102);

        return $i33;

     label02:
        r5 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "update");

        r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r7 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r6);

        i1 = i0 >> 12;

        if i0 == 4097 goto label03;

        if i0 != 4096 goto label04;

     label03:
        virtualinvoke r2.<android.content.ContentValues: void remove(java.lang.String)>("unreadCount");

        virtualinvoke r2.<android.content.ContentValues: void remove(java.lang.String)>("messageCount");

     label04:
        $r36 = <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES>;

        $r35 = virtualinvoke $r36.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r8 = (java.lang.String) $r35;

        r9 = "0";

     label05:
        lookupswitch(i0)
        {
            case 0: goto label89;
            case 1: goto label38;
            case 2: goto label22;
            case 3: goto label06;
            case 4: goto label08;
            case 4096: goto label89;
            case 4097: goto label38;
            case 8192: goto label88;
            case 8193: goto label38;
            case 8194: goto label38;
            case 8195: goto label29;
            case 8196: goto label91;
            case 8197: goto label92;
            case 12288: goto label89;
            case 12289: goto label38;
            case 16384: goto label89;
            case 16385: goto label38;
            case 20480: goto label89;
            case 20481: goto label38;
            case 28672: goto label89;
            case 28673: goto label38;
            case 32769: goto label38;
            case 36867: goto label20;
            case 36870: goto label12;
            case 36874: goto label18;
            case 36880: goto label14;
            case 36881: goto label16;
            case 36886: goto label10;
            case 40960: goto label74;
            case 40961: goto label70;
            case 45056: goto label89;
            case 45057: goto label38;
            default: goto label93;
        };

     label06:
        $i26 = specialinvoke r0.<com.android.email.provider.EmailProvider: int pickTrashFolder(android.net.Uri)>(r1);

     label07:
        return $i26;

     label08:
        $i23 = specialinvoke r0.<com.android.email.provider.EmailProvider: int pickSentFolder(android.net.Uri)>(r1);

     label09:
        return $i23;

     label10:
        $i20 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateSettings(android.content.Context,android.content.ContentValues)>(r6, r2);

     label11:
        return $i20;

     label12:
        $i16 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateFolder(android.content.Context,android.net.Uri,android.content.ContentValues)>(r6, r1, r2);

     label13:
        return $i16;

     label14:
        $i18 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateRecentFolders(android.net.Uri,android.content.ContentValues)>(r1, r2);

     label15:
        return $i18;

     label16:
        $i21 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiPopulateRecentFolders(android.net.Uri)>(r1);

     label17:
        return $i21;

     label18:
        $i19 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateAttachment(android.net.Uri,android.content.ContentValues)>(r1, r2);

     label19:
        return $i19;

     label20:
        $i17 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateMessage(android.net.Uri,android.content.ContentValues)>(r1, r2);

     label21:
        return $i17;

     label22:
        r112 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        i3 = 1;

        r10 = null;

     label23:
        $r73 = newarray (java.lang.String)[1];

        $r73[0] = r112;

        r10 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select count(*) from (select count(*) as dupes from Mailbox where accountKey=? group by serverId) where dupes > 1", $r73);

        $z15 = interfaceinvoke r10.<android.database.Cursor: boolean moveToFirst()>();

        if $z15 == 0 goto label24;

        i3 = interfaceinvoke r10.<android.database.Cursor: int getInt(int)>(0);

     label24:
        if r10 == null goto label28;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

        goto label28;

     label25:
        $r98 := @caughtexception;

        r11 = $r98;

     label26:
        if r10 == null goto label27;

        interfaceinvoke r10.<android.database.Cursor: void close()>();

     label27:
        throw r11;

     label28:
        return i3;

     label29:
        $r64 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] ID_COLUMN_PROJECTION>;

        r113 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>(r8, $r64, r3, r4, null, null, null);

     label30:
        $z11 = interfaceinvoke r113.<android.database.Cursor: boolean moveToFirst()>();

        if $z11 == 0 goto label33;

        $r63 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $l22 = interfaceinvoke r113.<android.database.Cursor: long getLong(int)>(0);

        $r62 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r63, $l22);

        i4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r62, r2, null, null);

     label31:
        interfaceinvoke r113.<android.database.Cursor: void close()>();

     label32:
        return i4;

     label33:
        b34 = 0;

     label34:
        interfaceinvoke r113.<android.database.Cursor: void close()>();

     label35:
        return b34;

     label36:
        $r99 := @caughtexception;

        r12 = $r99;

     label37:
        interfaceinvoke r113.<android.database.Cursor: void close()>();

        throw r12;

     label38:
        $r75 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r74 = interfaceinvoke $r75.<java.util.List: java.lang.Object get(int)>(1);

        r9 = (java.lang.String) $r74;

        if i0 != 8194 goto label61;

        z24 = 0;

        l35 = -1L;

        l5 = -1L;

        $r89 = newarray (java.lang.String)[1];

        $r89[0] = r9;

        r13 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT h.protocol, m.mailboxKey, a._id FROM Message AS m INNER JOIN Account AS a ON m.accountKey=a._id INNER JOIN HostAuth AS h ON a.hostAuthKeyRecv=h._id WHERE m._id=?", $r89);

        if r13 == null goto label43;

     label39:
        $z22 = interfaceinvoke r13.<android.database.Cursor: boolean moveToFirst()>();

        if $z22 == 0 goto label40;

        r16 = interfaceinvoke r13.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r108 = virtualinvoke r6.<android.content.Context: java.lang.String getString(int)>(2131296973);

        z24 = virtualinvoke $r108.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        l35 = interfaceinvoke r13.<android.database.Cursor: long getLong(int)>(1);

        l5 = interfaceinvoke r13.<android.database.Cursor: long getLong(int)>(2);

     label40:
        interfaceinvoke r13.<android.database.Cursor: void close()>();

        goto label43;

     label41:
        $r97 := @caughtexception;

        r15 = $r97;

     label42:
        interfaceinvoke r13.<android.database.Cursor: void close()>();

        throw r15;

     label43:
        if z24 == 0 goto label59;

        r114 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("mailboxKey");

        if r114 == null goto label44;

        $l31 = virtualinvoke r114.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void addToMessageMove(android.database.sqlite.SQLiteDatabase,java.lang.String,long)>(r7, r9, $l31);

     label44:
        r115 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("flagRead");

        r17 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("flagFavorite");

        if r115 == null goto label45;

        $i30 = virtualinvoke r115.<java.lang.Integer: int intValue()>();

        goto label46;

     label45:
        $i30 = -1;

     label46:
        i7 = $i30;

        if r17 == null goto label47;

        $i29 = virtualinvoke r17.<java.lang.Integer: int intValue()>();

        goto label48;

     label47:
        $i29 = -1;

     label48:
        i8 = $i29;

        if r115 != null goto label49;

        if r17 == null goto label50;

     label49:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void addToMessageStateChange(android.database.sqlite.SQLiteDatabase,java.lang.String,int,int)>(r7, r9, i7, i8);

     label50:
        r18 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.os.Handler getDelayedSyncHandler()>();

        r20 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.accounts.Account getAccountManagerAccount(long)>(l5);

        if r20 == null goto label57;

        $r94 = new com.android.email.provider.EmailProvider$SyncRequestMessage;

        $r92 = virtualinvoke r1.<android.net.Uri: java.lang.String getAuthority()>();

        specialinvoke $r94.<com.android.email.provider.EmailProvider$SyncRequestMessage: void <init>(com.android.email.provider.EmailProvider,java.lang.String,android.accounts.Account,long,com.android.email.provider.EmailProvider$1)>(r0, $r92, r20, l35, null);

        r19 = $r94;

        $r93 = r0.<com.android.email.provider.EmailProvider: java.util.Set mDelayedSyncRequests>;

        r22 = $r93;

        entermonitor $r93;

     label51:
        $r96 = r0.<com.android.email.provider.EmailProvider: java.util.Set mDelayedSyncRequests>;

        $z23 = interfaceinvoke $r96.<java.util.Set: boolean contains(java.lang.Object)>(r19);

        if $z23 != 0 goto label52;

        $r95 = r0.<com.android.email.provider.EmailProvider: java.util.Set mDelayedSyncRequests>;

        interfaceinvoke $r95.<java.util.Set: boolean add(java.lang.Object)>(r19);

        r21 = virtualinvoke r18.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(0, r19);

        virtualinvoke r18.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r21, 30000L);

     label52:
        exitmonitor r22;

     label53:
        goto label56;

     label54:
        $r111 := @caughtexception;

        r25 = $r111;

        exitmonitor r22;

     label55:
        throw r25;

     label56:
        goto label58;

     label57:
        $r86 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r84 = newarray (java.lang.Object)[1];

        $r85 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        $r84[0] = $r85;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r86, "Attempted to start delayed sync for invalid account %d", $r84);

     label58:
        goto label60;

     label59:
        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert or ignore into Message_Updates select * from Message where _id=");

        $r91 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r90 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r90);

     label60:
        goto label62;

     label61:
        if i0 != 8193 goto label62;

        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("delete from Message_Updates where _id=");

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r81);

     label62:
        $r69 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWithId(java.lang.String,java.lang.String)>(r9, r3);

        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(r8, r2, $r69, r4);

        if i0 == 8193 goto label63;

        if i0 != 8194 goto label64;

     label63:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void handleMessageUpdateNotifications(android.net.Uri,java.lang.String,android.content.ContentValues)>(r1, r9, r2);

        goto label94;

     label64:
        if i0 != 12289 goto label68;

        $i27 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

        l36 = (long) $i27;

        $z18 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("flags");

        if $z18 == 0 goto label65;

        $r76 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("flags");

        i6 = virtualinvoke $r76.<java.lang.Integer: int intValue()>();

        $r77 = r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService mAttachmentService>;

        interfaceinvoke $r77.<com.android.email.provider.EmailProvider$EmailAttachmentService: void attachmentChanged(android.content.Context,long,int)>(r6, l36, i6);

     label65:
        $z19 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("uiState");

        if $z19 != 0 goto label66;

        $z16 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("uiDownloadedSize");

        if $z16 == 0 goto label67;

     label66:
        $r82 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENT_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r82, r9);

        r116 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment restoreAttachmentWithId(android.content.Context,long)>(r6, l36);

        if r116 == null goto label67;

        $r83 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENTS_NOTIFIER>;

        $l28 = r116.<com.android.emailcommon.provider.EmailContent$Attachment: long mMessageKey>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r83, $l28);

     label67:
        goto label94;

     label68:
        if i0 != 4097 goto label69;

        l37 = staticinvoke <com.android.emailcommon.provider.Mailbox: long getAccountIdForMailbox(android.content.Context,java.lang.String)>(r6, r9);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(java.lang.String,long)>(r9, l37);

        $r72 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l37);

        staticinvoke <com.android.email.provider.EmailProvider: boolean restartPushForMailbox(android.content.Context,android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String)>(r6, r7, r2, $r72);

        goto label94;

     label69:
        if i0 != 1 goto label94;

        $l25 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void updateAccountSyncInterval(long,android.content.ContentValues)>($l25, r2);

        $r70 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r70, r9);

        $r71 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r71, null);

        staticinvoke <com.android.email.provider.EmailProvider: boolean restartPushForAccount(android.content.Context,android.database.sqlite.SQLiteDatabase,android.content.ContentValues,java.lang.String)>(r6, r7, r2, r9);

        goto label94;

     label70:
        $r34 = new android.content.ContentValues;

        specialinvoke $r34.<android.content.ContentValues: void <init>(android.content.ContentValues)>(r2);

        r117 = $r34;

        virtualinvoke r117.<android.content.ContentValues: void remove(java.lang.String)>("htmlContent");

        virtualinvoke r117.<android.content.ContentValues: void remove(java.lang.String)>("textContent");

        $r33 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String whereWithId(java.lang.String,java.lang.String)>(r9, r3);

        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(r8, r117, $r33, r4);

        $z3 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("htmlContent");

        if $z3 != 0 goto label71;

        $z7 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("textContent");

        if $z7 == 0 goto label94;

     label71:
        $z2 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("messageKey");

        if $z2 == 0 goto label72;

        $r43 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("messageKey");

        l38 = virtualinvoke $r43.<java.lang.Long: long longValue()>();

        goto label73;

     label72:
        l39 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r9);

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select messageKey from Body where _id=");

        $r38 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l39);

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        r118 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r42);

        l38 = virtualinvoke r118.<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>();

     label73:
        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFiles(android.content.Context,long,android.content.ContentValues)>(r6, l38, r2);

        goto label94;

     label74:
        $r44 = new android.content.ContentValues;

        specialinvoke $r44.<android.content.ContentValues: void <init>(android.content.ContentValues)>(r2);

        r119 = $r44;

        virtualinvoke r119.<android.content.ContentValues: void remove(java.lang.String)>("htmlContent");

        virtualinvoke r119.<android.content.ContentValues: void remove(java.lang.String)>("textContent");

        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(r8, r119, r3, r4);

        if i2 != 0 goto label75;

        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("messageKey=?");

        if $z10 == 0 goto label75;

        $r60 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r61 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r60, "Body Update to non-existent row, morphing to insert", $r61);

        $r58 = new android.content.ContentValues;

        specialinvoke $r58.<android.content.ContentValues: void <init>(android.content.ContentValues)>(r2);

        r120 = $r58;

        $r59 = r4[0];

        virtualinvoke r120.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("messageKey", $r59);

        $r56 = <com.android.emailcommon.provider.EmailContent$Body: android.net.Uri CONTENT_URI>;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r56, r120);

        goto label94;

     label75:
        $z4 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("htmlContent");

        if $z4 != 0 goto label76;

        $z9 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("textContent");

        if $z9 == 0 goto label94;

     label76:
        $z5 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("messageKey");

        if $z5 == 0 goto label77;

        $r55 = newarray (long)[1];

        $r53 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("messageKey");

        $l13 = virtualinvoke $r53.<java.lang.Long: long longValue()>();

        $r55[0] = $l13;

        r121 = $r55;

        goto label85;

     label77:
        $z6 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("_id");

        if $z6 == 0 goto label78;

        $r50 = virtualinvoke r2.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("_id");

        l40 = virtualinvoke $r50.<java.lang.Long: long longValue()>();

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select messageKey from Body where _id=");

        $r48 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l40);

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>($r49);

        $r54 = newarray (long)[1];

        $l14 = virtualinvoke r14.<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>();

        $r54[0] = $l14;

        r121 = $r54;

        goto label85;

     label78:
        $r46 = newarray (java.lang.String)[1];

        $r46[0] = "messageKey";

        r122 = $r46;

        r123 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Body", r122, r3, r4, null, null, null);

     label79:
        i41 = interfaceinvoke r123.<android.database.Cursor: int getCount()>();

        if i41 != 0 goto label80;

        $r45 = new java.lang.IllegalStateException;

        specialinvoke $r45.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can\'t find body record");

        throw $r45;

     label80:
        r121 = newarray (long)[i41];

        i42 = 0;

     label81:
        $z8 = interfaceinvoke r123.<android.database.Cursor: boolean moveToNext()>();

        if $z8 == 0 goto label82;

        $i11 = i42;

        i42 = i42 + 1;

        $l12 = interfaceinvoke r123.<android.database.Cursor: long getLong(int)>(0);

        r121[$i11] = $l12;

        goto label81;

     label82:
        interfaceinvoke r123.<android.database.Cursor: void close()>();

        goto label85;

     label83:
        $r109 := @caughtexception;

        r26 = $r109;

     label84:
        interfaceinvoke r123.<android.database.Cursor: void close()>();

        throw r26;

     label85:
        i43 = 0;

     label86:
        $i10 = lengthof r121;

        if i43 >= $i10 goto label87;

        l44 = r121[i43];

        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFiles(android.content.Context,long,android.content.ContentValues)>(r6, l44, r2);

        i43 = i43 + 1;

        goto label86;

     label87:
        goto label94;

     label88:
        staticinvoke <com.android.email.provider.EmailProvider: void decodeEmailAddresses(android.content.ContentValues)>(r2);

     label89:
        if i0 != 12288 goto label90;

        $z13 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("location");

        if $z13 == 0 goto label90;

        $r68 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("location");

        $z12 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r68);

        if $z12 == 0 goto label90;

        $r66 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r67 = new java.lang.Throwable;

        specialinvoke $r67.<java.lang.Throwable: void <init>()>();

        $r65 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r66, $r67, "attachment with blank location", $r65);

     label90:
        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(r8, r2, r3, r4);

        goto label94;

     label91:
        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("MessageMove", r2, r3, r4);

        goto label94;

     label92:
        i2 = virtualinvoke r7.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("MessageStateChange", r2, r3, r4);

        goto label94;

     label93:
        $r105 = new java.lang.IllegalArgumentException;

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URI ");

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r101 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r105.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r101);

        throw $r105;

     label94:
        goto label96;

     label95:
        $r110 := @caughtexception;

        r124 = $r110;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: void checkDatabases()>();

        throw r124;

     label96:
        if i2 <= 0 goto label97;

        $r41 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri getBaseNotificationUri(int)>(i0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void sendNotifierChange(android.net.Uri,java.lang.String,java.lang.String)>($r41, "update", r9);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r5, null);

     label97:
        return i2;

        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
        catch java.lang.Throwable from label30 to label31 with label36;
        catch java.lang.Throwable from label33 to label34 with label36;
        catch java.lang.Throwable from label36 to label37 with label36;
        catch java.lang.Throwable from label39 to label40 with label41;
        catch java.lang.Throwable from label41 to label42 with label41;
        catch java.lang.Throwable from label51 to label53 with label54;
        catch java.lang.Throwable from label54 to label55 with label54;
        catch java.lang.Throwable from label79 to label82 with label83;
        catch java.lang.Throwable from label83 to label84 with label83;
        catch android.database.sqlite.SQLiteException from label05 to label07 with label95;
        catch android.database.sqlite.SQLiteException from label08 to label09 with label95;
        catch android.database.sqlite.SQLiteException from label10 to label11 with label95;
        catch android.database.sqlite.SQLiteException from label12 to label13 with label95;
        catch android.database.sqlite.SQLiteException from label14 to label15 with label95;
        catch android.database.sqlite.SQLiteException from label16 to label17 with label95;
        catch android.database.sqlite.SQLiteException from label18 to label19 with label95;
        catch android.database.sqlite.SQLiteException from label20 to label21 with label95;
        catch android.database.sqlite.SQLiteException from label22 to label28 with label95;
        catch android.database.sqlite.SQLiteException from label29 to label32 with label95;
        catch android.database.sqlite.SQLiteException from label33 to label35 with label95;
        catch android.database.sqlite.SQLiteException from label36 to label94 with label95;
    }

    private void updateSyncStatus(android.os.Bundle)
    {
        com.android.email.provider.EmailProvider r0;
        android.os.Bundle r1;
        long l0;
        int i1, i2;
        android.net.Uri r2, $r4;
        boolean z0, $z1;
        android.content.ContentValues r3, $r5;
        java.lang.String[] $r6;
        java.lang.Integer $r7;
        android.database.sqlite.SQLiteDatabase $r8;
        java.lang.String $r9;
        com.android.email.provider.RefreshStatusMonitor $r10;
        android.content.Context $r11;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.os.Bundle;

        l0 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("id");

        i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("status_code");

        $r4 = <com.android.email.provider.EmailProvider: android.net.Uri FOLDER_STATUS_URI>;

        r2 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r4, l0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r2, null);

        if i1 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        if z0 == 0 goto label3;

        $r11 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r10 = staticinvoke <com.android.email.provider.RefreshStatusMonitor: com.android.email.provider.RefreshStatusMonitor getInstance(android.content.Context)>($r11);

        virtualinvoke $r10.<com.android.email.provider.RefreshStatusMonitor: void setSyncStarted(long)>(l0);

        goto label4;

     label3:
        i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("result");

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r3 = $r5;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiLastSyncResult", $r7);

        $r8 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        $r6 = newarray (java.lang.String)[1];

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r6[0] = $r9;

        virtualinvoke $r8.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("Mailbox", r3, "_id=?", $r6);

     label4:
        return;
    }

    public android.os.Bundle call(java.lang.String, java.lang.String, android.os.Bundle)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String r1, r2, $r8, $r9, $r11, $r13, $r16, $r21, $r22;
        android.os.Bundle r3, r4, r6, $r15, $r24;
        long l0;
        android.net.Uri r5, r25;
        java.lang.Object[] $r7, $r14, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r10;
        java.lang.Object $r12;
        com.android.email.Preferences $r18;
        android.content.Context $r19, $r20;
        android.database.sqlite.SQLiteDatabase $r23;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        $r8 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r7[0] = r1;

        $r7[1] = r2;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "EmailProvider#call(%s, %s)", $r7);

        $r9 = <com.android.emailcommon.provider.EmailContent: java.lang.String DEVICE_FRIENDLY_NAME>;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, $r9);

        if $z0 == 0 goto label1;

        $r24 = new android.os.Bundle;

        specialinvoke $r24.<android.os.Bundle: void <init>(int)>(1);

        r4 = $r24;

        $r22 = <com.android.emailcommon.provider.EmailContent: java.lang.String DEVICE_FRIENDLY_NAME>;

        $r21 = <android.os.Build: java.lang.String MODEL>;

        virtualinvoke r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>($r22, $r21);

        return r4;

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "sync_status");

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void updateSyncStatus(android.os.Bundle)>(r3);

        return null;

     label2:
        $z2 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "fix_parent_keys");

        if $z2 == 0 goto label3;

        $r19 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r23 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r19);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void fixParentKeys(android.database.sqlite.SQLiteDatabase)>($r23);

        return null;

     label3:
        r25 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        $r10 = virtualinvoke r25.<android.net.Uri: java.util.List getPathSegments()>();

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(1);

        $r11 = (java.lang.String) $r12;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        r5 = null;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "send_message");

        if $z3 == 0 goto label4;

        r5 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri uiSendDraftMessage(long,android.os.Bundle)>(l0, r3);

        $r20 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r18 = staticinvoke <com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>($r20);

        virtualinvoke $r18.<com.android.email.Preferences: void setLastUsedAccountId(long)>(l0);

        goto label7;

     label4:
        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "save_message");

        if $z5 == 0 goto label5;

        r5 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri uiSaveDraftMessage(long,android.os.Bundle)>(l0, r3);

        goto label7;

     label5:
        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "set_current_account");

        if $z4 == 0 goto label6;

        $r16 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r17 = newarray (java.lang.Object)[1];

        $r17[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r16, "Unhandled (but expected) Content provider method: %s", $r17);

        goto label7;

     label6:
        $r13 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r13, "Unexpected Content provider method: %s", $r14);

     label7:
        if r5 == null goto label8;

        $r15 = new android.os.Bundle;

        specialinvoke $r15.<android.os.Bundle: void <init>(int)>(1);

        r6 = $r15;

        virtualinvoke r6.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("messageUri", r5);

        goto label9;

     label8:
        r6 = null;

     label9:
        return r6;
    }

    private static void writeBodyFiles(android.content.Context, long, android.content.ContentValues) throws java.lang.IllegalStateException
    {
        android.content.Context r0;
        long l0;
        android.content.ContentValues r1;
        java.lang.String r2, $r8, $r11, $r14, $r16, r18;
        java.io.IOException r3, $r4, $r10, r19;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r9, $r12, $r15, $r17;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: android.content.ContentValues;

        $z0 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("htmlContent");

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("htmlContent");

     label1:
        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFile(android.content.Context,long,java.lang.String,java.lang.String)>(r0, l0, "html", r2);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r3 = $r10;

        $r13 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException while writing html body for message id ");

        $r14 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r16, r3);

        throw $r13;

     label4:
        $z1 = virtualinvoke r1.<android.content.ContentValues: boolean containsKey(java.lang.String)>("textContent");

        if $z1 == 0 goto label8;

        r18 = virtualinvoke r1.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("textContent");

     label5:
        staticinvoke <com.android.email.provider.EmailProvider: void writeBodyFile(android.content.Context,long,java.lang.String,java.lang.String)>(r0, l0, "txt", r18);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        r19 = $r4;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IOException while writing text body for message id ");

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r11, r19);

        throw $r5;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    private static void writeBodyFile(android.content.Context, long, java.lang.String, java.lang.String) throws java.io.IOException
    {
        android.content.Context r0;
        long l0;
        java.lang.String r1, r2, $r8;
        java.io.File r3;
        java.io.FileWriter r4, $r6;
        java.lang.Throwable r5, $r10;
        boolean $z0, $z1;
        java.lang.Object[] $r7;
        java.lang.Long $r9;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 = staticinvoke <com.android.email.provider.EmailProvider: java.io.File getBodyFile(android.content.Context,long,java.lang.String)>(r0, l0, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label6;

        $r8 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r7[0] = $r9;

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "did not delete text body for %d", $r7);

        goto label6;

     label1:
        $r6 = new java.io.FileWriter;

        specialinvoke $r6.<java.io.FileWriter: void <init>(java.io.File)>(r3);

        r4 = $r6;

     label2:
        virtualinvoke r4.<java.io.FileWriter: void write(java.lang.String)>(r2);

     label3:
        virtualinvoke r4.<java.io.FileWriter: void close()>();

        goto label6;

     label4:
        $r10 := @caughtexception;

        r5 = $r10;

     label5:
        virtualinvoke r4.<java.io.FileWriter: void close()>();

        throw r5;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected static java.io.File getBodyFile(android.content.Context, long, java.lang.String) throws java.io.FileNotFoundException
    {
        android.content.Context r0;
        long l0, l1, l2, $l3;
        java.lang.String r1, $r7, $r11, $r12, $r15, $r19;
        java.io.File r2, $r3, $r4, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r13, $r16, $r17, $r18, $r20;
        java.io.FileNotFoundException $r21;
        java.lang.IllegalArgumentException $r22;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "html");

        if $z0 != 0 goto label1;

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r1, "txt");

        if $z3 != 0 goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ext must be one of \'html\' or \'txt\'");

        throw $r22;

     label1:
        $l3 = l0 / 100L;

        l1 = $l3 % 100L;

        l2 = l0 % 100L;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r0.<android.content.Context: java.io.File getFilesDir()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("body/");

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r12);

        r2 = $r3;

        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label2;

        $r21 = new java.io.FileNotFoundException;

        specialinvoke $r21.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Could not create directory for body file");

        throw $r21;

     label2:
        $r14 = new java.io.File;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r19);

        return $r14;
    }

    public android.os.ParcelFileDescriptor openFile(android.net.Uri, java.lang.String) throws java.io.FileNotFoundException
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        java.lang.String r2, r3, $r6, $r7, $r11, $r19, $r21, $r23, $r24;
        int i0, $i2, $i3;
        long l1, l6, l7;
        android.os.ParcelFileDescriptor r4, $r12, $r16;
        java.lang.Throwable r5, $r25;
        boolean $z0;
        java.lang.Long $r8, $r13;
        android.content.Context $r9, $r15;
        java.io.File $r10, $r14, $r22;
        java.io.FileNotFoundException $r17;
        java.lang.Object[] $r18, $r20;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        $r6 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $z0 = staticinvoke <com.android.mail.utils.LogUtils: boolean isLoggable(java.lang.String,int)>($r6, 3);

        if $z0 == 0 goto label1;

        $r24 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r20 = newarray (java.lang.Object)[1];

        $r21 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r23 = staticinvoke <com.android.mail.utils.LogUtils: java.lang.String contentUriToString(java.lang.String,android.net.Uri)>($r21, r1);

        $r20[0] = $r23;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r24, "EmailProvider.openFile: %s", $r20);

     label1:
        i0 = staticinvoke <com.android.email.provider.EmailProvider: int findMatch(android.net.Uri,java.lang.String)>(r1, "openFile");

        lookupswitch(i0)
        {
            case 12291: goto label2;
            case 40962: goto label7;
            case 40963: goto label8;
            default: goto label9;
        };

     label2:
        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("filePath");

        if r3 == null goto label9;

        l1 = staticinvoke <android.os.Binder: long clearCallingIdentity()>();

     label3:
        $r19 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r3;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "Opening attachment %s", $r18);

        $r22 = new java.io.File;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r22, 268435456);

     label4:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        return r4;

     label5:
        $r25 := @caughtexception;

        r5 = $r25;

     label6:
        staticinvoke <android.os.Binder: void restoreCallingIdentity(long)>(l1);

        throw r5;

     label7:
        $r11 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r11);

        l6 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $r15 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r14 = staticinvoke <com.android.email.provider.EmailProvider: java.io.File getBodyFile(android.content.Context,long,java.lang.String)>($r15, l6, "html");

        $i3 = staticinvoke <com.android.email.provider.Utilities: int parseMode(java.lang.String)>(r2);

        $r16 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r14, $i3);

        return $r16;

     label8:
        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r7);

        l7 = virtualinvoke $r8.<java.lang.Long: long longValue()>();

        $r9 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r10 = staticinvoke <com.android.email.provider.EmailProvider: java.io.File getBodyFile(android.content.Context,long,java.lang.String)>($r9, l7, "txt");

        $i2 = staticinvoke <com.android.email.provider.Utilities: int parseMode(java.lang.String)>(r2);

        $r12 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>($r10, $i2);

        return $r12;

     label9:
        $r17 = new java.io.FileNotFoundException;

        specialinvoke $r17.<java.io.FileNotFoundException: void <init>(java.lang.String)>("unable to open file");

        throw $r17;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static android.net.Uri getBaseNotificationUri(int)
    {
        int i0;
        android.net.Uri r0;

        i0 := @parameter0: int;

        r0 = null;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 8192: goto label1;
            case 8193: goto label1;
            case 8194: goto label1;
            default: goto label3;
        };

     label1:
        r0 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri NOTIFIER_URI>;

        goto label3;

     label2:
        r0 = <com.android.emailcommon.provider.Account: android.net.Uri NOTIFIER_URI>;

     label3:
        return r0;
    }

    private void sendNotifierChange(android.net.Uri, java.lang.String, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r6;
        java.lang.String r2, r3;
        long l0;
        java.lang.Long $r5;
        byte $b1;
        boolean $z0;
        android.net.Uri$Builder $r7, $r8;
        java.lang.NumberFormatException $r9;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        if r2 == null goto label2;

        $r7 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>(r2);

        r1 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

     label2:
        l0 = 0L;

     label3:
        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r3);

        l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

     label4:
        goto label6;

     label5:
        $r9 := @caughtexception;

     label6:
        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label7;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r1, r3);

        goto label8;

     label7:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r1, null);

     label8:
        $r6 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri NOTIFIER_URI>;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label9;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void sendMessageListDataChangedNotification()>();

     label9:
        return;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private void sendMessageListDataChangedNotification()
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        android.content.Intent r2, $r3;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.email.MESSAGE_LIST_DATASET_CHANGED");

        r2 = $r3;

        virtualinvoke r1.<android.content.Context: void sendBroadcast(android.content.Intent)>(r2);

        return;
    }

    private java.util.Set getBatchNotificationsSet()
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.util.Set $r3;

        r0 := @this: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: java.lang.ThreadLocal mTLBatchNotifications>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.util.Set) $r2;

        return $r3;
    }

    private void setBatchNotificationsSet(java.util.Set)
    {
        com.android.email.provider.EmailProvider r0;
        java.util.Set r1;
        java.lang.ThreadLocal $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.util.Set;

        $r2 = r0.<com.android.email.provider.EmailProvider: java.lang.ThreadLocal mTLBatchNotifications>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(r1);

        return;
    }

    public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) throws android.content.OperationApplicationException
    {
        com.android.email.provider.EmailProvider r0;
        java.util.ArrayList r1;
        android.content.Context r2;
        android.database.sqlite.SQLiteDatabase r3;
        android.content.ContentProviderResult[] r4, r5;
        java.util.Set r6, r10;
        java.util.Iterator r7, r11;
        android.net.Uri r8, r12;
        java.lang.Throwable r9, $r16;
        java.util.HashSet $r13;
        boolean $z0, $z1;
        android.content.ContentResolver $r14, $r17;
        java.lang.Object $r15, $r18;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.util.ArrayList;

        $r13 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void setBatchNotificationsSet(java.util.Set)>($r13);

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r2);

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();

     label1:
        r4 = specialinvoke r0.<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>(r1);

        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();

        r5 = r4;

     label2:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.util.Set getBatchNotificationsSet()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void setBatchNotificationsSet(java.util.Set)>(null);

        r7 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (android.net.Uri) $r15;

        $r14 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r14.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>(r8, null);

        goto label3;

     label4:
        return r5;

     label5:
        $r16 := @caughtexception;

        r9 = $r16;

     label6:
        virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();

        r10 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.util.Set getBatchNotificationsSet()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void setBatchNotificationsSet(java.util.Set)>(null);

        r11 = interfaceinvoke r10.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r18 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (android.net.Uri) $r18;

        $r17 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r17.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>(r12, null);

        goto label7;

     label8:
        throw r9;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void injectAttachmentService(com.android.email.provider.EmailProvider$EmailAttachmentService)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.email.provider.EmailProvider$EmailAttachmentService r1, $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.email.provider.EmailProvider$EmailAttachmentService;

        if r1 != null goto label1;

        $r2 = r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService DEFAULT_ATTACHMENT_SERVICE>;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$EmailAttachmentService mAttachmentService> = $r2;

        return;
    }

    private android.database.Cursor notificationQuery(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3;
        java.lang.String[] r5, $r7;
        android.content.Context $r6;
        android.database.Cursor $r8;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r6);

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = r3;

        r5 = $r7;

        $r8 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("SELECT mailboxKey, SUM(CASE flagRead WHEN 0 THEN 1 ELSE 0 END), SUM(CASE flagSeen WHEN 0 THEN 1 ELSE 0 END)\nFROM Message\nWHERE accountKey = ?\nGROUP BY mailboxKey", r5);

        return $r8;
    }

    public android.database.Cursor mostRecentMessageQuery(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3;
        android.content.Context $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r4);

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select max(_id) from Message where mailboxKey=?", $r5);

        return $r6;
    }

    private android.database.Cursor getMailboxMessageCount(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.database.sqlite.SQLiteDatabase r2;
        java.lang.String r3;
        android.content.Context $r4;
        java.lang.String[] $r5;
        android.database.Cursor $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r4);

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r3;

        $r6 = virtualinvoke r2.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select count(*) from Message where mailboxKey=?", $r5);

        return $r6;
    }

    private static com.android.common.content.ProjectionMap getMessageListMap()
    {
        com.android.common.content.ProjectionMap $r0, $r1, $r27;
        com.android.common.content.ProjectionMap$Builder $r2, $r3, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r25, $r26;
        java.lang.String $r4, $r6, $r16, $r17, $r24;

        $r0 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageListMap>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r3 = virtualinvoke $r2.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_id", "_id");

        $r4 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uimessage");

        $r5 = virtualinvoke $r3.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversationUri", $r4);

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uimessage");

        $r7 = virtualinvoke $r5.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("messageListUri", $r6);

        $r8 = virtualinvoke $r7.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("subject", "subject");

        $r9 = virtualinvoke $r8.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("snippet", "snippet");

        $r10 = virtualinvoke $r9.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversationInfo", null);

        $r11 = virtualinvoke $r10.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("dateReceivedMs", "timeStamp");

        $r12 = virtualinvoke $r11.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("hasAttachments", "flagAttachment");

        $r13 = virtualinvoke $r12.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("numMessages", "1");

        $r14 = virtualinvoke $r13.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("numDrafts", "0");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r15 = virtualinvoke $r14.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("sendingState", $r16);

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r19 = virtualinvoke $r15.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("priority", $r17);

        $r18 = virtualinvoke $r19.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("read", "flagRead");

        $r21 = virtualinvoke $r18.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("seen", "flagSeen");

        $r20 = virtualinvoke $r21.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("starred", "flagFavorite");

        $r22 = virtualinvoke $r20.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversationFlags", "CASE WHEN (flags&4) !=0 THEN 16 ELSE 0 END + CASE WHEN (flags&524288) !=0 THEN 8 ELSE 0 END + CASE WHEN (flags&262144) !=0 THEN 4 ELSE 0 END");

        $r24 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>("uiaccount", "accountKey");

        $r23 = virtualinvoke $r22.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("accountUri", $r24);

        $r26 = virtualinvoke $r23.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("senderInfo", "fromList");

        $r25 = virtualinvoke $r26.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("orderKey", "timeStamp");

        $r27 = virtualinvoke $r25.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageListMap> = $r27;

     label1:
        $r1 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageListMap>;

        return $r1;
    }

    private static com.android.common.content.ProjectionMap getMessageViewMap()
    {
        com.android.common.content.ProjectionMap $r0, $r1, $r41;
        com.android.common.content.ProjectionMap$Builder $r2, $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r25, $r26, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r42, $r43;
        java.lang.String $r5, $r7, $r21, $r24, $r27, $r28, $r35, $r40;

        $r0 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageViewMap>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r3 = virtualinvoke $r2.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_id", "Message._id");

        $r4 = virtualinvoke $r3.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("serverMessageId", "syncServerId");

        $r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithFQId(java.lang.String,java.lang.String)>("uimessage", "Message");

        $r6 = virtualinvoke $r4.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("messageUri", $r5);

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithFQId(java.lang.String,java.lang.String)>("uimessage", "Message");

        $r8 = virtualinvoke $r6.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversationId", $r7);

        $r9 = virtualinvoke $r8.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("subject", "subject");

        $r10 = virtualinvoke $r9.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("snippet", "snippet");

        $r11 = virtualinvoke $r10.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("fromAddress", "fromList");

        $r12 = virtualinvoke $r11.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("toAddresses", "toList");

        $r13 = virtualinvoke $r12.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("ccAddresses", "ccList");

        $r15 = virtualinvoke $r13.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("bccAddresses", "bccList");

        $r14 = virtualinvoke $r15.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("replyToAddress", "replyToList");

        $r17 = virtualinvoke $r14.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("dateReceivedMs", "timeStamp");

        $r16 = virtualinvoke $r17.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("bodyHtml", null);

        $r19 = virtualinvoke $r16.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("bodyText", null);

        $r18 = virtualinvoke $r19.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("refMessageId", "0");

        $r21 = <com.android.email.provider.EmailProvider: java.lang.String NOT_A_DRAFT_STRING>;

        $r20 = virtualinvoke $r18.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("draftType", $r21);

        $r23 = virtualinvoke $r20.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("appendRefMessageContent", "0");

        $r22 = virtualinvoke $r23.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("hasAttachments", "flagAttachment");

        $r24 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithFQId(java.lang.String,java.lang.String)>("uiattachments", "Message");

        $r25 = virtualinvoke $r22.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("attachmentListUri", $r24);

        $r27 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithFQId(java.lang.String,java.lang.String)>("uiattachmentbycid", "Message");

        $r26 = virtualinvoke $r25.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("attachmentByCidUri", $r27);

        $r29 = virtualinvoke $r26.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("messageFlags", "CASE WHEN (flags&4) !=0 THEN 16 ELSE 0 END");

        $r30 = virtualinvoke $r29.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("draftType", "CASE WHEN (flags&1048576) !=0 THEN 1 WHEN (flags&2097152) !=0 THEN 3 WHEN (flags&1) !=0 THEN 2 WHEN (flags&2) !=0 THEN 4 ELSE 0 END");

        $r28 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>("uiaccount", "accountKey");

        $r33 = virtualinvoke $r30.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("messageAccountUri", $r28);

        $r34 = virtualinvoke $r33.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("starred", "flagFavorite");

        $r31 = virtualinvoke $r34.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("read", "flagRead");

        $r32 = virtualinvoke $r31.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("seen", "flagSeen");

        $r37 = virtualinvoke $r32.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("spamWarningString", null);

        $r35 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r36 = virtualinvoke $r37.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("spamWarningLevel", $r35);

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r38 = virtualinvoke $r36.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("spamWarningLinkType", $r40);

        $r39 = virtualinvoke $r38.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("viaDomain", null);

        $r43 = virtualinvoke $r39.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("clipped", "0");

        $r42 = virtualinvoke $r43.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("permalink", null);

        $r41 = virtualinvoke $r42.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageViewMap> = $r41;

     label1:
        $r1 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sMessageViewMap>;

        return $r1;
    }

    private static com.android.common.content.ProjectionMap getFolderListMap()
    {
        com.android.common.content.ProjectionMap $r0, $r1, $r34;
        com.android.common.content.ProjectionMap$Builder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r20, $r21, $r22, $r24, $r25, $r28, $r35, $r36;
        java.lang.String $r5, $r11, $r14, $r17, $r19, $r23, $r26, $r31, $r32;
        java.lang.StringBuilder $r27, $r29, $r30, $r33;

        $r0 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sFolderListMap>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r3 = virtualinvoke $r2.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_id", "_id");

        $r4 = virtualinvoke $r3.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("persistentId", "serverId");

        $r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uifolder");

        $r6 = virtualinvoke $r4.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("folderUri", $r5);

        $r7 = virtualinvoke $r6.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("name", "displayName");

        $r8 = virtualinvoke $r7.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("hasChildren", "flags&1");

        $r9 = virtualinvoke $r8.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("capabilities", "CASE WHEN (flags&16) !=0 THEN 8 ELSE 0 END");

        $r10 = virtualinvoke $r9.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("syncWindow", "3");

        $r11 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uimessages");

        $r12 = virtualinvoke $r10.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversationListUri", $r11);

        $r14 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uisubfolders");

        $r13 = virtualinvoke $r12.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("childFoldersListUri", $r14);

        $r16 = virtualinvoke $r13.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("unreadCount", "unreadCount");

        $r15 = virtualinvoke $r16.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("totalCount", "CASE WHEN totalCount<0 OR type=3 OR type=4 OR type=6 THEN messageCount ELSE totalCount END");

        $r17 = <com.android.email.provider.EmailProvider: java.lang.String QUERY_UIREFRESH>;

        $r19 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>($r17);

        $r18 = virtualinvoke $r15.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("refreshUri", $r19);

        $r21 = virtualinvoke $r18.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("syncStatus", "uiSyncStatus");

        $r20 = virtualinvoke $r21.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("lastSyncResult", "uiLastSyncResult");

        $r23 = <com.android.email.provider.EmailProvider: java.lang.String FOLDER_TYPE>;

        $r22 = virtualinvoke $r20.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("type", $r23);

        $r24 = virtualinvoke $r22.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("iconResId", "CASE type WHEN 0 THEN 2130837617 WHEN 3 THEN 2130837614 WHEN 4 THEN 2130837618 WHEN 5 THEN 2130837620 WHEN 6 THEN 2130837623 WHEN 9 THEN 2130837622 ELSE 2130837615 END");

        $r26 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uiloadmore");

        $r25 = virtualinvoke $r24.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("loadMoreUri", $r26);

        $r28 = virtualinvoke $r25.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("hierarchicalDesc", "hierarchicalName");

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("case when parentKey=-1 then NULL else ");

        $r32 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>("uifolder", "parentKey");

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" end");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r35 = virtualinvoke $r28.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("parentUri", $r31);

        $r36 = virtualinvoke $r35.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("unreadSenders", "(SELECT group_concat(fromList) FROM (SELECT fromList FROM Message WHERE mailboxKey=Mailbox._id AND flagRead=0 GROUP BY fromList ORDER BY timeStamp DESC))");

        $r34 = virtualinvoke $r36.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sFolderListMap> = $r34;

     label1:
        $r1 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sFolderListMap>;

        return $r1;
    }

    private static com.android.common.content.ProjectionMap getAccountListMap(android.content.Context)
    {
        android.content.Context r0;
        com.android.common.content.ProjectionMap$Builder r1, $r6, $r7, $r9, $r11, $r13, $r14, $r15, $r16, $r18, $r24, $r25, $r27, $r28, $r31, $r32, $r33, $r34, $r36, $r37, $r39;
        java.lang.String r2, r3, $r8, $r10, $r12, $r21, $r22, $r26, $r29, $r30, $r35, $r38, $r40, $r45, $r49;
        com.android.common.content.ProjectionMap $r4, $r5, $r43;
        java.lang.StringBuilder $r17, $r19, $r20, $r23, $r41, $r42, $r46, $r47, $r48, $r51, $r52, $r53;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        $r4 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAccountListMap>;

        if $r4 != null goto label3;

        $r6 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r7 = virtualinvoke $r6.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_id", "_id");

        $r8 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uifolders");

        $r9 = virtualinvoke $r7.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("folderListUri", $r8);

        $r10 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uifullfolders");

        $r11 = virtualinvoke $r9.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("fullFolderListUri", $r10);

        $r12 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uiallfolders");

        $r14 = virtualinvoke $r11.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("allFolderListUri", $r12);

        $r13 = virtualinvoke $r14.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("name", "displayName");

        $r16 = virtualinvoke $r13.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("accountManagerName", "emailAddress");

        $r15 = virtualinvoke $r16.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("accountId", "emailAddress");

        $r18 = virtualinvoke $r15.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("senderName", "senderName");

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'content://");

        $r21 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiundo\'");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = virtualinvoke $r18.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("undoUri", $r22);

        $r26 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uiaccount");

        $r25 = virtualinvoke $r24.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("accountUri", $r26);

        $r29 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uisearch");

        $r27 = virtualinvoke $r25.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("searchUri", $r29);

        $r28 = virtualinvoke $r27.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("providerVersion", "1");

        $r32 = virtualinvoke $r28.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("syncStatus", "0");

        $r30 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uirecentfolders");

        $r31 = virtualinvoke $r32.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("recentFolderListUri", $r30);

        $r35 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uidefaultrecentfolders");

        $r33 = virtualinvoke $r31.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("defaultRecentFolderListUri", $r35);

        $r34 = virtualinvoke $r33.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("signature", "signature");

        $r38 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r36 = virtualinvoke $r34.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("snap_headers", $r38);

        $r37 = virtualinvoke $r36.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("confirm_archive", "0");

        $r40 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(-1);

        $r39 = virtualinvoke $r37.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("conversation_view_mode", $r40);

        r1 = virtualinvoke $r39.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("veiled_address_pattern", null);

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296955);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label1;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("sendFeedbackIntentUri", $r49);

     label1:
        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296657);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label2;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("helpIntentUri", $r45);

     label2:
        $r43 = virtualinvoke r1.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAccountListMap> = $r43;

     label3:
        $r5 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAccountListMap>;

        return $r5;
    }

    private static com.android.common.content.ProjectionMap getQuickResponseMap()
    {
        com.android.common.content.ProjectionMap $r0, $r1, $r12;
        com.android.common.content.ProjectionMap$Builder $r2, $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r6, $r10;

        $r0 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sQuickResponseMap>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r3 = virtualinvoke $r2.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("quickResponse", "quickResponse");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("quickresponse", "");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'||");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke $r3.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("uri", $r10);

        $r12 = virtualinvoke $r11.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sQuickResponseMap> = $r12;

     label1:
        $r1 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sQuickResponseMap>;

        return $r1;
    }

    private static com.android.common.content.ProjectionMap getAttachmentMap()
    {
        com.android.common.content.ProjectionMap $r0, $r1, $r13;
        com.android.common.content.ProjectionMap$Builder $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r5;

        $r0 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAttachmentMap>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.android.common.content.ProjectionMap: com.android.common.content.ProjectionMap$Builder builder()>();

        $r3 = virtualinvoke $r2.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_display_name", "fileName");

        $r4 = virtualinvoke $r3.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("_size", "size");

        $r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithId(java.lang.String)>("uiattachment");

        $r6 = virtualinvoke $r4.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("uri", $r5);

        $r7 = virtualinvoke $r6.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("contentType", "mimeType");

        $r8 = virtualinvoke $r7.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("state", "uiState");

        $r9 = virtualinvoke $r8.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("destination", "uiDestination");

        $r10 = virtualinvoke $r9.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("downloadedSize", "uiDownloadedSize");

        $r11 = virtualinvoke $r10.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("contentUri", "contentUri");

        $r12 = virtualinvoke $r11.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap$Builder add(java.lang.String,java.lang.String)>("flags", "flags");

        $r13 = virtualinvoke $r12.<com.android.common.content.ProjectionMap$Builder: com.android.common.content.ProjectionMap build()>();

        <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAttachmentMap> = $r13;

     label1:
        $r1 = <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap sAttachmentMap>;

        return $r1;
    }

    private static java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap, java.lang.String[])
    {
        com.android.common.content.ProjectionMap r0;
        java.lang.String[] r1;
        android.content.ContentValues $r2;
        java.lang.StringBuilder $r3;

        r0 := @parameter0: com.android.common.content.ProjectionMap;

        r1 := @parameter1: java.lang.String[];

        $r2 = <com.android.email.provider.EmailProvider: android.content.ContentValues EMPTY_CONTENT_VALUES>;

        $r3 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>(r0, r1, $r2);

        return $r3;
    }

    private static java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap, java.lang.String[], android.content.ContentValues)
    {
        com.android.common.content.ProjectionMap r0;
        java.lang.String[] r1, r4;
        android.content.ContentValues r2;
        java.lang.StringBuilder r3, $r8, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        boolean z0, $z1, $z2;
        int i0, i1;
        java.lang.String r5, r6, r7, $r15, $r20, r28;
        java.lang.Object $r10;

        r0 := @parameter0: com.android.common.content.ProjectionMap;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: android.content.ContentValues;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("SELECT ");

        r3 = $r8;

        z0 = 1;

        r4 = r1;

        i0 = lengthof r4;

        i1 = 0;

     label01:
        if i1 >= i0 goto label10;

        r5 = r4[i1];

        if z0 == 0 goto label02;

        z0 = 0;

        goto label03;

     label02:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label03:
        $z1 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>(r5);

        if $z1 == 0 goto label07;

        r7 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>(r5);

        if r7 != null goto label04;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL AS ");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label04:
        $z2 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("@");

        if $z2 == 0 goto label05;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>(1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AS ");

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label06;

     label05:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = staticinvoke <android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>(r7);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AS ");

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        goto label09;

     label07:
        $r10 = virtualinvoke r0.<com.android.common.content.ProjectionMap: java.lang.Object get(java.lang.Object)>(r5);

        r28 = (java.lang.String) $r10;

        if r28 != null goto label08;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NULL AS ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        r6 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        r6 = r28;

     label09:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        i1 = i1 + 1;

        goto label01;

     label10:
        return r3;
    }

    private static java.lang.String uriWithId(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uriWithColumn(java.lang.String,java.lang.String)>(r0, "_id");

        return $r1;
    }

    private static java.lang.String uriWithColumn(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r10;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'content://");

        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/\' || ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private static java.lang.String uriWithFQId(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r11;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'content://");

        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/\' || ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("._id");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private com.android.email.provider.EmailProvider$MessageQuery genQueryViewMessage(java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1;
        java.lang.String r2, r6, r11, $r19, $r24, $r25, $r28, $r34, $r36, $r37, $r38, r48;
        android.content.Context r3;
        long l0, $l9, $l15, $l17;
        com.android.emailcommon.provider.EmailContent$Message r4;
        android.content.ContentValues r5, $r15;
        com.android.emailcommon.provider.EmailContent$Body r7;
        com.android.emailcommon.mail.Address[] r8, r10;
        byte b1, $b14;
        com.android.mail.preferences.MailPrefs r9;
        int i2, i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i16, $i18, i19, i20;
        com.android.emailcommon.mail.Address r12;
        com.android.mail.providers.Attachment r13, $r35;
        com.android.emailcommon.provider.EmailContent$Attachment r14;
        com.android.common.content.ProjectionMap $r16;
        com.android.email.provider.EmailProvider$MessageQuery $r18;
        java.lang.Integer $r20, $r30, $r33, $r42;
        android.net.Uri$Builder $r21, $r23;
        android.net.Uri $r22, $r40, r46;
        java.lang.StringBuilder $r26, $r27, $r29, r47;
        java.util.ArrayList $r32, r44;
        boolean $z1, $z3;
        java.util.regex.Pattern $r39;
        java.util.regex.Matcher $r41;
        com.android.emailcommon.provider.EmailContent$Attachment[] r43, r45;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        r4 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>(r3, l0);

        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        r5 = $r15;

        r6 = null;

        if r4 == null goto label14;

        r7 = staticinvoke <com.android.emailcommon.provider.EmailContent$Body: com.android.emailcommon.provider.EmailContent$Body restoreBodyWithMessageId(android.content.Context,long)>(r3, l0);

        if r7 == null goto label01;

        $r37 = r7.<com.android.emailcommon.provider.EmailContent$Body: java.lang.String mHtmlContent>;

        if $r37 == null goto label01;

        $r39 = <com.android.email.provider.EmailProvider: java.util.regex.Pattern IMG_TAG_START_REGEX>;

        $r38 = r7.<com.android.emailcommon.provider.EmailContent$Body: java.lang.String mHtmlContent>;

        $r41 = virtualinvoke $r39.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r38);

        $z3 = virtualinvoke $r41.<java.util.regex.Matcher: boolean find()>();

        if $z3 == 0 goto label01;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("bodyEmbedsExternalResources", $r42);

     label01:
        $r19 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mFrom>;

        r8 = staticinvoke <com.android.emailcommon.mail.Address: com.android.emailcommon.mail.Address[] fromHeader(java.lang.String)>($r19);

        b1 = 0;

        r9 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>(r3);

        r10 = r8;

        i2 = lengthof r10;

        i3 = 0;

     label02:
        if i3 >= i2 goto label04;

        r12 = r10[i3];

        r11 = virtualinvoke r12.<com.android.emailcommon.mail.Address: java.lang.String getAddress()>();

        $z1 = virtualinvoke r9.<com.android.mail.preferences.MailPrefs: boolean getDisplayImagesFromSender(java.lang.String)>(r11);

        if $z1 == 0 goto label03;

        b1 = 1;

        goto label04;

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("alwaysShowImages", $r20);

        r43 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment[] restoreAttachmentsWithMessageId(android.content.Context,long)>(r3, l0);

        $i6 = lengthof r43;

        if $i6 <= 0 goto label07;

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r44 = $r32;

        r45 = r43;

        i19 = lengthof r45;

        i20 = 0;

     label05:
        if i20 >= i19 goto label06;

        r14 = r45[i20];

        $r35 = new com.android.mail.providers.Attachment;

        specialinvoke $r35.<com.android.mail.providers.Attachment: void <init>()>();

        r13 = $r35;

        $r36 = r14.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        virtualinvoke r13.<com.android.mail.providers.Attachment: boolean setName(java.lang.String)>($r36);

        $r34 = r14.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType>;

        virtualinvoke r13.<com.android.mail.providers.Attachment: void setContentType(java.lang.String)>($r34);

        $l15 = r14.<com.android.emailcommon.provider.EmailContent$Attachment: long mSize>;

        $i16 = (int) $l15;

        r13.<com.android.mail.providers.Attachment: int size> = $i16;

        $l17 = r14.<com.android.emailcommon.provider.EmailContent$Attachment: long mId>;

        $r40 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uiattachment", $l17);

        r13.<com.android.mail.providers.Attachment: android.net.Uri uri> = $r40;

        $i18 = r14.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        r13.<com.android.mail.providers.Attachment: int flags> = $i18;

        virtualinvoke r44.<java.util.ArrayList: boolean add(java.lang.Object)>(r13);

        i20 = i20 + 1;

        goto label05;

     label06:
        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attachments", "@?");

        r6 = staticinvoke <com.android.mail.providers.Attachment: java.lang.String toJSONArray(java.util.Collection)>(r44);

     label07:
        $i7 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mDraftInfo>;

        if $i7 == 0 goto label10;

        $i11 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mDraftInfo>;

        $i10 = $i11 & 16777216;

        if $i10 == 0 goto label08;

        $b14 = 1;

        goto label09;

     label08:
        $b14 = 0;

     label09:
        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b14);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("appendRefMessageContent", $r30);

        $i13 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mDraftInfo>;

        $i12 = $i13 & 16777215;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("quotedTextStartPos", $r33);

     label10:
        $i4 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i5 = $i4 & 4;

        if $i5 == 0 goto label11;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://ui.email2.android.com/event/");

        $l9 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventIntentUri", $r28);

     label11:
        $r22 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uiattachments", l0);

        $r23 = virtualinvoke $r22.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $i8 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mFlagLoaded>;

        if $i8 != 1 goto label12;

        $r25 = "true";

        goto label13;

     label12:
        $r25 = "false";

     label13:
        $r21 = virtualinvoke $r23.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("MessageLoaded", $r25);

        r46 = virtualinvoke $r21.<android.net.Uri$Builder: android.net.Uri build()>();

        $r24 = virtualinvoke r46.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attachmentListUri", $r24);

     label14:
        $r16 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getMessageViewMap()>();

        r47 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r16, r1, r5);

        virtualinvoke r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Message LEFT JOIN Body ON messageKey=Message._id WHERE Message._id=?");

        r48 = virtualinvoke r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = new com.android.email.provider.EmailProvider$MessageQuery;

        specialinvoke $r18.<com.android.email.provider.EmailProvider$MessageQuery: void <init>(java.lang.String,java.lang.String)>(r48, r6);

        return $r18;
    }

    private static void appendConversationInfoColumns(java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0, $r1, $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.StringBuilder;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("displayName");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fromList");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("toList");

        return;
    }

    private static java.lang.String genQueryMailboxMessages(java.lang.String[], boolean)
    {
        java.lang.String[] r0;
        boolean z0;
        java.lang.StringBuilder r1, $r7, $r8, $r10, $r11;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getMessageListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        staticinvoke <com.android.email.provider.EmailProvider: void appendConversationInfoColumns(java.lang.StringBuilder)>(r1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Message WHERE flagLoaded IN (2,1) AND mailboxKey=? ");

        if z0 == 0 goto label1;

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AND ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagSeen");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0 ");

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AND ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagRead");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = 0 ");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ORDER BY timeStamp DESC ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIMIT 1500");

        $r6 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static android.database.Cursor getVirtualMailboxMessagesCursor(android.database.sqlite.SQLiteDatabase, java.lang.String[], long, boolean)
    {
        android.database.sqlite.SQLiteDatabase r0;
        java.lang.String[] r1, r3, $r11;
        long l0;
        boolean z0, $z1;
        android.content.ContentValues r2, $r5;
        int i1, $i2;
        java.lang.StringBuilder r4, $r10, $r19, $r21, $r22, $r23, $r24, $r27, $r29, $r31;
        java.lang.String $r6, $r12, $r16, $r25, $r30;
        com.android.common.content.ProjectionMap $r7;
        android.database.Cursor $r15;
        java.lang.IllegalArgumentException $r20, $r26;

        r0 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r1 := @parameter1: java.lang.String[];

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>()>();

        r2 = $r5;

        $r6 = <com.android.email.provider.EmailProvider: java.lang.String CONVERSATION_COLOR>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("color", $r6);

        i1 = staticinvoke <com.android.email.provider.EmailProvider: int getVirtualMailboxType(long)>(l0);

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getMessageListMap()>();

        r4 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r7, r1, r2);

        staticinvoke <com.android.email.provider.EmailProvider: void appendConversationInfoColumns(java.lang.StringBuilder)>(r4);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Message WHERE flagLoaded IN (2,1) AND ");

        $z1 = staticinvoke <com.android.email.provider.EmailProvider: boolean isCombinedMailbox(long)>(l0);

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r27 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagSeen");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 AND ");

        $r31 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagRead");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 AND ");

     label1:
        r3 = null;

        goto label4;

     label2:
        if i1 != 0 goto label3;

        $r26 = new java.lang.IllegalArgumentException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No virtual mailbox for: ");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r30);

        throw $r26;

     label3:
        $r10 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accountKey");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=? AND ");

        $r11 = newarray (java.lang.String)[1];

        $r12 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getVirtualMailboxAccountIdString(long)>(l0);

        $r11[0] = $r12;

        r3 = $r11;

     label4:
        $i2 = staticinvoke <com.android.email.provider.EmailProvider: int getVirtualMailboxType(long)>(l0);

        lookupswitch($i2)
        {
            case 0: goto label5;
            case 9: goto label6;
            case 10: goto label7;
            default: goto label8;
        };

     label5:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey IN (SELECT _id FROM Mailbox WHERE type=0)");

        goto label9;

     label6:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagFavorite=1");

        goto label9;

     label7:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagRead=0 AND mailboxKey NOT IN (SELECT _id FROM Mailbox WHERE type=6)");

        goto label9;

     label8:
        $r20 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No virtual mailbox for: ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label9:
        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ORDER BY timeStamp DESC");

        $r16 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r16, r3);

        return $r15;
    }

    private static java.lang.String genQueryConversation(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getMessageListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Message WHERE _id=?");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private static java.lang.String genQueryAccountMailboxes(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Mailbox WHERE accountKey=? AND type < 64 AND type != 8 AND parentKey < 0 ORDER BY ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CASE type WHEN 0 THEN 0 WHEN 3 THEN 1 WHEN 4 THEN 2 WHEN 5 THEN 3 WHEN 6 THEN 4 WHEN 7 THEN 5 ELSE 10 END ,displayName COLLATE LOCALIZED ASC");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String genQueryAccountAllMailboxes(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", case when hierarchicalName is null then displayName else hierarchicalName end as h_name");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Mailbox WHERE accountKey=? AND type < 64 AND type != 8 ORDER BY h_name");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.lang.String genQueryRecentMailboxes(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r4;

        r0 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Mailbox WHERE accountKey=? AND type < 64 AND type != 8 AND parentKey < 0 AND lastTouchedTime > 0 ORDER BY lastTouchedTime DESC");

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private int getFolderCapabilities(com.android.email.service.EmailServiceUtils$EmailServiceInfo, int, long)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r1;
        int i0, i2, i3;
        long l1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.email.service.EmailServiceUtils$EmailServiceInfo;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        if i0 != 8 goto label01;

        return 32;

     label01:
        i2 = 0;

        if i0 == 3 goto label02;

        i2 = 32;

     label02:
        if r1 == null goto label03;

        $z2 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLookback>;

        if $z2 == 0 goto label03;

        i2 = i2 | 512;

     label03:
        if i0 == 1 goto label04;

        if i0 == 6 goto label04;

        if i0 == 7 goto label04;

        if i0 != 0 goto label05;

     label04:
        i3 = i2 | 8;

        i2 = i3 | 16384;

     label05:
        if i0 != 6 goto label06;

        i2 = 18472;

     label06:
        $z0 = staticinvoke <com.android.email.provider.EmailProvider: boolean isVirtualMailbox(long)>(l1);

        if $z0 == 0 goto label07;

        i2 = i2 | 4096;

     label07:
        if r1 == null goto label08;

        $z1 = r1.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerMoveTo>;

        if $z1 != 0 goto label09;

     label08:
        i2 = i2 & -81929;

     label09:
        if i0 == 4 goto label10;

        if i0 != 5 goto label11;

     label10:
        i2 = i2 | 131072;

     label11:
        return i2;
    }

    private java.lang.String genQueryMailbox(java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, r8;
        java.lang.String r2, r6, r9, $r13, $r15, $r17, $r19, $r21;
        long l0, $l3, $l6;
        android.content.ContentValues r3, $r11;
        android.content.Context r4;
        com.android.emailcommon.provider.Mailbox r5;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r7;
        boolean z0, $z1, $z2;
        int i1, i2, $i4, $i5;
        com.android.emailcommon.service.SearchParams $r10, $r20;
        com.android.common.content.ProjectionMap $r12;
        java.lang.Integer $r16, $r22;
        byte[] $r18;
        byte $b7;
        java.lang.StringBuilder r23;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>(int)>(3);

        r3 = $r11;

        $r10 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        if $r10 == null goto label1;

        $r20 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        $l6 = $r20.<com.android.emailcommon.service.SearchParams: long mSearchMailboxId>;

        $b7 = l0 cmp $l6;

        if $b7 != 0 goto label1;

        $r21 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uiloadmore", l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("loadMoreUri", $r21);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(32);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("capabilities", $r22);

        goto label7;

     label1:
        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r5 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r4, l0);

        if r5 == null goto label7;

        $l3 = r5.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r6 = staticinvoke <com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)>(r4, $l3);

        r7 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r4, r6);

        if r7 == null goto label2;

        $z2 = r7.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLoadMore>;

        if $z2 == 0 goto label2;

        $r19 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uiloadmore", l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("loadMoreUri", $r19);

     label2:
        $i4 = r5.<com.android.emailcommon.provider.Mailbox: int mType>;

        $i5 = specialinvoke r0.<com.android.email.provider.EmailProvider: int getFolderCapabilities(com.android.email.service.EmailServiceUtils$EmailServiceInfo,int,long)>(r7, $i4, l0);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("capabilities", $r16);

        z0 = 0;

        if r1 != null goto label3;

        z0 = 1;

        goto label6;

     label3:
        r8 = r1;

        i1 = lengthof r8;

        i2 = 0;

     label4:
        if i2 >= i1 goto label6;

        r9 = r8[i2];

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r9, "persistentId");

        if $z1 == 0 goto label5;

        z0 = 1;

        goto label6;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        if z0 == 0 goto label7;

        $r15 = r5.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        $r18 = virtualinvoke $r15.<java.lang.String: byte[] getBytes()>();

        $r17 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r18, 11);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("persistentId", $r17);

     label7:
        $r12 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r23 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r12, r1, r3);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Mailbox WHERE _id=?");

        $r13 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private static java.lang.String getExternalUriString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r7;
        android.net.Uri $r2, $r6;
        android.net.Uri$Builder $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.email.provider.EmailProvider: android.net.Uri BASE_EXTERNAL_URI>;

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account", r1);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String getExternalUriStringEmail2(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r7;
        android.net.Uri $r2, $r6;
        android.net.Uri$Builder $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.email.provider.EmailProvider: android.net.Uri BASE_EXTERAL_URI2>;

        $r3 = virtualinvoke $r2.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("account", r1);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String getBits(int)
    {
        int i0, i1, $i2;
        java.lang.StringBuilder r0, $r1, $r3;
        java.lang.String $r2;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(" ");

        r0 = $r1;

        i1 = 0;

     label1:
        if i1 >= 32 goto label3;

        $i2 = i0 & 1;

        if $i2 == 0 goto label2;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        i1 = i1 + 1;

        i0 = i0 >> 1;

        goto label1;

     label3:
        $r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static int getCapabilities(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        com.android.emailcommon.provider.Account r1;
        java.lang.String r2, r3, $r5, $r7, $r10, $r11, $r13, $r14, $r16, $r18, $r21;
        int i1, i6, i7, i8;
        double d0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object[] $r6, $r15, $r19;
        java.lang.Long $r8, $r17, $r20;
        java.lang.Integer $r9;
        android.content.res.Resources $r12, r23;
        byte $b4;
        java.lang.NumberFormatException $r22;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, l0);

        if r1 != null goto label01;

        $r21 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r19 = newarray (java.lang.Object)[1];

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r19[0] = $r20;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r21, "Account %d not found during getCapabilities", $r19);

        return 0;

     label01:
        r2 = virtualinvoke r1.<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)>(r0);

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296971);

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r5, r2);

        if $z0 != 0 goto label02;

        $r13 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296970);

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r13, r2);

        if $z3 == 0 goto label03;

     label02:
        i1 = 1065057;

        goto label12;

     label03:
        $r14 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296972);

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r14, r2);

        if $z5 == 0 goto label04;

        i1 = 1064960;

        goto label12;

     label04:
        $r16 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296973);

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r16, r2);

        if $z4 == 0 goto label11;

        r3 = r1.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        d0 = 2.5;

        if r3 == null goto label08;

     label05:
        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

     label06:
        goto label08;

     label07:
        $r22 := @caughtexception;

     label08:
        $b4 = d0 cmpl 12.0;

        if $b4 < 0 goto label09;

        i1 = 1066081;

        goto label10;

     label09:
        i1 = 1065985;

     label10:
        goto label12;

     label11:
        $r18 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r15 = newarray (java.lang.Object)[1];

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r15[0] = $r17;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r18, "Unknown protocol for account %d", $r15);

        return 0;

     label12:
        $r7 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[4];

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[0] = $r8;

        $r6[1] = r2;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r6[2] = $r9;

        $r10 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getBits(int)>(i1);

        $r6[3] = $r10;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "getCapabilities() for %d (protocol %s): 0x%x %s", $r6);

        r23 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z1 = virtualinvoke r23.<android.content.res.Resources: boolean getBoolean(int)>(2131558416);

        if $z1 == 0 goto label13;

        i1 = i1 | 65536;

     label13:
        $r12 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131296657);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r11);

        if $z2 != 0 goto label14;

        i1 = i1 | 32768;

     label14:
        i6 = i1 | 2097152;

        i7 = i6 | 8388608;

        i8 = i7 | 128;

        return i8;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
    }

    private java.lang.String genQueryAccount(java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1;
        java.lang.String r2, $r10, $r14, $r18, $r20, $r21, $r22, $r24, $r25, $r27, $r29, $r30, $r31, $r36, $r38, $r39, $r40, $r42, $r43, r44;
        android.content.ContentValues r3, $r8;
        long l0, l1, l2;
        android.content.Context r4, $r9, $r12;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r5;
        com.google.common.collect.ImmutableSet r6;
        com.android.mail.preferences.MailPrefs r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29;
        com.android.common.content.ProjectionMap $r11;
        java.lang.Integer $r13, $r16, $r23, $r26, $r28, $r34, $r35, $r41;
        byte $b3, $b4, $b5, $b6, $b7, $b10;
        java.lang.Class $r19;
        int $i8, $i9, $i11, $i12;
        android.net.Uri $r37;
        java.lang.StringBuilder r45;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>()>();

        r3 = $r8;

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r5 = null;

        r6 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.lang.Object[])>(r1);

        $z1 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("capabilities");

        if $z1 == 0 goto label01;

        $i12 = staticinvoke <com.android.email.provider.EmailProvider: int getCapabilities(android.content.Context,long)>(r4, l0);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i12);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("capabilities", $r41);

     label01:
        $z0 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("accountSettingsIntentUri");

        if $z0 == 0 goto label02;

        $r42 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getExternalUriString(java.lang.String,java.lang.String)>("settings", r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("accountSettingsIntentUri", $r42);

     label02:
        $z3 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("composeUri");

        if $z3 == 0 goto label03;

        $r43 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getExternalUriStringEmail2(java.lang.String,java.lang.String)>("compose", r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("composeUri", $r43);

     label03:
        $z2 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("reauthenticationUri");

        if $z2 == 0 goto label04;

        $r37 = staticinvoke <com.android.email.activity.setup.HeadlessAccountSettingsLoader: android.net.Uri getIncomingSettingsUri(long)>(l0);

        $r36 = virtualinvoke $r37.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("reauthenticationUri", $r36);

     label04:
        $z5 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("mimeType");

        if $z5 == 0 goto label05;

        $r39 = <com.android.email.provider.EmailProvider: java.lang.String EMAIL_APP_MIME_TYPE>;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mimeType", $r39);

     label05:
        $z4 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("color");

        if $z4 == 0 goto label06;

        $r38 = <com.android.email.provider.EmailProvider: java.lang.String ACCOUNT_COLOR>;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("color", $r38);

     label06:
        $r9 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r7 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>($r9);

        $z7 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("confirm_delete");

        if $z7 == 0 goto label09;

        $z29 = virtualinvoke r7.<com.android.mail.preferences.MailPrefs: boolean getConfirmDelete()>();

        if $z29 == 0 goto label07;

        $r40 = "1";

        goto label08;

     label07:
        $r40 = "0";

     label08:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("confirm_delete", $r40);

     label09:
        $z6 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("confirm_send");

        if $z6 == 0 goto label12;

        $z28 = virtualinvoke r7.<com.android.mail.preferences.MailPrefs: boolean getConfirmSend()>();

        if $z28 == 0 goto label10;

        $r31 = "1";

        goto label11;

     label10:
        $r31 = "0";

     label11:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("confirm_send", $r31);

     label12:
        $z9 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("swipe");

        if $z9 == 0 goto label13;

        $i11 = virtualinvoke r7.<com.android.mail.preferences.MailPrefs: int getConversationListSwipeActionInteger(boolean)>(0);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("swipe", $r34);

     label13:
        $z8 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("conversation_list_icon");

        if $z8 == 0 goto label14;

        $i9 = staticinvoke <com.android.email.provider.EmailProvider: int getConversationListIcon(com.android.mail.preferences.MailPrefs)>(r7);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("conversation_list_icon", $r35);

     label14:
        $z10 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("auto_advance");

        if $z10 == 0 goto label15;

        $i8 = virtualinvoke r7.<com.android.mail.preferences.MailPrefs: int getAutoAdvanceMode()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i8);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("auto_advance", $r29);

     label15:
        l1 = staticinvoke <com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>(r4, l0, 0);

        $z12 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("default_inbox");

        if $z12 == 0 goto label16;

        $b10 = l1 cmp -1L;

        if $b10 == 0 goto label16;

        $r30 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uifolder", l1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("default_inbox", $r30);

        goto label17;

     label16:
        $r10 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uiinbox", l0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("default_inbox", $r10);

     label17:
        $z11 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("default_inbox_name");

        if $z11 == 0 goto label18;

        $b6 = l1 cmp -1L;

        if $b6 == 0 goto label18;

        $r27 = staticinvoke <com.android.emailcommon.provider.Mailbox: java.lang.String getDisplayName(android.content.Context,long)>(r4, l1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("default_inbox_name", $r27);

     label18:
        $z15 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("syncStatus");

        if $z15 == 0 goto label20;

        $b7 = l1 cmp -1L;

        if $b7 == 0 goto label19;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncStatus", $r26);

        goto label20;

     label19:
        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("syncStatus", $r28);

     label20:
        $z16 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("updateSettingsUri");

        if $z16 == 0 goto label21;

        $r24 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uiacctsettings", -1L);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("updateSettingsUri", $r24);

     label21:
        $z13 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("enableMessageTransforms");

        if $z13 == 0 goto label22;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("enableMessageTransforms", $r23);

     label22:
        $z14 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("importance_markers_enabled");

        if $z14 == 0 goto label23;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("importance_markers_enabled", "0");

     label23:
        $z19 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("show_chevrons_enabled");

        if $z19 == 0 goto label24;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("show_chevrons_enabled", "0");

     label24:
        $z20 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("setup_intent_uri");

        if $z20 == 0 goto label25;

        l2 = staticinvoke <com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>(r4, l0, 6);

        $b4 = l2 cmp -1L;

        if $b4 != 0 goto label25;

        r5 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfoForAccount(android.content.Context,long)>(r4, l0);

        if r5 == null goto label25;

        $z27 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean requiresSetup>;

        if $z27 == 0 goto label25;

        $r25 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getExternalUriString(java.lang.String,java.lang.String)>("setup", r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("setup_intent_uri", $r25);

     label25:
        $z17 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("type");

        if $z17 == 0 goto label29;

        if r5 != null goto label26;

        r5 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfoForAccount(android.content.Context,long)>(r4, l0);

     label26:
        if r5 == null goto label27;

        r44 = r5.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        goto label28;

     label27:
        r44 = "unknown";

     label28:
        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("type", r44);

     label29:
        $z18 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("move_to_inbox");

        if $z18 == 0 goto label30;

        $b5 = l1 cmp -1L;

        if $b5 == 0 goto label30;

        $r20 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uifolder", l1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("move_to_inbox", $r20);

     label30:
        $z23 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("syncAuthority");

        if $z23 == 0 goto label31;

        $r22 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("syncAuthority", $r22);

     label31:
        $z24 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("quickResponseUri");

        if $z24 == 0 goto label32;

        $r21 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("quickresponse/account", r2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("quickResponseUri", $r21);

     label32:
        $z21 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("settingsFragmentClass");

        if $z21 == 0 goto label33;

        $r19 = class "com/android/email/activity/setup/AccountSettingsFragment";

        $r18 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("settingsFragmentClass", $r18);

     label33:
        $z22 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("reply_behavior");

        if $z22 == 0 goto label36;

        $z26 = virtualinvoke r7.<com.android.mail.preferences.MailPrefs: boolean getDefaultReplyAll()>();

        if $z26 == 0 goto label34;

        $b3 = 1;

        goto label35;

     label34:
        $b3 = 0;

     label35:
        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b3);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("reply_behavior", $r16);

     label36:
        $z25 = interfaceinvoke r6.<java.util.Set: boolean contains(java.lang.Object)>("show_images");

        if $z25 == 0 goto label37;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("show_images", $r13);

     label37:
        $r12 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r11 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getAccountListMap(android.content.Context)>($r12);

        r45 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r11, r1, r3);

        virtualinvoke r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Account WHERE _id=?");

        $r14 = virtualinvoke r45.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private static java.lang.String combinedUriString(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r10;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private static java.lang.String combinedMailboxId(int)
    {
        int i0;
        long $l1, $l2;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        $l2 = 1152921504606846976L + $l1;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        return $r0;
    }

    public static long getVirtualMailboxId(long, int)
    {
        long l0, $l2, $l3, $l4;
        int i1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l3 = l0 << 32;

        $l2 = (long) i1;

        $l4 = $l3 + $l2;

        return $l4;
    }

    private static boolean isVirtualMailbox(long)
    {
        long l0;
        byte $b1;
        boolean $z0;

        l0 := @parameter0: long;

        $b1 = l0 cmp 4294967296L;

        if $b1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isCombinedMailbox(long)
    {
        long l0, $l1;
        byte $b2;
        boolean $z0;

        l0 := @parameter0: long;

        $l1 = l0 >> 32;

        $b2 = $l1 cmp 268435456L;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static long getVirtualMailboxAccountId(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = l0 >> 32;

        return $l1;
    }

    private static java.lang.String getVirtualMailboxAccountIdString(long)
    {
        long l0, $l1;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $l1 = l0 >> 32;

        $r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        return $r0;
    }

    private static int getVirtualMailboxType(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = l0 & 15L;

        $i2 = (int) $l1;

        return $i2;
    }

    private void addCombinedAccountRow(android.database.MatrixCursor)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.MatrixCursor r1;
        long l0, l1;
        com.google.common.collect.ImmutableMap$Builder r2, $r9;
        java.lang.String[] r3;
        int i2, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        com.android.mail.preferences.MailPrefs r4;
        java.lang.Object[] r5;
        android.content.Context $r6, $r8, $r10, $r68, $r85;
        com.android.email.Preferences $r7;
        byte $b3, $b9, $b12, $b18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        java.lang.Object $r11, $r12, $r18, $r20, $r23, $r28, $r30, $r33, $r38, $r41, $r43, $r46, $r49, $r53, $r56, $r62, $r67, $r69, $r76, $r77, $r79, $r82, $r87;
        java.lang.Integer $r13, $r14, $r16, $r17, $r24, $r25, $r26, $r27, $r29, $r31, $r32, $r34, $r35, $r37, $r40, $r44, $r47, $r51, $r52, $r55, $r61, $r65, $r66, $r75, $r80, $r81, $r83, $r84, $r88, $r91, $r93;
        java.lang.String $r15, $r19, $r21, $r22, $r36, $r39, $r42, $r45, $r48, $r50, $r54, $r57, $r58, $r63, $r64, $r70, $r72, $r73, $r78, $r86, $r89, $r92;
        java.lang.StringBuilder $r59, $r60, $r71, $r74;
        com.google.common.collect.ImmutableMap r94;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.MatrixCursor;

        $r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r7 = staticinvoke <com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>($r6);

        l0 = virtualinvoke $r7.<com.android.email.Preferences: long getLastUsedAccountId()>();

        $r8 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        l1 = staticinvoke <com.android.emailcommon.provider.Account: long getDefaultAccountId(android.content.Context,long)>($r8, l0);

        $b3 = l1 cmp -1L;

        if $b3 != 0 goto label01;

        return;

     label01:
        $r9 = new com.google.common.collect.ImmutableMap$Builder;

        specialinvoke $r9.<com.google.common.collect.ImmutableMap$Builder: void <init>()>();

        r2 = $r9;

        r3 = virtualinvoke r1.<android.database.MatrixCursor: java.lang.String[] getColumnNames()>();

        i2 = 0;

     label02:
        $i4 = lengthof r3;

        if i2 >= $i4 goto label03;

        $r92 = r3[i2];

        $r91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>($r92, $r91);

        i2 = i2 + 1;

        goto label02;

     label03:
        r94 = virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        $r10 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>($r10);

        $i5 = lengthof r3;

        r5 = newarray (java.lang.Object)[$i5];

        $z1 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("_id");

        if $z1 == 0 goto label04;

        $r82 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("_id");

        $r83 = (java.lang.Integer) $r82;

        $i31 = virtualinvoke $r83.<java.lang.Integer: int intValue()>();

        $r93 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r5[$i31] = $r93;

     label04:
        $z0 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("capabilities");

        if $z0 == 0 goto label05;

        $r79 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("capabilities");

        $r80 = (java.lang.Integer) $r79;

        $i30 = virtualinvoke $r80.<java.lang.Integer: int intValue()>();

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(540672);

        r5[$i30] = $r81;

     label05:
        $z3 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("folderListUri");

        if $z3 == 0 goto label06;

        $r87 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("folderListUri");

        $r88 = (java.lang.Integer) $r87;

        $i33 = virtualinvoke $r88.<java.lang.Integer: int intValue()>();

        $r89 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $r78 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uifolders", $r89);

        r5[$i33] = $r78;

     label06:
        $z2 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("name");

        if $z2 == 0 goto label07;

        $r69 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("name");

        $r84 = (java.lang.Integer) $r69;

        $i32 = virtualinvoke $r84.<java.lang.Integer: int intValue()>();

        $r85 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r86 = virtualinvoke $r85.<android.content.Context: java.lang.String getString(int)>(2131296726);

        r5[$i32] = $r86;

     label07:
        $z5 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("accountManagerName");

        if $z5 == 0 goto label08;

        $r67 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("accountManagerName");

        $r66 = (java.lang.Integer) $r67;

        $i28 = virtualinvoke $r66.<java.lang.Integer: int intValue()>();

        $r68 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r70 = virtualinvoke $r68.<android.content.Context: java.lang.String getString(int)>(2131296726);

        r5[$i28] = $r70;

     label08:
        $z4 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("accountId");

        if $z4 == 0 goto label09;

        $r77 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("accountId");

        $r65 = (java.lang.Integer) $r77;

        $i27 = virtualinvoke $r65.<java.lang.Integer: int intValue()>();

        r5[$i27] = "Account Id";

     label09:
        $z7 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("type");

        if $z7 == 0 goto label10;

        $r76 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("type");

        $r75 = (java.lang.Integer) $r76;

        $i29 = virtualinvoke $r75.<java.lang.Integer: int intValue()>();

        r5[$i29] = "unknown";

     label10:
        $z6 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("undoUri");

        if $z6 == 0 goto label11;

        $r62 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("undoUri");

        $r61 = (java.lang.Integer) $r62;

        $i25 = virtualinvoke $r61.<java.lang.Integer: int intValue()>();

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'content://");

        $r72 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r71 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uiundo\'");

        $r73 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        r5[$i25] = $r73;

     label11:
        $z10 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("accountUri");

        if $z10 == 0 goto label12;

        $r53 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("accountUri");

        $r52 = (java.lang.Integer) $r53;

        $i26 = virtualinvoke $r52.<java.lang.Integer: int intValue()>();

        $r64 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $r63 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uiaccount", $r64);

        r5[$i26] = $r63;

     label12:
        $z11 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("mimeType");

        if $z11 == 0 goto label13;

        $r56 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("mimeType");

        $r55 = (java.lang.Integer) $r56;

        $i24 = virtualinvoke $r55.<java.lang.Integer: int intValue()>();

        $r54 = <com.android.email.provider.EmailProvider: java.lang.String EMAIL_APP_MIME_TYPE>;

        r5[$i24] = $r54;

     label13:
        $z8 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("accountSettingsIntentUri");

        if $z8 == 0 goto label14;

        $r49 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("accountSettingsIntentUri");

        $r47 = (java.lang.Integer) $r49;

        $i22 = virtualinvoke $r47.<java.lang.Integer: int intValue()>();

        $r58 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $r57 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getExternalUriString(java.lang.String,java.lang.String)>("settings", $r58);

        r5[$i22] = $r57;

     label14:
        $z9 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("composeUri");

        if $z9 == 0 goto label15;

        $r43 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("composeUri");

        $r51 = (java.lang.Integer) $r43;

        $i23 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        $r50 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r48 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String getExternalUriStringEmail2(java.lang.String,java.lang.String)>("compose", $r50);

        r5[$i23] = $r48;

     label15:
        $z14 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("updateSettingsUri");

        if $z14 == 0 goto label16;

        $r46 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("updateSettingsUri");

        $r44 = (java.lang.Integer) $r46;

        $i19 = virtualinvoke $r44.<java.lang.Integer: int intValue()>();

        $r42 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String uiUriString(java.lang.String,long)>("uiacctsettings", -1L);

        r5[$i19] = $r42;

     label16:
        $z15 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("auto_advance");

        if $z15 == 0 goto label17;

        $r38 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("auto_advance");

        $r37 = (java.lang.Integer) $r38;

        $i20 = virtualinvoke $r37.<java.lang.Integer: int intValue()>();

        $i21 = virtualinvoke r4.<com.android.mail.preferences.MailPrefs: int getAutoAdvanceMode()>();

        $r45 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i21);

        r5[$i20] = $r45;

     label17:
        $z12 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("snap_headers");

        if $z12 == 0 goto label18;

        $r41 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("snap_headers");

        $r40 = (java.lang.Integer) $r41;

        $i17 = virtualinvoke $r40.<java.lang.Integer: int intValue()>();

        $r36 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        r5[$i17] = $r36;

     label18:
        $z13 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("reply_behavior");

        if $z13 == 0 goto label21;

        $r33 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("reply_behavior");

        $r32 = (java.lang.Integer) $r33;

        $i14 = virtualinvoke $r32.<java.lang.Integer: int intValue()>();

        $z25 = virtualinvoke r4.<com.android.mail.preferences.MailPrefs: boolean getDefaultReplyAll()>();

        if $z25 == 0 goto label19;

        $b18 = 1;

        goto label20;

     label19:
        $b18 = 0;

     label20:
        $r39 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b18);

        r5[$i14] = $r39;

     label21:
        $z18 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("conversation_list_icon");

        if $z18 == 0 goto label22;

        $r28 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("conversation_list_icon");

        $r34 = (java.lang.Integer) $r28;

        $i15 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        $i16 = staticinvoke <com.android.email.provider.EmailProvider: int getConversationListIcon(com.android.mail.preferences.MailPrefs)>(r4);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        r5[$i15] = $r35;

     label22:
        $z19 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("confirm_delete");

        if $z19 == 0 goto label25;

        $r30 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("confirm_delete");

        $r31 = (java.lang.Integer) $r30;

        $i13 = virtualinvoke $r31.<java.lang.Integer: int intValue()>();

        $z24 = virtualinvoke r4.<com.android.mail.preferences.MailPrefs: boolean getConfirmDelete()>();

        if $z24 == 0 goto label23;

        $b12 = 1;

        goto label24;

     label23:
        $b12 = 0;

     label24:
        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b12);

        r5[$i13] = $r27;

     label25:
        $z16 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("confirm_archive");

        if $z16 == 0 goto label26;

        $r23 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("confirm_archive");

        $r24 = (java.lang.Integer) $r23;

        $i10 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r5[$i10] = $r29;

     label26:
        $z17 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("confirm_send");

        if $z17 == 0 goto label29;

        $r20 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("confirm_send");

        $r25 = (java.lang.Integer) $r20;

        $i11 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        $z23 = virtualinvoke r4.<com.android.mail.preferences.MailPrefs: boolean getConfirmSend()>();

        if $z23 == 0 goto label27;

        $b9 = 1;

        goto label28;

     label27:
        $b9 = 0;

     label28:
        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b9);

        r5[$i11] = $r26;

     label29:
        $z21 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("default_inbox");

        if $z21 == 0 goto label30;

        $r18 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("default_inbox");

        $r17 = (java.lang.Integer) $r18;

        $i8 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r22 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedMailboxId(int)>(0);

        $r21 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uifolder", $r22);

        r5[$i8] = $r21;

     label30:
        $z22 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("move_to_inbox");

        if $z22 == 0 goto label31;

        $r12 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("move_to_inbox");

        $r16 = (java.lang.Integer) $r12;

        $i7 = virtualinvoke $r16.<java.lang.Integer: int intValue()>();

        $r15 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedMailboxId(int)>(0);

        $r19 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uifolder", $r15);

        r5[$i7] = $r19;

     label31:
        $z20 = interfaceinvoke r94.<java.util.Map: boolean containsKey(java.lang.Object)>("show_images");

        if $z20 == 0 goto label32;

        $r11 = interfaceinvoke r94.<java.util.Map: java.lang.Object get(java.lang.Object)>("show_images");

        $r14 = (java.lang.Integer) $r11;

        $i6 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r5[$i6] = $r13;

     label32:
        virtualinvoke r1.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r5);

        return;
    }

    private static int getConversationListIcon(com.android.mail.preferences.MailPrefs)
    {
        com.android.mail.preferences.MailPrefs r0;
        boolean $z0;
        byte $b0;

        r0 := @parameter0: com.android.mail.preferences.MailPrefs;

        $z0 = virtualinvoke r0.<com.android.mail.preferences.MailPrefs: boolean getShowSenderImages()>();

        if $z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        return $b0;
    }

    private android.database.Cursor getVirtualMailboxCursor(long, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        long l0, $l1;
        java.lang.String[] r1;
        com.android.mail.utils.MatrixCursorWithCachedColumns r2, $r3;
        int $i2;
        java.lang.Object[] $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String[];

        $r3 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r3.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r1, 1);

        r2 = $r3;

        $l1 = staticinvoke <com.android.email.provider.EmailProvider: long getVirtualMailboxAccountId(long)>(l0);

        $i2 = staticinvoke <com.android.email.provider.EmailProvider: int getVirtualMailboxType(long)>(l0);

        $r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>($l1, $i2, r1);

        virtualinvoke r2.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r4);

        return r2;
    }

    private java.lang.Object[] getVirtualMailboxRow(long, int, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l2;
        int i1, i3, i4, i5, $i6, $i7, $i11, i12;
        java.lang.String[] r1, r5, $r9, $r18, r50;
        java.lang.String r2, r4, $r12, $r15, $r22, $r35, $r39, $r46, $r47, r48, r49;
        java.lang.Object[] r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Integer $r6, $r7, $r8, $r19, $r38, $r40, $r41, $r45;
        byte $b8, $b9, $b10;
        java.lang.StringBuilder $r10, $r14, $r16, $r17, $r21, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37;
        android.net.Uri $r11, $r26, $r43;
        android.content.Context $r13, $r20, $r42;
        java.lang.Long $r44;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String[];

        l2 = staticinvoke <com.android.email.provider.EmailProvider: long getVirtualMailboxId(long,int)>(l0, i1);

        r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l2);

        $i7 = lengthof r1;

        r3 = newarray (java.lang.Object)[$i7];

        i3 = 0;

     label01:
        $i6 = lengthof r1;

        if i3 >= $i6 goto label18;

        r4 = r1[i3];

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("_id");

        if $z1 == 0 goto label02;

        $r44 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        r3[i3] = $r44;

        goto label17;

     label02:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("folderUri");

        if $z0 == 0 goto label03;

        $r47 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uifolder", r2);

        r3[i3] = $r47;

        goto label17;

     label03:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("name");

        if $z3 == 0 goto label04;

        $i11 = staticinvoke <com.android.email.provider.EmailProvider: int getFolderTypeFromMailboxType(int)>(i1);

        $r46 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String getFolderDisplayName(int,java.lang.String)>($i11, "");

        r3[i3] = $r46;

        goto label17;

     label04:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("hasChildren");

        if $z2 == 0 goto label05;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r3[i3] = $r45;

        goto label17;

     label05:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("capabilities");

        if $z5 == 0 goto label06;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4128);

        r3[i3] = $r40;

        goto label17;

     label06:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("conversationListUri");

        if $z4 == 0 goto label07;

        $r39 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedUriString(java.lang.String,java.lang.String)>("uimessages", r2);

        r3[i3] = $r39;

        goto label17;

     label07:
        $z7 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("unreadCount");

        if $z7 == 0 goto label14;

        if i1 != 0 goto label08;

        $b10 = l0 cmp 268435456L;

        if $b10 != 0 goto label08;

        $r42 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r43 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        i4 = staticinvoke <com.android.emailcommon.provider.EmailContent: int count(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r42, $r43, "mailboxKey IN (SELECT _id FROM Mailbox WHERE type=0) AND flagRead=0", null);

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        r3[i3] = $r38;

        goto label17;

     label08:
        if i1 != 10 goto label11;

        $b9 = l0 cmp 268435456L;

        if $b9 != 0 goto label09;

        r48 = "";

        r5 = null;

        goto label10;

     label09:
        r48 = "accountKey= ? AND ";

        $r18 = newarray (java.lang.String)[1];

        $r22 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r18[0] = $r22;

        r5 = $r18;

     label10:
        $r20 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r26 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r48);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagRead");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=0 AND ");

        $r30 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NOT IN (SELECT ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mailbox");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(6);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = staticinvoke <com.android.emailcommon.provider.EmailContent: int count(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r20, $r26, $r35, r5);

        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        r3[i3] = $r41;

        goto label17;

     label11:
        if i1 != 9 goto label17;

        $b8 = l0 cmp 268435456L;

        if $b8 != 0 goto label12;

        r49 = "";

        r50 = null;

        goto label13;

     label12:
        r49 = "accountKey= ? AND ";

        $r9 = newarray (java.lang.String)[1];

        $r12 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r9[0] = $r12;

        r50 = $r9;

     label13:
        $r13 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r11 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagFavorite");

        $r14 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=1");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        i12 = staticinvoke <com.android.emailcommon.provider.EmailContent: int count(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r13, $r11, $r15, r50);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        r3[i3] = $r19;

        goto label17;

     label14:
        $z6 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("iconResId");

        if $z6 == 0 goto label17;

        if i1 != 0 goto label15;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837617);

        r3[i3] = $r8;

        goto label17;

     label15:
        if i1 != 10 goto label16;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837624);

        r3[i3] = $r6;

        goto label17;

     label16:
        if i1 != 9 goto label17;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837622);

        r3[i3] = $r7;

     label17:
        i3 = i3 + 1;

        goto label01;

     label18:
        return r3;
    }

    private android.database.Cursor uiAccounts(java.lang.String[], boolean)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r12, $r18;
        boolean z0, z1, $z2, $z3;
        android.content.Context r2;
        android.database.sqlite.SQLiteDatabase r3;
        android.database.Cursor r4, r9;
        com.android.mail.utils.MatrixCursorWithExtra r5, $r14;
        android.os.Bundle r6, $r13;
        java.lang.Object[] r7;
        java.lang.String r8, $r17, $r21;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Throwable r10, r11, $r19, $r20;
        android.net.Uri $r15;
        android.content.ContentResolver $r16;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r2);

        $r12 = newarray (java.lang.String)[0];

        r4 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>("select _id from Account", $r12);

     label01:
        z1 = 0;

        if z0 != 0 goto label02;

        $i4 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        if $i4 <= 1 goto label02;

        z1 = 1;

     label02:
        $r13 = new android.os.Bundle;

        specialinvoke $r13.<android.os.Bundle: void <init>()>();

        r6 = $r13;

        virtualinvoke r6.<android.os.Bundle: void putInt(java.lang.String,int)>("accounts_loaded", 1);

        $r14 = new com.android.mail.utils.MatrixCursorWithExtra;

        $i1 = interfaceinvoke r4.<android.database.Cursor: int getCount()>();

        specialinvoke $r14.<com.android.mail.utils.MatrixCursorWithExtra: void <init>(java.lang.String[],int,android.os.Bundle)>(r1, $i1, r6);

        r5 = $r14;

        $i2 = lengthof r1;

        r7 = newarray (java.lang.Object)[$i2];

     label03:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label11;

        r8 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r17 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String genQueryAccount(java.lang.String[],java.lang.String)>(r1, r8);

        $r18 = newarray (java.lang.String)[1];

        $r18[0] = r8;

        r9 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r17, $r18);

     label04:
        $z3 = interfaceinvoke r9.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label07;

        i0 = 0;

     label05:
        $i3 = lengthof r1;

        if i0 >= $i3 goto label06;

        $r21 = interfaceinvoke r9.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r7[i0] = $r21;

        i0 = i0 + 1;

        goto label05;

     label06:
        virtualinvoke r5.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r7);

     label07:
        interfaceinvoke r9.<android.database.Cursor: void close()>();

        goto label10;

     label08:
        $r19 := @caughtexception;

        r10 = $r19;

     label09:
        interfaceinvoke r9.<android.database.Cursor: void close()>();

        throw r10;

     label10:
        goto label03;

     label11:
        if z1 == 0 goto label12;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void addCombinedAccountRow(android.database.MatrixCursor)>(r5);

     label12:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label15;

     label13:
        $r20 := @caughtexception;

        r11 = $r20;

     label14:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r11;

     label15:
        $r16 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r15 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        virtualinvoke r5.<android.database.MatrixCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r16, $r15);

        return r5;

        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private android.database.Cursor uiQuickResponseAccount(java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r10;
        java.lang.String r2, r6;
        android.content.Context r3;
        android.database.sqlite.SQLiteDatabase r4;
        java.lang.StringBuilder r5;
        com.android.common.content.ProjectionMap $r7;
        android.database.Cursor $r11;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r3);

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getQuickResponseMap()>();

        r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r7, r1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM QuickResponse");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE accountKey=?");

        r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r2;

        $r11 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r6, $r10);

        return $r11;
    }

    private android.database.Cursor uiQuickResponseId(java.lang.String[], java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r10;
        java.lang.String r2, r6;
        android.content.Context r3;
        android.database.sqlite.SQLiteDatabase r4;
        java.lang.StringBuilder r5;
        com.android.common.content.ProjectionMap $r7;
        android.database.Cursor $r11;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r3);

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getQuickResponseMap()>();

        r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r7, r1);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM QuickResponse");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE _id=?");

        r6 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r2;

        $r11 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r6, $r10);

        return $r11;
    }

    private android.database.Cursor uiQuickResponse(java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r8;
        android.content.Context r2;
        android.database.sqlite.SQLiteDatabase r3;
        java.lang.StringBuilder r4;
        java.lang.String r5;
        com.android.common.content.ProjectionMap $r6;
        android.database.Cursor $r9;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r2);

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getQuickResponseMap()>();

        r4 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r6, r1);

        virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM QuickResponse");

        r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.String)[0];

        $r9 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r5, $r8);

        return $r9;
    }

    private static java.lang.String genQueryAttachments(java.lang.String[], java.util.List)
    {
        java.lang.String[] r0;
        java.util.List r1;
        android.content.ContentValues r2, $r5;
        java.lang.StringBuilder r3, $r8, $r9, $r10, $r11, $r16, $r18, $r19;
        int i0, i1, $i2;
        java.lang.String r4, $r12;
        java.lang.Integer $r6;
        com.android.common.content.ProjectionMap $r7;
        boolean $z0;
        java.lang.Object $r17;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.util.List;

        $r5 = new android.content.ContentValues;

        specialinvoke $r5.<android.content.ContentValues: void <init>(int)>(1);

        r2 = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("supportsDownloadAgain", $r6);

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getAttachmentMap()>();

        r3 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r7, r0, r2);

        $r8 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attachment");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageKey");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =? ");

        if r1 == null goto label4;

        $z0 = interfaceinvoke r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        i0 = interfaceinvoke r1.<java.util.List: int size()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AND (");

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r17 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (java.lang.String) $r17;

        $r16 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mimeType");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIKE \'");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%\'");

        $i2 = i0 - 1;

        if i1 == $i2 goto label2;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OR ");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label4:
        $r12 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private java.lang.String genQueryAttachment(java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1;
        android.content.ContentValues r2, $r3;
        java.lang.String $r4, $r13;
        java.lang.Integer $r5;
        com.android.common.content.ProjectionMap $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>(int)>(2);

        r2 = $r3;

        $r4 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String createAttachmentUriColumnSQL()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("contentUri", $r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("supportsDownloadAgain", $r5);

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getAttachmentMap()>();

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r6, r1, r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attachment");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =? ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    private java.lang.String genQueryAttachmentByMessageIDAndCid(java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1;
        android.content.ContentValues r2, $r3;
        java.lang.String $r4, $r16;
        java.lang.Integer $r5;
        com.android.common.content.ProjectionMap $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>(int)>(2);

        r2 = $r3;

        $r4 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String createAttachmentUriColumnSQL()>();

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("contentUri", $r4);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("supportsDownloadAgain", $r5);

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getAttachmentMap()>();

        $r7 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[],android.content.ContentValues)>($r6, r1, r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attachment");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageKey");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =? ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("contentId");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" =? ");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    private static java.lang.String createAttachmentUriColumnSQL()
    {
        java.lang.String r0, r4, $r12;
        java.lang.Object[] $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 = <com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String ATTACHMENT_PROVIDER_URI_PREFIX>;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = r0;

        $r5[1] = "accountKey";

        $r5[2] = "_id";

        $r5[3] = "RAW";

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s/\' || %s || \'/\' || %s || \'/%s", $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@CASE WHEN contentUri IS NULL THEN \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WHEN contentUri IS NOT NULL THEN contentUri ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("END");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String genQuerySubfolders(java.lang.String[])
    {
        java.lang.String[] r0;
        java.lang.StringBuilder r1;
        com.android.common.content.ProjectionMap $r2;
        java.lang.String $r5;

        r0 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r1 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r2, r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM Mailbox WHERE parentKey =? ORDER BY ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CASE type WHEN 0 THEN 0 WHEN 3 THEN 1 WHEN 4 THEN 2 WHEN 5 THEN 3 WHEN 6 THEN 4 WHEN 7 THEN 5 ELSE 10 END ,displayName COLLATE LOCALIZED ASC");

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private android.database.Cursor uiFolders(android.net.Uri, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r6, $r12;
        java.lang.String[] r2, $r18, $r19;
        android.content.Context r3;
        android.database.sqlite.SQLiteDatabase r4;
        java.lang.String r5, $r16, $r17;
        android.database.Cursor r7, r8, r24;
        android.database.Cursor[] r9, $r22;
        java.util.List $r10;
        java.lang.Object $r11;
        android.net.Uri$Builder $r13, $r14;
        android.content.ContentResolver $r15, $r21;
        boolean $z0;
        long $l0;
        java.lang.Long $r20;
        int $i1;
        android.database.MergeCursor $r23;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r3);

        $r10 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(1);

        r5 = (java.lang.String) $r11;

        $r12 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        $r13 = virtualinvoke $r12.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r14 = virtualinvoke $r13.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>(r5);

        r6 = virtualinvoke $r14.<android.net.Uri$Builder: android.net.Uri build()>();

        r7 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiVirtualMailboxes(java.lang.String,java.lang.String[])>(r5, r2);

        $r15 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        interfaceinvoke r7.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r15, r6);

        $r16 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 == 0 goto label1;

        return r7;

     label1:
        $r18 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION>;

        $r17 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryAccountMailboxes(java.lang.String[])>($r18);

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = r5;

        r8 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r17, $r19);

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r5);

        $l0 = virtualinvoke $r20.<java.lang.Long: long longValue()>();

        r24 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getFolderListCursor(android.database.Cursor,long,java.lang.String[])>(r8, $l0, r2);

        $r21 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        interfaceinvoke r24.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r21, r6);

        $i1 = interfaceinvoke r24.<android.database.Cursor: int getCount()>();

        if $i1 <= 0 goto label2;

        $r22 = newarray (android.database.Cursor)[2];

        $r22[0] = r7;

        $r22[1] = r24;

        r9 = $r22;

        $r23 = new android.database.MergeCursor;

        specialinvoke $r23.<android.database.MergeCursor: void <init>(android.database.Cursor[])>(r9);

        return $r23;

     label2:
        return r24;
    }

    private android.database.Cursor uiVirtualMailboxes(java.lang.String, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String r1, $r5;
        java.lang.String[] r2;
        com.android.mail.utils.MatrixCursorWithCachedColumns r3, $r4;
        long l0;
        boolean $z0;
        java.lang.Object[] $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String[];

        $r4 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r4.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[])>(r2);

        r3 = $r4;

        $r5 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r8 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>(268435456L, 0, r2);

        virtualinvoke r3.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r8);

        $r9 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>(268435456L, 9, r2);

        virtualinvoke r3.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r9);

        $r10 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>(268435456L, 10, r2);

        virtualinvoke r3.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r10);

        goto label2;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        $r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>(l0, 9, r2);

        virtualinvoke r3.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r6);

        $r7 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.Object[] getVirtualMailboxRow(long,int,java.lang.String[])>(l0, 10, r2);

        virtualinvoke r3.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r7);

     label2:
        return r3;
    }

    private android.net.Uri[] defaultRecentFolders(java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String r1, $r10, $r27, $r30, $r34;
        android.net.Uri[] r2, r7, r37;
        android.database.sqlite.SQLiteDatabase r3;
        java.lang.String[] r4, $r11;
        java.lang.StringBuilder r5, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        android.database.Cursor r6;
        long l0;
        java.lang.Throwable r8, $r35;
        android.content.Context $r9;
        boolean $z0, $z1, $z2;
        com.android.common.content.ProjectionMap $r12;
        java.lang.Object[] $r29, $r32;
        int $i2, $i3, i5;
        android.net.Uri $r31, $r36;
        java.lang.Long $r33;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String;

        r2 = newarray (android.net.Uri)[0];

        $r9 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>($r9);

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label01;

        return r2;

     label01:
        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "_id";

        $r11[1] = "type";

        r4 = $r11;

        $r12 = staticinvoke <com.android.email.provider.EmailProvider: com.android.common.content.ProjectionMap getFolderListMap()>();

        r5 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.StringBuilder genSelect(com.android.common.content.ProjectionMap,java.lang.String[])>($r12, r4);

        $r14 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" FROM ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mailbox");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accountKey");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" AND ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" IN (");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(5);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(3);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(9);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r27 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r29 = newarray (java.lang.Object)[1];

        $r29[0] = r5;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r27, "defaultRecentFolders: Query is %s", $r29);

        $r30 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r30, null);

     label02:
        if r6 == null goto label03;

        $i2 = interfaceinvoke r6.<android.database.Cursor: int getCount()>();

        if $i2 <= 0 goto label03;

        $z1 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 != 0 goto label06;

     label03:
        r7 = r2;

     label04:
        if r6 == null goto label05;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label05:
        return r7;

     label06:
        $i3 = interfaceinvoke r6.<android.database.Cursor: int getCount()>();

        r37 = newarray (android.net.Uri)[$i3];

        i5 = 0;

     label07:
        l0 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

        $r31 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uifolder", l0);

        r37[i5] = $r31;

        $r34 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r32 = newarray (java.lang.Object)[2];

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r32[0] = $r33;

        $r36 = r37[i5];

        $r32[1] = $r36;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r34, "Default recent folder: %d, with uri %s", $r32);

        i5 = i5 + 1;

        $z2 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z2 != 0 goto label07;

     label08:
        if r6 == null goto label12;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

        goto label12;

     label09:
        $r35 := @caughtexception;

        r8 = $r35;

     label10:
        if r6 == null goto label11;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label11:
        throw r8;

     label12:
        return r37;

        catch java.lang.Throwable from label02 to label04 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static com.android.mail.providers.Folder getFolder(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        android.content.ContentResolver r1;
        android.database.Cursor r2;
        com.android.mail.providers.Folder r3, $r7;
        java.lang.Throwable r4, $r11;
        android.net.Uri $r5;
        java.lang.String[] $r6;
        boolean $z0;
        java.lang.Object[] $r8;
        java.lang.String $r9;
        java.lang.Long $r10;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uifolder", l0);

        $r6 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION>;

        r2 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r6, null, null, null);

        if r2 != null goto label1;

        $r9 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r8 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r8[0] = $r10;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r9, "Null folder cursor for mailboxId %d", $r8);

        return null;

     label1:
        r3 = null;

     label2:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $r7 = new com.android.mail.providers.Folder;

        specialinvoke $r7.<com.android.mail.providers.Folder: void <init>(android.database.Cursor)>(r2);

        r3 = $r7;

     label3:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r11 := @caughtexception;

        r4 = $r11;

     label5:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.database.Cursor getUiFolderCursorRowFromMailboxCursorRow(android.database.MatrixCursor, int, android.database.Cursor, int, int)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.MatrixCursor r1;
        int i0, i1, i2, i3, i4;
        android.database.Cursor r2;
        android.database.MatrixCursor$RowBuilder r3;
        java.lang.String $r4, $r6, $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.MatrixCursor;

        i0 := @parameter1: int;

        r2 := @parameter2: android.database.Cursor;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 = virtualinvoke r1.<android.database.MatrixCursor: android.database.MatrixCursor$RowBuilder newRow()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        if i1 != i3 goto label2;

        i4 = interfaceinvoke r2.<android.database.Cursor: int getInt(int)>(i2);

        $r6 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i3);

        $r7 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String getFolderDisplayName(int,java.lang.String)>(i4, $r6);

        virtualinvoke r3.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r7);

        goto label3;

     label2:
        $r4 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i3);

        virtualinvoke r3.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r4);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return r1;
    }

    private void remapFolderCursor(android.database.Cursor, android.database.MatrixCursor, long, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.database.Cursor r1;
        android.database.MatrixCursor r2;
        long l0, l10;
        java.lang.String[] r3;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i11, $i12, $i13, $i14;
        android.content.Context r4;
        java.lang.String r5, r8, $r9, $r14, $r19;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r6;
        android.database.MatrixCursor$RowBuilder r7;
        boolean z0, $z1, $z2;
        byte[] $r13;
        java.lang.Integer $r16;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: android.database.MatrixCursor;

        l0 := @parameter2: long;

        r3 := @parameter3: java.lang.String[];

        if r1 == null goto label01;

        $i12 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i12 != 0 goto label02;

     label01:
        return;

     label02:
        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("type");

        i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("name");

        i4 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("capabilities");

        i5 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("persistentId");

        i6 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("loadMoreUri");

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r5 = staticinvoke <com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)>(r4, l0);

        r6 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r4, r5);

     label03:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label14;

        r7 = virtualinvoke r2.<android.database.MatrixCursor: android.database.MatrixCursor$RowBuilder newRow()>();

        i8 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i2);

        i7 = 0;

     label04:
        $i13 = lengthof r3;

        if i7 >= $i13 goto label13;

        $r9 = r3[i7];

        i9 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>($r9);

        if i9 != -1 goto label05;

        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>(null);

        goto label12;

     label05:
        r8 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i9);

        if i3 != i9 goto label06;

        $r19 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String getFolderDisplayName(int,java.lang.String)>(i8, r8);

        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r19);

        z0 = 1;

        goto label11;

     label06:
        if i4 != i9 goto label07;

        l10 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(i1);

        i11 = staticinvoke <com.android.email.provider.EmailProvider: int getMailboxTypeFromFolderType(int)>(i8);

        $i14 = specialinvoke r0.<com.android.email.provider.EmailProvider: int getFolderCapabilities(com.android.email.service.EmailServiceUtils$EmailServiceInfo,int,long)>(r6, i11, l10);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i14);

        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r16);

        z0 = 1;

        goto label11;

     label07:
        if i5 != i9 goto label08;

        $r13 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        $r14 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r13, 11);

        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r14);

        z0 = 1;

        goto label11;

     label08:
        if i6 != i9 goto label10;

        if i8 == 8 goto label10;

        if r6 == null goto label09;

        $z2 = r6.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean offerLoadMore>;

        if $z2 != 0 goto label10;

     label09:
        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>(null);

        z0 = 1;

        goto label11;

     label10:
        z0 = 0;

     label11:
        if z0 != 0 goto label12;

        virtualinvoke r7.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>(r8);

     label12:
        i7 = i7 + 1;

        goto label04;

     label13:
        goto label03;

     label14:
        return;
    }

    private android.database.Cursor getFolderListCursor(android.database.Cursor, long, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.database.Cursor r1;
        long l0;
        java.lang.String[] r2;
        com.android.mail.utils.MatrixCursorWithCachedColumns r3, $r5;
        java.lang.Throwable r4, $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.database.Cursor;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String[];

        $r5 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r5.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[])>(r2);

        r3 = $r5;

        if r1 == null goto label5;

     label1:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void remapFolderCursor(android.database.Cursor,android.database.MatrixCursor,long,java.lang.String[])>(r1, r3, l0, r2);

     label2:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r4;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.lang.String getFolderDisplayName(int, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        int i0, i1;
        java.lang.String r1, $r3;
        android.content.Context $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        lookupswitch(i0)
        {
            case 2: goto label01;
            case 4: goto label03;
            case 8: goto label02;
            case 16: goto label05;
            case 32: goto label04;
            case 64: goto label06;
            case 128: goto label07;
            case 2048: goto label08;
            default: goto label09;
        };

     label01:
        i1 = 2131296707;

        goto label10;

     label02:
        i1 = 2131296708;

        goto label10;

     label03:
        i1 = 2131296709;

        goto label10;

     label04:
        i1 = 2131296710;

        goto label10;

     label05:
        i1 = 2131296711;

        goto label10;

     label06:
        i1 = 2131296712;

        goto label10;

     label07:
        i1 = 2131296713;

        goto label10;

     label08:
        i1 = 2131296714;

        goto label10;

     label09:
        return r1;

     label10:
        $r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getString(int)>(i1);

        return $r3;
    }

    private static int getFolderTypeFromMailboxType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label10;
            case 2: goto label10;
            case 3: goto label03;
            case 4: goto label02;
            case 5: goto label05;
            case 6: goto label04;
            case 7: goto label06;
            case 8: goto label09;
            case 9: goto label07;
            case 10: goto label08;
            default: goto label10;
        };

     label01:
        return 2;

     label02:
        return 8;

     label03:
        return 4;

     label04:
        return 32;

     label05:
        return 16;

     label06:
        return 64;

     label07:
        return 128;

     label08:
        return 2048;

     label09:
        return 4097;

     label10:
        return 1;
    }

    private static int getMailboxTypeFromFolderType(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 4: goto label04;
            case 8: goto label03;
            case 16: goto label06;
            case 32: goto label05;
            case 64: goto label07;
            case 128: goto label08;
            case 2048: goto label09;
            case 4097: goto label10;
            default: goto label11;
        };

     label01:
        return 1;

     label02:
        return 0;

     label03:
        return 4;

     label04:
        return 3;

     label05:
        return 6;

     label06:
        return 5;

     label07:
        return 7;

     label08:
        return 9;

     label09:
        return 10;

     label10:
        return 8;

     label11:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to map folder type: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;
    }

    private java.lang.String[] folderProjectionFromUiProjection(java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r3, $r4;
        com.google.common.collect.ImmutableSet r2;
        boolean $z0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.lang.Object[])>(r1);

        $z0 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>("unreadSenders");

        if $z0 == 0 goto label1;

        $r4 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION_WITH_UNREAD_SENDERS>;

        return $r4;

     label1:
        $r3 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION>;

        return $r3;
    }

    private android.database.Cursor uiQuery(int, android.net.Uri, java.lang.String[], boolean)
    {
        com.android.email.provider.EmailProvider r0;
        int i0, i2, i3, $i4, $i6;
        android.net.Uri r1, r8, $r25, $r38, $r44, $r53, $r59, $r63, $r69, $r77, $r80, $r83, $r91, $r100;
        java.lang.String[] r2, r18, $r31, $r35, $r39, $r47, $r50, $r52, $r57, $r71, $r73, $r81, $r90, $r97, $r101, r104, r106;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.content.Context r3, $r96;
        android.content.ContentResolver r4, $r29, $r30;
        android.database.sqlite.SQLiteDatabase r5;
        android.database.Cursor r6, r9, r10, r20, r105, r107, r108, r109;
        java.lang.String r7, r13, r14, r15, r17, $r27, $r28, $r36, $r40, $r48, $r49, $r51, $r56, $r61, $r62, $r72, $r85, $r88, $r98, $r102;
        long l1, $l5, $l8, $l11, l12, l13;
        com.android.mail.providers.Folder r11;
        com.android.email.provider.EmailProvider$MessageQuery r12;
        java.util.List r16, r19, $r23, $r45;
        java.lang.Throwable r21, $r99;
        java.lang.Object $r22, $r46;
        android.net.Uri$Builder $r24, $r26, $r37, $r41, $r42, $r43, $r54, $r55, $r58, $r60, $r65, $r66, $r68, $r70, $r75, $r76, $r78, $r79, $r82, $r84, $r92, $r93;
        android.database.Cursor[] $r32;
        android.database.MergeCursor $r33;
        java.lang.Long $r34, $r87;
        com.android.email.provider.EmailProvider$AttachmentsCursor $r64;
        com.android.mail.utils.MatrixCursorWithCachedColumns $r67, $r74, r110;
        byte $b7;
        java.lang.Object[] $r86, $r89;
        com.android.email.provider.EmailConversationCursor $r94;
        com.android.email.provider.EmailMessageCursor $r95;
        android.database.MatrixCursor $r103;

        r0 := @this: com.android.email.provider.EmailProvider;

        i0 := @parameter0: int;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r5 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r3);

        r6 = null;

        $r23 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r22 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(1);

        r7 = (java.lang.String) $r22;

        r8 = null;

        tableswitch(i0)
        {
            case 36865: goto label07;
            case 36866: goto label08;
            case 36867: goto label12;
            case 36868: goto label33;
            case 36869: goto label33;
            case 36870: goto label19;
            case 36871: goto label29;
            case 36872: goto label33;
            case 36873: goto label16;
            case 36874: goto label17;
            case 36875: goto label18;
            case 36876: goto label33;
            case 36877: goto label33;
            case 36878: goto label33;
            case 36879: goto label32;
            case 36880: goto label06;
            case 36881: goto label33;
            case 36882: goto label05;
            case 36883: goto label01;
            case 36884: goto label33;
            case 36885: goto label19;
            default: goto label33;
        };

     label01:
        $r25 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        $r26 = virtualinvoke $r25.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r24 = virtualinvoke $r26.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r24.<android.net.Uri$Builder: android.net.Uri build()>();

        r9 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiVirtualMailboxes(java.lang.String,java.lang.String[])>(r7, r2);

        $r28 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        if $z1 == 0 goto label02;

        r6 = r9;

        goto label33;

     label02:
        $r27 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryAccountAllMailboxes(java.lang.String[])>(r2);

        $r31 = newarray (java.lang.String)[1];

        $r31[0] = r7;

        r10 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r27, $r31);

        $r29 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        interfaceinvoke r10.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r29, r8);

        $r30 = virtualinvoke r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        interfaceinvoke r9.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r30, r8);

        $i4 = interfaceinvoke r10.<android.database.Cursor: int getCount()>();

        if $i4 <= 0 goto label03;

        $r33 = new android.database.MergeCursor;

        $r32 = newarray (android.database.Cursor)[2];

        $r32[0] = r10;

        $r32[1] = r9;

        specialinvoke $r33.<android.database.MergeCursor: void <init>(android.database.Cursor[])>($r32);

        r6 = $r33;

        goto label04;

     label03:
        r6 = r10;

     label04:
        goto label33;

     label05:
        r104 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String[] folderProjectionFromUiProjection(java.lang.String[])>(r2);

        $r36 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryAccountAllMailboxes(java.lang.String[])>(r104);

        $r35 = newarray (java.lang.String)[1];

        $r35[0] = r7;

        r105 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r36, $r35);

        $r34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r7);

        $l5 = virtualinvoke $r34.<java.lang.Long: long longValue()>();

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getFolderListCursor(android.database.Cursor,long,java.lang.String[])>(r105, $l5, r2);

        $r38 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        $r37 = virtualinvoke $r38.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r41 = virtualinvoke $r37.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r41.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label06:
        $r40 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryRecentMailboxes(java.lang.String[])>(r2);

        $r39 = newarray (java.lang.String)[1];

        $r39[0] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r40, $r39);

        $r44 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_RECENT_FOLDERS_NOTIFIER>;

        $r43 = virtualinvoke $r44.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r42 = virtualinvoke $r43.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r42.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label07:
        r106 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String[] folderProjectionFromUiProjection(java.lang.String[])>(r2);

        $r102 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQuerySubfolders(java.lang.String[])>(r106);

        $r101 = newarray (java.lang.String)[1];

        $r101[0] = r7;

        r107 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r102, $r101);

        $l11 = staticinvoke <com.android.emailcommon.provider.Mailbox: long getAccountIdForMailbox(android.content.Context,java.lang.String)>(r3, r7);

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getFolderListCursor(android.database.Cursor,long,java.lang.String[])>(r107, $l11, r2);

        l1 = staticinvoke <com.android.emailcommon.provider.Mailbox: long getAccountIdForMailbox(android.content.Context,java.lang.String)>(r3, r7);

        $r100 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        r8 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r100, l1);

        goto label33;

     label08:
        l12 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r7);

        r11 = staticinvoke <com.android.email.provider.EmailProvider: com.android.mail.providers.Folder getFolder(android.content.Context,long)>(r3, l12);

        if r11 != null goto label09;

        $r103 = new android.database.MatrixCursor;

        specialinvoke $r103.<android.database.MatrixCursor: void <init>(java.lang.String[])>(r2);

        return $r103;

     label09:
        $z5 = staticinvoke <com.android.email.provider.EmailProvider: boolean isVirtualMailbox(long)>(l12);

        if $z5 == 0 goto label10;

        r108 = staticinvoke <com.android.email.provider.EmailProvider: android.database.Cursor getVirtualMailboxMessagesCursor(android.database.sqlite.SQLiteDatabase,java.lang.String[],long,boolean)>(r5, r2, l12, z0);

        goto label11;

     label10:
        $r98 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryMailboxMessages(java.lang.String[],boolean)>(r2, z0);

        $r90 = newarray (java.lang.String)[1];

        $r90[0] = r7;

        r108 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r98, $r90);

     label11:
        $r91 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER>;

        $r92 = virtualinvoke $r91.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r93 = virtualinvoke $r92.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r93.<android.net.Uri$Builder: android.net.Uri build()>();

        $r94 = new com.android.email.provider.EmailConversationCursor;

        specialinvoke $r94.<com.android.email.provider.EmailConversationCursor: void <init>(android.content.Context,android.database.Cursor,com.android.mail.providers.Folder,long)>(r3, r108, r11, l12);

        r6 = $r94;

        goto label33;

     label12:
        r12 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.email.provider.EmailProvider$MessageQuery genQueryViewMessage(java.lang.String[],java.lang.String)>(r2, r7);

        r14 = r12.<com.android.email.provider.EmailProvider$MessageQuery: java.lang.String query>;

        r13 = r12.<com.android.email.provider.EmailProvider$MessageQuery: java.lang.String attachmentJson>;

        if r13 == null goto label13;

        $r97 = newarray (java.lang.String)[2];

        $r97[0] = r13;

        $r97[1] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r14, $r97);

        goto label14;

     label13:
        $r81 = newarray (java.lang.String)[1];

        $r81[0] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>(r14, $r81);

     label14:
        if r6 == null goto label15;

        $r95 = new com.android.email.provider.EmailMessageCursor;

        $r96 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        specialinvoke $r95.<com.android.email.provider.EmailMessageCursor: void <init>(android.content.Context,android.database.Cursor,java.lang.String,java.lang.String)>($r96, r6, "bodyHtml", "bodyText");

        r6 = $r95;

     label15:
        $r83 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER>;

        $r82 = virtualinvoke $r83.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r84 = virtualinvoke $r82.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r84.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label16:
        r16 = virtualinvoke r1.<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>("contentType");

        $r56 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryAttachments(java.lang.String[],java.util.List)>(r2, r16);

        $r57 = newarray (java.lang.String)[1];

        $r57[0] = r7;

        r109 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r56, $r57);

        $r64 = new com.android.email.provider.EmailProvider$AttachmentsCursor;

        specialinvoke $r64.<com.android.email.provider.EmailProvider$AttachmentsCursor: void <init>(android.content.Context,android.database.Cursor)>(r3, r109);

        r6 = $r64;

        $r63 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENTS_NOTIFIER>;

        $r66 = virtualinvoke $r63.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r65 = virtualinvoke $r66.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r65.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label17:
        $r51 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String genQueryAttachment(java.lang.String[])>(r2);

        $r52 = newarray (java.lang.String)[1];

        $r52[0] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r51, $r52);

        $r59 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENT_NOTIFIER>;

        $r58 = virtualinvoke $r59.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r60 = virtualinvoke $r58.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r60.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label18:
        $r45 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r46 = interfaceinvoke $r45.<java.util.List: java.lang.Object get(int)>(2);

        r15 = (java.lang.String) $r46;

        $r47 = newarray (java.lang.String)[2];

        $r47[0] = r7;

        $r47[1] = r15;

        r18 = $r47;

        $r48 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String genQueryAttachmentByMessageIDAndCid(java.lang.String[])>(r2);

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r48, r18);

        $r53 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ATTACHMENTS_NOTIFIER>;

        $r54 = virtualinvoke $r53.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r55 = virtualinvoke $r54.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r55.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label19:
        if i0 != 36885 goto label21;

        $l8 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r7);

        l13 = staticinvoke <com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>(r3, $l8, 0);

        $b7 = l13 cmp -1L;

        if $b7 != 0 goto label20;

        $r88 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r89 = newarray (java.lang.Object)[1];

        $r89[0] = r7;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r88, "No inbox found for account %s", $r89);

        return null;

     label20:
        $r85 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r86 = newarray (java.lang.Object)[1];

        $r87 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l13);

        $r86[0] = $r87;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r85, "Found inbox id %d", $r86);

        goto label22;

     label21:
        l13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r7);

     label22:
        r17 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l13);

        $z3 = staticinvoke <com.android.email.provider.EmailProvider: boolean isVirtualMailbox(long)>(l13);

        if $z3 == 0 goto label23;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getVirtualMailboxCursor(long,java.lang.String[])>(l13, r2);

        $r80 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDER_NOTIFIER>;

        $r79 = virtualinvoke $r80.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r78 = virtualinvoke $r79.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r17);

        r8 = virtualinvoke $r78.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label23:
        $r72 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String genQueryMailbox(java.lang.String[],java.lang.String)>(r2, r17);

        $r73 = newarray (java.lang.String)[1];

        $r73[0] = r17;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r72, $r73);

        r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

        i2 = interfaceinvoke r19.<java.util.List: int indexOf(java.lang.Object)>("name");

        i3 = interfaceinvoke r19.<java.util.List: int indexOf(java.lang.Object)>("type");

        $z4 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z4 == 0 goto label28;

        r20 = r6;

     label24:
        $r74 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r74.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[])>(r2);

        $i6 = lengthof r2;

        r6 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor getUiFolderCursorRowFromMailboxCursorRow(android.database.MatrixCursor,int,android.database.Cursor,int,int)>($r74, $i6, r6, i2, i3);

     label25:
        interfaceinvoke r20.<android.database.Cursor: void close()>();

        goto label28;

     label26:
        $r99 := @caughtexception;

        r21 = $r99;

     label27:
        interfaceinvoke r20.<android.database.Cursor: void close()>();

        throw r21;

     label28:
        $r77 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDER_NOTIFIER>;

        $r76 = virtualinvoke $r77.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r75 = virtualinvoke $r76.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r17);

        r8 = virtualinvoke $r75.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label29:
        $r61 = <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING>;

        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r61);

        if $z2 == 0 goto label30;

        $r67 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r67.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r2, 1);

        r110 = $r67;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void addCombinedAccountRow(android.database.MatrixCursor)>(r110);

        r6 = r110;

        goto label31;

     label30:
        $r62 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.lang.String genQueryAccount(java.lang.String[],java.lang.String)>(r2, r7);

        $r71 = newarray (java.lang.String)[1];

        $r71[0] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r62, $r71);

     label31:
        $r69 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER>;

        $r70 = virtualinvoke $r69.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r68 = virtualinvoke $r70.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r7);

        r8 = virtualinvoke $r68.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label33;

     label32:
        $r49 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String genQueryConversation(java.lang.String[])>(r2);

        $r50 = newarray (java.lang.String)[1];

        $r50[0] = r7;

        r6 = virtualinvoke r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>($r49, $r50);

     label33:
        if r8 == null goto label34;

        interfaceinvoke r6.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>(r4, r8);

     label34:
        return r6;

        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.lang.Throwable from label26 to label27 with label26;
    }

    private static com.android.emailcommon.provider.EmailContent$Attachment convertUiAttachmentToAttachment(com.android.mail.providers.Attachment, java.lang.String, long)
    {
        com.android.mail.providers.Attachment r0;
        java.lang.String r1, $r6, $r7, $r8, $r12, $r13, $r18;
        long l0, $l2;
        com.android.emailcommon.provider.EmailContent$Attachment r2, $r4;
        android.net.Uri$Builder r3;
        android.net.Uri $r5, $r15, $r16;
        boolean $z0;
        int $i1;
        java.lang.StringBuilder $r9, $r10, $r11, $r14;

        r0 := @parameter0: com.android.mail.providers.Attachment;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r4 = new com.android.emailcommon.provider.EmailContent$Attachment;

        specialinvoke $r4.<com.android.emailcommon.provider.EmailContent$Attachment: void <init>()>();

        r2 = $r4;

        $r5 = r0.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        $r6 = virtualinvoke $r5.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r2.<com.android.emailcommon.provider.EmailContent$Attachment: void setContentUri(java.lang.String)>($r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r12 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/attachment/cachedFile");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r13);

        r3 = virtualinvoke $r15.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("filePath", r1);

        $r16 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        $r18 = virtualinvoke $r16.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r2.<com.android.emailcommon.provider.EmailContent$Attachment: void setCachedFileUri(java.lang.String)>($r18);

     label1:
        r2.<com.android.emailcommon.provider.EmailContent$Attachment: long mAccountKey> = l0;

        $r7 = virtualinvoke r0.<com.android.mail.providers.Attachment: java.lang.String getName()>();

        r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName> = $r7;

        $r8 = virtualinvoke r0.<com.android.mail.providers.Attachment: java.lang.String getContentType()>();

        r2.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType> = $r8;

        $i1 = r0.<com.android.mail.providers.Attachment: int size>;

        $l2 = (long) $i1;

        r2.<com.android.emailcommon.provider.EmailContent$Attachment: long mSize> = $l2;

        return r2;
    }

    private com.android.emailcommon.provider.Mailbox createMailbox(long, int)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        int i1;
        android.content.Context r1;
        com.android.emailcommon.provider.Mailbox r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox newSystemMailbox(android.content.Context,long,int)>(r1, l0, i1);

        lookupswitch(i1)
        {
            case 3: goto label1;
            case 5: goto label2;
            default: goto label3;
        };

     label1:
        r2.<com.android.emailcommon.provider.Mailbox: long mLastTouchedTime> = 2L;

        goto label3;

     label2:
        r2.<com.android.emailcommon.provider.Mailbox: long mLastTouchedTime> = 1L;

     label3:
        virtualinvoke r2.<com.android.emailcommon.provider.Mailbox: android.net.Uri save(android.content.Context)>(r1);

        return r2;
    }

    private com.android.emailcommon.provider.Mailbox getMailboxByAccountIdAndType(long, int)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        int i1;
        com.android.emailcommon.provider.Mailbox r1;
        android.content.Context $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r1 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>($r2, l0, i1);

        if r1 != null goto label1;

        r1 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox createMailbox(long,int)>(l0, i1);

     label1:
        return r1;
    }

    private android.net.Uri uiSaveMessage(com.android.emailcommon.provider.EmailContent$Message, com.android.emailcommon.provider.Mailbox, android.os.Bundle)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.provider.EmailContent$Message r1, r64;
        com.android.emailcommon.provider.Mailbox r2;
        android.os.Bundle r3, r10;
        android.content.Context r4;
        com.android.emailcommon.provider.Account r5;
        java.lang.String r6, r7, r8, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r37, $r49, $r50, $r51, $r52, $r58, r61;
        int i0, i1, i2, $i6, $i12, $i17, $i18, $i19, $i20, $i21, $i22, $i24, i27;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z10;
        java.util.Iterator r11;
        android.net.Uri r12, $r28, $r29, $r31, $r43, $r46, $r47, $r56;
        com.android.mail.providers.Attachment r13;
        long l3, $l4, $l5, $l7, $l8, $l9, $l10, $l11, $l13, $l15, $l23, l26;
        android.os.Parcel r14;
        com.android.emailcommon.provider.EmailContent$Attachment r15, r16, $r45, $r53;
        java.util.ArrayList $r25, $r30, r60, r62;
        android.os.Parcelable $r26;
        android.content.ContentProviderOperation $r32, $r39;
        android.content.ContentProviderOperation$Builder $r33, $r35, $r38;
        java.lang.String[] $r34;
        android.content.ContentValues $r40, r65;
        java.lang.Integer $r41;
        android.content.ContentResolver $r42;
        byte $b14;
        java.lang.Object $r44;
        android.content.OperationApplicationException $r54;
        java.lang.Object[] $r55;
        java.lang.NumberFormatException $r57;
        java.util.List r59;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.emailcommon.provider.EmailContent$Message;

        r2 := @parameter1: com.android.emailcommon.provider.Mailbox;

        r3 := @parameter2: android.os.Bundle;

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $l4 = r2.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r5 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r4, $l4);

        if r5 != null goto label01;

        return null;

     label01:
        r6 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("customFrom");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 != 0 goto label02;

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mFrom> = r6;

        goto label03;

     label02:
        $r17 = virtualinvoke r5.<com.android.emailcommon.provider.Account: java.lang.String getEmailAddress()>();

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mFrom> = $r17;

     label03:
        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1.<com.android.emailcommon.provider.EmailContent$Message: long mTimeStamp> = $l5;

        $r19 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("toAddresses");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mTo> = $r19;

        $r18 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("ccAddresses");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mCc> = $r18;

        $r22 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("bccAddresses");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mBcc> = $r22;

        $r23 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("subject");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mSubject> = $r23;

        $r20 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("bodyText");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mText> = $r20;

        $r21 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("bodyHtml");

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mHtml> = $r21;

        $l7 = r2.<com.android.emailcommon.provider.Mailbox: long mId>;

        r1.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey> = $l7;

        $l8 = r2.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r1.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey> = $l8;

        $r24 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mTo>;

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mDisplayName> = $r24;

        r1.<com.android.emailcommon.provider.EmailContent$Message: int mFlagLoaded> = 1;

        r1.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead> = 1;

        r1.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagSeen> = 1;

        $i6 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("quotedTextStartPos", 0);

        r1.<com.android.emailcommon.provider.EmailContent$Message: int mQuotedTextStartPos> = $i6;

        i0 = 0;

        i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("draftType");

        tableswitch(i1)
        {
            case 1: goto label07;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label04;
            default: goto label08;
        };

     label04:
        i0 = i0 | 2;

        goto label08;

     label05:
        i0 = i0 | 2097152;

     label06:
        i0 = i0 | 1;

        goto label08;

     label07:
        i0 = i0 | 1048576;

     label08:
        i2 = 0;

        $z3 = virtualinvoke r3.<android.os.Bundle: boolean containsKey(java.lang.String)>("quotedTextStartPos");

        if $z3 == 0 goto label09;

        i2 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("quotedTextStartPos");

        $i22 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("appendRefMessageContent");

        if $i22 == 0 goto label09;

        i2 = i2 | 16777216;

     label09:
        $z2 = virtualinvoke r3.<android.os.Bundle: boolean containsKey(java.lang.String)>("appendRefMessageContent");

        if $z2 != 0 goto label10;

        i0 = i0 | 131072;

     label10:
        r1.<com.android.emailcommon.provider.EmailContent$Message: int mDraftInfo> = i2;

        r1.<com.android.emailcommon.provider.EmailContent$Message: int mFlags> = i0;

        r7 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("refMessageId");

        if r7 == null goto label14;

        $i24 = r1.<com.android.emailcommon.provider.EmailContent$Message: int mQuotedTextStartPos>;

        if $i24 < 0 goto label14;

        $r56 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r7);

        r8 = virtualinvoke $r56.<android.net.Uri: java.lang.String getLastPathSegment()>();

     label11:
        $l23 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r8);

        r1.<com.android.emailcommon.provider.EmailContent$Message: long mSourceKey> = $l23;

     label12:
        goto label14;

     label13:
        $r57 := @caughtexception;

     label14:
        $r27 = virtualinvoke r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>("attachments");

        r59 = staticinvoke <com.android.mail.providers.Attachment: java.util.List fromJSONArray(java.lang.String)>($r27);

        $r25 = new java.util.ArrayList;

        specialinvoke $r25.<java.util.ArrayList: void <init>()>();

        r60 = $r25;

        z0 = 0;

        $r26 = virtualinvoke r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("opened_fds");

        r10 = (android.os.Bundle) $r26;

        r11 = interfaceinvoke r59.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label20;

        $r44 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (com.android.mail.providers.Attachment) $r44;

        r12 = r13.<com.android.mail.providers.Attachment: android.net.Uri uri>;

        if r12 == null goto label18;

        $r50 = virtualinvoke r12.<android.net.Uri: java.lang.String getAuthority()>();

        $r51 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $z10 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r51);

        if $z10 == 0 goto label18;

        $r49 = virtualinvoke r12.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r49);

        r15 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment restoreAttachmentWithId(android.content.Context,long)>(r4, l3);

        if r15 == null goto label17;

        r14 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r15.<com.android.emailcommon.provider.EmailContent$Attachment: void writeToParcel(android.os.Parcel,int)>(r14, 0);

        virtualinvoke r14.<android.os.Parcel: void setDataPosition(int)>(0);

        $r53 = new com.android.emailcommon.provider.EmailContent$Attachment;

        specialinvoke $r53.<com.android.emailcommon.provider.EmailContent$Attachment: void <init>(android.os.Parcel)>(r14);

        r16 = $r53;

        virtualinvoke r14.<android.os.Parcel: void recycle()>();

        r16.<com.android.emailcommon.provider.EmailContent$Attachment: long mMessageKey> = 0L;

        $i21 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i21 != 4 goto label16;

        $r52 = virtualinvoke r15.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getContentUri()>();

        if $r52 != null goto label16;

        $i19 = r5.<com.android.emailcommon.provider.Account: int mFlags>;

        $i20 = $i19 & 128;

        if $i20 != 0 goto label16;

        $i17 = r16.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i18 = $i17 | 4;

        r16.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags> = $i18;

        z0 = 1;

     label16:
        virtualinvoke r60.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

     label17:
        goto label19;

     label18:
        r61 = staticinvoke <com.android.mail.utils.AttachmentUtils: java.lang.String cacheAttachmentUri(android.content.Context,com.android.mail.providers.Attachment,android.os.Bundle)>(r4, r13, r10);

        $l15 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey>;

        $r45 = staticinvoke <com.android.email.provider.EmailProvider: com.android.emailcommon.provider.EmailContent$Attachment convertUiAttachmentToAttachment(com.android.mail.providers.Attachment,java.lang.String,long)>(r13, r61, $l15);

        virtualinvoke r60.<java.util.ArrayList: boolean add(java.lang.Object)>($r45);

     label19:
        goto label15;

     label20:
        $z5 = virtualinvoke r60.<java.util.ArrayList: boolean isEmpty()>();

        if $z5 != 0 goto label21;

        r1.<com.android.emailcommon.provider.EmailContent$Message: java.util.ArrayList mAttachments> = r60;

        r1.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagAttachment> = 1;

        if z0 == 0 goto label21;

        staticinvoke <com.android.emailcommon.utility.Utility: void showToast(android.content.Context,int)>(r4, 2131296730);

     label21:
        $z4 = virtualinvoke r1.<com.android.emailcommon.provider.EmailContent$Message: boolean isSaved()>();

        if $z4 != 0 goto label22;

        virtualinvoke r1.<com.android.emailcommon.provider.EmailContent$Message: android.net.Uri save(android.content.Context)>(r4);

        goto label26;

     label22:
        $r30 = new java.util.ArrayList;

        specialinvoke $r30.<java.util.ArrayList: void <init>()>();

        r62 = $r30;

        $r29 = <com.android.emailcommon.provider.EmailContent$Attachment: android.net.Uri MESSAGE_ID_URI>;

        $l9 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r28 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r29, $l9);

        $r33 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r28);

        $r32 = virtualinvoke $r33.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r62.<java.util.ArrayList: boolean add(java.lang.Object)>($r32);

        $r31 = <com.android.emailcommon.provider.EmailContent$Body: android.net.Uri CONTENT_URI>;

        $r35 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r31);

        $r34 = newarray (java.lang.String)[1];

        $l10 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r37 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l10);

        $r34[0] = $r37;

        $r38 = virtualinvoke $r35.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>("messageKey=?", $r34);

        $r39 = virtualinvoke $r38.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r62.<java.util.ArrayList: boolean add(java.lang.Object)>($r39);

        virtualinvoke r1.<com.android.emailcommon.provider.EmailContent$Message: void addSaveOps(java.util.ArrayList)>(r62);

     label23:
        virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>(r62);

     label24:
        goto label26;

     label25:
        $r54 := @caughtexception;

        $r58 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r55 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r58, "applyBatch exception", $r55);

     label26:
        $l11 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIMessage(long)>($l11);

        $i12 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i12 != 4 goto label30;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void startSync(com.android.emailcommon.provider.Mailbox,int)>(r2, 0);

        l26 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mSourceKey>;

        $b14 = l26 cmp 0L;

        if $b14 == 0 goto label30;

        r64 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>(r4, l26);

        if r64 == null goto label30;

        $r40 = new android.content.ContentValues;

        specialinvoke $r40.<android.content.ContentValues: void <init>()>();

        r65 = $r40;

        i27 = r64.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        tableswitch(i1)
        {
            case 2: goto label28;
            case 3: goto label28;
            case 4: goto label27;
            default: goto label29;
        };

     label27:
        i27 = i27 | 524288;

        goto label29;

     label28:
        i27 = i27 | 262144;

     label29:
        $r41 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);

        virtualinvoke r65.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r41);

        $r42 = virtualinvoke r4.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r47 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r46 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r47, l26);

        virtualinvoke $r42.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r46, r65, null, null);

     label30:
        $l13 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r43 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uimessage", $l13);

        return $r43;

        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch android.content.OperationApplicationException from label23 to label24 with label25;
    }

    private android.net.Uri uiSaveDraftMessage(long, android.os.Bundle)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l1;
        android.os.Bundle r1;
        com.android.emailcommon.provider.Mailbox r2;
        com.android.emailcommon.provider.EmailContent$Message r3, $r5;
        boolean $z0;
        android.net.Uri $r4;
        android.content.Context $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getMailboxByAccountIdAndType(long,int)>(l0, 3);

        if r2 != null goto label1;

        return null;

     label1:
        r3 = null;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("_id");

        if $z0 == 0 goto label2;

        l1 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("_id");

        $r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>($r6, l1);

     label2:
        if r3 != null goto label3;

        $r5 = new com.android.emailcommon.provider.EmailContent$Message;

        specialinvoke $r5.<com.android.emailcommon.provider.EmailContent$Message: void <init>()>();

        r3 = $r5;

     label3:
        $r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri uiSaveMessage(com.android.emailcommon.provider.EmailContent$Message,com.android.emailcommon.provider.Mailbox,android.os.Bundle)>(r3, r2, r1);

        return $r4;
    }

    private android.net.Uri uiSendDraftMessage(long, android.os.Bundle)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l1;
        android.os.Bundle r1;
        com.android.emailcommon.provider.EmailContent$Message r2, $r5;
        com.android.emailcommon.provider.Mailbox r3, r8;
        android.net.Uri r4, $r6;
        boolean $z0;
        android.content.Context $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Bundle;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("_id");

        if $z0 == 0 goto label1;

        l1 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("_id");

        $r7 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>($r7, l1);

        goto label2;

     label1:
        $r5 = new com.android.emailcommon.provider.EmailContent$Message;

        specialinvoke $r5.<com.android.emailcommon.provider.EmailContent$Message: void <init>()>();

        r2 = $r5;

     label2:
        if r2 != null goto label3;

        return null;

     label3:
        r8 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getMailboxByAccountIdAndType(long,int)>(l0, 4);

        if r8 != null goto label4;

        return null;

     label4:
        r3 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getMailboxByAccountIdAndType(long,int)>(l0, 5);

        if r3 != null goto label5;

        return null;

     label5:
        r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri uiSaveMessage(com.android.emailcommon.provider.EmailContent$Message,com.android.emailcommon.provider.Mailbox,android.os.Bundle)>(r2, r8, r1);

        $r6 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r6, null);

        return r4;
    }

    private static void putIntegerLongOrBoolean(android.content.ContentValues, java.lang.String, java.lang.Object)
    {
        android.content.ContentValues r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.Integer r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        byte $b0;
        java.lang.Boolean r5;
        java.lang.Long r6;

        r0 := @parameter0: android.content.ContentValues;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        $z0 = r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        r3 = (java.lang.Integer) r2;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r1, r3);

        goto label5;

     label1:
        $z1 = r2 instanceof java.lang.Boolean;

        if $z1 == 0 goto label4;

        r5 = (java.lang.Boolean) r2;

        $z3 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>(r1, $r4);

        goto label5;

     label4:
        $z2 = r2 instanceof java.lang.Long;

        if $z2 == 0 goto label5;

        r6 = (java.lang.Long) r2;

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>(r1, r6);

     label5:
        return;
    }

    private int updateTimestamp(android.content.Context, java.lang.String, android.net.Uri[])
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        java.lang.String r2, $r12, $r16;
        android.net.Uri[] r3, r6;
        int i0, i2, i3, $i6;
        long l1;
        android.content.ContentResolver r4;
        android.content.ContentValues r5, $r8;
        android.net.Uri r7, $r10, r17;
        android.net.Uri$Builder $r9, $r11;
        java.lang.Object[] $r13, $r14;
        java.lang.Long $r15;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.net.Uri[];

        i0 = 0;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>(int)>(1);

        r5 = $r8;

        r6 = r3;

        i2 = lengthof r6;

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        r7 = r6[i3];

        $r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("lastTouchedTime", $r15);

        $r16 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r7;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r16, "updateStamp: %s updated", $r14);

        $i6 = virtualinvoke r4.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r7, r5, null, null);

        i0 = i0 + $i6;

        i3 = i3 + 1;

        goto label1;

     label2:
        $r10 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_RECENT_FOLDERS_NOTIFIER>;

        $r9 = virtualinvoke $r10.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r11 = virtualinvoke $r9.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r2);

        r17 = virtualinvoke $r11.<android.net.Uri$Builder: android.net.Uri build()>();

        $r12 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r17;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r12, "updateTimestamp: Notifying on %s", $r13);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r17, null);

        return i0;
    }

    private int uiUpdateRecentFolders(android.net.Uri, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r11;
        android.content.ContentValues r2;
        int i0, $i2;
        java.lang.String r3, r7;
        android.net.Uri[] r4;
        android.content.Context r5;
        byte b1;
        java.util.Iterator r6;
        java.util.List $r8;
        java.lang.Object $r9, $r12;
        java.util.Set $r10;
        boolean $z0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        i0 = virtualinvoke r2.<android.content.ContentValues: int size()>();

        $r8 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(1);

        r3 = (java.lang.String) $r9;

        r4 = newarray (android.net.Uri)[i0];

        r5 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        b1 = 0;

        $r10 = virtualinvoke r2.<android.content.ContentValues: java.util.Set keySet()>();

        r6 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r12;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r7);

        r4[b1] = $r11;

        goto label1;

     label2:
        $i2 = specialinvoke r0.<com.android.email.provider.EmailProvider: int updateTimestamp(android.content.Context,java.lang.String,android.net.Uri[])>(r5, r3, r4);

        return $i2;
    }

    private int uiPopulateRecentFolders(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.content.Context r2;
        java.lang.String r3, $r6;
        android.net.Uri[] r4;
        int i0, i1;
        java.lang.Object[] $r5;
        java.lang.Integer $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.net.Uri[] defaultRecentFolders(java.lang.String)>(r3);

        i0 = lengthof r4;

        if i0 > 0 goto label1;

        return 0;

     label1:
        i1 = specialinvoke r0.<com.android.email.provider.EmailProvider: int updateTimestamp(android.content.Context,java.lang.String,android.net.Uri[])>(r2, r3, r4);

        $r6 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r5 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5[0] = $r7;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "uiPopulateRecentFolders: %d folders changed", $r5);

        return i1;
    }

    private int uiUpdateAttachment(android.net.Uri, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r18;
        android.content.ContentValues r2, r6, $r9;
        byte b0;
        java.lang.Integer r3, r7, $r10, $r11, $r12, $r14, $r15;
        long l1, $l10;
        android.content.Context r4;
        com.android.emailcommon.provider.EmailContent$Attachment r5;
        int i2, $i3, $i4, $i6, $i7, $i8;
        java.lang.String $r8, $r16, $r17, $r21;
        boolean $z0, $z1, $z2;
        java.lang.Object[] $r19;
        java.lang.Throwable $r20;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        b0 = 0;

        r3 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("state");

        if r3 == null goto label10;

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r5 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment restoreAttachmentWithId(android.content.Context,long)>(r4, l1);

        if r5 != null goto label01;

        return b0;

     label01:
        i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $r9 = new android.content.ContentValues;

        specialinvoke $r9.<android.content.ContentValues: void <init>()>();

        r6 = $r9;

        if i2 == 0 goto label02;

        if i2 != 4 goto label03;

     label02:
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiState", $r10);

        $i3 = r5.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i4 = $i3 & -3;

        r5.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags> = $i4;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r11);

        virtualinvoke r5.<com.android.emailcommon.provider.EmailContent$Attachment: int update(android.content.Context,android.content.ContentValues)>(r4, r6);

        b0 = 1;

     label03:
        if i2 == 2 goto label04;

        if i2 != 4 goto label08;

     label04:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiState", $r12);

        r7 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("destination");

        if r7 != null goto label05;

        $i6 = 0;

        goto label06;

     label05:
        $i6 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

     label06:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiDestination", $r14);

        $i7 = r5.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i8 = $i7 | 2;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r15);

        $z1 = virtualinvoke r6.<android.content.ContentValues: boolean containsKey(java.lang.String)>("location");

        if $z1 == 0 goto label07;

        $r17 = virtualinvoke r6.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("location");

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r17);

        if $z2 == 0 goto label07;

        $r21 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r20 = new java.lang.Throwable;

        specialinvoke $r20.<java.lang.Throwable: void <init>()>();

        $r19 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r21, $r20, "attachment with blank location", $r19);

     label07:
        virtualinvoke r5.<com.android.emailcommon.provider.EmailContent$Attachment: int update(android.content.Context,android.content.ContentValues)>(r4, r6);

        b0 = 1;

     label08:
        if i2 != 3 goto label10;

        $r16 = r5.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mContentId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r16);

        if $z0 != 0 goto label09;

        $r18 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER>;

        $l10 = r5.<com.android.emailcommon.provider.EmailContent$Attachment: long mMessageKey>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r18, $l10);

     label09:
        b0 = 1;

     label10:
        return b0;
    }

    private int uiUpdateFolder(android.content.Context, android.net.Uri, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        android.net.Uri r2, $r6, r12;
        android.content.ContentValues r3, $r7, r13;
        int i0, i1, $i2, $i3;
        java.lang.String r4, r5;
        boolean $z0, $z1, $z2;
        java.util.Set $r8;
        java.lang.Object $r9;
        java.lang.Long $r10;
        java.lang.Integer $r11;
        java.util.Iterator r14;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: android.content.ContentValues;

        $z0 = virtualinvoke r3.<android.content.ContentValues: boolean containsKey(java.lang.String)>("seen");

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke r3.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("seen");

        i0 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        if i0 != 1 goto label1;

        r4 = virtualinvoke r2.<android.net.Uri: java.lang.String getLastPathSegment()>();

        i1 = specialinvoke r0.<com.android.email.provider.EmailProvider: int markAllSeen(android.content.Context,java.lang.String)>(r1, r4);

        $i3 = virtualinvoke r3.<android.content.ContentValues: int size()>();

        if $i3 != 1 goto label1;

        return i1;

     label1:
        $r6 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        r12 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri convertToEmailProviderUri(android.net.Uri,android.net.Uri,boolean)>(r2, $r6, 1);

        if r12 != null goto label2;

        return 0;

     label2:
        $r7 = new android.content.ContentValues;

        specialinvoke $r7.<android.content.ContentValues: void <init>()>();

        r13 = $r7;

        $r8 = virtualinvoke r3.<android.content.ContentValues: java.util.Set keySet()>();

        r14 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r9;

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("lastTouchedTime");

        if $z2 == 0 goto label4;

        $r10 = virtualinvoke r3.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>(r5);

        virtualinvoke r13.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("lastTouchedTime", $r10);

     label4:
        goto label3;

     label5:
        $i2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r12, r13, null, null);

        return $i2;
    }

    private int uiUpdateSettings(android.content.Context, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        android.content.ContentValues r2;
        com.android.mail.preferences.MailPrefs r3;
        int i0, $i1;
        boolean z0, $z1, $z2, $z3;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;
        java.lang.Integer $r6, $r7;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.ContentValues;

        r3 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>(r1);

        $z1 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("auto_advance");

        if $z1 == 0 goto label1;

        $r7 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("auto_advance");

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        virtualinvoke r3.<com.android.mail.preferences.MailPrefs: void setAutoAdvanceMode(int)>($i1);

     label1:
        $z2 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("conversation_view_mode");

        if $z2 == 0 goto label4;

        $r6 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("conversation_view_mode");

        i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if i0 != 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        virtualinvoke r3.<com.android.mail.preferences.MailPrefs: void setConversationOverviewMode(boolean)>(z0);

     label4:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        virtualinvoke $r4.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>($r5, null, 0);

        return 1;
    }

    private int markAllSeen(android.content.Context, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        java.lang.String r2;
        android.database.sqlite.SQLiteDatabase r3;
        android.content.ContentValues r5, $r8;
        java.lang.String[] r7, $r10;
        java.lang.Integer $r9;
        int $i0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r1);

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>(int)>(1);

        r5 = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flagSeen", $r9);

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = r2;

        r7 = $r10;

        $i0 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("Message", r5, "mailboxKey = ?", r7);

        return $i0;
    }

    private android.content.ContentValues convertUiMessageValues(com.android.emailcommon.provider.EmailContent$Message, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.provider.EmailContent$Message r1;
        android.content.ContentValues r2, r3, $r13;
        java.util.Iterator r4;
        java.lang.String r5, r12, $r16, $r23, $r24, $r29, $r31;
        java.lang.Object r6, $r15, $r27;
        com.android.mail.providers.FolderList r7;
        com.android.mail.providers.Folder r8;
        android.net.Uri r9;
        java.lang.Long r10, $r33;
        int i0, $i1, i5;
        com.android.emailcommon.mail.Address r11;
        java.util.Set $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.IllegalArgumentException $r17;
        java.lang.StringBuilder $r18, $r19, $r20, $r21;
        android.content.Context $r22;
        byte[] $r25;
        com.google.common.collect.ImmutableList $r26, $r28;
        long $l2, $l3;
        com.android.mail.utils.FolderUri $r30;
        java.lang.Object[] $r32;
        com.android.emailcommon.mail.Address[] r34, r36;
        com.android.mail.preferences.MailPrefs r35;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.emailcommon.provider.EmailContent$Message;

        r2 := @parameter1: android.content.ContentValues;

        $r13 = new android.content.ContentValues;

        specialinvoke $r13.<android.content.ContentValues: void <init>()>();

        r3 = $r13;

        $r14 = virtualinvoke r2.<android.content.ContentValues: java.util.Set keySet()>();

        r4 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r15;

        r6 = virtualinvoke r2.<android.content.ContentValues: java.lang.Object get(java.lang.String)>(r5);

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("starred");

        if $z2 == 0 goto label02;

        staticinvoke <com.android.email.provider.EmailProvider: void putIntegerLongOrBoolean(android.content.ContentValues,java.lang.String,java.lang.Object)>(r3, "flagFavorite", r6);

        goto label15;

     label02:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("read");

        if $z1 == 0 goto label03;

        staticinvoke <com.android.email.provider.EmailProvider: void putIntegerLongOrBoolean(android.content.ContentValues,java.lang.String,java.lang.Object)>(r3, "flagRead", r6);

        goto label15;

     label03:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("seen");

        if $z4 == 0 goto label04;

        staticinvoke <com.android.email.provider.EmailProvider: void putIntegerLongOrBoolean(android.content.ContentValues,java.lang.String,java.lang.Object)>(r3, "flagSeen", r6);

        goto label15;

     label04:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("mailboxKey");

        if $z3 == 0 goto label05;

        staticinvoke <com.android.email.provider.EmailProvider: void putIntegerLongOrBoolean(android.content.ContentValues,java.lang.String,java.lang.Object)>(r3, "mailboxKey", r6);

        goto label15;

     label05:
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("folders_updated");

        if $z6 == 0 goto label06;

        goto label15;

     label06:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rawFolders");

        if $z5 == 0 goto label09;

        $r25 = virtualinvoke r2.<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>(r5);

        r7 = staticinvoke <com.android.mail.providers.FolderList: com.android.mail.providers.FolderList fromBlob(byte[])>($r25);

        $r28 = r7.<com.android.mail.providers.FolderList: com.google.common.collect.ImmutableList folders>;

        $i1 = virtualinvoke $r28.<com.google.common.collect.ImmutableList: int size()>();

        if $i1 == 1 goto label07;

        $r31 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r32 = newarray (java.lang.Object)[1];

        $l3 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r32[0] = $r33;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r31, "Incorrect number of folders for this message: Message is %s", $r32);

        goto label08;

     label07:
        $r26 = r7.<com.android.mail.providers.FolderList: com.google.common.collect.ImmutableList folders>;

        $r27 = virtualinvoke $r26.<com.google.common.collect.ImmutableList: java.lang.Object get(int)>(0);

        r8 = (com.android.mail.providers.Folder) $r27;

        $r30 = r8.<com.android.mail.providers.Folder: com.android.mail.utils.FolderUri folderUri>;

        r9 = $r30.<com.android.mail.utils.FolderUri: android.net.Uri fullUri>;

        $r29 = virtualinvoke r9.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r29);

        r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        staticinvoke <com.android.email.provider.EmailProvider: void putIntegerLongOrBoolean(android.content.ContentValues,java.lang.String,java.lang.Object)>(r3, "mailboxKey", r10);

     label08:
        goto label15;

     label09:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("alwaysShowImages");

        if $z8 == 0 goto label12;

        $r24 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mFrom>;

        r34 = staticinvoke <com.android.emailcommon.mail.Address: com.android.emailcommon.mail.Address[] fromHeader(java.lang.String)>($r24);

        $r22 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r35 = staticinvoke <com.android.mail.preferences.MailPrefs: com.android.mail.preferences.MailPrefs get(android.content.Context)>($r22);

        r36 = r34;

        i5 = lengthof r36;

        i0 = 0;

     label10:
        if i0 >= i5 goto label11;

        r11 = r36[i0];

        r12 = virtualinvoke r11.<com.android.emailcommon.mail.Address: java.lang.String getAddress()>();

        virtualinvoke r35.<com.android.mail.preferences.MailPrefs: void setDisplayImagesFromSender(java.lang.String,java.util.List)>(r12, null);

        i0 = i0 + 1;

        goto label10;

     label11:
        goto label15;

     label12:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("viewed");

        if $z7 != 0 goto label15;

        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("suppress_undo");

        if $z9 == 0 goto label13;

        goto label15;

     label13:
        $r16 = "conversationInfo";

        $z10 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z10 == 0 goto label14;

        goto label15;

     label14:
        $r17 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t update ");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in message");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);

        throw $r17;

     label15:
        goto label01;

     label16:
        return r3;
    }

    private static android.net.Uri convertToEmailProviderUri(android.net.Uri, android.net.Uri, boolean)
    {
        android.net.Uri r0, r1, r3;
        boolean z0;
        java.lang.String r2;
        long l0;
        android.net.Uri$Builder $r4, $r5;
        java.lang.NumberFormatException $r6;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<android.net.Uri: java.lang.String getLastPathSegment()>();

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        r3 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l0);

        if z0 == 0 goto label2;

        $r4 = virtualinvoke r3.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("is_uiprovider", "true");

        r3 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

     label2:
        return r3;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private com.android.emailcommon.provider.EmailContent$Message getMessageFromLastSegment(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        long l0;
        java.lang.String $r2;
        android.content.Context $r3;
        com.android.emailcommon.provider.EmailContent$Message $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r4 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>($r3, l0);

        return $r4;
    }

    private void addToSequence(android.net.Uri, android.content.ContentProviderOperation)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.content.ContentProviderOperation r2;
        java.lang.String r3;
        int i0, $i1;
        java.util.ArrayList $r4, $r5;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentProviderOperation;

        r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("seq");

        if r3 == null goto label2;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        $i1 = r0.<com.android.email.provider.EmailProvider: int mLastSequence>;

        if i0 <= $i1 goto label1;

        $r5 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        r0.<com.android.email.provider.EmailProvider: int mLastSequence> = i0;

     label1:
        $r4 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label2:
        return;
    }

    private static boolean uploadsToServer(android.content.Context, com.android.emailcommon.provider.Mailbox)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Mailbox r1;
        java.lang.String r2;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r3;
        int $i0, $i1, $i2;
        long $l3;
        boolean $z0, $z1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Mailbox;

        $i0 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i0 == 3 goto label1;

        $i1 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i1 == 4 goto label1;

        $i2 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i2 != 8 goto label2;

     label1:
        return 0;

     label2:
        $l3 = r1.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r2 = staticinvoke <com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context,long)>(r0, $l3);

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r2);

        if r3 == null goto label3;

        $z0 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean syncChanges>;

        if $z0 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    private int uiUpdateMessage(android.net.Uri, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        int $i0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        $i0 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateMessage(android.net.Uri,android.content.ContentValues,boolean)>(r1, r2, 0);

        return $i0;
    }

    private int uiUpdateMessage(android.net.Uri, android.content.ContentValues, boolean)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r6, r7, $r19, $r26;
        android.content.ContentValues r2, r10, $r15, r31;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        android.content.Context r3;
        com.android.emailcommon.provider.EmailContent$Message r4;
        com.android.emailcommon.provider.Mailbox r5;
        com.android.emailcommon.service.EmailServiceProxy r8;
        java.util.Iterator r11;
        java.lang.String r12, $r13, $r14, $r29, r30;
        long $l0, $l4, $l5, $l6, $l7;
        java.util.Set $r16;
        int $i2, $i3, $i9;
        android.content.ContentProviderOperation$Builder $r17, $r18;
        java.lang.Object $r20;
        java.lang.Boolean $r21, $r22, $r24, r32;
        java.lang.Long $r23;
        java.lang.Integer $r25;
        android.os.RemoteException $r27;
        java.lang.Object[] $r28;
        android.content.ContentProviderOperation r33;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        z0 := @parameter2: boolean;

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.EmailContent$Message getMessageFromLastSegment(android.net.Uri)>(r1);

        if r4 != null goto label01;

        return 0;

     label01:
        $l0 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        r5 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r3, $l0);

        if r5 != null goto label02;

        return 0;

     label02:
        if z0 != 0 goto label03;

        $z13 = staticinvoke <com.android.email.provider.EmailProvider: boolean uploadsToServer(android.content.Context,com.android.emailcommon.provider.Mailbox)>(r3, r5);

        if $z13 == 0 goto label04;

     label03:
        $r26 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri SYNCED_CONTENT_URI>;

        goto label05;

     label04:
        $r26 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

     label05:
        r6 = $r26;

        r7 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri convertToEmailProviderUri(android.net.Uri,android.net.Uri,boolean)>(r1, r6, 1);

        if r7 != null goto label06;

        return 0;

     label06:
        $z1 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("respond");

        if $z1 == 0 goto label11;

        $l6 = r5.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r8 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.EmailServiceProxy getServiceForAccount(android.content.Context,long)>(r3, $l6);

     label07:
        $l5 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r25 = virtualinvoke r2.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("respond");

        $i9 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        virtualinvoke r8.<com.android.emailcommon.service.EmailServiceProxy: void sendMeetingResponse(long,int)>($l5, $i9);

        specialinvoke r0.<com.android.email.provider.EmailProvider: int uiDeleteMessage(android.net.Uri)>(r1);

        staticinvoke <com.android.emailcommon.utility.Utility: void showToast(android.content.Context,int)>(r3, 2131296947);

        $l7 = r5.<com.android.emailcommon.provider.Mailbox: long mId>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIConversationMailbox(long)>($l7);

     label08:
        goto label10;

     label09:
        $r27 := @caughtexception;

        $r29 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r28 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r29, "Remote exception while sending meeting response", $r28);

     label10:
        return 1;

     label11:
        r30 = virtualinvoke r2.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("operation");

        $r13 = "discard_drafts";

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r30);

        if $z2 != 0 goto label12;

        $r14 = "move_failed_to_drafts";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r30);

        if $z3 == 0 goto label13;

     label12:
        specialinvoke r0.<com.android.email.provider.EmailProvider: int uiDeleteMessage(android.net.Uri)>(r1);

        return 1;

     label13:
        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        r31 = $r15;

        r10 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.content.ContentValues convertUiMessageValues(com.android.emailcommon.provider.EmailContent$Message,android.content.ContentValues)>(r4, r2);

        $r16 = virtualinvoke r10.<android.content.ContentValues: java.util.Set keySet()>();

        r11 = interfaceinvoke $r16.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label19;

        $r20 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r20;

        $z8 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("mailboxKey");

        if $z8 == 0 goto label15;

        $l4 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r31.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("mailboxKey", $r23);

        goto label18;

     label15:
        $z9 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("flagRead");

        if $z9 == 0 goto label16;

        $z12 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z12);

        virtualinvoke r31.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>("flagRead", $r24);

        goto label18;

     label16:
        $z6 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("flagSeen");

        if $z6 == 0 goto label17;

        $z10 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagSeen>;

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z10);

        virtualinvoke r31.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>("flagSeen", $r22);

        goto label18;

     label17:
        $z7 = virtualinvoke r12.<java.lang.String: boolean equals(java.lang.Object)>("flagFavorite");

        if $z7 == 0 goto label18;

        $z11 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagFavorite>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        virtualinvoke r31.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>("flagFavorite", $r21);

     label18:
        goto label14;

     label19:
        $i2 = virtualinvoke r31.<android.content.ContentValues: int size()>();

        if $i2 != 0 goto label20;

        return -1;

     label20:
        r32 = virtualinvoke r2.<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>("suppress_undo");

        if r32 == null goto label21;

        $z5 = virtualinvoke r32.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 != 0 goto label22;

     label21:
        $r19 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri convertToEmailProviderUri(android.net.Uri,android.net.Uri,boolean)>(r1, r6, 0);

        $r17 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>($r19);

        $r18 = virtualinvoke $r17.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r31);

        r33 = virtualinvoke $r18.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        specialinvoke r0.<com.android.email.provider.EmailProvider: void addToSequence(android.net.Uri,android.content.ContentProviderOperation)>(r1, r33);

     label22:
        $i3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r7, r10, null, null);

        return $i3;

        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private void handleMessageUpdateNotifications(android.net.Uri, java.lang.String, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r6, $r9;
        java.lang.String r2;
        android.content.ContentValues r3;
        android.database.Cursor r4;
        java.lang.Throwable r5, $r11;
        boolean $z0, $z1, $z2, $z3;
        android.net.Uri$Builder $r7, $r8;
        java.lang.String[] $r10;
        long $l0, $l1;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.content.ContentValues;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>("is_uiprovider", 0);

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIConversation(android.net.Uri)>(r1);

     label1:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIMessage(java.lang.String)>(r2);

        $z1 = virtualinvoke r3.<android.content.ContentValues: boolean containsKey(java.lang.String)>("flagRead");

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r3.<android.content.ContentValues: boolean containsKey(java.lang.String)>("mailboxKey");

        if $z3 == 0 goto label7;

     label2:
        $r6 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r7 = virtualinvoke $r6.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String[] MESSAGE_KEYS_PROJECTION>;

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r10, null, null, null);

        if r4 == null goto label7;

     label3:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label4;

        $l0 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(0);

        $l1 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(1);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>($l0, $l1);

     label4:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label7;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

     label6:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int uiDeleteMessage(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r7, $r8;
        android.content.Context r2;
        com.android.emailcommon.provider.EmailContent$Message r3;
        com.android.emailcommon.provider.Mailbox r4, r11;
        int i0, i1, $i3, $i9;
        android.content.ContentValues r5, $r9;
        long $l2, $l4, $l5, $l6, $l7, $l8, $l10, $l11, $l12, $l13, $l14, $l15;
        android.content.ContentResolver $r6;
        java.lang.Long $r10;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.EmailContent$Message getMessageFromLastSegment(android.net.Uri)>(r1);

        if r3 != null goto label1;

        return 0;

     label1:
        $l2 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        r4 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r2, $l2);

        if r4 != null goto label2;

        return 0;

     label2:
        $i3 = r4.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i3 == 6 goto label3;

        $i9 = r4.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i9 != 3 goto label4;

     label3:
        $l5 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey>;

        $l4 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: void deleteAllAttachmentFiles(android.content.Context,long,long)>(r2, $l5, $l4);

        $r6 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r7 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri SYNCED_CONTENT_URI>;

        $l6 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r8 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r7, $l6);

        i0 = virtualinvoke $r6.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r8, null, null);

        $l7 = r4.<com.android.emailcommon.provider.Mailbox: long mId>;

        $l8 = r4.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>($l7, $l8);

        $l10 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIMessage(long)>($l10);

        return i0;

     label4:
        $l11 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey>;

        r11 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>(r2, $l11, 6);

        if r11 != null goto label5;

        return 0;

     label5:
        $r9 = new android.content.ContentValues;

        specialinvoke $r9.<android.content.ContentValues: void <init>()>();

        r5 = $r9;

        $l12 = r11.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("mailboxKey", $r10);

        i1 = specialinvoke r0.<com.android.email.provider.EmailProvider: int uiUpdateMessage(android.net.Uri,android.content.ContentValues,boolean)>(r1, r5, 1);

        $l14 = r4.<com.android.emailcommon.provider.Mailbox: long mId>;

        $l13 = r4.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>($l14, $l13);

        $l15 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIMessage(long)>($l15);

        return i1;
    }

    private int uiPurgeFolder(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r21, $r23;
        android.content.Context r2;
        long l0, l1, l3;
        android.database.sqlite.SQLiteDatabase r3;
        android.database.Cursor r4, r7;
        java.lang.String[] r5, $r9, $r17;
        java.lang.String r6, $r8, $r13, $r14;
        int i2, $i5, $i6, $i7;
        java.lang.StringBuilder $r10, $r11, $r12, $r18, $r19, $r20;
        java.lang.Object[] $r15;
        java.lang.Long $r16;
        boolean $z0, $z1;
        android.content.ContentResolver $r22;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context)>(r2);

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "accountKey";

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id=");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r4 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Mailbox", $r9, $r13, null, null, null, null);

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label2;

     label1:
        $r14 = <com.android.mail.utils.LogUtils: java.lang.String TAG>;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r15[0] = $r16;

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>($r14, "Null or empty cursor when trying to purge mailbox %d", $r15);

        return 0;

     label2:
        $i5 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("accountKey");

        l1 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>($i5);

        $r17 = newarray (java.lang.String)[1];

        $r17[0] = "_id";

        r5 = $r17;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey=");

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        r6 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("Message", r5, r6, null, null, null, null);

        i2 = 0;

     label3:
        if r7 == null goto label4;

        $z1 = interfaceinvoke r7.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label4;

        $i6 = interfaceinvoke r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_id");

        l3 = interfaceinvoke r7.<android.database.Cursor: long getLong(int)>($i6);

        staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: void deleteAllAttachmentFiles(android.content.Context,long,long)>(r2, l1, l3);

        $r22 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r23 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri SYNCED_CONTENT_URI>;

        $r21 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r23, l3);

        $i7 = virtualinvoke $r22.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r21, null, null);

        i2 = i2 + $i7;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIMessage(long)>(l3);

        goto label3;

     label4:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>(l0, l1);

        return i2;
    }

    private int pickFolder(android.net.Uri, int, int)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r9;
        int i0, i1;
        android.content.Context r2;
        java.lang.Long r3;
        android.database.Cursor r4;
        com.android.mail.providers.Account r5;
        android.content.Intent r6, $r12;
        byte b2, b5;
        java.lang.Throwable r7, $r17;
        java.lang.String $r8;
        long $l3, $l4;
        java.lang.String[] $r10;
        com.android.mail.providers.Account$Builder $r11;
        boolean $z0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $l4 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        $r9 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uiaccount", $l4);

        $r10 = <com.android.mail.providers.UIProvider: java.lang.String[] ACCOUNTS_PROJECTION>;

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r9, $r10, null, null, null);

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $r11 = staticinvoke <com.android.mail.providers.Account: com.android.mail.providers.Account$Builder builder()>();

        r5 = virtualinvoke $r11.<com.android.mail.providers.Account$Builder: com.android.mail.providers.Account buildFrom(android.database.Cursor)>(r4);

        $r12 = new android.content.Intent;

        specialinvoke $r12.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r2, class "com/android/email/provider/FolderPickerActivity");

        r6 = $r12;

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("picker_ui_account", r5);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("picker_mailbox_type", i0);

        virtualinvoke r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("picker_header_id", i1);

        virtualinvoke r6.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r2.<android.content.Context: void startActivity(android.content.Intent)>(r6);

        b2 = 1;

     label2:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return b2;

     label3:
        b5 = 0;

     label4:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return b5;

     label5:
        $r17 := @caughtexception;

        r7 = $r17;

     label6:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int pickTrashFolder(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        int $i0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $i0 = specialinvoke r0.<com.android.email.provider.EmailProvider: int pickFolder(android.net.Uri,int,int)>(r1, 6, 2131296952);

        return $i0;
    }

    private int pickSentFolder(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        int $i0;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $i0 = specialinvoke r0.<com.android.email.provider.EmailProvider: int pickFolder(android.net.Uri,int,int)>(r1, 5, 2131296953);

        return $i0;
    }

    private android.database.Cursor uiUndo(java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String[] r1, $r8, $r14;
        com.android.mail.utils.MatrixCursorWithCachedColumns r2, $r6, $r7;
        java.util.Iterator r3;
        android.content.ContentProviderOperation r4;
        java.util.ArrayList $r5, $r9, $r10, $r11, $r12;
        boolean $z0, $z1;
        int $i0;
        java.lang.Object $r15;
        android.net.Uri $r16;
        android.content.OperationApplicationException $r17;
        java.lang.String $r18, $r19;
        java.lang.Object[] $r20;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String[];

        $r5 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        $z0 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label6;

     label1:
        $r7 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "conversationUri";

        $r9 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        $i0 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        specialinvoke $r7.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>($r8, $i0);

        r2 = $r7;

        $r10 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        r3 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.content.ContentProviderOperation) $r15;

        $r14 = newarray (java.lang.String)[1];

        $r16 = virtualinvoke r4.<android.content.ContentProviderOperation: android.net.Uri getUri()>();

        $r18 = virtualinvoke $r16.<android.net.Uri: java.lang.String toString()>();

        $r14[0] = $r18;

        virtualinvoke r2.<android.database.MatrixCursor: void addRow(java.lang.Object[])>($r14);

        goto label2;

     label3:
        $r11 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>($r11);

        $r12 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mLastSequenceOps>;

        virtualinvoke $r12.<java.util.ArrayList: void clear()>();

     label4:
        return r2;

     label5:
        $r17 := @caughtexception;

        $r19 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "applyBatch exception", $r20);

     label6:
        $r6 = new com.android.mail.utils.MatrixCursorWithCachedColumns;

        specialinvoke $r6.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r1, 0);

        return $r6;

        catch android.content.OperationApplicationException from label1 to label4 with label5;
    }

    private void notifyUIConversation(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        com.android.emailcommon.provider.EmailContent$Message r3;
        android.content.Context $r4;
        long $l0, $l1;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        r3 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>($r4, $l0);

        if r3 == null goto label1;

        $l1 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIConversationMailbox(long)>($l1);

     label1:
        return;
    }

    private void notifyUIConversationMailbox(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        com.android.emailcommon.provider.Mailbox r1;
        android.net.Uri $r2, $r5;
        java.lang.String $r3, $r6, $r8, $r11;
        android.content.Context $r4;
        int $i1;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.Object[] $r12;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        $r2 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER>;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r2, $r3);

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r1 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>($r4, l0);

        if r1 != null goto label1;

        $r8 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No mailbox for notification: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r8, $r11, $r12);

        return;

     label1:
        $i1 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i1 != 0 goto label2;

        $r5 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER>;

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: java.lang.String combinedMailboxId(int)>(0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r5, $r6);

     label2:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyWidgets(long)>(l0);

        return;
    }

    private void notifyUIMessage(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        android.net.Uri $r1;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        $r1 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r1, l0);

        return;
    }

    private void notifyUIMessage(java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        java.lang.String r1;
        android.net.Uri $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_MESSAGE_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r2, r1);

        return;
    }

    private void notifyUIAccount(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        android.net.Uri $r1, $r3;
        java.lang.String $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        $r1 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ACCOUNT_NOTIFIER>;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r1, $r2);

        $r3 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r3, null);

        return;
    }

    private void notifyUIFolder(java.lang.String, long)
    {
        com.android.email.provider.EmailProvider r0, r2;
        java.lang.String r1;
        long l0, $l2;
        java.lang.Throwable r3, $r17;
        android.net.Uri $r4, $r5, $r6, $r7, $r15;
        byte $b1;
        android.os.Handler $r9, $r10, $r11, $r12, $r14;
        android.os.Looper $r13;
        com.android.email.provider.EmailProvider$4 $r16;
        android.os.Message r18;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r4 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r4, r1);

        $r5 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDER_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r5, r1);

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r15 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r15, l0);

     label1:
        $r6 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDER_NOTIFIER>;

        $l2 = staticinvoke <com.android.email.provider.EmailProvider: long getVirtualMailboxId(long,int)>(268435456L, 0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r6, $l2);

        $r7 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_FOLDERLIST_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,long)>($r7, 268435456L);

        r2 = r0;

        entermonitor r0;

     label2:
        $r9 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mFolderNotifierHandler>;

        if $r9 != null goto label3;

        $r14 = new android.os.Handler;

        $r13 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r16 = new com.android.email.provider.EmailProvider$4;

        specialinvoke $r16.<com.android.email.provider.EmailProvider$4: void <init>(com.android.email.provider.EmailProvider)>(r0);

        specialinvoke $r14.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r13, $r16);

        r0.<com.android.email.provider.EmailProvider: android.os.Handler mFolderNotifierHandler> = $r14;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        $r10 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mFolderNotifierHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(0);

        $r11 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mFolderNotifierHandler>;

        r18 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>($r11, 0);

        r18.<android.os.Message: java.lang.Object obj> = r1;

        $r12 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mFolderNotifierHandler>;

        virtualinvoke $r12.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r18, 2000L);

        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void notifyUIFolder(long, long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l1;
        java.lang.String $r1;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(java.lang.String,long)>($r1, l1);

        return;
    }

    private void notifyUI(android.net.Uri, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, r3, $r9;
        java.lang.String r2;
        java.util.Set r4;
        android.content.Context $r5;
        android.content.ContentResolver $r6;
        android.net.Uri$Builder $r7, $r8;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        if r2 == null goto label1;

        $r7 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $r8 = virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<android.net.Uri$Builder: android.net.Uri build()>();

        goto label2;

     label1:
        $r9 = r1;

     label2:
        r3 = $r9;

        r4 = specialinvoke r0.<com.android.email.provider.EmailProvider: java.util.Set getBatchNotificationsSet()>();

        if r4 == null goto label3;

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        goto label4;

     label3:
        $r5 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r6.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>(r3, null);

     label4:
        return;
    }

    private void notifyUI(android.net.Uri, long)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        long l0;
        java.lang.String $r2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        l0 := @parameter1: long;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r1, $r2);

        return;
    }

    private com.android.emailcommon.provider.Mailbox getMailbox(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        long l0;
        java.lang.String $r2;
        android.content.Context $r3;
        com.android.emailcommon.provider.Mailbox $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

        $r3 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r4 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>($r3, l0);

        return $r4;
    }

    private android.accounts.Account getAccountManagerAccount(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        java.lang.String $r3, $r4;
        android.accounts.Account $r5;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r1, l0);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = r2.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        $r4 = virtualinvoke r2.<com.android.emailcommon.provider.Account: java.lang.String getProtocol(android.content.Context)>(r1);

        $r5 = staticinvoke <com.android.email.provider.EmailProvider: android.accounts.Account getAccountManagerAccount(android.content.Context,java.lang.String,java.lang.String)>(r1, $r3, $r4);

        return $r5;
    }

    private static android.accounts.Account getAccountManagerAccount(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r5;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r3;
        android.accounts.Account $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>(r0, r2);

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = new android.accounts.Account;

        $r5 = r3.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: java.lang.String accountType>;

        specialinvoke $r4.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r1, $r5);

        return $r4;
    }

    private void updateAccountSyncInterval(long, android.content.ContentValues)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, $l3, $l5, $l6;
        android.content.ContentValues r1;
        java.lang.Integer r2;
        android.accounts.Account r3;
        java.util.List r4;
        java.util.Iterator r5;
        android.content.PeriodicSync r6;
        java.lang.Object[] $r7;
        java.lang.String $r8, $r10, $r12, $r15;
        java.lang.Long $r9;
        int $i2, $i4;
        boolean $z0;
        android.os.Bundle $r11, $r13;
        java.lang.Object $r14;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: android.content.ContentValues;

        r2 = virtualinvoke r1.<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>("syncInterval");

        if r2 != null goto label1;

        return;

     label1:
        r3 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.accounts.Account getAccountManagerAccount(long)>(l0);

        if r3 != null goto label2;

        return;

     label2:
        $r8 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r7[0] = $r9;

        $r7[1] = r2;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "Setting sync interval for account %s to %d minutes", $r7);

        $r10 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        r4 = staticinvoke <android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>(r3, $r10);

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (android.content.PeriodicSync) $r14;

        $r15 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r13 = r6.<android.content.PeriodicSync: android.os.Bundle extras>;

        staticinvoke <android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r3, $r15, $r13);

        goto label3;

     label4:
        $i2 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        if $i2 <= 0 goto label5;

        $r12 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r11 = <android.os.Bundle: android.os.Bundle EMPTY>;

        $i4 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        $l3 = (long) $i4;

        $l6 = $l3 * 60000L;

        $l5 = $l6 / 1000L;

        staticinvoke <android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>(r3, $r12, $r11, $l5);

     label5:
        return;
    }

    private static void startSync(android.accounts.Account, long, int)
    {
        android.accounts.Account r0;
        long l0;
        int i1;
        android.os.Bundle r1;
        android.net.Uri $r2;
        java.lang.String $r3, $r4, $r6, $r7, $r8;
        java.lang.Object[] $r5;

        r0 := @parameter0: android.accounts.Account;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 = staticinvoke <com.android.emailcommon.provider.Mailbox: android.os.Bundle createSyncBundle(long)>(l0);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("do_not_retry", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("expedited", 1);

        if i1 == 0 goto label1;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("__deltaMessageCount__", i1);

     label1:
        $r2 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("callback_uri", $r3);

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("callback_method", "sync_status");

        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r4, r1);

        $r6 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r5 = newarray (java.lang.Object)[2];

        $r7 = virtualinvoke r0.<android.accounts.Account: java.lang.String toString()>();

        $r5[0] = $r7;

        $r8 = virtualinvoke r1.<android.os.Bundle: java.lang.String toString()>();

        $r5[1] = $r8;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "requestSync EmailProvider startSync %s, %s", $r5);

        return;
    }

    private void startSync(com.android.emailcommon.provider.Mailbox, int)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.provider.Mailbox r1;
        int i0;
        android.accounts.Account r2;
        long $l1, $l2;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.emailcommon.provider.Mailbox;

        i0 := @parameter1: int;

        $l1 = r1.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r2 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.accounts.Account getAccountManagerAccount(long)>($l1);

        if r2 == null goto label1;

        $l2 = r1.<com.android.emailcommon.provider.Mailbox: long mId>;

        staticinvoke <com.android.email.provider.EmailProvider: void startSync(android.accounts.Account,long,int)>(r2, $l2, i0);

     label1:
        return;
    }

    private static void restartPush(android.accounts.Account)
    {
        android.accounts.Account r0;
        android.os.Bundle r1, $r2;
        android.net.Uri $r3;
        java.lang.String $r4, $r5, $r7, $r8, $r9;
        java.lang.Object[] $r6;

        r0 := @parameter0: android.accounts.Account;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("do_not_retry", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("expedited", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("__push_only__", 1);

        $r3 = <com.android.emailcommon.provider.EmailContent: android.net.Uri CONTENT_URI>;

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("callback_uri", $r4);

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("callback_method", "sync_status");

        $r5 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r5, r1);

        $r7 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = virtualinvoke r0.<android.accounts.Account: java.lang.String toString()>();

        $r6[0] = $r8;

        $r9 = virtualinvoke r1.<android.os.Bundle: java.lang.String toString()>();

        $r6[1] = $r9;

        staticinvoke <com.android.mail.utils.LogUtils: int i(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "requestSync EmailProvider startSync %s, %s", $r6);

        return;
    }

    private android.database.Cursor uiFolderRefresh(com.android.emailcommon.provider.Mailbox, int)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.provider.Mailbox r1;
        int i0;
        android.content.Context $r2;
        com.android.email.provider.RefreshStatusMonitor $r3;
        com.android.email.provider.EmailProvider$5 $r4;
        long $l1;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.emailcommon.provider.Mailbox;

        i0 := @parameter1: int;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r3 = staticinvoke <com.android.email.provider.RefreshStatusMonitor: com.android.email.provider.RefreshStatusMonitor getInstance(android.content.Context)>($r2);

        $l1 = r1.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r4 = new com.android.email.provider.EmailProvider$5;

        specialinvoke $r4.<com.android.email.provider.EmailProvider$5: void <init>(com.android.email.provider.EmailProvider,com.android.emailcommon.provider.Mailbox)>(r0, r1);

        virtualinvoke $r3.<com.android.email.provider.RefreshStatusMonitor: void monitorRefreshStatus(long,com.android.email.provider.RefreshStatusMonitor$Callback)>($l1, $r4);

        specialinvoke r0.<com.android.email.provider.EmailProvider: void startSync(com.android.emailcommon.provider.Mailbox,int)>(r1, i0);

     label1:
        return null;
    }

    private android.database.Cursor uiFolderLoadMore(com.android.emailcommon.provider.Mailbox)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.provider.Mailbox r1;
        int $i0, $i1, $i2;
        com.android.emailcommon.service.SearchParams $r3;
        android.content.Context $r4;
        long $l3, $l4;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: com.android.emailcommon.provider.Mailbox;

        if r1 != null goto label1;

        return null;

     label1:
        $i0 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i0 != 8 goto label2;

        $r3 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        $i1 = $r3.<com.android.emailcommon.service.SearchParams: int mOffset>;

        $i2 = $i1 + 10;

        $r3.<com.android.emailcommon.service.SearchParams: int mOffset> = $i2;

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $l4 = r1.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        $l3 = r1.<com.android.emailcommon.provider.Mailbox: long mId>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void runSearchQuery(android.content.Context,long,long)>($r4, $l4, $l3);

        goto label3;

     label2:
        specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiFolderRefresh(com.android.emailcommon.provider.Mailbox,int)>(r1, 10);

     label3:
        return null;
    }

    private com.android.emailcommon.provider.Mailbox getSearchMailbox(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;
        android.content.Context r1;
        com.android.emailcommon.provider.Mailbox r2, $r3;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r2 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>(r1, l0, 8);

        if r2 != null goto label1;

        $r3 = new com.android.emailcommon.provider.Mailbox;

        specialinvoke $r3.<com.android.emailcommon.provider.Mailbox: void <init>()>();

        r2 = $r3;

        r2.<com.android.emailcommon.provider.Mailbox: long mAccountKey> = l0;

        r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId> = "__search_mailbox__";

        r2.<com.android.emailcommon.provider.Mailbox: boolean mFlagVisible> = 0;

        r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mDisplayName> = "__search_mailbox__";

        r2.<com.android.emailcommon.provider.Mailbox: int mSyncInterval> = 0;

        r2.<com.android.emailcommon.provider.Mailbox: int mType> = 8;

        r2.<com.android.emailcommon.provider.Mailbox: int mFlags> = 8;

        r2.<com.android.emailcommon.provider.Mailbox: long mParentKey> = -1L;

        virtualinvoke r2.<com.android.emailcommon.provider.Mailbox: android.net.Uri save(android.content.Context)>(r1);

     label1:
        return r2;
    }

    private void runSearchQuery(android.content.Context, long, long)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.Context r1;
        long l0, l1;
        java.lang.Object[] $r2;
        java.lang.String $r3;
        java.lang.Long $r4, $r5;
        com.android.email.provider.EmailProvider$6 $r6;
        java.lang.Void[] $r7;
        java.util.concurrent.Executor $r9;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $r3 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r2 = newarray (java.lang.Object)[2];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r2[1] = $r5;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r3, "runSearchQuery. account: %d mailbox id: %d", $r2);

        $r6 = new com.android.email.provider.EmailProvider$6;

        specialinvoke $r6.<com.android.email.provider.EmailProvider$6: void <init>(com.android.email.provider.EmailProvider,android.content.Context,long,long)>(r0, r1, l0, l1);

        $r9 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r7 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<com.android.email.provider.EmailProvider$6: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r9, $r7);

        return;
    }

    private android.database.Cursor uiSearch(android.net.Uri, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r15, $r17, $r23, $r27, $r29;
        java.lang.String[] r2;
        long l0, l1, $l3, $l4;
        com.android.emailcommon.provider.Mailbox r3, r5;
        java.lang.String r4, $r10, $r11, $r19, $r26, $r28, $r31, $r35;
        android.content.Context r6, $r12;
        android.content.ContentResolver r7;
        android.content.ContentValues r8, $r24;
        java.lang.Object[] $r9, $r18, $r34;
        com.android.emailcommon.service.SearchParams $r13, $r14, $r25;
        int $i5;
        android.database.Cursor $r16;
        java.lang.StringBuilder $r20, $r21, $r22, $r30, $r32, $r36;
        java.lang.IllegalArgumentException $r33;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "runSearchQuery in search %s", $r9);

        $r11 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        $r12 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        r3 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>($r12, l0, 0);

        if r3 != null goto label1;

        $r31 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In uiSearch, inbox doesn\'t exist for account ");

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r31, $r35, $r34);

        return null;

     label1:
        r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("query");

        if r4 != null goto label2;

        $r33 = new java.lang.IllegalArgumentException;

        specialinvoke $r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No query parameter in search query");

        throw $r33;

     label2:
        r5 = specialinvoke r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.provider.Mailbox getSearchMailbox(long)>(l0);

        l1 = r5.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r13 = new com.android.emailcommon.service.SearchParams;

        $l3 = r3.<com.android.emailcommon.provider.Mailbox: long mId>;

        specialinvoke $r13.<com.android.emailcommon.service.SearchParams: void <init>(long,java.lang.String,long)>($l3, r4, l1);

        r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams> = $r13;

        r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r14 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        $i5 = $r14.<com.android.emailcommon.service.SearchParams: int mOffset>;

        if $i5 != 0 goto label3;

        $r19 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "deleting existing search results.", $r18);

        r7 = virtualinvoke r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r23 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r23, $r26, null);

        $r24 = new android.content.ContentValues;

        specialinvoke $r24.<android.content.ContentValues: void <init>(int)>(1);

        r8 = $r24;

        $r25 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        $r28 = $r25.<com.android.emailcommon.service.SearchParams: java.lang.String mFilter>;

        virtualinvoke r8.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("displayName", $r28);

        $r29 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r27 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r29, l1);

        virtualinvoke r7.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r27, r8, null, null);

     label3:
        specialinvoke r0.<com.android.email.provider.EmailProvider: void runSearchQuery(android.content.Context,long,long)>(r6, l0, l1);

        $r15 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $l4 = r5.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r17 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r15, $l4);

        $r16 = specialinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor uiQuery(int,android.net.Uri,java.lang.String[],boolean)>(36870, $r17, r2, 0);

        return $r16;
    }

    private int uiDeleteAccount(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1, $r5, r11;
        android.content.Context r2;
        long l0;
        com.android.emailcommon.provider.Account r3;
        java.lang.String $r4, $r10;
        android.content.ContentResolver $r6;
        com.android.email.SecurityPolicy $r7;
        java.lang.Object[] $r8;
        java.lang.Exception $r9, r12;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

     label1:
        r3 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r2, l0);

        if r3 != null goto label3;

     label2:
        return 0;

     label3:
        staticinvoke <com.android.email.provider.EmailProvider: void deleteAccountData(android.content.Context,long)>(r2, l0);

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        r11 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r5, l0);

        $r6 = virtualinvoke r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r6.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r11, null, null);

        staticinvoke <com.android.email.provider.AccountBackupRestore: void backup(android.content.Context)>(r2);

        $r7 = staticinvoke <com.android.email.SecurityPolicy: com.android.email.SecurityPolicy getInstance(android.content.Context)>(r2);

        virtualinvoke $r7.<com.android.email.SecurityPolicy: void reducePolicies()>();

        staticinvoke <com.android.email2.ui.MailActivityEmail: boolean setServicesEnabledSync(android.content.Context)>(r2);

     label4:
        return 1;

     label5:
        $r9 := @caughtexception;

        r12 = $r9;

        $r10 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r12;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r10, "Exception while deleting account", $r8);

        return 0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private int uiDeleteAccountData(android.net.Uri)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        android.content.Context r2;
        long l0;
        com.android.emailcommon.provider.Account r3;
        java.lang.String $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.net.Uri;

        r2 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r4);

        r3 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r2, l0);

        if r3 != null goto label1;

        return 0;

     label1:
        staticinvoke <com.android.email.provider.EmailProvider: void deleteAccountData(android.content.Context,long)>(r2, l0);

        return 1;
    }

    private static void decodeEmailAddresses(android.content.ContentValues)
    {
        android.content.ContentValues r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, r7, r8, r9, r10;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: android.content.ContentValues;

        $z0 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("toList");

        if $z0 == 0 goto label1;

        r1 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("toList");

        $r6 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String fromHeaderToString(java.lang.String)>(r1);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("toList", $r6);

     label1:
        $z1 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("fromList");

        if $z1 == 0 goto label2;

        r7 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("fromList");

        $r5 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String fromHeaderToString(java.lang.String)>(r7);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("fromList", $r5);

     label2:
        $z2 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("ccList");

        if $z2 == 0 goto label3;

        r8 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("ccList");

        $r4 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String fromHeaderToString(java.lang.String)>(r8);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("ccList", $r4);

     label3:
        $z3 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("bccList");

        if $z3 == 0 goto label4;

        r9 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("bccList");

        $r3 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String fromHeaderToString(java.lang.String)>(r9);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("bccList", $r3);

     label4:
        $z4 = virtualinvoke r0.<android.content.ContentValues: boolean containsKey(java.lang.String)>("replyToList");

        if $z4 == 0 goto label5;

        r10 = virtualinvoke r0.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("replyToList");

        $r2 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String fromHeaderToString(java.lang.String)>(r10);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("replyToList", $r2);

     label5:
        return;
    }

    private static void deleteAccountData(android.content.Context, long)
    {
        android.content.Context r0;
        long l0;
        android.os.RemoteException $r1;
        java.lang.String r2, $r11, $r13, $r17;
        android.content.ContentResolver r3;
        java.lang.String[] r4, $r8, $r10, $r12;
        android.content.ContentValues r5, $r16;
        com.android.emailcommon.service.EmailServiceProxy r6;
        android.net.Uri $r9, $r14, $r15;
        java.lang.Object[] $r18;
        java.lang.Long $r19;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $r9 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r10 = <com.android.email.provider.EmailProvider: java.lang.String[] ACCOUNT_EMAIL_PROJECTION>;

        $r8 = newarray (java.lang.String)[1];

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r8[0] = $r11;

        r2 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String getFirstRowString(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int)>(r0, $r9, $r10, "_id =?", $r8, null, 0);

        if r2 != null goto label1;

        $r17 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        $r18 = newarray (java.lang.Object)[1];

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r18[0] = $r19;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r17, "Could not find email address for account %d", $r18);

     label1:
        staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: void deleteAllAccountAttachmentFiles(android.content.Context,long)>(r0, l0);

        r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = newarray (java.lang.String)[1];

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r12[0] = $r13;

        r4 = $r12;

        $r14 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        virtualinvoke r3.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r14, "accountKey=?", r4);

        $r16 = new android.content.ContentValues;

        specialinvoke $r16.<android.content.ContentValues: void <init>()>();

        r5 = $r16;

        virtualinvoke r5.<android.content.ContentValues: void putNull(java.lang.String)>("syncKey");

        $r15 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        virtualinvoke r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r15, r5, "_id =?", r4);

        if r2 == null goto label5;

        r6 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.emailcommon.service.EmailServiceProxy getServiceForAccount(android.content.Context,long)>(r0, l0);

        if r6 == null goto label5;

     label2:
        interfaceinvoke r6.<com.android.emailcommon.service.IEmailService: void deleteExternalAccountPIMData(java.lang.String)>(r2);

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void notifyWidgets(long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l3, $l5;
        android.content.Context r1;
        int[] r2, $r11;
        java.lang.String[][] r3, r4;
        int i1, i2, $i4;
        java.lang.String[] r5, $r24, $r25;
        android.database.Cursor r6;
        java.lang.Throwable r7, $r37;
        android.appwidget.AppWidgetManager $r8, $r9, $r34;
        android.content.ComponentName $r10, $r33;
        java.util.ArrayList $r12, $r19, $r29, $r30, $r32;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.Long $r13, $r28, $r31, $r35;
        android.content.Intent $r14, r40;
        android.net.Uri $r16, $r21, $r26;
        java.lang.String $r18, $r20, $r22, $r23, $r27, $r38;
        java.lang.NumberFormatException $r36;

        r0 := @this: com.android.email.provider.EmailProvider;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r8 = r0.<com.android.email.provider.EmailProvider: android.appwidget.AppWidgetManager mAppWidgetManager>;

        if $r8 != null goto label01;

        $r34 = staticinvoke <android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>(r1);

        r0.<com.android.email.provider.EmailProvider: android.appwidget.AppWidgetManager mAppWidgetManager> = $r34;

        $r33 = new android.content.ComponentName;

        $r38 = staticinvoke <com.android.email.provider.WidgetProvider: java.lang.String getProviderName(android.content.Context)>(r1);

        specialinvoke $r33.<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>(r1, $r38);

        r0.<com.android.email.provider.EmailProvider: android.content.ComponentName mEmailComponent> = $r33;

     label01:
        $r9 = r0.<com.android.email.provider.EmailProvider: android.appwidget.AppWidgetManager mAppWidgetManager>;

        $r10 = r0.<com.android.email.provider.EmailProvider: android.content.ComponentName mEmailComponent>;

        r2 = virtualinvoke $r9.<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>($r10);

        $r11 = r0.<com.android.email.provider.EmailProvider: int[] mSavedWidgetIds>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r2, $r11);

        if $z0 != 0 goto label15;

        r0.<com.android.email.provider.EmailProvider: int[] mSavedWidgetIds> = r2;

        r3 = staticinvoke <com.android.mail.widget.BaseWidgetProvider: java.lang.String[][] getWidgetInfo(android.content.Context,int[])>(r1, r2);

        $r19 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes>;

        virtualinvoke $r19.<java.util.ArrayList: void clear()>();

        r4 = r3;

        i1 = lengthof r4;

        i2 = 0;

     label02:
        if i2 >= i1 goto label15;

        r5 = r4[i2];

     label03:
        if r5 == null goto label04;

        $r22 = r5[1];

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        if $z2 == 0 goto label05;

     label04:
        goto label14;

     label05:
        $r20 = r5[1];

        $r21 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r20);

        $r23 = virtualinvoke $r21.<android.net.Uri: java.lang.String getLastPathSegment()>();

        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r23);

        $z3 = staticinvoke <com.android.email.provider.EmailProvider: boolean isCombinedMailbox(long)>(l3);

        if $z3 != 0 goto label06;

        $r32 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes>;

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $z6 = virtualinvoke $r32.<java.util.ArrayList: boolean contains(java.lang.Object)>($r31);

        if $z6 != 0 goto label12;

        $r30 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes>;

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke $r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r35);

        goto label12;

     label06:
        $i4 = staticinvoke <com.android.email.provider.EmailProvider: int getVirtualMailboxType(long)>(l3);

        lookupswitch($i4)
        {
            case 0: goto label07;
            default: goto label12;
        };

     label07:
        $r26 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r24 = <com.android.emailcommon.provider.Mailbox: java.lang.String[] ID_PROJECTION>;

        $r25 = newarray (java.lang.String)[1];

        $r27 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        $r25[0] = $r27;

        r6 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r26, $r24, "type=?", $r25, null);

     label08:
        $z4 = interfaceinvoke r6.<android.database.Cursor: boolean moveToNext()>();

        if $z4 == 0 goto label09;

        $r29 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes>;

        $l5 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke $r29.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        goto label08;

     label09:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        goto label12;

     label10:
        $r37 := @caughtexception;

        r7 = $r37;

     label11:
        interfaceinvoke r6.<android.database.Cursor: void close()>();

        throw r7;

     label12:
        goto label14;

     label13:
        $r36 := @caughtexception;

     label14:
        i2 = i2 + 1;

        goto label02;

     label15:
        $r12 = r0.<com.android.email.provider.EmailProvider: java.util.ArrayList mWidgetNotifyMailboxes>;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $z1 = virtualinvoke $r12.<java.util.ArrayList: boolean contains(java.lang.Object)>($r13);

        if $z1 == 0 goto label16;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("com.android.mail.ACTION_NOTIFY_DATASET_CHANGED");

        r40 = $r14;

        $r16 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uifolder", l0);

        virtualinvoke r40.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("folderUri", $r16);

        $r18 = <com.android.email.provider.EmailProvider: java.lang.String EMAIL_APP_MIME_TYPE>;

        virtualinvoke r40.<android.content.Intent: android.content.Intent setType(java.lang.String)>($r18);

        virtualinvoke r1.<android.content.Context: void sendBroadcast(android.content.Intent)>(r40);

     label16:
        return;

        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.NumberFormatException from label03 to label04 with label13;
        catch java.lang.NumberFormatException from label05 to label12 with label13;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        com.android.email.provider.EmailProvider r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, $r10;
        android.content.Context r4;
        java.util.Iterator r5;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r6;
        com.android.emailcommon.provider.HostAuth r7;
        java.lang.Throwable r8, $r35;
        java.util.Collection $r9;
        boolean $z0, $z1, $z2;
        android.net.Uri $r11;
        int $i0;
        java.lang.StringBuilder $r12, $r15, $r17, $r18, $r19, $r20, $r24, $r25, $r26, $r30, $r31, $r33, $r34;
        com.android.emailcommon.provider.Account $r13, r37;
        java.lang.String $r14, $r16, $r21, $r22, $r23, $r27, $r29, $r32;
        long $l1;
        java.lang.Object $r28;
        android.database.Cursor r36;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Installed services:");

        $r9 = staticinvoke <com.android.email.service.EmailServiceUtils: java.util.Collection getServiceInfoList(android.content.Context)>(r4);

        r5 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r28 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.email.service.EmailServiceUtils$EmailServiceInfo) $r28;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);

        goto label01;

     label02:
        virtualinvoke r2.<java.io.PrintWriter: void println()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("Accounts: ");

        $r11 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r10 = <com.android.emailcommon.provider.Account: java.lang.String[] CONTENT_PROJECTION>;

        r36 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r11, $r10, null, null, null);

        $i0 = interfaceinvoke r36.<android.database.Cursor: int getCount()>();

        if $i0 != 0 goto label03;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("  None");

     label03:
        $z1 = interfaceinvoke r36.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label07;

        $r13 = new com.android.emailcommon.provider.Account;

        specialinvoke $r13.<com.android.emailcommon.provider.Account: void <init>()>();

        r37 = $r13;

        virtualinvoke r37.<com.android.emailcommon.provider.Account: void restore(android.database.Cursor)>(r36);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Account ");

        $r14 = r37.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $l1 = r37.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        r7 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r4, $l1);

        if r7 == null goto label06;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Protocol = ");

        $r21 = r7.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r22 = r37.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r22);

        if $z2 == 0 goto label04;

        $r29 = "";

        goto label05;

     label04:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" version ");

        $r23 = r37.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion>;

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r30 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r27);

     label06:
        goto label03;

     label07:
        interfaceinvoke r36.<android.database.Cursor: void close()>();

        goto label10;

     label08:
        $r35 := @caughtexception;

        r8 = $r35;

     label09:
        interfaceinvoke r36.<android.database.Cursor: void close()>();

        throw r8;

     label10:
        return;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public synchronized android.os.Handler getDelayedSyncHandler()
    {
        com.android.email.provider.EmailProvider r0;
        android.os.Handler $r1, $r2, $r3;
        android.content.Context $r4;
        android.os.Looper $r5;
        com.android.email.provider.EmailProvider$7 $r6;

        r0 := @this: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mDelayedSyncHandler>;

        if $r1 != null goto label1;

        $r3 = new android.os.Handler;

        $r4 = virtualinvoke r0.<com.android.email.provider.EmailProvider: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.os.Looper getMainLooper()>();

        $r6 = new com.android.email.provider.EmailProvider$7;

        specialinvoke $r6.<com.android.email.provider.EmailProvider$7: void <init>(com.android.email.provider.EmailProvider)>(r0);

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper,android.os.Handler$Callback)>($r5, $r6);

        r0.<com.android.email.provider.EmailProvider: android.os.Handler mDelayedSyncHandler> = $r3;

     label1:
        $r2 = r0.<com.android.email.provider.EmailProvider: android.os.Handler mDelayedSyncHandler>;

        return $r2;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        android.net.Uri $r4;

        r0 := @this: com.android.email.provider.EmailProvider;

        r1 := @parameter0: android.content.SharedPreferences;

        r2 := @parameter1: java.lang.String;

        $r3 = "removal-action";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label1;

        $r5 = "conversation-list-swipe";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $r6 = "conversation-list-sender-image";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label1;

        $r7 = "default-reply-all";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label1;

        $r8 = "conversation-overview-mode";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 != 0 goto label1;

        $r9 = "auto-advance-mode";

        $z5 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 != 0 goto label1;

        $r10 = "snap-header-mode";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 != 0 goto label1;

        $r11 = "confirm-delete";

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 != 0 goto label1;

        $r12 = "confirm-archive";

        $z8 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z8 != 0 goto label1;

        $r13 = "confirm-send";

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z9 == 0 goto label2;

     label1:
        $r4 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_ALL_ACCOUNTS_NOTIFIER>;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>($r4, null);

     label2:
        return;
    }

    static void access$000(com.android.email.provider.EmailProvider, long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIAccount(long)>(l0);

        return;
    }

    static java.lang.String access$200()
    {
        java.lang.String $r0;

        $r0 = <com.android.email.provider.EmailProvider: java.lang.String TAG>;

        return $r0;
    }

    static android.net.Uri access$300()
    {
        android.net.Uri $r0;

        $r0 = <com.android.email.provider.EmailProvider: android.net.Uri UIPROVIDER_CONVERSATION_NOTIFIER>;

        return $r0;
    }

    static void access$400(com.android.email.provider.EmailProvider, android.net.Uri, java.lang.String)
    {
        com.android.email.provider.EmailProvider r0;
        android.net.Uri r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUI(android.net.Uri,java.lang.String)>(r1, r2);

        return;
    }

    static android.database.sqlite.SQLiteDatabase access$500(com.android.email.provider.EmailProvider)
    {
        com.android.email.provider.EmailProvider r0;
        android.database.sqlite.SQLiteDatabase $r1;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: android.database.sqlite.SQLiteDatabase mDatabase>;

        return $r1;
    }

    static void access$600(com.android.email.provider.EmailProvider, long, long)
    {
        com.android.email.provider.EmailProvider r0;
        long l0, l1;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<com.android.email.provider.EmailProvider: void notifyUIFolder(long,long)>(l0, l1);

        return;
    }

    static com.android.emailcommon.service.SearchParams access$700(com.android.email.provider.EmailProvider)
    {
        com.android.email.provider.EmailProvider r0;
        com.android.emailcommon.service.SearchParams $r1;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: com.android.emailcommon.service.SearchParams mSearchParams>;

        return $r1;
    }

    static java.util.Set access$800(com.android.email.provider.EmailProvider)
    {
        com.android.email.provider.EmailProvider r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.email.provider.EmailProvider;

        $r1 = r0.<com.android.email.provider.EmailProvider: java.util.Set mDelayedSyncRequests>;

        return $r1;
    }

    static void <clinit>()
    {
        android.util.SparseArray r0, $r3;
        java.lang.String $r1, $r9, $r12, $r15, $r39, $r42, $r52, $r53, $r91, $r117, $r126, $r134;
        java.lang.String[] $r2, $r127, $r128;
        android.content.UriMatcher $r4;
        java.lang.Object $r5;
        android.content.ContentValues $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r54, $r55, $r57, $r58, $r61, $r62, $r63, $r64, $r66, $r67, $r69, $r70, $r72, $r73, $r75, $r77, $r78, $r80, $r81, $r83, $r84, $r86, $r88, $r89, $r90, $r92, $r94, $r95, $r97, $r98, $r100, $r101, $r103, $r104, $r106, $r107, $r109, $r110, $r111, $r112, $r114, $r115, $r116, $r118, $r119, $r121, $r122, $r129, $r130, $r131, $r132, $r133;
        int[] $r56, $r59, $r60, $r65, $r68, $r71, $r74, $r76, $r79, $r82, $r85, $r87, $r93, $r96, $r99, $r102, $r105, $r108, $r113, $r120, $r123;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        android.net.Uri $r124, $r125;
        java.util.regex.Pattern $r135;

        <com.android.email.provider.EmailProvider: java.lang.String MAILBOXES_FOR_ACCOUNT_SELECTION> = "accountKey=?";

        <com.android.email.provider.EmailProvider: java.lang.String SEARCH_MAILBOX_SERVER_ID> = "__search_mailbox__";

        <com.android.email.provider.EmailProvider: int SEARCH_MORE_INCREMENT> = 10;

        <com.android.email.provider.EmailProvider: int VISIBLE_LIMIT_INCREMENT> = 10;

        <com.android.email.provider.EmailProvider: int NOTIFY_FOLDER_LOOP_MESSAGE_ID> = 0;

        <com.android.email.provider.EmailProvider: java.lang.String PICKER_HEADER_ID> = "picker_header_id";

        <com.android.email.provider.EmailProvider: java.lang.String PICKER_MAILBOX_TYPE> = "picker_mailbox_type";

        <com.android.email.provider.EmailProvider: java.lang.String PICKER_UI_ACCOUNT> = "picker_ui_account";

        <com.android.email.provider.EmailProvider: int MESSAGE_KEYS_ACCOUNT_KEY_COLUMN> = 1;

        <com.android.email.provider.EmailProvider: int MESSAGE_KEYS_MAILBOX_KEY_COLUMN> = 0;

        <com.android.email.provider.EmailProvider: long COMBINED_ACCOUNT_ID> = 268435456L;

        <com.android.email.provider.EmailProvider: java.lang.String LEGACY_AUTHORITY> = "ui.email.android.com";

        <com.android.email.provider.EmailProvider: java.lang.String MAILBOX_ORDER_BY> = "CASE type WHEN 0 THEN 0 WHEN 3 THEN 1 WHEN 4 THEN 2 WHEN 5 THEN 3 WHEN 6 THEN 4 WHEN 7 THEN 5 ELSE 10 END ,displayName COLLATE LOCALIZED ASC";

        <com.android.email.provider.EmailProvider: java.lang.String TOTAL_COUNT> = "CASE WHEN totalCount<0 OR type=3 OR type=4 OR type=6 THEN messageCount ELSE totalCount END";

        <com.android.email.provider.EmailProvider: java.lang.String FOLDER_ICON> = "CASE type WHEN 0 THEN 2130837617 WHEN 3 THEN 2130837614 WHEN 4 THEN 2130837618 WHEN 5 THEN 2130837620 WHEN 6 THEN 2130837623 WHEN 9 THEN 2130837622 ELSE 2130837615 END";

        <com.android.email.provider.EmailProvider: java.lang.String FOLDER_CAPABILITIES> = "CASE WHEN (flags&16) !=0 THEN 8 ELSE 0 END";

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_FLAGS> = "CASE WHEN (flags&4) !=0 THEN 16 ELSE 0 END";

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_DRAFT_TYPE> = "CASE WHEN (flags&1048576) !=0 THEN 1 WHEN (flags&2097152) !=0 THEN 3 WHEN (flags&1) !=0 THEN 2 WHEN (flags&2) !=0 THEN 4 ELSE 0 END";

        <com.android.email.provider.EmailProvider: java.lang.String CONVERSATION_FLAGS> = "CASE WHEN (flags&4) !=0 THEN 16 ELSE 0 END + CASE WHEN (flags&524288) !=0 THEN 8 ELSE 0 END + CASE WHEN (flags&262144) !=0 THEN 4 ELSE 0 END";

        <com.android.email.provider.EmailProvider: int INDEX_SYNC_KEY> = 2;

        <com.android.email.provider.EmailProvider: int INDEX_EMAIL_ADDRESS> = 1;

        <com.android.email.provider.EmailProvider: java.lang.String GET_ACCOUNT_DETAILS> = "SELECT h.protocol, a.emailAddress, a.syncKey FROM Account AS a INNER JOIN HostAuth AS h ON a.hostAuthKeyRecv=h._id WHERE a._id=?";

        <com.android.email.provider.EmailProvider: int INDEX_ACCOUNT_KEY> = 2;

        <com.android.email.provider.EmailProvider: int INDEX_MAILBOX_KEY> = 1;

        <com.android.email.provider.EmailProvider: int INDEX_PROTOCOL> = 0;

        <com.android.email.provider.EmailProvider: java.lang.String GET_MESSAGE_DETAILS> = "SELECT h.protocol, m.mailboxKey, a._id FROM Message AS m INNER JOIN Account AS a ON m.accountKey=a._id INNER JOIN HostAuth AS h ON a.hostAuthKeyRecv=h._id WHERE m._id=?";

        <com.android.email.provider.EmailProvider: java.lang.String ACCOUNT_INTEGRITY_SQL> = "select count(*) from (select count(*) as dupes from Mailbox where accountKey=? group by serverId) where dupes > 1";

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_CHANGE_LOG_TABLE_INSERT_PREFIX> = "insert into %s (messageKey,messageServerId,accountKey,status,";

        <com.android.email.provider.EmailProvider: java.lang.String SYNC_STATUS_CALLBACK_METHOD> = "sync_status";

        <com.android.email.provider.EmailProvider: java.lang.String IS_UIPROVIDER> = "is_uiprovider";

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_URI_PARAMETER_MAILBOX_ID> = "mailboxId";

        <com.android.email.provider.EmailProvider: java.lang.String DELETE_BODY> = "delete from Body where messageKey=";

        <com.android.email.provider.EmailProvider: java.lang.String DELETE_ORPHAN_BODIES> = "delete from Body where messageKey in (select messageKey from Body except select _id from Message)";

        <com.android.email.provider.EmailProvider: java.lang.String ORPHAN_BODY_MESSAGE_ID_SELECT> = "select messageKey from Body except select _id from Message";

        <com.android.email.provider.EmailProvider: java.lang.String DELETED_MESSAGE_INSERT> = "insert or replace into Message_Deletes select * from Message where _id=";

        <com.android.email.provider.EmailProvider: java.lang.String UPDATED_MESSAGE_DELETE> = "delete from Message_Updates where _id=";

        <com.android.email.provider.EmailProvider: java.lang.String UPDATED_MESSAGE_INSERT> = "insert or ignore into Message_Updates select * from Message where _id=";

        <com.android.email.provider.EmailProvider: int BASE_SHIFT> = 12;

        <com.android.email.provider.EmailProvider: int CREDENTIAL_ID> = 45057;

        <com.android.email.provider.EmailProvider: int CREDENTIAL> = 45056;

        <com.android.email.provider.EmailProvider: int CREDENTIAL_BASE> = 45056;

        <com.android.email.provider.EmailProvider: int BODY_TEXT> = 40963;

        <com.android.email.provider.EmailProvider: int BODY_HTML> = 40962;

        <com.android.email.provider.EmailProvider: int BODY_ID> = 40961;

        <com.android.email.provider.EmailProvider: int BODY> = 40960;

        <com.android.email.provider.EmailProvider: int BODY_BASE> = 40960;

        <com.android.email.provider.EmailProvider: int UI_ACCTSETTINGS> = 36886;

        <com.android.email.provider.EmailProvider: int UI_INBOX> = 36885;

        <com.android.email.provider.EmailProvider: int UI_PURGE_FOLDER> = 36884;

        <com.android.email.provider.EmailProvider: int UI_ALL_FOLDERS> = 36883;

        <com.android.email.provider.EmailProvider: int UI_FULL_FOLDERS> = 36882;

        <com.android.email.provider.EmailProvider: int UI_DEFAULT_RECENT_FOLDERS> = 36881;

        <com.android.email.provider.EmailProvider: int UI_RECENT_FOLDERS> = 36880;

        <com.android.email.provider.EmailProvider: int UI_CONVERSATION> = 36879;

        <com.android.email.provider.EmailProvider: int UI_FOLDER_LOAD_MORE> = 36878;

        <com.android.email.provider.EmailProvider: int UI_ACCOUNT_DATA> = 36877;

        <com.android.email.provider.EmailProvider: int UI_SEARCH> = 36876;

        <com.android.email.provider.EmailProvider: int UI_ATTACHMENT_BY_CID> = 36875;

        <com.android.email.provider.EmailProvider: int UI_ATTACHMENT> = 36874;

        <com.android.email.provider.EmailProvider: int UI_ATTACHMENTS> = 36873;

        <com.android.email.provider.EmailProvider: int UI_ACCTS> = 36872;

        <com.android.email.provider.EmailProvider: int UI_ACCOUNT> = 36871;

        <com.android.email.provider.EmailProvider: int UI_FOLDER> = 36870;

        <com.android.email.provider.EmailProvider: int UI_FOLDER_REFRESH> = 36869;

        <com.android.email.provider.EmailProvider: int UI_UNDO> = 36868;

        <com.android.email.provider.EmailProvider: int UI_MESSAGE> = 36867;

        <com.android.email.provider.EmailProvider: int UI_MESSAGES> = 36866;

        <com.android.email.provider.EmailProvider: int UI_SUBFOLDERS> = 36865;

        <com.android.email.provider.EmailProvider: int UI_FOLDERS> = 36864;

        <com.android.email.provider.EmailProvider: int UI_BASE> = 36864;

        <com.android.email.provider.EmailProvider: int QUICK_RESPONSE_ACCOUNT_ID> = 32770;

        <com.android.email.provider.EmailProvider: int QUICK_RESPONSE_ID> = 32769;

        <com.android.email.provider.EmailProvider: int QUICK_RESPONSE> = 32768;

        <com.android.email.provider.EmailProvider: int QUICK_RESPONSE_BASE> = 32768;

        <com.android.email.provider.EmailProvider: int POLICY_ID> = 28673;

        <com.android.email.provider.EmailProvider: int POLICY> = 28672;

        <com.android.email.provider.EmailProvider: int POLICY_BASE> = 28672;

        <com.android.email.provider.EmailProvider: int DELETED_MESSAGE_ID> = 24577;

        <com.android.email.provider.EmailProvider: int DELETED_MESSAGE> = 24576;

        <com.android.email.provider.EmailProvider: int DELETED_MESSAGE_BASE> = 24576;

        <com.android.email.provider.EmailProvider: int UPDATED_MESSAGE_ID> = 20481;

        <com.android.email.provider.EmailProvider: int UPDATED_MESSAGE> = 20480;

        <com.android.email.provider.EmailProvider: int UPDATED_MESSAGE_BASE> = 20480;

        <com.android.email.provider.EmailProvider: int HOSTAUTH_ID> = 16385;

        <com.android.email.provider.EmailProvider: int HOSTAUTH> = 16384;

        <com.android.email.provider.EmailProvider: int HOSTAUTH_BASE> = 16384;

        <com.android.email.provider.EmailProvider: int ATTACHMENTS_CACHED_FILE_ACCESS> = 12291;

        <com.android.email.provider.EmailProvider: int ATTACHMENTS_MESSAGE_ID> = 12290;

        <com.android.email.provider.EmailProvider: int ATTACHMENT_ID> = 12289;

        <com.android.email.provider.EmailProvider: int ATTACHMENT> = 12288;

        <com.android.email.provider.EmailProvider: int ATTACHMENT_BASE> = 12288;

        <com.android.email.provider.EmailProvider: int MESSAGE_STATE_CHANGE> = 8197;

        <com.android.email.provider.EmailProvider: int MESSAGE_MOVE> = 8196;

        <com.android.email.provider.EmailProvider: int MESSAGE_SELECTION> = 8195;

        <com.android.email.provider.EmailProvider: int SYNCED_MESSAGE_ID> = 8194;

        <com.android.email.provider.EmailProvider: int MESSAGE_ID> = 8193;

        <com.android.email.provider.EmailProvider: int MESSAGE> = 8192;

        <com.android.email.provider.EmailProvider: int MESSAGE_BASE> = 8192;

        <com.android.email.provider.EmailProvider: int MAILBOX_MESSAGE_COUNT> = 4100;

        <com.android.email.provider.EmailProvider: int MAILBOX_MOST_RECENT_MESSAGE> = 4099;

        <com.android.email.provider.EmailProvider: int MAILBOX_NOTIFICATION> = 4098;

        <com.android.email.provider.EmailProvider: int MAILBOX_ID> = 4097;

        <com.android.email.provider.EmailProvider: int MAILBOX> = 4096;

        <com.android.email.provider.EmailProvider: int MAILBOX_BASE> = 4096;

        <com.android.email.provider.EmailProvider: int ACCOUNT_PICK_SENT_FOLDER> = 4;

        <com.android.email.provider.EmailProvider: int ACCOUNT_PICK_TRASH_FOLDER> = 3;

        <com.android.email.provider.EmailProvider: int ACCOUNT_CHECK> = 2;

        <com.android.email.provider.EmailProvider: int ACCOUNT_ID> = 1;

        <com.android.email.provider.EmailProvider: int ACCOUNT> = 0;

        <com.android.email.provider.EmailProvider: int ACCOUNT_BASE> = 0;

        <com.android.email.provider.EmailProvider: java.lang.String WHERE_ID> = "_id=?";

        <com.android.email.provider.EmailProvider: int ORPHANS_MAILBOX_KEY> = 1;

        <com.android.email.provider.EmailProvider: int ORPHANS_ID> = 0;

        <com.android.email.provider.EmailProvider: java.lang.String NOTIFICATION_OP_UPDATE> = "update";

        <com.android.email.provider.EmailProvider: java.lang.String NOTIFICATION_OP_INSERT> = "insert";

        <com.android.email.provider.EmailProvider: java.lang.String NOTIFICATION_OP_DELETE> = "delete";

        <com.android.email.provider.EmailProvider: java.lang.String EMAIL_ATTACHMENT_MIME_TYPE> = "vnd.android.cursor.item/email-attachment";

        <com.android.email.provider.EmailProvider: java.lang.String EMAIL_MESSAGE_MIME_TYPE> = "vnd.android.cursor.item/email-message";

        <com.android.email.provider.EmailProvider: java.lang.String ACTION_NOTIFY_MESSAGE_LIST_DATASET_CHANGED> = "com.android.email.MESSAGE_LIST_DATASET_CHANGED";

        <com.android.email.provider.EmailProvider: java.lang.String ACCOUNT_MANAGER_JSON_TAG> = "accountJson";

        <com.android.email.provider.EmailProvider: java.lang.String BACKUP_DATABASE_NAME> = "EmailProviderBackup.db";

        <com.android.email.provider.EmailProvider: java.lang.String BODY_DATABASE_NAME> = "EmailProviderBody.db";

        <com.android.email.provider.EmailProvider: java.lang.String DATABASE_NAME> = "EmailProvider.db";

        <com.android.email.provider.EmailProvider: long SYNC_DELAY_MILLIS> = 30000L;

        $r1 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.email.provider.EmailProvider: java.lang.String TAG> = $r1;

        <com.android.email.provider.EmailProvider: java.lang.String QUERY_UIREFRESH> = "uirefresh";

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "_id";

        $r2[1] = "mailboxKey";

        <com.android.email.provider.EmailProvider: java.lang.String[] ORPHANS_PROJECTION> = $r2;

        $r3 = new android.util.SparseArray;

        specialinvoke $r3.<android.util.SparseArray: void <init>(int)>(11);

        r0 = $r3;

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(0, "Account");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(1, "Mailbox");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(2, "Message");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(3, "Attachment");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(4, "HostAuth");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(5, "Message_Updates");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(6, "Message_Deletes");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(7, "Policy");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(8, "QuickResponse");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(9, null);

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(10, "Body");

        virtualinvoke r0.<android.util.SparseArray: void put(int,java.lang.Object)>(11, "Credential");

        <com.android.email.provider.EmailProvider: android.util.SparseArray TABLE_NAMES> = r0;

        $r4 = new android.content.UriMatcher;

        specialinvoke $r4.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.android.email.provider.EmailProvider: android.content.UriMatcher sURIMatcher> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        <com.android.email.provider.EmailProvider: java.lang.Object sDatabaseLock> = $r5;

        $r6 = new android.content.ContentValues;

        specialinvoke $r6.<android.content.ContentValues: void <init>()>();

        <com.android.email.provider.EmailProvider: android.content.ContentValues EMPTY_CONTENT_VALUES> = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") values (%s, (select syncServerId from Message where _id=%s),(select accountKey from Message where _id=%s),");

        $r9 = <com.android.emailcommon.provider.MessageMove: java.lang.String STATUS_NONE_STRING>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_CHANGE_LOG_TABLE_VALUES_PREFIX> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert into %s (messageKey,messageServerId,accountKey,status,srcFolderKey,dstFolderKey,srcFolderServerId,dstFolderServerId");

        $r15 = <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_CHANGE_LOG_TABLE_VALUES_PREFIX>;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(select ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=%s),");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%d,");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(select ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serverId");

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mailbox");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=(select ");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailboxKey");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=%s)),");

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(select ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("serverId");

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mailbox");

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=%d))");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_MOVE_INSERT> = $r39;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert into %s (messageKey,messageServerId,accountKey,status,oldFlagRead,newFlagRead,oldFlagFavorite,newFlagFavorite");

        $r42 = <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_CHANGE_LOG_TABLE_VALUES_PREFIX>;

        $r43 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(select ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagRead");

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message");

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=%s),");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%d,");

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(select ");

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flagFavorite");

        $r49 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Message");

        $r55 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where _id=%s),");

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%d)");

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String MESSAGE_STATE_CHANGE_INSERT> = $r53;

        $r52 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(0);

        <com.android.email.provider.EmailProvider: java.lang.String NOT_A_DRAFT_STRING> = $r52;

        $r59 = newarray (int)[9];

        $r59[0] = -9326937;

        $r59[1] = -10348263;

        $r59[2] = -15186385;

        $r59[3] = -4223406;

        $r59[4] = -16769159;

        $r59[5] = -5722174;

        $r59[6] = -9739068;

        $r59[7] = -9206951;

        $r59[8] = -6467420;

        <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS> = $r59;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@CASE (accountKey - 1) % ");

        $r56 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i0 = lengthof $r56;

        $r62 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r61 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 0 THEN ");

        $r60 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i2 = $r60[0];

        $r66 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 1 THEN ");

        $r68 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i1 = $r68[1];

        $r63 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 2 THEN ");

        $r65 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i4 = $r65[2];

        $r72 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 3 THEN ");

        $r74 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i3 = $r74[3];

        $r69 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 4 THEN ");

        $r71 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i6 = $r71[4];

        $r78 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 5 THEN ");

        $r79 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i5 = $r79[5];

        $r75 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 6 THEN ");

        $r76 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i8 = $r76[6];

        $r84 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 7 THEN ");

        $r85 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i7 = $r85[7];

        $r81 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 8 THEN ");

        $r82 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i10 = $r82[8];

        $r92 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" END");

        $r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String CONVERSATION_COLOR> = $r91;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@CASE (_id - 1) % ");

        $r87 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i9 = lengthof $r87;

        $r97 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 0 THEN ");

        $r96 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i12 = $r96[0];

        $r94 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 1 THEN ");

        $r93 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i11 = $r93[1];

        $r104 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 2 THEN ");

        $r102 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i14 = $r102[2];

        $r101 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 3 THEN ");

        $r99 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i13 = $r99[3];

        $r110 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r109 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 4 THEN ");

        $r108 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i16 = $r108[4];

        $r107 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 5 THEN ");

        $r105 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i15 = $r105[5];

        $r119 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r118 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 6 THEN ");

        $r120 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i18 = $r120[6];

        $r122 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r121 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 7 THEN ");

        $r123 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i19 = $r123[7];

        $r112 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHEN 8 THEN ");

        $r113 = <com.android.email.provider.EmailProvider: int[] ACCOUNT_COLORS>;

        $i17 = $r113[8];

        $r115 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r114 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" END");

        $r117 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String ACCOUNT_COLOR> = $r117;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r129 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CASE type WHEN 0 THEN 2 WHEN 3 THEN 4 WHEN 4 THEN 8 WHEN 5 THEN 16 WHEN 6 THEN 32 WHEN 7 THEN 64 WHEN 9 THEN 128 WHEN 10 THEN 2048 WHEN 8 THEN ");

        $i20 = staticinvoke <com.android.email.provider.EmailProvider: int getFolderTypeFromMailboxType(int)>(8);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r131 = virtualinvoke $r130.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ELSE ");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r133 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" END");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.email.provider.EmailProvider: java.lang.String FOLDER_TYPE> = $r134;

        $r135 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("<(?i)img\\s+");

        <com.android.email.provider.EmailProvider: java.util.regex.Pattern IMG_TAG_START_REGEX> = $r135;

        $r124 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://ui.email.android.com");

        <com.android.email.provider.EmailProvider: android.net.Uri BASE_EXTERNAL_URI> = $r124;

        $r125 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://ui.email2.android.com");

        <com.android.email.provider.EmailProvider: android.net.Uri BASE_EXTERAL_URI2> = $r125;

        $r126 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(268435456L);

        <com.android.email.provider.EmailProvider: java.lang.String COMBINED_ACCOUNT_ID_STRING> = $r126;

        $r127 = newarray (java.lang.String)[2];

        $r127[0] = "mailboxKey";

        $r127[1] = "accountKey";

        <com.android.email.provider.EmailProvider: java.lang.String[] MESSAGE_KEYS_PROJECTION> = $r127;

        $r128 = newarray (java.lang.String)[1];

        $r128[0] = "emailAddress";

        <com.android.email.provider.EmailProvider: java.lang.String[] ACCOUNT_EMAIL_PROJECTION> = $r128;

        return;
    }
}
