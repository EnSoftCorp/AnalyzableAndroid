public class com.android.bitmap.UnrefedPooledCache extends java.lang.Object implements com.android.bitmap.PooledCache
{
    private final java.util.LinkedHashMap mCache;
    private final java.util.concurrent.LinkedBlockingQueue mPool;
    private final int mTargetSize;
    private final android.util.LruCache mNonPooledCache;
    private static final boolean DEBUG;
    private static final java.lang.String TAG;

    public void <init>(int, float)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        int i0, i1, $i2;
        float f0, $f1, $f2;
        java.util.LinkedHashMap $r1;
        java.util.concurrent.LinkedBlockingQueue $r2;
        com.android.bitmap.UnrefedPooledCache$NonPooledCache $r3;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(0, 0.75F, 1);

        r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache> = $r1;

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r0.<com.android.bitmap.UnrefedPooledCache: java.util.concurrent.LinkedBlockingQueue mPool> = $r2;

        $f1 = (float) i0;

        $f2 = $f1 * f0;

        i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        if i1 <= 0 goto label1;

        $r3 = new com.android.bitmap.UnrefedPooledCache$NonPooledCache;

        specialinvoke $r3.<com.android.bitmap.UnrefedPooledCache$NonPooledCache: void <init>(com.android.bitmap.UnrefedPooledCache,int)>(r0, i1);

        r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache> = $r3;

        goto label2;

     label1:
        r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache> = null;

     label2:
        $i2 = i0 - i1;

        r0.<com.android.bitmap.UnrefedPooledCache: int mTargetSize> = $i2;

        return;
    }

    public com.android.bitmap.Poolable get(java.lang.Object, boolean)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.lang.Object r1, $r7, $r10;
        boolean z0;
        java.util.LinkedHashMap r2, $r5, $r6;
        com.android.bitmap.Poolable r3;
        java.lang.Throwable r4, $r11;
        android.util.LruCache $r8, $r9;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        staticinvoke <com.android.bitmap.util.Trace: void beginSection(java.lang.String)>("cache get");

        $r5 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.bitmap.Poolable) $r7;

        if r3 != null goto label2;

        $r8 = r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache>;

        if $r8 == null goto label2;

        $r9 = r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache>;

        $r10 = virtualinvoke $r9.<android.util.LruCache: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.bitmap.Poolable) $r10;

     label2:
        if z0 == 0 goto label3;

        if r3 == null goto label3;

        interfaceinvoke r3.<com.android.bitmap.Poolable: void acquireReference()>();

     label3:
        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        exitmonitor r2;

     label4:
        return r3;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public com.android.bitmap.Poolable put(java.lang.Object, com.android.bitmap.Poolable)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.lang.Object r1, $r9, $r11;
        com.android.bitmap.Poolable r2, r4;
        java.util.LinkedHashMap r3, $r6, $r10;
        java.lang.Throwable r5, $r12;
        boolean $z0;
        android.util.LruCache $r7, $r8;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.android.bitmap.Poolable;

        staticinvoke <com.android.bitmap.util.Trace: void beginSection(java.lang.String)>("cache put");

        if r2 != null goto label1;

        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        return null;

     label1:
        $r6 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        r3 = $r6;

        entermonitor $r6;

     label2:
        $z0 = interfaceinvoke r2.<com.android.bitmap.Poolable: boolean isEligibleForPooling()>();

        if $z0 == 0 goto label3;

        $r10 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        $r11 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r4 = (com.android.bitmap.Poolable) $r11;

        goto label5;

     label3:
        $r7 = r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache>;

        if $r7 == null goto label4;

        $r8 = r0.<com.android.bitmap.UnrefedPooledCache: android.util.LruCache mNonPooledCache>;

        $r9 = virtualinvoke $r8.<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        r4 = (com.android.bitmap.Poolable) $r9;

        goto label5;

     label4:
        r4 = null;

     label5:
        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        exitmonitor r3;

     label6:
        return r4;

     label7:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label8:
        throw r5;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void offer(com.android.bitmap.Poolable)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        com.android.bitmap.Poolable r1;
        int $i0;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        boolean $z0;
        java.util.concurrent.LinkedBlockingQueue $r7;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: com.android.bitmap.Poolable;

        staticinvoke <com.android.bitmap.util.Trace: void beginSection(java.lang.String)>("pool offer");

        $i0 = interfaceinvoke r1.<com.android.bitmap.Poolable: int getRefCount()>();

        if $i0 != 0 goto label1;

        $z0 = interfaceinvoke r1.<com.android.bitmap.Poolable: boolean isEligibleForPooling()>();

        if $z0 != 0 goto label2;

     label1:
        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected offer of an invalid object: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r7 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.concurrent.LinkedBlockingQueue mPool>;

        virtualinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: boolean offer(java.lang.Object)>(r1);

        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        return;
    }

    public com.android.bitmap.Poolable poll()
    {
        com.android.bitmap.UnrefedPooledCache r0;
        com.android.bitmap.Poolable r1, r6, $r17;
        java.util.LinkedHashMap r2, $r10, $r11, $r13;
        int i0, $i1, $i2, $i3, $i4;
        java.util.Map$Entry r3, r5;
        java.util.Iterator r4;
        java.lang.Throwable r7, $r20;
        java.util.concurrent.LinkedBlockingQueue $r8;
        java.lang.Object $r9, $r15, $r16, $r18, $r19;
        java.util.Set $r12;
        boolean $z0, $z1;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        staticinvoke <com.android.bitmap.util.Trace: void beginSection(java.lang.String)>("pool poll");

        $r8 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.concurrent.LinkedBlockingQueue mPool>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll()>();

        r1 = (com.android.bitmap.Poolable) $r9;

        if r1 == null goto label01;

        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        return r1;

     label01:
        $r10 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        r2 = $r10;

        entermonitor $r10;

     label02:
        i0 = 0;

        r3 = null;

        $r11 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        $r12 = virtualinvoke $r11.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r19;

        $r18 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (com.android.bitmap.Poolable) $r18;

        $i2 = interfaceinvoke r6.<com.android.bitmap.Poolable: int getRefCount()>();

        if $i2 > 0 goto label03;

        $z1 = interfaceinvoke r6.<com.android.bitmap.Poolable: boolean isEligibleForPooling()>();

        if $z1 != 0 goto label04;

        goto label03;

     label04:
        if r3 != null goto label05;

        r3 = r5;

     label05:
        $i4 = virtualinvoke r0.<com.android.bitmap.UnrefedPooledCache: int sizeOf(com.android.bitmap.Poolable)>(r6);

        i0 = i0 + $i4;

        $i3 = r0.<com.android.bitmap.UnrefedPooledCache: int mTargetSize>;

        if i0 <= $i3 goto label06;

        goto label07;

     label06:
        goto label03;

     label07:
        $i1 = r0.<com.android.bitmap.UnrefedPooledCache: int mTargetSize>;

        if i0 > $i1 goto label09;

        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        exitmonitor r2;

     label08:
        return null;

     label09:
        $r13 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke $r13.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>($r15);

        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        $r16 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (com.android.bitmap.Poolable) $r16;

        exitmonitor r2;

     label10:
        return $r17;

     label11:
        $r20 := @caughtexception;

        r7 = $r20;

        exitmonitor r2;

     label12:
        throw r7;

        catch java.lang.Throwable from label02 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected int sizeOf(com.android.bitmap.Poolable)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        com.android.bitmap.Poolable r1;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: com.android.bitmap.Poolable;

        return 1;
    }

    public java.lang.String toDebugString()
    {
        com.android.bitmap.UnrefedPooledCache r0;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        return null;
    }

    public void clear()
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.util.LinkedHashMap $r1;
        java.util.concurrent.LinkedBlockingQueue $r2;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        $r1 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.LinkedHashMap mCache>;

        virtualinvoke $r1.<java.util.LinkedHashMap: void clear()>();

        $r2 = r0.<com.android.bitmap.UnrefedPooledCache: java.util.concurrent.LinkedBlockingQueue mPool>;

        virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void clear()>();

        return;
    }

    public volatile java.lang.Object poll()
    {
        com.android.bitmap.UnrefedPooledCache r0;
        com.android.bitmap.Poolable $r1;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        $r1 = virtualinvoke r0.<com.android.bitmap.UnrefedPooledCache: com.android.bitmap.Poolable poll()>();

        return $r1;
    }

    public volatile void offer(java.lang.Object)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.lang.Object r1;
        com.android.bitmap.Poolable $r2;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.bitmap.Poolable) r1;

        virtualinvoke r0.<com.android.bitmap.UnrefedPooledCache: void offer(com.android.bitmap.Poolable)>($r2);

        return;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.lang.Object r1, r2;
        com.android.bitmap.Poolable $r3, $r4;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = (com.android.bitmap.Poolable) r2;

        $r4 = virtualinvoke r0.<com.android.bitmap.UnrefedPooledCache: com.android.bitmap.Poolable put(java.lang.Object,com.android.bitmap.Poolable)>(r1, $r3);

        return $r4;
    }

    public volatile java.lang.Object get(java.lang.Object, boolean)
    {
        com.android.bitmap.UnrefedPooledCache r0;
        java.lang.Object r1;
        boolean z0;
        com.android.bitmap.Poolable $r2;

        r0 := @this: com.android.bitmap.UnrefedPooledCache;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.android.bitmap.UnrefedPooledCache: com.android.bitmap.Poolable get(java.lang.Object,boolean)>(r1, z0);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.bitmap.UnrefedPooledCache: boolean DEBUG> = 0;

        $r0 = class "com/android/bitmap/UnrefedPooledCache";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.bitmap.UnrefedPooledCache: java.lang.String TAG> = $r1;

        return;
    }
}
