public class com.android.common.OperationScheduler extends java.lang.Object
{
    private static final java.lang.String PREFIX;
    private final android.content.SharedPreferences mStorage;

    public void <init>(android.content.SharedPreferences)
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences r1;

        r0 := @this: com.android.common.OperationScheduler;

        r1 := @parameter0: android.content.SharedPreferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage> = r1;

        return;
    }

    public static com.android.common.OperationScheduler$Options parseOptions(java.lang.String, com.android.common.OperationScheduler$Options) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0, r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r20;
        com.android.common.OperationScheduler$Options r1;
        java.lang.String[] r2, r4;
        int i0, i1, $i2, $i7, $i8, $i9, $i10, $i11, $i13, $i15, $i17;
        boolean $z0, $z1, $z2, $z3;
        long $l3, $l4, $l5, $l6, $l12, $l14, $l16;
        java.lang.IllegalArgumentException $r14;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.common.OperationScheduler$Options;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" +");

        i0 = lengthof r2;

        i1 = 0;

     label01:
        if i1 >= i0 goto label12;

        r3 = r2[i1];

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i2 != 0 goto label02;

        goto label11;

     label02:
        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("backoff=");

        if $z0 == 0 goto label07;

        $r8 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(8);

        r4 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\+");

        $i8 = lengthof r4;

        if $i8 <= 3 goto label03;

        $r14 = new java.lang.IllegalArgumentException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad value for backoff: [");

        $r16 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r14;

     label03:
        $i7 = lengthof r4;

        if $i7 <= 0 goto label04;

        $r12 = r4[0];

        $i17 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i17 <= 0 goto label04;

        $r15 = r4[0];

        $l16 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r15);

        r1.<com.android.common.OperationScheduler$Options: long backoffFixedMillis> = $l16;

     label04:
        $i10 = lengthof r4;

        if $i10 <= 1 goto label05;

        $r11 = r4[1];

        $i15 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i15 <= 0 goto label05;

        $r13 = r4[1];

        $l14 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r13);

        r1.<com.android.common.OperationScheduler$Options: long backoffIncrementalMillis> = $l14;

     label05:
        $i9 = lengthof r4;

        if $i9 <= 2 goto label06;

        $r9 = r4[2];

        $i11 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i11 <= 0 goto label06;

        $r10 = r4[2];

        $l12 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r10);

        $i13 = (int) $l12;

        r1.<com.android.common.OperationScheduler$Options: int backoffExponentialMillis> = $i13;

     label06:
        goto label11;

     label07:
        $z1 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("max=");

        if $z1 == 0 goto label08;

        $r7 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(4);

        $l6 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r7);

        r1.<com.android.common.OperationScheduler$Options: long maxMoratoriumMillis> = $l6;

        goto label11;

     label08:
        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("min=");

        if $z2 == 0 goto label09;

        $r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(4);

        $l5 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r6);

        r1.<com.android.common.OperationScheduler$Options: long minTriggerMillis> = $l5;

        goto label11;

     label09:
        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("period=");

        if $z3 == 0 goto label10;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(7);

        $l4 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>($r5);

        r1.<com.android.common.OperationScheduler$Options: long periodicIntervalMillis> = $l4;

        goto label11;

     label10:
        $l3 = staticinvoke <com.android.common.OperationScheduler: long parseSeconds(java.lang.String)>(r3);

        r1.<com.android.common.OperationScheduler$Options: long periodicIntervalMillis> = $l3;

     label11:
        i1 = i1 + 1;

        goto label01;

     label12:
        return r1;
    }

    private static long parseSeconds(java.lang.String) throws java.lang.NumberFormatException
    {
        java.lang.String r0;
        float $f0, $f1;
        long $l0;

        r0 := @parameter0: java.lang.String;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r0);

        $f1 = $f0 * 1000.0F;

        $l0 = (long) $f1;

        return $l0;
    }

    public long getNextTimeMillis(com.android.common.OperationScheduler$Options)
    {
        com.android.common.OperationScheduler r0;
        com.android.common.OperationScheduler$Options r1;
        boolean z0, z1;
        int i0, i8, $i18;
        long l1, l2, l3, l4, l5, l6, l7, l9, $l10, $l11, $l13, $l14, $l15, $l16, $l17, $l19, $l20, $l22, $l23, $l24, $l25, $l27, $l28, l29, l30;
        android.content.SharedPreferences $r2, $r3, $r4, $r5;
        byte $b12, $b21, $b26;

        r0 := @this: com.android.common.OperationScheduler;

        r1 := @parameter0: com.android.common.OperationScheduler$Options;

        $r2 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("OperationScheduler_enabledState", 1);

        if z0 != 0 goto label1;

        return 9223372036854775807L;

     label1:
        $r3 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        z1 = interfaceinvoke $r3.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("OperationScheduler_permanentError", 0);

        if z1 == 0 goto label2;

        return 9223372036854775807L;

     label2:
        $r4 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        i0 = interfaceinvoke $r4.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("OperationScheduler_errorCount", 0);

        l1 = virtualinvoke r0.<com.android.common.OperationScheduler: long currentTimeMillis()>();

        l2 = specialinvoke r0.<com.android.common.OperationScheduler: long getTimeBefore(java.lang.String,long)>("OperationScheduler_lastSuccessTimeMillis", l1);

        l3 = specialinvoke r0.<com.android.common.OperationScheduler: long getTimeBefore(java.lang.String,long)>("OperationScheduler_lastErrorTimeMillis", l1);

        $r5 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        l4 = interfaceinvoke $r5.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("OperationScheduler_triggerTimeMillis", 9223372036854775807L);

        l5 = specialinvoke r0.<com.android.common.OperationScheduler: long getTimeBefore(java.lang.String,long)>("OperationScheduler_moratoriumSetTimeMillis", l1);

        $l10 = r1.<com.android.common.OperationScheduler$Options: long maxMoratoriumMillis>;

        $l11 = l5 + $l10;

        l6 = specialinvoke r0.<com.android.common.OperationScheduler: long getTimeBefore(java.lang.String,long)>("OperationScheduler_moratoriumTimeMillis", $l11);

        l7 = l4;

        $l13 = r1.<com.android.common.OperationScheduler$Options: long periodicIntervalMillis>;

        $b12 = $l13 cmp 0L;

        if $b12 <= 0 goto label3;

        $l25 = r1.<com.android.common.OperationScheduler$Options: long periodicIntervalMillis>;

        $l28 = l2 + $l25;

        l7 = staticinvoke <java.lang.Math: long min(long,long)>(l7, $l28);

     label3:
        l29 = staticinvoke <java.lang.Math: long max(long,long)>(l7, l6);

        $l15 = r1.<com.android.common.OperationScheduler$Options: long minTriggerMillis>;

        $l16 = l2 + $l15;

        l30 = staticinvoke <java.lang.Math: long max(long,long)>(l29, $l16);

        if i0 <= 0 goto label6;

        i8 = i0 - 1;

        if i8 <= 30 goto label4;

        i8 = 30;

     label4:
        $l17 = r1.<com.android.common.OperationScheduler$Options: long backoffFixedMillis>;

        $l19 = r1.<com.android.common.OperationScheduler$Options: long backoffIncrementalMillis>;

        $l14 = (long) i0;

        $l20 = $l19 * $l14;

        $l22 = $l17 + $l20;

        $i18 = r1.<com.android.common.OperationScheduler$Options: int backoffExponentialMillis>;

        $l24 = (long) $i18;

        $l23 = $l24 << i8;

        l9 = $l22 + $l23;

        $b21 = l6 cmp 0L;

        if $b21 <= 0 goto label5;

        $b26 = l9 cmp l6;

        if $b26 <= 0 goto label5;

        l9 = l6;

     label5:
        $l27 = l3 + l9;

        l30 = staticinvoke <java.lang.Math: long max(long,long)>(l30, $l27);

     label6:
        return l30;
    }

    public long getLastSuccessTimeMillis()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1;
        long $l0;

        r0 := @this: com.android.common.OperationScheduler;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("OperationScheduler_lastSuccessTimeMillis", 0L);

        return $l0;
    }

    public long getLastAttemptTimeMillis()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1, $r2;
        long $l0, $l1, $l2;

        r0 := @this: com.android.common.OperationScheduler;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $l0 = interfaceinvoke $r1.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("OperationScheduler_lastSuccessTimeMillis", 0L);

        $r2 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("OperationScheduler_lastErrorTimeMillis", 0L);

        $l2 = staticinvoke <java.lang.Math: long max(long,long)>($l0, $l1);

        return $l2;
    }

    private long getTimeBefore(java.lang.String, long)
    {
        com.android.common.OperationScheduler r0;
        java.lang.String r1;
        long l0, l1;
        android.content.SharedPreferences $r2, $r3;
        byte $b2;
        android.content.SharedPreferences$Editor $r4, $r5;

        r0 := @this: com.android.common.OperationScheduler;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>(r1, 0L);

        $b2 = l1 cmp l0;

        if $b2 <= 0 goto label1;

        l1 = l0;

        $r3 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>(r1, l1);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r5);

     label1:
        return l1;
    }

    public void setTriggerTimeMillis(long)
    {
        com.android.common.OperationScheduler r0;
        long l0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @this: com.android.common.OperationScheduler;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OperationScheduler_triggerTimeMillis", l0);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r3);

        return;
    }

    public void setMoratoriumTimeMillis(long)
    {
        com.android.common.OperationScheduler r0;
        long l0, $l1;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3, $r4;

        r0 := @this: com.android.common.OperationScheduler;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OperationScheduler_moratoriumTimeMillis", l0);

        $l1 = virtualinvoke r0.<com.android.common.OperationScheduler: long currentTimeMillis()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OperationScheduler_moratoriumSetTimeMillis", $l1);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r4);

        return;
    }

    public boolean setMoratoriumTimeHttp(java.lang.String)
    {
        com.android.common.OperationScheduler r0;
        java.lang.String r1;
        long l0, $l1, $l2, $l3, $l4;
        java.lang.Long $r3;
        java.lang.NumberFormatException $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: com.android.common.OperationScheduler;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r1);

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        l0 = $l1 * 1000L;

        $l2 = virtualinvoke r0.<com.android.common.OperationScheduler: long currentTimeMillis()>();

        $l3 = l0 + $l2;

        virtualinvoke r0.<com.android.common.OperationScheduler: void setMoratoriumTimeMillis(long)>($l3);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

     label4:
        $l4 = staticinvoke <android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.common.OperationScheduler: void setMoratoriumTimeMillis(long)>($l4);

     label5:
        return 1;

     label6:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }

    public void setEnabledState(boolean)
    {
        com.android.common.OperationScheduler r0;
        boolean z0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @this: com.android.common.OperationScheduler;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("OperationScheduler_enabledState", z0);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r3);

        return;
    }

    public void onSuccess()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3, $r4, $r5, $r6, $r7;
        long $l0;

        r0 := @this: com.android.common.OperationScheduler;

        virtualinvoke r0.<com.android.common.OperationScheduler: void resetTransientError()>();

        virtualinvoke r0.<com.android.common.OperationScheduler: void resetPermanentError()>();

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_errorCount");

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_lastErrorTimeMillis");

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_permanentError");

        $r6 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_triggerTimeMillis");

        $l0 = virtualinvoke r0.<com.android.common.OperationScheduler: long currentTimeMillis()>();

        $r7 = interfaceinvoke $r6.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OperationScheduler_lastSuccessTimeMillis", $l0);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r7);

        return;
    }

    public void onTransientError()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences$Editor r1;
        android.content.SharedPreferences $r2, $r4;
        long $l0;
        int $i1, $i2;

        r0 := @this: com.android.common.OperationScheduler;

        $r2 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        r1 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $l0 = virtualinvoke r0.<com.android.common.OperationScheduler: long currentTimeMillis()>();

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("OperationScheduler_lastErrorTimeMillis", $l0);

        $r4 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $i1 = interfaceinvoke $r4.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("OperationScheduler_errorCount", 0);

        $i2 = $i1 + 1;

        interfaceinvoke r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("OperationScheduler_errorCount", $i2);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>(r1);

        return;
    }

    public void resetTransientError()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @this: com.android.common.OperationScheduler;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_errorCount");

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r3);

        return;
    }

    public void onPermanentError()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @this: com.android.common.OperationScheduler;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("OperationScheduler_permanentError", 1);

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r3);

        return;
    }

    public void resetPermanentError()
    {
        com.android.common.OperationScheduler r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2, $r3;

        r0 := @this: com.android.common.OperationScheduler;

        $r1 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("OperationScheduler_permanentError");

        staticinvoke <com.android.common.SharedPreferencesCompat: void apply(android.content.SharedPreferences$Editor)>($r3);

        return;
    }

    public java.lang.String toString()
    {
        com.android.common.OperationScheduler r0;
        java.lang.StringBuilder r1, $r7, $r12, $r17, $r21, $r26, $r33;
        java.util.TreeMap r2, $r8;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r13, $r16, $r18, $r20, $r27, $r29, $r30;
        android.text.format.Time r6, $r25;
        android.content.SharedPreferences $r9;
        java.util.Map $r10;
        java.util.Set $r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r14, $r15, $r24, r34;
        int $i0, $i2, $i3, $i4;
        java.lang.Long $r28;
        long $l1;

        r0 := @this: com.android.common.OperationScheduler;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("[OperationScheduler:");

        r1 = $r7;

        $r8 = new java.util.TreeMap;

        $r9 = r0.<com.android.common.OperationScheduler: android.content.SharedPreferences mStorage>;

        $r10 = interfaceinvoke $r9.<android.content.SharedPreferences: java.util.Map getAll()>();

        specialinvoke $r8.<java.util.TreeMap: void <init>(java.util.Map)>($r10);

        r2 = $r8;

        $r11 = virtualinvoke r2.<java.util.TreeMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r15;

        $r14 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r14;

        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("OperationScheduler_");

        if $z2 == 0 goto label4;

        $z1 = virtualinvoke r5.<java.lang.String: boolean endsWith(java.lang.String)>("TimeMillis");

        if $z1 == 0 goto label2;

        $r25 = new android.text.format.Time;

        specialinvoke $r25.<android.text.format.Time: void <init>()>();

        r6 = $r25;

        $r24 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r28 = (java.lang.Long) $r24;

        $l1 = virtualinvoke $r28.<java.lang.Long: long longValue()>();

        virtualinvoke r6.<android.text.format.Time: void set(long)>($l1);

        $r26 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r27 = "OperationScheduler_";

        $i3 = virtualinvoke $r27.<java.lang.String: int length()>();

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        $i2 = $i4 - 10;

        $r29 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r33 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r30 = virtualinvoke r6.<android.text.format.Time: java.lang.String format(java.lang.String)>("%Y-%m-%d/%H:%M:%S");

        virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        goto label4;

     label2:
        $r17 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = "OperationScheduler_";

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        $r18 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        r34 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r34 != null goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=(null)");

        goto label4;

     label3:
        $r21 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r20 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

     label4:
        goto label1;

     label5:
        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    protected long currentTimeMillis()
    {
        com.android.common.OperationScheduler r0;
        long $l0;

        r0 := @this: com.android.common.OperationScheduler;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    public static void <clinit>()
    {
        <com.android.common.OperationScheduler: java.lang.String PREFIX> = "OperationScheduler_";

        return;
    }
}
