class com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable extends android.graphics.drawable.Drawable
{
    private static android.graphics.Bitmap CHECKMARK;
    private static int sBackgroundColor;
    private final android.graphics.Paint mPaint;
    private float mScaleFraction;
    private float mAlphaFraction;
    private static final android.graphics.Matrix sMatrix;

    public void <init>(android.content.res.Resources)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        android.content.res.Resources r1;
        android.graphics.Bitmap $r2, $r7;
        android.graphics.Paint $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        r1 := @parameter0: android.content.res.Resources;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        if $r2 != null goto label1;

        $r7 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>(r1, 2130837606);

        <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK> = $r7;

        $i1 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>(2131230866);

        <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: int sBackgroundColor> = $i1;

     label1:
        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r6 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        $i0 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: int sBackgroundColor>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i0);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        android.graphics.Paint $r3, $r11, $r12, $r13, $r16;
        android.graphics.Matrix $r4, $r5, $r8, $r15;
        android.graphics.Bitmap $r6, $r7, $r9, $r10, $r14;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: boolean isVisible()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $i1 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $f1 = (float) $i2;

        $i3 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i4 = $i3 / 2;

        $f2 = (float) $i4;

        $r3 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, $f2, $r3);

        $r4 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Matrix sMatrix>;

        virtualinvoke $r4.<android.graphics.Matrix: void reset()>();

        $r5 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Matrix sMatrix>;

        $f4 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mScaleFraction>;

        $f3 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mScaleFraction>;

        $r6 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        $i6 = virtualinvoke $r6.<android.graphics.Bitmap: int getWidth()>();

        $i5 = $i6 / 2;

        $f5 = (float) $i5;

        $r7 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        $i8 = virtualinvoke $r7.<android.graphics.Bitmap: int getHeight()>();

        $i7 = $i8 / 2;

        $f6 = (float) $i7;

        virtualinvoke $r5.<android.graphics.Matrix: void setScale(float,float,float,float)>($f4, $f3, $f5, $f6);

        $r8 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Matrix sMatrix>;

        $i9 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $r9 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        $i11 = virtualinvoke $r9.<android.graphics.Bitmap: int getWidth()>();

        $i10 = $i11 / 2;

        $i13 = $i9 - $i10;

        $f7 = (float) $i13;

        $i12 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $r10 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        $i15 = virtualinvoke $r10.<android.graphics.Bitmap: int getHeight()>();

        $i16 = $i15 / 2;

        $i14 = $i12 - $i16;

        $f8 = (float) $i14;

        virtualinvoke $r8.<android.graphics.Matrix: boolean postTranslate(float,float)>($f7, $f8);

        $r11 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        i0 = virtualinvoke $r11.<android.graphics.Paint: int getAlpha()>();

        $r12 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        $f10 = (float) i0;

        $f9 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mAlphaFraction>;

        $f11 = $f10 * $f9;

        $i17 = (int) $f11;

        virtualinvoke $r12.<android.graphics.Paint: void setAlpha(int)>($i17);

        $r14 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Bitmap CHECKMARK>;

        $r15 = <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Matrix sMatrix>;

        $r16 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>($r14, $r15, $r16);

        $r13 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r13.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void setAlpha(int)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getOpacity()
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        return -1;
    }

    public void setScaleAnimatorValue(float)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        float f0, f1, $f2;
        byte $b0;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        f0 := @parameter0: float;

        f1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mScaleFraction>;

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mScaleFraction> = f0;

        $f2 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mScaleFraction>;

        $b0 = f1 cmpl $f2;

        if $b0 == 0 goto label1;

        virtualinvoke r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setAlphaAnimatorValue(float)
    {
        com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable r0;
        float f0, f1, $f2;
        byte $b0;

        r0 := @this: com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable;

        f0 := @parameter0: float;

        f1 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mAlphaFraction>;

        r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mAlphaFraction> = f0;

        $f2 = r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: float mAlphaFraction>;

        $b0 = f1 cmpl $f2;

        if $b0 == 0 goto label1;

        virtualinvoke r0.<com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<android.graphics.Matrix: void <init>()>();

        <com.android.mail.bitmap.CheckableContactFlipDrawable$CheckmarkDrawable: android.graphics.Matrix sMatrix> = $r0;

        return;
    }
}
