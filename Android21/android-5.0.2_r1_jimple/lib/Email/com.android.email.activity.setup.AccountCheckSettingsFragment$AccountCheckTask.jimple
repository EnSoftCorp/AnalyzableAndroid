class com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask extends android.os.AsyncTask
{
    final android.content.Context mContext;
    final com.android.email.activity.setup.AccountCheckSettingsFragment mCallback;
    final int mMode;
    final com.android.email.activity.setup.SetupDataFragment mSetupData;
    final com.android.emailcommon.provider.Account mAccount;
    final java.lang.String mStoreHost;
    final java.lang.String mCheckEmail;
    final java.lang.String mCheckPassword;

    public void <init>(android.content.Context, com.android.email.activity.setup.AccountCheckSettingsFragment, int, com.android.email.activity.setup.SetupDataFragment)
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        android.content.Context r1;
        com.android.email.activity.setup.AccountCheckSettingsFragment r2;
        int i0;
        com.android.email.activity.setup.SetupDataFragment r3;
        com.android.emailcommon.provider.Account $r4, $r5, $r8, $r10;
        com.android.emailcommon.provider.HostAuth $r6, $r11;
        java.lang.String $r7, $r9, $r12;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.email.activity.setup.AccountCheckSettingsFragment;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.email.activity.setup.SetupDataFragment;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext> = r1;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.AccountCheckSettingsFragment mCallback> = r2;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: int mMode> = i0;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.SetupDataFragment mSetupData> = r3;

        $r4 = virtualinvoke r3.<com.android.email.activity.setup.SetupDataFragment: com.android.emailcommon.provider.Account getAccount()>();

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount> = $r4;

        $r5 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r6 = $r5.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r7 = $r6.<com.android.emailcommon.provider.HostAuth: java.lang.String mAddress>;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mStoreHost> = $r7;

        $r8 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r9 = $r8.<com.android.emailcommon.provider.Account: java.lang.String mEmailAddress>;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mCheckEmail> = $r9;

        $r10 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r11 = $r10.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r12 = $r11.<com.android.emailcommon.provider.HostAuth: java.lang.String mPassword>;

        r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mCheckPassword> = $r12;

        return;
    }

    protected transient com.android.emailcommon.mail.MessagingException doInBackground(java.lang.Void[])
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        java.lang.Void[] r1;
        com.android.email.mail.Store r2, r54;
        android.os.Bundle r3, r55;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i10;
        com.android.emailcommon.service.HostAuthCompat r4;
        com.android.emailcommon.provider.HostAuth r5, $r9, $r34;
        java.lang.String r6, $r12, $r19, $r23, $r28, $r30, $r37, $r43, $r47, $r48, r56, r58, r59;
        java.lang.String[] r7;
        com.android.emailcommon.provider.Account $r8, $r14, $r20, $r24, $r35, $r36, $r42;
        android.content.Context $r10, $r16, $r22, $r41, $r49;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object[] $r11, $r17, $r38;
        java.lang.Integer[] $r13, $r18, $r44;
        java.lang.Integer $r15, $r21, $r40;
        com.android.emailcommon.mail.MessagingException $r25, $r29, $r31, $r39, $r52, r62;
        android.os.Parcelable $r26, $r33, $r45;
        com.android.email.activity.setup.SetupDataFragment $r27;
        com.android.emailcommon.provider.Policy $r32, r57;
        com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults $r46, $r50, $r51, $r53;
        com.android.email.service.EmailServiceUtils$EmailServiceInfo r60;
        com.android.email.mail.Sender r61;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: java.lang.Void[];

     label01:
        $i1 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: int mMode>;

        $i2 = $i1 & 4;

        if $i2 == 0 goto label12;

        $z4 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: boolean isCancelled()>();

        if $z4 == 0 goto label03;

     label02:
        return null;

     label03:
        $r43 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r38 = newarray (java.lang.Object)[1];

        $r37 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mCheckEmail>;

        $r38[0] = $r37;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r43, "Begin auto-discover for %s", $r38);

        $r44 = newarray (java.lang.Integer)[1];

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r44[0] = $r40;

        virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: void publishProgress(java.lang.Object[])>($r44);

        $r42 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r41 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext>;

        r2 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>($r42, $r41);

        $r49 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext>;

        $r48 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mCheckEmail>;

        $r47 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mCheckPassword>;

        r3 = virtualinvoke r2.<com.android.email.mail.Store: android.os.Bundle autoDiscover(android.content.Context,java.lang.String,java.lang.String)>($r49, $r48, $r47);

        if r3 != null goto label05;

        $r53 = new com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults;

        specialinvoke $r53.<com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults: void <init>(boolean,com.android.emailcommon.provider.HostAuth)>(0, null);

     label04:
        return $r53;

     label05:
        i0 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("autodiscover_error_code");

        if i0 != 11 goto label07;

        $r50 = new com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults;

        specialinvoke $r50.<com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults: void <init>(boolean,com.android.emailcommon.provider.HostAuth)>(1, null);

     label06:
        return $r50;

     label07:
        if i0 == -1 goto label09;

        $r51 = new com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults;

        specialinvoke $r51.<com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults: void <init>(boolean,com.android.emailcommon.provider.HostAuth)>(0, null);

     label08:
        return $r51;

     label09:
        $r45 = virtualinvoke r3.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("autodiscover_host_auth");

        r4 = (com.android.emailcommon.service.HostAuthCompat) $r45;

        r5 = null;

        if r4 == null goto label10;

        r5 = virtualinvoke r4.<com.android.emailcommon.service.HostAuthCompat: com.android.emailcommon.provider.HostAuth toHostAuth()>();

     label10:
        $r46 = new com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults;

        specialinvoke $r46.<com.android.email.activity.setup.AccountCheckSettingsFragment$AutoDiscoverResults: void <init>(boolean,com.android.emailcommon.provider.HostAuth)>(0, r5);

     label11:
        return $r46;

     label12:
        $i3 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: int mMode>;

        $i4 = $i3 & 1;

        if $i4 == 0 goto label24;

        $z2 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: boolean isCancelled()>();

        if $z2 == 0 goto label14;

     label13:
        return null;

     label14:
        $r19 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, "Begin check of incoming email settings", $r17);

        $r18 = newarray (java.lang.Integer)[1];

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r18[0] = $r21;

        virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: void publishProgress(java.lang.Object[])>($r18);

        $r20 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r22 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext>;

        r54 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>($r20, $r22);

        r55 = virtualinvoke r54.<com.android.email.mail.Store: android.os.Bundle checkSettings()>();

        if r55 != null goto label16;

        $r39 = new com.android.emailcommon.mail.MessagingException;

        specialinvoke $r39.<com.android.emailcommon.mail.MessagingException: void <init>(int)>(0);

     label15:
        return $r39;

     label16:
        $r24 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r23 = virtualinvoke r55.<android.os.Bundle: java.lang.String getString(java.lang.String)>("validate_protocol_version");

        $r24.<com.android.emailcommon.provider.Account: java.lang.String mProtocolVersion> = $r23;

        i10 = virtualinvoke r55.<android.os.Bundle: int getInt(java.lang.String)>("validate_result_code");

        r56 = virtualinvoke r55.<android.os.Bundle: java.lang.String getString(java.lang.String,java.lang.String)>("validate_redirect_address", null);

        if r56 == null goto label17;

        $r35 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r34 = $r35.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        $r34.<com.android.emailcommon.provider.HostAuth: java.lang.String mAddress> = r56;

     label17:
        if i10 != 7 goto label18;

        $r36 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $z3 = virtualinvoke $r36.<com.android.emailcommon.provider.Account: boolean isSaved()>();

        if $z3 == 0 goto label18;

        i10 = -1;

     label18:
        if i10 != 7 goto label20;

        $r27 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.SetupDataFragment mSetupData>;

        $r33 = virtualinvoke r55.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("validate_policy_set");

        $r32 = (com.android.emailcommon.provider.Policy) $r33;

        virtualinvoke $r27.<com.android.email.activity.setup.SetupDataFragment: void setPolicy(com.android.emailcommon.provider.Policy)>($r32);

        $r31 = new com.android.emailcommon.mail.MessagingException;

        $r30 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mStoreHost>;

        specialinvoke $r31.<com.android.emailcommon.mail.MessagingException: void <init>(int,java.lang.String)>(i10, $r30);

     label19:
        return $r31;

     label20:
        if i10 != 8 goto label22;

        $r26 = virtualinvoke r55.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>("validate_policy_set");

        r57 = (com.android.emailcommon.provider.Policy) $r26;

        r6 = r57.<com.android.emailcommon.provider.Policy: java.lang.String mProtocolPoliciesUnsupported>;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>("\u0001");

        $r29 = new com.android.emailcommon.mail.MessagingException;

        $r28 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.String mStoreHost>;

        specialinvoke $r29.<com.android.emailcommon.mail.MessagingException: void <init>(int,java.lang.String,java.lang.Object)>(i10, $r28, r7);

     label21:
        return $r29;

     label22:
        if i10 == -1 goto label24;

        r58 = virtualinvoke r55.<android.os.Bundle: java.lang.String getString(java.lang.String)>("validate_error_message");

        $r25 = new com.android.emailcommon.mail.MessagingException;

        specialinvoke $r25.<com.android.emailcommon.mail.MessagingException: void <init>(int,java.lang.String)>(i10, r58);

     label23:
        return $r25;

     label24:
        $r8 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        $r9 = $r8.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        r59 = $r9.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r10 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext>;

        r60 = staticinvoke <com.android.email.service.EmailServiceUtils: com.android.email.service.EmailServiceUtils$EmailServiceInfo getServiceInfo(android.content.Context,java.lang.String)>($r10, r59);

        $z0 = r60.<com.android.email.service.EmailServiceUtils$EmailServiceInfo: boolean usesSmtp>;

        if $z0 == 0 goto label27;

        $i6 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: int mMode>;

        $i5 = $i6 & 2;

        if $i5 == 0 goto label27;

        $z1 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: boolean isCancelled()>();

        if $z1 == 0 goto label26;

     label25:
        return null;

     label26:
        $r12 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r12, "Begin check of outgoing email settings", $r11);

        $r13 = newarray (java.lang.Integer)[1];

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r13[0] = $r15;

        virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: void publishProgress(java.lang.Object[])>($r13);

        $r16 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: android.content.Context mContext>;

        $r14 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.provider.Account mAccount>;

        r61 = staticinvoke <com.android.email.mail.Sender: com.android.email.mail.Sender getInstance(android.content.Context,com.android.emailcommon.provider.Account)>($r16, $r14);

        virtualinvoke r61.<com.android.email.mail.Sender: void close()>();

        virtualinvoke r61.<com.android.email.mail.Sender: void open()>();

        virtualinvoke r61.<com.android.email.mail.Sender: void close()>();

     label27:
        return null;

     label28:
        $r52 := @caughtexception;

        r62 = $r52;

        return r62;

        catch com.android.emailcommon.mail.MessagingException from label01 to label02 with label28;
        catch com.android.emailcommon.mail.MessagingException from label03 to label04 with label28;
        catch com.android.emailcommon.mail.MessagingException from label05 to label06 with label28;
        catch com.android.emailcommon.mail.MessagingException from label07 to label08 with label28;
        catch com.android.emailcommon.mail.MessagingException from label09 to label11 with label28;
        catch com.android.emailcommon.mail.MessagingException from label12 to label13 with label28;
        catch com.android.emailcommon.mail.MessagingException from label14 to label15 with label28;
        catch com.android.emailcommon.mail.MessagingException from label16 to label19 with label28;
        catch com.android.emailcommon.mail.MessagingException from label20 to label21 with label28;
        catch com.android.emailcommon.mail.MessagingException from label22 to label23 with label28;
        catch com.android.emailcommon.mail.MessagingException from label24 to label25 with label28;
        catch com.android.emailcommon.mail.MessagingException from label26 to label27 with label28;
    }

    protected transient void onProgressUpdate(java.lang.Integer[])
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        java.lang.Integer[] r1;
        boolean $z0;
        java.lang.Integer $r2;
        com.android.email.activity.setup.AccountCheckSettingsFragment $r3;
        int $i0;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: java.lang.Integer[];

        $z0 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.AccountCheckSettingsFragment mCallback>;

        $r2 = r1[0];

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        staticinvoke <com.android.email.activity.setup.AccountCheckSettingsFragment: void access$000(com.android.email.activity.setup.AccountCheckSettingsFragment,int,com.android.emailcommon.mail.MessagingException)>($r3, $i0, null);

        return;
    }

    protected void onPostExecute(com.android.emailcommon.mail.MessagingException)
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        com.android.emailcommon.mail.MessagingException r1;
        byte b0;
        int i1;
        boolean $z0;
        com.android.email.activity.setup.AccountCheckSettingsFragment $r2, $r3;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: com.android.emailcommon.mail.MessagingException;

        $z0 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: boolean isCancelled()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        if r1 != null goto label2;

        $r3 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.AccountCheckSettingsFragment mCallback>;

        staticinvoke <com.android.email.activity.setup.AccountCheckSettingsFragment: void access$000(com.android.email.activity.setup.AccountCheckSettingsFragment,int,com.android.emailcommon.mail.MessagingException)>($r3, 4, null);

        goto label7;

     label2:
        b0 = 6;

        i1 = virtualinvoke r1.<com.android.emailcommon.mail.MessagingException: int getExceptionType()>();

        lookupswitch(i1)
        {
            case 7: goto label5;
            case 11: goto label3;
            case 12: goto label4;
            default: goto label6;
        };

     label3:
        b0 = 7;

        goto label6;

     label4:
        b0 = 8;

        goto label6;

     label5:
        b0 = 5;

     label6:
        $r2 = r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.email.activity.setup.AccountCheckSettingsFragment mCallback>;

        staticinvoke <com.android.email.activity.setup.AccountCheckSettingsFragment: void access$000(com.android.email.activity.setup.AccountCheckSettingsFragment,int,com.android.emailcommon.mail.MessagingException)>($r2, b0, r1);

     label7:
        return;
    }

    protected volatile void onProgressUpdate(java.lang.Object[])
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        java.lang.Object[] r1;
        java.lang.Integer[] $r2;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Integer[]) r1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: void onProgressUpdate(java.lang.Integer[])>($r2);

        return;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        java.lang.Object r1;
        com.android.emailcommon.mail.MessagingException $r2;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.emailcommon.mail.MessagingException) r1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: void onPostExecute(com.android.emailcommon.mail.MessagingException)>($r2);

        return;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        com.android.emailcommon.mail.MessagingException $r3;

        r0 := @this: com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.mail.MessagingException doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
