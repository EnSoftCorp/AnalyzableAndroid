public class org.apache.james.mime4j.EOLConvertingInputStream extends java.io.InputStream
{
    public static final int CONVERT_CR;
    public static final int CONVERT_LF;
    public static final int CONVERT_BOTH;
    private java.io.PushbackInputStream in;
    private int previous;
    private int flags;
    private int size;
    private int pos;
    private int nextTenPctPos;
    private int tenPctSize;
    private org.apache.james.mime4j.EOLConvertingInputStream$Callback callback;

    public void <init>(java.io.InputStream)
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        java.io.InputStream r1;
        java.io.PushbackInputStream $r2;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: java.io.PushbackInputStream in> = null;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int previous> = 0;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int flags> = 3;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int size> = 0;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos> = 0;

        $r2 = new java.io.PushbackInputStream;

        specialinvoke $r2.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(r1, 2);

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: java.io.PushbackInputStream in> = $r2;

        return;
    }

    public void <init>(java.io.InputStream, int, org.apache.james.mime4j.EOLConvertingInputStream$Callback)
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        java.io.InputStream r1;
        int i0, $i1, $i2, $i3;
        org.apache.james.mime4j.EOLConvertingInputStream$Callback r2;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.james.mime4j.EOLConvertingInputStream$Callback;

        specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int size> = i0;

        $i1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int size>;

        $i2 = $i1 / 10;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int tenPctSize> = $i2;

        $i3 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int tenPctSize>;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int nextTenPctPos> = $i3;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: org.apache.james.mime4j.EOLConvertingInputStream$Callback callback> = r2;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        $r1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: java.io.PushbackInputStream in>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void close()>();

        return;
    }

    private int readByte() throws java.io.IOException
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.io.PushbackInputStream $r1;
        org.apache.james.mime4j.EOLConvertingInputStream$Callback $r2, $r3, $r4;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        $r1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: java.io.PushbackInputStream in>;

        i0 = virtualinvoke $r1.<java.io.PushbackInputStream: int read()>();

        if i0 == -1 goto label1;

        $r2 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: org.apache.james.mime4j.EOLConvertingInputStream$Callback callback>;

        if $r2 == null goto label1;

        $i1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos>;

        $i2 = $i1 + 1;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos> = $i2;

        $i3 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int nextTenPctPos>;

        if $i1 != $i3 goto label1;

        $i5 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int nextTenPctPos>;

        $i4 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int tenPctSize>;

        $i6 = $i5 + $i4;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int nextTenPctPos> = $i6;

        $r3 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: org.apache.james.mime4j.EOLConvertingInputStream$Callback callback>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: org.apache.james.mime4j.EOLConvertingInputStream$Callback callback>;

        $i7 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos>;

        interfaceinvoke $r4.<org.apache.james.mime4j.EOLConvertingInputStream$Callback: void report(int)>($i7);

     label1:
        return i0;
    }

    private void unreadByte(int) throws java.io.IOException
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        int i0, $i1, $i2;
        java.io.PushbackInputStream $r1;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: java.io.PushbackInputStream in>;

        virtualinvoke $r1.<java.io.PushbackInputStream: void unread(int)>(i0);

        $i1 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos>;

        $i2 = $i1 - 1;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos> = $i2;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.james.mime4j.EOLConvertingInputStream r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.apache.james.mime4j.EOLConvertingInputStream;

        i0 = specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: int readByte()>();

        if i0 != -1 goto label1;

        $i7 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int size>;

        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int pos> = $i7;

        return -1;

     label1:
        $i2 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int flags>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label4;

        if i0 != 13 goto label4;

        i1 = specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: int readByte()>();

        if i1 == -1 goto label2;

        specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: void unreadByte(int)>(i1);

     label2:
        if i1 == 10 goto label3;

        specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: void unreadByte(int)>(10);

     label3:
        goto label5;

     label4:
        $i4 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int flags>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label5;

        if i0 != 10 goto label5;

        $i6 = r0.<org.apache.james.mime4j.EOLConvertingInputStream: int previous>;

        if $i6 == 13 goto label5;

        i0 = 13;

        specialinvoke r0.<org.apache.james.mime4j.EOLConvertingInputStream: void unreadByte(int)>(10);

     label5:
        r0.<org.apache.james.mime4j.EOLConvertingInputStream: int previous> = i0;

        return i0;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.EOLConvertingInputStream: int CONVERT_BOTH> = 3;

        <org.apache.james.mime4j.EOLConvertingInputStream: int CONVERT_LF> = 2;

        <org.apache.james.mime4j.EOLConvertingInputStream: int CONVERT_CR> = 1;

        return;
    }
}
