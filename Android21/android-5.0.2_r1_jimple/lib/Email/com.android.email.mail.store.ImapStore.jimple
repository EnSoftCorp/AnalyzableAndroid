public class com.android.email.mail.store.ImapStore extends com.android.email.mail.Store
{
    private static final java.nio.charset.Charset MODIFIED_UTF_7_CHARSET;
    static java.lang.String sImapId;
    java.lang.String mPathPrefix;
    java.lang.String mPathSeparator;
    private boolean mUseOAuth;
    private final java.util.concurrent.ConcurrentLinkedQueue mConnectionPool;

    public static com.android.email.mail.Store newInstance(com.android.emailcommon.provider.Account, android.content.Context) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        com.android.email.mail.store.ImapStore $r2;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        r1 := @parameter1: android.content.Context;

        $r2 = new com.android.email.mail.store.ImapStore;

        specialinvoke $r2.<com.android.email.mail.store.ImapStore: void <init>(android.content.Context,com.android.emailcommon.provider.Account)>(r1, r0);

        return $r2;
    }

    private void <init>(android.content.Context, com.android.emailcommon.provider.Account) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.store.ImapStore r0;
        android.content.Context r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.HostAuth r3;
        java.lang.String[] r4;
        com.android.emailcommon.provider.Credential r5;
        java.util.concurrent.ConcurrentLinkedQueue $r6;
        com.android.email.mail.transport.MailTransport $r7;
        java.lang.String $r8, $r9, $r10;
        boolean $z0;
        com.android.emailcommon.mail.MessagingException $r11;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.emailcommon.provider.Account;

        specialinvoke r0.<com.android.email.mail.Store: void <init>()>();

        $r6 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<com.android.email.mail.store.ImapStore: java.util.concurrent.ConcurrentLinkedQueue mConnectionPool> = $r6;

        r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext> = r1;

        r0.<com.android.email.mail.store.ImapStore: com.android.emailcommon.provider.Account mAccount> = r2;

        r3 = virtualinvoke r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        if r3 != null goto label1;

        $r11 = new com.android.emailcommon.mail.MessagingException;

        specialinvoke $r11.<com.android.emailcommon.mail.MessagingException: void <init>(java.lang.String)>("No HostAuth in ImapStore?");

        throw $r11;

     label1:
        $r7 = new com.android.email.mail.transport.MailTransport;

        specialinvoke $r7.<com.android.email.mail.transport.MailTransport: void <init>(android.content.Context,java.lang.String,com.android.emailcommon.provider.HostAuth)>(r1, "IMAP", r3);

        r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.transport.MailTransport mTransport> = $r7;

        r4 = virtualinvoke r3.<com.android.emailcommon.provider.HostAuth: java.lang.String[] getLogin()>();

        $r8 = r4[0];

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mUsername> = $r8;

        $r9 = r4[1];

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mPassword> = $r9;

        r5 = virtualinvoke r3.<com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.Credential getCredential(android.content.Context)>(r1);

        if r5 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        r0.<com.android.email.mail.store.ImapStore: boolean mUseOAuth> = $z0;

        $r10 = r3.<com.android.emailcommon.provider.HostAuth: java.lang.String mDomain>;

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix> = $r10;

        return;
    }

    boolean getUseOAuth()
    {
        com.android.email.mail.store.ImapStore r0;
        boolean $z0;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $z0 = r0.<com.android.email.mail.store.ImapStore: boolean mUseOAuth>;

        return $z0;
    }

    java.lang.String getUsername()
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String $r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mUsername>;

        return $r1;
    }

    java.lang.String getPassword()
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String $r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPassword>;

        return $r1;
    }

    java.util.Collection getConnectionPoolForTest()
    {
        com.android.email.mail.store.ImapStore r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: java.util.concurrent.ConcurrentLinkedQueue mConnectionPool>;

        return $r1;
    }

    void setTransportForTest(com.android.email.mail.transport.MailTransport)
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.transport.MailTransport r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: com.android.email.mail.transport.MailTransport;

        r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.transport.MailTransport mTransport> = r1;

        return;
    }

    public static java.lang.String getImapId(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r6, r9, $r10, $r12, $r21, $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, r36, r37;
        java.lang.Class r4;
        android.telephony.TelephonyManager r5;
        java.lang.Throwable r7, $r29;
        byte[] r8, $r15, $r16;
        java.lang.StringBuilder $r11, r35;
        com.android.emailcommon.VendorPolicyLoader $r13;
        com.android.email.Preferences $r14;
        java.lang.Object $r22;
        java.security.NoSuchAlgorithmException $r33;
        java.lang.Object[] $r34;
        java.security.MessageDigest r38;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 = class "com/android/email/mail/store/ImapStore";

        entermonitor class "com/android/email/mail/store/ImapStore";

     label01:
        $r10 = <com.android.email.mail.store.ImapStore: java.lang.String sImapId>;

        if $r10 != null goto label03;

        $r22 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r5 = (android.telephony.TelephonyManager) $r22;

        r6 = virtualinvoke r5.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        if r6 != null goto label02;

        r6 = "";

     label02:
        $r24 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r30 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r26 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $r25 = <android.os.Build: java.lang.String MODEL>;

        $r28 = <android.os.Build: java.lang.String ID>;

        $r27 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r31 = staticinvoke <com.android.email.mail.store.ImapStore: java.lang.String makeCommonImapId(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r24, $r30, $r26, $r25, $r28, $r27, r6);

        <com.android.email.mail.store.ImapStore: java.lang.String sImapId> = $r31;

     label03:
        exitmonitor r4;

     label04:
        goto label07;

     label05:
        $r29 := @caughtexception;

        r7 = $r29;

        exitmonitor r4;

     label06:
        throw r7;

     label07:
        $r11 = new java.lang.StringBuilder;

        $r12 = <com.android.email.mail.store.ImapStore: java.lang.String sImapId>;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        r35 = $r11;

        $r13 = staticinvoke <com.android.emailcommon.VendorPolicyLoader: com.android.emailcommon.VendorPolicyLoader getInstance(android.content.Context)>(r0);

        r36 = virtualinvoke $r13.<com.android.emailcommon.VendorPolicyLoader: java.lang.String getImapIdValues(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        if r36 == null goto label08;

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

     label08:
        $r14 = staticinvoke <com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>(r0);

        r37 = virtualinvoke $r14.<com.android.email.Preferences: java.lang.String getDeviceUID()>();

        r38 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        $r15 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r38.<java.security.MessageDigest: void update(byte[])>($r15);

        $r16 = virtualinvoke r37.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r38.<java.security.MessageDigest: void update(byte[])>($r16);

        r8 = virtualinvoke r38.<java.security.MessageDigest: byte[] digest()>();

        r9 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>(r8, 2);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"AGUID\" \"");

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label09:
        goto label11;

     label10:
        $r33 := @caughtexception;

        $r32 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r34 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r32, "couldn\'t obtain SHA-1 hash for device UID", $r34);

     label11:
        $r21 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }

    static java.lang.String makeCommonImapId(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2, r3, r4, r5, r6, $r22, $r26, r37, r38, r39, r40, r41, r42, r43;
        java.util.regex.Pattern r7;
        java.lang.StringBuilder r8, $r17;
        java.util.regex.Matcher $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[^a-zA-Z0-9-_\\+=;:\\.,/ ]");

        $r9 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        r37 = virtualinvoke $r9.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r10 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        r38 = virtualinvoke $r10.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r11 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

        r39 = virtualinvoke $r11.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r12 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        r40 = virtualinvoke $r12.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r13 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r4);

        r41 = virtualinvoke $r13.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r14 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r5);

        r42 = virtualinvoke $r14.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r15 = virtualinvoke r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r6);

        r43 = virtualinvoke $r15.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("");

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("\"name\" \"");

        r8 = $r17;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"os\" \"android\"");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"os-version\" \"");

        $i0 = virtualinvoke r38.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        goto label2;

     label1:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1.0");

     label2:
        $i1 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

     label3:
        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $i2 = virtualinvoke r42.<java.lang.String: int length()>();

        if $i2 <= 0 goto label4;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"vendor\" \"");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label4:
        $r22 = "REL";

        $z0 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>(r39);

        if $z0 == 0 goto label5;

        $i4 = virtualinvoke r40.<java.lang.String: int length()>();

        if $i4 <= 0 goto label5;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"x-android-device-model\" \"");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label5:
        $i3 = virtualinvoke r43.<java.lang.String: int length()>();

        if $i3 <= 0 goto label6;

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"x-android-mobile-net-operator\" \"");

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label6:
        $r26 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }

    public com.android.emailcommon.mail.Folder getFolder(java.lang.String)
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String r1;
        com.android.email.mail.store.ImapFolder $r2;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: java.lang.String;

        $r2 = new com.android.email.mail.store.ImapFolder;

        specialinvoke $r2.<com.android.email.mail.store.ImapFolder: void <init>(com.android.email.mail.store.ImapStore,java.lang.String)>(r0, r1);

        return $r2;
    }

    static void createHierarchy(java.util.HashMap)
    {
        java.util.HashMap r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.lang.String r3, r6, $r11;
        com.android.email.mail.store.ImapFolder r4, r7;
        com.android.emailcommon.provider.Mailbox r5, r8, $r13;
        int i0, $i2, $i3, $i4;
        long l1;
        boolean $z0;
        java.lang.Object $r9, $r10, $r12;

        r0 := @parameter0: java.util.HashMap;

        r1 = virtualinvoke r0.<java.util.HashMap: java.util.Set keySet()>();

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.email.mail.store.ImapFolder) $r10;

        r5 = r4.<com.android.email.mail.store.ImapFolder: com.android.emailcommon.provider.Mailbox mMailbox>;

        $r11 = r5.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        $i2 = r5.<com.android.emailcommon.provider.Mailbox: int mDelimiter>;

        i0 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(int)>($i2);

        l1 = -1L;

        r6 = null;

        if i0 == -1 goto label4;

        r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r12 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (com.android.email.mail.store.ImapFolder) $r12;

        if r7 != null goto label2;

        $r13 = null;

        goto label3;

     label2:
        $r13 = r7.<com.android.email.mail.store.ImapFolder: com.android.emailcommon.provider.Mailbox mMailbox>;

     label3:
        r8 = $r13;

        if r8 == null goto label4;

        l1 = r8.<com.android.emailcommon.provider.Mailbox: long mId>;

        $i4 = r8.<com.android.emailcommon.provider.Mailbox: int mFlags>;

        $i3 = $i4 | 3;

        r8.<com.android.emailcommon.provider.Mailbox: int mFlags> = $i3;

     label4:
        r5.<com.android.emailcommon.provider.Mailbox: long mParentKey> = l1;

        r5.<com.android.emailcommon.provider.Mailbox: java.lang.String mParentServerId> = r6;

        goto label1;

     label5:
        return;
    }

    private com.android.email.mail.store.ImapFolder addMailbox(android.content.Context, long, java.lang.String, char, boolean, com.android.emailcommon.provider.Mailbox)
    {
        com.android.email.mail.store.ImapStore r0;
        android.content.Context r1, $r8;
        long l0;
        java.lang.String r2;
        char c1;
        boolean z0, $z1;
        com.android.emailcommon.provider.Mailbox r3;
        int i2;
        com.android.email.mail.store.ImapFolder r4;
        com.android.emailcommon.mail.Folder $r5;
        java.lang.Object[] $r6, $r7, $r10;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.String;

        c1 := @parameter3: char;

        z0 := @parameter4: boolean;

        r3 := @parameter5: com.android.emailcommon.provider.Mailbox;

        if r3 != null goto label1;

        i2 = staticinvoke <com.android.email.LegacyConversions: int inferMailboxTypeFromName(android.content.Context,java.lang.String)>(r1, r2);

        r3 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox getMailboxForPath(android.content.Context,long,java.lang.String)>(r1, l0, r2);

        goto label2;

     label1:
        i2 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

     label2:
        $r5 = virtualinvoke r0.<com.android.email.mail.store.ImapStore: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>(r2);

        r4 = (com.android.email.mail.store.ImapFolder) $r5;

        $z1 = virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: boolean isSaved()>();

        if $z1 == 0 goto label3;

        $r10 = virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: java.lang.Object[] getHashes()>();

        r4.<com.android.email.mail.store.ImapFolder: java.lang.Object[] mHash> = $r10;

     label3:
        staticinvoke <com.android.email.mail.store.ImapStore: void updateMailbox(com.android.emailcommon.provider.Mailbox,long,java.lang.String,char,boolean,int)>(r3, l0, r2, c1, z0, i2);

        $r6 = r4.<com.android.email.mail.store.ImapFolder: java.lang.Object[] mHash>;

        if $r6 != null goto label4;

        $r7 = virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: java.lang.Object[] getHashes()>();

        r4.<com.android.email.mail.store.ImapFolder: java.lang.Object[] mHash> = $r7;

        $r8 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: android.net.Uri save(android.content.Context)>($r8);

     label4:
        r4.<com.android.email.mail.store.ImapFolder: com.android.emailcommon.provider.Mailbox mMailbox> = r3;

        return r4;
    }

    private static void saveMailboxList(android.content.Context, java.util.HashMap)
    {
        android.content.Context r0;
        java.util.HashMap r1;
        java.util.Iterator r2;
        com.android.email.mail.store.ImapFolder r3;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.HashMap;

        $r4 = virtualinvoke r1.<java.util.HashMap: java.util.Collection values()>();

        r2 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.email.mail.store.ImapFolder) $r5;

        virtualinvoke r3.<com.android.email.mail.store.ImapFolder: void save(android.content.Context)>(r0);

        goto label1;

     label2:
        return;
    }

    public com.android.emailcommon.mail.Folder[] updateFolders() throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.store.ImapConnection r1;
        java.util.HashMap r2, $r12;
        java.lang.String r3, r8, r9, $r13, $r18, $r26, $r27, $r28, $r34;
        java.util.List r4;
        java.util.Iterator r5;
        com.android.email.mail.store.imap.ImapResponse r6;
        com.android.email.mail.store.imap.ImapString r7, $r29;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        char c0;
        com.android.email.mail.store.ImapFolder r10, r44;
        java.lang.Throwable r11, $r37;
        com.android.emailcommon.provider.Account $r15, $r17, $r31;
        android.content.Context $r16, $r19, $r20, $r33;
        long $l1, $l2, $l4;
        com.android.emailcommon.mail.Folder[] $r22, r45;
        java.lang.Object[] $r23;
        java.util.Collection $r24;
        int $i3;
        java.lang.Object $r25;
        com.android.email.mail.store.imap.ImapList $r30;
        java.lang.StringBuilder $r35, $r36, $r38, $r39;
        java.io.IOException $r40, r46;
        com.android.emailcommon.mail.MessagingException $r41;
        com.android.emailcommon.mail.AuthenticationFailedException $r42, r47;
        com.android.emailcommon.provider.Mailbox r43;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 = virtualinvoke r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.store.ImapConnection getConnection()>();

     label01:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r2 = $r12;

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>("NOOP");

        r3 = "LIST \"\" \"*\"";

        $r13 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        if $r13 == null goto label02;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LIST \"\" \"");

        $r34 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*\"");

        r3 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        r4 = virtualinvoke r1.<com.android.email.mail.store.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>(r3);

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r25 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.email.mail.store.imap.ImapResponse) $r25;

        $z3 = virtualinvoke r6.<com.android.email.mail.store.imap.ImapResponse: boolean isDataResponse(int,java.lang.String)>(0, "LIST");

        if $z3 == 0 goto label09;

        r7 = virtualinvoke r6.<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapString getStringOrEmpty(int)>(3);

        $z2 = virtualinvoke r7.<com.android.email.mail.store.imap.ImapString: boolean isEmpty()>();

        if $z2 == 0 goto label04;

        goto label03;

     label04:
        $r27 = virtualinvoke r7.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        $r28 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        r8 = staticinvoke <com.android.email.mail.store.ImapStore: java.lang.String decodeFolderName(java.lang.String,java.lang.String)>($r27, $r28);

        $r26 = "INBOX";

        $z5 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r8);

        if $z5 == 0 goto label05;

        goto label03;

     label05:
        $r30 = virtualinvoke r6.<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapList getListOrEmpty(int)>(1);

        $z4 = virtualinvoke $r30.<com.android.email.mail.store.imap.ImapList: boolean contains(java.lang.String)>("\\NOSELECT");

        if $z4 != 0 goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        z0 = $z7;

        $r29 = virtualinvoke r6.<com.android.email.mail.store.imap.ImapResponse: com.android.email.mail.store.imap.ImapString getStringOrEmpty(int)>(2);

        r9 = virtualinvoke $r29.<com.android.email.mail.store.imap.ImapString: java.lang.String getString()>();

        c0 = 0;

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z6 != 0 goto label08;

        c0 = virtualinvoke r9.<java.lang.String: char charAt(int)>(0);

     label08:
        $r33 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        $r31 = r0.<com.android.email.mail.store.ImapStore: com.android.emailcommon.provider.Account mAccount>;

        $l4 = $r31.<com.android.emailcommon.provider.Account: long mId>;

        r10 = specialinvoke r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.store.ImapFolder addMailbox(android.content.Context,long,java.lang.String,char,boolean,com.android.emailcommon.provider.Mailbox)>($r33, $l4, r8, c0, z0, null);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r10);

     label09:
        goto label03;

     label10:
        $r16 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        $r15 = r0.<com.android.email.mail.store.ImapStore: com.android.emailcommon.provider.Account mAccount>;

        $l1 = $r15.<com.android.emailcommon.provider.Account: long mId>;

        r43 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>($r16, $l1, 0);

        $r19 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        $r17 = r0.<com.android.email.mail.store.ImapStore: com.android.emailcommon.provider.Account mAccount>;

        $l2 = $r17.<com.android.emailcommon.provider.Account: long mId>;

        $r18 = r43.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r44 = specialinvoke r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.store.ImapFolder addMailbox(android.content.Context,long,java.lang.String,char,boolean,com.android.emailcommon.provider.Mailbox)>($r19, $l2, $r18, 0, 1, r43);

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("INBOX", r44);

        staticinvoke <com.android.email.mail.store.ImapStore: void createHierarchy(java.util.HashMap)>(r2);

        $r20 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        staticinvoke <com.android.email.mail.store.ImapStore: void saveMailboxList(android.content.Context,java.util.HashMap)>($r20, r2);

        $r24 = virtualinvoke r2.<java.util.HashMap: java.util.Collection values()>();

        $i3 = virtualinvoke r2.<java.util.HashMap: int size()>();

        $r22 = newarray (com.android.emailcommon.mail.Folder)[$i3];

        $r23 = interfaceinvoke $r24.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r22);

        r45 = (com.android.emailcommon.mail.Folder[]) $r23;

     label11:
        if r1 == null goto label12;

        virtualinvoke r0.<com.android.email.mail.store.ImapStore: void poolConnection(com.android.email.mail.store.ImapConnection)>(r1);

     label12:
        return r45;

     label13:
        $r40 := @caughtexception;

        r46 = $r40;

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void close()>();

        $r41 = new com.android.emailcommon.mail.MessagingException;

        specialinvoke $r41.<com.android.emailcommon.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to get folder list", r46);

        throw $r41;

     label14:
        $r42 := @caughtexception;

        r47 = $r42;

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void destroyResponses()>();

        r1 = null;

        throw r47;

     label15:
        $r37 := @caughtexception;

        r11 = $r37;

     label16:
        if r1 == null goto label17;

        virtualinvoke r0.<com.android.email.mail.store.ImapStore: void poolConnection(com.android.email.mail.store.ImapConnection)>(r1);

     label17:
        throw r11;

        catch java.io.IOException from label01 to label11 with label13;
        catch com.android.emailcommon.mail.AuthenticationFailedException from label01 to label11 with label14;
        catch java.lang.Throwable from label01 to label11 with label15;
        catch java.lang.Throwable from label13 to label16 with label15;
    }

    public android.os.Bundle checkSettings() throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.store.ImapStore r0;
        byte b0;
        android.os.Bundle r1, $r5;
        com.android.email.mail.store.ImapConnection r2, $r6;
        java.io.IOException r3, $r8;
        java.lang.Throwable r4, $r7;
        java.lang.String $r9;

        r0 := @this: com.android.email.mail.store.ImapStore;

        b0 = -1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r1 = $r5;

        $r6 = new com.android.email.mail.store.ImapConnection;

        specialinvoke $r6.<com.android.email.mail.store.ImapConnection: void <init>(com.android.email.mail.store.ImapStore)>(r0);

        r2 = $r6;

     label1:
        virtualinvoke r2.<com.android.email.mail.store.ImapConnection: void open()>();

        virtualinvoke r2.<com.android.email.mail.store.ImapConnection: void close()>();

     label2:
        virtualinvoke r2.<com.android.email.mail.store.ImapConnection: void destroyResponses()>();

        goto label7;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = virtualinvoke r3.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("validate_error_message", $r9);

        b0 = 1;

     label4:
        virtualinvoke r2.<com.android.email.mail.store.ImapConnection: void destroyResponses()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r2.<com.android.email.mail.store.ImapConnection: void destroyResponses()>();

        throw r4;

     label7:
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("validate_result_code", b0);

        return r1;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    boolean isUserPrefixSet()
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathSeparator>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    void setPathSeparator(java.lang.String)
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathSeparator> = r1;

        return;
    }

    void setPathPrefix(java.lang.String)
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix> = r1;

        return;
    }

    android.content.Context getContext()
    {
        com.android.email.mail.store.ImapStore r0;
        android.content.Context $r1;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: android.content.Context mContext>;

        return $r1;
    }

    com.android.email.mail.transport.MailTransport cloneTransport()
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.transport.MailTransport $r1, $r2;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: com.android.email.mail.transport.MailTransport mTransport>;

        $r2 = virtualinvoke $r1.<com.android.email.mail.transport.MailTransport: com.android.email.mail.transport.MailTransport clone()>();

        return $r2;
    }

    void ensurePrefixIsValid()
    {
        com.android.email.mail.store.ImapStore r0;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r7, $r9;

        r0 := @this: com.android.email.mail.store.ImapStore;

        $r1 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathSeparator>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label1;

        $r4 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        $r3 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathSeparator>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean endsWith(java.lang.String)>($r3);

        if $z2 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathSeparator>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.email.mail.store.ImapStore: java.lang.String mPathPrefix> = $r10;

     label1:
        return;
    }

    com.android.email.mail.store.ImapConnection getConnection()
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.store.ImapConnection r1, $r5, $r6;
        java.util.concurrent.ConcurrentLinkedQueue $r3;
        java.lang.Object $r4;
        java.io.IOException $r8;
        com.android.emailcommon.mail.MessagingException $r9;

        r0 := @this: com.android.email.mail.store.ImapStore;

     label1:
        $r3 = r0.<com.android.email.mail.store.ImapStore: java.util.concurrent.ConcurrentLinkedQueue mConnectionPool>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

        $r5 = (com.android.email.mail.store.ImapConnection) $r4;

        r1 = $r5;

        if $r5 == null goto label7;

     label2:
        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void setStore(com.android.email.mail.store.ImapStore)>(r0);

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: java.util.List executeSimpleCommand(java.lang.String)>("NOOP");

     label3:
        goto label7;

     label4:
        $r9 := @caughtexception;

        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void close()>();

        goto label1;

     label7:
        if r1 != null goto label8;

        $r6 = new com.android.email.mail.store.ImapConnection;

        specialinvoke $r6.<com.android.email.mail.store.ImapConnection: void <init>(com.android.email.mail.store.ImapStore)>(r0);

        r1 = $r6;

     label8:
        return r1;

        catch com.android.emailcommon.mail.MessagingException from label2 to label3 with label4;
        catch java.io.IOException from label2 to label3 with label5;
    }

    void poolConnection(com.android.email.mail.store.ImapConnection)
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.store.ImapConnection r1;
        java.util.concurrent.ConcurrentLinkedQueue $r2;

        r0 := @this: com.android.email.mail.store.ImapStore;

        r1 := @parameter0: com.android.email.mail.store.ImapConnection;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void destroyResponses()>();

        $r2 = r0.<com.android.email.mail.store.ImapStore: java.util.concurrent.ConcurrentLinkedQueue mConnectionPool>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    static java.lang.String encodeFolderName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, $r7;
        java.nio.ByteBuffer r2;
        byte[] r3;
        boolean $z0;
        java.nio.charset.Charset $r5;
        int $i0;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = "INBOX";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        if r1 == null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = <com.android.email.mail.store.ImapStore: java.nio.charset.Charset MODIFIED_UTF_7_CHARSET>;

        r2 = virtualinvoke $r5.<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>(r0);

        $i0 = virtualinvoke r2.<java.nio.ByteBuffer: int limit()>();

        r3 = newarray (byte)[$i0];

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r3);

        $r7 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String fromAscii(byte[])>(r3);

        return $r7;
    }

    static java.lang.String decodeFolderName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r2;
        java.nio.charset.Charset $r3;
        byte[] $r4;
        java.nio.ByteBuffer $r5;
        java.nio.CharBuffer $r6;
        boolean $z0;
        int $i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = <com.android.email.mail.store.ImapStore: java.nio.charset.Charset MODIFIED_UTF_7_CHARSET>;

        $r4 = staticinvoke <com.android.emailcommon.utility.Utility: byte[] toAscii(java.lang.String)>(r0);

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r4);

        $r6 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r5);

        r2 = virtualinvoke $r6.<java.nio.CharBuffer: java.lang.String toString()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        return r2;
    }

    static java.lang.String joinMessageUids(com.android.emailcommon.mail.Message[])
    {
        com.android.emailcommon.mail.Message[] r0, r2;
        java.lang.StringBuilder r1, $r4;
        boolean z0;
        int i0, i1;
        com.android.emailcommon.mail.Message r3;
        java.lang.String $r5, $r6;

        r0 := @parameter0: com.android.emailcommon.mail.Message[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        z0 = 0;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

     label2:
        $r6 = virtualinvoke r3.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        z0 = 1;

        i1 = i1 + 1;

        goto label1;

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void closeConnections()
    {
        com.android.email.mail.store.ImapStore r0;
        com.android.email.mail.store.ImapConnection r1, $r4;
        java.util.concurrent.ConcurrentLinkedQueue $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.email.mail.store.ImapStore;

     label1:
        $r2 = r0.<com.android.email.mail.store.ImapStore: java.util.concurrent.ConcurrentLinkedQueue mConnectionPool>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object poll()>();

        $r4 = (com.android.email.mail.store.ImapConnection) $r3;

        r1 = $r4;

        if $r4 == null goto label2;

        virtualinvoke r1.<com.android.email.mail.store.ImapConnection: void close()>();

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        com.beetstra.jutf7.CharsetProvider $r0;
        java.nio.charset.Charset $r1;

        $r0 = new com.beetstra.jutf7.CharsetProvider;

        specialinvoke $r0.<com.beetstra.jutf7.CharsetProvider: void <init>()>();

        $r1 = virtualinvoke $r0.<com.beetstra.jutf7.CharsetProvider: java.nio.charset.Charset charsetForName(java.lang.String)>("X-RFC-3501");

        <com.android.email.mail.store.ImapStore: java.nio.charset.Charset MODIFIED_UTF_7_CHARSET> = $r1;

        <com.android.email.mail.store.ImapStore: java.lang.String sImapId> = null;

        return;
    }
}
