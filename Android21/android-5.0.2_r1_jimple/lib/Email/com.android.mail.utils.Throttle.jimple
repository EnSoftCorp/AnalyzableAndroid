public class com.android.mail.utils.Throttle extends java.lang.Object
{
    public static final boolean DEBUG;
    public static final int DEFAULT_MIN_TIMEOUT;
    public static final int DEFAULT_MAX_TIMEOUT;
    public static final int TIMEOUT_EXTEND_INTERVAL;
    private static final java.lang.String LOG_TAG;
    private static java.util.Timer TIMER;
    private final com.android.mail.utils.Clock mClock;
    private final java.util.Timer mTimer;
    private final java.lang.String mName;
    private final android.os.Handler mHandler;
    private final java.lang.Runnable mCallback;
    private final int mMinTimeout;
    private final int mMaxTimeout;
    private int mTimeout;
    private long mLastEventTime;
    private com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask;

    public void <init>(java.lang.String, java.lang.Runnable, android.os.Handler)
    {
        com.android.mail.utils.Throttle r0;
        java.lang.String r1;
        java.lang.Runnable r2;
        android.os.Handler r3;

        r0 := @this: com.android.mail.utils.Throttle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: android.os.Handler;

        specialinvoke r0.<com.android.mail.utils.Throttle: void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int)>(r1, r2, r3, 150, 2500);

        return;
    }

    public void <init>(java.lang.String, java.lang.Runnable, android.os.Handler, int, int)
    {
        com.android.mail.utils.Throttle r0;
        java.lang.String r1;
        java.lang.Runnable r2;
        android.os.Handler r3;
        int i0, i1;
        java.util.Timer $r4;
        com.android.mail.utils.Clock $r5;

        r0 := @this: com.android.mail.utils.Throttle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r5 = <com.android.mail.utils.Clock: com.android.mail.utils.Clock INSTANCE>;

        $r4 = <com.android.mail.utils.Throttle: java.util.Timer TIMER>;

        specialinvoke r0.<com.android.mail.utils.Throttle: void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int,com.android.mail.utils.Clock,java.util.Timer)>(r1, r2, r3, i0, i1, $r5, $r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.Runnable, android.os.Handler, int, int, com.android.mail.utils.Clock, java.util.Timer)
    {
        com.android.mail.utils.Throttle r0;
        java.lang.String r1;
        java.lang.Runnable r2;
        android.os.Handler r3;
        int i0, i1, $i2;
        com.android.mail.utils.Clock r4;
        java.util.Timer r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.mail.utils.Throttle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Runnable;

        r3 := @parameter2: android.os.Handler;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: com.android.mail.utils.Clock;

        r5 := @parameter6: java.util.Timer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i1 >= i0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        r0.<com.android.mail.utils.Throttle: java.lang.String mName> = r1;

        r0.<com.android.mail.utils.Throttle: java.lang.Runnable mCallback> = r2;

        r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Clock mClock> = r4;

        r0.<com.android.mail.utils.Throttle: java.util.Timer mTimer> = r5;

        r0.<com.android.mail.utils.Throttle: android.os.Handler mHandler> = r3;

        r0.<com.android.mail.utils.Throttle: int mMinTimeout> = i0;

        r0.<com.android.mail.utils.Throttle: int mMaxTimeout> = i1;

        $i2 = r0.<com.android.mail.utils.Throttle: int mMinTimeout>;

        r0.<com.android.mail.utils.Throttle: int mTimeout> = $i2;

        return;
    }

    private void debugLog(java.lang.String)
    {
        com.android.mail.utils.Throttle r0;
        java.lang.String r1, $r3, $r5, $r9;
        java.lang.StringBuilder $r2, $r4, $r6, $r7, $r8;

        r0 := @this: com.android.mail.utils.Throttle;

        r1 := @parameter0: java.lang.String;

        $r3 = <com.android.mail.utils.Throttle: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throttle: [");

        $r5 = r0.<com.android.mail.utils.Throttle: java.lang.String mName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r9);

        return;
    }

    private boolean isCallbackScheduled()
    {
        com.android.mail.utils.Throttle r0;
        com.android.mail.utils.Throttle$MyTimerTask $r1;
        boolean $z0;

        r0 := @this: com.android.mail.utils.Throttle;

        $r1 = r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void cancelScheduledCallback()
    {
        com.android.mail.utils.Throttle r0;
        com.android.mail.utils.Throttle$MyTimerTask $r1, $r2;

        r0 := @this: com.android.mail.utils.Throttle;

        $r1 = r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask>;

        virtualinvoke $r2.<com.android.mail.utils.Throttle$MyTimerTask: boolean cancel()>();

        r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask> = null;

     label1:
        return;
    }

    public void updateTimeout()
    {
        com.android.mail.utils.Throttle r0;
        long l0, $l1, $l2;
        com.android.mail.utils.Clock $r1;
        byte $b3;
        int $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: com.android.mail.utils.Throttle;

        $r1 = r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Clock mClock>;

        l0 = virtualinvoke $r1.<com.android.mail.utils.Clock: long getTime()>();

        $l1 = r0.<com.android.mail.utils.Throttle: long mLastEventTime>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 500L;

        if $b3 > 0 goto label1;

        $i5 = r0.<com.android.mail.utils.Throttle: int mTimeout>;

        $i6 = $i5 * 2;

        r0.<com.android.mail.utils.Throttle: int mTimeout> = $i6;

        $i8 = r0.<com.android.mail.utils.Throttle: int mTimeout>;

        $i7 = r0.<com.android.mail.utils.Throttle: int mMaxTimeout>;

        if $i8 < $i7 goto label2;

        $i9 = r0.<com.android.mail.utils.Throttle: int mMaxTimeout>;

        r0.<com.android.mail.utils.Throttle: int mTimeout> = $i9;

        goto label2;

     label1:
        $i4 = r0.<com.android.mail.utils.Throttle: int mMinTimeout>;

        r0.<com.android.mail.utils.Throttle: int mTimeout> = $i4;

     label2:
        r0.<com.android.mail.utils.Throttle: long mLastEventTime> = l0;

        return;
    }

    public void onEvent()
    {
        com.android.mail.utils.Throttle r0;
        boolean $z0;
        com.android.mail.utils.Throttle$MyTimerTask $r1, $r2;
        int $i0;
        long $l1;
        java.util.Timer $r3;

        r0 := @this: com.android.mail.utils.Throttle;

        virtualinvoke r0.<com.android.mail.utils.Throttle: void updateTimeout()>();

        $z0 = specialinvoke r0.<com.android.mail.utils.Throttle: boolean isCallbackScheduled()>();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r1 = new com.android.mail.utils.Throttle$MyTimerTask;

        specialinvoke $r1.<com.android.mail.utils.Throttle$MyTimerTask: void <init>(com.android.mail.utils.Throttle,com.android.mail.utils.Throttle$1)>(r0, null);

        r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask> = $r1;

        $r3 = r0.<com.android.mail.utils.Throttle: java.util.Timer mTimer>;

        $r2 = r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask>;

        $i0 = r0.<com.android.mail.utils.Throttle: int mTimeout>;

        $l1 = (long) $i0;

        virtualinvoke $r3.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r2, $l1);

     label2:
        return;
    }

    public int getTimeoutForTest()
    {
        com.android.mail.utils.Throttle r0;
        int $i0;

        r0 := @this: com.android.mail.utils.Throttle;

        $i0 = r0.<com.android.mail.utils.Throttle: int mTimeout>;

        return $i0;
    }

    public long getLastEventTimeForTest()
    {
        com.android.mail.utils.Throttle r0;
        long $l0;

        r0 := @this: com.android.mail.utils.Throttle;

        $l0 = r0.<com.android.mail.utils.Throttle: long mLastEventTime>;

        return $l0;
    }

    static android.os.Handler access$200(com.android.mail.utils.Throttle)
    {
        com.android.mail.utils.Throttle r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.mail.utils.Throttle;

        $r1 = r0.<com.android.mail.utils.Throttle: android.os.Handler mHandler>;

        return $r1;
    }

    static com.android.mail.utils.Throttle$MyTimerTask access$302(com.android.mail.utils.Throttle, com.android.mail.utils.Throttle$MyTimerTask)
    {
        com.android.mail.utils.Throttle r0;
        com.android.mail.utils.Throttle$MyTimerTask r1;

        r0 := @parameter0: com.android.mail.utils.Throttle;

        r1 := @parameter1: com.android.mail.utils.Throttle$MyTimerTask;

        r0.<com.android.mail.utils.Throttle: com.android.mail.utils.Throttle$MyTimerTask mRunningTimerTask> = r1;

        return r1;
    }

    static java.lang.Runnable access$500(com.android.mail.utils.Throttle)
    {
        com.android.mail.utils.Throttle r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.mail.utils.Throttle;

        $r1 = r0.<com.android.mail.utils.Throttle: java.lang.Runnable mCallback>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.Timer $r1;

        <com.android.mail.utils.Throttle: int TIMEOUT_EXTEND_INTERVAL> = 500;

        <com.android.mail.utils.Throttle: int DEFAULT_MAX_TIMEOUT> = 2500;

        <com.android.mail.utils.Throttle: int DEFAULT_MIN_TIMEOUT> = 150;

        <com.android.mail.utils.Throttle: boolean DEBUG> = 0;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.utils.Throttle: java.lang.String LOG_TAG> = $r0;

        $r1 = new java.util.Timer;

        specialinvoke $r1.<java.util.Timer: void <init>()>();

        <com.android.mail.utils.Throttle: java.util.Timer TIMER> = $r1;

        return;
    }
}
