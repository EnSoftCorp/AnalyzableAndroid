public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer
{
    private static final java.lang.String LCK;
    private final java.io.Writer out;
    private final java.io.File lockFile;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null);

        return;
    }

    public void <init>(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null);

        return;
    }

    public void <init>(java.lang.String, boolean, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.String r1, r2;
        boolean z0;
        java.io.File $r3;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r3, z0, r2);

        return;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null);

        return;
    }

    public void <init>(java.io.File, boolean) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null);

        return;
    }

    public void <init>(java.io.File, boolean, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1;
        boolean z0;
        java.lang.String r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, null, z0, r2);

        return;
    }

    public void <init>(java.io.File, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null);

        return;
    }

    public void <init>(java.io.File, java.lang.String, boolean, java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1, r4, $r5, $r6, $r7, $r14, r16;
        java.lang.String r2, r3, $r9, $r12;
        boolean z0, $z1;
        java.lang.StringBuilder $r8, $r10, $r11;
        java.io.Writer $r13;
        java.io.IOException $r15;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r16 = virtualinvoke r1.<java.io.File: java.io.File getAbsoluteFile()>();

        $r5 = virtualinvoke r16.<java.io.File: java.io.File getParentFile()>();

        if $r5 == null goto label1;

        $r14 = virtualinvoke r16.<java.io.File: java.io.File getParentFile()>();

        staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r14);

     label1:
        $z1 = virtualinvoke r16.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        $r15 = new java.io.IOException;

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>("File specified is a directory");

        throw $r15;

     label2:
        if r3 != null goto label3;

        r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

     label3:
        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r3);

        r4 = $r6;

        staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(r4);

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>(r4);

        $r7 = new java.io.File;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r16.<java.io.File: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".lck");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r4, $r12);

        r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile> = $r7;

        specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>();

        $r13 = specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer initWriter(java.io.File,java.lang.String,boolean)>(r16, r2, z0);

        r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out> = $r13;

        return;
    }

    private void testLockDir(java.io.File) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1;
        boolean $z0, $z1;
        java.io.IOException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r6, $r9, $r10, $r12;
        java.lang.String $r5, $r7, $r11, $r13;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find lockDir: ");

        $r11 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $z1 = virtualinvoke r1.<java.io.File: boolean canWrite()>();

        if $z1 != 0 goto label2;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not write to lockDir: ");

        $r5 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label2:
        return;
    }

    private void createLock() throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r13;
        java.io.File $r3, $r4, $r8;
        boolean $z0;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r10, $r11;
        java.lang.String $r9, $r12;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 = class "org/apache/commons/io/output/LockableFileWriter";

        entermonitor class "org/apache/commons/io/output/LockableFileWriter";

     label1:
        $r3 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

        if $z0 != 0 goto label2;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t write file, lock ");

        $r8 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r5;

     label2:
        $r4 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        virtualinvoke $r4.<java.io.File: void deleteOnExit()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r2 = $r13;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.io.Writer initWriter(java.io.File, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.File r1, $r11, $r12;
        java.lang.String r2, $r6, $r9;
        boolean z0, z1;
        java.io.FileOutputStream r3, $r5;
        java.io.IOException r4, $r10;
        java.io.OutputStreamWriter $r7, r14;
        java.io.FileWriter $r8;
        java.lang.RuntimeException $r13, r15;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 = virtualinvoke r1.<java.io.File: boolean exists()>();

        r3 = null;

     label1:
        if r2 != null goto label2;

        $r8 = new java.io.FileWriter;

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r8.<java.io.FileWriter: void <init>(java.lang.String,boolean)>($r9, z0);

        r14 = $r8;

        goto label3;

     label2:
        $r5 = new java.io.FileOutputStream;

        $r6 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>($r6, z0);

        r3 = $r5;

        $r7 = new java.io.OutputStreamWriter;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r3, r2);

        r14 = $r7;

     label3:
        goto label8;

     label4:
        $r10 := @caughtexception;

        r4 = $r10;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>(null);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r3);

        $r11 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        virtualinvoke $r11.<java.io.File: boolean delete()>();

        if z1 != 0 goto label5;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label5:
        throw r4;

     label6:
        $r13 := @caughtexception;

        r15 = $r13;

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.Writer)>(null);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>(r3);

        $r12 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        virtualinvoke $r12.<java.io.File: boolean delete()>();

        if z1 != 0 goto label7;

        virtualinvoke r1.<java.io.File: boolean delete()>();

     label7:
        throw r15;

     label8:
        return r14;

        catch java.io.IOException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label6;
    }

    public void close() throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.Throwable r1, $r4;
        java.io.Writer $r2;
        java.io.File $r3, $r5;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

     label1:
        $r2 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void close()>();

     label2:
        $r3 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

     label4:
        $r5 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        int i0;
        java.io.Writer $r1;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(i0);

        return;
    }

    public void write(char[]) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        char[] r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: char[];

        $r2 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(char[])>(r1);

        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        char[] r1;
        int i0, i1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.String r1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>(r1);

        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.lang.String r1;
        int i0, i1;
        java.io.Writer $r2;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String,int,int)>(r1, i0, i1);

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.commons.io.output.LockableFileWriter r0;
        java.io.Writer $r1;

        r0 := @this: org.apache.commons.io.output.LockableFileWriter;

        $r1 = r0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.commons.io.output.LockableFileWriter: java.lang.String LCK> = ".lck";

        return;
    }
}
