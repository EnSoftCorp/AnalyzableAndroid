public class com.android.mail.analytics.AnalyticsTimer extends java.lang.Object
{
    public static final java.lang.String OPEN_CONV_VIEW_FROM_LIST;
    public static final java.lang.String COLD_START_LAUNCHER;
    public static final java.lang.String SEARCH_TO_LIST;
    public static final java.lang.String COMPOSE_HTML_TO_SPAN;
    public static final java.lang.String COMPOSE_SPAN_TO_HTML;
    private final java.util.Map mStartTimes;
    private static final com.android.mail.analytics.AnalyticsTimer mInstance;

    private void <init>()
    {
        com.android.mail.analytics.AnalyticsTimer r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.android.mail.analytics.AnalyticsTimer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.concurrent.ConcurrentMap newConcurrentMap()>();

        r0.<com.android.mail.analytics.AnalyticsTimer: java.util.Map mStartTimes> = $r1;

        return;
    }

    public static com.android.mail.analytics.AnalyticsTimer getInstance()
    {
        com.android.mail.analytics.AnalyticsTimer $r0;

        $r0 = <com.android.mail.analytics.AnalyticsTimer: com.android.mail.analytics.AnalyticsTimer mInstance>;

        return $r0;
    }

    public void trackStart(java.lang.String)
    {
        com.android.mail.analytics.AnalyticsTimer r0;
        java.lang.String r1;
        java.util.Map $r2;
        long $l0;
        java.lang.Long $r3;

        r0 := @this: com.android.mail.analytics.AnalyticsTimer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.mail.analytics.AnalyticsTimer: java.util.Map mStartTimes>;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r3);

        return;
    }

    public void logDuration(java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.mail.analytics.AnalyticsTimer r0;
        java.lang.String r1, r2, r3, r4;
        boolean z0;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.android.mail.analytics.AnalyticsTimer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

     label1:
        virtualinvoke r0.<com.android.mail.analytics.AnalyticsTimer: long logDurationAndReturn(java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)>(r1, z0, r2, r3, r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public long logDurationAndReturn(java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String) throws java.lang.IllegalStateException
    {
        com.android.mail.analytics.AnalyticsTimer r0;
        java.lang.String r1, r2, r3, r4, $r14;
        boolean z0;
        java.lang.Long r5, $r15;
        long l0, $l1, $l2;
        java.util.Map $r6, $r13;
        java.lang.Object $r7, $r16;
        com.android.mail.analytics.Tracker $r8;
        java.lang.IllegalStateException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: com.android.mail.analytics.AnalyticsTimer;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        if z0 == 0 goto label1;

        $r13 = r0.<com.android.mail.analytics.AnalyticsTimer: java.util.Map mStartTimes>;

        $r16 = interfaceinvoke $r13.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r15 = (java.lang.Long) $r16;

        goto label2;

     label1:
        $r6 = r0.<com.android.mail.analytics.AnalyticsTimer: java.util.Map mStartTimes>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r15 = (java.lang.Long) $r7;

     label2:
        r5 = $r15;

        if r5 != null goto label3;

        $r9 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to log id that doesn\'t exist: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label3:
        $l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l2 = virtualinvoke r5.<java.lang.Long: long longValue()>();

        l0 = $l1 - $l2;

        $r8 = staticinvoke <com.android.mail.analytics.Analytics: com.android.mail.analytics.Tracker getInstance()>();

        interfaceinvoke $r8.<com.android.mail.analytics.Tracker: void sendTiming(java.lang.String,long,java.lang.String,java.lang.String)>(r2, l0, r3, r4);

        return l0;
    }

    public void stopTracking(java.lang.String)
    {
        com.android.mail.analytics.AnalyticsTimer r0;
        java.lang.String r1;
        java.util.Map $r2;

        r0 := @this: com.android.mail.analytics.AnalyticsTimer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.mail.analytics.AnalyticsTimer: java.util.Map mStartTimes>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    static void <clinit>()
    {
        com.android.mail.analytics.AnalyticsTimer $r0;

        <com.android.mail.analytics.AnalyticsTimer: java.lang.String COMPOSE_SPAN_TO_HTML> = "compose_span_to_html";

        <com.android.mail.analytics.AnalyticsTimer: java.lang.String COMPOSE_HTML_TO_SPAN> = "compose_html_to_span";

        <com.android.mail.analytics.AnalyticsTimer: java.lang.String SEARCH_TO_LIST> = "search_to_list";

        <com.android.mail.analytics.AnalyticsTimer: java.lang.String COLD_START_LAUNCHER> = "cold_start_to_list";

        <com.android.mail.analytics.AnalyticsTimer: java.lang.String OPEN_CONV_VIEW_FROM_LIST> = "open_conv_from_list";

        $r0 = new com.android.mail.analytics.AnalyticsTimer;

        specialinvoke $r0.<com.android.mail.analytics.AnalyticsTimer: void <init>()>();

        <com.android.mail.analytics.AnalyticsTimer: com.android.mail.analytics.AnalyticsTimer mInstance> = $r0;

        return;
    }
}
