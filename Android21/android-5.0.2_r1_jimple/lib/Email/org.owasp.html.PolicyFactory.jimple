public final class org.owasp.html.PolicyFactory extends java.lang.Object implements com.google.common.base.Function
{
    private final com.google.common.collect.ImmutableMap policies;
    private final com.google.common.collect.ImmutableMap globalAttrPolicies;
    private final com.google.common.collect.ImmutableSet textContainers;

    void <init>(com.google.common.collect.ImmutableMap, com.google.common.collect.ImmutableSet, com.google.common.collect.ImmutableMap)
    {
        org.owasp.html.PolicyFactory r0;
        com.google.common.collect.ImmutableMap r1, r3;
        com.google.common.collect.ImmutableSet r2;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: com.google.common.collect.ImmutableMap;

        r2 := @parameter1: com.google.common.collect.ImmutableSet;

        r3 := @parameter2: com.google.common.collect.ImmutableMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies> = r1;

        r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers> = r2;

        r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies> = r3;

        return;
    }

    public org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver)
    {
        org.owasp.html.PolicyFactory r0;
        org.owasp.html.HtmlStreamEventReceiver r1;
        org.owasp.html.ElementAndAttributePolicyBasedSanitizerPolicy $r2;
        com.google.common.collect.ImmutableSet $r3;
        com.google.common.collect.ImmutableMap $r4;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: org.owasp.html.HtmlStreamEventReceiver;

        $r2 = new org.owasp.html.ElementAndAttributePolicyBasedSanitizerPolicy;

        $r4 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies>;

        $r3 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        specialinvoke $r2.<org.owasp.html.ElementAndAttributePolicyBasedSanitizerPolicy: void <init>(org.owasp.html.HtmlStreamEventReceiver,com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableSet)>(r1, $r4, $r3);

        return $r2;
    }

    public org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver, org.owasp.html.HtmlChangeListener, java.lang.Object)
    {
        org.owasp.html.PolicyFactory r0;
        org.owasp.html.HtmlStreamEventReceiver r1, $r6;
        org.owasp.html.HtmlChangeListener r2;
        java.lang.Object r3;
        org.owasp.html.HtmlChangeReporter r4, $r5;
        org.owasp.html.HtmlSanitizer$Policy $r7, $r8, $r9;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: org.owasp.html.HtmlStreamEventReceiver;

        r2 := @parameter1: org.owasp.html.HtmlChangeListener;

        r3 := @parameter2: java.lang.Object;

        if r2 != null goto label1;

        $r9 = virtualinvoke r0.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver)>(r1);

        return $r9;

     label1:
        $r5 = new org.owasp.html.HtmlChangeReporter;

        specialinvoke $r5.<org.owasp.html.HtmlChangeReporter: void <init>(org.owasp.html.HtmlStreamEventReceiver,org.owasp.html.HtmlChangeListener,java.lang.Object)>(r1, r2, r3);

        r4 = $r5;

        $r6 = virtualinvoke r4.<org.owasp.html.HtmlChangeReporter: org.owasp.html.HtmlStreamEventReceiver getWrappedRenderer()>();

        $r7 = virtualinvoke r0.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver)>($r6);

        virtualinvoke r4.<org.owasp.html.HtmlChangeReporter: void setPolicy(org.owasp.html.HtmlSanitizer$Policy)>($r7);

        $r8 = virtualinvoke r4.<org.owasp.html.HtmlChangeReporter: org.owasp.html.HtmlSanitizer$Policy getWrappedPolicy()>();

        return $r8;
    }

    public java.lang.String sanitize(java.lang.String)
    {
        org.owasp.html.PolicyFactory r0;
        java.lang.String r1, $r2;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.owasp.html.PolicyFactory: java.lang.String sanitize(java.lang.String,org.owasp.html.HtmlChangeListener,java.lang.Object)>(r1, null, null);

        return $r2;
    }

    public java.lang.String sanitize(java.lang.String, org.owasp.html.HtmlChangeListener, java.lang.Object)
    {
        org.owasp.html.PolicyFactory r0;
        java.lang.String r1, $r9;
        org.owasp.html.HtmlChangeListener r2;
        java.lang.Object r3;
        java.lang.StringBuilder r4, $r5;
        int $i0;
        org.owasp.html.Handler $r6;
        org.owasp.html.HtmlStreamRenderer $r7;
        org.owasp.html.HtmlSanitizer$Policy $r8;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.owasp.html.HtmlChangeListener;

        r3 := @parameter2: java.lang.Object;

        if r1 != null goto label1;

        return "";

     label1:
        $r5 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(int)>($i0);

        r4 = $r5;

        $r6 = <org.owasp.html.Handler: org.owasp.html.Handler DO_NOTHING>;

        $r7 = staticinvoke <org.owasp.html.HtmlStreamRenderer: org.owasp.html.HtmlStreamRenderer create(java.lang.StringBuilder,org.owasp.html.Handler)>(r4, $r6);

        $r8 = virtualinvoke r0.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver,org.owasp.html.HtmlChangeListener,java.lang.Object)>($r7, r2, r3);

        staticinvoke <org.owasp.html.HtmlSanitizer: void sanitize(java.lang.String,org.owasp.html.HtmlSanitizer$Policy)>(r1, $r8);

        $r9 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public org.owasp.html.PolicyFactory and(org.owasp.html.PolicyFactory)
    {
        org.owasp.html.PolicyFactory r0, r1, $r30;
        com.google.common.collect.ImmutableMap$Builder r2, r66;
        java.util.Iterator r3, r59, r67, r69;
        java.util.Map$Entry r4, r60, r68, r70;
        java.lang.String r5, r8, r61, r71;
        org.owasp.html.ElementAndAttributePolicies r6, r7, r58, r62, r63;
        com.google.common.collect.ImmutableMap $r9, $r11, $r22, $r23, $r24, $r25, $r31, $r34, $r38, $r46, $r50, $r52, $r57, r65;
        com.google.common.collect.ImmutableSet $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r26, $r27, r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.google.common.collect.ImmutableSet$Builder $r18, $r20, $r21;
        java.lang.Object $r28, $r29, $r33, $r36, $r37, $r40, $r44, $r45, $r48, $r49, $r51, $r54, $r55, $r56;
        org.owasp.html.AttributePolicy[] $r35;
        org.owasp.html.AttributePolicy $r39, $r42, $r43;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: org.owasp.html.PolicyFactory;

        r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r9 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies>;

        $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r3 = virtualinvoke $r10.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r54 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r54;

        $r55 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r55;

        $r56 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (org.owasp.html.ElementAndAttributePolicies) $r56;

        $r57 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies>;

        $r51 = virtualinvoke $r57.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (org.owasp.html.ElementAndAttributePolicies) $r51;

        if r7 == null goto label02;

        r58 = virtualinvoke r6.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementAndAttributePolicies and(org.owasp.html.ElementAndAttributePolicies)>(r7);

        goto label03;

     label02:
        $r52 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        r58 = virtualinvoke r6.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementAndAttributePolicies andGlobals(java.util.Map)>($r52);

     label03:
        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r58);

        goto label01;

     label04:
        $r11 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies>;

        $r12 = virtualinvoke $r11.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r59 = virtualinvoke $r12.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r59.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r48 = interfaceinvoke r59.<java.util.Iterator: java.lang.Object next()>();

        r60 = (java.util.Map$Entry) $r48;

        $r49 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getKey()>();

        r61 = (java.lang.String) $r49;

        $r50 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap policies>;

        $z9 = virtualinvoke $r50.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>(r61);

        if $z9 != 0 goto label06;

        $r45 = interfaceinvoke r60.<java.util.Map$Entry: java.lang.Object getValue()>();

        r62 = (org.owasp.html.ElementAndAttributePolicies) $r45;

        $r46 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        r63 = virtualinvoke r62.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementAndAttributePolicies andGlobals(java.util.Map)>($r46);

        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r61, r63);

     label06:
        goto label05;

     label07:
        $r13 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $r14 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $z2 = virtualinvoke $r13.<com.google.common.collect.ImmutableSet: boolean containsAll(java.util.Collection)>($r14);

        if $z2 == 0 goto label08;

        r64 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        goto label10;

     label08:
        $r16 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $r15 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $z3 = virtualinvoke $r16.<com.google.common.collect.ImmutableSet: boolean containsAll(java.util.Collection)>($r15);

        if $z3 == 0 goto label09;

        r64 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        goto label10;

     label09:
        $r18 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r17 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $r20 = virtualinvoke $r18.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable)>($r17);

        $r19 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableSet textContainers>;

        $r21 = virtualinvoke $r20.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable)>($r19);

        r64 = virtualinvoke $r21.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

     label10:
        $r22 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $z4 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap: boolean isEmpty()>();

        if $z4 == 0 goto label11;

        r65 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        goto label18;

     label11:
        $r24 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $z5 = virtualinvoke $r24.<com.google.common.collect.ImmutableMap: boolean isEmpty()>();

        if $z5 == 0 goto label12;

        r65 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        goto label18;

     label12:
        r66 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r23 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $r26 = virtualinvoke $r23.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r67 = virtualinvoke $r26.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label13:
        $z6 = interfaceinvoke r67.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label14;

        $r37 = interfaceinvoke r67.<java.util.Iterator: java.lang.Object next()>();

        r68 = (java.util.Map$Entry) $r37;

        $r36 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (java.lang.String) $r36;

        $r35 = newarray (org.owasp.html.AttributePolicy)[2];

        $r40 = interfaceinvoke r68.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r39 = (org.owasp.html.AttributePolicy) $r40;

        $r35[0] = $r39;

        $r38 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $r44 = virtualinvoke $r38.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r8);

        $r43 = (org.owasp.html.AttributePolicy) $r44;

        $r35[1] = $r43;

        $r42 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r35);

        virtualinvoke r66.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r8, $r42);

        goto label13;

     label14:
        $r25 = r1.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $r27 = virtualinvoke $r25.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r69 = virtualinvoke $r27.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label15:
        $z7 = interfaceinvoke r69.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r28 = interfaceinvoke r69.<java.util.Iterator: java.lang.Object next()>();

        r70 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getKey()>();

        r71 = (java.lang.String) $r29;

        $r34 = r0.<org.owasp.html.PolicyFactory: com.google.common.collect.ImmutableMap globalAttrPolicies>;

        $z8 = virtualinvoke $r34.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>(r71);

        if $z8 != 0 goto label16;

        $r33 = interfaceinvoke r70.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r66.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r71, $r33);

     label16:
        goto label15;

     label17:
        r65 = virtualinvoke r66.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

     label18:
        $r30 = new org.owasp.html.PolicyFactory;

        $r31 = virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r30.<org.owasp.html.PolicyFactory: void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableMap)>($r31, r64, r65);

        return $r30;
    }

    public volatile java.lang.Object apply(java.lang.Object)
    {
        org.owasp.html.PolicyFactory r0;
        java.lang.Object r1;
        org.owasp.html.HtmlStreamEventReceiver $r2;
        org.owasp.html.HtmlSanitizer$Policy $r3;

        r0 := @this: org.owasp.html.PolicyFactory;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.owasp.html.HtmlStreamEventReceiver) r1;

        $r3 = virtualinvoke r0.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver)>($r2);

        return $r3;
    }
}
