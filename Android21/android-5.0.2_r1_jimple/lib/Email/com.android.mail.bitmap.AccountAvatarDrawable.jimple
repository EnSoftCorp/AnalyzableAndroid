public class com.android.mail.bitmap.AccountAvatarDrawable extends android.graphics.drawable.Drawable implements com.android.mail.bitmap.ContactResolver$ContactDrawableInterface
{
    private final com.android.bitmap.BitmapCache mCache;
    private final com.android.mail.bitmap.ContactResolver mContactResolver;
    private com.android.mail.bitmap.ContactRequest mContactRequest;
    private com.android.bitmap.ReusableBitmap mBitmap;
    private final float mBorderWidth;
    private final android.graphics.Paint mBitmapPaint;
    private final android.graphics.Paint mBorderPaint;
    private final android.graphics.Matrix mMatrix;
    private int mDecodeWidth;
    private int mDecodeHeight;
    private static android.graphics.Bitmap DEFAULT_AVATAR;

    public void <init>(android.content.res.Resources, com.android.bitmap.BitmapCache, com.android.mail.bitmap.ContactResolver)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        android.content.res.Resources r1;
        com.android.bitmap.BitmapCache r2;
        com.android.mail.bitmap.ContactResolver r3;
        android.graphics.Paint $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14;
        int $i0;
        float $f0, $f1;
        android.graphics.Paint$Style $r10;
        android.graphics.Matrix $r13;
        android.graphics.Bitmap $r15, $r16;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: com.android.bitmap.BitmapCache;

        r3 := @parameter2: com.android.mail.bitmap.ContactResolver;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.BitmapCache mCache> = r2;

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactResolver mContactResolver> = r3;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint> = $r4;

        $r5 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r7 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setDither(boolean)>(1);

        $i0 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131362043);

        $f0 = (float) $i0;

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: float mBorderWidth> = $f0;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint> = $r8;

        $r9 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setColor(int)>(0);

        $r11 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint>;

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r11.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $r12 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint>;

        $f1 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: float mBorderWidth>;

        virtualinvoke $r12.<android.graphics.Paint: void setStrokeWidth(float)>($f1);

        $r14 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke $r14.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r13 = new android.graphics.Matrix;

        specialinvoke $r13.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Matrix mMatrix> = $r13;

        $r16 = <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR>;

        if $r16 != null goto label1;

        $r15 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>(r1, 2130837558);

        <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR> = $r15;

     label1:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        boolean $z0, $z1;
        com.android.bitmap.ReusableBitmap $r3, $r7, $r9, $r10, $r12;
        android.graphics.Bitmap $r4, $r5, $r6, $r8, $r11;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: boolean isVisible()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        $r3 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        if $r3 == null goto label3;

        $r7 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        $r8 = $r7.<com.android.bitmap.ReusableBitmap: android.graphics.Bitmap bmp>;

        if $r8 == null goto label3;

        $r9 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        $r11 = $r9.<com.android.bitmap.ReusableBitmap: android.graphics.Bitmap bmp>;

        $r10 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        $i2 = virtualinvoke $r10.<com.android.bitmap.ReusableBitmap: int getLogicalWidth()>();

        $r12 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        $i3 = virtualinvoke $r12.<com.android.bitmap.ReusableBitmap: int getLogicalHeight()>();

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void drawBitmap(android.graphics.Bitmap,int,int,android.graphics.Canvas)>($r11, $i2, $i3, r1);

        goto label4;

     label3:
        $r5 = <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR>;

        $r4 = <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR>;

        $i0 = virtualinvoke $r4.<android.graphics.Bitmap: int getWidth()>();

        $r6 = <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR>;

        $i1 = virtualinvoke $r6.<android.graphics.Bitmap: int getHeight()>();

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void drawBitmap(android.graphics.Bitmap,int,int,android.graphics.Canvas)>($r5, $i0, $i1, r1);

     label4:
        return;
    }

    private void drawBitmap(android.graphics.Bitmap, int, int, android.graphics.Canvas)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        android.graphics.Bitmap r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Canvas r2;
        android.graphics.Rect r3;
        android.graphics.BitmapShader r4, $r5;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.Shader$TileMode $r6, $r7;
        android.graphics.Matrix $r8, $r9, $r10, $r11;
        android.graphics.Paint $r12, $r14, $r15;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.graphics.Canvas;

        r3 = virtualinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Rect getBounds()>();

        $r5 = new android.graphics.BitmapShader;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r6 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r5.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r1, $r7, $r6);

        r4 = $r5;

        $r8 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Matrix mMatrix>;

        virtualinvoke $r8.<android.graphics.Matrix: void reset()>();

        $i3 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        f0 = (float) $i3;

        $i2 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        f1 = (float) $i2;

        $f5 = (float) i0;

        $f6 = f0 / $f5;

        $f4 = (float) i1;

        $f7 = f1 / $f4;

        f2 = staticinvoke <java.lang.Math: float max(float,float)>($f6, $f7);

        $r9 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Matrix mMatrix>;

        virtualinvoke $r9.<android.graphics.Matrix: boolean postScale(float,float)>(f2, f2);

        $r10 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Matrix mMatrix>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $f9 = (float) $i4;

        $i5 = r3.<android.graphics.Rect: int top>;

        $f8 = (float) $i5;

        virtualinvoke $r10.<android.graphics.Matrix: boolean postTranslate(float,float)>($f9, $f8);

        $r11 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Matrix mMatrix>;

        virtualinvoke r4.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>($r11);

        $r12 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r12.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r4);

        $i6 = virtualinvoke r3.<android.graphics.Rect: int centerX()>();

        $f10 = (float) $i6;

        $i9 = virtualinvoke r3.<android.graphics.Rect: int centerY()>();

        $f11 = (float) $i9;

        $i7 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $i8 = $i7 / 2;

        $f13 = (float) $i8;

        $r14 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f10, $f11, $f13, $r14);

        $i10 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        $f12 = (float) $i10;

        $f14 = $f12 / 2.0F;

        $f15 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: float mBorderWidth>;

        $f16 = $f15 / 2.0F;

        f3 = $f14 - $f16;

        $i11 = virtualinvoke r3.<android.graphics.Rect: int centerX()>();

        $f18 = (float) $i11;

        $i12 = virtualinvoke r3.<android.graphics.Rect: int centerY()>();

        $f17 = (float) $i12;

        $r15 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBorderPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f18, $f17, f3, $r15);

        return;
    }

    public void setAlpha(int)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Paint mBitmapPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getOpacity()
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        return 0;
    }

    public void setDecodeDimensions(int, int)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        int i0, i1;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: int mDecodeWidth> = i0;

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: int mDecodeHeight> = i1;

        return;
    }

    public void unbind()
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void setImage(com.android.mail.bitmap.ContactRequest)>(null);

        return;
    }

    public void bind(java.lang.String, java.lang.String)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        java.lang.String r1, r2;
        com.android.mail.bitmap.ContactRequest $r3;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = new com.android.mail.bitmap.ContactRequest;

        specialinvoke $r3.<com.android.mail.bitmap.ContactRequest: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void setImage(com.android.mail.bitmap.ContactRequest)>($r3);

        return;
    }

    private void setImage(com.android.mail.bitmap.ContactRequest)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        com.android.mail.bitmap.ContactRequest r1, $r3, $r5, $r10;
        com.android.bitmap.ReusableBitmap r2, $r4, $r9;
        com.android.mail.bitmap.ContactResolver $r6;
        com.android.bitmap.BitmapCache $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: com.android.mail.bitmap.ContactRequest;

        $r3 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        if $r3 == null goto label1;

        $r10 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        $z0 = virtualinvoke $r10.<com.android.mail.bitmap.ContactRequest: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        if $r4 == null goto label2;

        $r9 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        virtualinvoke $r9.<com.android.bitmap.ReusableBitmap: void releaseReference()>();

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap> = null;

     label2:
        $r6 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactResolver mContactResolver>;

        $r5 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        virtualinvoke $r6.<com.android.mail.bitmap.ContactResolver: void remove(com.android.mail.bitmap.ContactRequest,com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)>($r5, r0);

        r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest> = r1;

        if r1 != null goto label3;

        virtualinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void invalidateSelf()>();

        return;

     label3:
        $r7 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.BitmapCache mCache>;

        $r8 = interfaceinvoke $r7.<com.android.bitmap.BitmapCache: java.lang.Object get(java.lang.Object,boolean)>(r1, 1);

        r2 = (com.android.bitmap.ReusableBitmap) $r8;

        if r2 == null goto label4;

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void setBitmap(com.android.bitmap.ReusableBitmap)>(r2);

        goto label5;

     label4:
        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void decode()>();

     label5:
        return;
    }

    private void setBitmap(com.android.bitmap.ReusableBitmap)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        com.android.bitmap.ReusableBitmap r1, $r2, $r3, $r4;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: com.android.bitmap.ReusableBitmap;

        $r2 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        if $r3 == r1 goto label1;

        $r4 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap>;

        virtualinvoke $r4.<com.android.bitmap.ReusableBitmap: void releaseReference()>();

     label1:
        r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.bitmap.ReusableBitmap mBitmap> = r1;

        virtualinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void invalidateSelf()>();

        return;
    }

    private void decode()
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        com.android.mail.bitmap.ContactRequest $r1, $r2;
        com.android.mail.bitmap.ContactResolver $r3;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        $r1 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactResolver mContactResolver>;

        $r2 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        virtualinvoke $r3.<com.android.mail.bitmap.ContactResolver: void add(com.android.mail.bitmap.ContactRequest,com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)>($r2, r0);

        return;
    }

    public int getDecodeWidth()
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        int $i0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        $i0 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: int mDecodeWidth>;

        return $i0;
    }

    public int getDecodeHeight()
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        int $i0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        $i0 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: int mDecodeHeight>;

        return $i0;
    }

    public void onDecodeComplete(com.android.bitmap.RequestKey, com.android.bitmap.ReusableBitmap)
    {
        com.android.mail.bitmap.AccountAvatarDrawable r0;
        com.android.bitmap.RequestKey r1;
        com.android.bitmap.ReusableBitmap r2;
        com.android.mail.bitmap.ContactRequest r3, $r5;
        com.android.mail.bitmap.ContactResolver $r4;
        boolean $z0;

        r0 := @this: com.android.mail.bitmap.AccountAvatarDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        r2 := @parameter1: com.android.bitmap.ReusableBitmap;

        r3 = (com.android.mail.bitmap.ContactRequest) r1;

        $r4 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactResolver mContactResolver>;

        virtualinvoke $r4.<com.android.mail.bitmap.ContactResolver: void remove(com.android.mail.bitmap.ContactRequest,com.android.mail.bitmap.ContactResolver$ContactDrawableInterface)>(r3, r0);

        $r5 = r0.<com.android.mail.bitmap.AccountAvatarDrawable: com.android.mail.bitmap.ContactRequest mContactRequest>;

        $z0 = virtualinvoke r3.<com.android.mail.bitmap.ContactRequest: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.mail.bitmap.AccountAvatarDrawable: void setBitmap(com.android.bitmap.ReusableBitmap)>(r2);

        goto label2;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<com.android.bitmap.ReusableBitmap: void releaseReference()>();

     label2:
        return;
    }

    static void <clinit>()
    {
        <com.android.mail.bitmap.AccountAvatarDrawable: android.graphics.Bitmap DEFAULT_AVATAR> = null;

        return;
    }
}
