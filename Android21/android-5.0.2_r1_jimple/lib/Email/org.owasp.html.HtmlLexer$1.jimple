class org.owasp.html.HtmlLexer$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$owasp$html$HtmlLexer$State;
    static final int[] $SwitchMap$org$owasp$html$HtmlTokenType;

    static void <clinit>()
    {
        org.owasp.html.HtmlTokenType[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r2, $r4, $r6, $r8, $r10, $r11, $r14, $r15, $r18;
        org.owasp.html.HtmlTokenType $r3, $r5, $r7;
        org.owasp.html.HtmlLexer$State[] $r9;
        org.owasp.html.HtmlLexer$State $r12, $r13, $r16, $r17;
        java.lang.NoSuchFieldError $r19, $r20, $r21, $r22, $r23, $r24, $r25;

        $r1 = staticinvoke <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType[] values()>();

        $i0 = lengthof $r1;

        $r2 = newarray (int)[$i0];

        <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType> = $r2;

     label01:
        $r4 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r3 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGBEGIN>;

        $i1 = virtualinvoke $r3.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $r4[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

     label04:
        $r6 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r5 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGEND>;

        $i2 = virtualinvoke $r5.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $r6[$i2] = 2;

     label05:
        goto label07;

     label06:
        $r19 := @caughtexception;

     label07:
        $r8 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r7 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType IGNORABLE>;

        $i3 = virtualinvoke $r7.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $r8[$i3] = 3;

     label08:
        goto label10;

     label09:
        $r22 := @caughtexception;

     label10:
        $r9 = staticinvoke <org.owasp.html.HtmlLexer$State: org.owasp.html.HtmlLexer$State[] values()>();

        $i4 = lengthof $r9;

        $r10 = newarray (int)[$i4];

        <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlLexer$State> = $r10;

     label11:
        $r11 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlLexer$State>;

        $r12 = <org.owasp.html.HtmlLexer$State: org.owasp.html.HtmlLexer$State OUTSIDE_TAG>;

        $i5 = virtualinvoke $r12.<org.owasp.html.HtmlLexer$State: int ordinal()>();

        $r11[$i5] = 1;

     label12:
        goto label14;

     label13:
        $r21 := @caughtexception;

     label14:
        $r14 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlLexer$State>;

        $r13 = <org.owasp.html.HtmlLexer$State: org.owasp.html.HtmlLexer$State IN_TAG>;

        $i6 = virtualinvoke $r13.<org.owasp.html.HtmlLexer$State: int ordinal()>();

        $r14[$i6] = 2;

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;

     label17:
        $r15 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlLexer$State>;

        $r16 = <org.owasp.html.HtmlLexer$State: org.owasp.html.HtmlLexer$State SAW_NAME>;

        $i7 = virtualinvoke $r16.<org.owasp.html.HtmlLexer$State: int ordinal()>();

        $r15[$i7] = 3;

     label18:
        goto label20;

     label19:
        $r25 := @caughtexception;

     label20:
        $r18 = <org.owasp.html.HtmlLexer$1: int[] $SwitchMap$org$owasp$html$HtmlLexer$State>;

        $r17 = <org.owasp.html.HtmlLexer$State: org.owasp.html.HtmlLexer$State SAW_EQ>;

        $i8 = virtualinvoke $r17.<org.owasp.html.HtmlLexer$State: int ordinal()>();

        $r18[$i8] = 4;

     label21:
        goto label23;

     label22:
        $r24 := @caughtexception;

     label23:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label07 to label08 with label09;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
    }
}
