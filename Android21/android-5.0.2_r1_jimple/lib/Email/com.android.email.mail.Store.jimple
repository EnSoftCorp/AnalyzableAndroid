public abstract class com.android.email.mail.Store extends java.lang.Object
{
    public static final int FETCH_BODY_SANE_SUGGESTED_SIZE;
    static final java.util.HashMap sStores;
    protected android.content.Context mContext;
    protected com.android.emailcommon.provider.Account mAccount;
    protected com.android.email.mail.transport.MailTransport mTransport;
    protected java.lang.String mUsername;
    protected java.lang.String mPassword;
    static final java.util.HashMap sStoreClasses;

    public void <init>()
    {
        com.android.email.mail.Store r0;

        r0 := @this: com.android.email.mail.Store;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static com.android.email.mail.Store newInstance(com.android.emailcommon.provider.Account) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.provider.Account r0;
        com.android.emailcommon.mail.MessagingException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        $r1 = new com.android.emailcommon.mail.MessagingException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Store#newInstance: Unknown scheme in ");

        $r4 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<com.android.emailcommon.mail.MessagingException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public static synchronized com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account, android.content.Context) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        com.android.emailcommon.provider.HostAuth r2;
        com.android.email.mail.Store r3, $r5;
        java.util.HashMap $r4, $r6, $r8, $r11;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.String $r9, $r13;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        r1 := @parameter1: android.content.Context;

        $r4 = <com.android.email.mail.Store: java.util.HashMap sStores>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r8 = <com.android.email.mail.Store: java.util.HashMap sStoreClasses>;

        $r9 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(2131296972);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, class "com/android/email/mail/store/Pop3Store");

        $r11 = <com.android.email.mail.Store: java.util.HashMap sStoreClasses>;

        $r13 = virtualinvoke r1.<android.content.Context: java.lang.String getString(int)>(2131296970);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, class "com/android/email/mail/store/ImapStore");

     label1:
        r2 = virtualinvoke r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        if r2 != null goto label2;

        return null;

     label2:
        $z1 = virtualinvoke r0.<com.android.emailcommon.provider.Account: boolean isTemporary()>();

        if $z1 != 0 goto label5;

        $r6 = <com.android.email.mail.Store: java.util.HashMap sStores>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (com.android.email.mail.Store) $r7;

        if r3 != null goto label3;

        r3 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store createInstanceInternal(com.android.emailcommon.provider.Account,android.content.Context,boolean)>(r0, r1, 1);

        goto label4;

     label3:
        r3.<com.android.email.mail.Store: com.android.emailcommon.provider.Account mAccount> = r0;

     label4:
        return r3;

     label5:
        $r5 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store createInstanceInternal(com.android.emailcommon.provider.Account,android.content.Context,boolean)>(r0, r1, 0);

        return $r5;
    }

    private static synchronized com.android.email.mail.Store createInstanceInternal(com.android.emailcommon.provider.Account, android.content.Context, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1, r2;
        boolean z0;
        com.android.emailcommon.provider.HostAuth r3;
        java.lang.Class r4;
        com.android.email.mail.Store r5;
        java.lang.reflect.Method r6;
        java.lang.String $r7, $r16, $r18, $r19, $r20, $r22, $r26, $r27;
        java.util.HashMap $r8, $r13;
        java.lang.Object $r9, $r12;
        java.lang.Class[] $r10;
        java.lang.Object[] $r11, $r17, $r21;
        long $l0;
        byte $b1;
        java.lang.Exception $r14, r29;
        java.lang.StringBuilder $r23, $r24, $r28;
        com.android.emailcommon.mail.MessagingException $r25;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        r1 := @parameter1: android.content.Context;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r3 = virtualinvoke r0.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>(r1);

        $r8 = <com.android.email.mail.Store: java.util.HashMap sStoreClasses>;

        $r7 = r3.<com.android.emailcommon.provider.HostAuth: java.lang.String mProtocol>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r7);

        r4 = (java.lang.Class) $r9;

        if r4 != null goto label1;

        r4 = class "com/android/email/mail/store/ServiceStore";

     label1:
        $r10 = newarray (java.lang.Class)[2];

        $r10[0] = class "com/android/emailcommon/provider/Account";

        $r10[1] = class "android/content/Context";

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("newInstance", $r10);

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = r0;

        $r11[1] = r2;

        $r12 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r11);

        r5 = (com.android.email.mail.Store) $r12;

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        r29 = $r14;

        $r16 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r17 = newarray (java.lang.Object)[3];

        $r18 = virtualinvoke r29.<java.lang.Exception: java.lang.String toString()>();

        $r17[0] = $r18;

        $r20 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r17[1] = $r20;

        $r19 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        $r17[2] = $r19;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("exception %s invoking method %s#newInstance(Account, Context) for %s", $r17);

        $r21 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r16, $r22, $r21);

        $r25 = new com.android.emailcommon.mail.MessagingException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t instantiate Store for ");

        $r27 = r0.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<com.android.emailcommon.mail.MessagingException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label4:
        $l0 = r3.<com.android.emailcommon.provider.HostAuth: long mId>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label5;

        if z0 == 0 goto label5;

        $r13 = <com.android.email.mail.Store: java.util.HashMap sStores>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

     label5:
        return r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static synchronized com.android.email.mail.Store removeInstance(com.android.emailcommon.provider.Account, android.content.Context) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.provider.Account r0;
        android.content.Context r1;
        long $l0;
        java.util.HashMap $r2;
        com.android.emailcommon.provider.HostAuth $r3;
        java.lang.Object $r4;
        com.android.email.mail.Store $r5;

        r0 := @parameter0: com.android.emailcommon.provider.Account;

        r1 := @parameter1: android.content.Context;

        $r2 = <com.android.email.mail.Store: java.util.HashMap sStores>;

        $l0 = r0.<com.android.emailcommon.provider.Account: long mHostAuthKeyRecv>;

        $r3 = staticinvoke <com.android.emailcommon.provider.HostAuth: com.android.emailcommon.provider.HostAuth restoreHostAuthWithId(android.content.Context,long)>(r1, $l0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r3);

        $r5 = (com.android.email.mail.Store) $r4;

        return $r5;
    }

    public boolean requireCopyMessageToSentFolder()
    {
        com.android.email.mail.Store r0;

        r0 := @this: com.android.email.mail.Store;

        return 1;
    }

    public com.android.emailcommon.mail.Folder getFolder(java.lang.String) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.Store r0;
        java.lang.String r1;

        r0 := @this: com.android.email.mail.Store;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public com.android.emailcommon.mail.Folder[] updateFolders() throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.Store r0;

        r0 := @this: com.android.email.mail.Store;

        return null;
    }

    public abstract android.os.Bundle checkSettings() throws com.android.emailcommon.mail.MessagingException;

    public android.os.Bundle autoDiscover(android.content.Context, java.lang.String, java.lang.String) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.Store r0;
        android.content.Context r1;
        java.lang.String r2, r3;

        r0 := @this: com.android.email.mail.Store;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    protected static void updateMailbox(com.android.emailcommon.provider.Mailbox, long, java.lang.String, char, boolean, int)
    {
        com.android.emailcommon.provider.Mailbox r0;
        long l0;
        java.lang.String r1, r2;
        char c1;
        boolean z0;
        int i2, i3, $i4;

        r0 := @parameter0: com.android.emailcommon.provider.Mailbox;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        c1 := @parameter3: char;

        z0 := @parameter4: boolean;

        i2 := @parameter5: int;

        r0.<com.android.emailcommon.provider.Mailbox: long mAccountKey> = l0;

        r0.<com.android.emailcommon.provider.Mailbox: int mDelimiter> = c1;

        r2 = r1;

        i3 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(c1);

        if i3 <= 0 goto label1;

        $i4 = i3 + 1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i4);

     label1:
        r0.<com.android.emailcommon.provider.Mailbox: java.lang.String mDisplayName> = r2;

        if z0 == 0 goto label2;

        r0.<com.android.emailcommon.provider.Mailbox: int mFlags> = 24;

     label2:
        r0.<com.android.emailcommon.provider.Mailbox: boolean mFlagVisible> = 1;

        r0.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId> = r1;

        r0.<com.android.emailcommon.provider.Mailbox: int mType> = i2;

        return;
    }

    public void closeConnections()
    {
        com.android.email.mail.Store r0;

        r0 := @this: com.android.email.mail.Store;

        return;
    }

    public com.android.emailcommon.provider.Account getAccount()
    {
        com.android.email.mail.Store r0;
        com.android.emailcommon.provider.Account $r1;

        r0 := @this: com.android.email.mail.Store;

        $r1 = r0.<com.android.email.mail.Store: com.android.emailcommon.provider.Account mAccount>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1;

        <com.android.email.mail.Store: int FETCH_BODY_SANE_SUGGESTED_SIZE> = 128000;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.email.mail.Store: java.util.HashMap sStores> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <com.android.email.mail.Store: java.util.HashMap sStoreClasses> = $r1;

        return;
    }
}
