public class com.android.emailcommon.internet.Rfc822Output extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.text.SimpleDateFormat DATE_FORMAT;
    private static final java.util.regex.Pattern BODY_PATTERN;
    private static final int BODY_PATTERN_GROUP;
    private static final int INDEX_BODY_TEXT;
    private static final int INDEX_BODY_HTML;
    static byte sBoundaryDigit;

    public void <init>()
    {
        com.android.emailcommon.internet.Rfc822Output r0;

        r0 := @this: com.android.emailcommon.internet.Rfc822Output;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String getHtmlBody(java.lang.String)
    {
        java.lang.String r0, $r3;
        java.util.regex.Matcher r1;
        java.util.regex.Pattern $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.emailcommon.internet.Rfc822Output: java.util.regex.Pattern BODY_PATTERN>;

        r1 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r1.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r3;

     label1:
        return r0;
    }

    static java.lang.String[] buildBodyText(com.android.emailcommon.provider.EmailContent$Body, boolean)
    {
        com.android.emailcommon.provider.EmailContent$Body r0;
        boolean z0;
        java.lang.String[] r1, $r2, $r12;
        int i0, $i1, $i2;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;

        r0 := @parameter0: com.android.emailcommon.provider.EmailContent$Body;

        z0 := @parameter1: boolean;

        if r0 != null goto label1;

        $r12 = newarray (java.lang.String)[2];

        return $r12;

     label1:
        $r2 = newarray (java.lang.String)[2];

        $r3 = r0.<com.android.emailcommon.provider.EmailContent$Body: java.lang.String mTextContent>;

        $r2[0] = $r3;

        $r4 = r0.<com.android.emailcommon.provider.EmailContent$Body: java.lang.String mHtmlContent>;

        $r2[1] = $r4;

        r1 = $r2;

        i0 = r0.<com.android.emailcommon.provider.EmailContent$Body: int mQuotedTextStartPos>;

        if z0 == 0 goto label3;

        if i0 <= 0 goto label3;

        $r5 = r1[0];

        if $r5 == null goto label2;

        $r10 = r1[0];

        $i2 = virtualinvoke $r10.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        $r11 = r1[0];

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r1[0] = $r13;

        goto label3;

     label2:
        $r6 = r1[1];

        if $r6 == null goto label3;

        $r7 = r1[1];

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        if i0 >= $i1 goto label3;

        $r8 = r1[1];

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r1[1] = $r9;

     label3:
        return r1;
    }

    public static void writeTo(android.content.Context, com.android.emailcommon.provider.EmailContent$Message, java.io.OutputStream, boolean, boolean, java.util.List) throws java.io.IOException, com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.EmailContent$Message r1;
        java.io.OutputStream r2;
        boolean z0, z1, z2, $z3, $z4;
        java.util.List r3;
        java.io.BufferedOutputStream r4, $r13;
        java.io.OutputStreamWriter r5, $r12;
        java.lang.String r6, r9, r10, $r16, $r17, $r18, $r19, $r20, $r21, $r27, $r29, $r30, $r34;
        com.android.emailcommon.provider.EmailContent$Body r7;
        java.lang.String[] r8;
        int i0, $i3, $i4, $i6;
        com.android.emailcommon.provider.EmailContent$Attachment r11, $r33;
        long $l1, $l2, $l5;
        java.util.Date $r14;
        java.text.SimpleDateFormat $r15;
        java.lang.StringBuilder $r22, $r23, $r24, $r25, $r26, $r28;
        java.lang.Object $r31, $r32;
        com.android.emailcommon.provider.EmailContent$Attachment[] $r35;
        java.util.Iterator r36;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.EmailContent$Message;

        r2 := @parameter2: java.io.OutputStream;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        r3 := @parameter5: java.util.List;

        if r1 != null goto label01;

        return;

     label01:
        $r13 = new java.io.BufferedOutputStream;

        specialinvoke $r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream,int)>(r2, 1024);

        r4 = $r13;

        $r12 = new java.io.OutputStreamWriter;

        specialinvoke $r12.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r4);

        r5 = $r12;

        $r15 = <com.android.emailcommon.internet.Rfc822Output: java.text.SimpleDateFormat DATE_FORMAT>;

        $r14 = new java.util.Date;

        $l1 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mTimeStamp>;

        specialinvoke $r14.<java.util.Date: void <init>(long)>($l1);

        r6 = virtualinvoke $r15.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r14);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Date", r6);

        $r17 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mSubject>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeEncodedHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Subject", $r17);

        $r16 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mMessageId>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Message-ID", $r16);

        $r19 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mFrom>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeAddressHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "From", $r19);

        $r18 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mTo>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeAddressHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "To", $r18);

        $r21 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mCc>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeAddressHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Cc", $r21);

        if z1 == 0 goto label02;

        $r34 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mBcc>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeAddressHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Bcc", $r34);

     label02:
        $r20 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mReplyTo>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeAddressHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Reply-To", $r20);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "MIME-Version", "1.0");

        $l2 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r7 = staticinvoke <com.android.emailcommon.provider.EmailContent$Body: com.android.emailcommon.provider.EmailContent$Body restoreBodyWithMessageId(android.content.Context,long)>(r0, $l2);

        r8 = staticinvoke <com.android.emailcommon.internet.Rfc822Output: java.lang.String[] buildBodyText(com.android.emailcommon.provider.EmailContent$Body,boolean)>(r7, z0);

        if r3 != null goto label03;

        $l5 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r35 = staticinvoke <com.android.emailcommon.provider.EmailContent$Attachment: com.android.emailcommon.provider.EmailContent$Attachment[] restoreAttachmentsWithMessageId(android.content.Context,long)>(r0, $l5);

        r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r35);

     label03:
        $i3 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i3 <= 0 goto label04;

        $z4 = 1;

        goto label05;

     label04:
        $z4 = 0;

     label05:
        z2 = $z4;

        if z2 != 0 goto label06;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeTextWithHeaders(java.io.Writer,java.io.OutputStream,java.lang.String[])>(r5, r4, r8);

        goto label12;

     label06:
        r9 = staticinvoke <com.android.emailcommon.internet.Rfc822Output: java.lang.String getNextBoundary()>();

        r10 = "mixed";

        $i4 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i4 != 1 goto label07;

        $r31 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r33 = (com.android.emailcommon.provider.EmailContent$Attachment) $r31;

        i0 = $r33.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i6 = i0 & 1;

        if $i6 == 0 goto label07;

        r10 = "alternative";

     label07:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; boundary=\"");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r5, "Content-Type", $r29);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("\r\n");

        $r27 = r8[0];

        if $r27 != null goto label08;

        $r30 = r8[1];

        if $r30 == null goto label09;

     label08:
        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeBoundary(java.io.Writer,java.lang.String,boolean)>(r5, r9, 0);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeTextWithHeaders(java.io.Writer,java.io.OutputStream,java.lang.String[])>(r5, r4, r8);

     label09:
        r36 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label11;

        $r32 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.emailcommon.provider.EmailContent$Attachment) $r32;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeBoundary(java.io.Writer,java.lang.String,boolean)>(r5, r9, 0);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeOneAttachment(android.content.Context,java.io.Writer,java.io.OutputStream,com.android.emailcommon.provider.EmailContent$Attachment)>(r0, r5, r4, r11);

        virtualinvoke r5.<java.io.Writer: void write(java.lang.String)>("\r\n");

        goto label10;

     label11:
        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeBoundary(java.io.Writer,java.lang.String,boolean)>(r5, r9, 1);

     label12:
        virtualinvoke r5.<java.io.Writer: void flush()>();

        virtualinvoke r2.<java.io.OutputStream: void flush()>();

        return;
    }

    private static void writeOneAttachment(android.content.Context, java.io.Writer, java.io.OutputStream, com.android.emailcommon.provider.EmailContent$Attachment) throws java.io.IOException, com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        java.io.Writer r1;
        java.io.OutputStream r2;
        com.android.emailcommon.provider.EmailContent$Attachment r3;
        java.io.InputStream r4;
        java.lang.String r5, $r9, $r12, $r15, $r16, $r20, $r24, $r27, $r32, $r34, $r39;
        android.net.Uri r6, r43;
        java.lang.StringBuilder $r8, $r10, $r11, $r13, $r14, $r26, $r28, $r29, $r30, $r31, $r35;
        int $i0, $i1;
        byte[] $r17, $r23;
        boolean $z0;
        android.util.Base64OutputStream $r19, r44;
        android.content.ContentResolver $r21, $r22;
        java.io.ByteArrayInputStream $r25;
        long $l3;
        java.io.FileNotFoundException $r33, $r41, r45;
        java.lang.Object[] $r36, $r37, $r40;
        java.io.IOException $r38, r46;
        com.android.emailcommon.mail.MessagingException $r42;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.io.Writer;

        r2 := @parameter2: java.io.OutputStream;

        r3 := @parameter3: com.android.emailcommon.provider.EmailContent$Attachment;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mMimeType>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";\n name=\"");

        $r12 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r1, "Content-Type", $r15);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r1, "Content-Transfer-Encoding", "base64");

        $i0 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: int mFlags>;

        $i1 = $i0 & 1;

        if $i1 != 0 goto label01;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attachment;\n filename=\"");

        $r27 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mFileName>;

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\";");

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n size=");

        $l3 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: long mSize>;

        $r34 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        $r35 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r1, "Content-Disposition", $r32);

     label01:
        $r16 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mContentId>;

        if $r16 == null goto label02;

        $r24 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String mContentId>;

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r1, "Content-ID", $r24);

     label02:
        virtualinvoke r1.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("\r\n");

        r4 = null;

     label03:
        $r17 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: byte[] mContentBytes>;

        if $r17 == null goto label04;

        $r25 = new java.io.ByteArrayInputStream;

        $r23 = r3.<com.android.emailcommon.provider.EmailContent$Attachment: byte[] mContentBytes>;

        specialinvoke $r25.<java.io.ByteArrayInputStream: void <init>(byte[])>($r23);

        r4 = $r25;

        goto label09;

     label04:
        r5 = virtualinvoke r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getCachedFileUri()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z0 != 0 goto label08;

        r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r5);

     label05:
        $r22 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r22.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r6);

     label06:
        goto label08;

     label07:
        $r33 := @caughtexception;

        r4 = null;

        $r36 = newarray (java.lang.Object)[1];

        $r39 = virtualinvoke r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getContentUri()>();

        $r36[0] = $r39;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("Email", "Rfc822Output#writeOneAttachment(), failed to loadcached file, falling back to: %s", $r36);

     label08:
        if r4 != null goto label09;

        $r20 = virtualinvoke r3.<com.android.emailcommon.provider.EmailContent$Attachment: java.lang.String getContentUri()>();

        r43 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r20);

        $r21 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r4 = virtualinvoke $r21.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>(r43);

     label09:
        virtualinvoke r1.<java.io.Writer: void flush()>();

        $r19 = new android.util.Base64OutputStream;

        specialinvoke $r19.<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>(r2, 20);

        r44 = $r19;

        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r4, r44);

        virtualinvoke r44.<android.util.Base64OutputStream: void close()>();

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(13);

        virtualinvoke r2.<java.io.OutputStream: void write(int)>(10);

        virtualinvoke r2.<java.io.OutputStream: void flush()>();

     label10:
        goto label13;

     label11:
        $r41 := @caughtexception;

        r45 = $r41;

        $r40 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>("Email", r45, "Rfc822Output#writeOneAttachment(), FileNotFoundExceptionwhen sending attachment", $r40);

        goto label13;

     label12:
        $r38 := @caughtexception;

        r46 = $r38;

        $r37 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>("Email", r46, "Rfc822Output#writeOneAttachment(), IOExceptionwhen sending attachment", $r37);

        $r42 = new com.android.emailcommon.mail.MessagingException;

        specialinvoke $r42.<com.android.emailcommon.mail.MessagingException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid attachment.", r46);

        throw $r42;

     label13:
        return;

        catch java.io.FileNotFoundException from label05 to label06 with label07;
        catch java.io.FileNotFoundException from label03 to label10 with label11;
        catch java.io.IOException from label03 to label10 with label12;
    }

    private static void writeHeader(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(": ");

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r2);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("\r\n");

     label1:
        return;
    }

    private static void writeEncodedHeader(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, r2, $r5;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(": ");

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 + 2;

        $r5 = staticinvoke <com.android.emailcommon.internet.MimeUtility: java.lang.String foldAndEncode2(java.lang.String,int)>(r2, $i2);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r5);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("\r\n");

     label1:
        return;
    }

    private static void writeAddressHeader(java.io.Writer, java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1, r2, $r5, $r6;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r1);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(": ");

        $r5 = staticinvoke <com.android.emailcommon.mail.Address: java.lang.String reformatToHeader(java.lang.String)>(r2);

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 + 2;

        $r6 = staticinvoke <com.android.emailcommon.internet.MimeUtility: java.lang.String fold(java.lang.String,int)>($r5, $i2);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r6);

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("\r\n");

     label1:
        return;
    }

    private static void writeBoundary(java.io.Writer, java.lang.String, boolean) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.String r1;
        boolean z0;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("--");

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(r1);

        if z0 == 0 goto label1;

        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("--");

     label1:
        virtualinvoke r0.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>("\r\n");

        return;
    }

    private static void writeTextWithHeaders(java.io.Writer, java.io.OutputStream, java.lang.String[]) throws java.io.IOException
    {
        java.io.Writer r0;
        java.io.OutputStream r1;
        java.lang.String[] r2;
        boolean z0, $z1, $z2;
        java.lang.String r3, r4, $r11, $r14;
        byte[] r5, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12;

        r0 := @parameter0: java.io.Writer;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: java.lang.String[];

        z0 = 0;

        r3 = r2[0];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 == 0 goto label1;

        r3 = r2[1];

        z0 = 1;

     label1:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label2;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("\r\n");

        goto label5;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text/");

        if z0 == 0 goto label3;

        $r14 = "html";

        goto label4;

     label3:
        $r14 = "plain";

     label4:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; charset=utf-8");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r0, "Content-Type", $r11);

        staticinvoke <com.android.emailcommon.internet.Rfc822Output: void writeHeader(java.io.Writer,java.lang.String,java.lang.String)>(r0, "Content-Transfer-Encoding", "base64");

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("\r\n");

        r5 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r0.<java.io.Writer: void flush()>();

        $r13 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>(r5, 4);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r13);

     label5:
        return;
    }

    static java.lang.String getNextBoundary()
    {
        java.lang.StringBuilder r0, $r3, $r4;
        java.lang.Class r1;
        java.lang.Throwable r2, $r8;
        long $l0;
        byte $b1, $b2, $b5;
        int $i3, $i4;
        java.lang.String $r7;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0 = $r3;

        $r4 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--_com.android.email_");

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        r1 = class "com/android/emailcommon/internet/Rfc822Output";

        entermonitor class "com/android/emailcommon/internet/Rfc822Output";

     label1:
        $b1 = <com.android.emailcommon.internet.Rfc822Output: byte sBoundaryDigit>;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b1);

        $b2 = <com.android.emailcommon.internet.Rfc822Output: byte sBoundaryDigit>;

        $i3 = $b2 + 1;

        $i4 = $i3 % 10;

        $b5 = (byte) $i4;

        <com.android.emailcommon.internet.Rfc822Output: byte sBoundaryDigit> = $b5;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        $r7 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        java.util.Locale $r1;
        java.util.regex.Pattern $r2;

        <com.android.emailcommon.internet.Rfc822Output: int INDEX_BODY_HTML> = 1;

        <com.android.emailcommon.internet.Rfc822Output: int INDEX_BODY_TEXT> = 0;

        <com.android.emailcommon.internet.Rfc822Output: int BODY_PATTERN_GROUP> = 1;

        <com.android.emailcommon.internet.Rfc822Output: java.lang.String TAG> = "Email";

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss Z", $r1);

        <com.android.emailcommon.internet.Rfc822Output: java.text.SimpleDateFormat DATE_FORMAT> = $r0;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("(?:<\\s*body[^>]*>)(.*)(?:<\\s*/\\s*body\\s*>)", 34);

        <com.android.emailcommon.internet.Rfc822Output: java.util.regex.Pattern BODY_PATTERN> = $r2;

        return;
    }
}
