public final class org.apache.commons.io.IOCase extends java.lang.Object implements java.io.Serializable
{
    public static final org.apache.commons.io.IOCase SENSITIVE;
    public static final org.apache.commons.io.IOCase INSENSITIVE;
    public static final org.apache.commons.io.IOCase SYSTEM;
    private static final long serialVersionUID;
    private final java.lang.String name;
    private final transient boolean sensitive;

    public static org.apache.commons.io.IOCase forName(java.lang.String)
    {
        java.lang.String r0, $r2, $r4, $r6, $r11;
        org.apache.commons.io.IOCase $r1, $r3, $r5, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        $r2 = $r1.<org.apache.commons.io.IOCase: java.lang.String name>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r13 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        return $r13;

     label1:
        $r3 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        $r4 = $r3.<org.apache.commons.io.IOCase: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        $r14 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        return $r14;

     label2:
        $r5 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        $r6 = $r5.<org.apache.commons.io.IOCase: java.lang.String name>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label3;

        $r12 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        return $r12;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid IOCase name: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;
    }

    private void <init>(java.lang.String, boolean)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.io.IOCase: java.lang.String name> = r1;

        r0.<org.apache.commons.io.IOCase: boolean sensitive> = z0;

        return;
    }

    private java.lang.Object readResolve()
    {
        org.apache.commons.io.IOCase r0, $r2;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.IOCase;

        $r1 = r0.<org.apache.commons.io.IOCase: java.lang.String name>;

        $r2 = staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getName()
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.IOCase;

        $r1 = r0.<org.apache.commons.io.IOCase: java.lang.String name>;

        return $r1;
    }

    public boolean isCaseSensitive()
    {
        org.apache.commons.io.IOCase r0;
        boolean $z0;

        r0 := @this: org.apache.commons.io.IOCase;

        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        return $z0;
    }

    public int checkCompareTo(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, r2;
        java.lang.NullPointerException $r3;
        boolean $z0;
        int $i0;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("The strings must not be null");

        throw $r3;

     label2:
        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>(r2);

        goto label4;

     label3:
        $i0 = virtualinvoke r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>(r2);

     label4:
        return $i0;
    }

    public boolean checkEquals(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, r2;
        java.lang.NullPointerException $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("The strings must not be null");

        throw $r3;

     label2:
        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        goto label4;

     label3:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

     label4:
        return $z1;
    }

    public boolean checkStartsWith(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, r2;
        boolean $z0, $z1, $z2;
        int $i0;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>($z1, 0, r2, 0, $i0);

        return $z2;
    }

    public boolean checkEndsWith(java.lang.String, java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, r2;
        int i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - i0;

        $z2 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>($z1, $i2, r2, 0, i0);

        return $z2;
    }

    public boolean checkRegionMatches(java.lang.String, int, java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, r2;
        int i0, $i1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>($z1, i0, r2, 0, $i1);

        return $z2;
    }

    java.lang.String convertCase(java.lang.String)
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.io.IOCase;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $z0 = r0.<org.apache.commons.io.IOCase: boolean sensitive>;

        if $z0 == 0 goto label2;

        $r2 = r1;

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

     label3:
        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.io.IOCase r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.io.IOCase;

        $r1 = r0.<org.apache.commons.io.IOCase: java.lang.String name>;

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.io.IOCase $r0, $r1, $r2;
        boolean $z0, $z1;

        <org.apache.commons.io.IOCase: long serialVersionUID> = -6343169151696340687L;

        $r0 = new org.apache.commons.io.IOCase;

        specialinvoke $r0.<org.apache.commons.io.IOCase: void <init>(java.lang.String,boolean)>("Sensitive", 1);

        <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE> = $r0;

        $r1 = new org.apache.commons.io.IOCase;

        specialinvoke $r1.<org.apache.commons.io.IOCase: void <init>(java.lang.String,boolean)>("Insensitive", 0);

        <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE> = $r1;

        $r2 = new org.apache.commons.io.IOCase;

        $z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSystemWindows()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke $r2.<org.apache.commons.io.IOCase: void <init>(java.lang.String,boolean)>("System", $z1);

        <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM> = $r2;

        return;
    }
}
