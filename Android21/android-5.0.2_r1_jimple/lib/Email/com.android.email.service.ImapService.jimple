public class com.android.email.service.ImapService extends android.app.Service
{
    private static final long QUICK_SYNC_WINDOW_MILLIS;
    private static final long FULL_SYNC_WINDOW_MILLIS;
    private static final long FULL_SYNC_INTERVAL_MILLIS;
    private static final int MAX_MESSAGES_TO_FETCH;
    private static final int MINIMUM_MESSAGES_TO_SYNC;
    private static final int LOAD_MORE_MIN_INCREMENT;
    private static final int LOAD_MORE_MAX_INCREMENT;
    private static final long INITIAL_WINDOW_SIZE_INCREASE;
    private static final com.android.emailcommon.mail.Flag[] FLAG_LIST_SEEN;
    private static final com.android.emailcommon.mail.Flag[] FLAG_LIST_FLAGGED;
    private static final com.android.emailcommon.mail.Flag[] FLAG_LIST_ANSWERED;
    private static long mLastSearchAccountKey;
    private static java.lang.String mLastSearchServerId;
    private static com.android.emailcommon.provider.Mailbox mLastSearchRemoteMailbox;
    private static final java.util.HashMap sSearchResults;
    private static final java.lang.String LOCAL_SERVERID_PREFIX;
    private static java.lang.String sMessageDecodeErrorString;
    private final com.android.email.service.EmailServiceStub mBinder;

    public void <init>()
    {
        com.android.email.service.ImapService r0;
        com.android.email.service.ImapService$1 $r1;

        r0 := @this: com.android.email.service.ImapService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r1 = new com.android.email.service.ImapService$1;

        specialinvoke $r1.<com.android.email.service.ImapService$1: void <init>(com.android.email.service.ImapService)>(r0);

        r0.<com.android.email.service.ImapService: com.android.email.service.EmailServiceStub mBinder> = $r1;

        return;
    }

    public static java.lang.String getMessageDecodeErrorString()
    {
        java.lang.String $r0, $r1;

        $r0 = <com.android.email.service.ImapService: java.lang.String sMessageDecodeErrorString>;

        if $r0 != null goto label1;

        $r1 = "";

        goto label2;

     label1:
        $r1 = <com.android.email.service.ImapService: java.lang.String sMessageDecodeErrorString>;

     label2:
        return $r1;
    }

    public void onCreate()
    {
        com.android.email.service.ImapService r0;
        java.lang.String $r1;

        r0 := @this: com.android.email.service.ImapService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r1 = virtualinvoke r0.<com.android.email.service.ImapService: java.lang.String getString(int)>(2131296732);

        <com.android.email.service.ImapService: java.lang.String sMessageDecodeErrorString> = $r1;

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.android.email.service.ImapService r0;
        android.content.Intent r1;
        int i0, i1;

        r0 := @this: com.android.email.service.ImapService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return 1;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.email.service.ImapService r0;
        android.content.Intent r1;
        com.android.email.service.EmailServiceStub $r2, $r3;

        r0 := @this: com.android.email.service.ImapService;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.email.service.ImapService: com.android.email.service.EmailServiceStub mBinder>;

        virtualinvoke $r2.<com.android.email.service.EmailServiceStub: void init(android.content.Context)>(r0);

        $r3 = r0.<com.android.email.service.ImapService: com.android.email.service.EmailServiceStub mBinder>;

        return $r3;
    }

    public static synchronized int synchronizeMailboxSynchronous(android.content.Context, com.android.emailcommon.provider.Account, com.android.emailcommon.provider.Mailbox, boolean, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.emailcommon.provider.Mailbox r2;
        boolean z0, z1, $z2, $z3;
        com.android.email.NotificationController r3;
        com.android.email.mail.Store r4;
        com.android.emailcommon.mail.MessagingException r5, $r7;
        java.lang.Throwable r6, $r10;
        int $i0;
        long $l1, $l2;
        java.lang.Object[] $r8;
        java.lang.String $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $i0 = staticinvoke <com.android.emailcommon.TrafficFlags: int getSyncFlags(android.content.Context,com.android.emailcommon.provider.Account)>(r0, r1);

        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>($i0);

        r3 = staticinvoke <com.android.email.NotificationController: com.android.email.NotificationController getInstance(android.content.Context)>(r0);

        r4 = null;

     label1:
        r4 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>(r1, r0);

        staticinvoke <com.android.email.service.ImapService: void processPendingActionsSynchronous(android.content.Context,com.android.emailcommon.provider.Account,com.android.email.mail.Store,boolean)>(r0, r1, r4, z1);

        staticinvoke <com.android.email.service.ImapService: void synchronizeMailboxGeneric(android.content.Context,com.android.emailcommon.provider.Account,com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,boolean,boolean)>(r0, r1, r4, r2, z0, z1);

        $l1 = r1.<com.android.emailcommon.provider.Account: long mId>;

        virtualinvoke r3.<com.android.email.NotificationController: void cancelLoginFailedNotification(long)>($l1);

     label2:
        if r4 == null goto label9;

        virtualinvoke r4.<com.android.email.mail.Store: void closeConnections()>();

        goto label9;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

        $z2 = <com.android.emailcommon.Logging: boolean LOGD>;

        if $z2 == 0 goto label4;

        $r9 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r5;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r9, "synchronizeMailboxSynchronous", $r8);

     label4:
        $z3 = r5 instanceof com.android.emailcommon.mail.AuthenticationFailedException;

        if $z3 == 0 goto label5;

        $l2 = r1.<com.android.emailcommon.provider.Account: long mId>;

        virtualinvoke r3.<com.android.email.NotificationController: void showLoginFailedNotificationSynchronous(long,boolean)>($l2, 1);

     label5:
        throw r5;

     label6:
        $r10 := @caughtexception;

        r6 = $r10;

     label7:
        if r4 == null goto label8;

        virtualinvoke r4.<com.android.email.mail.Store: void closeConnections()>();

     label8:
        throw r6;

     label9:
        return 0;

        catch com.android.emailcommon.mail.MessagingException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label7 with label6;
    }

    static void loadUnsyncedMessages(android.content.Context, com.android.emailcommon.provider.Account, com.android.emailcommon.mail.Folder, java.util.ArrayList, com.android.emailcommon.provider.Mailbox) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.emailcommon.mail.Folder r2;
        java.util.ArrayList r3, r9, r10, $r18, $r20;
        com.android.emailcommon.provider.Mailbox r4;
        com.android.emailcommon.mail.FetchProfile r5, $r13;
        com.android.emailcommon.mail.Message[] r6, $r15, $r16;
        java.util.Iterator r7, r11;
        com.android.emailcommon.mail.Message r8;
        com.android.emailcommon.mail.Part r12;
        com.android.emailcommon.mail.FetchProfile$Item $r14;
        int $i0;
        java.lang.Object[] $r17;
        boolean $z1, $z2;
        java.lang.Object $r19, $r21;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.emailcommon.mail.Folder;

        r3 := @parameter3: java.util.ArrayList;

        r4 := @parameter4: com.android.emailcommon.provider.Mailbox;

        $r13 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r13.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r5 = $r13;

        $r14 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item STRUCTURE>;

        virtualinvoke r5.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r14);

        $i0 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r15 = newarray (com.android.emailcommon.mail.Message)[$i0];

        $r17 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r15);

        $r16 = (com.android.emailcommon.mail.Message[]) $r17;

        virtualinvoke r2.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>($r16, r5, null);

        r6 = newarray (com.android.emailcommon.mail.Message)[1];

        r7 = virtualinvoke r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r19 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.emailcommon.mail.Message) $r19;

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        r9 = $r18;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r10 = $r20;

        staticinvoke <com.android.emailcommon.internet.MimeUtility: void collectParts(com.android.emailcommon.mail.Part,java.util.ArrayList,java.util.ArrayList)>(r8, r9, r10);

        r6[0] = r8;

        r11 = virtualinvoke r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r21 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (com.android.emailcommon.mail.Part) $r21;

        virtualinvoke r5.<com.android.emailcommon.mail.FetchProfile: void clear()>();

        virtualinvoke r5.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>(r12);

        virtualinvoke r2.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r6, r5, null);

        goto label2;

     label3:
        staticinvoke <com.android.email.provider.Utilities: void copyOneMessageToProvider(android.content.Context,com.android.emailcommon.mail.Message,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,int)>(r0, r8, r1, r4, 1);

        goto label1;

     label4:
        return;
    }

    public static void downloadFlagAndEnvelope(android.content.Context, com.android.emailcommon.provider.Account, com.android.emailcommon.provider.Mailbox, com.android.emailcommon.mail.Folder, java.util.ArrayList, java.util.HashMap, java.util.ArrayList) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.emailcommon.provider.Mailbox r2;
        com.android.emailcommon.mail.Folder r3;
        java.util.ArrayList r4, r6;
        java.util.HashMap r5, r8, $r12, $r17;
        com.android.emailcommon.mail.FetchProfile r7, $r9;
        com.android.emailcommon.mail.FetchProfile$Item $r10, $r11;
        int $i0;
        java.lang.Object[] $r13;
        com.android.emailcommon.mail.Message[] $r14, $r15;
        com.android.email.service.ImapService$2 $r16;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        r3 := @parameter3: com.android.emailcommon.mail.Folder;

        r4 := @parameter4: java.util.ArrayList;

        r5 := @parameter5: java.util.HashMap;

        r6 := @parameter6: java.util.ArrayList;

        $r9 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r9.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r7 = $r9;

        $r10 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item FLAGS>;

        virtualinvoke r7.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r10);

        $r11 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r7.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r11);

        if r5 == null goto label1;

        $r17 = new java.util.HashMap;

        specialinvoke $r17.<java.util.HashMap: void <init>(java.util.Map)>(r5);

        r8 = $r17;

        goto label2;

     label1:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r8 = $r12;

     label2:
        $i0 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r14 = newarray (com.android.emailcommon.mail.Message)[$i0];

        $r13 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r14);

        $r15 = (com.android.emailcommon.mail.Message[]) $r13;

        $r16 = new com.android.email.service.ImapService$2;

        specialinvoke $r16.<com.android.email.service.ImapService$2: void <init>(java.util.HashMap,android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,java.util.ArrayList)>(r8, r0, r1, r2, r6);

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>($r15, r7, $r16);

        return;
    }

    private static synchronized void synchronizeMailboxGeneric(android.content.Context, com.android.emailcommon.provider.Account, com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, boolean, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.mail.Store r2;
        com.android.emailcommon.provider.Mailbox r3;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8, z9, z10, z11, $z12, $z13, $z15, $z16, $z17, $z19, $z20, $z21, $z22, $z23, $z25, $z26, $z27, z28, z29, z30;
        java.util.ArrayList r4, $r32, $r60, r163;
        android.content.ContentResolver r5;
        long l0, l1, l2, l4, l5, $l12, $l14, $l15, $l22, $l23, $l28, $l29, $l30, $l33, $l34, $l35, $l36, $l39, $l67, $l73, $l74;
        android.database.Cursor r6, r162;
        com.android.emailcommon.mail.Message[] r7, r10, r13, r14, $r96, r170, r172;
        int i3, i6, i7, i8, $i10, $i11, $i13, $i17, $i19, $i20, $i24, $i25, $i26, $i38, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i53, $i55, $i59, $i60, $i61, $i62, $i63, $i65, $i69, $i71, i79, i80, i82, i83, i84, i85, i86, i87, i88, i89, i90;
        java.lang.Throwable r8, r12, $r159, $r160;
        java.util.HashMap r9, $r58, $r65, r164;
        com.android.email.service.ImapService$LocalMessageInfo r11, r17, $r106, r166, r175;
        java.util.List r15, r168;
        com.android.emailcommon.mail.Flag r16, $r71, $r73, $r74, $r80, $r81, $r82, $r83;
        android.content.ContentValues r18, $r85;
        java.lang.StringBuilder $r19, $r21, $r22, $r24, $r25, $r26, $r27, $r28, $r31, $r36, $r38, $r39, $r40, $r45, $r46, $r47, $r48, $r51, $r53, $r54, $r89, $r91, $r95, $r98, $r100, $r101, $r103, $r110, $r113, $r115, $r120, $r121, $r122, $r123, $r125, $r131, $r132, $r133, $r134, $r135, $r138, $r141, $r142, $r153, $r155, $r156;
        android.net.Uri r20, $r59, $r69, $r70, $r72, $r75, $r151, r176, r177, r178;
        java.lang.String $r23, $r30, $r33, $r35, $r37, $r41, $r44, $r50, $r52, $r55, $r61, $r62, $r66, $r76, $r78, $r88, $r90, $r92, $r93, $r99, $r102, $r105, $r107, $r111, $r114, $r116, $r119, $r124, $r128, $r129, $r136, $r137, $r139, $r140, $r143, $r145, $r149, $r154, $r157;
        java.lang.Object[] $r29, $r34, $r43, $r49, $r94, $r97, $r112, $r117, $r118, $r127, $r130, $r144, $r146, $r148, $r158;
        com.android.emailcommon.mail.Folder$OpenMode $r42;
        java.lang.String[] $r56, $r57, $r150, $r152;
        com.android.emailcommon.mail.FetchProfile$Item $r63;
        com.android.emailcommon.mail.FetchProfile $r64, r167;
        byte $b27, $b56, $b57, $b75, $b77, $b78;
        java.lang.Object $r67, $r79, $r109;
        java.util.Collection $r68;
        java.lang.Boolean $r84, $r87;
        java.lang.Integer $r86, $r147;
        com.android.emailcommon.mail.Folder$FolderType $r126;
        com.android.emailcommon.mail.Folder r161;
        com.android.emailcommon.mail.Message r165, r171, r173;
        com.android.emailcommon.mail.Flag[] r169;
        java.util.Iterator r174;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.email.mail.Store;

        r3 := @parameter3: com.android.emailcommon.provider.Mailbox;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r23 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("synchronizeMailboxGeneric ");

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r28 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r23, $r30, $r29);

        $r32 = new java.util.ArrayList;

        specialinvoke $r32.<java.util.ArrayList: void <init>()>();

        r4 = $r32;

        r5 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i11 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i11 == 3 goto label01;

        $i10 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i10 != 4 goto label02;

     label01:
        return;

     label02:
        $l15 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l14 = r3.<com.android.emailcommon.provider.Mailbox: long mLastFullSyncTime>;

        l1 = $l15 - $l14;

        if z1 != 0 goto label03;

        if z0 != 0 goto label03;

        $b77 = l1 cmp 14400000L;

        if $b77 >= 0 goto label03;

        $b78 = l1 cmp 0L;

        if $b78 >= 0 goto label04;

     label03:
        $z27 = 1;

        goto label05;

     label04:
        $z27 = 0;

     label05:
        z2 = $z27;

        $i13 = r1.<com.android.emailcommon.provider.Account: int mSyncLookback>;

        if $i13 != 6 goto label06;

        l0 = 0L;

        goto label14;

     label06:
        if z2 == 0 goto label13;

        $l73 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l73 - 604800000L;

        r6 = null;

     label07:
        $r151 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r152 = staticinvoke <com.android.email.service.ImapService$OldestTimestampInfo: java.lang.String[] access$100()>();

        $r150 = newarray (java.lang.String)[2];

        $l74 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $r137 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l74);

        $r150[0] = $r137;

        $l67 = r3.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r139 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l67);

        $r150[1] = $r139;

        r6 = virtualinvoke r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r151, $r152, "accountKey=? AND mailboxKey=? AND timeStamp!=0", $r150, null);

        if r6 == null goto label08;

        $z26 = interfaceinvoke r6.<android.database.Cursor: boolean moveToFirst()>();

        if $z26 == 0 goto label08;

        l2 = interfaceinvoke r6.<android.database.Cursor: long getLong(int)>(0);

        $b75 = l2 cmp 0L;

        if $b75 <= 0 goto label08;

        l0 = staticinvoke <java.lang.Math: long min(long,long)>(l0, l2);

        $r154 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r155 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("oldest local message ");

        $r156 = virtualinvoke $r155.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r157 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        $r158 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r154, $r157, $r158);

     label08:
        if r6 == null goto label12;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

        goto label12;

     label09:
        $r159 := @caughtexception;

        r8 = $r159;

     label10:
        if r6 == null goto label11;

        interfaceinvoke r6.<android.database.Cursor: void close()>();

     label11:
        throw r8;

     label12:
        $r143 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r142 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("full sync: original window: now - ");

        $r141 = virtualinvoke $r142.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r140 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        $r144 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r143, $r140, $r144);

        goto label14;

     label13:
        $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l0 = $l12 - 86400000L;

        $r37 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("quick sync: original window: now - ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r33 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r37, $r33, $r34);

     label14:
        if r2 != null goto label15;

        $r149 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r148 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r149, "account is apparently deleted", $r148);

        return;

     label15:
        $r35 = r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r161 = virtualinvoke r2.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r35);

        $i17 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i17 == 6 goto label16;

        $i71 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i71 != 5 goto label17;

     label16:
        $z12 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z12 != 0 goto label17;

        $r126 = <com.android.emailcommon.mail.Folder$FolderType: com.android.emailcommon.mail.Folder$FolderType HOLDS_MESSAGES>;

        $z25 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: boolean create(com.android.emailcommon.mail.Folder$FolderType)>($r126);

        if $z25 != 0 goto label17;

        $r145 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r146 = newarray (java.lang.Object)[1];

        $i69 = r3.<com.android.emailcommon.provider.Mailbox: int mType>;

        $r147 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i69);

        $r146[0] = $r147;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r145, "could not create remote folder type %d", $r146);

        return;

     label17:
        $r42 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r161.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r42);

        i79 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: int getMessageCount()>();

        virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: void updateMessageCount(android.content.Context,int)>(r0, i79);

        r7 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] getMessages(long,long,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(0L, l0, null);

        $r41 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("received ");

        $i19 = lengthof r7;

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messages");

        $r44 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r43 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r41, $r44, $r43);

        if z0 == 0 goto label18;

        $i65 = lengthof r7;

        i80 = $i65 + 10;

        goto label19;

     label18:
        i80 = lengthof r7;

        if z2 == 0 goto label19;

        if i80 >= 10 goto label19;

        i80 = 10;

     label19:
        $r52 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("need ");

        $r54 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i80);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total");

        $r50 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r52, $r50, $r49);

        $i20 = lengthof r7;

        i3 = i80 - $i20;

        if i3 <= 0 goto label25;

        $r99 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("trying to get ");

        $r101 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" more");

        $r116 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        $r117 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r99, $r116, $r117);

        l4 = l0 - 1L;

        r10 = newarray (com.android.emailcommon.mail.Message)[0];

        l5 = 86400000L;

     label20:
        $i55 = lengthof r10;

        if $i55 >= i3 goto label22;

        $b57 = l0 cmp 0L;

        if $b57 <= 0 goto label22;

        l0 = l0 - l5;

        $b56 = l0 cmp 0L;

        if $b56 >= 0 goto label21;

        $r128 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r127 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r128, "window size too large, this is the last attempt", $r127);

        l0 = 0L;

     label21:
        $r136 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r135 = new java.lang.StringBuilder;

        specialinvoke $r135.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("requesting additional messages from range ");

        $r134 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r131 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r132 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r129 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        $r130 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r136, $r129, $r130);

        r10 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] getMessages(long,long,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(l4, l0, null);

        l5 = l5 * 2L;

        goto label20;

     label22:
        $r114 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r113 = new java.lang.StringBuilder;

        specialinvoke $r113.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additionalMessages ");

        $i53 = lengthof r10;

        $r110 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i53);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        $r112 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r114, $r111, $r112);

        $i48 = lengthof r10;

        if $i48 >= i3 goto label23;

        $r124 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r123 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected to find ");

        $r122 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r121 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" more messages, only got ");

        $i59 = lengthof r10;

        $r120 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i59);

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.String toString()>();

        $r118 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r124, $r119, $r118);

     label23:
        i6 = lengthof r10;

        $i49 = lengthof r10;

        if $i49 <= 20 goto label24;

        i6 = 20;

     label24:
        $i50 = lengthof r7;

        $i51 = $i50 + i6;

        r13 = newarray (com.android.emailcommon.mail.Message)[$i51];

        $i63 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r13, 0, $i63);

        $i62 = lengthof r10;

        $i60 = $i62 - i6;

        $i61 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, $i60, r13, $i61, i6);

        r7 = r13;

     label25:
        r162 = null;

        $r58 = new java.util.HashMap;

        specialinvoke $r58.<java.util.HashMap: void <init>()>();

        r9 = $r58;

     label26:
        $r59 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r56 = staticinvoke <com.android.email.service.ImapService$LocalMessageInfo: java.lang.String[] access$200()>();

        $r57 = newarray (java.lang.String)[3];

        $l22 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $r55 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l22);

        $r57[0] = $r55;

        $l23 = r3.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r62 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l23);

        $r57[1] = $r62;

        $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(0L);

        $r57[2] = $r61;

        r162 = virtualinvoke r5.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r59, $r56, "accountKey=? AND mailboxKey=? AND timeStamp>=?", $r57, null);

     label27:
        $z13 = interfaceinvoke r162.<android.database.Cursor: boolean moveToNext()>();

        if $z13 == 0 goto label29;

        $r106 = new com.android.email.service.ImapService$LocalMessageInfo;

        specialinvoke $r106.<com.android.email.service.ImapService$LocalMessageInfo: void <init>(android.database.Cursor)>(r162);

        r11 = $r106;

        $r105 = r11.<com.android.email.service.ImapService$LocalMessageInfo: java.lang.String mServerId>;

        $z23 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r105);

        if $z23 != 0 goto label28;

        $r102 = r11.<com.android.email.service.ImapService$LocalMessageInfo: java.lang.String mServerId>;

        virtualinvoke r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r102, r11);

     label28:
        goto label27;

     label29:
        if r162 == null goto label33;

        interfaceinvoke r162.<android.database.Cursor: void close()>();

        goto label33;

     label30:
        $r160 := @caughtexception;

        r12 = $r160;

     label31:
        if r162 == null goto label32;

        interfaceinvoke r162.<android.database.Cursor: void close()>();

     label32:
        throw r12;

     label33:
        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        r163 = $r60;

        $r65 = new java.util.HashMap;

        specialinvoke $r65.<java.util.HashMap: void <init>()>();

        r164 = $r65;

        $i26 = lengthof r7;

        i82 = $i26 - 1;

     label34:
        if i82 < 0 goto label37;

        r165 = r7[i82];

        $r90 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r91 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote message ");

        $r88 = virtualinvoke r165.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        $r89 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88);

        $r93 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        $r94 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r90, $r93, $r94);

        $r92 = virtualinvoke r165.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        virtualinvoke r164.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r92, r165);

        $r107 = virtualinvoke r165.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        $r109 = virtualinvoke r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r107);

        r166 = (com.android.email.service.ImapService$LocalMessageInfo) $r109;

        if r166 == null goto label35;

        $i47 = r166.<com.android.email.service.ImapService$LocalMessageInfo: int mFlagLoaded>;

        if $i47 == 0 goto label35;

        $i46 = r166.<com.android.email.service.ImapService$LocalMessageInfo: int mFlagLoaded>;

        if $i46 != 2 goto label36;

     label35:
        virtualinvoke r163.<java.util.ArrayList: boolean add(java.lang.Object)>(r165);

     label36:
        i82 = i82 + -1;

        goto label34;

     label37:
        $i25 = virtualinvoke r163.<java.util.ArrayList: int size()>();

        if $i25 <= 0 goto label38;

        staticinvoke <com.android.email.service.ImapService: void downloadFlagAndEnvelope(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,com.android.emailcommon.mail.Folder,java.util.ArrayList,java.util.HashMap,java.util.ArrayList)>(r0, r1, r3, r161, r163, r9, r4);

     label38:
        $r64 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r64.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r167 = $r64;

        $r63 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item FLAGS>;

        virtualinvoke r167.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r63);

        $i24 = lengthof r7;

        if $i24 <= 500 goto label42;

        r168 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r7);

        i83 = 0;

     label39:
        $i43 = interfaceinvoke r168.<java.util.List: int size()>();

        if i83 >= $i43 goto label41;

        i84 = i83 + 500;

        $i44 = interfaceinvoke r168.<java.util.List: int size()>();

        if i84 < $i44 goto label40;

        $i45 = interfaceinvoke r168.<java.util.List: int size()>();

        i84 = $i45 - 1;

     label40:
        r15 = interfaceinvoke r168.<java.util.List: java.util.List subList(int,int)>(i83, i84);

        $i42 = interfaceinvoke r15.<java.util.List: int size()>();

        $r96 = newarray (com.android.emailcommon.mail.Message)[$i42];

        $r97 = interfaceinvoke r15.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r96);

        r14 = (com.android.emailcommon.mail.Message[]) $r97;

        virtualinvoke r161.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r14, r167, null);

        i83 = i83 + 500;

        goto label39;

     label41:
        goto label43;

     label42:
        virtualinvoke r161.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r7, r167, null);

     label43:
        z28 = 0;

        z29 = 0;

        z30 = 0;

        r169 = virtualinvoke r161.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Flag[] getPermanentFlags()>();

        i85 = lengthof r169;

        i7 = 0;

     label44:
        if i7 >= i85 goto label48;

        r16 = r169[i7];

        $r83 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag SEEN>;

        if r16 != $r83 goto label45;

        z28 = 1;

     label45:
        $r82 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag FLAGGED>;

        if r16 != $r82 goto label46;

        z29 = 1;

     label46:
        $r81 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag ANSWERED>;

        if r16 != $r81 goto label47;

        z30 = 1;

     label47:
        i7 = i7 + 1;

        goto label44;

     label48:
        if z28 != 0 goto label49;

        if z29 != 0 goto label49;

        if z30 == 0 goto label64;

     label49:
        r170 = r7;

        i86 = lengthof r170;

        i87 = 0;

     label50:
        if i87 >= i86 goto label64;

        r171 = r170[i87];

        $r78 = virtualinvoke r171.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        $r79 = virtualinvoke r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r78);

        r17 = (com.android.email.service.ImapService$LocalMessageInfo) $r79;

        if r17 != null goto label51;

        goto label63;

     label51:
        z3 = r17.<com.android.email.service.ImapService$LocalMessageInfo: boolean mFlagRead>;

        $r80 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag SEEN>;

        z6 = virtualinvoke r171.<com.android.emailcommon.mail.Message: boolean isSet(com.android.emailcommon.mail.Flag)>($r80);

        if z28 == 0 goto label52;

        if z6 == z3 goto label52;

        $z19 = 1;

        goto label53;

     label52:
        $z19 = 0;

     label53:
        z7 = $z19;

        z4 = r17.<com.android.email.service.ImapService$LocalMessageInfo: boolean mFlagFavorite>;

        $r73 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag FLAGGED>;

        z5 = virtualinvoke r171.<com.android.emailcommon.mail.Message: boolean isSet(com.android.emailcommon.mail.Flag)>($r73);

        if z29 == 0 goto label54;

        if z4 == z5 goto label54;

        $z20 = 1;

        goto label55;

     label54:
        $z20 = 0;

     label55:
        z10 = $z20;

        i8 = r17.<com.android.email.service.ImapService$LocalMessageInfo: int mFlags>;

        $i38 = i8 & 262144;

        if $i38 == 0 goto label56;

        $z21 = 1;

        goto label57;

     label56:
        $z21 = 0;

     label57:
        z8 = $z21;

        $r74 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag ANSWERED>;

        z9 = virtualinvoke r171.<com.android.emailcommon.mail.Message: boolean isSet(com.android.emailcommon.mail.Flag)>($r74);

        if z30 == 0 goto label58;

        if z8 == z9 goto label58;

        $z22 = 1;

        goto label59;

     label58:
        $z22 = 0;

     label59:
        z11 = $z22;

        if z7 != 0 goto label60;

        if z10 != 0 goto label60;

        if z11 == 0 goto label63;

     label60:
        $r75 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $l39 = r17.<com.android.email.service.ImapService$LocalMessageInfo: long mId>;

        r20 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r75, $l39);

        $r85 = new android.content.ContentValues;

        specialinvoke $r85.<android.content.ContentValues: void <init>()>();

        r18 = $r85;

        $r84 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z6);

        virtualinvoke r18.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>("flagRead", $r84);

        $r87 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z5);

        virtualinvoke r18.<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>("flagFavorite", $r87);

        if z9 == 0 goto label61;

        i88 = i8 | 262144;

        goto label62;

     label61:
        i88 = i8 & -262145;

     label62:
        $r86 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i88);

        virtualinvoke r18.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r86);

        virtualinvoke r5.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r20, r18, null, null);

     label63:
        i87 = i87 + 1;

        goto label50;

     label64:
        r172 = r7;

        i89 = lengthof r172;

        i90 = 0;

     label65:
        if i90 >= i89 goto label67;

        r173 = r172[i90];

        $r71 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag DELETED>;

        $z17 = virtualinvoke r173.<com.android.emailcommon.mail.Message: boolean isSet(com.android.emailcommon.mail.Flag)>($r71);

        if $z17 == 0 goto label66;

        $r76 = virtualinvoke r173.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        virtualinvoke r164.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r76);

        virtualinvoke r163.<java.util.ArrayList: boolean remove(java.lang.Object)>(r173);

     label66:
        i90 = i90 + 1;

        goto label65;

     label67:
        $r68 = virtualinvoke r9.<java.util.HashMap: java.util.Collection values()>();

        r174 = interfaceinvoke $r68.<java.util.Collection: java.util.Iterator iterator()>();

     label68:
        $z15 = interfaceinvoke r174.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label70;

        $r67 = interfaceinvoke r174.<java.util.Iterator: java.lang.Object next()>();

        r175 = (com.android.email.service.ImapService$LocalMessageInfo) $r67;

        $l28 = r175.<com.android.email.service.ImapService$LocalMessageInfo: long mTimestamp>;

        $b27 = $l28 cmp l0;

        if $b27 < 0 goto label69;

        $r66 = r175.<com.android.email.service.ImapService$LocalMessageInfo: java.lang.String mServerId>;

        $z16 = virtualinvoke r164.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r66);

        if $z16 != 0 goto label69;

        $l35 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $l33 = r175.<com.android.email.service.ImapService$LocalMessageInfo: long mId>;

        staticinvoke <com.android.emailcommon.utility.AttachmentUtilities: void deleteAllAttachmentFiles(android.content.Context,long,long)>(r0, $l35, $l33);

        $r72 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $l34 = r175.<com.android.email.service.ImapService$LocalMessageInfo: long mId>;

        r176 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r72, $l34);

        virtualinvoke r5.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r176, null, null);

        $r69 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri UPDATED_CONTENT_URI>;

        $l36 = r175.<com.android.email.service.ImapService$LocalMessageInfo: long mId>;

        r177 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r69, $l36);

        virtualinvoke r5.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r177, null, null);

        $r70 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri DELETED_CONTENT_URI>;

        $l30 = r175.<com.android.email.service.ImapService$LocalMessageInfo: long mId>;

        r178 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r70, $l30);

        virtualinvoke r5.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r178, null, null);

     label69:
        goto label68;

     label70:
        staticinvoke <com.android.email.service.ImapService: void loadUnsyncedMessages(android.content.Context,com.android.emailcommon.provider.Account,com.android.emailcommon.mail.Folder,java.util.ArrayList,com.android.emailcommon.provider.Mailbox)>(r0, r1, r161, r163, r3);

        if z2 == 0 goto label71;

        $l29 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke r3.<com.android.emailcommon.provider.Mailbox: void updateLastFullSyncTime(android.content.Context,long)>(r0, $l29);

     label71:
        virtualinvoke r161.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label26 to label29 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    private static void processPendingActionsSynchronous(android.content.Context, com.android.emailcommon.provider.Account, com.android.email.mail.Store, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.mail.Store r2;
        boolean z0;
        java.lang.String[] r3, $r4;
        int $i0;
        long $l1;
        java.lang.String $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.email.mail.Store;

        z0 := @parameter3: boolean;

        $i0 = staticinvoke <com.android.emailcommon.TrafficFlags: int getSyncFlags(android.content.Context,com.android.emailcommon.provider.Account)>(r0, r1);

        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>($i0);

        $r4 = newarray (java.lang.String)[1];

        $l1 = r1.<com.android.emailcommon.provider.Account: long mId>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r4[0] = $r5;

        r3 = $r4;

        staticinvoke <com.android.email.service.ImapService: void processPendingDeletesSynchronous(android.content.Context,com.android.emailcommon.provider.Account,com.android.email.mail.Store,java.lang.String[])>(r0, r1, r2, r3);

        staticinvoke <com.android.email.service.ImapService: void processPendingUploadsSynchronous(android.content.Context,com.android.emailcommon.provider.Account,com.android.email.mail.Store,java.lang.String[],boolean)>(r0, r1, r2, r3, z0);

        staticinvoke <com.android.email.service.ImapService: void processPendingUpdatesSynchronous(android.content.Context,com.android.emailcommon.provider.Account,com.android.email.mail.Store,java.lang.String[])>(r0, r1, r2, r3);

        return;
    }

    private static com.android.emailcommon.provider.Mailbox getRemoteMailboxForMessage(android.content.Context, com.android.emailcommon.provider.EmailContent$Message)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.EmailContent$Message r1;
        long l0, $l1, $l2;
        java.lang.String r2, $r7, $r13, $r14;
        android.database.Cursor r3;
        com.android.emailcommon.provider.Mailbox r4, r5, $r8, $r15, $r16;
        java.lang.Throwable r6, $r17;
        boolean $z0, $z1, $z2;
        byte $b3;
        android.content.ContentResolver $r9;
        android.net.Uri $r10;
        java.lang.String[] $r11, $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.EmailContent$Message;

        $r7 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mProtocolSearchInfo>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 != 0 goto label7;

        l0 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mAccountKey>;

        r2 = r1.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mProtocolSearchInfo>;

        $l2 = <com.android.email.service.ImapService: long mLastSearchAccountKey>;

        $b3 = l0 cmp $l2;

        if $b3 != 0 goto label1;

        $r14 = <com.android.email.service.ImapService: java.lang.String mLastSearchServerId>;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z2 == 0 goto label1;

        $r16 = <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox mLastSearchRemoteMailbox>;

        return $r16;

     label1:
        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r12 = <com.android.emailcommon.provider.Mailbox: java.lang.String[] CONTENT_PROJECTION>;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = r2;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r11[1] = $r13;

        r3 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, $r12, "serverId=? and accountKey=?", $r11, null);

     label2:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label4;

        $r15 = new com.android.emailcommon.provider.Mailbox;

        specialinvoke $r15.<com.android.emailcommon.provider.Mailbox: void <init>()>();

        r4 = $r15;

        virtualinvoke r4.<com.android.emailcommon.provider.Mailbox: void restore(android.database.Cursor)>(r3);

        <com.android.email.service.ImapService: long mLastSearchAccountKey> = l0;

        <com.android.email.service.ImapService: java.lang.String mLastSearchServerId> = r2;

        <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox mLastSearchRemoteMailbox> = r4;

        r5 = r4;

     label3:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return r5;

     label4:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        return null;

     label5:
        $r17 := @caughtexception;

        r6 = $r17;

     label6:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r6;

     label7:
        $l1 = r1.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $r8 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, $l1);

        return $r8;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void processPendingDeletesSynchronous(android.content.Context, com.android.emailcommon.provider.Account, com.android.email.mail.Store, java.lang.String[])
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.mail.Store r2;
        java.lang.String[] r3, $r10;
        android.database.Cursor r4;
        long l0, $l2;
        com.android.emailcommon.provider.EmailContent$Message r5;
        com.android.emailcommon.provider.Mailbox r6;
        boolean z0, $z1, $z2, $z3;
        android.net.Uri r7, $r11, $r13;
        java.lang.Throwable r8, $r16;
        android.content.ContentResolver $r9, $r14;
        com.android.emailcommon.provider.EmailContent $r12;
        int $i1;
        com.android.emailcommon.mail.MessagingException $r15, r25;
        java.lang.StringBuilder $r17, $r18, $r20, $r22, $r23;
        java.lang.String $r19, $r21;
        java.lang.Object[] $r24;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.email.mail.Store;

        r3 := @parameter3: java.lang.String[];

        $r9 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r11 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri DELETED_CONTENT_URI>;

        $r10 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] CONTENT_PROJECTION>;

        r4 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r11, $r10, "accountKey=?", r3, "mailboxKey");

        l0 = -1L;

     label01:
        $z1 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label07;

        $r12 = staticinvoke <com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent getContent(android.content.Context,android.database.Cursor,java.lang.Class)>(r0, r4, class "com/android/emailcommon/provider/EmailContent$Message");

        r5 = (com.android.emailcommon.provider.EmailContent$Message) $r12;

        if r5 == null goto label06;

        l0 = r5.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r6 = staticinvoke <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox getRemoteMailboxForMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r5);

        if r6 != null goto label02;

        goto label01;

     label02:
        $i1 = r6.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i1 != 6 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z0 = $z2;

        if z0 == 0 goto label05;

        staticinvoke <com.android.email.service.ImapService: void processPendingDeleteFromTrash(com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,com.android.emailcommon.provider.EmailContent$Message)>(r2, r6, r5);

     label05:
        $r13 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri DELETED_CONTENT_URI>;

        $l2 = r5.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r7 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r13, $l2);

        $r14 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r14.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r7, null, null);

     label06:
        goto label01;

     label07:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label12;

     label08:
        $r15 := @caughtexception;

        r25 = $r15;

        $z3 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z3 == 0 goto label09;

        $r19 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process pending delete for id=");

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r19, $r21, $r24);

     label09:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        goto label12;

     label10:
        $r16 := @caughtexception;

        r8 = $r16;

     label11:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        throw r8;

     label12:
        return;

        catch com.android.emailcommon.mail.MessagingException from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static void processPendingUploadsSynchronous(android.content.Context, com.android.emailcommon.provider.Account, com.android.email.mail.Store, java.lang.String[], boolean)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.mail.Store r2;
        java.lang.String[] r3, r6, $r11, $r13, $r14;
        boolean z0, $z1, $z2, $z3;
        android.content.ContentResolver r4;
        android.database.Cursor r5, r8;
        long l0, l1, l2;
        com.android.emailcommon.provider.Mailbox r7;
        java.lang.Throwable r9, r10, $r17, $r18;
        android.net.Uri $r12, $r16;
        java.lang.String $r15, $r20, $r26;
        java.lang.StringBuilder $r19, $r22, $r23, $r24, $r25;
        com.android.emailcommon.mail.MessagingException $r21, r28;
        java.lang.Object[] $r27;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.email.mail.Store;

        r3 := @parameter3: java.lang.String[];

        z0 := @parameter4: boolean;

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $r11 = <com.android.emailcommon.provider.Mailbox: java.lang.String[] ID_PROJECTION>;

        r5 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r12, $r11, "accountKey=? and type=5", r3, null);

        l0 = -1L;

     label01:
        $z1 = interfaceinvoke r5.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label12;

        l1 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(0);

        $r13 = newarray (java.lang.String)[1];

        $r15 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l1);

        $r13[0] = $r15;

        r6 = $r13;

        r7 = null;

        $r16 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $r14 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] ID_PROJECTION>;

        r8 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r16, $r14, "mailboxKey=? and (syncServerId is null or syncServerId=\'\')", r6, null);

     label02:
        $z2 = interfaceinvoke r8.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label05;

        if r2 != null goto label03;

        r2 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>(r1, r0);

     label03:
        if r7 != null goto label04;

        r7 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, l1);

        if r7 != null goto label04;

        goto label02;

     label04:
        l2 = interfaceinvoke r8.<android.database.Cursor: long getLong(int)>(0);

        l0 = l2;

        staticinvoke <com.android.email.service.ImapService: void processUploadMessage(android.content.Context,com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,long,boolean)>(r0, r2, r7, l2, z0);

        goto label02;

     label05:
        if r8 == null goto label06;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label06:
        if r2 == null goto label11;

        virtualinvoke r2.<com.android.email.mail.Store: void closeConnections()>();

        goto label11;

     label07:
        $r18 := @caughtexception;

        r10 = $r18;

     label08:
        if r8 == null goto label09;

        interfaceinvoke r8.<android.database.Cursor: void close()>();

     label09:
        if r2 == null goto label10;

        virtualinvoke r2.<com.android.email.mail.Store: void closeConnections()>();

     label10:
        throw r10;

     label11:
        goto label01;

     label12:
        if r5 == null goto label18;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label18;

     label13:
        $r21 := @caughtexception;

        r28 = $r21;

        $z3 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z3 == 0 goto label14;

        $r20 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process pending upsync for id=");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r28);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r20, $r26, $r27);

     label14:
        if r5 == null goto label18;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label18;

     label15:
        $r17 := @caughtexception;

        r9 = $r17;

     label16:
        if r5 == null goto label17;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label17:
        throw r9;

     label18:
        return;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch com.android.emailcommon.mail.MessagingException from label01 to label12 with label13;
        catch java.lang.Throwable from label01 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private static void processPendingUpdatesSynchronous(android.content.Context, com.android.emailcommon.provider.Account, com.android.email.mail.Store, java.lang.String[])
    {
        android.content.Context r0;
        com.android.emailcommon.provider.Account r1;
        com.android.email.mail.Store r2;
        java.lang.String[] r3, $r11;
        android.content.ContentResolver r4;
        android.database.Cursor r5;
        long l0, $l1, $l2, $l4, $l5, $l7;
        com.android.emailcommon.provider.Mailbox r6;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.emailcommon.provider.EmailContent$Message r7, r8;
        java.lang.Throwable r9, $r22;
        android.net.Uri r10, $r12, $r14;
        com.android.emailcommon.provider.EmailContent $r13;
        byte $b6;
        int $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r15, $r24;
        java.lang.StringBuilder $r16, $r18, $r19, $r20, $r21;
        com.android.emailcommon.mail.MessagingException $r17, r25;
        java.lang.Object[] $r23;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.Account;

        r2 := @parameter2: com.android.email.mail.Store;

        r3 := @parameter3: java.lang.String[];

        r4 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r12 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri UPDATED_CONTENT_URI>;

        $r11 = <com.android.emailcommon.provider.EmailContent$Message: java.lang.String[] CONTENT_PROJECTION>;

        r5 = virtualinvoke r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r12, $r11, "accountKey=?", r3, "mailboxKey");

        l0 = -1L;

     label01:
        r6 = null;

     label02:
        $z5 = interfaceinvoke r5.<android.database.Cursor: boolean moveToNext()>();

        if $z5 == 0 goto label18;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        $r13 = staticinvoke <com.android.emailcommon.provider.EmailContent: com.android.emailcommon.provider.EmailContent getContent(android.content.Context,android.database.Cursor,java.lang.Class)>(r0, r5, class "com/android/emailcommon/provider/EmailContent$Message");

        r7 = (com.android.emailcommon.provider.EmailContent$Message) $r13;

        l0 = r7.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $l1 = r7.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r8 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>(r0, $l1);

        if r8 == null goto label12;

        $l4 = r8.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        r6 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, $l4);

        if r6 != null goto label03;

        goto label02;

     label03:
        $l5 = r7.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $l7 = r8.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $b6 = $l5 cmp $l7;

        if $b6 == 0 goto label05;

        $i12 = r6.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i12 != 6 goto label04;

        z0 = 1;

        goto label05;

     label04:
        z3 = 1;

     label05:
        $z9 = r7.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead>;

        $z8 = r8.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead>;

        if $z9 == $z8 goto label06;

        $z10 = 1;

        goto label07;

     label06:
        $z10 = 0;

     label07:
        z1 = $z10;

        $z7 = r7.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagFavorite>;

        $z6 = r8.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagFavorite>;

        if $z7 == $z6 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z2 = $z12;

        $i10 = r7.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i9 = $i10 & 262144;

        $i11 = r8.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i8 = $i11 & 262144;

        if $i9 == $i8 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        z4 = $z11;

     label12:
        if r2 != null goto label14;

        if z0 != 0 goto label13;

        if z1 != 0 goto label13;

        if z2 != 0 goto label13;

        if z3 != 0 goto label13;

        if z4 == 0 goto label14;

     label13:
        r2 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>(r1, r0);

     label14:
        if z0 == 0 goto label15;

        staticinvoke <com.android.email.service.ImapService: void processPendingMoveToTrash(android.content.Context,com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,com.android.emailcommon.provider.EmailContent$Message,com.android.emailcommon.provider.EmailContent$Message)>(r0, r2, r6, r7, r8);

        goto label17;

     label15:
        if z1 != 0 goto label16;

        if z2 != 0 goto label16;

        if z3 != 0 goto label16;

        if z4 == 0 goto label17;

     label16:
        staticinvoke <com.android.email.service.ImapService: void processPendingDataChange(android.content.Context,com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,boolean,boolean,boolean,boolean,com.android.emailcommon.provider.EmailContent$Message,com.android.emailcommon.provider.EmailContent$Message)>(r0, r2, r6, z1, z2, z3, z4, r7, r8);

     label17:
        $r14 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri UPDATED_CONTENT_URI>;

        $l2 = r7.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r10 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r14, $l2);

        virtualinvoke r4.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r10, null, null);

        goto label02;

     label18:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label23;

     label19:
        $r17 := @caughtexception;

        r25 = $r17;

        $z13 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z13 == 0 goto label20;

        $r15 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to process pending update for id=");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r24 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r15, $r24, $r23);

     label20:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label23;

     label21:
        $r22 := @caughtexception;

        r9 = $r22;

     label22:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        throw r9;

     label23:
        return;

        catch com.android.emailcommon.mail.MessagingException from label01 to label18 with label19;
        catch java.lang.Throwable from label01 to label18 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    private static void processUploadMessage(android.content.Context, com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, long, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.email.mail.Store r1;
        com.android.emailcommon.provider.Mailbox r2;
        long l0, $l4, $l5;
        boolean z0, z1;
        com.android.emailcommon.provider.EmailContent$Message r3;
        android.net.Uri r4, $r11;
        int $i1, $i2, $i3;
        byte $b6;
        java.lang.String $r5, $r10, $r13, $r18, $r21, $r22, $r25, $r27, $r32, $r35, $r39, $r42;
        java.lang.StringBuilder $r6, $r7, $r8, $r14, $r15, $r16, $r17, $r20, $r23, $r24, $r29, $r30, $r31, $r33, $r36, $r37, $r38, $r40;
        java.lang.Object[] $r9, $r19, $r26, $r28, $r34, $r41;
        android.content.ContentResolver $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.email.mail.Store;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        r3 = staticinvoke <com.android.emailcommon.provider.EmailContent$Message: com.android.emailcommon.provider.EmailContent$Message restoreMessageWithId(android.content.Context,long)>(r0, l0);

        if r3 != null goto label1;

        z1 = 1;

        $r39 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync failed for null message, id=");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r39, $r42, $r41);

        goto label6;

     label1:
        $i1 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i1 != 3 goto label2;

        z1 = 0;

        $r32 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync skipped for mailbox=drafts, id=");

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r32, $r35, $r34);

        goto label6;

     label2:
        $i2 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i2 != 4 goto label3;

        z1 = 0;

        $r25 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync skipped for mailbox=outbox, id=");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r25, $r27, $r28);

        goto label6;

     label3:
        $i3 = r2.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i3 != 6 goto label4;

        z1 = 0;

        $r22 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync skipped for mailbox=trash, id=");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r22, $r21, $r26);

        goto label6;

     label4:
        $l5 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $l4 = r2.<com.android.emailcommon.provider.Mailbox: long mId>;

        $b6 = $l5 cmp $l4;

        if $b6 == 0 goto label5;

        z1 = 0;

        $r13 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync skipped; mailbox changed, id=");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r13, $r18, $r19);

        goto label6;

     label5:
        $r5 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upsync triggered for message id=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r5, $r10, $r9);

        z1 = staticinvoke <com.android.email.service.ImapService: boolean processPendingAppend(android.content.Context,com.android.email.mail.Store,com.android.emailcommon.provider.Mailbox,com.android.emailcommon.provider.EmailContent$Message,boolean)>(r0, r1, r2, r3, z0);

     label6:
        if z1 == 0 goto label7;

        $r11 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri UPDATED_CONTENT_URI>;

        r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r11, l0);

        $r12 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r12.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r4, null, null);

     label7:
        return;
    }

    private static void processPendingDataChange(android.content.Context, com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, boolean, boolean, boolean, boolean, com.android.emailcommon.provider.EmailContent$Message, com.android.emailcommon.provider.EmailContent$Message) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.email.mail.Store r1;
        com.android.emailcommon.provider.Mailbox r2, r5, r41;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        com.android.emailcommon.provider.EmailContent$Message r3, r4;
        com.android.emailcommon.mail.Folder r6, r9;
        com.android.emailcommon.mail.Message r7;
        com.android.emailcommon.mail.Message[] r8, $r18;
        java.lang.String $r10, $r11, $r12, $r13, $r17, $r19, $r20, $r30, $r39;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        com.android.emailcommon.mail.Folder$OpenMode $r14, $r15, $r16;
        com.android.email.service.ImapService$3 $r22;
        com.android.emailcommon.mail.Flag $r23;
        com.android.emailcommon.mail.Flag[] $r24, $r25, $r27;
        java.lang.StringBuilder $r26, $r28, $r29, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        long $l4, $l6;
        java.lang.Object[] $r40;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.email.mail.Store;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        z2 := @parameter5: boolean;

        z3 := @parameter6: boolean;

        r3 := @parameter7: com.android.emailcommon.provider.EmailContent$Message;

        r4 := @parameter8: com.android.emailcommon.provider.EmailContent$Message;

        r5 = r2;

        r41 = staticinvoke <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox getRemoteMailboxForMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r3);

        $r10 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        if $r10 == null goto label01;

        $r11 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 != 0 goto label01;

        $r12 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        $z5 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("Local-");

        if $z5 != 0 goto label01;

        if r41 != null goto label02;

     label01:
        return;

     label02:
        $i1 = r41.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i1 == 3 goto label03;

        $i0 = r41.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i0 != 4 goto label04;

     label03:
        return;

     label04:
        $r13 = r41.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r6 = virtualinvoke r1.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r13);

        $z6 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z6 != 0 goto label05;

        return;

     label05:
        $r14 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r14);

        $r16 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>();

        $r15 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        if $r16 == $r15 goto label06;

        return;

     label06:
        $r17 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        r7 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>($r17);

        if r7 != null goto label07;

        return;

     label07:
        $z7 = <com.android.email2.ui.MailActivityEmail: boolean DEBUG>;

        if $z7 == 0 goto label10;

        $r30 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update for msg id=");

        $l4 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" read=");

        $z12 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead>;

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z12);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" flagged=");

        $z13 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagFavorite>;

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z13);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" answered=");

        $i5 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i7 = $i5 & 262144;

        if $i7 == 0 goto label08;

        $z14 = 1;

        goto label09;

     label08:
        $z14 = 0;

     label09:
        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new mailbox=");

        $l6 = r4.<com.android.emailcommon.provider.EmailContent$Message: long mMailboxKey>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r40 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r30, $r39, $r40);

     label10:
        $r18 = newarray (com.android.emailcommon.mail.Message)[1];

        $r18[0] = r7;

        r8 = $r18;

        if z0 == 0 goto label11;

        $r25 = <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_SEEN>;

        $z11 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagRead>;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void setFlags(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Flag[],boolean)>(r8, $r25, $z11);

     label11:
        if z1 == 0 goto label12;

        $r27 = <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_FLAGGED>;

        $z10 = r4.<com.android.emailcommon.provider.EmailContent$Message: boolean mFlagFavorite>;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void setFlags(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Flag[],boolean)>(r8, $r27, $z10);

     label12:
        if z3 == 0 goto label15;

        $r24 = <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_ANSWERED>;

        $i2 = r4.<com.android.emailcommon.provider.EmailContent$Message: int mFlags>;

        $i3 = $i2 & 262144;

        if $i3 == 0 goto label13;

        $z9 = 1;

        goto label14;

     label13:
        $z9 = 0;

     label14:
        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void setFlags(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Flag[],boolean)>(r8, $r24, $z9);

     label15:
        if z2 == 0 goto label17;

        $r20 = r5.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r9 = virtualinvoke r1.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r20);

        $z8 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z8 != 0 goto label16;

        return;

     label16:
        $r19 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mMessageId>;

        virtualinvoke r7.<com.android.emailcommon.mail.Message: void setMessageId(java.lang.String)>($r19);

        $r22 = new com.android.email.service.ImapService$3;

        specialinvoke $r22.<com.android.email.service.ImapService$3: void <init>(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r4);

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void copyMessages(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Folder,com.android.emailcommon.mail.Folder$MessageUpdateCallbacks)>(r8, r9, $r22);

        $r23 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag DELETED>;

        virtualinvoke r7.<com.android.emailcommon.mail.Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)>($r23, 1);

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] expunge()>();

     label17:
        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;
    }

    private static void processPendingMoveToTrash(android.content.Context, com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, com.android.emailcommon.provider.EmailContent$Message, com.android.emailcommon.provider.EmailContent$Message) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.email.mail.Store r1;
        com.android.emailcommon.provider.Mailbox r2, r5;
        com.android.emailcommon.provider.EmailContent$Message r3, r4;
        com.android.emailcommon.mail.Folder r6, r8;
        com.android.emailcommon.mail.Message r7;
        java.lang.String $r9, $r10, $r11, $r12, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        com.android.emailcommon.mail.Folder$OpenMode $r13, $r14, $r15, $r20, $r21, $r24;
        com.android.emailcommon.mail.Flag $r19;
        com.android.email.service.ImapService$4 $r22;
        com.android.emailcommon.mail.Folder$FolderType $r23;
        com.android.emailcommon.mail.Message[] $r25;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.email.mail.Store;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        r3 := @parameter3: com.android.emailcommon.provider.EmailContent$Message;

        r4 := @parameter4: com.android.emailcommon.provider.EmailContent$Message;

        $r9 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        if $r9 == null goto label01;

        $r10 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label01;

        $r11 = r4.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        $z1 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("Local-");

        if $z1 == 0 goto label02;

     label01:
        return;

     label02:
        r5 = staticinvoke <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox getRemoteMailboxForMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r3);

        if r5 != null goto label03;

        return;

     label03:
        $i0 = r5.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i0 != 6 goto label04;

        return;

     label04:
        $r12 = r5.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r6 = virtualinvoke r1.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r12);

        $z2 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z2 != 0 goto label05;

        return;

     label05:
        $r13 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r13);

        $r15 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>();

        $r14 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        if $r15 == $r14 goto label06;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

     label06:
        $r16 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        r7 = virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>($r16);

        if r7 != null goto label07;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

     label07:
        $r17 = r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r8 = virtualinvoke r1.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r17);

        $z4 = virtualinvoke r8.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z4 != 0 goto label08;

        $r23 = <com.android.emailcommon.mail.Folder$FolderType: com.android.emailcommon.mail.Folder$FolderType HOLDS_MESSAGES>;

        virtualinvoke r8.<com.android.emailcommon.mail.Folder: boolean create(com.android.emailcommon.mail.Folder$FolderType)>($r23);

     label08:
        $z3 = virtualinvoke r8.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z3 == 0 goto label10;

        $r21 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r8.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r21);

        $r20 = virtualinvoke r8.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>();

        $r24 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        if $r20 == $r24 goto label09;

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        virtualinvoke r8.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

     label09:
        $r25 = newarray (com.android.emailcommon.mail.Message)[1];

        $r25[0] = r7;

        $r22 = new com.android.email.service.ImapService$4;

        specialinvoke $r22.<com.android.email.service.ImapService$4: void <init>(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r4);

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void copyMessages(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.Folder,com.android.emailcommon.mail.Folder$MessageUpdateCallbacks)>($r25, r8, $r22);

        virtualinvoke r8.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

     label10:
        $r19 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag DELETED>;

        virtualinvoke r7.<com.android.emailcommon.mail.Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)>($r19, 1);

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] expunge()>();

        virtualinvoke r6.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;
    }

    private static void processPendingDeleteFromTrash(com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, com.android.emailcommon.provider.EmailContent$Message) throws com.android.emailcommon.mail.MessagingException
    {
        com.android.email.mail.Store r0;
        com.android.emailcommon.provider.Mailbox r1;
        com.android.emailcommon.provider.EmailContent$Message r2;
        com.android.emailcommon.mail.Folder r3;
        com.android.emailcommon.mail.Message r4;
        int $i0;
        java.lang.String $r5, $r9;
        boolean $z0;
        com.android.emailcommon.mail.Folder$OpenMode $r6, $r7, $r8;
        com.android.emailcommon.mail.Flag $r10;

        r0 := @parameter0: com.android.email.mail.Store;

        r1 := @parameter1: com.android.emailcommon.provider.Mailbox;

        r2 := @parameter2: com.android.emailcommon.provider.EmailContent$Message;

        $i0 = r1.<com.android.emailcommon.provider.Mailbox: int mType>;

        if $i0 == 6 goto label1;

        return;

     label1:
        $r5 = r1.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r3 = virtualinvoke r0.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r5);

        $z0 = virtualinvoke r3.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r6 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r6);

        $r7 = virtualinvoke r3.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>();

        $r8 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        if $r7 == $r8 goto label3;

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

     label3:
        $r9 = r2.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        r4 = virtualinvoke r3.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>($r9);

        if r4 != null goto label4;

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;

     label4:
        $r10 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag DELETED>;

        virtualinvoke r4.<com.android.emailcommon.mail.Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)>($r10, 1);

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] expunge()>();

        virtualinvoke r3.<com.android.emailcommon.mail.Folder: void close(boolean)>(0);

        return;
    }

    private static boolean processPendingAppend(android.content.Context, com.android.email.mail.Store, com.android.emailcommon.provider.Mailbox, com.android.emailcommon.provider.EmailContent$Message, boolean) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        com.android.email.mail.Store r1;
        com.android.emailcommon.provider.Mailbox r2;
        com.android.emailcommon.provider.EmailContent$Message r3;
        boolean z0, z1, z2, z3, $z4, $z8;
        com.android.emailcommon.mail.Folder r4;
        com.android.emailcommon.mail.Message r5, r6, r9, r40;
        java.util.Date r7, r8, $r17, $r32, r42;
        java.lang.String $r10, $r15, $r22, $r25, $r27, $r28, $r33, $r34, $r36;
        com.android.emailcommon.mail.Folder$OpenMode $r11, $r12, $r13;
        com.android.emailcommon.mail.FetchProfile $r14, $r19, $r31, r38, r39, r41;
        com.android.emailcommon.mail.FetchProfile$Item $r16, $r20, $r30;
        com.android.emailcommon.mail.Message[] $r18, $r29;
        long $l0, $l1, $l3, $l6;
        android.net.Uri $r21, r44;
        com.android.emailcommon.mail.Flag $r23;
        android.content.ContentValues $r24, r46;
        java.lang.Long $r26;
        int $i5, $i7;
        com.android.emailcommon.mail.Folder$FolderType $r35;
        com.android.emailcommon.mail.MessagingException $r37;
        android.content.ContentResolver r45;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.email.mail.Store;

        r2 := @parameter2: com.android.emailcommon.provider.Mailbox;

        r3 := @parameter3: com.android.emailcommon.provider.EmailContent$Message;

        z0 := @parameter4: boolean;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        $r10 = r2.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r4 = virtualinvoke r1.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r10);

        $z4 = virtualinvoke r4.<com.android.emailcommon.mail.Folder: boolean exists()>();

        if $z4 != 0 goto label01;

        $r35 = <com.android.emailcommon.mail.Folder$FolderType: com.android.emailcommon.mail.Folder$FolderType HOLDS_MESSAGES>;

        $z8 = virtualinvoke r4.<com.android.emailcommon.mail.Folder: boolean create(com.android.emailcommon.mail.Folder$FolderType)>($r35);

        if $z8 != 0 goto label01;

        return 0;

     label01:
        $r11 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r4.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r11);

        $r13 = virtualinvoke r4.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Folder$OpenMode getMode()>();

        $r12 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        if $r13 == $r12 goto label02;

        return 0;

     label02:
        r5 = null;

        $r15 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        if $r15 == null goto label03;

        $r33 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        $i7 = virtualinvoke $r33.<java.lang.String: int length()>();

        if $i7 <= 0 goto label03;

        $r36 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        r5 = virtualinvoke r4.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>($r36);

     label03:
        if r5 != null goto label04;

        r6 = staticinvoke <com.android.email.LegacyConversions: com.android.emailcommon.mail.Message makeMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r3);

        virtualinvoke r4.<com.android.emailcommon.mail.Folder: void appendMessage(android.content.Context,com.android.emailcommon.mail.Message,boolean)>(r0, r6, z0);

        $r34 = virtualinvoke r6.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId> = $r34;

        z1 = 1;

        z2 = 1;

        goto label06;

     label04:
        $r14 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r14.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r38 = $r14;

        $r16 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r38.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r16);

        $r18 = newarray (com.android.emailcommon.mail.Message)[1];

        $r18[0] = r5;

        virtualinvoke r4.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>($r18, r38, null);

        $r17 = new java.util.Date;

        $l0 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mServerTimeStamp>;

        specialinvoke $r17.<java.util.Date: void <init>(long)>($l0);

        r7 = $r17;

        r8 = virtualinvoke r5.<com.android.emailcommon.mail.Message: java.util.Date getInternalDate()>();

        if r8 == null goto label05;

        $i5 = virtualinvoke r8.<java.util.Date: int compareTo(java.util.Date)>(r7);

        if $i5 <= 0 goto label05;

        z3 = 1;

        goto label06;

     label05:
        r9 = staticinvoke <com.android.email.LegacyConversions: com.android.emailcommon.mail.Message makeMessage(android.content.Context,com.android.emailcommon.provider.EmailContent$Message)>(r0, r3);

        virtualinvoke r38.<com.android.emailcommon.mail.FetchProfile: void clear()>();

        $r19 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r19.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r39 = $r19;

        $r20 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item BODY>;

        virtualinvoke r39.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r20);

        virtualinvoke r4.<com.android.emailcommon.mail.Folder: void appendMessage(android.content.Context,com.android.emailcommon.mail.Message,boolean)>(r0, r9, z0);

        $r22 = virtualinvoke r9.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId> = $r22;

        z1 = 1;

        z2 = 1;

        $r23 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag DELETED>;

        virtualinvoke r5.<com.android.emailcommon.mail.Message: void setFlag(com.android.emailcommon.mail.Flag,boolean)>($r23, 1);

     label06:
        if z1 == 0 goto label10;

        $r28 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        if $r28 == null goto label10;

     label07:
        $r27 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        r40 = virtualinvoke r4.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message getMessage(java.lang.String)>($r27);

        if r40 == null goto label08;

        $r31 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r31.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r41 = $r31;

        $r30 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r41.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r30);

        $r29 = newarray (com.android.emailcommon.mail.Message)[1];

        $r29[0] = r40;

        virtualinvoke r4.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>($r29, r41, null);

        r42 = virtualinvoke r40.<com.android.emailcommon.mail.Message: java.util.Date getInternalDate()>();

        if r42 == null goto label08;

        $r32 = virtualinvoke r40.<com.android.emailcommon.mail.Message: java.util.Date getInternalDate()>();

        $l6 = virtualinvoke $r32.<java.util.Date: long getTime()>();

        r3.<com.android.emailcommon.provider.EmailContent$Message: long mServerTimeStamp> = $l6;

        z2 = 1;

     label08:
        goto label10;

     label09:
        $r37 := @caughtexception;

     label10:
        if z3 != 0 goto label11;

        if z2 == 0 goto label13;

     label11:
        $r21 = <com.android.emailcommon.provider.EmailContent$Message: android.net.Uri CONTENT_URI>;

        $l1 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mId>;

        r44 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r21, $l1);

        r45 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        if z3 == 0 goto label12;

        virtualinvoke r45.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r44, null, null);

        goto label13;

     label12:
        if z2 == 0 goto label13;

        $r24 = new android.content.ContentValues;

        specialinvoke $r24.<android.content.ContentValues: void <init>()>();

        r46 = $r24;

        $r25 = r3.<com.android.emailcommon.provider.EmailContent$Message: java.lang.String mServerId>;

        virtualinvoke r46.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("syncServerId", $r25);

        $l3 = r3.<com.android.emailcommon.provider.EmailContent$Message: long mServerTimeStamp>;

        $r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        virtualinvoke r46.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("syncServerTimeStamp", $r26);

        virtualinvoke r45.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r44, r46, null, null);

     label13:
        return 1;

        catch com.android.emailcommon.mail.MessagingException from label07 to label08 with label09;
    }

    private static int searchMailboxImpl(android.content.Context, long, com.android.emailcommon.service.SearchParams, long) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        long l0, l1, $l8, $l18, $l21;
        com.android.emailcommon.service.SearchParams r1;
        com.android.emailcommon.provider.Account r2;
        com.android.emailcommon.provider.Mailbox r3, r4;
        android.content.ContentValues r5, $r22;
        com.android.email.mail.Store r6;
        com.android.emailcommon.mail.Folder r7;
        com.android.email.service.ImapService$SortableMessage[] r8;
        com.android.emailcommon.mail.Message[] r9, r10, $r36, r54, r55, r56;
        int i2, i3, i4, i5, i6, i7, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i20, $i22, i23, i24, i25;
        com.android.emailcommon.mail.Message r11, r13, $r47;
        java.util.ArrayList r12, r15, $r31, $r40, $r43, r52;
        java.util.Iterator r14;
        com.android.emailcommon.mail.Part r16;
        java.lang.StringBuilder $r17, $r18, $r19, $r21;
        java.lang.String $r20, $r23, $r27, $r48;
        java.lang.Object[] $r24, $r37;
        java.lang.Integer $r25, $r42;
        com.android.emailcommon.mail.Folder$OpenMode $r26;
        java.lang.Object $r28, $r41;
        java.lang.Long $r29, $r35, $r50;
        java.util.HashMap $r30, $r44;
        com.android.emailcommon.mail.FetchProfile$Item $r32, $r34, $r39;
        com.android.emailcommon.mail.FetchProfile $r33, r53;
        com.android.email.service.ImapService$6 $r38;
        boolean $z3;
        com.android.email.service.ImapService$5 $r45;
        com.android.email.service.ImapService$SortableMessage $r46, $r51;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.emailcommon.service.SearchParams;

        l1 := @parameter3: long;

        r2 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, l0);

        $l8 = r1.<com.android.emailcommon.service.SearchParams: long mMailboxId>;

        r3 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, $l8);

        r4 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, l1);

        if r2 == null goto label01;

        if r3 == null goto label01;

        if r4 != null goto label02;

     label01:
        $r20 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted search for ");

        $r18 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but account or mailbox information was missing");

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r20, $r23, $r24);

        return 0;

     label02:
        $r22 = new android.content.ContentValues;

        specialinvoke $r22.<android.content.ContentValues: void <init>(int)>(2);

        r5 = $r22;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiSyncStatus", $r25);

        virtualinvoke r4.<com.android.emailcommon.provider.Mailbox: int update(android.content.Context,android.content.ContentValues)>(r0, r5);

        r6 = staticinvoke <com.android.email.mail.Store: com.android.email.mail.Store getInstance(com.android.emailcommon.provider.Account,android.content.Context)>(r2, r0);

        $r27 = r3.<com.android.emailcommon.provider.Mailbox: java.lang.String mServerId>;

        r7 = virtualinvoke r6.<com.android.email.mail.Store: com.android.emailcommon.mail.Folder getFolder(java.lang.String)>($r27);

        $r26 = <com.android.emailcommon.mail.Folder$OpenMode: com.android.emailcommon.mail.Folder$OpenMode READ_WRITE>;

        virtualinvoke r7.<com.android.emailcommon.mail.Folder: void open(com.android.emailcommon.mail.Folder$OpenMode)>($r26);

        r8 = newarray (com.android.email.service.ImapService$SortableMessage)[0];

        $i11 = r1.<com.android.emailcommon.service.SearchParams: int mOffset>;

        if $i11 != 0 goto label06;

        r9 = virtualinvoke r7.<com.android.emailcommon.mail.Folder: com.android.emailcommon.mail.Message[] getMessages(com.android.emailcommon.service.SearchParams,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r1, null);

        i2 = lengthof r9;

        if i2 <= 0 goto label05;

        r8 = newarray (com.android.email.service.ImapService$SortableMessage)[i2];

        i3 = 0;

        r10 = r9;

        i4 = lengthof r10;

        i5 = 0;

     label03:
        if i5 >= i4 goto label04;

        r11 = r10[i5];

        $i22 = i3;

        i3 = i3 + 1;

        $r51 = new com.android.email.service.ImapService$SortableMessage;

        $r48 = virtualinvoke r11.<com.android.emailcommon.mail.Message: java.lang.String getUid()>();

        $l21 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r48);

        specialinvoke $r51.<com.android.email.service.ImapService$SortableMessage: void <init>(com.android.emailcommon.mail.Message,long)>(r11, $l21);

        r8[$i22] = $r51;

        i5 = i5 + 1;

        goto label03;

     label04:
        $r45 = new com.android.email.service.ImapService$5;

        specialinvoke $r45.<com.android.email.service.ImapService$5: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r8, $r45);

        $r44 = <com.android.email.service.ImapService: java.util.HashMap sSearchResults>;

        $r50 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r50, r8);

     label05:
        goto label07;

     label06:
        $r30 = <com.android.email.service.ImapService: java.util.HashMap sSearchResults>;

        $r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r28 = virtualinvoke $r30.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r29);

        r8 = (com.android.email.service.ImapService$SortableMessage[]) $r28;

     label07:
        if r8 == null goto label08;

        $i20 = lengthof r8;

        goto label09;

     label08:
        $i20 = 0;

     label09:
        i23 = $i20;

        $i12 = r1.<com.android.emailcommon.service.SearchParams: int mOffset>;

        $i13 = i23 - $i12;

        $i14 = r1.<com.android.emailcommon.service.SearchParams: int mLimit>;

        i24 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i14);

        virtualinvoke r4.<com.android.emailcommon.provider.Mailbox: void updateMessageCount(android.content.Context,int)>(r0, i23);

        if i24 > 0 goto label10;

        return 0;

     label10:
        $r31 = new java.util.ArrayList;

        specialinvoke $r31.<java.util.ArrayList: void <init>()>();

        r52 = $r31;

        i25 = r1.<com.android.emailcommon.service.SearchParams: int mOffset>;

     label11:
        $i16 = r1.<com.android.emailcommon.service.SearchParams: int mOffset>;

        $i15 = i24 + $i16;

        if i25 >= $i15 goto label12;

        $r46 = r8[i25];

        $r47 = staticinvoke <com.android.email.service.ImapService$SortableMessage: com.android.emailcommon.mail.Message access$400(com.android.email.service.ImapService$SortableMessage)>($r46);

        virtualinvoke r52.<java.util.ArrayList: boolean add(java.lang.Object)>($r47);

        i25 = i25 + 1;

        goto label11;

     label12:
        $r33 = new com.android.emailcommon.mail.FetchProfile;

        specialinvoke $r33.<com.android.emailcommon.mail.FetchProfile: void <init>()>();

        r53 = $r33;

        $r32 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item FLAGS>;

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r32);

        $r34 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item ENVELOPE>;

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r34);

        $i17 = virtualinvoke r52.<java.util.ArrayList: int size()>();

        $r36 = newarray (com.android.emailcommon.mail.Message)[$i17];

        $r37 = virtualinvoke r52.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r36);

        r54 = (com.android.emailcommon.mail.Message[]) $r37;

        $r38 = new com.android.email.service.ImapService$6;

        specialinvoke $r38.<com.android.email.service.ImapService$6: void <init>(com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,long,android.content.Context)>(r2, r3, l1, r0);

        virtualinvoke r7.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r54, r53, $r38);

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: void clear()>();

        $r39 = <com.android.emailcommon.mail.FetchProfile$Item: com.android.emailcommon.mail.FetchProfile$Item STRUCTURE>;

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>($r39);

        virtualinvoke r7.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r54, r53, null);

        r55 = newarray (com.android.emailcommon.mail.Message)[1];

        r56 = r54;

        i7 = lengthof r56;

        i6 = 0;

     label13:
        if i6 >= i7 goto label16;

        r13 = r56[i6];

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        r12 = $r43;

        $r40 = new java.util.ArrayList;

        specialinvoke $r40.<java.util.ArrayList: void <init>()>();

        r15 = $r40;

        staticinvoke <com.android.emailcommon.internet.MimeUtility: void collectParts(com.android.emailcommon.mail.Part,java.util.ArrayList,java.util.ArrayList)>(r13, r12, r15);

        r55[0] = r13;

        r14 = virtualinvoke r12.<java.util.ArrayList: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r41 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (com.android.emailcommon.mail.Part) $r41;

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: void clear()>();

        virtualinvoke r53.<com.android.emailcommon.mail.FetchProfile: boolean add(java.lang.Object)>(r16);

        virtualinvoke r7.<com.android.emailcommon.mail.Folder: void fetch(com.android.emailcommon.mail.Message[],com.android.emailcommon.mail.FetchProfile,com.android.emailcommon.mail.Folder$MessageRetrievalListener)>(r55, r53, null);

        goto label14;

     label15:
        staticinvoke <com.android.email.provider.Utilities: void copyOneMessageToProvider(android.content.Context,com.android.emailcommon.mail.Message,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox,int)>(r0, r13, r2, r4, 1);

        i6 = i6 + 1;

        goto label13;

     label16:
        $l18 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l18);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("syncTime", $r35);

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("uiSyncStatus", $r42);

        virtualinvoke r4.<com.android.emailcommon.provider.Mailbox: int update(android.content.Context,android.content.ContentValues)>(r0, r5);

        virtualinvoke r6.<com.android.email.mail.Store: void closeConnections()>();

        return i23;
    }

    static int access$000(android.content.Context, long, com.android.emailcommon.service.SearchParams, long) throws com.android.emailcommon.mail.MessagingException
    {
        android.content.Context r0;
        long l0, l1;
        com.android.emailcommon.service.SearchParams r1;
        int $i2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.emailcommon.service.SearchParams;

        l1 := @parameter3: long;

        $i2 = staticinvoke <com.android.email.service.ImapService: int searchMailboxImpl(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)>(r0, l0, r1, l1);

        return $i2;
    }

    static void <clinit>()
    {
        com.android.emailcommon.mail.Flag[] $r0, $r2, $r4;
        com.android.emailcommon.mail.Flag $r1, $r3, $r5;
        java.util.HashMap $r6;

        <com.android.email.service.ImapService: java.lang.String LOCAL_SERVERID_PREFIX> = "Local-";

        <com.android.email.service.ImapService: long INITIAL_WINDOW_SIZE_INCREASE> = 86400000L;

        <com.android.email.service.ImapService: int LOAD_MORE_MAX_INCREMENT> = 20;

        <com.android.email.service.ImapService: int LOAD_MORE_MIN_INCREMENT> = 10;

        <com.android.email.service.ImapService: int MINIMUM_MESSAGES_TO_SYNC> = 10;

        <com.android.email.service.ImapService: int MAX_MESSAGES_TO_FETCH> = 500;

        <com.android.email.service.ImapService: long FULL_SYNC_INTERVAL_MILLIS> = 14400000L;

        <com.android.email.service.ImapService: long FULL_SYNC_WINDOW_MILLIS> = 604800000L;

        <com.android.email.service.ImapService: long QUICK_SYNC_WINDOW_MILLIS> = 86400000L;

        $r0 = newarray (com.android.emailcommon.mail.Flag)[1];

        $r1 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag SEEN>;

        $r0[0] = $r1;

        <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_SEEN> = $r0;

        $r2 = newarray (com.android.emailcommon.mail.Flag)[1];

        $r3 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag FLAGGED>;

        $r2[0] = $r3;

        <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_FLAGGED> = $r2;

        $r4 = newarray (com.android.emailcommon.mail.Flag)[1];

        $r5 = <com.android.emailcommon.mail.Flag: com.android.emailcommon.mail.Flag ANSWERED>;

        $r4[0] = $r5;

        <com.android.email.service.ImapService: com.android.emailcommon.mail.Flag[] FLAG_LIST_ANSWERED> = $r4;

        <com.android.email.service.ImapService: long mLastSearchAccountKey> = -1L;

        <com.android.email.service.ImapService: java.lang.String mLastSearchServerId> = null;

        <com.android.email.service.ImapService: com.android.emailcommon.provider.Mailbox mLastSearchRemoteMailbox> = null;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        <com.android.email.service.ImapService: java.util.HashMap sSearchResults> = $r6;

        return;
    }
}
