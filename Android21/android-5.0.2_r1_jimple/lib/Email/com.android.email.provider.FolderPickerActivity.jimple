public class com.android.email.provider.FolderPickerActivity extends android.app.Activity implements com.android.email.provider.FolderPickerCallback
{
    private static final java.lang.String TAG;
    public static final java.lang.String MAILBOX_TYPE_EXTRA;
    private long mAccountId;
    private int mMailboxType;
    private com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver;
    private java.lang.String mAccountName;
    private boolean mInSetup;
    private android.app.ProgressDialog mWaitingForFoldersDialog;

    public void <init>()
    {
        com.android.email.provider.FolderPickerActivity r0;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.email.provider.FolderPickerActivity: boolean mInSetup> = 1;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.email.provider.FolderPickerActivity r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        android.net.Uri r3, $r10, $r12;
        int i0, $i1, $i4, $i8, $i9;
        com.android.mail.providers.Account r4;
        java.lang.String r5, $r9, $r11, $r13;
        com.android.emailcommon.provider.Account r7;
        android.os.Parcelable $r8;
        long $l2, $l3, $l5, $l6, l14;
        boolean $z0, $z1, $z2;
        byte $b7;
        java.lang.Object[] $r14, $r15, $r16, $r18;
        java.lang.NumberFormatException $r17;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.Intent getIntent()>();

        r3 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        if r3 == null goto label11;

        r5 = virtualinvoke r3.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("account");

        if r5 != null goto label01;

        $r16 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("FolderPickerActivity", "No account # in Uri?", $r16);

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;

     label01:
        $l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r5);

        r0.<com.android.email.provider.FolderPickerActivity: long mAccountId> = $l3;

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("FolderPickerActivity", "Invalid account # in Uri?", $r18);

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;

     label04:
        $z0 = virtualinvoke r2.<android.content.Intent: boolean hasExtra(java.lang.String)>("mailbox_type");

        if $z0 != 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        r0.<com.android.email.provider.FolderPickerActivity: boolean mInSetup> = $z2;

        $i4 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("mailbox_type", 6);

        r0.<com.android.email.provider.FolderPickerActivity: int mMailboxType> = $i4;

        $l5 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        l14 = staticinvoke <com.android.emailcommon.provider.Mailbox: long findMailboxOfType(android.content.Context,long,int)>(r0, $l5, 6);

        $b7 = l14 cmp -1L;

        if $b7 == 0 goto label07;

        $z1 = r0.<com.android.email.provider.FolderPickerActivity: boolean mInSetup>;

        if $z1 == 0 goto label07;

        $r14 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("FolderPickerActivity", "Trash folder already exists", $r14);

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;

     label07:
        $l6 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        r7 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, $l6);

        if r7 != null goto label08;

        $r15 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("FolderPickerActivity", "No account?", $r15);

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        goto label10;

     label08:
        $r13 = r7.<com.android.emailcommon.provider.Account: java.lang.String mDisplayName>;

        r0.<com.android.email.provider.FolderPickerActivity: java.lang.String mAccountName> = $r13;

        $i9 = r7.<com.android.emailcommon.provider.Account: int mFlags>;

        $i8 = $i9 & 8192;

        if $i8 == 0 goto label09;

        specialinvoke r0.<com.android.email.provider.FolderPickerActivity: void startPickerForAccount()>();

        goto label10;

     label09:
        specialinvoke r0.<com.android.email.provider.FolderPickerActivity: void waitForFolders()>();

     label10:
        goto label13;

     label11:
        $r8 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("picker_ui_account");

        r4 = (com.android.mail.providers.Account) $r8;

        $r9 = virtualinvoke r4.<com.android.mail.providers.Account: java.lang.String getDisplayName()>();

        r0.<com.android.email.provider.FolderPickerActivity: java.lang.String mAccountName> = $r9;

        $r10 = r4.<com.android.mail.providers.Account: android.net.Uri uri>;

        $r11 = virtualinvoke $r10.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r11);

        r0.<com.android.email.provider.FolderPickerActivity: long mAccountId> = $l2;

        $i1 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("picker_mailbox_type", -1);

        r0.<com.android.email.provider.FolderPickerActivity: int mMailboxType> = $i1;

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("picker_header_id", 0);

        if i0 != 0 goto label12;

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;

     label12:
        $r12 = r4.<com.android.mail.providers.Account: android.net.Uri folderListUri>;

        specialinvoke r0.<com.android.email.provider.FolderPickerActivity: void startPicker(android.net.Uri,int)>($r12, i0);

     label13:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
    }

    public void onDestroy()
    {
        com.android.email.provider.FolderPickerActivity r0;
        com.android.email.provider.FolderPickerActivity$AccountObserver $r1, $r5;
        android.app.ProgressDialog $r2, $r3;
        android.content.ContentResolver $r4;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        $r1 = r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver>;

        if $r1 == null goto label1;

        $r4 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.ContentResolver getContentResolver()>();

        $r5 = r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver>;

        virtualinvoke $r4.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r5);

        r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver> = null;

     label1:
        $r2 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        virtualinvoke $r3.<android.app.ProgressDialog: void dismiss()>();

        r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog> = null;

     label2:
        return;
    }

    private void waitForFolders()
    {
        com.android.email.provider.FolderPickerActivity r0;
        android.net.Uri r1, $r9;
        android.app.ProgressDialog $r2, $r3, $r4, $r6;
        java.lang.String $r5;
        com.android.email.provider.FolderPickerActivity$AccountObserver $r7, $r11;
        android.os.Handler $r8;
        long $l0;
        android.content.ContentResolver $r10;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        $r2 = new android.app.ProgressDialog;

        specialinvoke $r2.<android.app.ProgressDialog: void <init>(android.content.Context)>(r0);

        r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog> = $r2;

        $r3 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        virtualinvoke $r3.<android.app.ProgressDialog: void setIndeterminate(boolean)>(1);

        $r4 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        $r5 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: java.lang.String getString(int)>(2131296954);

        virtualinvoke $r4.<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>($r5);

        $r6 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        virtualinvoke $r6.<android.app.ProgressDialog: void show()>();

        $r7 = new com.android.email.provider.FolderPickerActivity$AccountObserver;

        $r8 = new android.os.Handler;

        specialinvoke $r8.<android.os.Handler: void <init>()>();

        specialinvoke $r7.<com.android.email.provider.FolderPickerActivity$AccountObserver: void <init>(com.android.email.provider.FolderPickerActivity,android.content.Context,android.os.Handler)>(r0, r0, $r8);

        r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver> = $r7;

        $r9 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l0 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r9, $l0);

        $r10 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.ContentResolver getContentResolver()>();

        $r11 = r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver>;

        virtualinvoke $r10.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r1, 0, $r11);

        return;
    }

    private void startPickerForAccount()
    {
        com.android.email.provider.FolderPickerActivity r0;
        int i0;
        android.net.Uri r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r7;
        java.lang.String $r4, $r8;
        long $l1;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        i0 = 2131296952;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r4 = <com.android.emailcommon.provider.EmailContent: java.lang.String AUTHORITY>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/uifullfolders/");

        $l1 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r8);

        specialinvoke r0.<com.android.email.provider.FolderPickerActivity: void startPicker(android.net.Uri,int)>(r1, i0);

        return;
    }

    private void startPicker(android.net.Uri, int)
    {
        com.android.email.provider.FolderPickerActivity r0;
        android.net.Uri r1;
        int i0;
        java.lang.String r2, $r5;
        com.android.email.provider.FolderPickerDialog r3, $r6;
        java.lang.Object[] $r4;
        boolean $z0, $z1;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.android.email.provider.FolderPickerActivity: java.lang.String mAccountName>;

        $r4[0] = $r5;

        r2 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: java.lang.String getString(int,java.lang.Object[])>(i0, $r4);

        $r6 = new com.android.email.provider.FolderPickerDialog;

        $z0 = r0.<com.android.email.provider.FolderPickerActivity: boolean mInSetup>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        specialinvoke $r6.<com.android.email.provider.FolderPickerDialog: void <init>(android.content.Context,android.net.Uri,com.android.email.provider.FolderPickerCallback,java.lang.String,boolean)>(r0, r1, r0, r2, $z1);

        r3 = $r6;

        virtualinvoke r3.<com.android.email.provider.FolderPickerDialog: void show()>();

        return;
    }

    public void select(com.android.mail.providers.Folder)
    {
        com.android.email.provider.FolderPickerActivity r0;
        com.android.mail.providers.Folder r1;
        java.lang.String r2;
        java.lang.Long r3;
        android.content.ContentValues r4, $r10;
        com.android.emailcommon.provider.Mailbox r5, r6;
        com.android.emailcommon.provider.Account r7;
        com.android.mail.utils.FolderUri $r8;
        android.net.Uri $r9, $r13, $r14, $r16, $r17, $r21, $r22;
        long $l0, $l2, $l3, $l5, $l6, $l9, $l12;
        int $i1, $i4, $i8;
        java.lang.Integer $r11, $r15, $r19;
        android.content.ContentResolver $r12, $r18, $r20;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        r1 := @parameter0: com.android.mail.providers.Folder;

        $r8 = r1.<com.android.mail.providers.Folder: com.android.mail.utils.FolderUri folderUri>;

        $r9 = $r8.<com.android.mail.utils.FolderUri: android.net.Uri fullUri>;

        r2 = virtualinvoke $r9.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r4 = $r10;

        $l2 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        $i1 = r0.<com.android.email.provider.FolderPickerActivity: int mMailboxType>;

        r5 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxOfType(android.content.Context,long,int)>(r0, $l2, $i1);

        if r5 == null goto label1;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r19);

        $r20 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.ContentResolver getContentResolver()>();

        $r22 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $l12 = r5.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r21 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r22, $l12);

        virtualinvoke $r20.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r21, r4, null, null);

     label1:
        $l3 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        r6 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, $l3);

        if r6 == null goto label2;

        $i4 = r0.<com.android.email.provider.FolderPickerActivity: int mMailboxType>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("type", $r11);

        $r12 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.ContentResolver getContentResolver()>();

        $r14 = <com.android.emailcommon.provider.Mailbox: android.net.Uri CONTENT_URI>;

        $l5 = r6.<com.android.emailcommon.provider.Mailbox: long mId>;

        $r13 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r14, $l5);

        virtualinvoke $r12.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r13, r4, null, null);

        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $l6 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        r7 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long)>(r0, $l6);

        $i8 = r7.<com.android.emailcommon.provider.Account: int mFlags>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("flags", $r15);

        $r18 = virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: android.content.ContentResolver getContentResolver()>();

        $r16 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $l9 = r7.<com.android.emailcommon.provider.Account: long mId>;

        $r17 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r16, $l9);

        virtualinvoke $r18.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r17, r4, null, null);

     label2:
        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;
    }

    public void cancel()
    {
        com.android.email.provider.FolderPickerActivity r0;

        r0 := @this: com.android.email.provider.FolderPickerActivity;

        virtualinvoke r0.<com.android.email.provider.FolderPickerActivity: void finish()>();

        return;
    }

    static long access$000(com.android.email.provider.FolderPickerActivity)
    {
        com.android.email.provider.FolderPickerActivity r0;
        long $l0;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        $l0 = r0.<com.android.email.provider.FolderPickerActivity: long mAccountId>;

        return $l0;
    }

    static com.android.email.provider.FolderPickerActivity$AccountObserver access$100(com.android.email.provider.FolderPickerActivity)
    {
        com.android.email.provider.FolderPickerActivity r0;
        com.android.email.provider.FolderPickerActivity$AccountObserver $r1;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        $r1 = r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver>;

        return $r1;
    }

    static com.android.email.provider.FolderPickerActivity$AccountObserver access$102(com.android.email.provider.FolderPickerActivity, com.android.email.provider.FolderPickerActivity$AccountObserver)
    {
        com.android.email.provider.FolderPickerActivity r0;
        com.android.email.provider.FolderPickerActivity$AccountObserver r1;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        r1 := @parameter1: com.android.email.provider.FolderPickerActivity$AccountObserver;

        r0.<com.android.email.provider.FolderPickerActivity: com.android.email.provider.FolderPickerActivity$AccountObserver mAccountObserver> = r1;

        return r1;
    }

    static android.app.ProgressDialog access$200(com.android.email.provider.FolderPickerActivity)
    {
        com.android.email.provider.FolderPickerActivity r0;
        android.app.ProgressDialog $r1;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        $r1 = r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog>;

        return $r1;
    }

    static android.app.ProgressDialog access$202(com.android.email.provider.FolderPickerActivity, android.app.ProgressDialog)
    {
        com.android.email.provider.FolderPickerActivity r0;
        android.app.ProgressDialog r1;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        r1 := @parameter1: android.app.ProgressDialog;

        r0.<com.android.email.provider.FolderPickerActivity: android.app.ProgressDialog mWaitingForFoldersDialog> = r1;

        return r1;
    }

    static void access$300(com.android.email.provider.FolderPickerActivity)
    {
        com.android.email.provider.FolderPickerActivity r0;

        r0 := @parameter0: com.android.email.provider.FolderPickerActivity;

        specialinvoke r0.<com.android.email.provider.FolderPickerActivity: void startPickerForAccount()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.email.provider.FolderPickerActivity: java.lang.String MAILBOX_TYPE_EXTRA> = "mailbox_type";

        <com.android.email.provider.FolderPickerActivity: java.lang.String TAG> = "FolderPickerActivity";

        return;
    }
}
