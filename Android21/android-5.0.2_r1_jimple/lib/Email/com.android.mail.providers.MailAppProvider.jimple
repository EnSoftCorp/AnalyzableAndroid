public abstract class com.android.mail.providers.MailAppProvider extends android.content.ContentProvider implements android.content.Loader$OnLoadCompleteListener
{
    private static final java.lang.String SHARED_PREFERENCES_NAME;
    private static final java.lang.String ACCOUNT_LIST_KEY;
    private static final java.lang.String LAST_VIEWED_ACCOUNT_KEY;
    private static final java.lang.String LAST_SENT_FROM_ACCOUNT_KEY;
    public static final java.lang.String ADD_ACCOUNT_RESULT_ACCOUNTS_EXTRA;
    private static final java.lang.String LOG_TAG;
    private final java.util.LinkedHashMap mAccountCache;
    private final java.util.Map mCursorLoaderMap;
    private final java.util.Map mAccountsLoaded;
    private android.content.ContentResolver mResolver;
    private static java.lang.String sAuthority;
    private static com.android.mail.providers.MailAppProvider sInstance;
    private android.content.SharedPreferences mSharedPrefs;

    protected abstract java.lang.String getAuthority();

    public abstract java.lang.String getSuggestionAuthority();

    protected abstract android.content.Intent getNoAccountsIntent(android.content.Context);

    public static android.net.Uri getAccountsUri()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        android.net.Uri $r6;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("content://");

        $r2 = <com.android.mail.providers.MailAppProvider: java.lang.String sAuthority>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r5);

        return $r6;
    }

    public static com.android.mail.providers.MailAppProvider getInstance()
    {
        com.android.mail.providers.MailAppProvider $r0;

        $r0 = <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider sInstance>;

        return $r0;
    }

    protected void <init>()
    {
        com.android.mail.providers.MailAppProvider r0;
        java.util.LinkedHashMap $r1;
        java.util.HashMap $r2, $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache> = $r1;

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.android.mail.providers.MailAppProvider: java.util.Map mCursorLoaderMap> = $r2;

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        r0.<com.android.mail.providers.MailAppProvider: java.util.Map mAccountsLoaded> = $r3;

        return;
    }

    public boolean onCreate()
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.res.Resources r1;
        java.lang.String[] r2, r3;
        int i0, i1;
        java.lang.String r4, $r6;
        android.net.Uri r5;
        android.content.Context $r7, $r9;
        android.content.ContentResolver $r8;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r6 = virtualinvoke r0.<com.android.mail.providers.MailAppProvider: java.lang.String getAuthority()>();

        <com.android.mail.providers.MailAppProvider: java.lang.String sAuthority> = $r6;

        <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider sInstance> = r0;

        $r7 = virtualinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.mail.providers.MailAppProvider: android.content.ContentResolver mResolver> = $r8;

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void loadCachedAccountList()>();

        $r9 = virtualinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.Context getContext()>();

        r1 = virtualinvoke $r9.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke r1.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131689472);

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r4);

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void addAccountsForUriAsync(android.net.Uri)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return 1;
    }

    public void shutdown()
    {
        com.android.mail.providers.MailAppProvider r0;
        java.util.Iterator r1;
        android.content.CursorLoader r2;
        java.util.Map $r3, $r5, $r6;
        java.util.Collection $r4;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider sInstance> = null;

        $r3 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mCursorLoaderMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.content.CursorLoader) $r7;

        virtualinvoke r2.<android.content.CursorLoader: void stopLoading()>();

        goto label1;

     label2:
        $r5 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mCursorLoaderMap>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        $r6 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mAccountsLoaded>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        return;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1, $r25;
        java.lang.String[] r2, r4, r6, r15;
        java.lang.String r3, r5, r16, $r28;
        android.os.Bundle r7, $r18;
        com.google.common.collect.ImmutableList r8;
        java.util.LinkedHashMap r9, $r19, $r21;
        java.lang.Throwable r10, $r32;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r11;
        com.android.mail.providers.Account r12;
        android.database.MatrixCursor$RowBuilder r13;
        java.util.Map r14;
        int i0, i1, $i2;
        boolean $z0, $z1, $z2;
        java.util.Collection $r20;
        com.android.mail.utils.MatrixCursorWithExtra $r22, r34;
        java.lang.Object $r23, $r29;
        android.content.ContentResolver $r24;
        java.lang.IllegalStateException $r26;
        java.lang.StringBuilder $r27, $r30, $r31;
        byte $b3;
        java.util.Iterator r35;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 = staticinvoke <com.android.mail.providers.UIProviderValidator: java.lang.String[] validateAccountProjection(java.lang.String[])>(r2);

        $r18 = new android.os.Bundle;

        specialinvoke $r18.<android.os.Bundle: void <init>()>();

        r7 = $r18;

        $z0 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: boolean allAccountsLoaded()>();

        if $z0 == 0 goto label01;

        $b3 = 1;

        goto label02;

     label01:
        $b3 = 0;

     label02:
        virtualinvoke r7.<android.os.Bundle: void putInt(java.lang.String,int)>("accounts_loaded", $b3);

        $r19 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r9 = $r19;

        entermonitor $r19;

     label03:
        $r21 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        $r20 = virtualinvoke $r21.<java.util.LinkedHashMap: java.util.Collection values()>();

        r8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r20);

        exitmonitor r9;

     label04:
        goto label07;

     label05:
        $r32 := @caughtexception;

        r10 = $r32;

        exitmonitor r9;

     label06:
        throw r10;

     label07:
        $r22 = new com.android.mail.utils.MatrixCursorWithExtra;

        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        specialinvoke $r22.<com.android.mail.utils.MatrixCursorWithExtra: void <init>(java.lang.String[],int,android.os.Bundle)>(r6, $i2, r7);

        r34 = $r22;

        r35 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r23 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.android.mail.providers.MailAppProvider$AccountCacheEntry) $r23;

        r12 = r11.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        r13 = virtualinvoke r34.<android.database.MatrixCursor: android.database.MatrixCursor$RowBuilder newRow()>();

        r14 = virtualinvoke r12.<com.android.mail.providers.Account: java.util.Map getValueMap()>();

        r15 = r6;

        i1 = lengthof r15;

        i0 = 0;

     label09:
        if i0 >= i1 goto label12;

        r16 = r15[i0];

        $z2 = interfaceinvoke r14.<java.util.Map: boolean containsKey(java.lang.Object)>(r16);

        if $z2 == 0 goto label10;

        $r29 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        virtualinvoke r13.<android.database.MatrixCursor$RowBuilder: android.database.MatrixCursor$RowBuilder add(java.lang.Object)>($r29);

        goto label11;

     label10:
        $r26 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected column: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r26;

     label11:
        i0 = i0 + 1;

        goto label09;

     label12:
        goto label08;

     label13:
        $r24 = r0.<com.android.mail.providers.MailAppProvider: android.content.ContentResolver mResolver>;

        $r25 = staticinvoke <com.android.mail.providers.MailAppProvider: android.net.Uri getAccountsUri()>();

        virtualinvoke r34.<android.database.MatrixCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r24, $r25);

        return r34;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        return r1;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        return 0;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;
        java.lang.String r2;
        java.lang.String[] r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        return 0;
    }

    public java.lang.String getType(android.net.Uri)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    private void addAccountsForUriAsync(android.net.Uri)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void startAccountsLoader(android.net.Uri)>(r1);

        return;
    }

    public static android.content.Intent getNoAccountIntent(android.content.Context)
    {
        android.content.Context r0;
        com.android.mail.providers.MailAppProvider $r1;
        android.content.Intent $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider getInstance()>();

        $r2 = virtualinvoke $r1.<com.android.mail.providers.MailAppProvider: android.content.Intent getNoAccountsIntent(android.content.Context)>(r0);

        return $r2;
    }

    private synchronized void startAccountsLoader(android.net.Uri)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;
        android.content.CursorLoader r2, r3, $r4;
        android.content.Context $r5;
        java.lang.String[] $r6;
        int $i0;
        java.util.Map $r7, $r9, $r11;
        java.lang.Object $r8;
        java.lang.Boolean $r12;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        $r4 = new android.content.CursorLoader;

        $r5 = virtualinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.Context getContext()>();

        $r6 = <com.android.mail.providers.UIProvider: java.lang.String[] ACCOUNTS_PROJECTION>;

        specialinvoke $r4.<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, r1, $r6, null, null, null);

        r2 = $r4;

        $i0 = virtualinvoke r1.<android.net.Uri: int hashCode()>();

        virtualinvoke r2.<android.content.CursorLoader: void registerListener(int,android.content.Loader$OnLoadCompleteListener)>($i0, r0);

        virtualinvoke r2.<android.content.CursorLoader: void startLoading()>();

        $r7 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mCursorLoaderMap>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.content.CursorLoader) $r8;

        if r3 == null goto label1;

        virtualinvoke r3.<android.content.CursorLoader: void stopLoading()>();

     label1:
        $r9 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mCursorLoaderMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r11 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mAccountsLoaded>;

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r12);

        return;
    }

    private void addAccountImpl(com.android.mail.providers.Account, android.net.Uri, boolean)
    {
        com.android.mail.providers.MailAppProvider r0;
        com.android.mail.providers.Account r1;
        android.net.Uri r2, $r4;
        boolean z0;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: com.android.mail.providers.Account;

        r2 := @parameter1: android.net.Uri;

        z0 := @parameter2: boolean;

        $r4 = r1.<com.android.mail.providers.Account: android.net.Uri uri>;

        $r3 = new com.android.mail.providers.MailAppProvider$AccountCacheEntry;

        specialinvoke $r3.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: void <init>(com.android.mail.providers.Account,android.net.Uri)>(r1, r2);

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void addAccountImpl(android.net.Uri,com.android.mail.providers.MailAppProvider$AccountCacheEntry)>($r4, $r3);

        if z0 == 0 goto label1;

        staticinvoke <com.android.mail.providers.MailAppProvider: void broadcastAccountChange()>();

     label1:
        return;
    }

    private void addAccountImpl(android.net.Uri, com.android.mail.providers.MailAppProvider$AccountCacheEntry)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.net.Uri r1;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r2;
        java.util.LinkedHashMap r3, $r5, $r9;
        java.lang.Throwable r4, $r11;
        java.lang.Object[] $r6;
        com.android.mail.providers.Account $r7;
        java.lang.String $r8;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: com.android.mail.providers.MailAppProvider$AccountCacheEntry;

        $r5 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r8 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r2.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        $r6[0] = $r7;

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "adding account %s", $r6);

        $r9 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        virtualinvoke $r9.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static void broadcastAccountChange()
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.ContentResolver $r1;
        android.net.Uri $r2;

        r0 = <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider sInstance>;

        if r0 == null goto label1;

        $r1 = r0.<com.android.mail.providers.MailAppProvider: android.content.ContentResolver mResolver>;

        $r2 = staticinvoke <com.android.mail.providers.MailAppProvider: android.net.Uri getAccountsUri()>();

        virtualinvoke $r1.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>($r2, null);

     label1:
        return;
    }

    public java.lang.String getLastViewedAccount()
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r1 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("lastViewedAccount", null);

        return $r2;
    }

    public void setLastViewedAccount(java.lang.String)
    {
        com.android.mail.providers.MailAppProvider r0;
        java.lang.String r1;
        android.content.SharedPreferences$Editor r2;
        android.content.SharedPreferences $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        r2 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("lastViewedAccount", r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public java.lang.String getLastSentFromAccount()
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r1 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("lastSendFromAccount", null);

        return $r2;
    }

    public void setLastSentFromAccount(java.lang.String)
    {
        com.android.mail.providers.MailAppProvider r0;
        java.lang.String r1;
        android.content.SharedPreferences$Editor r2;
        android.content.SharedPreferences $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: java.lang.String;

        $r3 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        r2 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("lastSendFromAccount", r1);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void loadCachedAccountList()
    {
        com.android.mail.providers.MailAppProvider r0;
        org.json.JSONArray r1, $r19;
        java.lang.String r2, $r13, $r15, $r17, $r22, $r23;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r3, $r7;
        com.android.mail.providers.Account r4, $r9;
        android.content.ContentProviderClient r5;
        android.content.SharedPreferences $r6;
        int $i0, i5;
        org.json.JSONObject $r8;
        com.android.mail.providers.Settings $r10;
        android.net.Uri $r11, $r16;
        android.content.ContentResolver $r12;
        java.lang.Object[] $r14, $r18, $r20, $r25;
        java.lang.Exception $r21, $r24, r26, r27;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 = null;

     label01:
        $r6 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        r2 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("accountList", null);

        if r2 == null goto label02;

        $r19 = new org.json.JSONArray;

        specialinvoke $r19.<org.json.JSONArray: void <init>(java.lang.String)>(r2);

        r1 = $r19;

     label02:
        goto label04;

     label03:
        $r21 := @caughtexception;

        r26 = $r21;

        $r22 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r22, r26, "ignoring unparsable accounts cache", $r20);

     label04:
        if r1 != null goto label05;

        return;

     label05:
        i5 = 0;

     label06:
        $i0 = virtualinvoke r1.<org.json.JSONArray: int length()>();

        if i5 >= $i0 goto label14;

     label07:
        $r7 = new com.android.mail.providers.MailAppProvider$AccountCacheEntry;

        $r8 = virtualinvoke r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(i5);

        specialinvoke $r7.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: void <init>(org.json.JSONObject)>($r8);

        r3 = $r7;

        $r9 = r3.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        $r10 = $r9.<com.android.mail.providers.Account: com.android.mail.providers.Settings settings>;

        if $r10 != null goto label09;

        $r17 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r17, "Dropping account that doesn\'t specify settings", $r18);

     label08:
        goto label13;

     label09:
        r4 = r3.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        $r12 = r0.<com.android.mail.providers.MailAppProvider: android.content.ContentResolver mResolver>;

        $r11 = r4.<com.android.mail.providers.Account: android.net.Uri uri>;

        r5 = virtualinvoke $r12.<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>($r11);

        if r5 == null goto label10;

        virtualinvoke r5.<android.content.ContentProviderClient: boolean release()>();

        $r16 = r4.<com.android.mail.providers.Account: android.net.Uri uri>;

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void addAccountImpl(android.net.Uri,com.android.mail.providers.MailAppProvider$AccountCacheEntry)>($r16, r3);

        goto label11;

     label10:
        $r13 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r4.<com.android.mail.providers.Account: java.lang.String getEmailAddress()>();

        $r14[0] = $r15;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r13, "Dropping account without provider: %s", $r14);

     label11:
        goto label13;

     label12:
        $r24 := @caughtexception;

        r27 = $r24;

        $r23 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r25 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r23, r27, "Unable to create account object from serialized form", $r25);

     label13:
        i5 = i5 + 1;

        goto label06;

     label14:
        staticinvoke <com.android.mail.providers.MailAppProvider: void broadcastAccountChange()>();

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label11 with label12;
    }

    private void cacheAccountList()
    {
        com.android.mail.providers.MailAppProvider r0;
        com.google.common.collect.ImmutableList r1;
        java.util.LinkedHashMap r2, $r5, $r6;
        java.lang.Throwable r3, $r14;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r4;
        java.util.Collection $r7;
        org.json.JSONArray $r8, r16;
        boolean $z0;
        android.content.SharedPreferences $r9;
        java.lang.String $r11;
        org.json.JSONObject $r12;
        java.lang.Object $r13;
        java.util.Iterator r17;
        android.content.SharedPreferences$Editor r18;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r5 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.util.Collection values()>();

        r1 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r7);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        r3 = $r14;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        $r8 = new org.json.JSONArray;

        specialinvoke $r8.<org.json.JSONArray: void <init>()>();

        r16 = $r8;

        r17 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r13 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.mail.providers.MailAppProvider$AccountCacheEntry) $r13;

        $r12 = virtualinvoke r4.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: org.json.JSONObject toJSONObject()>();

        virtualinvoke r16.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r12);

        goto label6;

     label7:
        $r9 = specialinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences getPreferences()>();

        r18 = interfaceinvoke $r9.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r11 = virtualinvoke r16.<org.json.JSONArray: java.lang.String toString()>();

        interfaceinvoke r18.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("accountList", $r11);

        interfaceinvoke r18.<android.content.SharedPreferences$Editor: void apply()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.content.SharedPreferences getPreferences()
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.SharedPreferences $r1, $r2, $r4;
        android.content.Context $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r1 = r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences mSharedPrefs>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<com.android.mail.providers.MailAppProvider: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("MailAppProvider", 0);

        r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences mSharedPrefs> = $r4;

     label1:
        $r2 = r0.<com.android.mail.providers.MailAppProvider: android.content.SharedPreferences mSharedPrefs>;

        return $r2;
    }

    public static com.android.mail.providers.Account getAccountFromAccountUri(android.net.Uri)
    {
        android.net.Uri r0;
        com.android.mail.providers.MailAppProvider r1;
        java.util.LinkedHashMap r2, $r5, $r6;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r3;
        java.lang.Throwable r4, $r9;
        boolean $z0;
        java.lang.Object $r7;
        com.android.mail.providers.Account $r8;

        r0 := @parameter0: android.net.Uri;

        r1 = staticinvoke <com.android.mail.providers.MailAppProvider: com.android.mail.providers.MailAppProvider getInstance()>();

        if r1 == null goto label7;

        $z0 = specialinvoke r1.<com.android.mail.providers.MailAppProvider: boolean allAccountsLoaded()>();

        if $z0 == 0 goto label7;

        $r5 = r1.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r1.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        $r7 = virtualinvoke $r6.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (com.android.mail.providers.MailAppProvider$AccountCacheEntry) $r7;

        if r3 == null goto label3;

        $r8 = r3.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onLoadComplete(android.content.Loader, android.database.Cursor)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.Loader r1;
        android.database.Cursor r2;
        android.content.CursorLoader r3;
        android.net.Uri r4, r10, $r34, $r37, r48;
        com.google.common.collect.ImmutableList r5;
        java.util.LinkedHashMap r6, r11, $r17, $r18, $r24, $r26, $r32, $r33, r46;
        java.lang.Throwable r7, r12, r13, $r39, $r40, $r42;
        com.android.mail.providers.MailAppProvider$AccountCacheEntry r8;
        com.android.mail.providers.Account r9, $r38;
        java.lang.Object[] $r14, $r27, $r36;
        java.lang.String $r15, $r28, $r41;
        java.lang.Integer $r16;
        int $i0, $i2, $i3;
        java.util.Collection $r19;
        boolean $z0, $z1, $z3, $z5, $z6, z8;
        android.os.Bundle $r20;
        java.util.Map $r22;
        java.lang.Boolean $r23;
        java.lang.Object $r25, $r35;
        com.android.mail.providers.Account$Builder $r29;
        java.util.HashSet r43, r45;
        java.util.Iterator r44, r47;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: android.database.Cursor;

        if r2 != null goto label01;

        $r41 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r36 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r41, "null account cursor returned", $r36);

        return;

     label01:
        $r15 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r14 = newarray (java.lang.Object)[1];

        $i0 = interfaceinvoke r2.<android.database.Cursor: int getCount()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r14[0] = $r16;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r15, "Cursor with %d accounts returned", $r14);

        r3 = (android.content.CursorLoader) r1;

        r4 = virtualinvoke r3.<android.content.CursorLoader: android.net.Uri getUri()>();

        $r18 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r6 = $r18;

        entermonitor $r18;

     label02:
        $r17 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        $r19 = virtualinvoke $r17.<java.util.LinkedHashMap: java.util.Collection values()>();

        r5 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList copyOf(java.util.Collection)>($r19);

        exitmonitor r6;

     label03:
        goto label06;

     label04:
        $r40 := @caughtexception;

        r7 = $r40;

        exitmonitor r6;

     label05:
        throw r7;

     label06:
        r43 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

        r44 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r35 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.mail.providers.MailAppProvider$AccountCacheEntry) $r35;

        $r34 = r8.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: android.net.Uri mAccountsQueryUri>;

        $z5 = virtualinvoke r4.<android.net.Uri: boolean equals(java.lang.Object)>($r34);

        if $z5 == 0 goto label08;

        $r38 = r8.<com.android.mail.providers.MailAppProvider$AccountCacheEntry: com.android.mail.providers.Account mAccount>;

        $r37 = $r38.<com.android.mail.providers.Account: android.net.Uri uri>;

        interfaceinvoke r43.<java.util.Set: boolean add(java.lang.Object)>($r37);

     label08:
        goto label07;

     label09:
        $r20 = interfaceinvoke r2.<android.database.Cursor: android.os.Bundle getExtras()>();

        $i2 = virtualinvoke $r20.<android.os.Bundle: int getInt(java.lang.String)>("accounts_loaded");

        if $i2 == 0 goto label10;

        $z6 = 1;

        goto label11;

     label10:
        $z6 = 0;

     label11:
        z8 = $z6;

        $r22 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mAccountsLoaded>;

        $r23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z8);

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r23);

        r45 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet()>();

     label12:
        $z1 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label18;

        $r29 = staticinvoke <com.android.mail.providers.Account: com.android.mail.providers.Account$Builder builder()>();

        r9 = virtualinvoke $r29.<com.android.mail.providers.Account$Builder: com.android.mail.providers.Account buildFrom(android.database.Cursor)>(r2);

        r10 = r9.<com.android.mail.providers.Account: android.net.Uri uri>;

        interfaceinvoke r45.<java.util.Set: boolean add(java.lang.Object)>(r10);

        if z8 == 0 goto label17;

        $r33 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r11 = $r33;

        entermonitor $r33;

     label13:
        $r32 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        virtualinvoke $r32.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r10);

        exitmonitor r11;

     label14:
        goto label17;

     label15:
        $r42 := @caughtexception;

        r12 = $r42;

        exitmonitor r11;

     label16:
        throw r12;

     label17:
        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void addAccountImpl(com.android.mail.providers.Account,android.net.Uri,boolean)>(r9, r4, 0);

        goto label12;

     label18:
        interfaceinvoke r43.<java.util.Set: boolean removeAll(java.util.Collection)>(r45);

        $i3 = interfaceinvoke r43.<java.util.Set: int size()>();

        if $i3 <= 0 goto label25;

        if z8 == 0 goto label25;

        $r24 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        r46 = $r24;

        entermonitor $r24;

     label19:
        r47 = interfaceinvoke r43.<java.util.Set: java.util.Iterator iterator()>();

     label20:
        $z3 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label21;

        $r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();

        r48 = (android.net.Uri) $r25;

        $r28 = <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r48;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r28, "Removing account %s", $r27);

        $r26 = r0.<com.android.mail.providers.MailAppProvider: java.util.LinkedHashMap mAccountCache>;

        virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object remove(java.lang.Object)>(r48);

        goto label20;

     label21:
        exitmonitor r46;

     label22:
        goto label25;

     label23:
        $r39 := @caughtexception;

        r13 = $r39;

        exitmonitor r46;

     label24:
        throw r13;

     label25:
        staticinvoke <com.android.mail.providers.MailAppProvider: void broadcastAccountChange()>();

        specialinvoke r0.<com.android.mail.providers.MailAppProvider: void cacheAccountList()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label19 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    private boolean allAccountsLoaded()
    {
        com.android.mail.providers.MailAppProvider r0;
        java.util.Iterator r1;
        java.lang.Boolean r2;
        java.util.Map $r3;
        java.util.Collection $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        $r3 = r0.<com.android.mail.providers.MailAppProvider: java.util.Map mAccountsLoaded>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.Boolean) $r5;

        $z1 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public volatile void onLoadComplete(android.content.Loader, java.lang.Object)
    {
        com.android.mail.providers.MailAppProvider r0;
        android.content.Loader r1;
        java.lang.Object r2;
        android.database.Cursor $r3;

        r0 := @this: com.android.mail.providers.MailAppProvider;

        r1 := @parameter0: android.content.Loader;

        r2 := @parameter1: java.lang.Object;

        $r3 = (android.database.Cursor) r2;

        virtualinvoke r0.<com.android.mail.providers.MailAppProvider: void onLoadComplete(android.content.Loader,android.database.Cursor)>(r1, $r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.android.mail.providers.MailAppProvider: java.lang.String ADD_ACCOUNT_RESULT_ACCOUNTS_EXTRA> = "addAccountResultAccounts";

        <com.android.mail.providers.MailAppProvider: java.lang.String LAST_SENT_FROM_ACCOUNT_KEY> = "lastSendFromAccount";

        <com.android.mail.providers.MailAppProvider: java.lang.String LAST_VIEWED_ACCOUNT_KEY> = "lastViewedAccount";

        <com.android.mail.providers.MailAppProvider: java.lang.String ACCOUNT_LIST_KEY> = "accountList";

        <com.android.mail.providers.MailAppProvider: java.lang.String SHARED_PREFERENCES_NAME> = "MailAppProvider";

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.providers.MailAppProvider: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
