public final class com.google.common.collect.HashMultimap extends com.google.common.collect.AbstractSetMultimap
{
    private static final int DEFAULT_VALUES_PER_KEY;
    transient int expectedValuesPerKey;
    private static final long serialVersionUID;

    public static com.google.common.collect.HashMultimap create()
    {
        com.google.common.collect.HashMultimap $r0;

        $r0 = new com.google.common.collect.HashMultimap;

        specialinvoke $r0.<com.google.common.collect.HashMultimap: void <init>()>();

        return $r0;
    }

    public static com.google.common.collect.HashMultimap create(int, int)
    {
        int i0, i1;
        com.google.common.collect.HashMultimap $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new com.google.common.collect.HashMultimap;

        specialinvoke $r0.<com.google.common.collect.HashMultimap: void <init>(int,int)>(i0, i1);

        return $r0;
    }

    public static com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap)
    {
        com.google.common.collect.Multimap r0;
        com.google.common.collect.HashMultimap $r1;

        r0 := @parameter0: com.google.common.collect.Multimap;

        $r1 = new com.google.common.collect.HashMultimap;

        specialinvoke $r1.<com.google.common.collect.HashMultimap: void <init>(com.google.common.collect.Multimap)>(r0);

        return $r1;
    }

    private void <init>()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.HashMap $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: void <init>(java.util.Map)>($r1);

        r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey> = 8;

        return;
    }

    private void <init>(int, int)
    {
        com.google.common.collect.HashMultimap r0;
        int i0, i1;
        java.util.HashMap $r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(i0);

        specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: void <init>(java.util.Map)>($r1);

        r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey> = 8;

        if i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey> = i1;

        return;
    }

    private void <init>(com.google.common.collect.Multimap)
    {
        com.google.common.collect.HashMultimap r0;
        com.google.common.collect.Multimap r1;
        java.util.Set $r2;
        int $i0;
        java.util.HashMap $r3;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: com.google.common.collect.Multimap;

        $r2 = interfaceinvoke r1.<com.google.common.collect.Multimap: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>($i0);

        specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: void <init>(java.util.Map)>($r3);

        r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey> = 8;

        virtualinvoke r0.<com.google.common.collect.HashMultimap: boolean putAll(com.google.common.collect.Multimap)>(r1);

        return;
    }

    java.util.Set createCollection()
    {
        com.google.common.collect.HashMultimap r0;
        int $i0;
        java.util.HashSet $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $i0 = r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey>;

        $r1 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSetWithExpectedSize(int)>($i0);

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.google.common.collect.HashMultimap r0;
        java.io.ObjectOutputStream r1;
        int $i0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey>;

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        staticinvoke <com.google.common.collect.Serialization: void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream)>(r0, r1);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        com.google.common.collect.HashMultimap r0;
        java.io.ObjectInputStream r1;
        int i0, $i1;
        java.util.HashMap r2;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r1.<java.io.ObjectInputStream: void defaultReadObject()>();

        $i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        r0.<com.google.common.collect.HashMultimap: int expectedValuesPerKey> = $i1;

        i0 = staticinvoke <com.google.common.collect.Serialization: int readCount(java.io.ObjectInputStream)>(r1);

        r2 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMapWithExpectedSize(int)>(i0);

        virtualinvoke r0.<com.google.common.collect.HashMultimap: void setMap(java.util.Map)>(r2);

        staticinvoke <com.google.common.collect.Serialization: void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(r0, r1, i0);

        return;
    }

    public volatile boolean equals(java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean put(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean put(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public volatile java.util.Map asMap()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.Map $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Map asMap()>();

        return $r1;
    }

    public volatile java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        java.util.Set $r3;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $r3 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set replaceValues(java.lang.Object,java.lang.Iterable)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Set removeAll(java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set removeAll(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Set entries()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set entries()>();

        return $r1;
    }

    public volatile java.util.Set get(java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        java.util.Set $r2;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.String toString()
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.lang.String toString()>();

        return $r1;
    }

    public volatile int hashCode()
    {
        com.google.common.collect.HashMultimap r0;
        int $i0;

        r0 := @this: com.google.common.collect.HashMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: int hashCode()>();

        return $i0;
    }

    public volatile java.util.Collection values()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.Collection $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Collection values()>();

        return $r1;
    }

    public volatile com.google.common.collect.Multiset keys()
    {
        com.google.common.collect.HashMultimap r0;
        com.google.common.collect.Multiset $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: com.google.common.collect.Multiset keys()>();

        return $r1;
    }

    public volatile java.util.Set keySet()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile void clear()
    {
        com.google.common.collect.HashMultimap r0;

        r0 := @this: com.google.common.collect.HashMultimap;

        specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: void clear()>();

        return;
    }

    public volatile boolean putAll(com.google.common.collect.Multimap)
    {
        com.google.common.collect.HashMultimap r0;
        com.google.common.collect.Multimap r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: com.google.common.collect.Multimap;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean putAll(com.google.common.collect.Multimap)>(r1);

        return $z0;
    }

    public volatile boolean putAll(java.lang.Object, java.lang.Iterable)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        java.lang.Iterable r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Iterable;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(r1, r2);

        return $z0;
    }

    public volatile boolean remove(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean remove(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public volatile boolean containsEntry(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1, r2;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(r1, r2);

        return $z0;
    }

    public volatile boolean containsValue(java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean containsKey(java.lang.Object)
    {
        com.google.common.collect.HashMultimap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean isEmpty()
    {
        com.google.common.collect.HashMultimap r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.HashMultimap;

        $z0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: boolean isEmpty()>();

        return $z0;
    }

    public volatile int size()
    {
        com.google.common.collect.HashMultimap r0;
        int $i0;

        r0 := @this: com.google.common.collect.HashMultimap;

        $i0 = specialinvoke r0.<com.google.common.collect.AbstractSetMultimap: int size()>();

        return $i0;
    }

    volatile java.util.Collection createCollection()
    {
        com.google.common.collect.HashMultimap r0;
        java.util.Set $r1;

        r0 := @this: com.google.common.collect.HashMultimap;

        $r1 = virtualinvoke r0.<com.google.common.collect.HashMultimap: java.util.Set createCollection()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.google.common.collect.HashMultimap: long serialVersionUID> = 0L;

        <com.google.common.collect.HashMultimap: int DEFAULT_VALUES_PER_KEY> = 8;

        return;
    }
}
