final class org.owasp.html.StylingPolicy extends java.lang.Object implements org.owasp.html.AttributePolicy
{
    private final org.owasp.html.CssSchema cssSchema;

    void <init>(org.owasp.html.CssSchema)
    {
        org.owasp.html.StylingPolicy r0;
        org.owasp.html.CssSchema r1;

        r0 := @this: org.owasp.html.StylingPolicy;

        r1 := @parameter0: org.owasp.html.CssSchema;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.StylingPolicy: org.owasp.html.CssSchema cssSchema> = r1;

        return;
    }

    public java.lang.String apply(java.lang.String, java.lang.String, java.lang.String)
    {
        org.owasp.html.StylingPolicy r0;
        java.lang.String r1, r2, r3, $r4;

        r0 := @this: org.owasp.html.StylingPolicy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r3 == null goto label1;

        $r4 = virtualinvoke r0.<org.owasp.html.StylingPolicy: java.lang.String sanitizeCssProperties(java.lang.String)>(r3);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    java.lang.String sanitizeCssProperties(java.lang.String)
    {
        org.owasp.html.StylingPolicy r0;
        java.lang.String r1, $r5;
        java.lang.StringBuilder r2, $r3;
        org.owasp.html.StylingPolicy$1 $r4;
        int $i0;

        r0 := @this: org.owasp.html.StylingPolicy;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        $r4 = new org.owasp.html.StylingPolicy$1;

        specialinvoke $r4.<org.owasp.html.StylingPolicy$1: void <init>(org.owasp.html.StylingPolicy,java.lang.StringBuilder)>(r0, r2);

        staticinvoke <org.owasp.html.CssGrammar: void parsePropertyGroup(java.lang.String,org.owasp.html.CssGrammar$PropertyHandler)>(r1, $r4);

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r5;
    }

    private static boolean isAlphanumericOrSpace(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1, i2;
        char c3, c4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0;

     label1:
        if i2 >= i1 goto label6;

        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        if c3 > 32 goto label2;

        if c3 == 9 goto label5;

        if c3 == 32 goto label5;

        return 0;

     label2:
        c4 = c3 | 32;

        if 48 > c4 goto label3;

        if c4 <= 57 goto label5;

     label3:
        if 97 > c4 goto label4;

        if c4 <= 122 goto label5;

     label4:
        return 0;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        org.owasp.html.StylingPolicy r0, $r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        org.owasp.html.CssSchema $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.owasp.html.StylingPolicy;

        r1 := @parameter0: java.lang.Object;

        if r1 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label1;

        $r6 = r0.<org.owasp.html.StylingPolicy: org.owasp.html.CssSchema cssSchema>;

        $r4 = (org.owasp.html.StylingPolicy) r1;

        $r5 = $r4.<org.owasp.html.StylingPolicy: org.owasp.html.CssSchema cssSchema>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        org.owasp.html.StylingPolicy r0;
        org.owasp.html.CssSchema $r1;
        int $i0;

        r0 := @this: org.owasp.html.StylingPolicy;

        $r1 = r0.<org.owasp.html.StylingPolicy: org.owasp.html.CssSchema cssSchema>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    static org.owasp.html.CssSchema access$000(org.owasp.html.StylingPolicy)
    {
        org.owasp.html.StylingPolicy r0;
        org.owasp.html.CssSchema $r1;

        r0 := @parameter0: org.owasp.html.StylingPolicy;

        $r1 = r0.<org.owasp.html.StylingPolicy: org.owasp.html.CssSchema cssSchema>;

        return $r1;
    }

    static boolean access$100(java.lang.String, int, int)
    {
        java.lang.String r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = staticinvoke <org.owasp.html.StylingPolicy: boolean isAlphanumericOrSpace(java.lang.String,int,int)>(r0, i0, i1);

        return $z0;
    }
}
