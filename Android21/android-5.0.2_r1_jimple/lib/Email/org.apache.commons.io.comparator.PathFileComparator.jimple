public class org.apache.commons.io.comparator.PathFileComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    public static final java.util.Comparator PATH_COMPARATOR;
    public static final java.util.Comparator PATH_REVERSE;
    public static final java.util.Comparator PATH_INSENSITIVE_COMPARATOR;
    public static final java.util.Comparator PATH_INSENSITIVE_REVERSE;
    public static final java.util.Comparator PATH_SYSTEM_COMPARATOR;
    public static final java.util.Comparator PATH_SYSTEM_REVERSE;
    private final org.apache.commons.io.IOCase caseSensitivity;

    public void <init>()
    {
        org.apache.commons.io.comparator.PathFileComparator r0;
        org.apache.commons.io.IOCase $r1;

        r0 := @this: org.apache.commons.io.comparator.PathFileComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        r0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity> = $r1;

        return;
    }

    public void <init>(org.apache.commons.io.IOCase)
    {
        org.apache.commons.io.comparator.PathFileComparator r0;
        org.apache.commons.io.IOCase r1, $r2;

        r0 := @this: org.apache.commons.io.comparator.PathFileComparator;

        r1 := @parameter0: org.apache.commons.io.IOCase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity> = $r2;

        return;
    }

    public int compare(java.io.File, java.io.File)
    {
        org.apache.commons.io.comparator.PathFileComparator r0;
        java.io.File r1, r2;
        org.apache.commons.io.IOCase $r3;
        java.lang.String $r4, $r5;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.PathFileComparator;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        $r3 = r0.<org.apache.commons.io.comparator.PathFileComparator: org.apache.commons.io.IOCase caseSensitivity>;

        $r4 = virtualinvoke r1.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $i0 = virtualinvoke $r3.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r4, $r5);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.commons.io.comparator.PathFileComparator r0;
        java.lang.Object r1, r2;
        java.io.File $r3, $r4;
        int $i0;

        r0 := @this: org.apache.commons.io.comparator.PathFileComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.io.File) r1;

        $r3 = (java.io.File) r2;

        $i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.commons.io.comparator.PathFileComparator $r0, $r3, $r7;
        org.apache.commons.io.comparator.ReverseComparator $r1, $r5, $r9;
        java.util.Comparator $r2, $r6, $r10;
        org.apache.commons.io.IOCase $r4, $r8;

        $r0 = new org.apache.commons.io.comparator.PathFileComparator;

        specialinvoke $r0.<org.apache.commons.io.comparator.PathFileComparator: void <init>()>();

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_COMPARATOR> = $r0;

        $r1 = new org.apache.commons.io.comparator.ReverseComparator;

        $r2 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_COMPARATOR>;

        specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2);

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_REVERSE> = $r1;

        $r3 = new org.apache.commons.io.comparator.PathFileComparator;

        $r4 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;

        specialinvoke $r3.<org.apache.commons.io.comparator.PathFileComparator: void <init>(org.apache.commons.io.IOCase)>($r4);

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_COMPARATOR> = $r3;

        $r5 = new org.apache.commons.io.comparator.ReverseComparator;

        $r6 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_COMPARATOR>;

        specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6);

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_INSENSITIVE_REVERSE> = $r5;

        $r7 = new org.apache.commons.io.comparator.PathFileComparator;

        $r8 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;

        specialinvoke $r7.<org.apache.commons.io.comparator.PathFileComparator: void <init>(org.apache.commons.io.IOCase)>($r8);

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_COMPARATOR> = $r7;

        $r9 = new org.apache.commons.io.comparator.ReverseComparator;

        $r10 = <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_COMPARATOR>;

        specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10);

        <org.apache.commons.io.comparator.PathFileComparator: java.util.Comparator PATH_SYSTEM_REVERSE> = $r9;

        return;
    }
}
