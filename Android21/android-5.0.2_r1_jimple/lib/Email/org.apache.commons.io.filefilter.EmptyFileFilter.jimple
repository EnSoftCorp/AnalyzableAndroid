public class org.apache.commons.io.filefilter.EmptyFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
    public static final org.apache.commons.io.filefilter.IOFileFilter EMPTY;
    public static final org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY;

    protected void <init>()
    {
        org.apache.commons.io.filefilter.EmptyFileFilter r0;

        r0 := @this: org.apache.commons.io.filefilter.EmptyFileFilter;

        specialinvoke r0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        org.apache.commons.io.filefilter.EmptyFileFilter r0;
        java.io.File r1;
        java.io.File[] r2;
        boolean $z0, $z1, $z2;
        long $l0;
        byte $b1;
        int $i2;

        r0 := @this: org.apache.commons.io.filefilter.EmptyFileFilter;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if r2 == null goto label1;

        $i2 = lengthof r2;

        if $i2 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label5;

        $z1 = 1;

        goto label6;

     label5:
        $z1 = 0;

     label6:
        return $z1;
    }

    static void <clinit>()
    {
        org.apache.commons.io.filefilter.EmptyFileFilter $r0;
        org.apache.commons.io.filefilter.NotFileFilter $r1;
        org.apache.commons.io.filefilter.IOFileFilter $r2;

        $r0 = new org.apache.commons.io.filefilter.EmptyFileFilter;

        specialinvoke $r0.<org.apache.commons.io.filefilter.EmptyFileFilter: void <init>()>();

        <org.apache.commons.io.filefilter.EmptyFileFilter: org.apache.commons.io.filefilter.IOFileFilter EMPTY> = $r0;

        $r1 = new org.apache.commons.io.filefilter.NotFileFilter;

        $r2 = <org.apache.commons.io.filefilter.EmptyFileFilter: org.apache.commons.io.filefilter.IOFileFilter EMPTY>;

        specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2);

        <org.apache.commons.io.filefilter.EmptyFileFilter: org.apache.commons.io.filefilter.IOFileFilter NOT_EMPTY> = $r1;

        return;
    }
}
