public class com.android.mail.providers.protos.mock.MockRespondMatrixCursor extends com.android.mail.utils.MatrixCursorWithCachedColumns
{
    private static final java.lang.String LOG_TAG;
    static final java.lang.String MOCK_RESPOND_PREFIX;
    final java.util.List mResultList;

    public void <init>(java.lang.String[], int, java.util.List)
    {
        com.android.mail.providers.protos.mock.MockRespondMatrixCursor r0;
        java.lang.String[] r1;
        int i0;
        java.util.List r2;

        r0 := @this: com.android.mail.providers.protos.mock.MockRespondMatrixCursor;

        r1 := @parameter0: java.lang.String[];

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<com.android.mail.utils.MatrixCursorWithCachedColumns: void <init>(java.lang.String[],int)>(r1, i0);

        r0.<com.android.mail.providers.protos.mock.MockRespondMatrixCursor: java.util.List mResultList> = r2;

        return;
    }

    public android.os.Bundle respond(android.os.Bundle)
    {
        com.android.mail.providers.protos.mock.MockRespondMatrixCursor r0;
        android.os.Bundle r1, r2, $r8;
        int i0, $i1;
        java.util.Map r3;
        java.util.Set r4;
        java.util.Iterator r5;
        java.lang.String r6, $r16;
        java.lang.Object r7, $r11, $r13;
        java.util.List $r9, $r10;
        boolean $z0;
        java.lang.StringBuilder $r12, $r14, $r15;
        java.lang.Object[] $r17;
        android.os.Parcelable $r18;

        r0 := @this: com.android.mail.providers.protos.mock.MockRespondMatrixCursor;

        r1 := @parameter0: android.os.Bundle;

        $r8 = new android.os.Bundle;

        specialinvoke $r8.<android.os.Bundle: void <init>()>();

        r2 = $r8;

        i0 = virtualinvoke r0.<com.android.mail.providers.protos.mock.MockRespondMatrixCursor: int getPosition()>();

        $r9 = r0.<com.android.mail.providers.protos.mock.MockRespondMatrixCursor: java.util.List mResultList>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if i0 < $i1 goto label1;

        $r17 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.String,java.lang.Object[])>("MockProvider", "Unexpected position", $r17);

        return r2;

     label1:
        $r10 = r0.<com.android.mail.providers.protos.mock.MockRespondMatrixCursor: java.util.List mResultList>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.util.Map) $r11;

        r4 = virtualinvoke r1.<android.os.Bundle: java.util.Set keySet()>();

        r5 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("respond_");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        if r7 == null goto label3;

        $r18 = (android.os.Parcelable) r7;

        virtualinvoke r2.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>(r6, $r18);

     label3:
        goto label2;

     label4:
        return r2;
    }

    public static void <clinit>()
    {
        <com.android.mail.providers.protos.mock.MockRespondMatrixCursor: java.lang.String MOCK_RESPOND_PREFIX> = "respond_";

        <com.android.mail.providers.protos.mock.MockRespondMatrixCursor: java.lang.String LOG_TAG> = "MockProvider";

        return;
    }
}
