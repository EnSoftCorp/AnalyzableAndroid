class org.apache.james.mime4j.message.Message$MessageBuilder extends java.lang.Object implements org.apache.james.mime4j.ContentHandler
{
    private java.util.Stack stack;
    final org.apache.james.mime4j.message.Message this$0;

    public void <init>(org.apache.james.mime4j.message.Message)
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.message.Message r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: org.apache.james.mime4j.message.Message;

        r0.<org.apache.james.mime4j.message.Message$MessageBuilder: org.apache.james.mime4j.message.Message this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.Stack;

        specialinvoke $r2.<java.util.Stack: void <init>()>();

        r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack> = $r2;

        return;
    }

    private void expect(java.lang.Class)
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.lang.Class r1, $r12;
        java.util.Stack $r2, $r10;
        java.lang.Object $r3, $r11;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r14, $r16;
        java.lang.String $r7, $r13, $r15;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Internal stack error: Expected \'");

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' found \'");

        $r10 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r11 = virtualinvoke $r10.<java.util.Stack: java.lang.Object peek()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15);

        throw $r4;

     label1:
        return;
    }

    public void startMessage()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.message.Message r1, $r3, $r9;
        java.util.Stack $r2, $r4, $r7, $r10;
        boolean $z0;
        java.lang.Object $r5;
        org.apache.james.mime4j.message.Entity $r6;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        $r2 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $z0 = virtualinvoke $r2.<java.util.Stack: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r9 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: org.apache.james.mime4j.message.Message this$0>;

        virtualinvoke $r10.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r9);

        goto label2;

     label1:
        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Entity");

        $r3 = new org.apache.james.mime4j.message.Message;

        specialinvoke $r3.<org.apache.james.mime4j.message.Message: void <init>()>();

        r1 = $r3;

        $r4 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        $r6 = (org.apache.james.mime4j.message.Entity) $r5;

        virtualinvoke $r6.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>(r1);

        $r7 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void endMessage()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Message");

        $r1 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void startHeader()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.message.Header $r1;
        java.util.Stack $r2;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        $r2 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r1 = new org.apache.james.mime4j.message.Header;

        specialinvoke $r1.<org.apache.james.mime4j.message.Header: void <init>()>();

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>($r1);

        return;
    }

    public void field(java.lang.String)
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.lang.String r1;
        java.util.Stack $r2;
        java.lang.Object $r3;
        org.apache.james.mime4j.message.Header $r4;
        org.apache.james.mime4j.field.Field $r5;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Header");

        $r2 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.james.mime4j.message.Header) $r3;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Field: org.apache.james.mime4j.field.Field parse(java.lang.String)>(r1);

        virtualinvoke $r4.<org.apache.james.mime4j.message.Header: void addField(org.apache.james.mime4j.field.Field)>($r5);

        return;
    }

    public void endHeader()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.message.Header r1;
        java.util.Stack $r2, $r4;
        java.lang.Object $r3, $r5;
        org.apache.james.mime4j.message.Entity $r6;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Header");

        $r2 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object pop()>();

        r1 = (org.apache.james.mime4j.message.Header) $r3;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Entity");

        $r4 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        $r6 = (org.apache.james.mime4j.message.Entity) $r5;

        virtualinvoke $r6.<org.apache.james.mime4j.message.Entity: void setHeader(org.apache.james.mime4j.message.Header)>(r1);

        return;
    }

    public void startMultipart(org.apache.james.mime4j.BodyDescriptor)
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.BodyDescriptor r1;
        org.apache.james.mime4j.message.Entity r2;
        org.apache.james.mime4j.message.Multipart r3, $r6;
        java.util.Stack $r4, $r7;
        java.lang.Object $r5;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: org.apache.james.mime4j.BodyDescriptor;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Entity");

        $r4 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        r2 = (org.apache.james.mime4j.message.Entity) $r5;

        $r6 = new org.apache.james.mime4j.message.Multipart;

        specialinvoke $r6.<org.apache.james.mime4j.message.Multipart: void <init>()>();

        r3 = $r6;

        virtualinvoke r2.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>(r3);

        $r7 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r7.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r3);

        return;
    }

    public void body(org.apache.james.mime4j.BodyDescriptor, java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.BodyDescriptor r1;
        java.io.InputStream r2;
        java.lang.String r3, $r4, $r5, $r6, $r11;
        boolean $z0, $z1, $z2;
        org.apache.james.mime4j.message.MemoryBinaryBody $r7;
        java.util.Stack $r8;
        java.lang.Object $r9;
        org.apache.james.mime4j.message.Entity $r10;
        org.apache.james.mime4j.message.MemoryTextBody $r12;
        org.apache.james.mime4j.decoder.Base64InputStream $r13;
        org.apache.james.mime4j.decoder.QuotedPrintableInputStream $r14;
        org.apache.james.mime4j.message.AbstractBody r15;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: org.apache.james.mime4j.BodyDescriptor;

        r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Entity");

        r3 = virtualinvoke r1.<org.apache.james.mime4j.BodyDescriptor: java.lang.String getTransferEncoding()>();

        $r4 = "base64";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r13 = new org.apache.james.mime4j.decoder.Base64InputStream;

        specialinvoke $r13.<org.apache.james.mime4j.decoder.Base64InputStream: void <init>(java.io.InputStream)>(r2);

        r2 = $r13;

        goto label2;

     label1:
        $r5 = "quoted-printable";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r14 = new org.apache.james.mime4j.decoder.QuotedPrintableInputStream;

        specialinvoke $r14.<org.apache.james.mime4j.decoder.QuotedPrintableInputStream: void <init>(java.io.InputStream)>(r2);

        r2 = $r14;

     label2:
        $r6 = virtualinvoke r1.<org.apache.james.mime4j.BodyDescriptor: java.lang.String getMimeType()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z2 == 0 goto label3;

        $r12 = new org.apache.james.mime4j.message.MemoryTextBody;

        $r11 = virtualinvoke r1.<org.apache.james.mime4j.BodyDescriptor: java.lang.String getCharset()>();

        specialinvoke $r12.<org.apache.james.mime4j.message.MemoryTextBody: void <init>(java.io.InputStream,java.lang.String)>(r2, $r11);

        r15 = $r12;

        goto label4;

     label3:
        $r7 = new org.apache.james.mime4j.message.MemoryBinaryBody;

        specialinvoke $r7.<org.apache.james.mime4j.message.MemoryBinaryBody: void <init>(java.io.InputStream)>(r2);

        r15 = $r7;

     label4:
        $r8 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r9 = virtualinvoke $r8.<java.util.Stack: java.lang.Object peek()>();

        $r10 = (org.apache.james.mime4j.message.Entity) $r9;

        virtualinvoke $r10.<org.apache.james.mime4j.message.Entity: void setBody(org.apache.james.mime4j.message.Body)>(r15);

        return;
    }

    public void endMultipart()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        $r1 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void startBodyPart()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        org.apache.james.mime4j.message.BodyPart r1, $r2;
        java.util.Stack $r3, $r6;
        java.lang.Object $r4;
        org.apache.james.mime4j.message.Multipart $r5;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Multipart");

        $r2 = new org.apache.james.mime4j.message.BodyPart;

        specialinvoke $r2.<org.apache.james.mime4j.message.BodyPart: void <init>()>();

        r1 = $r2;

        $r3 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r4 = virtualinvoke $r3.<java.util.Stack: java.lang.Object peek()>();

        $r5 = (org.apache.james.mime4j.message.Multipart) $r4;

        virtualinvoke $r5.<org.apache.james.mime4j.message.Multipart: void addBodyPart(org.apache.james.mime4j.message.BodyPart)>(r1);

        $r6 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r6.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void endBodyPart()
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.util.Stack $r1;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/BodyPart");

        $r1 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void epilogue(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.io.InputStream r1;
        java.lang.StringBuffer r2, $r3;
        int i0, $i1;
        java.util.Stack $r4;
        java.lang.Object $r5;
        org.apache.james.mime4j.message.Multipart $r6;
        java.lang.String $r7;
        char $c2;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Multipart");

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        i0 = $i1;

        if $i1 == -1 goto label2;

        $c2 = (char) i0;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label1;

     label2:
        $r4 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        $r6 = (org.apache.james.mime4j.message.Multipart) $r5;

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.james.mime4j.message.Multipart: void setEpilogue(java.lang.String)>($r7);

        return;
    }

    public void preamble(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.io.InputStream r1;
        java.lang.StringBuffer r2, $r3;
        int i0, $i1;
        java.util.Stack $r4;
        java.lang.Object $r5;
        org.apache.james.mime4j.message.Multipart $r6;
        java.lang.String $r7;
        char $c2;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<org.apache.james.mime4j.message.Message$MessageBuilder: void expect(java.lang.Class)>(class "org/apache/james/mime4j/message/Multipart");

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        i0 = $i1;

        if $i1 == -1 goto label2;

        $c2 = (char) i0;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label1;

     label2:
        $r4 = r0.<org.apache.james.mime4j.message.Message$MessageBuilder: java.util.Stack stack>;

        $r5 = virtualinvoke $r4.<java.util.Stack: java.lang.Object peek()>();

        $r6 = (org.apache.james.mime4j.message.Multipart) $r5;

        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r6.<org.apache.james.mime4j.message.Multipart: void setPreamble(java.lang.String)>($r7);

        return;
    }

    public void raw(java.io.InputStream) throws java.io.IOException
    {
        org.apache.james.mime4j.message.Message$MessageBuilder r0;
        java.io.InputStream r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.james.mime4j.message.Message$MessageBuilder;

        r1 := @parameter0: java.io.InputStream;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Not supported");

        throw $r2;
    }
}
