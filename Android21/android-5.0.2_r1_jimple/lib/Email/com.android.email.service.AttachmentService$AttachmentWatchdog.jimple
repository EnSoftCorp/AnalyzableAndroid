public class com.android.email.service.AttachmentService$AttachmentWatchdog extends android.content.BroadcastReceiver
{
    private static final int WATCHDOG_CHECK_INTERVAL;
    public static final java.lang.String EXTRA_CALLBACK_TIMEOUT;
    private android.app.PendingIntent mWatchdogPendingIntent;

    public void <init>()
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void setWatchdogAlarm(android.content.Context, long, int)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        android.content.Context r1;
        long l0, $l2, $l3;
        int i1;
        android.content.Intent r2, $r9;
        android.app.PendingIntent $r3, $r5, $r10;
        java.lang.Object $r4;
        java.lang.Object[] $r6;
        java.lang.Long $r7;
        android.app.AlarmManager r11;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: android.app.PendingIntent mWatchdogPendingIntent>;

        if $r3 != null goto label1;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r1, class "com/android/email/service/AttachmentService$AttachmentWatchdog");

        r2 = $r9;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("callback_timeout", i1);

        $r10 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, r2, 0);

        r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: android.app.PendingIntent mWatchdogPendingIntent> = $r10;

     label1:
        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        r11 = (android.app.AlarmManager) $r4;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l3 = $l2 + l0;

        $r5 = r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: android.app.PendingIntent mWatchdogPendingIntent>;

        virtualinvoke r11.<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>(0, $l3, $r5);

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r6[0] = $r7;

        staticinvoke <com.android.email.service.AttachmentService: void access$200(java.lang.String,java.lang.Object[])>("Set up a watchdog for %d millis in the future", $r6);

        return;
    }

    public void setWatchdogAlarm(android.content.Context)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        android.content.Context r1;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: android.content.Context;

        virtualinvoke r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: void setWatchdogAlarm(android.content.Context,long,int)>(r1, 20000L, 30000);

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        android.content.Context r1;
        android.content.Intent r2;
        int i0;
        java.lang.Thread $r3;
        com.android.email.service.AttachmentService$AttachmentWatchdog$1 $r4;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("callback_timeout", 30000);

        $r3 = new java.lang.Thread;

        $r4 = new com.android.email.service.AttachmentService$AttachmentWatchdog$1;

        specialinvoke $r4.<com.android.email.service.AttachmentService$AttachmentWatchdog$1: void <init>(com.android.email.service.AttachmentService$AttachmentWatchdog,int)>(r0, i0);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r4, "AttachmentService AttachmentWatchdog");

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    boolean validateDownloadRequest(com.android.email.service.AttachmentService$DownloadRequest, int, long)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        com.android.email.service.AttachmentService$DownloadRequest r1;
        int i0;
        long l1, l2, $l3, $l4, $l6;
        byte $b5;
        java.lang.Object[] $r2;
        java.lang.Long $r3;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: com.android.email.service.AttachmentService$DownloadRequest;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $l3 = r1.<com.android.email.service.AttachmentService$DownloadRequest: long mLastCallbackTime>;

        l2 = l1 - $l3;

        $l4 = (long) i0;

        $b5 = l2 cmp $l4;

        if $b5 <= 0 goto label1;

        $r2 = newarray (java.lang.Object)[1];

        $l6 = r1.<com.android.email.service.AttachmentService$DownloadRequest: long mAttachmentId>;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);

        $r2[0] = $r3;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>("AttachmentService", "Timeout for DownloadRequest #%d ", $r2);

        return 1;

     label1:
        return 0;
    }

    void watchdogAlarm(com.android.email.service.AttachmentService, int)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        com.android.email.service.AttachmentService r1;
        int i0;
        java.util.Collection r2;
        java.util.Iterator r3;
        com.android.email.service.AttachmentService$DownloadRequest r4;
        boolean z0, $z1, $z2;
        java.lang.Object[] $r5, $r8, $r10;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.lang.Object $r7;
        long $l1, $l2, $l3;
        java.lang.Long $r9, $r11;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: com.android.email.service.AttachmentService;

        i0 := @parameter1: int;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.email.service.AttachmentService: void access$200(java.lang.String,java.lang.Object[])>("Received a timer callback in the watchdog", $r5);

        $r6 = r1.<com.android.email.service.AttachmentService: java.util.concurrent.ConcurrentHashMap mDownloadsInProgress>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.email.service.AttachmentService$DownloadRequest) $r7;

        $r8 = newarray (java.lang.Object)[1];

        $l1 = r4.<com.android.email.service.AttachmentService$DownloadRequest: long mAttachmentId>;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r8[0] = $r9;

        staticinvoke <com.android.email.service.AttachmentService: void access$200(java.lang.String,java.lang.Object[])>("Checking in-progress request with id: %d", $r8);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        z0 = virtualinvoke r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: boolean validateDownloadRequest(com.android.email.service.AttachmentService$DownloadRequest,int,long)>(r4, i0, $l2);

        if z0 == 0 goto label2;

        $r10 = newarray (java.lang.Object)[1];

        $l3 = r4.<com.android.email.service.AttachmentService$DownloadRequest: long mAttachmentId>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r10[0] = $r11;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>("AttachmentService", "Cancelling DownloadRequest #%d", $r10);

        virtualinvoke r1.<com.android.email.service.AttachmentService: void cancelDownload(com.android.email.service.AttachmentService$DownloadRequest)>(r4);

     label2:
        goto label1;

     label3:
        $z2 = virtualinvoke r1.<com.android.email.service.AttachmentService: boolean isConnected()>();

        if $z2 == 0 goto label4;

        virtualinvoke r1.<com.android.email.service.AttachmentService: void processQueue()>();

     label4:
        virtualinvoke r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: void issueNextWatchdogAlarm(com.android.email.service.AttachmentService)>(r1);

        return;
    }

    void issueNextWatchdogAlarm(com.android.email.service.AttachmentService)
    {
        com.android.email.service.AttachmentService$AttachmentWatchdog r0;
        com.android.email.service.AttachmentService r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        boolean $z0;
        java.lang.Object[] $r3;

        r0 := @this: com.android.email.service.AttachmentService$AttachmentWatchdog;

        r1 := @parameter0: com.android.email.service.AttachmentService;

        $r2 = r1.<com.android.email.service.AttachmentService: java.util.concurrent.ConcurrentHashMap mDownloadsInProgress>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.email.service.AttachmentService: void access$200(java.lang.String,java.lang.Object[])>("Rescheduling watchdog...", $r3);

        virtualinvoke r0.<com.android.email.service.AttachmentService$AttachmentWatchdog: void setWatchdogAlarm(android.content.Context)>(r1);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.email.service.AttachmentService$AttachmentWatchdog: java.lang.String EXTRA_CALLBACK_TIMEOUT> = "callback_timeout";

        <com.android.email.service.AttachmentService$AttachmentWatchdog: int WATCHDOG_CHECK_INTERVAL> = 20000;

        return;
    }
}
