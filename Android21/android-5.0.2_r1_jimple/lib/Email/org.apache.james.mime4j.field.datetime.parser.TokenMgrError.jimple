public class org.apache.james.mime4j.field.datetime.parser.TokenMgrError extends java.lang.Error
{
    static final int LEXICAL_ERROR;
    static final int STATIC_LEXER_ERROR;
    static final int INVALID_LEXICAL_STATE;
    static final int LOOP_DETECTED;
    int errorCode;

    protected static final java.lang.String addEscapes(java.lang.String)
    {
        java.lang.String r0, r2, $r4, $r16, $r20, $r22;
        java.lang.StringBuffer r1, $r3;
        char c0, $c3, $c4;
        int i1, $i2, $i5, $i6, $i7;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r19;

        r0 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        i1 = 0;

     label01:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= $i2 goto label15;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        lookupswitch($c3)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\b");

        goto label14;

     label04:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\t");

        goto label14;

     label05:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\n");

        goto label14;

     label06:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\f");

        goto label14;

     label07:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\r");

        goto label14;

     label08:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\"");

        goto label14;

     label09:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\'");

        goto label14;

     label10:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\\\");

        goto label14;

     label11:
        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        c0 = $c4;

        if $c4 < 32 goto label12;

        if c0 <= 126 goto label13;

     label12:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0000");

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(c0, 16);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        r2 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\u");

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        $i7 = $i5 - 4;

        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        $r20 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i7, $i6);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        goto label14;

     label13:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

     label14:
        i1 = i1 + 1;

        goto label01;

     label15:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    protected static java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char)
    {
        boolean z0;
        int i0, i1, i2;
        java.lang.String r0, $r9, $r10, $r15, $r20, $r21;
        char c3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r22;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0 := @parameter4: java.lang.String;

        c3 := @parameter5: char;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Lexical error at line ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".  Encountered: ");

        if z0 == 0 goto label1;

        $r15 = "<EOF> ";

        goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c3);

        $r10 = staticinvoke <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>($r9);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c3);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r18 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after : \"");

        $r20 = staticinvoke <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public java.lang.String getMessage()
    {
        org.apache.james.mime4j.field.datetime.parser.TokenMgrError r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.field.datetime.parser.TokenMgrError;

        $r1 = specialinvoke r0.<java.lang.Error: java.lang.String getMessage()>();

        return $r1;
    }

    public void <init>()
    {
        org.apache.james.mime4j.field.datetime.parser.TokenMgrError r0;

        r0 := @this: org.apache.james.mime4j.field.datetime.parser.TokenMgrError;

        specialinvoke r0.<java.lang.Error: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, int)
    {
        org.apache.james.mime4j.field.datetime.parser.TokenMgrError r0;
        java.lang.String r1;
        int i0;

        r0 := @this: org.apache.james.mime4j.field.datetime.parser.TokenMgrError;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Error: void <init>(java.lang.String)>(r1);

        r0.<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: int errorCode> = i0;

        return;
    }

    public void <init>(boolean, int, int, int, java.lang.String, char, int)
    {
        org.apache.james.mime4j.field.datetime.parser.TokenMgrError r0;
        boolean z0;
        int i0, i1, i2, i4;
        java.lang.String r1, $r2;
        char c3;

        r0 := @this: org.apache.james.mime4j.field.datetime.parser.TokenMgrError;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r1 := @parameter4: java.lang.String;

        c3 := @parameter5: char;

        i4 := @parameter6: int;

        $r2 = staticinvoke <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char)>(z0, i0, i1, i2, r1, c3);

        specialinvoke r0.<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: void <init>(java.lang.String,int)>($r2, i4);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: int LOOP_DETECTED> = 3;

        <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: int INVALID_LEXICAL_STATE> = 2;

        <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: int STATIC_LEXER_ERROR> = 1;

        <org.apache.james.mime4j.field.datetime.parser.TokenMgrError: int LEXICAL_ERROR> = 0;

        return;
    }
}
