final class org.owasp.html.HtmlInputSplitter extends org.owasp.html.AbstractTokenStream
{
    private final java.lang.String input;
    private int offset;
    private boolean inTag;
    private boolean inEscapeExemptBlock;
    private java.lang.String escapeExemptTagName;
    private org.owasp.html.HtmlTextEscapingMode textEscapingMode;
    private org.owasp.html.HtmlToken lastNonIgnorable;

    public void <init>(java.lang.String)
    {
        org.owasp.html.HtmlInputSplitter r0;
        java.lang.String r1;

        r0 := @this: org.owasp.html.HtmlInputSplitter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.owasp.html.AbstractTokenStream: void <init>()>();

        r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName> = null;

        r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken lastNonIgnorable> = null;

        r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input> = r1;

        return;
    }

    protected org.owasp.html.HtmlToken produce()
    {
        org.owasp.html.HtmlInputSplitter r0;
        org.owasp.html.HtmlToken r1;
        java.lang.String r2, $r5;
        boolean $z0, $z1, $z2;
        org.owasp.html.HtmlTokenType $r3, $r6, $r9, $r10;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4;
        org.owasp.html.HtmlTextEscapingMode $r7, $r8, $r11;

        r0 := @this: org.owasp.html.HtmlInputSplitter;

        r1 = specialinvoke r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken parseToken()>();

        if null != r1 goto label1;

        return null;

     label1:
        $z0 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z0 == 0 goto label4;

        $r9 = r1.<org.owasp.html.HtmlToken: org.owasp.html.HtmlTokenType type>;

        $r6 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType SERVERCODE>;

        if $r9 == $r6 goto label9;

        $r11 = r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlTextEscapingMode textEscapingMode>;

        $r8 = <org.owasp.html.HtmlTextEscapingMode: org.owasp.html.HtmlTextEscapingMode RCDATA>;

        if $r11 != $r8 goto label2;

        $r10 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label3;

     label2:
        $r10 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType UNESCAPED>;

     label3:
        r1 = staticinvoke <org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken reclassify(org.owasp.html.HtmlToken,org.owasp.html.HtmlTokenType)>(r1, $r10);

        goto label9;

     label4:
        $r4 = <org.owasp.html.HtmlInputSplitter$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r3 = r1.<org.owasp.html.HtmlToken: org.owasp.html.HtmlTokenType type>;

        $i0 = virtualinvoke $r3.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $i1 = $r4[$i0];

        lookupswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label6;
            default: goto label9;
        };

     label5:
        $i2 = r1.<org.owasp.html.HtmlToken: int start>;

        $i4 = $i2 + 1;

        $i3 = r1.<org.owasp.html.HtmlToken: int end>;

        r2 = specialinvoke r0.<org.owasp.html.HtmlInputSplitter: java.lang.String canonicalName(int,int)>($i4, $i3);

        $z2 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: boolean isTagFollowedByLiteralContent(java.lang.String)>(r2);

        if $z2 == 0 goto label9;

        r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName> = r2;

        $r7 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: org.owasp.html.HtmlTextEscapingMode getModeForTag(java.lang.String)>(r2);

        r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlTextEscapingMode textEscapingMode> = $r7;

        goto label9;

     label6:
        $r5 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName>;

        if null == $r5 goto label7;

        $z1 = 1;

        goto label8;

     label7:
        $z1 = 0;

     label8:
        r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock> = $z1;

        goto label9;

     label9:
        return r1;
    }

    private org.owasp.html.HtmlToken parseToken()
    {
        org.owasp.html.HtmlInputSplitter r0;
        int i0, i1, i2, $i6, $i7, $i8, $i9, $i11, $i12, $i15, $i16, $i18, $i19;
        org.owasp.html.HtmlTokenType r1, $r4;
        char c3, c4, $c5, $c10, $c13, $c14, $c17, $c20, c21, c22, c23, c24;
        java.lang.String $r2, $r3, $r5, $r6, $r8, $r10, $r11, $r16, $r17, $r19, $r20, $r22, $r23, $r24, $r25, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        int[] $r7, $r9;
        org.owasp.html.HtmlTextEscapingMode $r12, $r13;
        org.owasp.html.HtmlInputSplitter$State $r14, $r18, r28;
        java.lang.AssertionError $r15;
        org.owasp.html.HtmlToken $r21, $r26, r29;

        r0 := @this: org.owasp.html.HtmlInputSplitter;

        i0 = r0.<org.owasp.html.HtmlInputSplitter: int offset>;

        $r2 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i0 != i1 goto label01;

        return null;

     label01:
        i2 = i0 + 1;

        $r3 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        c3 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i0);

        $z0 = r0.<org.owasp.html.HtmlInputSplitter: boolean inTag>;

        if $z0 == 0 goto label21;

        if 62 != c3 goto label02;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGEND>;

        r0.<org.owasp.html.HtmlInputSplitter: boolean inTag> = 0;

        goto label79;

     label02:
        if 47 != c3 goto label04;

        if i2 == i1 goto label03;

        $r27 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $c20 = virtualinvoke $r27.<java.lang.String: char charAt(int)>(i2);

        if 62 != $c20 goto label03;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGEND>;

        r0.<org.owasp.html.HtmlInputSplitter: boolean inTag> = 0;

        i2 = i2 + 1;

        goto label79;

     label03:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label79;

     label04:
        if 61 != c3 goto label05;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label79;

     label05:
        if 34 == c3 goto label06;

        if 39 != c3 goto label10;

     label06:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType QSTRING>;

        c4 = c3;

     label07:
        if i2 >= i1 goto label09;

        $r19 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $c14 = virtualinvoke $r19.<java.lang.String: char charAt(int)>(i2);

        if $c14 != c4 goto label08;

        i2 = i2 + 1;

        goto label09;

     label08:
        i2 = i2 + 1;

        goto label07;

     label09:
        goto label79;

     label10:
        $z12 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c3);

        if $z12 != 0 goto label19;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

     label11:
        if i2 >= i1 goto label79;

        $r22 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        c21 = virtualinvoke $r22.<java.lang.String: char charAt(int)>(i2);

        $r21 = r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken lastNonIgnorable>;

        if $r21 == null goto label12;

        $r26 = r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken lastNonIgnorable>;

        $r25 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $z16 = virtualinvoke $r26.<org.owasp.html.HtmlToken: boolean tokenInContextMatches(java.lang.String,java.lang.String)>($r25, "=");

        if $z16 != 0 goto label13;

     label12:
        if 47 != c21 goto label13;

        $i18 = i2 + 1;

        if $i18 >= i1 goto label13;

        $r24 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $i19 = i2 + 1;

        $c17 = virtualinvoke $r24.<java.lang.String: char charAt(int)>($i19);

        if 62 != $c17 goto label13;

        goto label79;

     label13:
        if 62 == c21 goto label79;

        if 61 == c21 goto label79;

        $z14 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c21);

        if $z14 == 0 goto label14;

        goto label79;

     label14:
        if 34 == c21 goto label15;

        if 39 != c21 goto label18;

     label15:
        $i16 = i2 + 1;

        if $i16 >= i1 goto label18;

        $r23 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $i15 = i2 + 1;

        c22 = virtualinvoke $r23.<java.lang.String: char charAt(int)>($i15);

        if c22 < 0 goto label16;

        $z15 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c22);

        if $z15 != 0 goto label17;

     label16:
        if c22 == 62 goto label17;

        if c22 != 47 goto label18;

     label17:
        i2 = i2 + 1;

        goto label79;

     label18:
        i2 = i2 + 1;

        goto label11;

     label19:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType IGNORABLE>;

     label20:
        if i2 >= i1 goto label79;

        $r20 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $c13 = virtualinvoke $r20.<java.lang.String: char charAt(int)>(i2);

        $z13 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c13);

        if $z13 == 0 goto label79;

        i2 = i2 + 1;

        goto label20;

     label21:
        if c3 != 60 goto label78;

        if i2 != i1 goto label22;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label79;

     label22:
        $r6 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        c23 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i2);

        r1 = null;

        r28 = null;

        lookupswitch(c23)
        {
            case 33: goto label24;
            case 37: goto label29;
            case 47: goto label23;
            case 63: goto label27;
            default: goto label30;
        };

     label23:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State SLASH>;

        i2 = i2 + 1;

        goto label33;

     label24:
        $z7 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z7 != 0 goto label25;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State BANG>;

        goto label26;

     label25:
        $r17 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName>;

        $z11 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: boolean allowsEscapingTextSpan(java.lang.String)>($r17);

        if $z11 == 0 goto label26;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State UNESCAPED_LT_BANG>;

     label26:
        i2 = i2 + 1;

        goto label33;

     label27:
        $z1 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z1 != 0 goto label28;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State BOGUS_COMMENT>;

     label28:
        i2 = i2 + 1;

        goto label33;

     label29:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State SERVER_CODE>;

        i2 = i2 + 1;

        goto label33;

     label30:
        $z10 = staticinvoke <org.owasp.html.HtmlInputSplitter: boolean isIdentStart(char)>(c23);

        if $z10 == 0 goto label31;

        $z9 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z9 != 0 goto label31;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State TAGNAME>;

        i2 = i2 + 1;

        goto label33;

     label31:
        if 60 != c23 goto label32;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label33;

     label32:
        i2 = i2 + 1;

     label33:
        if null == r28 goto label77;

     label34:
        if i2 >= i1 goto label70;

        $r8 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        c24 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i2);

        $r9 = <org.owasp.html.HtmlInputSplitter$1: int[] $SwitchMap$org$owasp$html$HtmlInputSplitter$State>;

        $i9 = virtualinvoke r28.<org.owasp.html.HtmlInputSplitter$State: int ordinal()>();

        $i8 = $r9[$i9];

        tableswitch($i8)
        {
            case 1: goto label35;
            case 2: goto label40;
            case 3: goto label43;
            case 4: goto label45;
            case 5: goto label47;
            case 6: goto label48;
            case 7: goto label51;
            case 8: goto label54;
            case 9: goto label55;
            case 10: goto label56;
            case 11: goto label57;
            case 12: goto label59;
            case 13: goto label61;
            case 14: goto label63;
            case 15: goto label64;
            case 16: goto label66;
            case 17: goto label68;
            default: goto label69;
        };

     label35:
        $z3 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c24);

        if $z3 != 0 goto label36;

        if 62 == c24 goto label36;

        if 47 == c24 goto label36;

        if 60 != c24 goto label69;

     label36:
        $z2 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z2 == 0 goto label37;

        $r10 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $i11 = i0 + 1;

        $c10 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i11);

        if 47 != $c10 goto label37;

        $r13 = r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlTextEscapingMode textEscapingMode>;

        $r12 = <org.owasp.html.HtmlTextEscapingMode: org.owasp.html.HtmlTextEscapingMode PLAIN_TEXT>;

        if $r13 == $r12 goto label37;

        $i12 = i0 + 2;

        $r11 = specialinvoke r0.<org.owasp.html.HtmlInputSplitter: java.lang.String canonicalName(int,int)>($i12, i2);

        $r16 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName>;

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z6 == 0 goto label37;

        r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock> = 0;

        r0.<org.owasp.html.HtmlInputSplitter: java.lang.String escapeExemptTagName> = null;

        r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlTextEscapingMode textEscapingMode> = null;

     label37:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGBEGIN>;

        $z5 = r0.<org.owasp.html.HtmlInputSplitter: boolean inEscapeExemptBlock>;

        if $z5 != 0 goto label38;

        $z4 = 1;

        goto label39;

     label38:
        $z4 = 0;

     label39:
        r0.<org.owasp.html.HtmlInputSplitter: boolean inTag> = $z4;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label70;

     label40:
        $z8 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c24);

        if $z8 == 0 goto label41;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State TAGNAME>;

        goto label69;

     label41:
        if 60 != c24 goto label42;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        goto label70;

     label42:
        i2 = i2 + 1;

        goto label70;

     label43:
        if 45 != c24 goto label44;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State BANG_DASH>;

        goto label69;

     label44:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DIRECTIVE>;

        goto label69;

     label45:
        if 45 != c24 goto label46;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT>;

        goto label69;

     label46:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DIRECTIVE>;

        goto label69;

     label47:
        if 45 != c24 goto label69;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT_DASH>;

        goto label69;

     label48:
        if 45 != c24 goto label49;

        $r18 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT_DASH_DASH>;

        goto label50;

     label49:
        $r18 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT_DASH>;

     label50:
        r28 = $r18;

        goto label69;

     label51:
        if 62 != c24 goto label52;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType COMMENT>;

        goto label69;

     label52:
        if 45 != c24 goto label53;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT_DASH_DASH>;

        goto label69;

     label53:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State COMMENT_DASH>;

        goto label69;

     label54:
        if 62 != c24 goto label69;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType DIRECTIVE>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label55:
        if 62 != c24 goto label69;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType QMARKMETA>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label56:
        if 37 != c24 goto label69;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State SERVER_CODE_PCT>;

        goto label69;

     label57:
        if 62 != c24 goto label58;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType SERVERCODE>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label58:
        if 37 == c24 goto label69;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State SERVER_CODE>;

        goto label69;

     label59:
        if 45 != c24 goto label60;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State UNESCAPED_LT_BANG_DASH>;

        goto label69;

     label60:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label61:
        if 45 != c24 goto label62;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State ESCAPING_TEXT_SPAN_DASH_DASH>;

        goto label69;

     label62:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label63:
        if 45 != c24 goto label69;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State ESCAPING_TEXT_SPAN_DASH>;

        goto label69;

     label64:
        if 45 != c24 goto label65;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State ESCAPING_TEXT_SPAN_DASH_DASH>;

        goto label69;

     label65:
        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State ESCAPING_TEXT_SPAN>;

        goto label69;

     label66:
        if 62 != c24 goto label67;

        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        goto label69;

     label67:
        if 45 == c24 goto label69;

        r28 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State ESCAPING_TEXT_SPAN>;

        goto label69;

     label68:
        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("Unexpectedly DONE while lexing HTML token stream");

        throw $r15;

     label69:
        i2 = i2 + 1;

        $r14 = <org.owasp.html.HtmlInputSplitter$State: org.owasp.html.HtmlInputSplitter$State DONE>;

        if $r14 != r28 goto label34;

        goto label70;

     label70:
        if i2 != i1 goto label77;

        $r7 = <org.owasp.html.HtmlInputSplitter$1: int[] $SwitchMap$org$owasp$html$HtmlInputSplitter$State>;

        $i6 = virtualinvoke r28.<org.owasp.html.HtmlInputSplitter$State: int ordinal()>();

        $i7 = $r7[$i6];

        tableswitch($i7)
        {
            case 1: goto label75;
            case 2: goto label76;
            case 3: goto label76;
            case 4: goto label76;
            case 5: goto label73;
            case 6: goto label73;
            case 7: goto label73;
            case 8: goto label74;
            case 9: goto label72;
            case 10: goto label74;
            case 11: goto label74;
            case 12: goto label76;
            case 13: goto label76;
            case 14: goto label76;
            case 15: goto label76;
            case 16: goto label76;
            case 17: goto label71;
            default: goto label76;
        };

     label71:
        goto label77;

     label72:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType QMARKMETA>;

        goto label77;

     label73:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType COMMENT>;

        goto label77;

     label74:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType SERVERCODE>;

        goto label77;

     label75:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGBEGIN>;

        goto label77;

     label76:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

     label77:
        goto label79;

     label78:
        r1 = null;

     label79:
        if null != r1 goto label82;

     label80:
        if i2 >= i1 goto label81;

        $r5 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $c5 = virtualinvoke $r5.<java.lang.String: char charAt(int)>(i2);

        if 60 == $c5 goto label81;

        i2 = i2 + 1;

        goto label80;

     label81:
        r1 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TEXT>;

     label82:
        r0.<org.owasp.html.HtmlInputSplitter: int offset> = i2;

        r29 = staticinvoke <org.owasp.html.HtmlToken: org.owasp.html.HtmlToken instance(int,int,org.owasp.html.HtmlTokenType)>(i0, i2, r1);

        $r4 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType IGNORABLE>;

        if r1 == $r4 goto label83;

        r0.<org.owasp.html.HtmlInputSplitter: org.owasp.html.HtmlToken lastNonIgnorable> = r29;

     label83:
        return r29;
    }

    private java.lang.String canonicalName(int, int)
    {
        org.owasp.html.HtmlInputSplitter r0;
        int i0, i1;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.owasp.html.HtmlInputSplitter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.owasp.html.HtmlInputSplitter: java.lang.String input>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r3 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>($r2);

        return $r3;
    }

    private static boolean isIdentStart(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 < 65 goto label2;

        if c0 > 122 goto label2;

        if c0 <= 90 goto label1;

        if c0 < 97 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    static org.owasp.html.HtmlToken reclassify(org.owasp.html.HtmlToken, org.owasp.html.HtmlTokenType)
    {
        org.owasp.html.HtmlToken r0, $r2;
        org.owasp.html.HtmlTokenType r1;
        int $i0, $i1;

        r0 := @parameter0: org.owasp.html.HtmlToken;

        r1 := @parameter1: org.owasp.html.HtmlTokenType;

        $i1 = r0.<org.owasp.html.HtmlToken: int start>;

        $i0 = r0.<org.owasp.html.HtmlToken: int end>;

        $r2 = staticinvoke <org.owasp.html.HtmlToken: org.owasp.html.HtmlToken instance(int,int,org.owasp.html.HtmlTokenType)>($i1, $i0, r1);

        return $r2;
    }
}
