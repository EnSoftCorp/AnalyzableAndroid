final class org.owasp.html.CssTokens extends java.lang.Object implements java.lang.Iterable
{
    public final java.lang.String normalizedCss;
    public final org.owasp.html.CssTokens$Brackets brackets;
    private final int[] tokenBreaks;
    private final org.owasp.html.CssTokens$TokenType[] tokenTypes;
    private static final int[] ZERO_INTS;
    private static final org.owasp.html.CssTokens$TokenType[] ZERO_TYPES;
    private static final org.owasp.html.CssTokens$Brackets EMPTY_BRACKETS;
    private static final org.owasp.html.CssTokens EMPTY;
    private static final boolean[] IDENT_PART_ASCII;
    private static final int LINE_TERMINATOR_BITMASK;
    private static final int LENGTH_UNIT_TYPE;
    private static final int ANGLE_UNIT_TYPE;
    private static final int TIME_UNIT_TYPE;
    private static final int FREQUENCY_UNIT_TYPE;
    private static final int RESOLUTION_UNIT_TYPE;
    private static final org.owasp.html.Trie UNIT_TRIE;
    private static final boolean[] URL_SAFE;
    private static final char[] HEX_DIGITS;

    public org.owasp.html.CssTokens$TokenIterator start()
    {
        org.owasp.html.CssTokens r0;
        org.owasp.html.CssTokens$TokenIterator $r1;
        org.owasp.html.CssTokens$TokenType[] $r2;
        int $i0;

        r0 := @this: org.owasp.html.CssTokens;

        $r1 = new org.owasp.html.CssTokens$TokenIterator;

        $r2 = r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] tokenTypes>;

        $i0 = lengthof $r2;

        specialinvoke $r1.<org.owasp.html.CssTokens$TokenIterator: void <init>(org.owasp.html.CssTokens,int)>(r0, $i0);

        return $r1;
    }

    public org.owasp.html.CssTokens$TokenIterator iterator()
    {
        org.owasp.html.CssTokens r0;
        org.owasp.html.CssTokens$TokenIterator $r1;

        r0 := @this: org.owasp.html.CssTokens;

        $r1 = virtualinvoke r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenIterator start()>();

        return $r1;
    }

    public static org.owasp.html.CssTokens lex(java.lang.String)
    {
        java.lang.String r0;
        org.owasp.html.CssTokens$Lexer r1, $r2;
        org.owasp.html.CssTokens $r3;

        r0 := @parameter0: java.lang.String;

        $r2 = new org.owasp.html.CssTokens$Lexer;

        specialinvoke $r2.<org.owasp.html.CssTokens$Lexer: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        virtualinvoke r1.<org.owasp.html.CssTokens$Lexer: void lex()>();

        $r3 = virtualinvoke r1.<org.owasp.html.CssTokens$Lexer: org.owasp.html.CssTokens build()>();

        return $r3;
    }

    private void <init>(java.lang.String, org.owasp.html.CssTokens$Brackets, int[], org.owasp.html.CssTokens$TokenType[])
    {
        org.owasp.html.CssTokens r0;
        java.lang.String r1;
        org.owasp.html.CssTokens$Brackets r2;
        int[] r3;
        org.owasp.html.CssTokens$TokenType[] r4;

        r0 := @this: org.owasp.html.CssTokens;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.owasp.html.CssTokens$Brackets;

        r3 := @parameter2: int[];

        r4 := @parameter3: org.owasp.html.CssTokens$TokenType[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.CssTokens: java.lang.String normalizedCss> = r1;

        r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$Brackets brackets> = r2;

        r0.<org.owasp.html.CssTokens: int[] tokenBreaks> = r3;

        r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] tokenTypes> = r4;

        return;
    }

    private static final boolean isIdentPart(int)
    {
        int i0;
        boolean[] $r0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        if i0 < 128 goto label2;

        $z1 = staticinvoke <java.lang.Character: boolean isDefined(int)>(i0);

        if $z1 == 0 goto label1;

        if i0 == 65279 goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $r0 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $z0 = $r0[i0];

     label3:
        return $z0;
    }

    private static final boolean isDecimal(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isLineTerminator(char)
    {
        char c0;
        int $i1, $i2;
        boolean $z0;

        c0 := @parameter0: char;

        if c0 >= 32 goto label1;

        $i1 = 1 << c0;

        $i2 = 13312 & $i1;

        if 0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static int[] expandIfNecessary(int[], int, int)
    {
        int[] r0, r1;
        int i0, i1, i2, i3, $i4, $i5, $i6;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

        i3 = lengthof r0;

        if i3 < i2 goto label1;

        return r0;

     label1:
        $i4 = i3 * 2;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i4);

        $i6 = staticinvoke <java.lang.Math: int max(int,int)>(16, $i5);

        r1 = newarray (int)[$i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    private static int[] truncateOrShare(int[], int)
    {
        int[] r0, r1, $r2;
        int i0, $i1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r2 = <org.owasp.html.CssTokens: int[] ZERO_INTS>;

        return $r2;

     label1:
        $i1 = lengthof r0;

        if i0 != $i1 goto label2;

        return r0;

     label2:
        r1 = newarray (int)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r1, 0, i0);

        return r1;
    }

    static boolean isWellKnownUnit(java.lang.CharSequence, int, int)
    {
        java.lang.CharSequence r0;
        int i0, i1, i2;
        org.owasp.html.Trie r1;
        char c3, $c4, $c5;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != i1 goto label1;

        return 0;

     label1:
        r1 = <org.owasp.html.CssTokens: org.owasp.html.Trie UNIT_TRIE>;

        i2 = i0;

     label2:
        if i2 >= i1 goto label6;

        c3 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        if 65 > c3 goto label3;

        if c3 > 90 goto label3;

        $c4 = c3 | 32;

        $c5 = (char) $c4;

        goto label4;

     label3:
        $c5 = c3;

     label4:
        r1 = virtualinvoke r1.<org.owasp.html.Trie: org.owasp.html.Trie lookup(char)>($c5);

        if r1 != null goto label5;

        return 0;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        $z0 = virtualinvoke r1.<org.owasp.html.Trie: boolean isTerminal()>();

        return $z0;
    }

    static boolean isWellKnownUnit(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean isWellKnownUnit(java.lang.CharSequence,int,int)>(r0, 0, $i0);

        return $z0;
    }

    public volatile java.util.Iterator iterator()
    {
        org.owasp.html.CssTokens r0;
        org.owasp.html.CssTokens$TokenIterator $r1;

        r0 := @this: org.owasp.html.CssTokens;

        $r1 = virtualinvoke r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenIterator iterator()>();

        return $r1;
    }

    static int[] access$000(org.owasp.html.CssTokens)
    {
        org.owasp.html.CssTokens r0;
        int[] $r1;

        r0 := @parameter0: org.owasp.html.CssTokens;

        $r1 = r0.<org.owasp.html.CssTokens: int[] tokenBreaks>;

        return $r1;
    }

    static org.owasp.html.CssTokens$TokenType[] access$100(org.owasp.html.CssTokens)
    {
        org.owasp.html.CssTokens r0;
        org.owasp.html.CssTokens$TokenType[] $r1;

        r0 := @parameter0: org.owasp.html.CssTokens;

        $r1 = r0.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] tokenTypes>;

        return $r1;
    }

    static int[] access$300()
    {
        int[] $r0;

        $r0 = <org.owasp.html.CssTokens: int[] ZERO_INTS>;

        return $r0;
    }

    static int[] access$400(int[], int, int)
    {
        int[] r0, $r1;
        int i0, i1;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.owasp.html.CssTokens: int[] expandIfNecessary(int[],int,int)>(r0, i0, i1);

        return $r1;
    }

    static org.owasp.html.CssTokens access$500()
    {
        org.owasp.html.CssTokens $r0;

        $r0 = <org.owasp.html.CssTokens: org.owasp.html.CssTokens EMPTY>;

        return $r0;
    }

    static int[] access$600(int[], int)
    {
        int[] r0, $r1;
        int i0;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        $r1 = staticinvoke <org.owasp.html.CssTokens: int[] truncateOrShare(int[],int)>(r0, i0);

        return $r1;
    }

    static org.owasp.html.CssTokens$TokenType[] access$700()
    {
        org.owasp.html.CssTokens$TokenType[] $r0;

        $r0 = <org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] ZERO_TYPES>;

        return $r0;
    }

    void <init>(java.lang.String, org.owasp.html.CssTokens$Brackets, int[], org.owasp.html.CssTokens$TokenType[], org.owasp.html.CssTokens$1)
    {
        org.owasp.html.CssTokens r0;
        java.lang.String r1;
        org.owasp.html.CssTokens$Brackets r2;
        int[] r3;
        org.owasp.html.CssTokens$TokenType[] r4;
        org.owasp.html.CssTokens$1 r5;

        r0 := @this: org.owasp.html.CssTokens;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.owasp.html.CssTokens$Brackets;

        r3 := @parameter2: int[];

        r4 := @parameter3: org.owasp.html.CssTokens$TokenType[];

        r5 := @parameter4: org.owasp.html.CssTokens$1;

        specialinvoke r0.<org.owasp.html.CssTokens: void <init>(java.lang.String,org.owasp.html.CssTokens$Brackets,int[],org.owasp.html.CssTokens$TokenType[])>(r1, r2, r3, r4);

        return;
    }

    static boolean access$900(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean isDecimal(char)>(c0);

        return $z0;
    }

    static boolean access$1000(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean isIdentPart(int)>(i0);

        return $z0;
    }

    static boolean access$1100(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <org.owasp.html.CssTokens: boolean isLineTerminator(char)>(c0);

        return $z0;
    }

    static boolean[] access$1200()
    {
        boolean[] $r0;

        $r0 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        return $r0;
    }

    static char[] access$1300()
    {
        char[] $r0;

        $r0 = <org.owasp.html.CssTokens: char[] HEX_DIGITS>;

        return $r0;
    }

    static void <clinit>()
    {
        int i0, i1, i2, i3, i4, i5;
        int[] $r0, $r3, $r6;
        org.owasp.html.CssTokens$TokenType[] $r1, $r5;
        org.owasp.html.CssTokens$Brackets $r2, $r7;
        org.owasp.html.CssTokens $r4;
        boolean[] $r8, $r9, $r10, $r62, $r63, $r64, $r65, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90;
        org.owasp.html.Trie $r11;
        com.google.common.collect.ImmutableMap$Builder $r12, $r14, $r15, $r18, $r19, $r22, $r23, $r25, $r29, $r31, $r32, $r33, $r36, $r38, $r40, $r41, $r44, $r47, $r48, $r50, $r51, $r53, $r55, $r57, $r61, $r67;
        java.lang.Integer $r13, $r16, $r17, $r20, $r21, $r24, $r26, $r27, $r28, $r30, $r34, $r35, $r37, $r39, $r42, $r43, $r45, $r46, $r49, $r52, $r54, $r56, $r58, $r59, $r60;
        com.google.common.collect.ImmutableMap $r66;
        char[] $r78;

        <org.owasp.html.CssTokens: int RESOLUTION_UNIT_TYPE> = 4;

        <org.owasp.html.CssTokens: int FREQUENCY_UNIT_TYPE> = 3;

        <org.owasp.html.CssTokens: int TIME_UNIT_TYPE> = 2;

        <org.owasp.html.CssTokens: int ANGLE_UNIT_TYPE> = 1;

        <org.owasp.html.CssTokens: int LENGTH_UNIT_TYPE> = 0;

        <org.owasp.html.CssTokens: int LINE_TERMINATOR_BITMASK> = 13312;

        $r0 = newarray (int)[0];

        <org.owasp.html.CssTokens: int[] ZERO_INTS> = $r0;

        $r1 = newarray (org.owasp.html.CssTokens$TokenType)[0];

        <org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] ZERO_TYPES> = $r1;

        $r2 = new org.owasp.html.CssTokens$Brackets;

        $r3 = <org.owasp.html.CssTokens: int[] ZERO_INTS>;

        specialinvoke $r2.<org.owasp.html.CssTokens$Brackets: void <init>(int[],org.owasp.html.CssTokens$1)>($r3, null);

        <org.owasp.html.CssTokens: org.owasp.html.CssTokens$Brackets EMPTY_BRACKETS> = $r2;

        $r4 = new org.owasp.html.CssTokens;

        $r7 = <org.owasp.html.CssTokens: org.owasp.html.CssTokens$Brackets EMPTY_BRACKETS>;

        $r6 = <org.owasp.html.CssTokens: int[] ZERO_INTS>;

        $r5 = <org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] ZERO_TYPES>;

        specialinvoke $r4.<org.owasp.html.CssTokens: void <init>(java.lang.String,org.owasp.html.CssTokens$Brackets,int[],org.owasp.html.CssTokens$TokenType[])>("", $r7, $r6, $r5);

        <org.owasp.html.CssTokens: org.owasp.html.CssTokens EMPTY> = $r4;

        $r8 = newarray (boolean)[128];

        <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII> = $r8;

        i0 = 48;

     label01:
        if i0 > 57 goto label02;

        $r86 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $r86[i0] = 1;

        i0 = i0 + 1;

        goto label01;

     label02:
        i1 = 65;

     label03:
        if i1 > 90 goto label04;

        $r87 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $r87[i1] = 1;

        i1 = i1 + 1;

        goto label03;

     label04:
        i2 = 97;

     label05:
        if i2 > 122 goto label06;

        $r88 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $r88[i2] = 1;

        i2 = i2 + 1;

        goto label05;

     label06:
        $r9 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $r9[95] = 1;

        $r10 = <org.owasp.html.CssTokens: boolean[] IDENT_PART_ASCII>;

        $r10[45] = 1;

        $r11 = new org.owasp.html.Trie;

        $r12 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r14 = virtualinvoke $r12.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("em", $r13);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r15 = virtualinvoke $r14.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("ex", $r16);

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r18 = virtualinvoke $r15.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("ch", $r17);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r19 = virtualinvoke $r18.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("rem", $r20);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r22 = virtualinvoke $r19.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("vh", $r21);

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r23 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("vw", $r24);

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r25 = virtualinvoke $r23.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("vmin", $r26);

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r29 = virtualinvoke $r25.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("vmax", $r28);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r32 = virtualinvoke $r29.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("px", $r27);

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r31 = virtualinvoke $r32.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("mm", $r30);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r33 = virtualinvoke $r31.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("cm", $r34);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r36 = virtualinvoke $r33.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("in", $r37);

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r40 = virtualinvoke $r36.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("pt", $r35);

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r38 = virtualinvoke $r40.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("pc", $r39);

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r41 = virtualinvoke $r38.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("deg", $r42);

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r44 = virtualinvoke $r41.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("rad", $r45);

        $r43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r48 = virtualinvoke $r44.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("grad", $r43);

        $r49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r50 = virtualinvoke $r48.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("turn", $r49);

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r47 = virtualinvoke $r50.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("s", $r46);

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $r55 = virtualinvoke $r47.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("ms", $r54);

        $r56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r51 = virtualinvoke $r55.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("hz", $r56);

        $r52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        $r53 = virtualinvoke $r51.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("khz", $r52);

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r61 = virtualinvoke $r53.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("dpi", $r60);

        $r58 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r57 = virtualinvoke $r61.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("dpcm", $r58);

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        $r67 = virtualinvoke $r57.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("dppx", $r59);

        $r66 = virtualinvoke $r67.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r11.<org.owasp.html.Trie: void <init>(java.util.Map)>($r66);

        <org.owasp.html.CssTokens: org.owasp.html.Trie UNIT_TRIE> = $r11;

        $r69 = newarray (boolean)[128];

        <org.owasp.html.CssTokens: boolean[] URL_SAFE> = $r69;

        i3 = 65;

     label07:
        if i3 > 90 goto label08;

        $r89 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r89[i3] = 1;

        i3 = i3 + 1;

        goto label07;

     label08:
        i4 = 97;

     label09:
        if i4 > 122 goto label10;

        $r90 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r90[i4] = 1;

        i4 = i4 + 1;

        goto label09;

     label10:
        i5 = 48;

     label11:
        if i5 > 57 goto label12;

        $r79 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r79[i5] = 1;

        i5 = i5 + 1;

        goto label11;

     label12:
        $r68 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r68[45] = 1;

        $r63 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r63[46] = 1;

        $r62 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r62[95] = 1;

        $r65 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r65[126] = 1;

        $r64 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r64[58] = 1;

        $r76 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r76[47] = 1;

        $r77 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r77[63] = 1;

        $r74 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r74[35] = 1;

        $r75 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r75[91] = 1;

        $r72 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r72[93] = 1;

        $r73 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r73[64] = 1;

        $r70 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r70[33] = 1;

        $r71 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r71[36] = 1;

        $r84 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r84[38] = 1;

        $r85 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r85[43] = 1;

        $r82 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r82[44] = 1;

        $r83 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r83[59] = 1;

        $r80 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r80[61] = 1;

        $r81 = <org.owasp.html.CssTokens: boolean[] URL_SAFE>;

        $r81[37] = 1;

        $r78 = newarray (char)[16];

        $r78[0] = 48;

        $r78[1] = 49;

        $r78[2] = 50;

        $r78[3] = 51;

        $r78[4] = 52;

        $r78[5] = 53;

        $r78[6] = 54;

        $r78[7] = 55;

        $r78[8] = 56;

        $r78[9] = 57;

        $r78[10] = 97;

        $r78[11] = 98;

        $r78[12] = 99;

        $r78[13] = 100;

        $r78[14] = 101;

        $r78[15] = 102;

        <org.owasp.html.CssTokens: char[] HEX_DIGITS> = $r78;

        return;
    }
}
