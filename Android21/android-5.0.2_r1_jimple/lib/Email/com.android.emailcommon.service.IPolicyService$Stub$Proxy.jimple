class com.android.emailcommon.service.IPolicyService$Stub$Proxy extends java.lang.Object implements com.android.emailcommon.service.IPolicyService
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        $r1 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        return "com.android.emailcommon.service.IPolicyService";
    }

    public boolean isActive(com.android.emailcommon.provider.Policy) throws android.os.RemoteException
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        com.android.emailcommon.provider.Policy r1;
        android.os.Parcel r2, r3;
        boolean z0, $z2;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;
        int $i0;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        r1 := @parameter0: com.android.emailcommon.provider.Policy;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.emailcommon.service.IPolicyService");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.emailcommon.provider.Policy: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z0 = $z2;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r6 := @caughtexception;

        r4 = $r6;

     label8:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label9:
        return z0;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setAccountHoldFlag(long, boolean) throws android.os.RemoteException
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        long l0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b1;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.emailcommon.service.IPolicyService");

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>(l0);

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b1);

        $r4 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAccountPolicy(long, com.android.emailcommon.provider.Policy, java.lang.String) throws android.os.RemoteException
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.emailcommon.provider.Policy;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.emailcommon.service.IPolicyService");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        if r1 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.emailcommon.provider.Policy: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAccountPolicy2(long, com.android.emailcommon.provider.Policy, java.lang.String, boolean) throws android.os.RemoteException
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        long l0;
        com.android.emailcommon.provider.Policy r1;
        java.lang.String r2;
        boolean z0;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        byte $b1;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.emailcommon.provider.Policy;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.emailcommon.service.IPolicyService");

        virtualinvoke r3.<android.os.Parcel: void writeLong(long)>(l0);

        if r1 == null goto label2;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<com.android.emailcommon.provider.Policy: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label3;

     label2:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        if z0 == 0 goto label4;

        $b1 = 1;

        goto label5;

     label4:
        $b1 = 0;

     label5:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b1);

        $r6 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r7 := @caughtexception;

        r5 = $r7;

     label8:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void remoteWipe() throws android.os.RemoteException
    {
        com.android.emailcommon.service.IPolicyService$Stub$Proxy r0;
        android.os.Parcel r1;
        java.lang.Throwable r2, $r4;
        android.os.IBinder $r3;

        r0 := @this: com.android.emailcommon.service.IPolicyService$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("com.android.emailcommon.service.IPolicyService");

        $r3 = r0.<com.android.emailcommon.service.IPolicyService$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r3.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r1, null, 1);

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
