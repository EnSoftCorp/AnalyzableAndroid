class com.android.email.NotificationController$NotificationThread extends java.lang.Object implements java.lang.Runnable
{
    private final java.lang.Object mLock;
    private android.os.Looper mLooper;

    public void <init>()
    {
        com.android.email.NotificationController$NotificationThread r0;
        java.lang.Object r1, $r4, $r6, $r8;
        java.lang.Throwable r3, $r10;
        java.lang.Thread $r5;
        android.os.Looper $r7;
        java.lang.InterruptedException $r9;

        r0 := @this: com.android.email.NotificationController$NotificationThread;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.email.NotificationController$NotificationThread: java.lang.Object mLock> = $r4;

        $r5 = new java.lang.Thread;

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)>(null, r0, "EmailNotification");

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        $r6 = r0.<com.android.email.NotificationController$NotificationThread: java.lang.Object mLock>;

        r1 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.email.NotificationController$NotificationThread: android.os.Looper mLooper>;

        if $r7 != null goto label5;

     label2:
        $r8 = r0.<com.android.email.NotificationController$NotificationThread: java.lang.Object mLock>;

        virtualinvoke $r8.<java.lang.Object: void wait()>();

     label3:
        goto label1;

     label4:
        $r9 := @caughtexception;

        goto label1;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void run()
    {
        com.android.email.NotificationController$NotificationThread r0;
        java.lang.Object r1, $r3, $r5;
        java.lang.Throwable r2, $r6;
        android.os.Looper $r4;

        r0 := @this: com.android.email.NotificationController$NotificationThread;

        $r3 = r0.<com.android.email.NotificationController$NotificationThread: java.lang.Object mLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        staticinvoke <android.os.Looper: void prepare()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        r0.<com.android.email.NotificationController$NotificationThread: android.os.Looper mLooper> = $r4;

        $r5 = r0.<com.android.email.NotificationController$NotificationThread: java.lang.Object mLock>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

        staticinvoke <android.os.Looper: void loop()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.os.Looper getLooper()
    {
        com.android.email.NotificationController$NotificationThread r0;
        android.os.Looper $r1;

        r0 := @this: com.android.email.NotificationController$NotificationThread;

        $r1 = r0.<com.android.email.NotificationController$NotificationThread: android.os.Looper mLooper>;

        return $r1;
    }
}
