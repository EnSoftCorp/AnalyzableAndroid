public class com.android.mail.MailIntentService extends android.app.IntentService
{
    private static final java.lang.String LOG_TAG;
    public static final java.lang.String ACTION_RESEND_NOTIFICATIONS;
    public static final java.lang.String ACTION_CLEAR_NEW_MAIL_NOTIFICATIONS;
    public static final java.lang.String ACTION_RESEND_NOTIFICATIONS_WEAR;
    public static final java.lang.String ACTION_BACKUP_DATA_CHANGED;
    public static final java.lang.String ACTION_SEND_SET_NEW_EMAIL_INDICATOR;
    public static final java.lang.String CONVERSATION_EXTRA;

    public void <init>()
    {
        com.android.mail.MailIntentService r0;

        r0 := @this: com.android.mail.MailIntentService;

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>("MailIntentService");

        return;
    }

    protected void <init>(java.lang.String)
    {
        com.android.mail.MailIntentService r0;
        java.lang.String r1;

        r0 := @this: com.android.mail.MailIntentService;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void onHandleIntent(android.content.Intent)
    {
        com.android.mail.MailIntentService r0;
        android.content.Intent r1;
        java.lang.String r2, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r33;
        com.android.mail.providers.Account r3, r36, r38;
        com.android.mail.providers.Folder r4, r6, r37;
        android.net.Uri r5, $r24, r34, r35;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object[] $r7;
        android.os.Parcelable $r16, $r17, $r19, $r20, $r21, $r23, $r27, $r30, $r31;
        com.android.mail.photo.ContactPhotoFetcher $r18, $r22, $r26, $r32;
        com.android.mail.utils.FolderUri $r25, $r28;
        com.android.mail.analytics.Tracker $r29;
        int i1, i2;

        r0 := @this: com.android.mail.MailIntentService;

        r1 := @parameter0: android.content.Intent;

        $r8 = <com.android.mail.MailIntentService: java.lang.String LOG_TAG>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int v(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "Handling intent %s", $r7);

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $r9 = "android.intent.action.LOCALE_CHANGED";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $r32 = virtualinvoke r0.<com.android.mail.MailIntentService: com.android.mail.photo.ContactPhotoFetcher getContactPhotoFetcher()>();

        staticinvoke <com.android.mail.utils.NotificationUtils: void cancelAndResendNotificationsOnLocaleChange(android.content.Context,com.android.mail.photo.ContactPhotoFetcher)>(r0, $r32);

        goto label7;

     label1:
        $r10 = "com.android.mail.action.CLEAR_NEW_MAIL_NOTIFICATIONS";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        $r30 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("account");

        r3 = (com.android.mail.providers.Account) $r30;

        $r31 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("folder");

        r4 = (com.android.mail.providers.Folder) $r31;

        staticinvoke <com.android.mail.utils.NotificationUtils: void clearFolderNotification(android.content.Context,com.android.mail.providers.Account,com.android.mail.providers.Folder,boolean)>(r0, r3, r4, 1);

        $r29 = staticinvoke <com.android.mail.analytics.Analytics: com.android.mail.analytics.Tracker getInstance()>();

        $r33 = virtualinvoke r4.<com.android.mail.providers.Folder: java.lang.String getTypeDescription()>();

        interfaceinvoke $r29.<com.android.mail.analytics.Tracker: void sendEvent(java.lang.String,java.lang.String,java.lang.String,long)>("notification_dismiss", $r33, null, 0L);

        goto label7;

     label2:
        $r11 = "com.android.mail.action.RESEND_NOTIFICATIONS";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label3;

        $r23 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("accountUri");

        r34 = (android.net.Uri) $r23;

        $r27 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("folderUri");

        r35 = (android.net.Uri) $r27;

        $r28 = new com.android.mail.utils.FolderUri;

        specialinvoke $r28.<com.android.mail.utils.FolderUri: void <init>(android.net.Uri)>(r35);

        $r26 = virtualinvoke r0.<com.android.mail.MailIntentService: com.android.mail.photo.ContactPhotoFetcher getContactPhotoFetcher()>();

        staticinvoke <com.android.mail.utils.NotificationUtils: void resendNotifications(android.content.Context,boolean,android.net.Uri,com.android.mail.utils.FolderUri,com.android.mail.photo.ContactPhotoFetcher)>(r0, 0, r34, $r28, $r26);

        goto label7;

     label3:
        $r12 = "com.android.mail.action.RESEND_NOTIFICATIONS_WEAR";

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label4;

        $r20 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("account");

        r36 = (com.android.mail.providers.Account) $r20;

        $r21 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("folder");

        r37 = (com.android.mail.providers.Folder) $r21;

        $r19 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("conversationUri");

        r5 = (android.net.Uri) $r19;

        staticinvoke <com.android.mail.utils.NotificationUtils: void markConversationAsReadAndSeen(android.content.Context,android.net.Uri)>(r0, r5);

        $r24 = r36.<com.android.mail.providers.Account: android.net.Uri uri>;

        $r25 = r37.<com.android.mail.providers.Folder: com.android.mail.utils.FolderUri folderUri>;

        $r22 = virtualinvoke r0.<com.android.mail.MailIntentService: com.android.mail.photo.ContactPhotoFetcher getContactPhotoFetcher()>();

        staticinvoke <com.android.mail.utils.NotificationUtils: void resendNotifications(android.content.Context,boolean,android.net.Uri,com.android.mail.utils.FolderUri,com.android.mail.photo.ContactPhotoFetcher)>(r0, 0, $r24, $r25, $r22);

        goto label7;

     label4:
        $r13 = "com.android.mail.action.SEND_SET_NEW_EMAIL_INDICATOR";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label5;

        i1 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("unread-count", 0);

        i2 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("unseen-count", 0);

        $r17 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("account");

        r38 = (com.android.mail.providers.Account) $r17;

        $r16 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("folder");

        r6 = (com.android.mail.providers.Folder) $r16;

        z0 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("get-attention", 0);

        $r18 = virtualinvoke r0.<com.android.mail.MailIntentService: com.android.mail.photo.ContactPhotoFetcher getContactPhotoFetcher()>();

        staticinvoke <com.android.mail.utils.NotificationUtils: void setNewEmailIndicator(android.content.Context,int,int,com.android.mail.providers.Account,com.android.mail.providers.Folder,boolean,com.android.mail.photo.ContactPhotoFetcher)>(r0, i1, i2, r38, r6, z0, $r18);

        goto label7;

     label5:
        $r14 = "android.intent.action.DEVICE_STORAGE_LOW";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label6;

        staticinvoke <com.android.mail.utils.StorageLowState: void setIsStorageLow(boolean)>(1);

        goto label7;

     label6:
        $r15 = "android.intent.action.DEVICE_STORAGE_OK";

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 == 0 goto label7;

        staticinvoke <com.android.mail.utils.StorageLowState: void setIsStorageLow(boolean)>(0);

     label7:
        return;
    }

    public static void broadcastBackupDataChanged(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("com.android.mail.action.BACKUP_DATA_CHANGED");

        r1 = $r2;

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

        return;
    }

    public com.android.mail.photo.ContactPhotoFetcher getContactPhotoFetcher()
    {
        com.android.mail.MailIntentService r0;

        r0 := @this: com.android.mail.MailIntentService;

        return null;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.android.mail.MailIntentService: java.lang.String CONVERSATION_EXTRA> = "conversation";

        <com.android.mail.MailIntentService: java.lang.String ACTION_SEND_SET_NEW_EMAIL_INDICATOR> = "com.android.mail.action.SEND_SET_NEW_EMAIL_INDICATOR";

        <com.android.mail.MailIntentService: java.lang.String ACTION_BACKUP_DATA_CHANGED> = "com.android.mail.action.BACKUP_DATA_CHANGED";

        <com.android.mail.MailIntentService: java.lang.String ACTION_RESEND_NOTIFICATIONS_WEAR> = "com.android.mail.action.RESEND_NOTIFICATIONS_WEAR";

        <com.android.mail.MailIntentService: java.lang.String ACTION_CLEAR_NEW_MAIL_NOTIFICATIONS> = "com.android.mail.action.CLEAR_NEW_MAIL_NOTIFICATIONS";

        <com.android.mail.MailIntentService: java.lang.String ACTION_RESEND_NOTIFICATIONS> = "com.android.mail.action.RESEND_NOTIFICATIONS";

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.MailIntentService: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
