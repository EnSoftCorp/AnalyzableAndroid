public class com.android.datetimepicker.time.AmPmCirclesView extends android.view.View
{
    private static final java.lang.String TAG;
    private static final int SELECTED_ALPHA;
    private static final int SELECTED_ALPHA_THEME_DARK;
    private final android.graphics.Paint mPaint;
    private int mSelectedAlpha;
    private int mUnselectedColor;
    private int mAmPmTextColor;
    private int mSelectedColor;
    private float mCircleRadiusMultiplier;
    private float mAmPmCircleRadiusMultiplier;
    private java.lang.String mAmText;
    private java.lang.String mPmText;
    private boolean mIsInitialized;
    private static final int AM;
    private static final int PM;
    private boolean mDrawValuesReady;
    private int mAmPmCircleRadius;
    private int mAmXCenter;
    private int mPmXCenter;
    private int mAmPmYCenter;
    private int mAmOrPm;
    private int mAmOrPmPressed;

    public void <init>(android.content.Context)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        android.content.Context r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint> = $r2;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mIsInitialized> = 0;

        return;
    }

    public void initialize(android.content.Context, int)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.content.res.Resources r2;
        java.lang.String r3, $r11, $r12, $r14, $r15;
        android.graphics.Typeface r4;
        java.lang.String[] r5;
        boolean $z0;
        android.graphics.Paint $r7, $r9, $r10;
        android.graphics.Paint$Align $r8;
        float $f0, $f1;
        java.text.DateFormatSymbols $r13;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AmPmCirclesView", "AmPmCirclesView may only be initialized once.");

        return;

     label1:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.android.datetimepicker.R$color: int white>;

        $i2 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i1);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mUnselectedColor> = $i2;

        $i3 = <com.android.datetimepicker.R$color: int blue>;

        $i4 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i3);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor> = $i4;

        $i5 = <com.android.datetimepicker.R$color: int ampm_text_color>;

        $i6 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i5);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmTextColor> = $i6;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha> = 51;

        $i7 = <com.android.datetimepicker.R$string: int sans_serif>;

        r3 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i7);

        r4 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r3, 0);

        $r7 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r4);

        $r9 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r10 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        $r8 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r10.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r8);

        $i8 = <com.android.datetimepicker.R$string: int circle_radius_multiplier>;

        $r11 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i8);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r11);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: float mCircleRadiusMultiplier> = $f0;

        $i9 = <com.android.datetimepicker.R$string: int ampm_circle_radius_multiplier>;

        $r12 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i9);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r12);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: float mAmPmCircleRadiusMultiplier> = $f1;

        $r13 = new java.text.DateFormatSymbols;

        specialinvoke $r13.<java.text.DateFormatSymbols: void <init>()>();

        r5 = virtualinvoke $r13.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        $r14 = r5[0];

        r0.<com.android.datetimepicker.time.AmPmCirclesView: java.lang.String mAmText> = $r14;

        $r15 = r5[1];

        r0.<com.android.datetimepicker.time.AmPmCirclesView: java.lang.String mPmText> = $r15;

        virtualinvoke r0.<com.android.datetimepicker.time.AmPmCirclesView: void setAmOrPm(int)>(i0);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPmPressed> = -1;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mIsInitialized> = 1;

        return;
    }

    void setTheme(android.content.Context, boolean)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        android.content.Context r1;
        boolean z0;
        android.content.res.Resources r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label1;

        $i6 = <com.android.datetimepicker.R$color: int dark_gray>;

        $i7 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i6);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mUnselectedColor> = $i7;

        $i8 = <com.android.datetimepicker.R$color: int red>;

        $i9 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i8);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor> = $i9;

        $i10 = <com.android.datetimepicker.R$color: int white>;

        $i11 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i10);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmTextColor> = $i11;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha> = 102;

        goto label2;

     label1:
        $i0 = <com.android.datetimepicker.R$color: int white>;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i0);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mUnselectedColor> = $i1;

        $i2 = <com.android.datetimepicker.R$color: int blue>;

        $i3 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor> = $i3;

        $i4 = <com.android.datetimepicker.R$color: int ampm_text_color>;

        $i5 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i4);

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmTextColor> = $i5;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha> = 51;

     label2:
        return;
    }

    public void setAmOrPm(int)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        int i0;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        i0 := @parameter0: int;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPm> = i0;

        return;
    }

    public void setAmOrPmPressed(int)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        int i0;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        i0 := @parameter0: int;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPmPressed> = i0;

        return;
    }

    public int getIsTouchingAmOrPm(float, float)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $z0 = r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mDrawValuesReady>;

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $i3 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter>;

        $f2 = (float) $i3;

        $f5 = f1 - $f2;

        $i4 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter>;

        $f3 = (float) $i4;

        $f4 = f1 - $f3;

        $f6 = $f5 * $f4;

        i0 = (int) $f6;

        $i5 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmXCenter>;

        $f7 = (float) $i5;

        $f9 = f0 - $f7;

        $i6 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmXCenter>;

        $f8 = (float) $i6;

        $f10 = f0 - $f8;

        $f11 = $f9 * $f10;

        $f12 = (float) i0;

        $f13 = $f11 + $f12;

        $d0 = (double) $f13;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i1 = (int) $d1;

        $i7 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        if i1 > $i7 goto label2;

        return 0;

     label2:
        $i8 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mPmXCenter>;

        $f14 = (float) $i8;

        $f16 = f0 - $f14;

        $i9 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mPmXCenter>;

        $f15 = (float) $i9;

        $f17 = f0 - $f15;

        $f20 = $f16 * $f17;

        $f19 = (float) i0;

        $f18 = $f20 + $f19;

        $d2 = (double) $f18;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d2);

        i2 = (int) $d3;

        $i10 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        if i2 > $i10 goto label3;

        return 1;

     label3:
        return -1;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.datetimepicker.time.AmPmCirclesView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i38, i39, i40, i41;
        boolean $z0, $z1;
        android.graphics.Paint $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r15;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        java.lang.String $r11, $r14;

        r0 := @this: com.android.datetimepicker.time.AmPmCirclesView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<com.android.datetimepicker.time.AmPmCirclesView: int getWidth()>();

        if i0 == 0 goto label1;

        $z0 = r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mIsInitialized>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label3;

        $i24 = virtualinvoke r0.<com.android.datetimepicker.time.AmPmCirclesView: int getWidth()>();

        i1 = $i24 / 2;

        $i23 = virtualinvoke r0.<com.android.datetimepicker.time.AmPmCirclesView: int getHeight()>();

        i2 = $i23 / 2;

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i2);

        $f15 = (float) $i22;

        $f16 = r0.<com.android.datetimepicker.time.AmPmCirclesView: float mCircleRadiusMultiplier>;

        $f14 = $f15 * $f16;

        i3 = (int) $f14;

        $f18 = (float) i3;

        $f13 = r0.<com.android.datetimepicker.time.AmPmCirclesView: float mAmPmCircleRadiusMultiplier>;

        $f17 = $f18 * $f13;

        $i26 = (int) $f17;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius> = $i26;

        $i25 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $i31 = $i25 * 3;

        i4 = $i31 / 4;

        $r15 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f19 = (float) i4;

        virtualinvoke $r15.<android.graphics.Paint: void setTextSize(float)>($f19);

        $i32 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $i27 = $i32 / 2;

        $i28 = i2 - $i27;

        $i29 = $i28 + i3;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter> = $i29;

        $i34 = i1 - i3;

        $i30 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $i35 = $i34 + $i30;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmXCenter> = $i35;

        $i37 = i1 + i3;

        $i36 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $i33 = $i37 - $i36;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: int mPmXCenter> = $i33;

        r0.<com.android.datetimepicker.time.AmPmCirclesView: boolean mDrawValuesReady> = 1;

     label3:
        i38 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mUnselectedColor>;

        i39 = 255;

        i40 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mUnselectedColor>;

        i41 = 255;

        $i6 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPm>;

        if $i6 != 0 goto label4;

        i38 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor>;

        i39 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha>;

        goto label5;

     label4:
        $i7 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPm>;

        if $i7 != 1 goto label5;

        i40 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor>;

        i41 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha>;

     label5:
        $i8 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPmPressed>;

        if $i8 != 0 goto label6;

        i38 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor>;

        i39 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha>;

        goto label7;

     label6:
        $i9 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmOrPmPressed>;

        if $i9 != 1 goto label7;

        i40 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedColor>;

        i41 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mSelectedAlpha>;

     label7:
        $r2 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(i38);

        $r3 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setAlpha(int)>(i39);

        $i10 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmXCenter>;

        $f1 = (float) $i10;

        $i12 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter>;

        $f2 = (float) $i12;

        $i11 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $f0 = (float) $i11;

        $r4 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, $f0, $r4);

        $r6 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(i40);

        $r5 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i41);

        $i14 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mPmXCenter>;

        $f5 = (float) $i14;

        $i13 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter>;

        $f3 = (float) $i13;

        $i15 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmCircleRadius>;

        $f4 = (float) $i15;

        $r7 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f5, $f3, $f4, $r7);

        $r8 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        $i16 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmTextColor>;

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i16);

        $i17 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmPmYCenter>;

        $r9 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f7 = virtualinvoke $r9.<android.graphics.Paint: float descent()>();

        $r10 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        $f6 = virtualinvoke $r10.<android.graphics.Paint: float ascent()>();

        $f8 = $f7 + $f6;

        $i20 = (int) $f8;

        $i18 = $i20 / 2;

        i5 = $i17 - $i18;

        $r11 = r0.<com.android.datetimepicker.time.AmPmCirclesView: java.lang.String mAmText>;

        $i19 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mAmXCenter>;

        $f9 = (float) $i19;

        $f10 = (float) i5;

        $r12 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r11, $f9, $f10, $r12);

        $r14 = r0.<com.android.datetimepicker.time.AmPmCirclesView: java.lang.String mPmText>;

        $i21 = r0.<com.android.datetimepicker.time.AmPmCirclesView: int mPmXCenter>;

        $f11 = (float) $i21;

        $f12 = (float) i5;

        $r13 = r0.<com.android.datetimepicker.time.AmPmCirclesView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r14, $f11, $f12, $r13);

        return;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.time.AmPmCirclesView: int PM> = 1;

        <com.android.datetimepicker.time.AmPmCirclesView: int AM> = 0;

        <com.android.datetimepicker.time.AmPmCirclesView: int SELECTED_ALPHA_THEME_DARK> = 102;

        <com.android.datetimepicker.time.AmPmCirclesView: int SELECTED_ALPHA> = 51;

        <com.android.datetimepicker.time.AmPmCirclesView: java.lang.String TAG> = "AmPmCirclesView";

        return;
    }
}
