abstract class android.support.v7.app.DrawerArrowDrawable extends android.graphics.drawable.Drawable
{
    private final android.graphics.Paint mPaint;
    private static final float ARROW_HEAD_ANGLE;
    private final float mBarThickness;
    private final float mTopBottomArrowSize;
    private final float mBarSize;
    private final float mMiddleArrowSize;
    private final float mBarGap;
    private final boolean mSpin;
    private final android.graphics.Path mPath;
    private final int mSize;
    private boolean mVerticalMirror;
    private float mProgress;

    void <init>(android.content.Context)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        android.graphics.Paint $r3, $r7, $r8, $r9, $r11, $r13, $r15;
        android.graphics.Path $r4;
        android.content.res.Resources$Theme $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r6;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0;
        android.graphics.Paint$Style $r10;
        android.graphics.Paint$Join $r12;
        android.graphics.Paint$Cap $r14;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint> = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath> = $r4;

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = 0;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $r6 = <android.support.v7.appcompat.R$styleable: int[] DrawerArrowToggle>;

        $i1 = <android.support.v7.appcompat.R$attr: int drawerArrowStyle>;

        $i0 = <android.support.v7.appcompat.R$style: int Base_Widget_AppCompat_DrawerArrowToggle>;

        r2 = virtualinvoke $r5.<android.content.res.Resources$Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r6, $i1, $i0);

        $r7 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r8 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $i2 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_color>;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getColor(int,int)>($i2, 0);

        virtualinvoke $r8.<android.graphics.Paint: void setColor(int)>($i3);

        $i4 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_drawableSize>;

        $i5 = virtualinvoke r2.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>($i4, 0);

        r0.<android.support.v7.app.DrawerArrowDrawable: int mSize> = $i5;

        $i6 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_barSize>;

        $f0 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i6, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize> = $f0;

        $i7 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_topBottomBarArrowSize>;

        $f1 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i7, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize> = $f1;

        $i8 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_thickness>;

        $f2 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i8, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness> = $f2;

        $i9 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_gapBetweenBars>;

        $f3 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i9, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap> = $f3;

        $i10 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_spinBars>;

        $z0 = virtualinvoke r2.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>($i10, 1);

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin> = $z0;

        $i11 = <android.support.v7.appcompat.R$styleable: int DrawerArrowToggle_middleBarArrowSize>;

        $f4 = virtualinvoke r2.<android.content.res.TypedArray: float getDimension(int,float)>($i11, 0.0F);

        r0.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize> = $f4;

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r9 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r9.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $r11 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r12 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r11.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r12);

        $r15 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $r14 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap SQUARE>;

        virtualinvoke $r15.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r14);

        $r13 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        $f5 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        virtualinvoke $r13.<android.graphics.Paint: void setStrokeWidth(float)>($f5);

        return;
    }

    abstract boolean isLayoutRtl();

    protected void setVerticalMirror(boolean)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        boolean z0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror> = z0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        boolean z0, $z1, $z2, $z3;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39;
        android.graphics.Path $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        long $l0, $l1;
        int $i2, $i4, $i5, $i6, $i7, $i8;
        android.graphics.Paint $r13;
        byte $b9;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Rect getBounds()>();

        z0 = virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: boolean isLayoutRtl()>();

        $f10 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f11 = r0.<android.support.v7.app.DrawerArrowDrawable: float mTopBottomArrowSize>;

        $f9 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f0 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f10, $f11, $f9);

        $f13 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarSize>;

        $f14 = r0.<android.support.v7.app.DrawerArrowDrawable: float mMiddleArrowSize>;

        $f12 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f1 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f13, $f14, $f12);

        $f15 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f16 = $f15 / 2.0F;

        $f17 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f2 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f16, $f17);

        $f19 = <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE>;

        $f18 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f3 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>(0.0F, $f19, $f18);

        if z0 == 0 goto label1;

        $f37 = 0.0F;

        goto label2;

     label1:
        $f37 = -180.0F;

     label2:
        if z0 == 0 goto label3;

        $f39 = 180.0F;

        goto label4;

     label3:
        $f39 = 0.0F;

     label4:
        $f20 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f4 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f37, $f39, $f20);

        $f24 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarGap>;

        $f23 = r0.<android.support.v7.app.DrawerArrowDrawable: float mBarThickness>;

        $f22 = $f24 + $f23;

        $f21 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        f5 = staticinvoke <android.support.v7.app.DrawerArrowDrawable: float lerp(float,float,float)>($f22, 0.0F, $f21);

        $r3 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r3.<android.graphics.Path: void rewind()>();

        $f25 = neg f1;

        f6 = $f25 / 2.0F;

        $r5 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f26 = f6 + f2;

        virtualinvoke $r5.<android.graphics.Path: void moveTo(float,float)>($f26, 0.0F);

        $r4 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f27 = f1 - f2;

        virtualinvoke $r4.<android.graphics.Path: void rLineTo(float,float)>($f27, 0.0F);

        $d2 = (double) f0;

        $d0 = (double) f3;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d1 = $d2 * $d3;

        $l0 = staticinvoke <java.lang.Math: long round(double)>($d1);

        f7 = (float) $l0;

        $d6 = (double) f0;

        $d7 = (double) f3;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d7);

        $d4 = $d6 * $d5;

        $l1 = staticinvoke <java.lang.Math: long round(double)>($d4);

        f8 = (float) $l1;

        $r7 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r7.<android.graphics.Path: void moveTo(float,float)>(f6, f5);

        $r6 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r6.<android.graphics.Path: void rLineTo(float,float)>(f7, f8);

        $r10 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f28 = neg f5;

        virtualinvoke $r10.<android.graphics.Path: void moveTo(float,float)>(f6, $f28);

        $r9 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $f29 = neg f8;

        virtualinvoke $r9.<android.graphics.Path: void rLineTo(float,float)>(f7, $f29);

        $r8 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r8.<android.graphics.Path: void moveTo(float,float)>(0.0F, 0.0F);

        $r11 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        virtualinvoke $r11.<android.graphics.Path: void close()>();

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $z1 = r0.<android.support.v7.app.DrawerArrowDrawable: boolean mSpin>;

        if $z1 == 0 goto label7;

        $z2 = r0.<android.support.v7.app.DrawerArrowDrawable: boolean mVerticalMirror>;

        $z3 = $z2 ^ z0;

        if $z3 == 0 goto label5;

        $b9 = -1;

        goto label6;

     label5:
        $b9 = 1;

     label6:
        $f33 = (float) $b9;

        $f34 = f4 * $f33;

        $i6 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f35 = (float) $i6;

        $i8 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $f38 = (float) $i8;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>($f34, $f35, $f38);

        goto label8;

     label7:
        if z0 == 0 goto label8;

        $i4 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f30 = (float) $i4;

        $i7 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $f36 = (float) $i7;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f30, $f36);

     label8:
        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f31 = (float) $i2;

        $i5 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $f32 = (float) $i5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f31, $f32);

        $r12 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Path mPath>;

        $r13 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>($r12, $r13);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void setAlpha(int)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public boolean isAutoMirrored()
    {
        android.support.v7.app.DrawerArrowDrawable r0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return 1;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<android.support.v7.app.DrawerArrowDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getIntrinsicHeight()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int $i0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $i0 = r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        int $i0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $i0 = r0.<android.support.v7.app.DrawerArrowDrawable: int mSize>;

        return $i0;
    }

    public int getOpacity()
    {
        android.support.v7.app.DrawerArrowDrawable r0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        return -3;
    }

    public float getProgress()
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        float $f0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        $f0 = r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress>;

        return $f0;
    }

    public void setProgress(float)
    {
        android.support.v7.app.DrawerArrowDrawable r0;
        float f0;

        r0 := @this: android.support.v7.app.DrawerArrowDrawable;

        f0 := @parameter0: float;

        r0.<android.support.v7.app.DrawerArrowDrawable: float mProgress> = f0;

        virtualinvoke r0.<android.support.v7.app.DrawerArrowDrawable: void invalidateSelf()>();

        return;
    }

    private static float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = $f3 * f2;

        $f5 = f0 + $f4;

        return $f5;
    }

    static void <clinit>()
    {
        double $d0;
        float $f0;

        $d0 = staticinvoke <java.lang.Math: double toRadians(double)>(45.0);

        $f0 = (float) $d0;

        <android.support.v7.app.DrawerArrowDrawable: float ARROW_HEAD_ANGLE> = $f0;

        return;
    }
}
