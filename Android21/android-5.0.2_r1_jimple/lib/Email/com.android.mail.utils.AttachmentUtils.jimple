public class com.android.mail.utils.AttachmentUtils extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final int KILO;
    private static final int MEGA;
    private static final long READ_TIMEOUT;
    private static final float MIN_CACHE_THRESHOLD;
    private static final int MIN_CACHE_AVAILABLE_SPACE_BYTES;
    private static java.util.Map sDisplayNameMap;

    public void <init>()
    {
        com.android.mail.utils.AttachmentUtils r0;

        r0 := @this: com.android.mail.utils.AttachmentUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String convertToHumanReadableSize(android.content.Context, long)
    {
        android.content.Context r0;
        long l0, $l4;
        java.lang.String r1, $r5, $r7, $r8, r10, r11;
        java.text.DecimalFormat r2, $r3;
        byte $b1, $b2, $b3;
        float $f0, $f1;
        double $d0;
        java.lang.Object[] $r4, $r6, $r9;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return "";

     label1:
        $b2 = l0 cmp 1024L;

        if $b2 >= 0 goto label2;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r1;

        $r8 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296404, $r9);

        return $r8;

     label2:
        $b3 = l0 cmp 1048576L;

        if $b3 >= 0 goto label3;

        $l4 = l0 / 1024L;

        r10 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l4);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r10;

        $r7 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296405, $r6);

        return $r7;

     label3:
        $r3 = new java.text.DecimalFormat;

        specialinvoke $r3.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.#");

        r2 = $r3;

        $f0 = (float) l0;

        $f1 = $f0 / 1048576.0F;

        $d0 = (double) $f1;

        r11 = virtualinvoke r2.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r11;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296406, $r4);

        return $r5;
    }

    public static java.lang.String getDisplayType(android.content.Context, com.android.mail.providers.Attachment)
    {
        android.content.Context r0;
        com.android.mail.providers.Attachment r1;
        java.lang.String r2, r3, r4, $r5, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        java.lang.Object[] $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.mail.providers.Attachment;

        $i1 = r1.<com.android.mail.providers.Attachment: int flags>;

        $i2 = $i1 & 1024;

        if $i2 == 0 goto label1;

        return "";

     label1:
        r2 = virtualinvoke r1.<com.android.mail.providers.Attachment: java.lang.String getContentType()>();

        r3 = staticinvoke <com.android.mail.utils.AttachmentUtils: java.lang.String getMimeTypeDisplayName(android.content.Context,java.lang.String)>(r0, r2);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label2;

        $i5 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(47);

        goto label3;

     label2:
        $i5 = -1;

     label3:
        i0 = $i5;

        if r3 != null goto label4;

        if i0 <= 0 goto label4;

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r3 = staticinvoke <com.android.mail.utils.AttachmentUtils: java.lang.String getMimeTypeDisplayName(android.content.Context,java.lang.String)>(r0, $r9);

     label4:
        if r3 != null goto label5;

        $r5 = virtualinvoke r1.<com.android.mail.providers.Attachment: java.lang.String getName()>();

        r4 = staticinvoke <com.android.mail.utils.Utils: java.lang.String getFileExtension(java.lang.String)>($r5);

        if r4 == null goto label5;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i3 <= 1 goto label5;

        $i4 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(46);

        if $i4 != 0 goto label5;

        $r6 = newarray (java.lang.Object)[1];

        $r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String toUpperCase()>();

        $r6[0] = $r7;

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131296415, $r6);

     label5:
        if r3 != null goto label6;

        r3 = "";

     label6:
        return r3;
    }

    public static synchronized java.lang.String getMimeTypeDisplayName(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3, r4, $r8, $r10, $r12, $r15, $r16, $r19;
        java.util.Map $r5, $r6;
        java.lang.Object $r7;
        com.google.common.collect.ImmutableMap$Builder $r9, $r11, $r13, $r14, $r17, $r18, $r20, $r21, $r22, $r23, $r25, $r26;
        com.google.common.collect.ImmutableMap $r24;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r5 = <com.android.mail.utils.AttachmentUtils: java.util.Map sDisplayNameMap>;

        if $r5 != null goto label1;

        r2 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296411);

        r3 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296412);

        r4 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296413);

        $r9 = new com.google.common.collect.ImmutableMap$Builder;

        specialinvoke $r9.<com.google.common.collect.ImmutableMap$Builder: void <init>()>();

        $r10 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296407);

        $r11 = virtualinvoke $r9.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("image", $r10);

        $r12 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296409);

        $r13 = virtualinvoke $r11.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("audio", $r12);

        $r15 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296408);

        $r14 = virtualinvoke $r13.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("video", $r15);

        $r16 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296410);

        $r17 = virtualinvoke $r14.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("text", $r16);

        $r19 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131296414);

        $r18 = virtualinvoke $r17.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/pdf", $r19);

        $r21 = virtualinvoke $r18.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/msword", r2);

        $r20 = virtualinvoke $r21.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/vnd.openxmlformats-officedocument.wordprocessingml.document", r2);

        $r23 = virtualinvoke $r20.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/vnd.ms-powerpoint", r3);

        $r22 = virtualinvoke $r23.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/vnd.openxmlformats-officedocument.presentationml.presentation", r3);

        $r25 = virtualinvoke $r22.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/vnd.ms-excel", r4);

        $r26 = virtualinvoke $r25.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>("application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", r4);

        $r24 = virtualinvoke $r26.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        <com.android.mail.utils.AttachmentUtils: java.util.Map sDisplayNameMap> = $r24;

     label1:
        $r6 = <com.android.mail.utils.AttachmentUtils: java.util.Map sDisplayNameMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r8 = (java.lang.String) $r7;

        return $r8;
    }

    public static java.lang.String cacheAttachmentUri(android.content.Context, com.android.mail.providers.Attachment, android.os.Bundle)
    {
        android.content.Context r0;
        com.android.mail.providers.Attachment r1;
        android.os.Bundle r2;
        java.io.File r3, r5;
        long l0, l1, l2, l4, $l6, $l7, $l9, $l10;
        java.io.FileOutputStream r4, $r19;
        java.text.SimpleDateFormat r6, $r14;
        android.os.ParcelFileDescriptor r7, $r39;
        byte[] r8;
        int i3, $i5, $i11;
        java.lang.String r9, $r15, $r21, $r26, $r31, $r32, $r37, $r44, $r46, $r51, $r54, r56;
        java.lang.Throwable r10, $r41;
        java.io.IOException r11, r12, $r20, $r42, $r48, $r50, $r53, r57, r58;
        java.util.Date $r13;
        android.content.ContentResolver $r16;
        android.net.Uri $r17, $r18, $r23, $r33, $r34;
        byte $b8;
        java.lang.Object[] $r22, $r24, $r27, $r36, $r45, $r47, $r49, $r52;
        boolean $z0, $z1;
        java.lang.Long $r25, $r28, $r40, $r43;
        java.io.FileInputStream $r29;
        java.io.FileNotFoundException $r30;
        java.io.FileDescriptor $r35;
        android.os.Parcelable $r38;
        java.io.InputStream r55;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.mail.providers.Attachment;

        r2 := @parameter2: android.os.Bundle;

        r3 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        l0 = virtualinvoke r3.<java.io.File: long getTotalSpace()>();

        $i5 = r1.<com.android.mail.providers.Attachment: int size>;

        if $i5 <= 0 goto label01;

        $l10 = virtualinvoke r3.<java.io.File: long getUsableSpace()>();

        $i11 = r1.<com.android.mail.providers.Attachment: int size>;

        $l9 = (long) $i11;

        l1 = $l10 - $l9;

        $z1 = staticinvoke <com.android.mail.utils.AttachmentUtils: boolean isLowSpace(long,long)>(l0, l1);

        if $z1 == 0 goto label01;

        $r37 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r36 = newarray (java.lang.Object)[3];

        $r43 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r36[0] = $r43;

        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r36[1] = $r40;

        $r36[2] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r37, "Low memory (%d/%d). Can\'t cache attachment %s", $r36);

        return null;

     label01:
        r55 = null;

        r4 = null;

        r5 = null;

     label02:
        $r14 = new java.text.SimpleDateFormat;

        specialinvoke $r14.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd-kk:mm:ss");

        r6 = $r14;

        $r13 = new java.util.Date;

        specialinvoke $r13.<java.util.Date: void <init>()>();

        $r15 = virtualinvoke r6.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r13);

        r5 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r15, ".attachment", r3);

        if r2 == null goto label03;

        $r34 = r1.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        if $r34 == null goto label03;

        $r33 = r1.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        $r32 = virtualinvoke $r33.<android.net.Uri: java.lang.String toString()>();

        $r38 = virtualinvoke r2.<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>($r32);

        $r39 = (android.os.ParcelFileDescriptor) $r38;

        goto label04;

     label03:
        $r39 = null;

     label04:
        r7 = $r39;

        if r7 == null goto label05;

        $r29 = new java.io.FileInputStream;

        $r35 = virtualinvoke r7.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r29.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r35);

        r55 = $r29;

        goto label07;

     label05:
        $r17 = r1.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        if $r17 != null goto label06;

        $r31 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r31, "contentUri is null in attachment: %s", $r27);

        $r30 = new java.io.FileNotFoundException;

        specialinvoke $r30.<java.io.FileNotFoundException: void <init>(java.lang.String)>("Missing contentUri in attachment");

        throw $r30;

     label06:
        $r16 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r18 = r1.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        r55 = virtualinvoke $r16.<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>($r18);

     label07:
        $r19 = new java.io.FileOutputStream;

        specialinvoke $r19.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        r4 = $r19;

        l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        r8 = newarray (byte)[1024];

     label08:
        i3 = virtualinvoke r55.<java.io.InputStream: int read(byte[])>(r8);

        if i3 > 0 goto label09;

        goto label11;

     label09:
        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[],int,int)>(r8, 0, i3);

        $l6 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l7 = $l6 - l2;

        $b8 = $l7 cmp 3600000L;

        if $b8 <= 0 goto label10;

        $r20 = new java.io.IOException;

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>("Timed out reading attachment data");

        throw $r20;

     label10:
        goto label08;

     label11:
        virtualinvoke r4.<java.io.FileOutputStream: void flush()>();

        r56 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r21 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r22 = newarray (java.lang.Object)[2];

        $r23 = r1.<com.android.mail.providers.Attachment: android.net.Uri contentUri>;

        $r22[0] = $r23;

        $r22[1] = r56;

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r21, "Cached %s to %s", $r22);

        l4 = virtualinvoke r3.<java.io.File: long getUsableSpace()>();

        $z0 = staticinvoke <com.android.mail.utils.AttachmentUtils: boolean isLowSpace(long,long)>(l0, l4);

        if $z0 == 0 goto label12;

        virtualinvoke r5.<java.io.File: boolean delete()>();

        $r26 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r24 = newarray (java.lang.Object)[3];

        $r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        $r24[0] = $r25;

        $r28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r24[1] = $r28;

        $r24[2] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r26, "Low memory (%d/%d). Can\'t cache attachment %s", $r24);

        r56 = null;

     label12:
        r9 = r56;

     label13:
        if r55 == null goto label14;

        virtualinvoke r55.<java.io.InputStream: void close()>();

     label14:
        if r4 == null goto label15;

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r50 := @caughtexception;

        r11 = $r50;

        $r51 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r49 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r51, r11, "Failed to close stream", $r49);

     label17:
        return r9;

     label18:
        $r48 := @caughtexception;

        r57 = $r48;

        $r44 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r45 = newarray (java.lang.Object)[1];

        $r45[0] = r1;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r44, r57, "Failed to cache attachment %s", $r45);

        if r5 == null goto label19;

        virtualinvoke r5.<java.io.File: boolean delete()>();

     label19:
        if r55 == null goto label20;

        virtualinvoke r55.<java.io.InputStream: void close()>();

     label20:
        if r4 == null goto label21;

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r42 := @caughtexception;

        r58 = $r42;

        $r46 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r47 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r46, r58, "Failed to close stream", $r47);

     label23:
        return null;

     label24:
        $r41 := @caughtexception;

        r10 = $r41;

     label25:
        if r55 == null goto label26;

        virtualinvoke r55.<java.io.InputStream: void close()>();

     label26:
        if r4 == null goto label27;

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r53 := @caughtexception;

        r12 = $r53;

        $r54 = <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG>;

        $r52 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r54, r12, "Failed to close stream", $r52);

     label29:
        throw r10;

        catch java.io.IOException from label13 to label15 with label16;
        catch java.io.IOException from label02 to label13 with label18;
        catch java.io.IOException from label19 to label21 with label22;
        catch java.lang.Throwable from label02 to label13 with label24;
        catch java.lang.Throwable from label18 to label19 with label24;
        catch java.io.IOException from label25 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    private static boolean isLowSpace(long, long)
    {
        long l0, l1;
        float $f0, $f1, $f2, $f3;
        byte $b2;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $f2 = (float) l1;

        $f0 = (float) l0;

        $f1 = $f0 * 0.25F;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>($f1, 1.048576E8F);

        $b2 = $f2 cmpg $f3;

        if $b2 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean canDownloadAttachment(android.content.Context, com.android.mail.providers.Attachment)
    {
        android.content.Context r0;
        com.android.mail.providers.Attachment r1;
        android.net.ConnectivityManager r2;
        android.net.NetworkInfo r3;
        java.lang.Long r4;
        java.lang.Object $r5;
        boolean $z0, $z1;
        int $i0, $i1;
        long $l2, $l3;
        byte $b4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.mail.providers.Attachment;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r5;

        r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke r3.<android.net.NetworkInfo: int getType()>();

        if $i0 == 0 goto label2;

        return 1;

     label2:
        r4 = staticinvoke <android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>(r0);

        if r4 == null goto label3;

        if r1 == null goto label3;

        $i1 = r1.<com.android.mail.providers.Attachment: int size>;

        $l2 = (long) $i1;

        $l3 = virtualinvoke r4.<java.lang.Long: long longValue()>();

        $b4 = $l2 cmp $l3;

        if $b4 > 0 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;

     label6:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.android.mail.utils.AttachmentUtils: int MIN_CACHE_AVAILABLE_SPACE_BYTES> = 104857600;

        <com.android.mail.utils.AttachmentUtils: float MIN_CACHE_THRESHOLD> = 0.25F;

        <com.android.mail.utils.AttachmentUtils: long READ_TIMEOUT> = 3600000L;

        <com.android.mail.utils.AttachmentUtils: int MEGA> = 1048576;

        <com.android.mail.utils.AttachmentUtils: int KILO> = 1024;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.utils.AttachmentUtils: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
