public class org.owasp.html.TagBalancingHtmlStreamEventReceiver extends java.lang.Object implements org.owasp.html.HtmlStreamEventReceiver
{
    private final org.owasp.html.HtmlStreamEventReceiver underlying;
    private int nestingLimit;
    private final java.util.List openElements;
    private static final long HTML_SPACE_CHAR_BITMASK;
    static final com.google.common.collect.ImmutableMap ELEMENT_CONTAINMENT_RELATIONSHIPS;

    public void <init>(org.owasp.html.HtmlStreamEventReceiver)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        org.owasp.html.HtmlStreamEventReceiver r1;
        java.util.ArrayList $r2;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: org.owasp.html.HtmlStreamEventReceiver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit> = 2147483647;

        $r2 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements> = $r2;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying> = r1;

        return;
    }

    public void setNestingLimit(int)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        int i0, $i1;
        java.util.List $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        i0 := @parameter0: int;

        $r1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 <= i0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit> = i0;

        return;
    }

    public void openDocument()
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        org.owasp.html.HtmlStreamEventReceiver $r1;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        $r1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        interfaceinvoke $r1.<org.owasp.html.HtmlStreamEventReceiver: void openDocument()>();

        return;
    }

    public void closeDocument()
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        int i0, $i1, $i2;
        java.util.List $r1, $r2, $r4;
        org.owasp.html.HtmlStreamEventReceiver $r3, $r5;
        java.lang.Object $r6;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo $r7;
        java.lang.String $r8;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        $i1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        $r1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

     label1:
        i0 = i0 + -1;

        if i0 < 0 goto label2;

        $r5 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r4 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r7 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r6;

        $r8 = $r7.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        interfaceinvoke $r5.<org.owasp.html.HtmlStreamEventReceiver: void closeTag(java.lang.String)>($r8);

        goto label1;

     label2:
        $r2 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        interfaceinvoke $r2.<java.util.List: void clear()>();

        $r3 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        interfaceinvoke $r3.<org.owasp.html.HtmlStreamEventReceiver: void closeDocument()>();

        return;
    }

    public void openTag(java.lang.String, java.util.List)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        java.lang.String r1, r3, $r9;
        java.util.List r2, $r7, $r8, $r11;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r4;
        com.google.common.collect.ImmutableMap $r5;
        java.lang.Object $r6;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        org.owasp.html.HtmlStreamEventReceiver $r10, $r12;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r1);

        $r5 = <org.owasp.html.TagBalancingHtmlStreamEventReceiver: com.google.common.collect.ImmutableMap ELEMENT_CONTAINMENT_RELATIONSHIPS>;

        $r6 = virtualinvoke $r5.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r6;

        if r4 != null goto label2;

        $r11 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i2 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i3 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i2 >= $i3 goto label1;

        $r12 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        interfaceinvoke $r12.<org.owasp.html.HtmlStreamEventReceiver: void openTag(java.lang.String,java.util.List)>(r1, r2);

     label1:
        return;

     label2:
        specialinvoke r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void prepareForContent(org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo)>(r4);

        $r7 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i0 >= $i1 goto label3;

        $r10 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r9 = r4.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        interfaceinvoke $r10.<org.owasp.html.HtmlStreamEventReceiver: void openTag(java.lang.String,java.util.List)>($r9, r2);

     label3:
        $z0 = r4.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: boolean isVoid>;

        if $z0 != 0 goto label4;

        $r8 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        return;
    }

    private void prepareForContent(org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r1, r2, r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.List $r4, $r5, $r7, $r8, $r10, $r15;
        java.lang.Object $r6, $r11;
        boolean $z0;
        java.lang.String $r12, $r17;
        org.owasp.html.HtmlStreamEventReceiver $r13, $r16;
        java.util.ArrayList $r14, r18;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo;

        $r4 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 == 0 goto label9;

        $r5 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i1 = i0 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r6;

        $i3 = r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int contents>;

        $i2 = r1.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int types>;

        $i4 = $i3 & $i2;

        if $i4 != 0 goto label1;

        r3 = r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo blockContainerChild>;

        if r3 == null goto label1;

        $i13 = r3.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int contents>;

        $i11 = r1.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int types>;

        $i12 = $i13 & $i11;

        if $i12 == 0 goto label1;

        $r16 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r17 = r3.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        $r14 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        interfaceinvoke $r16.<org.owasp.html.HtmlStreamEventReceiver: void openTag(java.lang.String,java.util.List)>($r17, $r14);

        $r15 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r3);

        r2 = r3;

        i0 = i0 + 1;

     label1:
        r18 = null;

     label2:
        $i6 = r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int contents>;

        $i5 = r1.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int types>;

        $i7 = $i6 & $i5;

        if $i7 == 0 goto label3;

        goto label8;

     label3:
        $r7 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i8 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i9 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i8 >= $i9 goto label4;

        $r13 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r12 = r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        interfaceinvoke $r13.<org.owasp.html.HtmlStreamEventReceiver: void closeTag(java.lang.String)>($r12);

     label4:
        $r8 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i0 = i0 + -1;

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i0);

        $z0 = r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: boolean resumable>;

        if $z0 == 0 goto label6;

        if r18 != null goto label5;

        r18 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

     label5:
        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>(r2);

     label6:
        if i0 != 0 goto label7;

        goto label8;

     label7:
        $r10 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i10 = i0 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i10);

        r2 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r11;

        goto label2;

     label8:
        if r18 == null goto label9;

        specialinvoke r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void resume(java.util.List)>(r18);

     label9:
        return;
    }

    public void closeTag(java.lang.String)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        java.lang.String r1, r2, $r15, $r20, $r27, r29;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r3, r4, r5, $r22;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        com.google.common.collect.ImmutableMap $r6;
        java.lang.Object $r7, $r16, $r21, $r24;
        java.util.List $r8, $r9, $r10, $r11, $r13, $r17, $r19, $r23, $r25, $r26;
        boolean $z0, $z2, $z3;
        org.owasp.html.HtmlStreamEventReceiver $r14, $r18, $r28;
        java.util.ArrayList r30;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r1);

        $r6 = <org.owasp.html.TagBalancingHtmlStreamEventReceiver: com.google.common.collect.ImmutableMap ELEMENT_CONTAINMENT_RELATIONSHIPS>;

        $r7 = virtualinvoke $r6.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r7;

        if r3 != null goto label02;

        $r26 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i9 = interfaceinvoke $r26.<java.util.List: int size()>();

        $i10 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i9 >= $i10 goto label01;

        $r28 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        interfaceinvoke $r28.<org.owasp.html.HtmlStreamEventReceiver: void closeTag(java.lang.String)>(r1);

     label01:
        return;

     label02:
        $r8 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i0 = interfaceinvoke $r8.<java.util.List: int lastIndexOf(java.lang.Object)>(r3);

        $z0 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver: boolean isHeaderElementName(java.lang.String)>(r2);

        if $z0 == 0 goto label05;

        $r25 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i1 = interfaceinvoke $r25.<java.util.List: int size()>();

        i2 = i0 + 1;

     label03:
        i1 = i1 + -1;

        if i1 < i2 goto label05;

        $r23 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r24;

        $r27 = r4.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        $z3 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver: boolean isHeaderElementName(java.lang.String)>($r27);

        if $z3 == 0 goto label04;

        r3 = r4;

        i0 = i1;

        r29 = r4.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        goto label05;

     label04:
        goto label03;

     label05:
        if i0 >= 0 goto label06;

        return;

     label06:
        i11 = r3.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int blockedByScopes>;

        $r9 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i12 = interfaceinvoke $r9.<java.util.List: int size()>();

     label07:
        i12 = i12 + -1;

        if i12 <= i0 goto label08;

        $r19 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i12);

        $r22 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r21;

        $i7 = $r22.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int inScopes>;

        $i8 = $i7 & i11;

        if $i8 == 0 goto label07;

        return;

     label08:
        $r10 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        i13 = interfaceinvoke $r10.<java.util.List: int size()>();

        r30 = null;

     label09:
        i13 = i13 + -1;

        if i13 <= i0 goto label13;

        $r17 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $r16 = interfaceinvoke $r17.<java.util.List: java.lang.Object remove(int)>(i13);

        r5 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r16;

        $i5 = i13 + 1;

        $i6 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i5 >= $i6 goto label10;

        $r18 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r20 = r5.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        interfaceinvoke $r18.<org.owasp.html.HtmlStreamEventReceiver: void closeTag(java.lang.String)>($r20);

     label10:
        $z2 = r5.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: boolean resumable>;

        if $z2 == 0 goto label12;

        if r30 != null goto label11;

        r30 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

     label11:
        interfaceinvoke r30.<java.util.List: boolean add(java.lang.Object)>(r5);

     label12:
        goto label09;

     label13:
        $r11 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i4 = interfaceinvoke $r11.<java.util.List: int size()>();

        $i3 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i4 >= $i3 goto label14;

        $r14 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r15 = r3.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        interfaceinvoke $r14.<org.owasp.html.HtmlStreamEventReceiver: void closeTag(java.lang.String)>($r15);

     label14:
        $r13 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        interfaceinvoke $r13.<java.util.List: java.lang.Object remove(int)>(i0);

        if r30 == null goto label15;

        specialinvoke r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void resume(java.util.List)>(r30);

     label15:
        return;
    }

    private void resume(java.util.List)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        java.util.List r1, $r5, $r6;
        java.util.Iterator r2;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0, $i1;
        org.owasp.html.HtmlStreamEventReceiver $r7;
        java.lang.String $r8;
        java.util.ArrayList $r9;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r4;

        $r5 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i0 >= $i1 goto label2;

        $r7 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        $r8 = r3.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        $r9 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        interfaceinvoke $r7.<org.owasp.html.HtmlStreamEventReceiver: void openTag(java.lang.String,java.util.List)>($r8, $r9);

     label2:
        $r6 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        goto label1;

     label3:
        return;
    }

    public static boolean isInterElementWhitespace(java.lang.String)
    {
        java.lang.String r0;
        int i0, i1;
        char c2;
        long $l3, $l4;
        byte $b5;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        if c2 > 32 goto label2;

        $l3 = 1L << c2;

        $l4 = 4294981120L & $l3;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label3;

     label2:
        return 0;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 1;
    }

    public void text(java.lang.String)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r0;
        java.lang.String r1;
        boolean $z0;
        java.util.List $r2;
        int $i0, $i1;
        org.owasp.html.HtmlStreamEventReceiver $r3;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo $r4;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver: boolean isInterElementWhitespace(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo access$000()>();

        specialinvoke r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void prepareForContent(org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo)>($r4);

     label1:
        $r2 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: java.util.List openElements>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: int nestingLimit>;

        if $i0 >= $i1 goto label2;

        $r3 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: org.owasp.html.HtmlStreamEventReceiver underlying>;

        interfaceinvoke $r3.<org.owasp.html.HtmlStreamEventReceiver: void text(java.lang.String)>(r1);

     label2:
        return;
    }

    private static boolean isHeaderElementName(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        char $c1, $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 2 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if $c1 != 104 goto label1;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        if $c2 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean allowsPlainTextualContent(java.lang.String)
    {
        java.lang.String r0, $r6, $r7;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r1, $r8;
        com.google.common.collect.ImmutableMap $r2;
        java.lang.Object $r3;
        int[] $r4;
        org.owasp.html.HtmlTextEscapingMode $r5;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r2 = <org.owasp.html.TagBalancingHtmlStreamEventReceiver: com.google.common.collect.ImmutableMap ELEMENT_CONTAINMENT_RELATIONSHIPS>;

        $r3 = virtualinvoke $r2.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo) $r3;

        if r1 == null goto label01;

        $i2 = r1.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int contents>;

        $r8 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo access$000()>();

        $i3 = $r8.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int types>;

        $i4 = $i2 & $i3;

        if $i4 == 0 goto label10;

     label01:
        $r4 = <org.owasp.html.TagBalancingHtmlStreamEventReceiver$1: int[] $SwitchMap$org$owasp$html$HtmlTextEscapingMode>;

        $r5 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: org.owasp.html.HtmlTextEscapingMode getModeForTag(java.lang.String)>(r0);

        $i0 = virtualinvoke $r5.<org.owasp.html.HtmlTextEscapingMode: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label06;
            default: goto label10;
        };

     label02:
        return 1;

     label03:
        return 1;

     label04:
        return 1;

     label05:
        return 0;

     label06:
        $r6 = "xmp";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label07;

        $r7 = "listing";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label08;

     label07:
        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        return $z2;

     label10:
        return 0;
    }

    static void <clinit>()
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships $r0;
        com.google.common.collect.ImmutableMap $r1;

        <org.owasp.html.TagBalancingHtmlStreamEventReceiver: long HTML_SPACE_CHAR_BITMASK> = 4294981120L;

        $r0 = new org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships;

        specialinvoke $r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships: void <init>(org.owasp.html.TagBalancingHtmlStreamEventReceiver$1)>(null);

        $r1 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships: com.google.common.collect.ImmutableMap access$200(org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships)>($r0);

        <org.owasp.html.TagBalancingHtmlStreamEventReceiver: com.google.common.collect.ImmutableMap ELEMENT_CONTAINMENT_RELATIONSHIPS> = $r1;

        return;
    }
}
