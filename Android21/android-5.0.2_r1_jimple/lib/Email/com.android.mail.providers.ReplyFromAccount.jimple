public class com.android.mail.providers.ReplyFromAccount extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String LOG_TAG;
    private static final java.lang.String BASE_ACCOUNT_URI;
    private static final java.lang.String ADDRESS_STRING;
    private static final java.lang.String REPLY_TO;
    private static final java.lang.String NAME_STRING;
    private static final java.lang.String IS_DEFAULT;
    private static final java.lang.String IS_CUSTOM_FROM;
    public com.android.mail.providers.Account account;
    android.net.Uri baseAccountUri;
    public java.lang.String address;
    public java.lang.String replyTo;
    public java.lang.String name;
    public boolean isDefault;
    public boolean isCustomFrom;

    public void <init>(com.android.mail.providers.Account, android.net.Uri, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        com.android.mail.providers.ReplyFromAccount r0;
        com.android.mail.providers.Account r1;
        android.net.Uri r2;
        java.lang.String r3, r4, r5;
        boolean z0, z1;

        r0 := @this: com.android.mail.providers.ReplyFromAccount;

        r1 := @parameter0: com.android.mail.providers.Account;

        r2 := @parameter1: android.net.Uri;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.mail.providers.ReplyFromAccount: com.android.mail.providers.Account account> = r1;

        r0.<com.android.mail.providers.ReplyFromAccount: android.net.Uri baseAccountUri> = r2;

        r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String address> = r3;

        r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String name> = r4;

        r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String replyTo> = r5;

        r0.<com.android.mail.providers.ReplyFromAccount: boolean isDefault> = z0;

        r0.<com.android.mail.providers.ReplyFromAccount: boolean isCustomFrom> = z1;

        return;
    }

    public org.json.JSONObject serialize()
    {
        com.android.mail.providers.ReplyFromAccount r0;
        org.json.JSONObject r1, $r3;
        org.json.JSONException r2, $r15;
        android.net.Uri $r4;
        java.lang.String $r6, $r8, $r10, $r17, $r19, $r21;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r16, $r18;
        java.lang.Object[] $r20;

        r0 := @this: com.android.mail.providers.ReplyFromAccount;

        $r3 = new org.json.JSONObject;

        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        r1 = $r3;

     label1:
        $r4 = r0.<com.android.mail.providers.ReplyFromAccount: android.net.Uri baseAccountUri>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("baseAccountUri", $r4);

        $r6 = r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String address>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("address", $r6);

        $r8 = r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String name>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", $r8);

        $r10 = r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String replyTo>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("replyTo", $r10);

        $z0 = r0.<com.android.mail.providers.ReplyFromAccount: boolean isDefault>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isDefault", $z0);

        $z1 = r0.<com.android.mail.providers.ReplyFromAccount: boolean isCustomFrom>;

        virtualinvoke r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("isCustom", $z1);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r2 = $r15;

        $r17 = <com.android.mail.providers.ReplyFromAccount: java.lang.String LOG_TAG>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not serialize account with address ");

        $r19 = r0.<com.android.mail.providers.ReplyFromAccount: java.lang.String address>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r17, r2, $r21, $r20);

     label4:
        return r1;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static com.android.mail.providers.ReplyFromAccount deserialize(com.android.mail.providers.Account, org.json.JSONObject)
    {
        com.android.mail.providers.Account r0;
        org.json.JSONObject r1;
        com.android.mail.providers.ReplyFromAccount r2, $r9;
        android.net.Uri r3;
        java.lang.String r4, r5, r6, $r7, $r10;
        boolean z0, z1;
        org.json.JSONException $r8, r12;
        java.lang.Object[] $r11;

        r0 := @parameter0: com.android.mail.providers.Account;

        r1 := @parameter1: org.json.JSONObject;

        r2 = null;

     label1:
        $r7 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("baseAccountUri");

        r3 = staticinvoke <com.android.mail.utils.Utils: android.net.Uri getValidUri(java.lang.String)>($r7);

        r4 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("address");

        r5 = virtualinvoke r1.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>("name", null);

        r6 = virtualinvoke r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("replyTo");

        z0 = virtualinvoke r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isDefault");

        z1 = virtualinvoke r1.<org.json.JSONObject: boolean getBoolean(java.lang.String)>("isCustom");

        $r9 = new com.android.mail.providers.ReplyFromAccount;

        specialinvoke $r9.<com.android.mail.providers.ReplyFromAccount: void <init>(com.android.mail.providers.Account,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(r0, r3, r4, r5, r6, z0, z1);

        r2 = $r9;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r12 = $r8;

        $r10 = <com.android.mail.providers.ReplyFromAccount: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r10, r12, "Could not deserialize replyfromaccount", $r11);

     label4:
        return r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static com.android.mail.providers.ReplyFromAccount deserialize(com.android.mail.providers.Account, java.lang.String)
    {
        com.android.mail.providers.Account r0;
        java.lang.String r1, $r7;
        com.android.mail.providers.ReplyFromAccount r2;
        org.json.JSONException r3, $r5;
        org.json.JSONObject $r4;
        java.lang.Object[] $r6;

        r0 := @parameter0: com.android.mail.providers.Account;

        r1 := @parameter1: java.lang.String;

        r2 = null;

     label1:
        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>(r1);

        r2 = staticinvoke <com.android.mail.providers.ReplyFromAccount: com.android.mail.providers.ReplyFromAccount deserialize(com.android.mail.providers.Account,org.json.JSONObject)>(r0, $r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r7 = <com.android.mail.providers.ReplyFromAccount: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>($r7, r3, "Could not deserialize replyfromaccount", $r6);

     label4:
        return r2;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static boolean matchesAccountOrCustomFrom(com.android.mail.providers.Account, java.lang.String, java.util.List)
    {
        com.android.mail.providers.Account r0;
        java.lang.String r1, r4, $r8, $r9, $r10, $r11, $r13;
        java.util.List r2;
        android.text.util.Rfc822Token[] r3;
        java.util.Iterator r5;
        com.android.mail.providers.ReplyFromAccount r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0;
        android.text.util.Rfc822Token $r7;
        java.lang.Object $r12;

        r0 := @parameter0: com.android.mail.providers.Account;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r3 = staticinvoke <android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>(r1);

        if r3 == null goto label5;

        $i0 = lengthof r3;

        if $i0 <= 0 goto label5;

        $r7 = r3[0];

        $r8 = virtualinvoke $r7.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        r4 = staticinvoke <com.android.mail.utils.Utils: java.lang.String normalizeEmailAddress(java.lang.String)>($r8);

        $r9 = virtualinvoke r0.<com.android.mail.providers.Account: java.lang.String getEmailAddress()>();

        $r10 = staticinvoke <com.android.mail.utils.Utils: java.lang.String normalizeEmailAddress(java.lang.String)>($r9);

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r10, r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r5 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.android.mail.providers.ReplyFromAccount) $r12;

        $r11 = r6.<com.android.mail.providers.ReplyFromAccount: java.lang.String address>;

        $r13 = staticinvoke <com.android.mail.utils.Utils: java.lang.String normalizeEmailAddress(java.lang.String)>($r11);

        $z3 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r13, r4);

        if $z3 == 0 goto label4;

        $z4 = r6.<com.android.mail.providers.ReplyFromAccount: boolean isCustomFrom>;

        if $z4 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        <com.android.mail.providers.ReplyFromAccount: java.lang.String IS_CUSTOM_FROM> = "isCustom";

        <com.android.mail.providers.ReplyFromAccount: java.lang.String IS_DEFAULT> = "isDefault";

        <com.android.mail.providers.ReplyFromAccount: java.lang.String NAME_STRING> = "name";

        <com.android.mail.providers.ReplyFromAccount: java.lang.String REPLY_TO> = "replyTo";

        <com.android.mail.providers.ReplyFromAccount: java.lang.String ADDRESS_STRING> = "address";

        <com.android.mail.providers.ReplyFromAccount: java.lang.String BASE_ACCOUNT_URI> = "baseAccountUri";

        <com.android.mail.providers.ReplyFromAccount: long serialVersionUID> = 1L;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.providers.ReplyFromAccount: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
