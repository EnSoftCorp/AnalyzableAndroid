public class org.apache.commons.io.output.ClosedOutputStream extends java.io.OutputStream
{
    public static final org.apache.commons.io.output.ClosedOutputStream CLOSED_OUTPUT_STREAM;

    public void <init>()
    {
        org.apache.commons.io.output.ClosedOutputStream r0;

        r0 := @this: org.apache.commons.io.output.ClosedOutputStream;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.commons.io.output.ClosedOutputStream r0;
        int i0;
        java.io.IOException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.io.output.ClosedOutputStream;

        i0 := @parameter0: int;

        $r1 = new java.io.IOException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("write(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") failed: stream is closed");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    static void <clinit>()
    {
        org.apache.commons.io.output.ClosedOutputStream $r0;

        $r0 = new org.apache.commons.io.output.ClosedOutputStream;

        specialinvoke $r0.<org.apache.commons.io.output.ClosedOutputStream: void <init>()>();

        <org.apache.commons.io.output.ClosedOutputStream: org.apache.commons.io.output.ClosedOutputStream CLOSED_OUTPUT_STREAM> = $r0;

        return;
    }
}
