public final class org.owasp.html.CssTokens$TokenIterator extends java.lang.Object implements java.util.Iterator
{
    private int tokenIndex;
    private final int limit;
    final org.owasp.html.CssTokens this$0;

    void <init>(org.owasp.html.CssTokens, int)
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        org.owasp.html.CssTokens r1;
        int i0;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        r1 := @parameter0: org.owasp.html.CssTokens;

        i0 := @parameter1: int;

        r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = 0;

        r0.<org.owasp.html.CssTokens$TokenIterator: int limit> = i0;

        return;
    }

    public boolean hasNext()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        boolean $z0;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $z0 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: boolean hasToken()>();

        return $z0;
    }

    public java.lang.String next()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        java.lang.String r1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        r1 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: java.lang.String token()>();

        virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: void advance()>();

        return r1;
    }

    public org.owasp.html.CssTokens$TokenIterator spliceToEnd()
    {
        org.owasp.html.CssTokens$TokenIterator r0, r1, $r4;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        org.owasp.html.CssTokens $r2, $r5;
        org.owasp.html.CssTokens$Brackets $r3;
        java.util.NoSuchElementException $r6;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $z0 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r6 = new java.util.NoSuchElementException;

        specialinvoke $r6.<java.util.NoSuchElementException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        $r3 = $r2.<org.owasp.html.CssTokens: org.owasp.html.CssTokens$Brackets brackets>;

        $i1 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        i0 = virtualinvoke $r3.<org.owasp.html.CssTokens$Brackets: int partner(int)>($i1);

        if i0 >= 0 goto label2;

        return null;

     label2:
        $r4 = new org.owasp.html.CssTokens$TokenIterator;

        $r5 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        specialinvoke $r4.<org.owasp.html.CssTokens$TokenIterator: void <init>(org.owasp.html.CssTokens,int)>($r5, i0);

        r1 = $r4;

        $i2 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i3 = $i2 + 1;

        r1.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = $i3;

        $i4 = i0 + 1;

        r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = $i4;

        return r1;
    }

    public int tokenIndex()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        int $i0;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        return $i0;
    }

    public int startOffset()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        org.owasp.html.CssTokens $r1;
        int[] $r2;
        int $i0, $i1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        $r2 = staticinvoke <org.owasp.html.CssTokens: int[] access$000(org.owasp.html.CssTokens)>($r1);

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i1 = $r2[$i0];

        return $i1;
    }

    public int endOffset()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        org.owasp.html.CssTokens $r1;
        int[] $r2;
        int $i0, $i1, $i2;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        $r2 = staticinvoke <org.owasp.html.CssTokens: int[] access$000(org.owasp.html.CssTokens)>($r1);

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i1 = $i0 + 1;

        $i2 = $r2[$i1];

        return $i2;
    }

    public java.lang.String token()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        org.owasp.html.CssTokens $r1;
        java.lang.String $r2, $r3;
        int $i0, $i1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        $r2 = $r1.<org.owasp.html.CssTokens: java.lang.String normalizedCss>;

        $i0 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: int startOffset()>();

        $i1 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: int endOffset()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r3;
    }

    public boolean hasToken()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $i1 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int limit>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasTokenAfterSpace()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        boolean $z0;
        org.owasp.html.CssTokens$TokenType $r1, $r2;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

     label1:
        $z0 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: boolean hasToken()>();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens$TokenType type()>();

        $r2 = <org.owasp.html.CssTokens$TokenType: org.owasp.html.CssTokens$TokenType WHITESPACE>;

        if $r1 == $r2 goto label2;

        return 1;

     label2:
        virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: void advance()>();

        goto label1;

     label3:
        return 0;
    }

    public org.owasp.html.CssTokens$TokenType type()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        org.owasp.html.CssTokens $r1;
        org.owasp.html.CssTokens$TokenType[] $r2;
        int $i0;
        org.owasp.html.CssTokens$TokenType $r3;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = r0.<org.owasp.html.CssTokens$TokenIterator: org.owasp.html.CssTokens this$0>;

        $r2 = staticinvoke <org.owasp.html.CssTokens: org.owasp.html.CssTokens$TokenType[] access$100(org.owasp.html.CssTokens)>($r1);

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $r3 = $r2[$i0];

        return $r3;
    }

    public void seek(int)
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        int i0;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        i0 := @parameter0: int;

        r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = i0;

        return;
    }

    public void advance()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        boolean $z0;
        int $i0, $i1;
        java.util.NoSuchElementException $r1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $z0 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: boolean hasToken()>();

        if $z0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i1 = $i0 + 1;

        r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = $i1;

        return;
    }

    public void backup()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        int $i0, $i1, $i2;
        java.util.NoSuchElementException $r1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $i0 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        if $i0 != 0 goto label1;

        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>()>();

        throw $r1;

     label1:
        $i1 = r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex>;

        $i2 = $i1 - 1;

        r0.<org.owasp.html.CssTokens$TokenIterator: int tokenIndex> = $i2;

        return;
    }

    public void remove() throws java.lang.UnsupportedOperationException
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public volatile java.lang.Object next()
    {
        org.owasp.html.CssTokens$TokenIterator r0;
        java.lang.String $r1;

        r0 := @this: org.owasp.html.CssTokens$TokenIterator;

        $r1 = virtualinvoke r0.<org.owasp.html.CssTokens$TokenIterator: java.lang.String next()>();

        return $r1;
    }
}
