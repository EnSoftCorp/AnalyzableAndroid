public class com.android.datetimepicker.date.YearPickerView extends android.widget.ListView implements android.widget.AdapterView$OnItemClickListener, com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener
{
    private static final java.lang.String TAG;
    private final com.android.datetimepicker.date.DatePickerController mController;
    private com.android.datetimepicker.date.YearPickerView$YearAdapter mAdapter;
    private int mViewSize;
    private int mChildSize;
    private com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView;

    public void <init>(android.content.Context, com.android.datetimepicker.date.DatePickerController)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        android.content.Context r1;
        com.android.datetimepicker.date.DatePickerController r2, $r5;
        android.view.ViewGroup$LayoutParams r3, $r6;
        android.content.res.Resources r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.StateListDrawable $r7;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.datetimepicker.date.DatePickerController;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context)>(r1);

        r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController> = r2;

        $r5 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        interfaceinvoke $r5.<com.android.datetimepicker.date.DatePickerController: void registerOnDateChangedListener(com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener)>(r0);

        $r6 = new android.view.ViewGroup$LayoutParams;

        specialinvoke $r6.<android.view.ViewGroup$LayoutParams: void <init>(int,int)>(-1, -2);

        r3 = $r6;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.android.datetimepicker.R$dimen: int date_picker_view_animator_height>;

        $i1 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i0);

        r0.<com.android.datetimepicker.date.YearPickerView: int mViewSize> = $i1;

        $i2 = <com.android.datetimepicker.R$dimen: int year_label_height>;

        $i3 = virtualinvoke r4.<android.content.res.Resources: int getDimensionPixelOffset(int)>($i2);

        r0.<com.android.datetimepicker.date.YearPickerView: int mChildSize> = $i3;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setVerticalFadingEdgeEnabled(boolean)>(1);

        $i4 = r0.<com.android.datetimepicker.date.YearPickerView: int mChildSize>;

        $i5 = $i4 / 3;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setFadingEdgeLength(int)>($i5);

        specialinvoke r0.<com.android.datetimepicker.date.YearPickerView: void init(android.content.Context)>(r1);

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)>(r0);

        $r7 = new android.graphics.drawable.StateListDrawable;

        specialinvoke $r7.<android.graphics.drawable.StateListDrawable: void <init>()>();

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setSelector(android.graphics.drawable.Drawable)>($r7);

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setDividerHeight(int)>(0);

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void onDateChanged()>();

        return;
    }

    private void init(android.content.Context)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        android.content.Context r1;
        java.util.ArrayList r2, $r3;
        int i0, $i1, $i2;
        com.android.datetimepicker.date.DatePickerController $r4, $r5;
        com.android.datetimepicker.date.YearPickerView$YearAdapter $r6, $r7;
        java.lang.Object[] $r8;
        java.lang.Integer $r9;
        java.lang.String $r10;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        r1 := @parameter0: android.content.Context;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r2 = $r3;

        $r4 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        i0 = interfaceinvoke $r4.<com.android.datetimepicker.date.DatePickerController: int getMinYear()>();

     label1:
        $r5 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        $i1 = interfaceinvoke $r5.<com.android.datetimepicker.date.DatePickerController: int getMaxYear()>();

        if i0 > $i1 goto label2;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r8);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r6 = new com.android.datetimepicker.date.YearPickerView$YearAdapter;

        $i2 = <com.android.datetimepicker.R$layout: int year_label_text_view>;

        specialinvoke $r6.<com.android.datetimepicker.date.YearPickerView$YearAdapter: void <init>(com.android.datetimepicker.date.YearPickerView,android.content.Context,int,java.util.List)>(r0, r1, $i2, r2);

        r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.YearPickerView$YearAdapter mAdapter> = $r6;

        $r7 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.YearPickerView$YearAdapter mAdapter>;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void setAdapter(android.widget.ListAdapter)>($r7);

        return;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0, $i2;
        long l1;
        com.android.datetimepicker.date.TextViewWithCircularIndicator r3, $r5, $r8, $r9, $r10;
        com.android.datetimepicker.date.DatePickerController $r4, $r6;
        com.android.datetimepicker.date.YearPickerView$YearAdapter $r7;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        interfaceinvoke $r4.<com.android.datetimepicker.date.DatePickerController: void tryVibrate()>();

        r3 = (com.android.datetimepicker.date.TextViewWithCircularIndicator) r2;

        if r3 == null goto label3;

        $r5 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView>;

        if r3 == $r5 goto label2;

        $r8 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView>;

        if $r8 == null goto label1;

        $r9 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView>;

        virtualinvoke $r9.<com.android.datetimepicker.date.TextViewWithCircularIndicator: void drawIndicator(boolean)>(0);

        $r10 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView>;

        virtualinvoke $r10.<com.android.datetimepicker.date.TextViewWithCircularIndicator: void requestLayout()>();

     label1:
        virtualinvoke r3.<com.android.datetimepicker.date.TextViewWithCircularIndicator: void drawIndicator(boolean)>(1);

        virtualinvoke r3.<com.android.datetimepicker.date.TextViewWithCircularIndicator: void requestLayout()>();

        r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView> = r3;

     label2:
        $r6 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        $i2 = staticinvoke <com.android.datetimepicker.date.YearPickerView: int getYearFromTextView(android.widget.TextView)>(r3);

        interfaceinvoke $r6.<com.android.datetimepicker.date.DatePickerController: void onYearSelected(int)>($i2);

        $r7 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.YearPickerView$YearAdapter mAdapter>;

        virtualinvoke $r7.<com.android.datetimepicker.date.YearPickerView$YearAdapter: void notifyDataSetChanged()>();

     label3:
        return;
    }

    private static int getYearFromTextView(android.widget.TextView)
    {
        android.widget.TextView r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @parameter0: android.widget.TextView;

        $r1 = virtualinvoke r0.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public void postSetSelectionCentered(int)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.datetimepicker.date.YearPickerView: int mViewSize>;

        $i4 = $i1 / 2;

        $i2 = r0.<com.android.datetimepicker.date.YearPickerView: int mChildSize>;

        $i3 = $i2 / 2;

        $i5 = $i4 - $i3;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void postSetSelectionFromTop(int,int)>(i0, $i5);

        return;
    }

    public void postSetSelectionFromTop(int, int)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        int i0, i1;
        com.android.datetimepicker.date.YearPickerView$1 $r1;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.datetimepicker.date.YearPickerView$1;

        specialinvoke $r1.<com.android.datetimepicker.date.YearPickerView$1: void <init>(com.android.datetimepicker.date.YearPickerView,int,int)>(r0, i0, i1);

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public int getFirstPositionOffset()
    {
        com.android.datetimepicker.date.YearPickerView r0;
        android.view.View r1;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        r1 = virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: android.view.View getChildAt(int)>(0);

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<android.view.View: int getTop()>();

        return $i0;
    }

    public void onDateChanged()
    {
        com.android.datetimepicker.date.YearPickerView r0;
        com.android.datetimepicker.date.YearPickerView$YearAdapter $r1;
        com.android.datetimepicker.date.DatePickerController $r2, $r4;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        $r1 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.YearPickerView$YearAdapter mAdapter>;

        virtualinvoke $r1.<com.android.datetimepicker.date.YearPickerView$YearAdapter: void notifyDataSetChanged()>();

        $r2 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        $r3 = interfaceinvoke $r2.<com.android.datetimepicker.date.DatePickerController: com.android.datetimepicker.date.MonthAdapter$CalendarDay getSelectedDay()>();

        $i0 = $r3.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: int year>;

        $r4 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        $i1 = interfaceinvoke $r4.<com.android.datetimepicker.date.DatePickerController: int getMinYear()>();

        $i2 = $i0 - $i1;

        virtualinvoke r0.<com.android.datetimepicker.date.YearPickerView: void postSetSelectionCentered(int)>($i2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        android.view.accessibility.AccessibilityEvent r1;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.YearPickerView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $i0 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i0 != 4096 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setFromIndex(int)>(0);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setToIndex(int)>(0);

     label1:
        return;
    }

    static int access$000(android.widget.TextView)
    {
        android.widget.TextView r0;
        int $i0;

        r0 := @parameter0: android.widget.TextView;

        $i0 = staticinvoke <com.android.datetimepicker.date.YearPickerView: int getYearFromTextView(android.widget.TextView)>(r0);

        return $i0;
    }

    static com.android.datetimepicker.date.DatePickerController access$100(com.android.datetimepicker.date.YearPickerView)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        com.android.datetimepicker.date.DatePickerController $r1;

        r0 := @parameter0: com.android.datetimepicker.date.YearPickerView;

        $r1 = r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.DatePickerController mController>;

        return $r1;
    }

    static com.android.datetimepicker.date.TextViewWithCircularIndicator access$202(com.android.datetimepicker.date.YearPickerView, com.android.datetimepicker.date.TextViewWithCircularIndicator)
    {
        com.android.datetimepicker.date.YearPickerView r0;
        com.android.datetimepicker.date.TextViewWithCircularIndicator r1;

        r0 := @parameter0: com.android.datetimepicker.date.YearPickerView;

        r1 := @parameter1: com.android.datetimepicker.date.TextViewWithCircularIndicator;

        r0.<com.android.datetimepicker.date.YearPickerView: com.android.datetimepicker.date.TextViewWithCircularIndicator mSelectedView> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.date.YearPickerView: java.lang.String TAG> = "YearPickerView";

        return;
    }
}
