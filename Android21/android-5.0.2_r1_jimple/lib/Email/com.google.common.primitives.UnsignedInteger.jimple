public final class com.google.common.primitives.UnsignedInteger extends java.lang.Number implements java.lang.Comparable
{
    public static final com.google.common.primitives.UnsignedInteger ZERO;
    public static final com.google.common.primitives.UnsignedInteger ONE;
    public static final com.google.common.primitives.UnsignedInteger MAX_VALUE;
    private final int value;

    private void <init>(int)
    {
        com.google.common.primitives.UnsignedInteger r0;
        int i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Number: void <init>()>();

        $i1 = i0 & -1;

        r0.<com.google.common.primitives.UnsignedInteger: int value> = $i1;

        return;
    }

    public static com.google.common.primitives.UnsignedInteger asUnsigned(int)
    {
        int i0;
        com.google.common.primitives.UnsignedInteger $r0;

        i0 := @parameter0: int;

        $r0 = new com.google.common.primitives.UnsignedInteger;

        specialinvoke $r0.<com.google.common.primitives.UnsignedInteger: void <init>(int)>(i0);

        return $r0;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(long)
    {
        long l0, $l1;
        byte $b2;
        java.lang.Object[] $r0;
        boolean $z0;
        java.lang.Long $r1;
        int $i3;
        com.google.common.primitives.UnsignedInteger $r2;

        l0 := @parameter0: long;

        $l1 = l0 & 4294967295L;

        $b2 = $l1 cmp l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r0 = newarray (java.lang.Object)[1];

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r0[0] = $r1;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "value (%s) is outside the range for an unsigned integer value", $r0);

        $i3 = (int) l0;

        $r2 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i3);

        return $r2;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger)
    {
        java.math.BigInteger r0;
        int $i0, $i1, $i2;
        java.lang.Object[] $r2;
        com.google.common.primitives.UnsignedInteger $r3;
        boolean $z0;

        r0 := @parameter0: java.math.BigInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = virtualinvoke r0.<java.math.BigInteger: int signum()>();

        if $i0 < 0 goto label1;

        $i2 = virtualinvoke r0.<java.math.BigInteger: int bitLength()>();

        if $i2 > 32 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r0;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "value (%s) is outside the range for an unsigned integer value", $r2);

        $i1 = virtualinvoke r0.<java.math.BigInteger: int intValue()>();

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i1);

        return $r3;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.lang.String)
    {
        java.lang.String r0;
        com.google.common.primitives.UnsignedInteger $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int)>(r0, 10);

        return $r1;
    }

    public static com.google.common.primitives.UnsignedInteger valueOf(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        com.google.common.primitives.UnsignedInteger $r1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <com.google.common.primitives.UnsignedInts: int parseUnsignedInt(java.lang.String,int)>(r0, i0);

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i1);

        return $r1;
    }

    public com.google.common.primitives.UnsignedInteger add(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = $i1 + $i0;

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i2);

        return $r3;
    }

    public com.google.common.primitives.UnsignedInteger subtract(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = $i1 - $i0;

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i2);

        return $r3;
    }

    public com.google.common.primitives.UnsignedInteger multiply(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = $i1 * $i0;

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i2);

        return $r3;
    }

    public com.google.common.primitives.UnsignedInteger divide(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = staticinvoke <com.google.common.primitives.UnsignedInts: int divide(int,int)>($i1, $i0);

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i2);

        return $r3;
    }

    public com.google.common.primitives.UnsignedInteger remainder(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1, $r3;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = staticinvoke <com.google.common.primitives.UnsignedInts: int remainder(int,int)>($i1, $i0);

        $r3 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>($i2);

        return $r3;
    }

    public int intValue()
    {
        com.google.common.primitives.UnsignedInteger r0;
        int $i0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        return $i0;
    }

    public long longValue()
    {
        com.google.common.primitives.UnsignedInteger r0;
        int $i0;
        long $l1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $l1 = staticinvoke <com.google.common.primitives.UnsignedInts: long toLong(int)>($i0);

        return $l1;
    }

    public float floatValue()
    {
        com.google.common.primitives.UnsignedInteger r0;
        long $l0;
        float $f0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $f0 = (float) $l0;

        return $f0;
    }

    public double doubleValue()
    {
        com.google.common.primitives.UnsignedInteger r0;
        long $l0;
        double $d0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $d0 = (double) $l0;

        return $d0;
    }

    public java.math.BigInteger bigIntegerValue()
    {
        com.google.common.primitives.UnsignedInteger r0;
        long $l0;
        java.math.BigInteger $r1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $l0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: long longValue()>();

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        return $r1;
    }

    public int compareTo(com.google.common.primitives.UnsignedInteger)
    {
        com.google.common.primitives.UnsignedInteger r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: com.google.common.primitives.UnsignedInteger;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r1.<com.google.common.primitives.UnsignedInteger: int value>;

        $i2 = staticinvoke <com.google.common.primitives.UnsignedInts: int compare(int,int)>($i1, $i0);

        return $i2;
    }

    public int hashCode()
    {
        com.google.common.primitives.UnsignedInteger r0;
        int $i0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $i0 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.primitives.UnsignedInteger r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.google.common.primitives.UnsignedInteger;

        if $z0 == 0 goto label3;

        r2 = (com.google.common.primitives.UnsignedInteger) r1;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $i0 = r2.<com.google.common.primitives.UnsignedInteger: int value>;

        if $i1 != $i0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        com.google.common.primitives.UnsignedInteger r0;
        java.lang.String $r1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        $r1 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: java.lang.String toString(int)>(10);

        return $r1;
    }

    public java.lang.String toString(int)
    {
        com.google.common.primitives.UnsignedInteger r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        i0 := @parameter0: int;

        $i1 = r0.<com.google.common.primitives.UnsignedInteger: int value>;

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInts: java.lang.String toString(int,int)>($i1, i0);

        return $r1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        com.google.common.primitives.UnsignedInteger r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: com.google.common.primitives.UnsignedInteger;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.common.primitives.UnsignedInteger) r1;

        $i0 = virtualinvoke r0.<com.google.common.primitives.UnsignedInteger: int compareTo(com.google.common.primitives.UnsignedInteger)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        com.google.common.primitives.UnsignedInteger $r0, $r1, $r2;

        $r0 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>(0);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger ZERO> = $r0;

        $r1 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>(1);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger ONE> = $r1;

        $r2 = staticinvoke <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger asUnsigned(int)>(-1);

        <com.google.common.primitives.UnsignedInteger: com.google.common.primitives.UnsignedInteger MAX_VALUE> = $r2;

        return;
    }
}
