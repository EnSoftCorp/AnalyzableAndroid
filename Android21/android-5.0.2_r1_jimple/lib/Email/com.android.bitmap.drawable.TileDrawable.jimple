public class com.android.bitmap.drawable.TileDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Drawable$Callback
{
    private final com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts;
    private final android.graphics.Paint mPaint;
    private final android.graphics.drawable.Drawable mInner;
    private final int mInnerWidth;
    private final int mInnerHeight;
    protected final android.animation.ValueAnimator mFadeOutAnimator;

    public void <init>(android.graphics.drawable.Drawable, int, int, int, com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.drawable.Drawable r1, $r9, $r10;
        int i0, i1, i2;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r2;
        android.graphics.Paint $r3;
        int[] $r4;
        android.animation.ValueAnimator $r5, $r6, $r8;
        long $l3;
        com.android.bitmap.drawable.TileDrawable$1 $r7;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint> = $r3;

        r0.<com.android.bitmap.drawable.TileDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts> = r2;

        if r1 == null goto label1;

        $r10 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        goto label2;

     label1:
        $r10 = null;

     label2:
        r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner> = $r10;

        r0.<com.android.bitmap.drawable.TileDrawable: int mInnerWidth> = i0;

        r0.<com.android.bitmap.drawable.TileDrawable: int mInnerHeight> = i1;

        if r1 == null goto label3;

        $r9 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

     label3:
        $r4 = newarray (int)[2];

        $r4[0] = 255;

        $r4[1] = 0;

        $r5 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r4);

        $l3 = (long) i2;

        $r6 = virtualinvoke $r5.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l3);

        r0.<com.android.bitmap.drawable.TileDrawable: android.animation.ValueAnimator mFadeOutAnimator> = $r6;

        $r8 = r0.<com.android.bitmap.drawable.TileDrawable: android.animation.ValueAnimator mFadeOutAnimator>;

        $r7 = new com.android.bitmap.drawable.TileDrawable$1;

        specialinvoke $r7.<com.android.bitmap.drawable.TileDrawable$1: void <init>(com.android.bitmap.drawable.TileDrawable)>(r0);

        virtualinvoke $r8.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r7);

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void reset()>();

        return;
    }

    public void reset()
    {
        com.android.bitmap.drawable.TileDrawable r0;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void setAlpha(int)>(0);

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean setVisible(boolean)>(0);

        return;
    }

    public android.graphics.drawable.Drawable getInnerDrawable()
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        return $r1;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.Rect r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.graphics.drawable.Drawable $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>(r1);

        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r2 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, 0, 0);

        goto label3;

     label2:
        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i4 = $i3 / 2;

        $i7 = $i2 + $i4;

        $i5 = r0.<com.android.bitmap.drawable.TileDrawable: int mInnerWidth>;

        $i6 = $i5 / 2;

        i0 = $i7 - $i6;

        $i8 = r1.<android.graphics.Rect: int top>;

        $i9 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i10 = $i9 / 2;

        $i12 = $i8 + $i10;

        $i11 = r0.<com.android.bitmap.drawable.TileDrawable: int mInnerHeight>;

        $i13 = $i11 / 2;

        i1 = $i12 - $i13;

        $r4 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        $i15 = r0.<com.android.bitmap.drawable.TileDrawable: int mInnerWidth>;

        $i16 = i0 + $i15;

        $i14 = r0.<com.android.bitmap.drawable.TileDrawable: int mInnerHeight>;

        $i17 = i1 + $i14;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, $i16, $i17);

     label3:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2;
        boolean $z0;
        android.graphics.Paint $r2, $r4, $r5, $r7, $r10;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r3;
        android.graphics.Rect $r6;
        android.graphics.drawable.Drawable $r8, $r9;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $z0 = virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean isVisible()>();

        if $z0 != 0 goto label1;

        $r10 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        $i2 = virtualinvoke $r10.<android.graphics.Paint: int getAlpha()>();

        if $i2 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        $r4 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        $r3 = r0.<com.android.bitmap.drawable.TileDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $i1 = $r3.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int backgroundColor>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i1);

        $r5 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAlpha(int)>(i0);

        $r6 = virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Rect getBounds()>();

        $r7 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>($r6, $r7);

        $r8 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r8 == null goto label2;

        $r9 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label2:
        return;
    }

    public void setAlpha(int)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        int i0, i1;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>(i0);

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void setInnerAlpha(int)>(i0);

        if i0 == i1 goto label1;

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;
        android.graphics.drawable.Drawable $r4, $r5;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        $r4 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label1:
        return;
    }

    public int getOpacity()
    {
        com.android.bitmap.drawable.TileDrawable r0;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        return 0;
    }

    protected int getCurrentAlpha()
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public boolean setVisible(boolean)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        boolean z0, $z1;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        z0 := @parameter0: boolean;

        $z1 = virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean setVisible(boolean,boolean)>(z0, 1);

        return $z1;
    }

    public boolean setVisible(boolean, boolean)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        boolean z0, z1, z2, $z3;
        android.graphics.drawable.Drawable $r1, $r5;
        android.graphics.Paint $r2;
        int $i0;
        android.animation.ValueAnimator $r3, $r4;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r1 == null goto label1;

        $r5 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

     label1:
        z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        if z2 == 0 goto label3;

        $z3 = virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean isVisible()>();

        if $z3 == 0 goto label2;

        $r4 = r0.<com.android.bitmap.drawable.TileDrawable: android.animation.ValueAnimator mFadeOutAnimator>;

        virtualinvoke $r4.<android.animation.ValueAnimator: void cancel()>();

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void setAlpha(int)>(255);

        goto label3;

     label2:
        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r2.<android.graphics.Paint: int getAlpha()>();

        if $i0 != 255 goto label3;

        $r3 = r0.<com.android.bitmap.drawable.TileDrawable: android.animation.ValueAnimator mFadeOutAnimator>;

        virtualinvoke $r3.<android.animation.ValueAnimator: void start()>();

     label3:
        return z2;
    }

    protected boolean onLevelChange(int)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        $z1 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean setLevel(int)>(i0);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean onLevelChange(int)>(i0);

        return $z0;
    }

    public void setInnerAlpha(int)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        int i0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bitmap.drawable.TileDrawable: android.graphics.drawable.Drawable mInner>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

     label1:
        return;
    }

    public void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void invalidateSelf()>();

        return;
    }

    public void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;
        long l0;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        l0 := @parameter2: long;

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void scheduleSelf(java.lang.Runnable,long)>(r2, l0);

        return;
    }

    public void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        com.android.bitmap.drawable.TileDrawable r0;
        android.graphics.drawable.Drawable r1;
        java.lang.Runnable r2;

        r0 := @this: com.android.bitmap.drawable.TileDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: java.lang.Runnable;

        virtualinvoke r0.<com.android.bitmap.drawable.TileDrawable: void unscheduleSelf(java.lang.Runnable)>(r2);

        return;
    }
}
