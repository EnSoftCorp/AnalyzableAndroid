public class com.android.email2.ui.MailActivityEmail extends com.android.mail.ui.MailActivity
{
    public static boolean DEBUG;
    public static final java.lang.String LOG_TAG;
    public static boolean DEBUG_EXCHANGE;
    public static boolean DEBUG_VERBOSE;
    public static boolean DEBUG_FILE;
    private static final int MATCH_LEGACY_SHORTCUT_INTENT;
    private static final android.content.UriMatcher sUrlMatcher;

    public void <init>()
    {
        com.android.email2.ui.MailActivityEmail r0;

        r0 := @this: com.android.email2.ui.MailActivityEmail;

        specialinvoke r0.<com.android.mail.ui.MailActivity: void <init>()>();

        return;
    }

    public static void setServicesEnabledAsync(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        boolean $z0;
        com.android.email2.ui.MailActivityEmail$1 $r2;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(2131558420);

        if $z0 == 0 goto label1;

        $r2 = new com.android.email2.ui.MailActivityEmail$1;

        specialinvoke $r2.<com.android.email2.ui.MailActivityEmail$1: void <init>(android.content.Context)>(r0);

        staticinvoke <com.android.emailcommon.utility.EmailAsyncTask: com.android.emailcommon.utility.EmailAsyncTask runAsyncParallel(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    public static boolean setServicesEnabledSync(android.content.Context)
    {
        android.content.Context r0;
        android.database.Cursor r1;
        boolean z0, z1, $z2;
        java.lang.Throwable r2, $r6;
        android.content.ContentResolver $r3;
        java.lang.String[] $r4;
        android.net.Uri $r5;
        int $i0;

        r0 := @parameter0: android.content.Context;

        staticinvoke <com.android.emailcommon.provider.EmailContent: void init(android.content.Context)>(r0);

        r1 = null;

     label1:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = <com.android.emailcommon.provider.Account: android.net.Uri CONTENT_URI>;

        $r4 = <com.android.emailcommon.provider.Account: java.lang.String[] ID_PROJECTION>;

        r1 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r4, null, null, null);

        if r1 == null goto label2;

        $i0 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i0 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

        staticinvoke <com.android.email2.ui.MailActivityEmail: void setServicesEnabled(android.content.Context,boolean)>(r0, z0);

        z1 = z0;

     label4:
        if r1 == null goto label5;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label5:
        return z1;

     label6:
        $r6 := @caughtexception;

        r2 = $r6;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<android.database.Cursor: void close()>();

     label8:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private static void setServicesEnabled(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.content.pm.PackageManager r1;
        android.content.ComponentName $r2;
        android.content.Intent $r3;
        com.android.email.NotificationController $r4;
        byte $b0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = new android.content.ComponentName;

        specialinvoke $r2.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/service/AttachmentService");

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 2;

     label2:
        virtualinvoke r1.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>($r2, $b0, 1);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/email/service/AttachmentService");

        staticinvoke <com.android.email2.ui.MailActivityEmail: void startOrStopService(boolean,android.content.Context,android.content.Intent)>(z0, r0, $r3);

        $r4 = staticinvoke <com.android.email.NotificationController: com.android.email.NotificationController getInstance(android.content.Context)>(r0);

        virtualinvoke $r4.<com.android.email.NotificationController: void watchForMessages()>();

        return;
    }

    private static void startOrStopService(boolean, android.content.Context, android.content.Intent)
    {
        boolean z0;
        android.content.Context r0;
        android.content.Intent r1;

        z0 := @parameter0: boolean;

        r0 := @parameter1: android.content.Context;

        r1 := @parameter2: android.content.Intent;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<android.content.Context: boolean stopService(android.content.Intent)>(r1);

     label2:
        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.email2.ui.MailActivityEmail r0;
        android.os.Bundle r1;
        android.content.Intent r2, r5;
        android.net.Uri r3, $r9;
        int i0;
        long l1, $l2;
        com.android.emailcommon.provider.Mailbox r4;
        boolean $z0, $z1;
        android.content.UriMatcher $r6;
        java.lang.Object[] $r7;
        java.lang.String $r8;
        com.android.email.Preferences r10;

        r0 := @this: com.android.email2.ui.MailActivityEmail;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<com.android.email2.ui.MailActivityEmail: android.content.Intent getIntent()>();

        if r2 == null goto label1;

        $r9 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        r3 = $r9;

        if r3 == null goto label5;

        $r6 = <com.android.email2.ui.MailActivityEmail: android.content.UriMatcher sUrlMatcher>;

        i0 = virtualinvoke $r6.<android.content.UriMatcher: int match(android.net.Uri)>(r3);

        lookupswitch(i0)
        {
            case 1: goto label3;
            default: goto label5;
        };

     label3:
        l1 = staticinvoke <com.android.emailcommon.utility.IntentUtilities: long getMailboxIdFromIntent(android.content.Intent)>(r2);

        r4 = staticinvoke <com.android.emailcommon.provider.Mailbox: com.android.emailcommon.provider.Mailbox restoreMailboxWithId(android.content.Context,long)>(r0, l1);

        if r4 != null goto label4;

        $r8 = <com.android.email2.ui.MailActivityEmail: java.lang.String LOG_TAG>;

        $r7 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r8, "unable to restore mailbox", $r7);

        goto label5;

     label4:
        $l2 = r4.<com.android.emailcommon.provider.Mailbox: long mAccountKey>;

        r5 = specialinvoke r0.<com.android.email2.ui.MailActivityEmail: android.content.Intent getViewIntent(long,long)>($l2, l1);

        if r5 == null goto label5;

        virtualinvoke r0.<com.android.email2.ui.MailActivityEmail: void setIntent(android.content.Intent)>(r5);

        goto label5;

     label5:
        specialinvoke r0.<com.android.mail.ui.MailActivity: void onCreate(android.os.Bundle)>(r1);

        r10 = staticinvoke <com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>(r0);

        $z0 = virtualinvoke r10.<com.android.email.Preferences: boolean getEnableDebugLogging()>();

        <com.android.email2.ui.MailActivityEmail: boolean DEBUG> = $z0;

        $z1 = virtualinvoke r10.<com.android.email.Preferences: boolean getEnableStrictMode()>();

        staticinvoke <com.android.email2.ui.MailActivityEmail: void enableStrictMode(boolean)>($z1);

        staticinvoke <com.android.emailcommon.TempDirectory: void setTempDirectory(android.content.Context)>(r0);

        staticinvoke <com.android.email2.ui.MailActivityEmail: void updateLoggingFlags(android.content.Context)>(r0);

        staticinvoke <com.android.email2.ui.MailActivityEmail: void setServicesEnabledAsync(android.content.Context)>(r0);

        return;
    }

    public static void updateLoggingFlags(android.content.Context)
    {
        android.content.Context r0;
        com.android.email.Preferences r1;
        byte b0, b1, b2, b3, b4, $b5, $b6, $b7, $b8, $b9, $b10;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.email.Preferences: com.android.email.Preferences getPreferences(android.content.Context)>(r0);

        $z0 = virtualinvoke r1.<com.android.email.Preferences: boolean getEnableDebugLogging()>();

        if $z0 == 0 goto label1;

        $b9 = 1;

        goto label2;

     label1:
        $b9 = 0;

     label2:
        b0 = $b9;

        $z1 = virtualinvoke r1.<com.android.email.Preferences: boolean getEnableExchangeLogging()>();

        if $z1 == 0 goto label3;

        $b10 = 2;

        goto label4;

     label3:
        $b10 = 0;

     label4:
        b1 = $b10;

        $z2 = virtualinvoke r1.<com.android.email.Preferences: boolean getEnableExchangeFileLogging()>();

        if $z2 == 0 goto label5;

        $b8 = 4;

        goto label6;

     label5:
        $b8 = 0;

     label6:
        b2 = $b8;

        $z3 = virtualinvoke r1.<com.android.email.Preferences: boolean getEnableStrictMode()>();

        if $z3 == 0 goto label7;

        $b7 = 8;

        goto label8;

     label7:
        $b7 = 0;

     label8:
        b3 = $b7;

        $b5 = b0 | b1;

        $b6 = $b5 | b2;

        b4 = $b6 | b3;

        staticinvoke <com.android.email.service.EmailServiceUtils: void setRemoteServicesLogging(android.content.Context,int)>(r0, b4);

        return;
    }

    public static void log(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.lang.Object[] $r1;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int d(java.lang.String,java.lang.String,java.lang.Object[])>($r2, r0, $r1);

        return;
    }

    public static void enableStrictMode(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        staticinvoke <com.android.emailcommon.utility.Utility: void enableStrictMode(boolean)>(z0);

        return;
    }

    private android.content.Intent getViewIntent(long, long)
    {
        com.android.email2.ui.MailActivityEmail r0;
        long l0, l1;
        android.content.ContentResolver r1;
        android.database.Cursor r2, r28;
        com.android.mail.providers.Account r3;
        java.lang.Throwable r4, r5, $r26, $r27;
        android.net.Uri $r6, $r8, $r15;
        java.lang.String[] $r7, $r9;
        boolean $z0, $z1;
        java.lang.Object[] $r10, $r19, $r22;
        java.lang.String $r11, $r17, $r25;
        java.lang.Long $r12, $r13, $r20, $r21, $r24;
        com.android.mail.providers.Folder $r14, r29;
        com.android.mail.utils.FolderUri $r16;
        android.content.Intent $r18;
        com.android.mail.providers.Account$Builder $r23;

        r0 := @this: com.android.email2.ui.MailActivityEmail;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 = virtualinvoke r0.<com.android.email2.ui.MailActivityEmail: android.content.ContentResolver getContentResolver()>();

        $r6 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uiaccount", l0);

        $r7 = <com.android.mail.providers.UIProvider: java.lang.String[] ACCOUNTS_PROJECTION_NO_CAPABILITIES>;

        r2 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r6, $r7, null, null, null);

        if r2 != null goto label01;

        $r25 = <com.android.email2.ui.MailActivityEmail: java.lang.String LOG_TAG>;

        $r22 = newarray (java.lang.Object)[1];

        $r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r22[0] = $r24;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r25, "Null account cursor for mAccountId %d", $r22);

        return null;

     label01:
        r3 = null;

     label02:
        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label03;

        $r23 = staticinvoke <com.android.mail.providers.Account: com.android.mail.providers.Account$Builder builder()>();

        r3 = virtualinvoke $r23.<com.android.mail.providers.Account$Builder: com.android.mail.providers.Account buildFrom(android.database.Cursor)>(r2);

     label03:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label06;

     label04:
        $r26 := @caughtexception;

        r4 = $r26;

     label05:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        throw r4;

     label06:
        $r8 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uifolder", l1);

        $r9 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION>;

        r28 = virtualinvoke r1.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, null, null, null);

        if r28 != null goto label07;

        $r17 = <com.android.email2.ui.MailActivityEmail: java.lang.String LOG_TAG>;

        $r19 = newarray (java.lang.Object)[2];

        $r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r19[0] = $r21;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r19[1] = $r20;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r17, "Null folder cursor for account %d, mailbox %d", $r19);

        return null;

     label07:
        $z1 = interfaceinvoke r28.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 == 0 goto label08;

        $r14 = new com.android.mail.providers.Folder;

        specialinvoke $r14.<com.android.mail.providers.Folder: void <init>(android.database.Cursor)>(r28);

        r29 = $r14;

        goto label10;

     label08:
        $r11 = <com.android.email2.ui.MailActivityEmail: java.lang.String LOG_TAG>;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r10[0] = $r12;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r10[1] = $r13;

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r11, "Empty folder cursor for account %d, mailbox %d", $r10);

     label09:
        interfaceinvoke r28.<android.database.Cursor: void close()>();

        return null;

     label10:
        interfaceinvoke r28.<android.database.Cursor: void close()>();

        goto label13;

     label11:
        $r27 := @caughtexception;

        r5 = $r27;

     label12:
        interfaceinvoke r28.<android.database.Cursor: void close()>();

        throw r5;

     label13:
        $r16 = r29.<com.android.mail.providers.Folder: com.android.mail.utils.FolderUri folderUri>;

        $r15 = $r16.<com.android.mail.utils.FolderUri: android.net.Uri fullUri>;

        $r18 = staticinvoke <com.android.mail.utils.Utils: android.content.Intent createViewFolderIntent(android.content.Context,android.net.Uri,com.android.mail.providers.Account)>(r0, $r15, r3);

        return $r18;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label09 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        android.content.UriMatcher $r1, $r2;

        <com.android.email2.ui.MailActivityEmail: int MATCH_LEGACY_SHORTCUT_INTENT> = 1;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.email2.ui.MailActivityEmail: java.lang.String LOG_TAG> = $r0;

        $r1 = new android.content.UriMatcher;

        specialinvoke $r1.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.android.email2.ui.MailActivityEmail: android.content.UriMatcher sUrlMatcher> = $r1;

        $r2 = <com.android.email2.ui.MailActivityEmail: android.content.UriMatcher sUrlMatcher>;

        virtualinvoke $r2.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("ui.email.android.com", "view/mailbox", 1);

        return;
    }
}
