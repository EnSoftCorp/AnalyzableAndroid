class com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress extends com.android.bitmap.drawable.TileDrawable
{
    private final android.animation.ValueAnimator mRotateAnimator;

    public void <init>(android.graphics.drawable.Drawable, android.content.res.Resources, int, int, int, com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress r0;
        android.graphics.drawable.Drawable r1;
        android.content.res.Resources r2;
        int i0, i1, i2, $i3, $i4;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r3;
        int[] $r4;
        android.animation.ValueAnimator $r5, $r6, $r8, $r9, $r10, $r12;
        long $l5;
        android.view.animation.LinearInterpolator $r7;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$1 $r11;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$2 $r13;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: android.content.res.Resources;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<com.android.bitmap.drawable.TileDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>(r1, i0, i1, i2, r3);

        $r4 = newarray (int)[2];

        $r4[0] = 0;

        $r4[1] = 10000;

        $r5 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r4);

        $i3 = <com.android.bitmap.R$integer: int bitmap_progress_animation_duration>;

        $i4 = virtualinvoke r2.<android.content.res.Resources: int getInteger(int)>($i3);

        $l5 = (long) $i4;

        $r6 = virtualinvoke $r5.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>($l5);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator> = $r6;

        $r8 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        $r7 = new android.view.animation.LinearInterpolator;

        specialinvoke $r7.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke $r8.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r7);

        $r9 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        virtualinvoke $r9.<android.animation.ValueAnimator: void setRepeatCount(int)>(-1);

        $r10 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        $r11 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$1;

        specialinvoke $r11.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$1: void <init>(com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress)>(r0);

        virtualinvoke $r10.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r11);

        $r12 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mFadeOutAnimator>;

        $r13 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$2;

        specialinvoke $r13.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress$2: void <init>(com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress)>(r0);

        virtualinvoke $r12.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r13);

        return;
    }

    public boolean setVisible(boolean)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress r0;
        boolean z0, z1, $z2;
        int $i0;
        android.animation.ValueAnimator $r1, $r2, $r3, $r4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress;

        z0 := @parameter0: boolean;

        z1 = specialinvoke r0.<com.android.bitmap.drawable.TileDrawable: boolean setVisible(boolean)>(z0);

        if z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean isVisible()>();

        if $z2 == 0 goto label1;

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        virtualinvoke $r4.<android.animation.ValueAnimator: void start()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: int getCurrentAlpha()>();

        if $i0 != 0 goto label2;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        virtualinvoke $r2.<android.animation.ValueAnimator: void cancel()>();

     label2:
        return z1;
    }

    static android.animation.ValueAnimator access$400(com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress r0;
        android.animation.ValueAnimator $r1;

        r0 := @parameter0: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: android.animation.ValueAnimator mRotateAnimator>;

        return $r1;
    }
}
