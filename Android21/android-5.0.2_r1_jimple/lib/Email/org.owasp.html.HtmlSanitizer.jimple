public final class org.owasp.html.HtmlSanitizer extends java.lang.Object
{

    public void <init>()
    {
        org.owasp.html.HtmlSanitizer r0;

        r0 := @this: org.owasp.html.HtmlSanitizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sanitize(java.lang.String, org.owasp.html.HtmlSanitizer$Policy)
    {
        java.lang.String r0, $r11, $r12, $r13, $r14, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30;
        org.owasp.html.HtmlSanitizer$Policy r1;
        org.owasp.html.TagBalancingHtmlStreamEventReceiver r2, $r7;
        org.owasp.html.HtmlLexer r3, $r8;
        java.util.LinkedList r4;
        org.owasp.html.HtmlToken r5, r6, $r28;
        boolean z0, $z1, $z2, $z7;
        org.owasp.html.HtmlTokenType $r9, $r17, $r26, $r27;
        int[] $r10, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        char $c5;
        java.lang.Object $r15, $r19;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.owasp.html.HtmlSanitizer$Policy;

        if r0 != null goto label01;

        r0 = "";

     label01:
        $r7 = new org.owasp.html.TagBalancingHtmlStreamEventReceiver;

        specialinvoke $r7.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void <init>(org.owasp.html.HtmlStreamEventReceiver)>(r1);

        r2 = $r7;

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void setNestingLimit(int)>(256);

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void openDocument()>();

        $r8 = new org.owasp.html.HtmlLexer;

        specialinvoke $r8.<org.owasp.html.HtmlLexer: void <init>(java.lang.String)>(r0);

        r3 = $r8;

        r4 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

     label02:
        $z1 = virtualinvoke r3.<org.owasp.html.HtmlLexer: boolean hasNext()>();

        if $z1 == 0 goto label18;

        r5 = virtualinvoke r3.<org.owasp.html.HtmlLexer: org.owasp.html.HtmlToken next()>();

        $r10 = <org.owasp.html.HtmlSanitizer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r9 = r5.<org.owasp.html.HtmlToken: org.owasp.html.HtmlTokenType type>;

        $i0 = virtualinvoke $r9.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $i2 = $r10[$i0];

        tableswitch($i2)
        {
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            default: goto label17;
        };

     label03:
        $i3 = r5.<org.owasp.html.HtmlToken: int start>;

        $i1 = r5.<org.owasp.html.HtmlToken: int end>;

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i1);

        $r12 = staticinvoke <org.owasp.html.Encoding: java.lang.String decodeHtml(java.lang.String)>($r11);

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void text(java.lang.String)>($r12);

        goto label17;

     label04:
        $i20 = r5.<org.owasp.html.HtmlToken: int start>;

        $i19 = r5.<org.owasp.html.HtmlToken: int end>;

        $r30 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i20, $i19);

        $r29 = staticinvoke <org.owasp.html.Encoding: java.lang.String stripBannedCodeunits(java.lang.String)>($r30);

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void text(java.lang.String)>($r29);

        goto label17;

     label05:
        $i4 = r5.<org.owasp.html.HtmlToken: int start>;

        $i6 = $i4 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        if $c5 != 47 goto label07;

        $i17 = r5.<org.owasp.html.HtmlToken: int start>;

        $i18 = $i17 + 2;

        $i16 = r5.<org.owasp.html.HtmlToken: int end>;

        $r25 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i18, $i16);

        $r24 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>($r25);

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void closeTag(java.lang.String)>($r24);

     label06:
        $z7 = virtualinvoke r3.<org.owasp.html.HtmlLexer: boolean hasNext()>();

        if $z7 == 0 goto label17;

        $r28 = virtualinvoke r3.<org.owasp.html.HtmlLexer: org.owasp.html.HtmlToken next()>();

        $r26 = $r28.<org.owasp.html.HtmlToken: org.owasp.html.HtmlTokenType type>;

        $r27 = <org.owasp.html.HtmlTokenType: org.owasp.html.HtmlTokenType TAGEND>;

        if $r26 == $r27 goto label17;

        goto label06;

     label07:
        virtualinvoke r4.<java.util.LinkedList: void clear()>();

        z0 = 1;

     label08:
        $z2 = virtualinvoke r3.<org.owasp.html.HtmlLexer: boolean hasNext()>();

        if $z2 == 0 goto label15;

        r6 = virtualinvoke r3.<org.owasp.html.HtmlLexer: org.owasp.html.HtmlToken next()>();

        $r16 = <org.owasp.html.HtmlSanitizer$1: int[] $SwitchMap$org$owasp$html$HtmlTokenType>;

        $r17 = r6.<org.owasp.html.HtmlToken: org.owasp.html.HtmlTokenType type>;

        $i10 = virtualinvoke $r17.<org.owasp.html.HtmlTokenType: int ordinal()>();

        $i12 = $r16[$i10];

        tableswitch($i12)
        {
            case 1: goto label09;
            case 2: goto label12;
            case 3: goto label13;
            default: goto label14;
        };

     label09:
        if z0 != 0 goto label10;

        $r19 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getLast()>();

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r19);

        goto label11;

     label10:
        z0 = 0;

     label11:
        $i11 = r6.<org.owasp.html.HtmlToken: int start>;

        $i13 = r6.<org.owasp.html.HtmlToken: int end>;

        $r18 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i11, $i13);

        $r20 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>($r18);

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r20);

        goto label14;

     label12:
        $i15 = r6.<org.owasp.html.HtmlToken: int start>;

        $i14 = r6.<org.owasp.html.HtmlToken: int end>;

        $r21 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i15, $i14);

        $r22 = staticinvoke <org.owasp.html.HtmlSanitizer: java.lang.String stripQuotes(java.lang.String)>($r21);

        $r23 = staticinvoke <org.owasp.html.Encoding: java.lang.String decodeHtml(java.lang.String)>($r22);

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r23);

        z0 = 1;

        goto label14;

     label13:
        goto label15;

     label14:
        goto label08;

     label15:
        if z0 != 0 goto label16;

        $r15 = virtualinvoke r4.<java.util.LinkedList: java.lang.Object getLast()>();

        virtualinvoke r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r15);

     label16:
        $i7 = r5.<org.owasp.html.HtmlToken: int start>;

        $i8 = $i7 + 1;

        $i9 = r5.<org.owasp.html.HtmlToken: int end>;

        $r14 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, $i9);

        $r13 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>($r14);

        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void openTag(java.lang.String,java.util.List)>($r13, r4);

        goto label17;

     label17:
        goto label02;

     label18:
        virtualinvoke r2.<org.owasp.html.TagBalancingHtmlStreamEventReceiver: void closeDocument()>();

        return;
    }

    private static java.lang.String stripQuotes(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i3, $i4;
        char c1, $c5;
        byte b2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 <= 0 goto label3;

        $i3 = i0 - 1;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        if c1 == 34 goto label1;

        if c1 != 39 goto label3;

     label1:
        b2 = 0;

        if i0 == 1 goto label2;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        if c1 != $c5 goto label2;

        b2 = 1;

     label2:
        $i4 = i0 - 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(b2, $i4);

        return $r1;

     label3:
        return r0;
    }
}
