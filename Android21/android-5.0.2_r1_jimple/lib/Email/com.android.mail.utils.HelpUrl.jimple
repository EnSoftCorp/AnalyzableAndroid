public final class com.android.mail.utils.HelpUrl extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;

    private void <init>()
    {
        com.android.mail.utils.HelpUrl r0;

        r0 := @this: com.android.mail.utils.HelpUrl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri getHelpUrl(android.content.Context, android.net.Uri, java.lang.String)
    {
        android.content.Context r0;
        android.net.Uri r1, $r8;
        java.lang.String r2, $r4, $r6, $r9, $r10, $r11;
        android.net.Uri$Builder r3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("topic must be non-empty");

        throw $r12;

     label1:
        $r4 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("%locale%");

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r10 = staticinvoke <com.android.mail.utils.HelpUrl: java.lang.String getLocale()>();

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%locale%", $r10);

        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r11);

     label2:
        r3 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("p", r2);

        $r6 = staticinvoke <com.android.mail.utils.HelpUrl: java.lang.String getVersion(android.content.Context)>(r0);

        virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("version", $r6);

        $r8 = virtualinvoke r3.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r8;
    }

    private static java.lang.String getLocale()
    {
        java.util.Locale r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String $r2, $r5, $r6, $r8;

        r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r5 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toLowerCase()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static java.lang.String getVersion(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r5, $r8, $r11;
        android.content.pm.PackageInfo r2;
        android.content.pm.ApplicationInfo $r3;
        android.content.pm.PackageManager $r4;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException $r6;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.Object[] $r12;
        java.lang.IllegalStateException $r13;

        r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        r1 = $r3.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label1:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>(r1, 0);

        $i0 = r2.<android.content.pm.PackageInfo: int versionCode>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r8 = <com.android.mail.utils.HelpUrl: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error finding package name for application");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int e(java.lang.String,java.lang.String,java.lang.Object[])>($r8, $r11, $r12);

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("unable to determine package name for application");

        throw $r13;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.android.mail.utils.LogTag: java.lang.String getLogTag()>();

        <com.android.mail.utils.HelpUrl: java.lang.String LOG_TAG> = $r0;

        return;
    }
}
