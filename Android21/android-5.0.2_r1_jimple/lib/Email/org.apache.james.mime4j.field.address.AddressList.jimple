public class org.apache.james.mime4j.field.address.AddressList extends java.lang.Object
{
    private java.util.ArrayList addresses;

    public void <init>(java.util.ArrayList, boolean)
    {
        org.apache.james.mime4j.field.address.AddressList r0;
        java.util.ArrayList r1, $r2, $r3;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.field.address.AddressList;

        r1 := @parameter0: java.util.ArrayList;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

     label2:
        r0.<org.apache.james.mime4j.field.address.AddressList: java.util.ArrayList addresses> = $r3;

        goto label4;

     label3:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(0);

        r0.<org.apache.james.mime4j.field.address.AddressList: java.util.ArrayList addresses> = $r2;

     label4:
        return;
    }

    public int size()
    {
        org.apache.james.mime4j.field.address.AddressList r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: org.apache.james.mime4j.field.address.AddressList;

        $r1 = r0.<org.apache.james.mime4j.field.address.AddressList: java.util.ArrayList addresses>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public org.apache.james.mime4j.field.address.Address get(int)
    {
        org.apache.james.mime4j.field.address.AddressList r0;
        int i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        org.apache.james.mime4j.field.address.Address $r4;

        r0 := @this: org.apache.james.mime4j.field.address.AddressList;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        $i1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: int size()>();

        if $i1 > i0 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = r0.<org.apache.james.mime4j.field.address.AddressList: java.util.ArrayList addresses>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (org.apache.james.mime4j.field.address.Address) $r3;

        return $r4;
    }

    public org.apache.james.mime4j.field.address.MailboxList flatten()
    {
        org.apache.james.mime4j.field.address.AddressList r0;
        boolean z0, $z1;
        int i0, i1, $i2, $i3;
        org.apache.james.mime4j.field.address.Address r1, $r6;
        java.util.ArrayList $r2, $r5, r7;
        org.apache.james.mime4j.field.address.MailboxList $r3, $r4;

        r0 := @this: org.apache.james.mime4j.field.address.AddressList;

        z0 = 0;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: int size()>();

        if i0 >= $i2 goto label3;

        $r6 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>(i0);

        $z1 = $r6 instanceof org.apache.james.mime4j.field.address.Mailbox;

        if $z1 != 0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        $r4 = new org.apache.james.mime4j.field.address.MailboxList;

        $r5 = r0.<org.apache.james.mime4j.field.address.AddressList: java.util.ArrayList addresses>;

        specialinvoke $r4.<org.apache.james.mime4j.field.address.MailboxList: void <init>(java.util.ArrayList,boolean)>($r5, 1);

        return $r4;

     label4:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r7 = $r2;

        i1 = 0;

     label5:
        $i3 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: int size()>();

        if i1 >= $i3 goto label6;

        r1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>(i1);

        virtualinvoke r1.<org.apache.james.mime4j.field.address.Address: void addMailboxesTo(java.util.ArrayList)>(r7);

        i1 = i1 + 1;

        goto label5;

     label6:
        $r3 = new org.apache.james.mime4j.field.address.MailboxList;

        specialinvoke $r3.<org.apache.james.mime4j.field.address.MailboxList: void <init>(java.util.ArrayList,boolean)>(r7, 0);

        return $r3;
    }

    public void print()
    {
        org.apache.james.mime4j.field.address.AddressList r0;
        int i0, $i1;
        org.apache.james.mime4j.field.address.Address r1;
        java.io.PrintStream $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.james.mime4j.field.address.AddressList;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: int size()>();

        if i0 >= $i1 goto label2;

        r1 = virtualinvoke r0.<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>(i0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public static org.apache.james.mime4j.field.address.AddressList parse(java.lang.String) throws org.apache.james.mime4j.field.address.parser.ParseException
    {
        java.lang.String r0;
        org.apache.james.mime4j.field.address.parser.AddressListParser r1, $r2;
        java.io.StringReader $r3;
        org.apache.james.mime4j.field.address.Builder $r4;
        org.apache.james.mime4j.field.address.parser.ASTaddress_list $r5;
        org.apache.james.mime4j.field.address.AddressList $r6;

        r0 := @parameter0: java.lang.String;

        $r2 = new org.apache.james.mime4j.field.address.parser.AddressListParser;

        $r3 = new java.io.StringReader;

        specialinvoke $r3.<java.io.StringReader: void <init>(java.lang.String)>(r0);

        specialinvoke $r2.<org.apache.james.mime4j.field.address.parser.AddressListParser: void <init>(java.io.Reader)>($r3);

        r1 = $r2;

        $r4 = staticinvoke <org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()>();

        $r5 = virtualinvoke r1.<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.ASTaddress_list parse()>();

        $r6 = virtualinvoke $r4.<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.parser.ASTaddress_list)>($r5);

        return $r6;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.io.BufferedReader r1, $r4;
        java.lang.String r2, $r9, $r10;
        org.apache.james.mime4j.field.address.AddressList r3;
        java.io.InputStreamReader $r5;
        java.io.InputStream $r6;
        java.io.PrintStream $r7, $r8;
        int $i0;
        boolean $z0, $z1;
        java.lang.Exception $r11, r12;

        r0 := @parameter0: java.lang.String[];

        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        $r6 = <java.lang.System: java.io.InputStream in>;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        r1 = $r4;

     label1:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>("> ");

        r2 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("exit");

        if $z0 != 0 goto label2;

        $r10 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("quit");

        if $z1 == 0 goto label4;

     label2:
        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Goodbye.");

     label3:
        return;

     label4:
        r3 = staticinvoke <org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.AddressList parse(java.lang.String)>(r2);

        virtualinvoke r3.<org.apache.james.mime4j.field.address.AddressList: void print()>();

     label5:
        goto label1;

     label6:
        $r11 := @caughtexception;

        r12 = $r11;

        virtualinvoke r12.<java.lang.Exception: void printStackTrace()>();

        staticinvoke <java.lang.Thread: void sleep(long)>(300L);

        goto label1;

        catch java.lang.Exception from label1 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
