final class org.owasp.html.ElementAndAttributePolicies extends java.lang.Object
{
    final java.lang.String elementName;
    final boolean isVoid;
    final org.owasp.html.ElementPolicy elPolicy;
    final com.google.common.collect.ImmutableMap attrPolicies;
    final boolean skipIfEmpty;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String, org.owasp.html.ElementPolicy, java.util.Map, boolean)
    {
        org.owasp.html.ElementAndAttributePolicies r0;
        java.lang.String r1;
        org.owasp.html.ElementPolicy r2;
        java.util.Map r3;
        boolean z0, $z1;
        com.google.common.collect.ImmutableMap $r4;

        r0 := @this: org.owasp.html.ElementAndAttributePolicies;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.owasp.html.ElementPolicy;

        r3 := @parameter2: java.util.Map;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName> = r1;

        $z1 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: boolean isVoidElement(java.lang.String)>(r1);

        r0.<org.owasp.html.ElementAndAttributePolicies: boolean isVoid> = $z1;

        r0.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementPolicy elPolicy> = r2;

        $r4 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>(r3);

        r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies> = $r4;

        r0.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty> = z0;

        return;
    }

    org.owasp.html.ElementAndAttributePolicies and(org.owasp.html.ElementAndAttributePolicies)
    {
        org.owasp.html.ElementAndAttributePolicies r0, r1, $r15;
        com.google.common.collect.ImmutableMap$Builder r2;
        java.util.Iterator r3, r43;
        java.util.Map$Entry r4, r44;
        java.lang.String r5, $r13, $r19, $r34, $r35, $r38, $r40, $r42, r45;
        org.owasp.html.AttributePolicy r6, r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        com.google.common.collect.ImmutableMap $r8, $r10, $r20, $r25, $r27;
        com.google.common.collect.ImmutableSet $r9, $r11, $r12;
        org.owasp.html.ElementPolicy[] $r14;
        org.owasp.html.ElementPolicy $r16, $r17, $r18;
        java.lang.Object $r21, $r22, $r23, $r26, $r28, $r29, $r31;
        org.owasp.html.AttributePolicy[] $r30;
        java.lang.AssertionError $r33;
        java.lang.StringBuilder $r36, $r37, $r39, $r41;

        r0 := @this: org.owasp.html.ElementAndAttributePolicies;

        r1 := @parameter0: org.owasp.html.ElementAndAttributePolicies;

        $z0 = <org.owasp.html.ElementAndAttributePolicies: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r34 = r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $r35 = r1.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $z11 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z11 != 0 goto label01;

        $r33 = new java.lang.AssertionError;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r42 = r1.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $r41 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.lang.AssertionError: void <init>(java.lang.Object)>($r40);

        throw $r33;

     label01:
        r2 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r8 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $r9 = virtualinvoke $r8.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r3 = virtualinvoke $r9.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r28 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r28;

        $r29 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r29;

        $r26 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r6 = (org.owasp.html.AttributePolicy) $r26;

        $r27 = r1.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $r31 = virtualinvoke $r27.<com.google.common.collect.ImmutableMap: java.lang.Object get(java.lang.Object)>(r5);

        r7 = (org.owasp.html.AttributePolicy) $r31;

        if r7 == null goto label03;

        $r30 = newarray (org.owasp.html.AttributePolicy)[2];

        $r30[0] = r6;

        $r30[1] = r7;

        r6 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r30);

     label03:
        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r5, r6);

        goto label02;

     label04:
        $r10 = r1.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $r11 = virtualinvoke $r10.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r43 = virtualinvoke $r11.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r21 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();

        r44 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r44.<java.util.Map$Entry: java.lang.Object getKey()>();

        r45 = (java.lang.String) $r22;

        $r25 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $z10 = virtualinvoke $r25.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>(r45);

        if $z10 != 0 goto label06;

        $r23 = interfaceinvoke r44.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r45, $r23);

     label06:
        goto label05;

     label07:
        $r12 = <org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableSet DEFAULT_SKIP_IF_EMPTY>;

        $r13 = r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $z4 = virtualinvoke $r12.<com.google.common.collect.ImmutableSet: boolean contains(java.lang.Object)>($r13);

        if $z4 == 0 goto label10;

        $z6 = r0.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty>;

        if $z6 == 0 goto label08;

        $z8 = r1.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty>;

        if $z8 == 0 goto label08;

        $z9 = 1;

        goto label09;

     label08:
        $z9 = 0;

     label09:
        z12 = $z9;

        goto label14;

     label10:
        $z3 = r0.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty>;

        if $z3 != 0 goto label11;

        $z5 = r1.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty>;

        if $z5 == 0 goto label12;

     label11:
        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        z12 = $z7;

     label14:
        $r15 = new org.owasp.html.ElementAndAttributePolicies;

        $r19 = r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $r14 = newarray (org.owasp.html.ElementPolicy)[2];

        $r17 = r0.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementPolicy elPolicy>;

        $r14[0] = $r17;

        $r16 = r1.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementPolicy elPolicy>;

        $r14[1] = $r16;

        $r18 = staticinvoke <org.owasp.html.ElementPolicy$Util: org.owasp.html.ElementPolicy join(org.owasp.html.ElementPolicy[])>($r14);

        $r20 = virtualinvoke r2.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        specialinvoke $r15.<org.owasp.html.ElementAndAttributePolicies: void <init>(java.lang.String,org.owasp.html.ElementPolicy,java.util.Map,boolean)>($r19, $r18, $r20, z12);

        return $r15;
    }

    org.owasp.html.ElementAndAttributePolicies andGlobals(java.util.Map)
    {
        org.owasp.html.ElementAndAttributePolicies r0, $r12;
        java.util.Map r1;
        java.util.LinkedHashMap r2;
        java.util.Iterator r3, r28;
        java.util.Map$Entry r4, r29;
        java.lang.String r5, $r15, r30;
        org.owasp.html.AttributePolicy r6, r7, r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.common.collect.ImmutableMap $r9, $r16, $r21, $r26;
        com.google.common.collect.ImmutableSet $r10;
        java.util.Set $r11;
        org.owasp.html.ElementPolicy $r13;
        java.lang.Object $r14, $r17, $r18, $r20, $r22, $r23, $r24;
        org.owasp.html.AttributePolicy[] $r25;

        r0 := @this: org.owasp.html.ElementAndAttributePolicies;

        r1 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return r0;

     label01:
        r2 = null;

        $r9 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $r10 = virtualinvoke $r9.<com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableSet entrySet()>();

        r3 = virtualinvoke $r10.<com.google.common.collect.ImmutableSet: java.util.Iterator iterator()>();

     label02:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r20 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r20;

        $r23 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r23;

        $r22 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (org.owasp.html.AttributePolicy) $r22;

        if r6 == null goto label04;

        $r24 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r7 = (org.owasp.html.AttributePolicy) $r24;

        $r25 = newarray (org.owasp.html.AttributePolicy)[2];

        $r25[0] = r7;

        $r25[1] = r6;

        r8 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r25);

        $z5 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>(r7);

        if $z5 != 0 goto label04;

        if r2 != null goto label03;

        r2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r26 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        interfaceinvoke r2.<java.util.Map: void putAll(java.util.Map)>($r26);

     label03:
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r8);

     label04:
        goto label02;

     label05:
        $r11 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r28 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r14 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.util.Map$Entry) $r14;

        $r17 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getKey()>();

        r30 = (java.lang.String) $r17;

        $r16 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        $z4 = virtualinvoke $r16.<com.google.common.collect.ImmutableMap: boolean containsKey(java.lang.Object)>(r30);

        if $z4 != 0 goto label08;

        if r2 != null goto label07;

        r2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r21 = r0.<org.owasp.html.ElementAndAttributePolicies: com.google.common.collect.ImmutableMap attrPolicies>;

        interfaceinvoke r2.<java.util.Map: void putAll(java.util.Map)>($r21);

     label07:
        $r18 = interfaceinvoke r29.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r30, $r18);

     label08:
        goto label06;

     label09:
        if r2 != null goto label10;

        return r0;

     label10:
        $r12 = new org.owasp.html.ElementAndAttributePolicies;

        $r15 = r0.<org.owasp.html.ElementAndAttributePolicies: java.lang.String elementName>;

        $r13 = r0.<org.owasp.html.ElementAndAttributePolicies: org.owasp.html.ElementPolicy elPolicy>;

        $z3 = r0.<org.owasp.html.ElementAndAttributePolicies: boolean skipIfEmpty>;

        specialinvoke $r12.<org.owasp.html.ElementAndAttributePolicies: void <init>(java.lang.String,org.owasp.html.ElementPolicy,java.util.Map,boolean)>($r15, $r13, r2, $z3);

        return $r12;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "org/owasp/html/ElementAndAttributePolicies";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.owasp.html.ElementAndAttributePolicies: boolean $assertionsDisabled> = $z1;

        return;
    }
}
