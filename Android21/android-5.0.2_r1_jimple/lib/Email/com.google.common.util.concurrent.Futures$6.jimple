final class com.google.common.util.concurrent.Futures$6 extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.ListenableFuture val$future;
    final com.google.common.util.concurrent.FutureCallback val$callback;

    void <init>(com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.FutureCallback)
    {
        com.google.common.util.concurrent.Futures$6 r0;
        com.google.common.util.concurrent.ListenableFuture r1;
        com.google.common.util.concurrent.FutureCallback r2;

        r0 := @this: com.google.common.util.concurrent.Futures$6;

        r1 := @parameter0: com.google.common.util.concurrent.ListenableFuture;

        r2 := @parameter1: com.google.common.util.concurrent.FutureCallback;

        r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.ListenableFuture val$future> = r1;

        r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.FutureCallback val$callback> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.Futures$6 r0;
        java.lang.Object r1;
        com.google.common.util.concurrent.ListenableFuture $r2;
        com.google.common.util.concurrent.FutureCallback $r3, $r5, $r7, $r10;
        java.lang.RuntimeException $r4, r12;
        java.util.concurrent.ExecutionException $r6, r11;
        java.lang.Throwable $r8;
        java.lang.Error $r9, r13;

        r0 := @this: com.google.common.util.concurrent.Futures$6;

     label1:
        $r2 = r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.ListenableFuture val$future>;

        r1 = staticinvoke <com.google.common.util.concurrent.Uninterruptibles: java.lang.Object getUninterruptibly(java.util.concurrent.Future)>($r2);

        $r3 = r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.FutureCallback val$callback>;

        interfaceinvoke $r3.<com.google.common.util.concurrent.FutureCallback: void onSuccess(java.lang.Object)>(r1);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.FutureCallback val$callback>;

        $r8 = virtualinvoke r11.<java.util.concurrent.ExecutionException: java.lang.Throwable getCause()>();

        interfaceinvoke $r7.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>($r8);

        goto label6;

     label4:
        $r4 := @caughtexception;

        r12 = $r4;

        $r5 = r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.FutureCallback val$callback>;

        interfaceinvoke $r5.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>(r12);

        goto label6;

     label5:
        $r9 := @caughtexception;

        r13 = $r9;

        $r10 = r0.<com.google.common.util.concurrent.Futures$6: com.google.common.util.concurrent.FutureCallback val$callback>;

        interfaceinvoke $r10.<com.google.common.util.concurrent.FutureCallback: void onFailure(java.lang.Throwable)>(r13);

     label6:
        return;

        catch java.util.concurrent.ExecutionException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Error from label1 to label2 with label5;
    }
}
