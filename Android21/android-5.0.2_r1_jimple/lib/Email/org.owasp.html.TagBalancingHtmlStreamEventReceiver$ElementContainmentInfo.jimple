final class org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo extends java.lang.Object
{
    final java.lang.String elementName;
    final boolean resumable;
    final int types;
    final int contents;
    final boolean isVoid;
    final org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo blockContainerChild;
    final int blockedByScopes;
    final int inScopes;

    void <init>(java.lang.String, boolean, int, int, org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo, int)
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r0, r2;
        java.lang.String r1;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r2 := @parameter4: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo;

        i2 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName> = r1;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: boolean resumable> = z0;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int types> = i0;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int contents> = i1;

        if i1 != 0 goto label1;

        $z1 = staticinvoke <org.owasp.html.HtmlTextEscapingMode: boolean isVoidElement(java.lang.String)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: boolean isVoid> = $z2;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo blockContainerChild> = r2;

        $i4 = <org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentRelationships$CloseTagScope: int ALL>;

        $i3 = i2 ^ -1;

        $i5 = $i4 & $i3;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int blockedByScopes> = $i5;

        r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: int inScopes> = i2;

        return;
    }

    public java.lang.String toString()
    {
        org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r3 = r0.<org.owasp.html.TagBalancingHtmlStreamEventReceiver$ElementContainmentInfo: java.lang.String elementName>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
