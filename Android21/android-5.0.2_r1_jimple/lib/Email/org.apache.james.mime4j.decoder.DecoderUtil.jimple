public class org.apache.james.mime4j.decoder.DecoderUtil extends java.lang.Object
{
    private static org.apache.james.mime4j.Log log;

    public void <init>()
    {
        org.apache.james.mime4j.decoder.DecoderUtil r0;

        r0 := @this: org.apache.james.mime4j.decoder.DecoderUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decodeBaseQuotedPrintable(java.lang.String)
    {
        java.lang.String r0;
        java.io.ByteArrayOutputStream r1, $r4;
        byte[] r2, $r7;
        org.apache.james.mime4j.decoder.QuotedPrintableInputStream r3, $r5;
        java.io.ByteArrayInputStream $r6;
        int $i0, i1;
        java.io.IOException $r8, r10;
        org.apache.james.mime4j.Log $r9;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r4;

     label1:
        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $r5 = new org.apache.james.mime4j.decoder.QuotedPrintableInputStream;

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke $r5.<org.apache.james.mime4j.decoder.QuotedPrintableInputStream: void <init>(java.io.InputStream)>($r6);

        r3 = $r5;

     label2:
        $i0 = virtualinvoke r3.<org.apache.james.mime4j.decoder.QuotedPrintableInputStream: int read()>();

        i1 = $i0;

        if $i0 == -1 goto label3;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1);

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        virtualinvoke $r9.<org.apache.james.mime4j.Log: void error(java.lang.Object)>(r10);

     label5:
        $r7 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public static byte[] decodeBase64(java.lang.String)
    {
        java.lang.String r0;
        java.io.ByteArrayOutputStream r1, $r4;
        byte[] r2, $r7;
        org.apache.james.mime4j.decoder.Base64InputStream r3, $r5;
        java.io.ByteArrayInputStream $r6;
        int $i0, i1;
        java.io.IOException $r8, r10;
        org.apache.james.mime4j.Log $r9;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r4;

     label1:
        r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        $r5 = new org.apache.james.mime4j.decoder.Base64InputStream;

        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        specialinvoke $r5.<org.apache.james.mime4j.decoder.Base64InputStream: void <init>(java.io.InputStream)>($r6);

        r3 = $r5;

     label2:
        $i0 = virtualinvoke r3.<org.apache.james.mime4j.decoder.Base64InputStream: int read()>();

        i1 = $i0;

        if $i0 == -1 goto label3;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>(i1);

        goto label2;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        virtualinvoke $r9.<org.apache.james.mime4j.Log: void error(java.lang.Object)>(r10);

     label5:
        $r7 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public static java.lang.String decodeB(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1, $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.String;

        $r3 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBase64(java.lang.String)>(r0);

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, r1);

        return $r2;
    }

    public static java.lang.String decodeQ(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1, $r4, $r5;
        java.lang.StringBuffer r2, $r3;
        int i0, $i2;
        char c1;
        byte[] $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label4;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if c1 != 95 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=20");

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r4 = new java.lang.String;

        $r5 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: byte[] decodeBaseQuotedPrintable(java.lang.String)>($r5);

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, r1);

        return $r4;
    }

    public static java.lang.String decodeEncodedWords(java.lang.String)
    {
        java.lang.String r0, r2, r3, $r9, $r11, $r12;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, i9;
        boolean z0, $z1, $z2;
        java.lang.StringBuilder r1, $r4;

        r0 := @parameter0: java.lang.String;

        $i5 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("=?");

        if $i5 != -1 goto label01;

        return r0;

     label01:
        i0 = 0;

        z0 = 0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

     label02:
        i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("=?", i0);

        if i1 != -1 goto label03;

        goto label13;

     label03:
        $i6 = i1 + 2;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i6);

        if i2 != -1 goto label04;

        goto label13;

     label04:
        $i7 = i2 + 1;

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i7);

        if i3 != -1 goto label05;

        goto label13;

     label05:
        $i8 = i3 + 1;

        i4 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String,int)>("?=", $i8);

        if i4 != -1 goto label06;

        goto label13;

     label06:
        i9 = i4 + 2;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        r3 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeEncodedWord(java.lang.String,int,int)>(r0, i1, i9);

        if r3 != null goto label07;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i9);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        goto label10;

     label07:
        if z0 == 0 goto label08;

        $z2 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isWhitespace(java.lang.String)>(r2);

        if $z2 != 0 goto label09;

     label08:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

     label10:
        i0 = i9;

        if r3 == null goto label11;

        $z1 = 1;

        goto label12;

     label11:
        $z1 = 0;

     label12:
        z0 = $z1;

        goto label02;

     label13:
        if i0 != 0 goto label14;

        return r0;

     label14:
        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public static java.lang.String decodeEncodedWord(java.lang.String, int, int)
    {
        java.lang.String r0, r1, r2, r3, r4, $r12, $r13, $r15, $r16, $r21, $r22, $r33, $r37, $r38, $r49, $r50, $r59, $r60, $r61;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        java.io.UnsupportedEncodingException r5, $r51;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.apache.james.mime4j.Log $r6, $r7, $r14, $r17, $r24, $r26, $r36, $r42, $r47, $r52, $r53, $r54;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r18, $r19, $r20, $r23, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r34, $r35, $r39, $r40, $r41, $r43, $r44, $r45, $r46, $r48, $r55, $r56, $r57, $r62, $r63, $r64;
        java.lang.RuntimeException $r58, r65;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = i0 + 2;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i4);

        if i2 == -1 goto label01;

        $i5 = i1 - 2;

        if i2 != $i5 goto label02;

     label01:
        return null;

     label02:
        $i6 = i2 + 1;

        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(63, $i6);

        if i3 == -1 goto label03;

        $i7 = i1 - 2;

        if i3 != $i7 goto label04;

     label03:
        return null;

     label04:
        $i8 = i0 + 2;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, i2);

        $i9 = i2 + 1;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i9, i3);

        $i10 = i3 + 1;

        $i11 = i1 - 2;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i10, $i11);

        r4 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: java.lang.String toJavaCharset(java.lang.String)>(r1);

        if r4 != null goto label06;

        $r36 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z6 = virtualinvoke $r36.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z6 == 0 goto label05;

        $r42 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MIME charset \'");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in encoded word \'");

        $r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r39 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' doesn\'t have a ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("corresponding Java charset");

        $r50 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<org.apache.james.mime4j.Log: void warn(java.lang.Object)>($r50);

     label05:
        return null;

     label06:
        $z0 = staticinvoke <org.apache.james.mime4j.util.CharsetUtil: boolean isDecodingSupported(java.lang.String)>(r4);

        if $z0 != 0 goto label08;

        $r26 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z5 = virtualinvoke $r26.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z5 == 0 goto label07;

        $r24 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current JDK doesn\'t support decoding of charset \'");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (MIME charset \'");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' in encoded word \'");

        $r33 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\')");

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<org.apache.james.mime4j.Log: void warn(java.lang.Object)>($r37);

     label07:
        return null;

     label08:
        $i12 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i12 != 0 goto label10;

        $r14 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z4 = virtualinvoke $r14.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z4 == 0 goto label09;

        $r17 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing encoded text in encoded word: \'");

        $r22 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.james.mime4j.Log: void warn(java.lang.Object)>($r21);

     label09:
        return null;

     label10:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Q");

        if $z2 == 0 goto label12;

        $r13 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeQ(java.lang.String,java.lang.String)>(r3, r4);

     label11:
        return $r13;

     label12:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("B");

        if $z1 == 0 goto label14;

        $r16 = staticinvoke <org.apache.james.mime4j.decoder.DecoderUtil: java.lang.String decodeB(java.lang.String,java.lang.String)>(r3, r4);

     label13:
        return $r16;

     label14:
        $r6 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z3 = virtualinvoke $r6.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z3 == 0 goto label15;

        $r7 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning: Unknown encoding in encoded word \'");

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<org.apache.james.mime4j.Log: void warn(java.lang.Object)>($r15);

     label15:
        return null;

     label16:
        $r51 := @caughtexception;

        r5 = $r51;

        $r52 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z7 = virtualinvoke $r52.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z7 == 0 goto label17;

        $r47 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encoding in encoded word \'");

        $r49 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r57 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<org.apache.james.mime4j.Log: void warn(java.lang.Object,java.lang.Throwable)>($r59, r5);

     label17:
        return null;

     label18:
        $r58 := @caughtexception;

        r65 = $r58;

        $r53 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $z8 = virtualinvoke $r53.<org.apache.james.mime4j.Log: boolean isWarnEnabled()>();

        if $z8 == 0 goto label19;

        $r54 = <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log>;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not decode encoded word \'");

        $r61 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r54.<org.apache.james.mime4j.Log: void warn(java.lang.Object,java.lang.Throwable)>($r60, r65);

     label19:
        return null;

        catch java.io.UnsupportedEncodingException from label10 to label11 with label16;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label16;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label16;
        catch java.lang.RuntimeException from label10 to label11 with label18;
        catch java.lang.RuntimeException from label12 to label13 with label18;
        catch java.lang.RuntimeException from label14 to label15 with label18;
    }

    static void <clinit>()
    {
        org.apache.james.mime4j.Log $r0;

        $r0 = staticinvoke <org.apache.james.mime4j.LogFactory: org.apache.james.mime4j.Log getLog(java.lang.Class)>(class "org/apache/james/mime4j/decoder/DecoderUtil");

        <org.apache.james.mime4j.decoder.DecoderUtil: org.apache.james.mime4j.Log log> = $r0;

        return;
    }
}
