public class com.android.emailcommon.internet.TextBody extends java.lang.Object implements com.android.emailcommon.mail.Body
{
    java.lang.String mBody;

    public void <init>(java.lang.String)
    {
        com.android.emailcommon.internet.TextBody r0;
        java.lang.String r1;

        r0 := @this: com.android.emailcommon.internet.TextBody;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.emailcommon.internet.TextBody: java.lang.String mBody> = r1;

        return;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException, com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.internet.TextBody r0;
        java.io.OutputStream r1;
        byte[] r2, $r4;
        java.lang.String $r3;

        r0 := @this: com.android.emailcommon.internet.TextBody;

        r1 := @parameter0: java.io.OutputStream;

        $r3 = r0.<com.android.emailcommon.internet.TextBody: java.lang.String mBody>;

        r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>(r2, 4);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }

    public java.lang.String getText()
    {
        com.android.emailcommon.internet.TextBody r0;
        java.lang.String $r1;

        r0 := @this: com.android.emailcommon.internet.TextBody;

        $r1 = r0.<com.android.emailcommon.internet.TextBody: java.lang.String mBody>;

        return $r1;
    }

    public java.io.InputStream getInputStream() throws com.android.emailcommon.mail.MessagingException
    {
        com.android.emailcommon.internet.TextBody r0;
        byte[] r1;
        java.lang.String $r2;
        java.io.ByteArrayInputStream $r3;
        java.io.UnsupportedEncodingException $r4;

        r0 := @this: com.android.emailcommon.internet.TextBody;

     label1:
        $r2 = r0.<com.android.emailcommon.internet.TextBody: java.lang.String mBody>;

        r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
