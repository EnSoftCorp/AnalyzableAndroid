public class org.owasp.html.HtmlPolicyBuilder extends java.lang.Object
{
    public static final com.google.common.collect.ImmutableSet DEFAULT_SKIP_IF_EMPTY;
    private final java.util.Map elPolicies;
    private final java.util.Map attrPolicies;
    private final java.util.Map globalAttrPolicies;
    private final java.util.Set allowedProtocols;
    private final java.util.Set skipIfEmpty;
    private final java.util.Map textContainers;
    private boolean requireRelNofollowOnLinks;
    private static final java.util.Set URL_ATTRIBUTE_NAMES;
    private transient com.google.common.collect.ImmutableMap compiledPolicies;

    public void <init>()
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.util.LinkedHashMap $r1, $r2, $r3, $r7;
        java.util.LinkedHashSet $r4, $r6;
        com.google.common.collect.ImmutableSet $r5;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map elPolicies> = $r1;

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map attrPolicies> = $r2;

        $r3 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map globalAttrPolicies> = $r3;

        $r4 = staticinvoke <com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set allowedProtocols> = $r4;

        $r5 = <org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableSet DEFAULT_SKIP_IF_EMPTY>;

        $r6 = staticinvoke <com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable)>($r5);

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set skipIfEmpty> = $r6;

        $r7 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers> = $r7;

        return;
    }

    public transient org.owasp.html.HtmlPolicyBuilder allowElements(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r3;
        java.lang.String[] r1;
        org.owasp.html.ElementPolicy $r2;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = <org.owasp.html.ElementPolicy: org.owasp.html.ElementPolicy IDENTITY_ELEMENT_POLICY>;

        $r3 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(org.owasp.html.ElementPolicy,java.lang.String[])>($r2, r1);

        return $r3;
    }

    public transient org.owasp.html.HtmlPolicyBuilder disallowElements(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r3;
        java.lang.String[] r1;
        org.owasp.html.ElementPolicy $r2;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = <org.owasp.html.ElementPolicy: org.owasp.html.ElementPolicy REJECT_ALL_ELEMENT_POLICY>;

        $r3 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(org.owasp.html.ElementPolicy,java.lang.String[])>($r2, r1);

        return $r3;
    }

    public transient org.owasp.html.HtmlPolicyBuilder allowElements(org.owasp.html.ElementPolicy, java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.ElementPolicy r1, r5, $r9;
        java.lang.String[] r2, r3;
        int i0, i1;
        java.lang.String r4, r16;
        org.owasp.html.ElementPolicy[] $r6;
        java.util.Map $r7, $r10, $r11, $r14;
        java.lang.Object $r8;
        boolean $z0, $z1;
        java.lang.Boolean $r13;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.ElementPolicy;

        r2 := @parameter1: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        r16 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r4);

        $r6 = newarray (org.owasp.html.ElementPolicy)[2];

        $r7 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map elPolicies>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r16);

        $r9 = (org.owasp.html.ElementPolicy) $r8;

        $r6[0] = $r9;

        $r6[1] = r1;

        r5 = staticinvoke <org.owasp.html.ElementPolicy$Util: org.owasp.html.ElementPolicy join(org.owasp.html.ElementPolicy[])>($r6);

        $r10 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map elPolicies>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r5);

        $r11 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers>;

        $z1 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r16);

        if $z1 != 0 goto label2;

        $z0 = staticinvoke <org.owasp.html.TagBalancingHtmlStreamEventReceiver: boolean allowsPlainTextualContent(java.lang.String)>(r16);

        if $z0 == 0 goto label2;

        $r14 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers>;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, $r13);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r0;
    }

    public org.owasp.html.HtmlPolicyBuilder allowCommonInlineFormattingElements()
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r2;
        java.lang.String[] $r1;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        $r1 = newarray (java.lang.String)[18];

        $r1[0] = "b";

        $r1[1] = "i";

        $r1[2] = "font";

        $r1[3] = "s";

        $r1[4] = "u";

        $r1[5] = "o";

        $r1[6] = "sup";

        $r1[7] = "sub";

        $r1[8] = "ins";

        $r1[9] = "del";

        $r1[10] = "strong";

        $r1[11] = "strike";

        $r1[12] = "tt";

        $r1[13] = "code";

        $r1[14] = "big";

        $r1[15] = "small";

        $r1[16] = "br";

        $r1[17] = "span";

        $r2 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(java.lang.String[])>($r1);

        return $r2;
    }

    public org.owasp.html.HtmlPolicyBuilder allowCommonBlockElements()
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r2;
        java.lang.String[] $r1;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "p";

        $r1[1] = "div";

        $r1[2] = "h1";

        $r1[3] = "h2";

        $r1[4] = "h3";

        $r1[5] = "h4";

        $r1[6] = "h5";

        $r1[7] = "h6";

        $r1[8] = "ul";

        $r1[9] = "ol";

        $r1[10] = "li";

        $r1[11] = "blockquote";

        $r2 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowElements(java.lang.String[])>($r1);

        return $r2;
    }

    public transient org.owasp.html.HtmlPolicyBuilder allowTextIn(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r7;
        java.util.Map $r4;
        java.lang.Boolean $r5;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r7 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder disallowTextIn(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r7;
        java.util.Map $r4;
        java.lang.Boolean $r5;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r7 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder allowWithoutAttributes(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r5;
        java.util.Set $r4;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r5 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set skipIfEmpty>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder disallowWithoutAttributes(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r5;
        java.util.Set $r4;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r5 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set skipIfEmpty>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r3;
        com.google.common.collect.ImmutableList$Builder r2;
        int i0, i1;
        java.lang.String r4, $r7;
        org.owasp.html.HtmlPolicyBuilder$AttributeBuilder $r5;
        com.google.common.collect.ImmutableList $r6;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        r2 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r7 = staticinvoke <org.owasp.html.HtmlLexer: java.lang.String canonicalName(java.lang.String)>(r4);

        virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = new org.owasp.html.HtmlPolicyBuilder$AttributeBuilder;

        $r6 = virtualinvoke r2.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        specialinvoke $r5.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: void <init>(org.owasp.html.HtmlPolicyBuilder,java.util.List)>(r0, $r6);

        return $r5;
    }

    public transient org.owasp.html.HtmlPolicyBuilder$AttributeBuilder disallowAttributes(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1;
        org.owasp.html.HtmlPolicyBuilder$AttributeBuilder $r2, $r4;
        org.owasp.html.AttributePolicy $r3;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        $r2 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder allowAttributes(java.lang.String[])>(r1);

        $r3 = <org.owasp.html.AttributePolicy: org.owasp.html.AttributePolicy REJECT_ALL_ATTRIBUTE_POLICY>;

        $r4 = virtualinvoke $r2.<org.owasp.html.HtmlPolicyBuilder$AttributeBuilder: org.owasp.html.HtmlPolicyBuilder$AttributeBuilder matching(org.owasp.html.AttributePolicy)>($r3);

        return $r4;
    }

    private org.owasp.html.HtmlPolicyBuilder allowAttributesGlobally(org.owasp.html.AttributePolicy, java.util.List)
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.AttributePolicy r1, r5, $r11;
        java.util.List r2;
        java.util.Iterator r3;
        java.lang.String r4;
        boolean $z0;
        java.lang.Object $r6, $r8;
        java.util.Map $r7, $r10;
        org.owasp.html.AttributePolicy[] $r9;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.AttributePolicy;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $r7 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map globalAttrPolicies>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (org.owasp.html.AttributePolicy) $r8;

        $r10 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map globalAttrPolicies>;

        $r9 = newarray (org.owasp.html.AttributePolicy)[2];

        $r9[0] = r5;

        $r9[1] = r1;

        $r11 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r9);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r11);

        goto label1;

     label2:
        return r0;
    }

    private org.owasp.html.HtmlPolicyBuilder allowAttributesOnElements(org.owasp.html.AttributePolicy, java.util.List, java.util.List)
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.AttributePolicy r1, r9, $r17;
        java.util.List r2, r3;
        java.util.Iterator r4, r7;
        java.lang.String r5, r8;
        java.util.Map r6, $r11, $r18;
        boolean $z0, $z1;
        java.lang.Object $r10, $r12, $r13, $r15;
        org.owasp.html.AttributePolicy[] $r14;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.AttributePolicy;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r10;

        $r11 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map attrPolicies>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (java.util.Map) $r12;

        if r6 != null goto label2;

        r6 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap()>();

        $r18 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map attrPolicies>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label2:
        r7 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r13;

        $r15 = interfaceinvoke r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        r9 = (org.owasp.html.AttributePolicy) $r15;

        $r14 = newarray (org.owasp.html.AttributePolicy)[2];

        $r14[0] = r9;

        $r14[1] = r1;

        $r17 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r14);

        interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r17);

        goto label3;

     label4:
        goto label1;

     label5:
        return r0;
    }

    public org.owasp.html.HtmlPolicyBuilder requireRelNofollowOnLinks()
    {
        org.owasp.html.HtmlPolicyBuilder r0;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: boolean requireRelNofollowOnLinks> = 1;

        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder allowUrlProtocols(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r5;
        java.util.Set $r4;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r5 = staticinvoke <org.owasp.html.Strings: java.lang.String toLowerCase(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set allowedProtocols>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public transient org.owasp.html.HtmlPolicyBuilder disallowUrlProtocols(java.lang.String[])
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3, r5;
        java.util.Set $r4;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        r5 = staticinvoke <org.owasp.html.Strings: java.lang.String toLowerCase(java.lang.String)>(r3);

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set allowedProtocols>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public org.owasp.html.HtmlPolicyBuilder allowStandardUrlProtocols()
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r2;
        java.lang.String[] $r1;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "http";

        $r1[1] = "https";

        $r1[2] = "mailto";

        $r2 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowUrlProtocols(java.lang.String[])>($r1);

        return $r2;
    }

    public org.owasp.html.HtmlPolicyBuilder allowStyling()
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.CssSchema $r1;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        $r1 = <org.owasp.html.CssSchema: org.owasp.html.CssSchema DEFAULT>;

        virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowStyling(org.owasp.html.CssSchema)>($r1);

        return r0;
    }

    public org.owasp.html.HtmlPolicyBuilder allowStyling(org.owasp.html.CssSchema)
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.CssSchema r1;
        org.owasp.html.StylingPolicy $r2;
        com.google.common.collect.ImmutableList $r3;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.CssSchema;

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: void invalidateCompiledState()>();

        $r2 = new org.owasp.html.StylingPolicy;

        specialinvoke $r2.<org.owasp.html.StylingPolicy: void <init>(org.owasp.html.CssSchema)>(r1);

        $r3 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of(java.lang.Object)>("style");

        specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowAttributesGlobally(org.owasp.html.AttributePolicy,java.util.List)>($r2, $r3);

        return r0;
    }

    public org.owasp.html.HtmlSanitizer$Policy build(org.owasp.html.HtmlStreamEventReceiver)
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.HtmlStreamEventReceiver r1;
        org.owasp.html.PolicyFactory $r2;
        org.owasp.html.HtmlSanitizer$Policy $r3;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.HtmlStreamEventReceiver;

        $r2 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.PolicyFactory toFactory()>();

        $r3 = virtualinvoke $r2.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver)>(r1);

        return $r3;
    }

    public org.owasp.html.HtmlSanitizer$Policy build(org.owasp.html.HtmlStreamEventReceiver, org.owasp.html.HtmlChangeListener, java.lang.Object)
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        org.owasp.html.HtmlStreamEventReceiver r1;
        org.owasp.html.HtmlChangeListener r2;
        java.lang.Object r3;
        org.owasp.html.PolicyFactory $r4;
        org.owasp.html.HtmlSanitizer$Policy $r5;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter0: org.owasp.html.HtmlStreamEventReceiver;

        r2 := @parameter1: org.owasp.html.HtmlChangeListener;

        r3 := @parameter2: java.lang.Object;

        $r4 = virtualinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.PolicyFactory toFactory()>();

        $r5 = virtualinvoke $r4.<org.owasp.html.PolicyFactory: org.owasp.html.HtmlSanitizer$Policy apply(org.owasp.html.HtmlStreamEventReceiver,org.owasp.html.HtmlChangeListener,java.lang.Object)>(r1, r2, r3);

        return $r5;
    }

    public org.owasp.html.PolicyFactory toFactory()
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        com.google.common.collect.ImmutableSet$Builder r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.util.Map $r4, $r9;
        java.util.Set $r5;
        boolean $z0, $z1;
        org.owasp.html.PolicyFactory $r6;
        com.google.common.collect.ImmutableMap $r7, $r10;
        com.google.common.collect.ImmutableSet $r8;
        java.lang.Object $r11, $r13, $r15;
        java.lang.Boolean $r12;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r1 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r4 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map textContainers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r11;

        $r12 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z1 = virtualinvoke $r12.<java.lang.Boolean: boolean equals(java.lang.Object)>($r13);

        if $z1 == 0 goto label2;

        $r15 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r15);

     label2:
        goto label1;

     label3:
        $r6 = new org.owasp.html.PolicyFactory;

        $r7 = specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableMap compilePolicies()>();

        $r8 = virtualinvoke r1.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        $r9 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map globalAttrPolicies>;

        $r10 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap copyOf(java.util.Map)>($r9);

        specialinvoke $r6.<org.owasp.html.PolicyFactory: void <init>(com.google.common.collect.ImmutableMap,com.google.common.collect.ImmutableSet,com.google.common.collect.ImmutableMap)>($r7, $r8, $r10);

        return $r6;
    }

    private void invalidateCompiledState()
    {
        org.owasp.html.HtmlPolicyBuilder r0;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        r0.<org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableMap compiledPolicies> = null;

        return;
    }

    private com.google.common.collect.ImmutableMap compilePolicies()
    {
        org.owasp.html.HtmlPolicyBuilder r0;
        java.util.LinkedHashMap r1, r2, $r72, r78;
        java.util.Iterator r3, r7, r10, r12, r81, r84, r90;
        java.util.Map$Entry r4, r13, r82, r85, r91;
        org.owasp.html.ElementPolicy r5, $r29, $r77, r87;
        java.util.LinkedHashSet r6;
        java.lang.String r8, r11, r14, r86, r92;
        java.util.Map r9, $r16, $r18, $r20, $r73, r88;
        org.owasp.html.AttributePolicy r15, $r42, $r45, $r48, $r49, $r56, $r57, $r62, $r65, r80, r93;
        com.google.common.collect.ImmutableMap $r17, $r26, $r36, $r70;
        java.util.Set $r19, $r21, $r22, $r24, $r25, $r27, $r32, $r34, $r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z16, $z17, $z18;
        int $i0;
        org.owasp.html.FilterUrlByProtocolAttributePolicy $r23;
        java.lang.Object $r28, $r30, $r31, $r33, $r38, $r39, $r41, $r44, $r46, $r47, $r51, $r52, $r53, $r55, $r58, $r61, $r64, $r69, $r74, $r75;
        org.owasp.html.ElementAndAttributePolicies $r37;
        org.owasp.html.AttributePolicy[] $r43, $r60, $r66;
        org.owasp.html.ElementPolicy[] $r67;
        org.owasp.html.HtmlPolicyBuilder$1 $r68;
        com.google.common.collect.ImmutableSet r79;
        com.google.common.collect.ImmutableMap$Builder r83, r89;

        r0 := @this: org.owasp.html.HtmlPolicyBuilder;

        $r17 = r0.<org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableMap compiledPolicies>;

        if $r17 == null goto label01;

        $r70 = r0.<org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableMap compiledPolicies>;

        return $r70;

     label01:
        $r16 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map elPolicies>;

        r1 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r16);

        $r18 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map attrPolicies>;

        r2 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r18);

        $r19 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r75 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r75;

        $r74 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r73 = (java.util.Map) $r74;

        $r72 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r73);

        interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r72);

        goto label02;

     label03:
        $r20 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Map globalAttrPolicies>;

        r78 = staticinvoke <com.google.common.collect.Maps: java.util.LinkedHashMap newLinkedHashMap(java.util.Map)>($r20);

        $r21 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set allowedProtocols>;

        r79 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet copyOf(java.util.Collection)>($r21);

        $z1 = r0.<org.owasp.html.HtmlPolicyBuilder: boolean requireRelNofollowOnLinks>;

        if $z1 == 0 goto label05;

        $r69 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("a");

        r5 = (org.owasp.html.ElementPolicy) $r69;

        if r5 != null goto label04;

        r5 = <org.owasp.html.ElementPolicy: org.owasp.html.ElementPolicy REJECT_ALL_ELEMENT_POLICY>;

     label04:
        $r67 = newarray (org.owasp.html.ElementPolicy)[2];

        $r67[0] = r5;

        $r68 = new org.owasp.html.HtmlPolicyBuilder$1;

        specialinvoke $r68.<org.owasp.html.HtmlPolicyBuilder$1: void <init>(org.owasp.html.HtmlPolicyBuilder)>(r0);

        $r67[1] = $r68;

        $r77 = staticinvoke <org.owasp.html.ElementPolicy$Util: org.owasp.html.ElementPolicy join(org.owasp.html.ElementPolicy[])>($r67);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("a", $r77);

     label05:
        $i0 = interfaceinvoke r79.<java.util.Set: int size()>();

        if $i0 != 3 goto label06;

        $z17 = interfaceinvoke r79.<java.util.Set: boolean contains(java.lang.Object)>("mailto");

        if $z17 == 0 goto label06;

        $z18 = interfaceinvoke r79.<java.util.Set: boolean contains(java.lang.Object)>("http");

        if $z18 == 0 goto label06;

        $z16 = interfaceinvoke r79.<java.util.Set: boolean contains(java.lang.Object)>("https");

        if $z16 == 0 goto label06;

        r80 = <org.owasp.html.StandardUrlAttributePolicy: org.owasp.html.StandardUrlAttributePolicy INSTANCE>;

        goto label07;

     label06:
        $r23 = new org.owasp.html.FilterUrlByProtocolAttributePolicy;

        specialinvoke $r23.<org.owasp.html.FilterUrlByProtocolAttributePolicy: void <init>(java.lang.Iterable)>(r79);

        r80 = $r23;

     label07:
        $r22 = <org.owasp.html.HtmlPolicyBuilder: java.util.Set URL_ATTRIBUTE_NAMES>;

        r6 = staticinvoke <com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable)>($r22);

        $r24 = <org.owasp.html.HtmlPolicyBuilder: java.util.Set URL_ATTRIBUTE_NAMES>;

        r7 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r58 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r58;

        $z14 = interfaceinvoke r78.<java.util.Map: boolean containsKey(java.lang.Object)>(r8);

        if $z14 == 0 goto label09;

        interfaceinvoke r6.<java.util.Set: boolean remove(java.lang.Object)>(r8);

        $r66 = newarray (org.owasp.html.AttributePolicy)[2];

        $r66[0] = r80;

        $r64 = interfaceinvoke r78.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r65 = (org.owasp.html.AttributePolicy) $r64;

        $r66[1] = $r65;

        $r62 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r66);

        interfaceinvoke r78.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r62);

     label09:
        goto label08;

     label10:
        $r25 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();

        r81 = interfaceinvoke $r25.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r81.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r55 = interfaceinvoke r81.<java.util.Iterator: java.lang.Object next()>();

        r82 = (java.util.Map$Entry) $r55;

        $r52 = interfaceinvoke r82.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (java.util.Map) $r52;

        r10 = interfaceinvoke r6.<java.util.Set: java.util.Iterator iterator()>();

     label12:
        $z11 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label14;

        $r53 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.String) $r53;

        $z13 = interfaceinvoke r9.<java.util.Map: boolean containsKey(java.lang.Object)>(r11);

        if $z13 == 0 goto label13;

        $r60 = newarray (org.owasp.html.AttributePolicy)[2];

        $r60[0] = r80;

        $r61 = interfaceinvoke r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        $r57 = (org.owasp.html.AttributePolicy) $r61;

        $r60[1] = $r57;

        $r56 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r60);

        interfaceinvoke r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, $r56);

     label13:
        goto label12;

     label14:
        goto label11;

     label15:
        r83 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r27 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r84 = interfaceinvoke $r27.<java.util.Set: java.util.Iterator iterator()>();

     label16:
        $z4 = interfaceinvoke r84.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label26;

        $r30 = interfaceinvoke r84.<java.util.Iterator: java.lang.Object next()>();

        r85 = (java.util.Map$Entry) $r30;

        $r31 = interfaceinvoke r85.<java.util.Map$Entry: java.lang.Object getKey()>();

        r86 = (java.lang.String) $r31;

        $r28 = interfaceinvoke r85.<java.util.Map$Entry: java.lang.Object getValue()>();

        r87 = (org.owasp.html.ElementPolicy) $r28;

        $r29 = <org.owasp.html.ElementPolicy: org.owasp.html.ElementPolicy REJECT_ALL_ELEMENT_POLICY>;

        $z5 = virtualinvoke $r29.<java.lang.Object: boolean equals(java.lang.Object)>(r87);

        if $z5 == 0 goto label17;

        goto label16;

     label17:
        $r33 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r86);

        r88 = (java.util.Map) $r33;

        if r88 != null goto label18;

        r88 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap of()>();

     label18:
        r89 = staticinvoke <com.google.common.collect.ImmutableMap: com.google.common.collect.ImmutableMap$Builder builder()>();

        $r32 = interfaceinvoke r88.<java.util.Map: java.util.Set entrySet()>();

        r12 = interfaceinvoke $r32.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z6 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label22;

        $r51 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r51;

        $r46 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        r14 = (java.lang.String) $r46;

        $z9 = interfaceinvoke r78.<java.util.Map: boolean containsKey(java.lang.Object)>(r14);

        if $z9 == 0 goto label20;

        goto label19;

     label20:
        $r47 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        r15 = (org.owasp.html.AttributePolicy) $r47;

        $r48 = <org.owasp.html.AttributePolicy: org.owasp.html.AttributePolicy REJECT_ALL_ATTRIBUTE_POLICY>;

        $z12 = virtualinvoke $r48.<java.lang.Object: boolean equals(java.lang.Object)>(r15);

        if $z12 != 0 goto label21;

        virtualinvoke r89.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r14, r15);

     label21:
        goto label19;

     label22:
        $r34 = interfaceinvoke r78.<java.util.Map: java.util.Set entrySet()>();

        r90 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();

     label23:
        $z7 = interfaceinvoke r90.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label25;

        $r39 = interfaceinvoke r90.<java.util.Iterator: java.lang.Object next()>();

        r91 = (java.util.Map$Entry) $r39;

        $r38 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getKey()>();

        r92 = (java.lang.String) $r38;

        $r43 = newarray (org.owasp.html.AttributePolicy)[2];

        $r44 = interfaceinvoke r88.<java.util.Map: java.lang.Object get(java.lang.Object)>(r92);

        $r45 = (org.owasp.html.AttributePolicy) $r44;

        $r43[0] = $r45;

        $r41 = interfaceinvoke r91.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r42 = (org.owasp.html.AttributePolicy) $r41;

        $r43[1] = $r42;

        r93 = staticinvoke <org.owasp.html.AttributePolicy$Util: org.owasp.html.AttributePolicy join(org.owasp.html.AttributePolicy[])>($r43);

        $r49 = <org.owasp.html.AttributePolicy: org.owasp.html.AttributePolicy REJECT_ALL_ATTRIBUTE_POLICY>;

        $z10 = virtualinvoke $r49.<java.lang.Object: boolean equals(java.lang.Object)>(r93);

        if $z10 != 0 goto label24;

        virtualinvoke r89.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r92, r93);

     label24:
        goto label23;

     label25:
        $r37 = new org.owasp.html.ElementAndAttributePolicies;

        $r36 = virtualinvoke r89.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        $r35 = r0.<org.owasp.html.HtmlPolicyBuilder: java.util.Set skipIfEmpty>;

        $z8 = interfaceinvoke $r35.<java.util.Set: boolean contains(java.lang.Object)>(r86);

        specialinvoke $r37.<org.owasp.html.ElementAndAttributePolicies: void <init>(java.lang.String,org.owasp.html.ElementPolicy,java.util.Map,boolean)>(r86, r87, $r36, $z8);

        virtualinvoke r83.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object)>(r86, $r37);

        goto label16;

     label26:
        $r26 = virtualinvoke r83.<com.google.common.collect.ImmutableMap$Builder: com.google.common.collect.ImmutableMap build()>();

        r0.<org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableMap compiledPolicies> = $r26;

        return $r26;
    }

    static org.owasp.html.HtmlPolicyBuilder access$000(org.owasp.html.HtmlPolicyBuilder, org.owasp.html.AttributePolicy, java.util.List)
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r3;
        org.owasp.html.AttributePolicy r1;
        java.util.List r2;

        r0 := @parameter0: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter1: org.owasp.html.AttributePolicy;

        r2 := @parameter2: java.util.List;

        $r3 = specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowAttributesGlobally(org.owasp.html.AttributePolicy,java.util.List)>(r1, r2);

        return $r3;
    }

    static org.owasp.html.HtmlPolicyBuilder access$100(org.owasp.html.HtmlPolicyBuilder, org.owasp.html.AttributePolicy, java.util.List, java.util.List)
    {
        org.owasp.html.HtmlPolicyBuilder r0, $r4;
        org.owasp.html.AttributePolicy r1;
        java.util.List r2, r3;

        r0 := @parameter0: org.owasp.html.HtmlPolicyBuilder;

        r1 := @parameter1: org.owasp.html.AttributePolicy;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        $r4 = specialinvoke r0.<org.owasp.html.HtmlPolicyBuilder: org.owasp.html.HtmlPolicyBuilder allowAttributesOnElements(org.owasp.html.AttributePolicy,java.util.List,java.util.List)>(r1, r2, r3);

        return $r4;
    }

    static void <clinit>()
    {
        com.google.common.collect.ImmutableSet $r0, $r2;
        java.lang.String[] $r1;

        $r0 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>("a", "font", "img", "input", "span");

        <org.owasp.html.HtmlPolicyBuilder: com.google.common.collect.ImmutableSet DEFAULT_SKIP_IF_EMPTY> = $r0;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "data";

        $r1[1] = "dsync";

        $r1[2] = "formaction";

        $r1[3] = "href";

        $r1[4] = "icon";

        $r1[5] = "longdesc";

        $r1[6] = "manifest";

        $r1[7] = "poster";

        $r1[8] = "profile";

        $r1[9] = "src";

        $r1[10] = "srcset";

        $r1[11] = "usemap";

        $r2 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[])>("action", "archive", "background", "cite", "classid", "codebase", $r1);

        <org.owasp.html.HtmlPolicyBuilder: java.util.Set URL_ATTRIBUTE_NAMES> = $r2;

        return;
    }
}
