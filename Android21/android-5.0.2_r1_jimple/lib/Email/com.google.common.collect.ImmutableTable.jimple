public abstract class com.google.common.collect.ImmutableTable extends java.lang.Object implements com.google.common.collect.Table
{

    public static final com.google.common.collect.ImmutableTable of()
    {
        com.google.common.collect.EmptyImmutableTable $r0;

        $r0 = <com.google.common.collect.EmptyImmutableTable: com.google.common.collect.EmptyImmutableTable INSTANCE>;

        return $r0;
    }

    public static final com.google.common.collect.ImmutableTable of(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2;
        com.google.common.collect.SingletonImmutableTable $r3;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = new com.google.common.collect.SingletonImmutableTable;

        specialinvoke $r3.<com.google.common.collect.SingletonImmutableTable: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        return $r3;
    }

    public static final com.google.common.collect.ImmutableTable copyOf(com.google.common.collect.Table)
    {
        com.google.common.collect.Table r0;
        com.google.common.collect.ImmutableTable r1, $r11, $r12;
        com.google.common.collect.Table$Cell r2, r5, $r19;
        com.google.common.collect.ImmutableSet$Builder r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.util.Set $r6, $r13;
        java.lang.Object $r7, $r8, $r9, $r10, $r15, $r17, $r18, $r20;
        com.google.common.collect.ImmutableSet $r14;
        com.google.common.collect.RegularImmutableTable $r16;
        int i0;

        r0 := @parameter0: com.google.common.collect.Table;

        $z0 = r0 instanceof com.google.common.collect.ImmutableTable;

        if $z0 == 0 goto label1;

        r1 = (com.google.common.collect.ImmutableTable) r0;

        return r1;

     label1:
        i0 = interfaceinvoke r0.<com.google.common.collect.Table: int size()>();

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        $r12 = staticinvoke <com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableTable of()>();

        return $r12;

     label3:
        $r6 = interfaceinvoke r0.<com.google.common.collect.Table: java.util.Set cellSet()>();

        $r7 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>($r6);

        r2 = (com.google.common.collect.Table$Cell) $r7;

        $r8 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r9 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r10 = interfaceinvoke r2.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        $r11 = staticinvoke <com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableTable of(java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r9, $r10);

        return $r11;

     label4:
        r3 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builder()>();

        $r13 = interfaceinvoke r0.<com.google.common.collect.Table: java.util.Set cellSet()>();

        r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.google.common.collect.Table$Cell) $r15;

        $r18 = interfaceinvoke r5.<com.google.common.collect.Table$Cell: java.lang.Object getRowKey()>();

        $r17 = interfaceinvoke r5.<com.google.common.collect.Table$Cell: java.lang.Object getColumnKey()>();

        $r20 = interfaceinvoke r5.<com.google.common.collect.Table$Cell: java.lang.Object getValue()>();

        $r19 = staticinvoke <com.google.common.collect.ImmutableTable: com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object)>($r18, $r17, $r20);

        virtualinvoke r3.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>($r19);

        goto label5;

     label6:
        $r14 = virtualinvoke r3.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();

        $r16 = staticinvoke <com.google.common.collect.RegularImmutableTable: com.google.common.collect.RegularImmutableTable forCells(java.lang.Iterable)>($r14);

        return $r16;
    }

    public static final com.google.common.collect.ImmutableTable$Builder builder()
    {
        com.google.common.collect.ImmutableTable$Builder $r0;

        $r0 = new com.google.common.collect.ImmutableTable$Builder;

        specialinvoke $r0.<com.google.common.collect.ImmutableTable$Builder: void <init>()>();

        return $r0;
    }

    static com.google.common.collect.Table$Cell cellOf(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1, r2, $r3, $r4, $r5;
        com.google.common.collect.Table$Cell $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r5 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r6 = staticinvoke <com.google.common.collect.Tables: com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)>($r3, $r4, $r5);

        return $r6;
    }

    void <init>()
    {
        com.google.common.collect.ImmutableTable r0;

        r0 := @this: com.google.common.collect.ImmutableTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.google.common.collect.ImmutableSet cellSet();

    public abstract com.google.common.collect.ImmutableMap column(java.lang.Object);

    public abstract com.google.common.collect.ImmutableSet columnKeySet();

    public abstract com.google.common.collect.ImmutableMap columnMap();

    public abstract com.google.common.collect.ImmutableMap row(java.lang.Object);

    public abstract com.google.common.collect.ImmutableSet rowKeySet();

    public abstract com.google.common.collect.ImmutableMap rowMap();

    public final void clear()
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public final java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.Object r1, r2, r3;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public final void putAll(com.google.common.collect.Table)
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.Table r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: com.google.common.collect.Table;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public final java.lang.Object remove(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.Object r1, r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.Table r2;
        boolean $z0, $z1;
        com.google.common.collect.ImmutableSet $r3;
        java.util.Set $r4;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.google.common.collect.Table;

        if $z0 == 0 goto label2;

        r2 = (com.google.common.collect.Table) r1;

        $r3 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableSet cellSet()>();

        $r4 = interfaceinvoke r2.<com.google.common.collect.Table: java.util.Set cellSet()>();

        $z1 = virtualinvoke $r3.<com.google.common.collect.ImmutableSet: boolean equals(java.lang.Object)>($r4);

        return $z1;

     label2:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;
        int $i0;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableSet cellSet()>();

        $i0 = virtualinvoke $r1.<com.google.common.collect.ImmutableSet: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;
        java.lang.String $r2;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableMap rowMap()>();

        $r2 = virtualinvoke $r1.<com.google.common.collect.ImmutableMap: java.lang.String toString()>();

        return $r2;
    }

    public volatile java.util.Map columnMap()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableMap columnMap()>();

        return $r1;
    }

    public volatile java.util.Map rowMap()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableMap $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableMap rowMap()>();

        return $r1;
    }

    public volatile java.util.Set columnKeySet()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableSet columnKeySet()>();

        return $r1;
    }

    public volatile java.util.Set rowKeySet()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableSet rowKeySet()>();

        return $r1;
    }

    public volatile java.util.Set cellSet()
    {
        com.google.common.collect.ImmutableTable r0;
        com.google.common.collect.ImmutableSet $r1;

        r0 := @this: com.google.common.collect.ImmutableTable;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableSet cellSet()>();

        return $r1;
    }

    public volatile java.util.Map column(java.lang.Object)
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableMap column(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Map row(java.lang.Object)
    {
        com.google.common.collect.ImmutableTable r0;
        java.lang.Object r1;
        com.google.common.collect.ImmutableMap $r2;

        r0 := @this: com.google.common.collect.ImmutableTable;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableTable: com.google.common.collect.ImmutableMap row(java.lang.Object)>(r1);

        return $r2;
    }
}
