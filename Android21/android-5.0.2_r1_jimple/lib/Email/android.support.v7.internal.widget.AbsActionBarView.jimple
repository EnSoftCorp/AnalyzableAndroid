abstract class android.support.v7.internal.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final android.view.animation.Interpolator sAlphaInterpolator;
    private static final int FADE_DURATION;
    protected final android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected final android.content.Context mPopupContext;
    protected android.support.v7.widget.ActionMenuView mMenuView;
    protected android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter;
    protected android.view.ViewGroup mSplitView;
    protected boolean mSplitActionBar;
    protected boolean mSplitWhenNarrow;
    protected int mContentHeight;
    protected android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim;

    void <init>(android.content.Context)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.content.Context r1;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3;
        android.util.TypedValue r3, $r5;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r4;
        android.content.res.Resources$Theme $r6;
        boolean $z0;
        android.view.ContextThemeWrapper $r7;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r4 = new android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke $r4.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: void <init>(android.support.v7.internal.widget.AbsActionBarView)>(r0);

        r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener> = $r4;

        $r5 = new android.util.TypedValue;

        specialinvoke $r5.<android.util.TypedValue: void <init>()>();

        r3 = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        $i1 = <android.support.v7.appcompat.R$attr: int actionBarPopupTheme>;

        $z0 = virtualinvoke $r6.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>($i1, r3, 1);

        if $z0 == 0 goto label1;

        $i2 = r3.<android.util.TypedValue: int resourceId>;

        if $i2 == 0 goto label1;

        $r7 = new android.view.ContextThemeWrapper;

        $i3 = r3.<android.util.TypedValue: int resourceId>;

        specialinvoke $r7.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r1, $i3);

        r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = $r7;

        goto label2;

     label1:
        r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context mPopupContext> = r1;

     label2:
        return;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.content.res.Configuration r1;
        android.content.res.TypedArray r2;
        int $i0, $i1, $i2, $i3;
        android.content.Context $r3;
        int[] $r4;
        android.support.v7.widget.ActionMenuPresenter $r5, $r6;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.content.res.Configuration;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 8 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        $r3 = virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: android.content.Context getContext()>();

        $r4 = <android.support.v7.appcompat.R$styleable: int[] ActionBar>;

        $i1 = <android.support.v7.appcompat.R$attr: int actionBarStyle>;

        r2 = virtualinvoke $r3.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(null, $r4, $i1, 0);

        $i2 = <android.support.v7.appcompat.R$styleable: int ActionBar_height>;

        $i3 = virtualinvoke r2.<android.content.res.TypedArray: int getLayoutDimension(int,int)>($i2, 0);

        virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: void setContentHeight(int)>($i3);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        $r5 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r5 == null goto label2;

        $r6 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r6.<android.support.v7.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label2:
        return;
    }

    public void setSplitToolbar(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        boolean z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitActionBar> = z0;

        return;
    }

    public void setSplitWhenNarrow(boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        boolean z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        z0 := @parameter0: boolean;

        r0.<android.support.v7.internal.widget.AbsActionBarView: boolean mSplitWhenNarrow> = z0;

        return;
    }

    public void setContentHeight(int)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        int i0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight> = i0;

        virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: void requestLayout()>();

        return;
    }

    public int getContentHeight()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        int $i0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $i0 = r0.<android.support.v7.internal.widget.AbsActionBarView: int mContentHeight>;

        return $i0;
    }

    public void setSplitView(android.view.ViewGroup)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.view.ViewGroup r1;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.ViewGroup;

        r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView> = r1;

        return;
    }

    public int getAnimatedVisibility()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v4.view.ViewPropertyAnimatorCompat $r1;
        int $i0, $i1;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r2;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $i1 = $r2.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility>;

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        return $i0;
    }

    public void animateToVisibility(int)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        int i0, $i1;
        android.support.v4.view.ViewPropertyAnimatorCompat r1, r3, $r4, $r5, $r16, $r23, $r32, $r42, r45, r47;
        android.support.v7.internal.view.ViewPropertyAnimatorCompatSet r2, $r15, $r22, $r34, $r41, r46;
        android.view.animation.Interpolator $r7, $r26;
        android.view.ViewGroup $r9, $r29, $r39;
        android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener $r10, $r11, $r17, $r20, $r27, $r30, $r35, $r36;
        android.support.v7.widget.ActionMenuView $r13, $r14, $r31, $r33, $r43, $r44;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        i0 := @parameter0: int;

        $r4 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        if $r4 == null goto label1;

        $r42 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v4.view.ViewPropertyAnimatorCompat mVisibilityAnim>;

        virtualinvoke $r42.<android.support.v4.view.ViewPropertyAnimatorCompat: void cancel()>();

     label1:
        if i0 != 0 goto label5;

        $i1 = virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i1 == 0 goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>(r0, 0.0F);

        $r39 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r39 == null goto label2;

        $r44 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        if $r44 == null goto label2;

        $r43 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAlpha(android.view.View,float)>($r43, 0.0F);

     label2:
        $r23 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r0);

        r1 = virtualinvoke $r23.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        virtualinvoke r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r26 = <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator>;

        virtualinvoke r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r26);

        $r29 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r29 == null goto label3;

        $r33 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        if $r33 == null goto label3;

        $r34 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;

        specialinvoke $r34.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        r2 = $r34;

        $r31 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        $r32 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r31);

        r3 = virtualinvoke $r32.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(1.0F);

        virtualinvoke r3.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r35 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r36 = virtualinvoke $r35.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r1, i0);

        virtualinvoke r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r36);

        $r41 = virtualinvoke r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>(r1);

        virtualinvoke $r41.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>(r3);

        virtualinvoke r2.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

        goto label4;

     label3:
        $r30 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r27 = virtualinvoke $r30.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r1, i0);

        virtualinvoke r1.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r27);

        virtualinvoke r1.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

     label4:
        goto label7;

     label5:
        $r5 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>(r0);

        r45 = virtualinvoke $r5.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        virtualinvoke r45.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r7 = <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator>;

        virtualinvoke r45.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)>($r7);

        $r9 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.view.ViewGroup mSplitView>;

        if $r9 == null goto label6;

        $r13 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        if $r13 == null goto label6;

        $r15 = new android.support.v7.internal.view.ViewPropertyAnimatorCompatSet;

        specialinvoke $r15.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void <init>()>();

        r46 = $r15;

        $r14 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuView mMenuView>;

        $r16 = staticinvoke <android.support.v4.view.ViewCompat: android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View)>($r14);

        r47 = virtualinvoke $r16.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat alpha(float)>(0.0F);

        virtualinvoke r47.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long)>(200L);

        $r17 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r20 = virtualinvoke $r17.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r45, i0);

        virtualinvoke r46.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r20);

        $r22 = virtualinvoke r46.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>(r45);

        virtualinvoke $r22.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: android.support.v7.internal.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat)>(r47);

        virtualinvoke r46.<android.support.v7.internal.view.ViewPropertyAnimatorCompatSet: void start()>();

        goto label7;

     label6:
        $r10 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener>;

        $r11 = virtualinvoke $r10.<android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener: android.support.v7.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(android.support.v4.view.ViewPropertyAnimatorCompat,int)>(r45, i0);

        virtualinvoke r45.<android.support.v4.view.ViewPropertyAnimatorCompat: android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener)>($r11);

        virtualinvoke r45.<android.support.v4.view.ViewPropertyAnimatorCompat: void start()>();

     label7:
        return;
    }

    public boolean showOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean showOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public void postShowOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.internal.widget.AbsActionBarView$1 $r1;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = new android.support.v7.internal.widget.AbsActionBarView$1;

        specialinvoke $r1.<android.support.v7.internal.widget.AbsActionBarView$1: void <init>(android.support.v7.internal.widget.AbsActionBarView)>(r0);

        virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public boolean hideOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean hideOverflowMenu()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        $z0 = virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean canShowOverflowMenu()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $z0 = virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: boolean isOverflowReserved()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<android.support.v7.internal.widget.AbsActionBarView: int getVisibility()>();

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void dismissPopupMenus()
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.support.v7.widget.ActionMenuPresenter $r1, $r2;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        $r1 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v7.internal.widget.AbsActionBarView: android.support.v7.widget.ActionMenuPresenter mActionMenuPresenter>;

        virtualinvoke $r2.<android.support.v7.widget.ActionMenuPresenter: boolean dismissPopupMenus()>();

     label1:
        return;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i0, -2147483648);

        virtualinvoke r1.<android.view.View: void measure(int,int)>($i3, i1);

        $i4 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i6 = i0 - $i4;

        i7 = i6 - i2;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>(0, i7);

        return $i5;
    }

    protected static int next(int, int, boolean)
    {
        int i0, i1, $i2;
        boolean z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $i2 = i0 - i1;

        goto label2;

     label1:
        $i2 = i0 + i1;

     label2:
        return $i2;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        android.support.v7.internal.widget.AbsActionBarView r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;

        r0 := @this: android.support.v7.internal.widget.AbsActionBarView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        z0 := @parameter4: boolean;

        i3 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i4 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i6 = i2 - i4;

        $i7 = $i6 / 2;

        i5 = i1 + $i7;

        if z0 == 0 goto label1;

        $i11 = i0 - i3;

        $i12 = i5 + i4;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i11, i5, i0, $i12);

        goto label2;

     label1:
        $i9 = i0 + i3;

        $i8 = i5 + i4;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i0, i5, $i9, $i8);

     label2:
        if z0 == 0 goto label3;

        $i10 = neg i3;

        goto label4;

     label3:
        $i10 = i3;

     label4:
        return $i10;
    }

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;

        <android.support.v7.internal.widget.AbsActionBarView: int FADE_DURATION> = 200;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<android.view.animation.DecelerateInterpolator: void <init>()>();

        <android.support.v7.internal.widget.AbsActionBarView: android.view.animation.Interpolator sAlphaInterpolator> = $r0;

        return;
    }
}
