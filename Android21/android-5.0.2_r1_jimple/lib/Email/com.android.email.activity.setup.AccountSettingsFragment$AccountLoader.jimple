class com.android.email.activity.setup.AccountSettingsFragment$AccountLoader extends com.android.mail.ui.MailAsyncTaskLoader
{
    public static final java.lang.String RESULT_KEY_ACCOUNT;
    private static final java.lang.String RESULT_KEY_UIACCOUNT_CURSOR;
    public static final java.lang.String RESULT_KEY_UIACCOUNT;
    public static final java.lang.String RESULT_KEY_INBOX;
    private final android.content.Loader$ForceLoadContentObserver mObserver;
    private final java.lang.String mAccountEmail;
    private final long mAccountId;

    private void <init>(android.content.Context, java.lang.String, long)
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        android.content.Context r1;
        java.lang.String r2;
        long l0;
        android.content.Loader$ForceLoadContentObserver $r3;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        specialinvoke r0.<com.android.mail.ui.MailAsyncTaskLoader: void <init>(android.content.Context)>(r1);

        $r3 = new android.content.Loader$ForceLoadContentObserver;

        specialinvoke $r3.<android.content.Loader$ForceLoadContentObserver: void <init>(android.content.Loader)>(r0);

        r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Loader$ForceLoadContentObserver mObserver> = $r3;

        r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String mAccountEmail> = r2;

        r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: long mAccountId> = l0;

        return;
    }

    public java.util.Map loadInBackground()
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        java.util.HashMap r1, r7, $r9;
        com.android.emailcommon.provider.Account r2;
        android.database.Cursor r3, r5;
        com.android.mail.providers.Account r4;
        com.android.mail.providers.Folder r6, $r35;
        java.lang.Throwable r8, $r40;
        java.lang.String $r10, $r37;
        boolean $z0, $z1, $z2;
        android.content.Context $r11, $r13, $r15, $r20, $r23, $r29, $r39;
        android.content.Loader$ForceLoadContentObserver $r12, $r19, $r26, $r38;
        long $l0, $l1, $l2;
        com.android.emailcommon.provider.HostAuth $r17;
        com.android.emailcommon.provider.Policy $r21;
        android.content.ContentResolver $r22, $r33;
        java.lang.String[] $r24, $r31;
        android.net.Uri $r25, $r32;
        com.android.mail.providers.Account$Builder $r30;
        com.android.mail.providers.Settings $r34;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r1 = $r9;

        $r10 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String mAccountEmail>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r10);

        if $z0 != 0 goto label01;

        $r39 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        $r37 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String mAccountEmail>;

        $r38 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Loader$ForceLoadContentObserver mObserver>;

        r2 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithAddress(android.content.Context,java.lang.String,android.database.ContentObserver)>($r39, $r37, $r38);

        goto label02;

     label01:
        $r11 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        $l0 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: long mAccountId>;

        $r12 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Loader$ForceLoadContentObserver mObserver>;

        r2 = staticinvoke <com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Account restoreAccountWithId(android.content.Context,long,android.database.ContentObserver)>($r11, $l0, $r12);

     label02:
        if r2 != null goto label03;

        return r1;

     label03:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("account", r2);

        $r13 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        virtualinvoke r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthRecv(android.content.Context)>($r13);

        $r15 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        virtualinvoke r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth getOrCreateHostAuthSend(android.content.Context)>($r15);

        $r17 = r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.HostAuth mHostAuthRecv>;

        if $r17 != null goto label04;

        return r1;

     label04:
        $r20 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        $l1 = r2.<com.android.emailcommon.provider.Account: long mPolicyKey>;

        $r19 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Loader$ForceLoadContentObserver mObserver>;

        $r21 = staticinvoke <com.android.emailcommon.provider.Policy: com.android.emailcommon.provider.Policy restorePolicyWithId(android.content.Context,long,android.database.ContentObserver)>($r20, $l1, $r19);

        r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy> = $r21;

        $r23 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        $r22 = virtualinvoke $r23.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $l2 = virtualinvoke r2.<com.android.emailcommon.provider.Account: long getId()>();

        $r25 = staticinvoke <com.android.email.provider.EmailProvider: android.net.Uri uiUri(java.lang.String,long)>("uiaccount", $l2);

        $r24 = <com.android.mail.providers.UIProvider: java.lang.String[] ACCOUNTS_PROJECTION>;

        r3 = virtualinvoke $r22.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r25, $r24, null, null, null);

        if r3 == null goto label05;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uiAccountCursor", r3);

        $r26 = r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Loader$ForceLoadContentObserver mObserver>;

        interfaceinvoke r3.<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>($r26);

        goto label06;

     label05:
        return r1;

     label06:
        $z1 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 != 0 goto label07;

        return r1;

     label07:
        $r30 = staticinvoke <com.android.mail.providers.Account: com.android.mail.providers.Account$Builder builder()>();

        r4 = virtualinvoke $r30.<com.android.mail.providers.Account$Builder: com.android.mail.providers.Account buildFrom(android.database.Cursor)>(r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uiAccount", r4);

        $r29 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        $r33 = virtualinvoke $r29.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r34 = r4.<com.android.mail.providers.Account: com.android.mail.providers.Settings settings>;

        $r32 = $r34.<com.android.mail.providers.Settings: android.net.Uri defaultInbox>;

        $r31 = <com.android.mail.providers.UIProvider: java.lang.String[] FOLDERS_PROJECTION>;

        r5 = virtualinvoke $r33.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r32, $r31, null, null, null);

     label08:
        if r5 == null goto label09;

        $z2 = interfaceinvoke r5.<android.database.Cursor: boolean moveToFirst()>();

        if $z2 == 0 goto label09;

        $r35 = new com.android.mail.providers.Folder;

        specialinvoke $r35.<com.android.mail.providers.Folder: void <init>(android.database.Cursor)>(r5);

        r6 = $r35;

        goto label12;

     label09:
        r7 = r1;

     label10:
        if r5 == null goto label11;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label11:
        return r7;

     label12:
        if r5 == null goto label16;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

        goto label16;

     label13:
        $r40 := @caughtexception;

        r8 = $r40;

     label14:
        if r5 == null goto label15;

        interfaceinvoke r5.<android.database.Cursor: void close()>();

     label15:
        throw r8;

     label16:
        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("inbox", r6);

        return r1;

        catch java.lang.Throwable from label08 to label10 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    protected void onDiscardResult(java.util.Map)
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        java.util.Map r1;
        com.android.emailcommon.provider.Account r2;
        android.database.Cursor r3;
        java.lang.Object $r4, $r5;
        com.android.emailcommon.provider.Policy $r6, $r8;
        android.content.Context $r7, $r9;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        r1 := @parameter0: java.util.Map;

        $r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("account");

        r2 = (com.android.emailcommon.provider.Account) $r4;

        if r2 == null goto label2;

        $r6 = r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        if $r6 == null goto label1;

        $r8 = r2.<com.android.emailcommon.provider.Account: com.android.emailcommon.provider.Policy mPolicy>;

        $r9 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        virtualinvoke $r8.<com.android.emailcommon.provider.Policy: void close(android.content.Context)>($r9);

     label1:
        $r7 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: android.content.Context getContext()>();

        virtualinvoke r2.<com.android.emailcommon.provider.Account: void close(android.content.Context)>($r7);

     label2:
        $r5 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("uiAccountCursor");

        r3 = (android.database.Cursor) $r5;

        if r3 == null goto label3;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label3:
        return;
    }

    protected volatile void onDiscardResult(java.lang.Object)
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        java.lang.Object r1;
        java.util.Map $r2;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Map) r1;

        virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: void onDiscardResult(java.util.Map)>($r2);

        return;
    }

    public volatile java.lang.Object loadInBackground()
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        java.util.Map $r1;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        $r1 = virtualinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.util.Map loadInBackground()>();

        return $r1;
    }

    void <init>(android.content.Context, java.lang.String, long, com.android.email.activity.setup.AccountSettingsFragment$1)
    {
        com.android.email.activity.setup.AccountSettingsFragment$AccountLoader r0;
        android.content.Context r1;
        java.lang.String r2;
        long l0;
        com.android.email.activity.setup.AccountSettingsFragment$1 r3;

        r0 := @this: com.android.email.activity.setup.AccountSettingsFragment$AccountLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: com.android.email.activity.setup.AccountSettingsFragment$1;

        specialinvoke r0.<com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: void <init>(android.content.Context,java.lang.String,long)>(r1, r2, l0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String RESULT_KEY_INBOX> = "inbox";

        <com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String RESULT_KEY_UIACCOUNT> = "uiAccount";

        <com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String RESULT_KEY_UIACCOUNT_CURSOR> = "uiAccountCursor";

        <com.android.email.activity.setup.AccountSettingsFragment$AccountLoader: java.lang.String RESULT_KEY_ACCOUNT> = "account";

        return;
    }
}
