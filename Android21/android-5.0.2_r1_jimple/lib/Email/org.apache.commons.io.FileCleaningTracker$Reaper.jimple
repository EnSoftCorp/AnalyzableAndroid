final class org.apache.commons.io.FileCleaningTracker$Reaper extends java.lang.Thread
{
    final org.apache.commons.io.FileCleaningTracker this$0;

    void <init>(org.apache.commons.io.FileCleaningTracker)
    {
        org.apache.commons.io.FileCleaningTracker$Reaper r0;
        org.apache.commons.io.FileCleaningTracker r1;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

        r1 := @parameter0: org.apache.commons.io.FileCleaningTracker;

        r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>("File Reaper");

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setPriority(int)>(10);

        virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker$Reaper: void setDaemon(boolean)>(1);

        return;
    }

    public void run()
    {
        org.apache.commons.io.FileCleaningTracker$Reaper r0;
        org.apache.commons.io.FileCleaningTracker $r1, $r2, $r5, $r7;
        boolean $z0;
        java.lang.ref.ReferenceQueue $r3;
        java.lang.ref.Reference $r4;
        java.util.Collection $r6, $r8;
        int $i0;
        java.lang.Exception $r9;
        org.apache.commons.io.FileCleaningTracker$Tracker r10;

        r0 := @this: org.apache.commons.io.FileCleaningTracker$Reaper;

     label1:
        $r1 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $z0 = $r1.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished>;

        if $z0 == 0 goto label2;

        $r7 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r8 = $r7.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

        $i0 = interfaceinvoke $r8.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label7;

     label2:
        $r2 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r3 = $r2.<org.apache.commons.io.FileCleaningTracker: java.lang.ref.ReferenceQueue q>;

        $r4 = virtualinvoke $r3.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

        r10 = (org.apache.commons.io.FileCleaningTracker$Tracker) $r4;

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        goto label1;

     label5:
        if r10 == null goto label6;

        virtualinvoke r10.<org.apache.commons.io.FileCleaningTracker$Tracker: boolean delete()>();

        virtualinvoke r10.<org.apache.commons.io.FileCleaningTracker$Tracker: void clear()>();

        $r5 = r0.<org.apache.commons.io.FileCleaningTracker$Reaper: org.apache.commons.io.FileCleaningTracker this$0>;

        $r6 = $r5.<org.apache.commons.io.FileCleaningTracker: java.util.Collection trackers>;

        interfaceinvoke $r6.<java.util.Collection: boolean remove(java.lang.Object)>(r10);

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
