public class com.android.emailcommon.utility.SSLUtils extends java.lang.Object
{
    private static android.net.SSLCertificateSocketFactory sSecureFactory;
    private static final boolean LOG_ENABLED;
    private static final java.lang.String TAG;
    private static final int SSL_HANDSHAKE_TIMEOUT;

    public void <init>()
    {
        com.android.emailcommon.utility.SSLUtils r0;

        r0 := @this: com.android.emailcommon.utility.SSLUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized android.net.SSLCertificateSocketFactory getSSLSocketFactory(android.content.Context, com.android.emailcommon.provider.HostAuth, boolean)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.HostAuth r1;
        boolean z0;
        android.net.SSLCertificateSocketFactory r2, $r3, $r4, $r6;
        javax.net.ssl.SSLSocketFactory $r5, $r7;
        javax.net.ssl.TrustManager[] $r8;
        com.android.emailcommon.utility.SSLUtils$SameCertificateCheckingTrustManager $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.HostAuth;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        $r7 = staticinvoke <android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>(30000, null);

        r2 = (android.net.SSLCertificateSocketFactory) $r7;

        $r8 = newarray (javax.net.ssl.TrustManager)[1];

        $r9 = new com.android.emailcommon.utility.SSLUtils$SameCertificateCheckingTrustManager;

        specialinvoke $r9.<com.android.emailcommon.utility.SSLUtils$SameCertificateCheckingTrustManager: void <init>(android.content.Context,com.android.emailcommon.provider.HostAuth)>(r0, r1);

        $r8[0] = $r9;

        virtualinvoke r2.<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>($r8);

        return r2;

     label1:
        $r3 = <com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory sSecureFactory>;

        if $r3 != null goto label2;

        $r5 = staticinvoke <android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>(30000, null);

        $r6 = (android.net.SSLCertificateSocketFactory) $r5;

        <com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory sSecureFactory> = $r6;

     label2:
        $r4 = <com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory sSecureFactory>;

        return $r4;
    }

    public static com.android.emailcommon.utility.SSLSocketFactory getHttpSocketFactory(android.content.Context, com.android.emailcommon.provider.HostAuth, javax.net.ssl.KeyManager, boolean)
    {
        android.content.Context r0;
        com.android.emailcommon.provider.HostAuth r1;
        javax.net.ssl.KeyManager r2;
        boolean z0;
        android.net.SSLCertificateSocketFactory r3;
        com.android.emailcommon.utility.SSLSocketFactory r4, $r5;
        org.apache.http.conn.ssl.X509HostnameVerifier $r6;
        javax.net.ssl.KeyManager[] $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.emailcommon.provider.HostAuth;

        r2 := @parameter2: javax.net.ssl.KeyManager;

        z0 := @parameter3: boolean;

        r3 = staticinvoke <com.android.emailcommon.utility.SSLUtils: android.net.SSLCertificateSocketFactory getSSLSocketFactory(android.content.Context,com.android.emailcommon.provider.HostAuth,boolean)>(r0, r1, z0);

        if r2 == null goto label1;

        $r7 = newarray (javax.net.ssl.KeyManager)[1];

        $r7[0] = r2;

        virtualinvoke r3.<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>($r7);

     label1:
        $r5 = new com.android.emailcommon.utility.SSLSocketFactory;

        specialinvoke $r5.<com.android.emailcommon.utility.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory)>(r3);

        r4 = $r5;

        if z0 == 0 goto label2;

        $r6 = <com.android.emailcommon.utility.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER>;

        virtualinvoke r4.<com.android.emailcommon.utility.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r6);

     label2:
        return r4;
    }

    private static boolean isAsciiLetter(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if 97 > c0 goto label1;

        if c0 <= 122 goto label2;

     label1:
        if 65 > c0 goto label3;

        if c0 > 90 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isAsciiNumber(char)
    {
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        if 48 > c0 goto label1;

        if c0 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String escapeForSchemeName(java.lang.String)
    {
        java.lang.String r0, $r3, r8;
        java.lang.StringBuilder r1, $r2, $r5;
        int i0, $i2;
        char c1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        r8 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        $i2 = virtualinvoke r8.<java.lang.String: int length()>();

        if i0 >= $i2 goto label6;

        c1 = virtualinvoke r8.<java.lang.String: char charAt(int)>(i0);

        $z0 = staticinvoke <com.android.emailcommon.utility.SSLUtils: boolean isAsciiLetter(char)>(c1);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.emailcommon.utility.SSLUtils: boolean isAsciiNumber(char)>(c1);

        if $z1 != 0 goto label2;

        if 45 == c1 goto label2;

        if 46 != c1 goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        goto label5;

     label3:
        if 43 != c1 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("++");

        goto label5;

     label4:
        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(c1);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <com.android.emailcommon.utility.SSLUtils: int SSL_HANDSHAKE_TIMEOUT> = 30000;

        <com.android.emailcommon.utility.SSLUtils: java.lang.String TAG> = "Email.Ssl";

        <com.android.emailcommon.utility.SSLUtils: boolean LOG_ENABLED> = 0;

        return;
    }
}
