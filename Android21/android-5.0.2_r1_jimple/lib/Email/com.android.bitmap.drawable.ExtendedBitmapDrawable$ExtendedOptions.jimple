public class com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions extends java.lang.Object
{
    public static final int FEATURE_ORDERED_DISPLAY;
    public static final int FEATURE_PARALLAX;
    public static final int FEATURE_STATE_CHANGES;
    public final int features;
    public float decodeVerticalCenter;
    public com.android.bitmap.DecodeAggregator decodeAggregator;
    public float parallaxSpeedMultiplier;
    public int backgroundColor;
    public android.graphics.drawable.Drawable placeholder;
    public int placeholderAnimationDuration;
    public android.graphics.drawable.Drawable progressBar;

    public void <init>(int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r0;
        int i0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: void <init>(int,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>(i0, null, null);

        return;
    }

    public void <init>(int, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r0;
        int i0;
        android.graphics.drawable.Drawable r1, r2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.drawable.Drawable;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float decodeVerticalCenter> = 0.33333334F;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: com.android.bitmap.DecodeAggregator decodeAggregator> = null;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float parallaxSpeedMultiplier> = 1.0F;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int backgroundColor> = 0;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int placeholderAnimationDuration> = 0;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int features> = i0;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable placeholder> = r1;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable progressBar> = r2;

        return;
    }

    private void validate() throws java.lang.IllegalStateException
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r0;
        float $f0, $f1, $f2;
        byte $b0, $b1, $b13;
        java.lang.IllegalStateException $r1, $r2, $r4, $r5, $r6, $r7;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.drawable.Drawable $r3;
        com.android.bitmap.DecodeAggregator $r8;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        $f0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float decodeVerticalCenter>;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $f1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float decodeVerticalCenter>;

        $b1 = $f1 cmpl 1.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: decodeVerticalCenter must be within 0 and 1, inclusive");

        throw $r1;

     label2:
        $i2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int features>;

        $i3 = $i2 & 1;

        if $i3 == 0 goto label3;

        $r8 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: com.android.bitmap.DecodeAggregator decodeAggregator>;

        if $r8 != null goto label3;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: To support FEATURE_ORDERED_DISPLAY, decodeAggregator must be set.");

        throw $r7;

     label3:
        $i4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int features>;

        $i5 = $i4 & 2;

        if $i5 == 0 goto label4;

        $f2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float parallaxSpeedMultiplier>;

        $b13 = $f2 cmpg 1.0F;

        if $b13 > 0 goto label4;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: To support FEATURE_PARALLAX, parallaxSpeedMultiplier must be greater than 1.");

        throw $r6;

     label4:
        $i6 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int features>;

        $i7 = $i6 & 4;

        if $i7 == 0 goto label7;

        $i8 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int backgroundColor>;

        if $i8 != 0 goto label5;

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable placeholder>;

        if $r3 != null goto label5;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: To support FEATURE_STATE_CHANGES, either backgroundColor or placeholder must be set.");

        throw $r5;

     label5:
        $i9 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int placeholderAnimationDuration>;

        if $i9 >= -1 goto label6;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: To support FEATURE_STATE_CHANGES, placeholderAnimationDuration must be set correctly.");

        throw $r4;

     label6:
        $i10 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int backgroundColor>;

        if $i10 == 0 goto label7;

        $i11 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int backgroundColor>;

        $i12 = staticinvoke <android.graphics.Color: int alpha(int)>($i11);

        if $i12 == 255 goto label7;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ExtendedOptions: To support FEATURE_STATE_CHANGES, backgroundColor must be set to an opaque color.");

        throw $r2;

     label7:
        return;
    }

    static void access$000(com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions) throws java.lang.IllegalStateException
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r0;

        r0 := @parameter0: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: void validate()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int FEATURE_STATE_CHANGES> = 4;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int FEATURE_PARALLAX> = 2;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int FEATURE_ORDERED_DISPLAY> = 1;

        return;
    }
}
