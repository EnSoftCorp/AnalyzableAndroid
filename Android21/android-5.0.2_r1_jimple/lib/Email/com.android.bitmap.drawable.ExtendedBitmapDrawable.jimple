public class com.android.bitmap.drawable.ExtendedBitmapDrawable extends com.android.bitmap.drawable.BasicBitmapDrawable implements java.lang.Runnable, com.android.bitmap.drawable.Parallaxable, com.android.bitmap.DecodeAggregator$Callback
{
    public static final int LOAD_STATE_UNINITIALIZED;
    public static final int LOAD_STATE_NOT_YET_LOADED;
    public static final int LOAD_STATE_LOADING;
    public static final int LOAD_STATE_LOADED;
    public static final int LOAD_STATE_FAILED;
    public static final boolean DEBUG;
    public static final java.lang.String TAG;
    private final android.content.res.Resources mResources;
    private final com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts;
    private float mParallaxFraction;
    private int mLoadState;
    private com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder;
    private com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress;
    private int mProgressDelayMs;
    private final android.os.Handler mHandler;

    public void <init>(android.content.res.Resources, com.android.bitmap.BitmapCache, boolean, com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.content.res.Resources r1;
        com.android.bitmap.BitmapCache r2;
        boolean z0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions r3, $r5;
        android.os.Handler $r4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: com.android.bitmap.BitmapCache;

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void <init>(android.content.res.Resources,com.android.bitmap.BitmapCache,boolean)>(r1, r2, z0);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: float mParallaxFraction> = 0.5F;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mLoadState> = 0;

        $r4 = new android.os.Handler;

        specialinvoke $r4.<android.os.Handler: void <init>()>();

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.os.Handler mHandler> = $r4;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources> = r1;

        if r3 != null goto label1;

        $r5 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions;

        specialinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: void <init>(int)>(0);

        r3 = $r5;

     label1:
        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts> = r3;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onOptsChanged()>();

        return;
    }

    public void onOptsChanged()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        android.graphics.drawable.Drawable r1, $r10, $r20, $r22, $r24, $r33, $r35;
        android.graphics.drawable.Drawable$ConstantState r2, $r26;
        android.graphics.Rect r3, $r16, $r29;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r4, $r5, $r11, $r12, $r19, $r21, $r25, $r34, $r36;
        android.content.res.Resources $r6, $r7, $r8, $r9, $r15, $r18, $r27, $r30, $r32;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r13, $r14, $r17;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r23, $r28, $r31;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        staticinvoke <com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: void access$000(com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>($r4);

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $i3 = $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: int features>;

        $i4 = $i3 & 4;

        if $i4 == 0 goto label6;

        $r6 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $i6 = <com.android.bitmap.R$integer: int bitmap_fade_animation_duration>;

        i0 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>($i6);

        $r7 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $i7 = <com.android.bitmap.R$integer: int bitmap_progress_animation_delay>;

        $i8 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>($i7);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mProgressDelayMs> = $i8;

        r1 = null;

        $r8 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $i9 = <com.android.bitmap.R$dimen: int placeholder_size>;

        i1 = virtualinvoke $r8.<android.content.res.Resources: int getDimensionPixelSize(int)>($i9);

        $r9 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $i10 = <com.android.bitmap.R$dimen: int placeholder_size>;

        i2 = virtualinvoke $r9.<android.content.res.Resources: int getDimensionPixelSize(int)>($i10);

        $r11 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r10 = $r11.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable placeholder>;

        if $r10 == null goto label4;

        $r34 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r33 = $r34.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable placeholder>;

        r2 = virtualinvoke $r33.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        if r2 == null goto label4;

        $r32 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        r1 = virtualinvoke r2.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r32);

        $r36 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r35 = $r36.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable placeholder>;

        r3 = virtualinvoke $r35.<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>();

        $i15 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        if $i15 == 0 goto label1;

        i1 = virtualinvoke r3.<android.graphics.Rect: int width()>();

        goto label2;

     label1:
        $i14 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        if $i14 == -1 goto label2;

        i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

     label2:
        $i13 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        if $i13 == 0 goto label3;

        i2 = virtualinvoke r3.<android.graphics.Rect: int height()>();

        goto label4;

     label3:
        $i12 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        if $i12 == -1 goto label4;

        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

     label4:
        $r13 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder;

        $r15 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $r12 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        specialinvoke $r13.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void <init>(android.graphics.drawable.Drawable,android.content.res.Resources,int,int,int,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>(r1, $r15, i1, i2, i0, $r12);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder> = $r13;

        $r14 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r14.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $r17 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        $r16 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r17.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setBounds(android.graphics.Rect)>($r16);

        $r19 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r20 = $r19.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable progressBar>;

        if $r20 == null goto label5;

        $r18 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $i11 = <com.android.bitmap.R$dimen: int progress_bar_size>;

        i16 = virtualinvoke $r18.<android.content.res.Resources: int getDimensionPixelSize(int)>($i11);

        $r23 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress;

        $r21 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r22 = $r21.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: android.graphics.drawable.Drawable progressBar>;

        $r26 = virtualinvoke $r22.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>();

        $r27 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $r24 = virtualinvoke $r26.<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>($r27);

        $r30 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.content.res.Resources mResources>;

        $r25 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        specialinvoke $r23.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void <init>(android.graphics.drawable.Drawable,android.content.res.Resources,int,int,int,com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions)>($r24, $r30, i16, i16, i0, $r25);

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress> = $r23;

        $r31 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r31.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        $r28 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        $r29 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.graphics.Rect getBounds()>();

        virtualinvoke $r28.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void setBounds(android.graphics.Rect)>($r29);

        goto label6;

     label5:
        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress> = null;

     label6:
        $i5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mLoadState>;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>($i5);

        return;
    }

    public void setParallaxFraction(float)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        float f0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        f0 := @parameter0: float;

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: float mParallaxFraction> = f0;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void invalidateSelf()>();

        return;
    }

    public com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions getExtendedOptions()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r1;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        return $r1;
    }

    public void showStaticPlaceholder()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>(4);

        return;
    }

    public void setExactDecodeDimensions(int, int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int i0, i1;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setDecodeDimensions(int,int)>(i0, i1);

        return;
    }

    public void setDecodeDimensions(int, int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int i0, i1, $i2;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r1;
        float $f0, $f1, $f2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $f1 = (float) i1;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $f0 = $r1.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float parallaxSpeedMultiplier>;

        $f2 = $f1 * $f0;

        $i2 = (int) $f2;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setDecodeDimensions(int,int)>(i0, $i2);

        return;
    }

    protected void setImage(com.android.bitmap.RequestKey)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1, $r2, $r6;
        android.os.Handler $r3;
        com.android.bitmap.DecodeAggregator $r4, $r5;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.RequestKey mCurrKey>;

        if $r2 == null goto label1;

        $r4 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        if $r4 == null goto label1;

        $r5 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        $r6 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.RequestKey mCurrKey>;

        virtualinvoke $r5.<com.android.bitmap.DecodeAggregator: void forget(java.lang.Object)>($r6);

     label1:
        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>(0);

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setImage(com.android.bitmap.RequestKey)>(r1);

        if r1 != null goto label2;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void showStaticPlaceholder()>();

     label2:
        return;
    }

    protected void setBitmap(com.android.bitmap.ReusableBitmap)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.ReusableBitmap r1;
        byte $b0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.ReusableBitmap;

        if r1 == null goto label1;

        $b0 = 3;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>($b0);

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setBitmap(com.android.bitmap.ReusableBitmap)>(r1);

        return;
    }

    protected void loadFileDescriptorFactory()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        boolean z0;
        com.android.bitmap.RequestKey $r1;
        int $i0, $i1;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        z0 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: boolean shouldExecuteStateChange()>();

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.RequestKey mCurrKey>;

        if $r1 == null goto label1;

        $i0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mDecodeWidth>;

        if $i0 == 0 goto label1;

        $i1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mDecodeHeight>;

        if $i1 != 0 goto label2;

     label1:
        return;

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>(1);

     label3:
        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void loadFileDescriptorFactory()>();

        return;
    }

    protected boolean shouldExecuteStateChange()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        return 1;
    }

    public float getDrawVerticalCenter()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        float $f0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $f0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: float mParallaxFraction>;

        return $f0;
    }

    protected final float getDrawVerticalOffsetMultiplier()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r1;
        float $f0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $f0 = $r1.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float parallaxSpeedMultiplier>;

        return $f0;
    }

    protected float getDecodeVerticalCenter()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r1;
        float $f0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $f0 = $r1.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: float decodeVerticalCenter>;

        return $f0;
    }

    private com.android.bitmap.DecodeAggregator getDecodeAggregator()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions $r1;
        com.android.bitmap.DecodeAggregator $r2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions mOpts>;

        $r2 = $r1.<com.android.bitmap.drawable.ExtendedBitmapDrawable$ExtendedOptions: com.android.bitmap.DecodeAggregator decodeAggregator>;

        return $r2;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        boolean $z0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r3, $r6;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r4, $r5;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.graphics.Rect getBounds()>();

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onDraw(android.graphics.Canvas)>(r1);

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r3 == null goto label2;

        $r6 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onDrawPlaceholderOrProgress(android.graphics.Canvas,com.android.bitmap.drawable.TileDrawable)>(r1, $r6);

     label2:
        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r4 == null goto label3;

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onDrawPlaceholderOrProgress(android.graphics.Canvas,com.android.bitmap.drawable.TileDrawable)>(r1, $r5);

     label3:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.graphics.Canvas r1;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    protected void onDrawPlaceholderOrProgress(android.graphics.Canvas, com.android.bitmap.drawable.TileDrawable)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.graphics.Canvas r1;
        com.android.bitmap.drawable.TileDrawable r2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: com.android.bitmap.drawable.TileDrawable;

        virtualinvoke r2.<com.android.bitmap.drawable.TileDrawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public void setAlpha(int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int i0, i1;
        android.graphics.Paint $r1;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r2, $r5;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r3, $r4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.graphics.Paint mPaint>;

        i1 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setAlpha(int)>(i0);

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setAlpha(int)>(i0);

     label1:
        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r4.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void setAlpha(int)>(i0);

     label2:
        if i0 == i1 goto label3;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void invalidateSelf()>();

     label3:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.graphics.ColorFilter r1;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r2, $r5;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r3, $r4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label1:
        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r4.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void setColorFilter(android.graphics.ColorFilter)>(r1);

     label2:
        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void invalidateSelf()>();

        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        android.graphics.Rect r1;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r2, $r5;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r3, $r4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void onBoundsChange(android.graphics.Rect)>(r1);

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setBounds(android.graphics.Rect)>(r1);

     label1:
        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r4.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    public void onDecodeBegin(com.android.bitmap.RequestKey)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1;
        com.android.bitmap.DecodeAggregator $r2, $r3;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        $r2 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        if $r2 == null goto label1;

        $r3 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        virtualinvoke $r3.<com.android.bitmap.DecodeAggregator: void expect(java.lang.Object,com.android.bitmap.ContiguousFIFOAggregator$Callback)>(r1, r0);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onBecomeFirstExpected(com.android.bitmap.RequestKey)>(r1);

     label2:
        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void onDecodeBegin(com.android.bitmap.RequestKey)>(r1);

        return;
    }

    public void onBecomeFirstExpected(com.android.bitmap.RequestKey)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1, $r2;
        boolean $z0;
        int $i0;
        long $l1;
        android.os.Handler $r3;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.RequestKey mCurrKey>;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: android.os.Handler mHandler>;

        $i0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mProgressDelayMs>;

        $l1 = (long) $i0;

        virtualinvoke $r3.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, $l1);

        return;
    }

    public void run()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int $i0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $i0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mLoadState>;

        if $i0 != 1 goto label1;

        specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void setLoadState(int)>(2);

     label1:
        return;
    }

    public void onDecodeComplete(com.android.bitmap.RequestKey, com.android.bitmap.ReusableBitmap)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1;
        com.android.bitmap.ReusableBitmap r2;
        com.android.bitmap.DecodeAggregator $r3, $r4;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$1 $r5;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        r2 := @parameter1: com.android.bitmap.ReusableBitmap;

        $r3 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        $r5 = new com.android.bitmap.drawable.ExtendedBitmapDrawable$1;

        specialinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$1: void <init>(com.android.bitmap.drawable.ExtendedBitmapDrawable,com.android.bitmap.RequestKey,com.android.bitmap.ReusableBitmap)>(r0, r1, r2);

        virtualinvoke $r4.<com.android.bitmap.DecodeAggregator: void execute(java.lang.Object,java.lang.Runnable)>(r1, $r5);

        goto label2;

     label1:
        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void onDecodeComplete(com.android.bitmap.RequestKey,com.android.bitmap.ReusableBitmap)>(r1, r2);

     label2:
        return;
    }

    public void onDecodeCancel(com.android.bitmap.RequestKey)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1;
        com.android.bitmap.DecodeAggregator $r2, $r3;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: com.android.bitmap.RequestKey;

        $r2 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        if $r2 == null goto label1;

        $r3 = specialinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.DecodeAggregator getDecodeAggregator()>();

        virtualinvoke $r3.<com.android.bitmap.DecodeAggregator: void forget(java.lang.Object)>(r1);

     label1:
        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void onDecodeCancel(com.android.bitmap.RequestKey)>(r1);

        return;
    }

    public int getLoadState()
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int $i0;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        $i0 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mLoadState>;

        return $i0;
    }

    private void setLoadState(int)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        int i0;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder $r1, $r3, $r6, $r8, $r10, $r12, $r13, $r14, $r17, $r20, $r21, $r24, $r26, $r27;
        com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress $r2, $r4, $r5, $r7, $r9, $r11, $r15, $r16, $r18, $r19, $r22, $r23, $r25;
        boolean $z2, $z4;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        i0 := @parameter0: int;

        staticinvoke <com.android.bitmap.util.Trace: void beginSection(java.lang.String)>("set load state");

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label08;
            case 4: goto label10;
            default: goto label12;
        };

     label01:
        $r1 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r1 == null goto label02;

        $r8 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r8.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void reset()>();

     label02:
        $r2 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r2 == null goto label12;

        $r7 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r7.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: void reset()>();

        goto label12;

     label03:
        $r24 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r24 == null goto label04;

        $r26 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r26.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setPulseEnabled(boolean)>(1);

        $r27 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r27.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean setVisible(boolean)>(1);

     label04:
        $r25 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r25 == null goto label12;

        $r23 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r23.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean setVisible(boolean)>(0);

        goto label12;

     label05:
        $r18 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r18 != null goto label06;

        goto label12;

     label06:
        $r20 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r20 == null goto label07;

        $r21 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r21.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean setVisible(boolean)>(0);

     label07:
        $r19 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r19 == null goto label12;

        $r22 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r22.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean setVisible(boolean)>(1);

        goto label12;

     label08:
        $r14 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r14 == null goto label09;

        $r17 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r17.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean setVisible(boolean)>(0);

     label09:
        $r16 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r16 == null goto label12;

        $r15 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r15.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean setVisible(boolean)>(0);

        goto label12;

     label10:
        $r10 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r10 == null goto label11;

        $r13 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r13.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: void setPulseEnabled(boolean)>(0);

        $r12 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        virtualinvoke $r12.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean setVisible(boolean)>(1);

     label11:
        $r9 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r9 == null goto label12;

        $r11 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        virtualinvoke $r11.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean setVisible(boolean)>(0);

     label12:
        staticinvoke <com.android.bitmap.util.Trace: void endSection()>();

        r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: int mLoadState> = i0;

        $r3 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        if $r3 == null goto label13;

        $r6 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder mPlaceholder>;

        $z4 = virtualinvoke $r6.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Placeholder: boolean isVisible()>();

        if $z4 == 0 goto label13;

        goto label13;

     label13:
        $r4 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        if $r4 == null goto label14;

        $r5 = r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress mProgress>;

        $z2 = virtualinvoke $r5.<com.android.bitmap.drawable.ExtendedBitmapDrawable$Progress: boolean isVisible()>();

        if $z2 == 0 goto label14;

        goto label14;

     label14:
        return;
    }

    public volatile void onBecomeFirstExpected(java.lang.Object)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        java.lang.Object r1;
        com.android.bitmap.RequestKey $r2;

        r0 := @this: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.android.bitmap.RequestKey) r1;

        virtualinvoke r0.<com.android.bitmap.drawable.ExtendedBitmapDrawable: void onBecomeFirstExpected(com.android.bitmap.RequestKey)>($r2);

        return;
    }

    static void access$101(com.android.bitmap.drawable.ExtendedBitmapDrawable, com.android.bitmap.RequestKey, com.android.bitmap.ReusableBitmap)
    {
        com.android.bitmap.drawable.ExtendedBitmapDrawable r0;
        com.android.bitmap.RequestKey r1;
        com.android.bitmap.ReusableBitmap r2;

        r0 := @parameter0: com.android.bitmap.drawable.ExtendedBitmapDrawable;

        r1 := @parameter1: com.android.bitmap.RequestKey;

        r2 := @parameter2: com.android.bitmap.ReusableBitmap;

        specialinvoke r0.<com.android.bitmap.drawable.BasicBitmapDrawable: void onDecodeComplete(com.android.bitmap.RequestKey,com.android.bitmap.ReusableBitmap)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: boolean DEBUG> = 0;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: int LOAD_STATE_FAILED> = 4;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: int LOAD_STATE_LOADED> = 3;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: int LOAD_STATE_LOADING> = 2;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: int LOAD_STATE_NOT_YET_LOADED> = 1;

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: int LOAD_STATE_UNINITIALIZED> = 0;

        $r0 = class "com/android/bitmap/drawable/ExtendedBitmapDrawable";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.bitmap.drawable.ExtendedBitmapDrawable: java.lang.String TAG> = $r1;

        return;
    }
}
