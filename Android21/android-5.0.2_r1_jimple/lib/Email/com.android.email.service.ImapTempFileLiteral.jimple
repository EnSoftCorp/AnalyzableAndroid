public class com.android.email.service.ImapTempFileLiteral extends com.android.email.mail.store.imap.ImapString
{
    final java.io.File mFile;
    private final int mSize;

    void <init>(com.android.email.FixedLengthInputStream) throws java.io.IOException
    {
        com.android.email.service.ImapTempFileLiteral r0;
        com.android.email.FixedLengthInputStream r1;
        java.io.FileOutputStream r2, $r5;
        int $i0;
        java.io.File $r3, $r4, $r6;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

        r1 := @parameter0: com.android.email.FixedLengthInputStream;

        specialinvoke r0.<com.android.email.mail.store.imap.ImapString: void <init>()>();

        $i0 = virtualinvoke r1.<com.android.email.FixedLengthInputStream: int getLength()>();

        r0.<com.android.email.service.ImapTempFileLiteral: int mSize> = $i0;

        $r3 = staticinvoke <com.android.emailcommon.TempDirectory: java.io.File getTempDirectory()>();

        $r4 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("imap", ".tmp", $r3);

        r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile> = $r4;

        $r5 = new java.io.FileOutputStream;

        $r6 = r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile>;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r6);

        r2 = $r5;

        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r1, r2);

        virtualinvoke r2.<java.io.OutputStream: void close()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.email.service.ImapTempFileLiteral r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

     label1:
        virtualinvoke r0.<com.android.email.service.ImapTempFileLiteral: void destroy()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.io.InputStream getAsStream()
    {
        com.android.email.service.ImapTempFileLiteral r0;
        java.io.FileInputStream $r2;
        java.io.File $r3;
        java.io.FileNotFoundException $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6;
        java.io.ByteArrayInputStream $r7;
        byte[] $r8;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

        virtualinvoke r0.<com.android.email.service.ImapTempFileLiteral: void checkNotDestroyed()>();

     label1:
        $r2 = new java.io.FileInputStream;

        $r3 = r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile>;

        specialinvoke $r2.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        $r6 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r6, "ImapTempFileLiteral: Temp file not found", $r5);

        $r7 = new java.io.ByteArrayInputStream;

        $r8 = newarray (byte)[0];

        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r8);

        return $r7;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String getString()
    {
        com.android.email.service.ImapTempFileLiteral r0;
        byte[] r1;
        java.io.InputStream $r2;
        int $i0;
        java.lang.String $r3, $r7;
        java.io.IOException $r4, $r5, r8;
        java.lang.Object[] $r6;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

        virtualinvoke r0.<com.android.email.service.ImapTempFileLiteral: void checkNotDestroyed()>();

     label1:
        $r2 = virtualinvoke r0.<com.android.email.service.ImapTempFileLiteral: java.io.InputStream getAsStream()>();

        r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r2);

        $i0 = lengthof r1;

        if $i0 <= 2097152 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>()>();

        throw $r4;

     label2:
        $r3 = staticinvoke <com.android.emailcommon.utility.Utility: java.lang.String fromAscii(byte[])>(r1);

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r8 = $r5;

        $r7 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r8;

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r7, "ImapTempFileLiteral: Error while reading temp file", $r6);

        return "";

        catch java.io.IOException from label1 to label3 with label4;
    }

    public void destroy()
    {
        com.android.email.service.ImapTempFileLiteral r0;
        java.lang.RuntimeException r1, $r4;
        boolean $z0, $z1;
        java.io.File $r2, $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.String $r6, $r8, $r10;
        java.lang.Object[] $r11;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

     label1:
        $z0 = virtualinvoke r0.<com.android.email.service.ImapTempFileLiteral: boolean isDestroyed()>();

        if $z0 != 0 goto label2;

        $r2 = r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile>;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r6 = <com.android.emailcommon.Logging: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove temp file: ");

        $r8 = virtualinvoke r1.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.mail.utils.LogUtils: int w(java.lang.String,java.lang.String,java.lang.Object[])>($r6, $r10, $r11);

     label4:
        specialinvoke r0.<com.android.email.mail.store.imap.ImapString: void destroy()>();

        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.android.email.service.ImapTempFileLiteral r0;
        java.lang.Object[] $r1;
        int $i0;
        java.lang.Integer $r2;
        java.lang.String $r3;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

        $r1 = newarray (java.lang.Object)[1];

        $i0 = r0.<com.android.email.service.ImapTempFileLiteral: int mSize>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("{%d byte literal(file)}", $r1);

        return $r3;
    }

    public boolean tempFileExistsForTest()
    {
        com.android.email.service.ImapTempFileLiteral r0;
        java.io.File $r1;
        boolean $z0;

        r0 := @this: com.android.email.service.ImapTempFileLiteral;

        $r1 = r0.<com.android.email.service.ImapTempFileLiteral: java.io.File mFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }
}
