public class com.android.commands.input.Input extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String INVALID_ARGUMENTS;
    private static final java.util.Map SOURCES;

    public void <init>()
    {
        com.android.commands.input.Input r0;

        r0 := @this: com.android.commands.input.Input;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        com.android.commands.input.Input $r1;

        r0 := @parameter0: java.lang.String[];

        $r1 = new com.android.commands.input.Input;

        specialinvoke $r1.<com.android.commands.input.Input: void <init>()>();

        specialinvoke $r1.<com.android.commands.input.Input: void run(java.lang.String[])>(r0);

        return;
    }

    private void run(java.lang.String[])
    {
        com.android.commands.input.Input r0;
        java.lang.String[] r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23, i24, i25, i26;
        java.lang.String r2, $r8, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r27, $r29, $r30, $r33;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Map $r3, $r31;
        java.io.PrintStream $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12, $r25, $r26, $r28;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        java.lang.Object $r32;
        java.lang.Integer $r34;
        java.lang.NumberFormatException $r35;

        r0 := @this: com.android.commands.input.Input;

        r1 := @parameter0: java.lang.String[];

        $i6 = lengthof r1;

        if $i6 >= 1 goto label01;

        specialinvoke r0.<com.android.commands.input.Input: void showUsage()>();

        return;

     label01:
        i0 = 0;

        r2 = r1[i0];

        i1 = 0;

        $r3 = <com.android.commands.input.Input: java.util.Map SOURCES>;

        $z1 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z1 == 0 goto label02;

        $r31 = <com.android.commands.input.Input: java.util.Map SOURCES>;

        $r32 = interfaceinvoke $r31.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r34 = (java.lang.Integer) $r32;

        i1 = virtualinvoke $r34.<java.lang.Integer: int intValue()>();

        i0 = i0 + 1;

        r2 = r1[i0];

     label02:
        $i7 = lengthof r1;

        i2 = $i7 - i0;

     label03:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("text");

        if $z2 == 0 goto label05;

        if i2 != 2 goto label25;

        i20 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 257);

        $i18 = i0 + 1;

        $r30 = r1[$i18];

        specialinvoke r0.<com.android.commands.input.Input: void sendText(int,java.lang.String)>(i20, $r30);

     label04:
        return;

     label05:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("keyevent");

        if $z3 == 0 goto label12;

        if i2 < 2 goto label25;

        $r23 = "--longpress";

        $i17 = i0 + 1;

        $r24 = r1[$i17];

        z0 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r24);

        if z0 == 0 goto label06;

        $i19 = i0 + 2;

        goto label07;

     label06:
        $i19 = i0 + 1;

     label07:
        i3 = $i19;

        i21 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 257);

        if i2 <= i3 goto label11;

        i4 = i3;

     label08:
        if i4 >= i2 goto label10;

        $r29 = r1[i4];

        i5 = staticinvoke <android.view.KeyEvent: int keyCodeFromString(java.lang.String)>($r29);

        if i5 != 0 goto label09;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("KEYCODE_");

        $r27 = r1[i4];

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        i5 = staticinvoke <android.view.KeyEvent: int keyCodeFromString(java.lang.String)>($r33);

     label09:
        specialinvoke r0.<com.android.commands.input.Input: void sendKeyEvent(int,int,boolean)>(i21, i5, z0);

        i4 = i4 + 1;

        goto label08;

     label10:
        return;

     label11:
        goto label25;

     label12:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("tap");

        if $z5 == 0 goto label14;

        if i2 != 3 goto label25;

        i22 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 4098);

        $i15 = i0 + 1;

        $r22 = r1[$i15];

        $f6 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r22);

        $i16 = i0 + 2;

        $r21 = r1[$i16];

        $f7 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r21);

        specialinvoke r0.<com.android.commands.input.Input: void sendTap(int,float,float)>(i22, $f6, $f7);

     label13:
        return;

     label14:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("swipe");

        if $z4 == 0 goto label19;

        i23 = -1;

        i24 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 4098);

        lookupswitch(i2)
        {
            case 5: goto label16;
            case 6: goto label15;
            default: goto label18;
        };

     label15:
        $i10 = i0 + 5;

        $r17 = r1[$i10];

        i23 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r17);

     label16:
        $i11 = i0 + 1;

        $r16 = r1[$i11];

        $f3 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16);

        $i12 = i0 + 2;

        $r18 = r1[$i12];

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r18);

        $i14 = i0 + 3;

        $r19 = r1[$i14];

        $f4 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r19);

        $i13 = i0 + 4;

        $r20 = r1[$i13];

        $f5 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r20);

        specialinvoke r0.<com.android.commands.input.Input: void sendSwipe(int,float,float,float,float,int)>(i24, $f3, $f2, $f4, $f5, i23);

     label17:
        return;

     label18:
        goto label25;

     label19:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("press");

        if $z7 == 0 goto label21;

        i25 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 65540);

        if i2 != 1 goto label25;

        specialinvoke r0.<com.android.commands.input.Input: void sendTap(int,float,float)>(i25, 0.0F, 0.0F);

     label20:
        return;

     label21:
        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("roll");

        if $z6 == 0 goto label23;

        i26 = staticinvoke <com.android.commands.input.Input: int getSource(int,int)>(i1, 65540);

        if i2 != 3 goto label25;

        $i8 = i0 + 1;

        $r15 = r1[$i8];

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r15);

        $i9 = i0 + 2;

        $r14 = r1[$i9];

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r14);

        specialinvoke r0.<com.android.commands.input.Input: void sendMove(int,float,float)>(i26, $f0, $f1);

     label22:
        return;

     label23:
        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Unknown command: ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r8);

        specialinvoke r0.<com.android.commands.input.Input: void showUsage()>();

     label24:
        return;

     label25:
        goto label27;

     label26:
        $r35 := @caughtexception;

     label27:
        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: Invalid arguments for command: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        specialinvoke r0.<com.android.commands.input.Input: void showUsage()>();

        return;

        catch java.lang.NumberFormatException from label03 to label04 with label26;
        catch java.lang.NumberFormatException from label05 to label10 with label26;
        catch java.lang.NumberFormatException from label11 to label13 with label26;
        catch java.lang.NumberFormatException from label14 to label17 with label26;
        catch java.lang.NumberFormatException from label18 to label20 with label26;
        catch java.lang.NumberFormatException from label21 to label22 with label26;
        catch java.lang.NumberFormatException from label23 to label24 with label26;
    }

    private void sendText(int, java.lang.String)
    {
        com.android.commands.input.Input r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1, $r7;
        java.lang.StringBuffer r2, $r6;
        boolean z0;
        android.view.KeyCharacterMap r3;
        android.view.KeyEvent[] r4;
        android.view.KeyEvent r5;
        char $c6, $c7;
        char[] r9;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        z0 = 0;

        i1 = 0;

     label1:
        $i3 = virtualinvoke r2.<java.lang.StringBuffer: int length()>();

        if i1 >= $i3 goto label4;

        if z0 == 0 goto label2;

        z0 = 0;

        $c6 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i1);

        if $c6 != 115 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: void setCharAt(int,char)>(i1, 32);

        i1 = i1 + -1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(i1);

     label2:
        $c7 = virtualinvoke r2.<java.lang.StringBuffer: char charAt(int)>(i1);

        if $c7 != 37 goto label3;

        z0 = 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        r9 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

        r3 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        r4 = virtualinvoke r3.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>(r9);

        i2 = 0;

     label5:
        $i5 = lengthof r4;

        if i2 >= $i5 goto label7;

        r5 = r4[i2];

        $i4 = virtualinvoke r5.<android.view.KeyEvent: int getSource()>();

        if i0 == $i4 goto label6;

        virtualinvoke r5.<android.view.KeyEvent: void setSource(int)>(i0);

     label6:
        specialinvoke r0.<com.android.commands.input.Input: void injectKeyEvent(android.view.KeyEvent)>(r5);

        i2 = i2 + 1;

        goto label5;

     label7:
        return;
    }

    private void sendKeyEvent(int, int, boolean)
    {
        com.android.commands.input.Input r0;
        int i0, i1;
        boolean z0;
        long l2;
        android.view.KeyEvent $r1, $r2, $r3;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r1 = new android.view.KeyEvent;

        specialinvoke $r1.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 0, i1, 0, 0, -1, 0, 0, i0);

        specialinvoke r0.<com.android.commands.input.Input: void injectKeyEvent(android.view.KeyEvent)>($r1);

        if z0 == 0 goto label1;

        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 0, i1, 1, 0, -1, 0, 128, i0);

        specialinvoke r0.<com.android.commands.input.Input: void injectKeyEvent(android.view.KeyEvent)>($r3);

     label1:
        $r2 = new android.view.KeyEvent;

        specialinvoke $r2.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 1, i1, 0, 0, -1, 0, 0, i0);

        specialinvoke r0.<com.android.commands.input.Input: void injectKeyEvent(android.view.KeyEvent)>($r2);

        return;
    }

    private void sendTap(int, float, float)
    {
        com.android.commands.input.Input r0;
        int i0;
        float f0, f1;
        long l1;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 0, l1, f0, f1, 1.0F);

        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 1, l1, f0, f1, 0.0F);

        return;
    }

    private void sendSwipe(int, float, float, float, float, int)
    {
        com.android.commands.input.Input r0;
        int i0, i1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8;
        long l2, l3, l4, l5, $l6;
        byte $b7;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        i1 := @parameter5: int;

        if i1 >= 0 goto label1;

        i1 = 300;

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 0, l2, f0, f1, 1.0F);

        l3 = l2;

        $l6 = (long) i1;

        l4 = l3 + $l6;

     label2:
        $b7 = l2 cmp l4;

        if $b7 >= 0 goto label3;

        l5 = l2 - l3;

        $f6 = (float) l5;

        $f5 = (float) i1;

        f4 = $f6 / $f5;

        $f8 = staticinvoke <com.android.commands.input.Input: float lerp(float,float,float)>(f0, f2, f4);

        $f7 = staticinvoke <com.android.commands.input.Input: float lerp(float,float,float)>(f1, f3, f4);

        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 2, l2, $f8, $f7, 1.0F);

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        goto label2;

     label3:
        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 1, l2, f2, f3, 0.0F);

        return;
    }

    private void sendMove(int, float, float)
    {
        com.android.commands.input.Input r0;
        int i0;
        float f0, f1;
        long l1;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        specialinvoke r0.<com.android.commands.input.Input: void injectMotionEvent(int,int,long,float,float,float)>(i0, 2, l1, f0, f1, 0.0F);

        return;
    }

    private void injectKeyEvent(android.view.KeyEvent)
    {
        com.android.commands.input.Input r0;
        android.view.KeyEvent r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.hardware.input.InputManager $r6;

        r0 := @this: com.android.commands.input.Input;

        r1 := @parameter0: android.view.KeyEvent;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("injectKeyEvent: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Input", $r5);

        $r6 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r6.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 2);

        return;
    }

    private void injectMotionEvent(int, int, long, float, float, float)
    {
        com.android.commands.input.Input r0;
        int i0, i1;
        long l2;
        float f0, f1, f2;
        android.view.MotionEvent r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        android.hardware.input.InputManager $r6;

        r0 := @this: com.android.commands.input.Input;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>(l2, l2, i1, f0, f1, f2, 1.0F, 0, 1.0F, 1.0F, 0, 0);

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(i0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("injectMotionEvent: ");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Input", $r5);

        $r6 = staticinvoke <android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>();

        virtualinvoke $r6.<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>(r1, 2);

        return;
    }

    private static final float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = $f3 * f2;

        $f5 = $f4 + f0;

        return $f5;
    }

    private static final int getSource(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        $i2 = i1;

        goto label2;

     label1:
        $i2 = i0;

     label2:
        return $i2;
    }

    private void showUsage()
    {
        com.android.commands.input.Input r0;
        java.util.Iterator r1;
        java.lang.String r2, $r20;
        java.io.PrintStream $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r19;
        java.util.Map $r6;
        java.util.Set $r7;
        boolean $z0;
        java.lang.StringBuilder $r16, $r18, $r21;
        java.lang.Object $r17;

        r0 := @this: com.android.commands.input.Input;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Usage: input [<source>] <command> [<arg>...]");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println()>();

        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("The sources are: ");

        $r6 = <com.android.commands.input.Input: java.util.Map SOURCES>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r17;

        $r19 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r20);

        goto label1;

     label2:
        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println()>();

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("The commands and default sources are:");

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("      text <string> (Default: touchscreen)");

        $r11 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("      keyevent [--longpress] <key code number or name> ... (Default: keyboard)");

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("      tap <x> <y> (Default: touchscreen)");

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("      swipe <x1> <y1> <x2> <y2> [duration(ms)] (Default: touchscreen)");

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("      press (Default: trackball)");

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("      roll <dx> <dy> (Default: trackball)");

        return;
    }

    static void <clinit>()
    {
        com.android.commands.input.Input$1 $r0;

        <com.android.commands.input.Input: java.lang.String INVALID_ARGUMENTS> = "Error: Invalid arguments for command: ";

        <com.android.commands.input.Input: java.lang.String TAG> = "Input";

        $r0 = new com.android.commands.input.Input$1;

        specialinvoke $r0.<com.android.commands.input.Input$1: void <init>()>();

        <com.android.commands.input.Input: java.util.Map SOURCES> = $r0;

        return;
    }
}
