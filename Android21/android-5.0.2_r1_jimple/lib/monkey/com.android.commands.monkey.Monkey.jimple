public class com.android.commands.monkey.Monkey extends java.lang.Object
{
    private static final int DEBUG_ALLOW_ANY_STARTS;
    private static final int DEBUG_ALLOW_ANY_RESTARTS;
    private android.app.IActivityManager mAm;
    private android.view.IWindowManager mWm;
    private android.content.pm.IPackageManager mPm;
    private java.lang.String[] mArgs;
    private int mNextArg;
    private java.lang.String mCurArgData;
    private int mVerbose;
    private boolean mIgnoreCrashes;
    private boolean mIgnoreTimeouts;
    private boolean mIgnoreSecurityExceptions;
    private boolean mMonitorNativeCrashes;
    private boolean mIgnoreNativeCrashes;
    private boolean mSendNoEvents;
    private boolean mAbort;
    private boolean mCountEvents;
    private boolean mRequestAnrTraces;
    private boolean mRequestDumpsysMemInfo;
    private boolean mRequestAnrBugreport;
    private boolean mRequestWatchdogBugreport;
    private boolean mWatchdogWaiting;
    private boolean mRequestAppCrashBugreport;
    private boolean mGetPeriodicBugreport;
    private boolean mRequestPeriodicBugreport;
    private long mBugreportFrequency;
    private java.lang.String mReportProcessName;
    private boolean mRequestProcRank;
    private boolean mKillProcessAfterError;
    private boolean mGenerateHprof;
    private java.lang.String mPkgBlacklistFile;
    private java.lang.String mPkgWhitelistFile;
    private java.util.HashSet mValidPackages;
    private java.util.HashSet mInvalidPackages;
    private java.util.ArrayList mMainCategories;
    private java.util.ArrayList mMainApps;
    long mThrottle;
    boolean mRandomizeThrottle;
    int mCount;
    long mSeed;
    java.util.Random mRandom;
    long mDroppedKeyEvents;
    long mDroppedPointerEvents;
    long mDroppedTrackballEvents;
    long mDroppedFlipEvents;
    long mDroppedRotationEvents;
    long mProfileWaitTime;
    long mDeviceSleepTime;
    boolean mRandomizeScript;
    boolean mScriptLog;
    private boolean mRequestBugreport;
    private java.lang.String mSetupFileName;
    private java.util.ArrayList mScriptFileNames;
    private int mServerPort;
    private static final java.io.File TOMBSTONES_PATH;
    private java.util.HashSet mTombstones;
    float[] mFactors;
    com.android.commands.monkey.MonkeyEventSource mEventSource;
    private com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor;
    public static android.content.Intent currentIntent;
    public static java.lang.String currentPackage;

    public void <init>()
    {
        com.android.commands.monkey.Monkey r0;
        java.util.HashSet $r1, $r2;
        java.util.ArrayList $r3, $r4, $r5;
        float[] $r6;
        com.android.commands.monkey.MonkeyNetworkMonitor $r7;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 1;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency> = 10L;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = 0;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps> = $r4;

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle> = 0;

        r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom> = null;

        r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime> = 5000L;

        r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime> = 30000L;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mScriptLog> = 0;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport> = 0;

        r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName> = null;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames> = $r5;

        r0.<com.android.commands.monkey.Monkey: int mServerPort> = -1;

        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        $r6 = newarray (float)[11];

        r0.<com.android.commands.monkey.Monkey: float[] mFactors> = $r6;

        $r7 = new com.android.commands.monkey.MonkeyNetworkMonitor;

        specialinvoke $r7.<com.android.commands.monkey.MonkeyNetworkMonitor: void <init>()>();

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor> = $r7;

        return;
    }

    private boolean checkEnteringPackage(java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1;
        java.util.HashSet $r2, $r3, $r4, $r5;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages>;

        $i0 = virtualinvoke $r2.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label1;

        $r5 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages>;

        $z1 = virtualinvoke $r5.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        return 0;

     label1:
        $r3 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $i1 = virtualinvoke $r3.<java.util.HashSet: int size()>();

        if $i1 <= 0 goto label2;

        $r4 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $z0 = virtualinvoke $r4.<java.util.HashSet: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private void reportProcRank()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("procrank", "procrank");

        return;
    }

    private void reportAnrTraces()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.InterruptedException $r2;

        r0 := @this: com.android.commands.monkey.Monkey;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(5000L);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("anr traces", "cat /data/anr/traces.txt");

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void reportDumpsysMemInfo()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>("meminfo", "dumpsys meminfo");

        return;
    }

    private void commandLineReport(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, r2, r9, $r14, $r17, $r24, $r37, $r38;
        java.io.BufferedWriter r4, $r26;
        java.lang.Process r5;
        java.io.InputStream r6;
        java.io.InputStreamReader r7, $r16;
        java.io.BufferedReader r8, $r18;
        int i0;
        java.lang.StringBuilder $r10, $r12, $r13, $r19, $r20, $r22, $r23, $r25, $r30, $r33, $r34, $r36;
        java.io.PrintStream $r11, $r21, $r28, $r35, $r39;
        java.lang.Runtime $r15;
        boolean $z0, $z1;
        java.io.FileWriter $r27;
        java.lang.Exception $r29, r40;
        java.io.File $r31, $r32;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r4 = null;

     label1:
        $r15 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        r5 = virtualinvoke $r15.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(r2);

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        if $z0 == 0 goto label2;

        $r26 = new java.io.BufferedWriter;

        $r27 = new java.io.FileWriter;

        $r31 = new java.io.File;

        $r32 = staticinvoke <android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>();

        specialinvoke $r31.<java.io.File: void <init>(java.io.File,java.lang.String)>($r32, r1);

        specialinvoke $r27.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r31, 1);

        specialinvoke $r26.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r27);

        r4 = $r26;

     label2:
        r6 = virtualinvoke r5.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r16 = new java.io.InputStreamReader;

        specialinvoke $r16.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r6);

        r7 = $r16;

        $r18 = new java.io.BufferedReader;

        specialinvoke $r18.<java.io.BufferedReader: void <init>(java.io.Reader)>(r7);

        r8 = $r18;

     label3:
        $r17 = virtualinvoke r8.<java.io.BufferedReader: java.lang.String readLine()>();

        r9 = $r17;

        if $r17 == null goto label5;

        $z1 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        if $z1 == 0 goto label4;

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>(r9);

        virtualinvoke r4.<java.io.Writer: void write(java.lang.String)>("\n");

        goto label3;

     label4:
        $r28 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>(r9);

        goto label3;

     label5:
        i0 = virtualinvoke r5.<java.lang.Process: int waitFor()>();

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status was ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        if r4 == null goto label6;

        virtualinvoke r4.<java.io.Writer: void close()>();

     label6:
        goto label8;

     label7:
        $r29 := @caughtexception;

        r40 = $r29;

        $r35 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Exception from ");

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r38);

        $r39 = <java.lang.System: java.io.PrintStream err>;

        $r37 = virtualinvoke r40.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r39.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label8:
        return;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    private void writeScriptLog(int)
    {
        com.android.commands.monkey.Monkey r0;
        int i0;
        java.io.BufferedWriter r1, $r2;
        java.io.FileWriter $r3;
        java.io.File $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12;
        long $l1;
        java.lang.String $r10, $r13, $r16;
        java.io.PrintStream $r14;
        java.io.IOException $r15, r17;

        r0 := @this: com.android.commands.monkey.Monkey;

        i0 := @parameter0: int;

     label1:
        $r2 = new java.io.BufferedWriter;

        $r3 = new java.io.FileWriter;

        $r4 = new java.io.File;

        $r5 = staticinvoke <android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, "scriptlog.txt");

        specialinvoke $r3.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r4, 1);

        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);

        r1 = $r2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("iteration: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r13);

        virtualinvoke r1.<java.io.Writer: void close()>();

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r17 = $r15;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r16 = virtualinvoke r17.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void getBugreport(java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, r2, $r5, $r10, r11;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8, $r9;
        long $l0;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke r11.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ ,:]", "_");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".txt");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void commandLineReport(java.lang.String,java.lang.String)>($r10, "bugreport");

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int i0;
        com.android.commands.monkey.Monkey $r1;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>("com.android.commands.monkey");

        $r1 = new com.android.commands.monkey.Monkey;

        specialinvoke $r1.<com.android.commands.monkey.Monkey: void <init>()>();

        i0 = specialinvoke $r1.<com.android.commands.monkey.Monkey: int run(java.lang.String[])>(r0);

        staticinvoke <java.lang.System: void exit(int)>(i0);

        return;
    }

    private int run(java.lang.String[])
    {
        com.android.commands.monkey.Monkey r0, r139;
        java.lang.String[] r1, r2;
        int i0, i1, $i2, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i24, $i26, $i30, $i33, $i34, $i36, $i39, $i40, $i43, $i44, $i45, $i47, $i50, $i53, $i54, $i55, i56, i57, i58;
        java.lang.String r3, $r39, $r46, $r56, $r59, $r64, $r67, $r74, $r77, $r82, $r99, $r105, $r107, $r109, $r114, $r116, $r120, $r134;
        java.lang.Throwable r4, r5, $r125, $r130;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z24, $z25;
        java.util.ArrayList $r6, $r8, $r9, $r11, $r75, $r78, $r79, $r87, $r89, $r92, $r95, $r115, $r132;
        long $l3, $l6, $l9, $l18, $l19, $l20, $l21, $l22, $l23, $l27, $l28, $l29, $l31, $l32, $l35, $l37, $l38, $l41, $l42, $l46, $l48, $l49, $l51;
        byte $b4, $b25;
        java.util.Random $r7, $r12, $r72, $r76, $r90;
        com.android.commands.monkey.MonkeySourceRandom $r10, $r15, $r61;
        com.android.commands.monkey.MonkeyEventSource $r13, $r14, $r16, $r62, $r81, $r83;
        com.android.commands.monkey.MonkeyRotationEvent $r17, $r131;
        com.android.commands.monkey.MonkeyNetworkMonitor $r18, $r19, $r25, $r26;
        android.app.IActivityManager $r20, $r23, $r24, $r127;
        android.view.IWindowManager $r21, $r128;
        java.lang.StringBuilder $r27, $r29, $r30, $r32, $r33, $r34, $r38, $r47, $r48, $r49, $r51, $r53, $r54, $r55, $r58, $r68, $r69, $r71, $r84, $r86, $r94, $r96, $r97, $r100, $r102, $r103, $r104, $r111, $r113, $r117, $r118, $r123;
        java.io.PrintStream $r28, $r31, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r44, $r45, $r50, $r52, $r57, $r60, $r70, $r85, $r101, $r110, $r119, $r124;
        float $f0, $f1;
        float[] $r63, $r65, $r133;
        com.android.commands.monkey.MonkeySourceNetwork $r66;
        com.android.commands.monkey.MonkeySourceRandomScript $r73, $r80;
        com.android.commands.monkey.MonkeySourceScript $r88;
        java.lang.Object $r91, $r106, $r108, $r121;
        java.util.HashSet $r93, $r98, $r112, $r122;
        android.os.RemoteException $r126;
        java.io.IOException $r129;
        java.util.Iterator r135, r136, r137;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label01:
        if i1 >= i0 goto label03;

        r3 = r2[i1];

        $r134 = "--wait-dbg";

        $z25 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z25 == 0 goto label02;

        staticinvoke <android.os.Debug: void waitForDebugger()>();

     label02:
        i1 = i1 + 1;

        goto label01;

     label03:
        r0.<com.android.commands.monkey.Monkey: int mVerbose> = 0;

        r0.<com.android.commands.monkey.Monkey: int mCount> = 1000;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = 0L;

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = 0L;

        r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs> = r1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = 0;

        i56 = 0;

     label04:
        if i56 >= 11 goto label05;

        $r133 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $r133[i56] = 1.0F;

        i56 = i56 + 1;

        goto label04;

     label05:
        $z0 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean processOptions()>();

        if $z0 != 0 goto label06;

        return -1;

     label06:
        $z1 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean loadPackageLists()>();

        if $z1 != 0 goto label07;

        return -1;

     label07:
        $r6 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label08;

        $r115 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r115.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.LAUNCHER");

        $r132 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        virtualinvoke $r132.<java.util.ArrayList: boolean add(java.lang.Object)>("android.intent.category.MONKEY");

     label08:
        $l3 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label09;

        $l51 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i50 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $l49 = (long) $i50;

        $l48 = $l51 + $l49;

        r0.<com.android.commands.monkey.Monkey: long mSeed> = $l48;

     label09:
        $i5 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i5 <= 0 goto label15;

        $r85 = <java.lang.System: java.io.PrintStream out>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":Monkey: seed=");

        $l46 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r97 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l46);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" count=");

        $i45 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $r100 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i45);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r85.<java.io.PrintStream: void println(java.lang.String)>($r99);

        $r98 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $i47 = virtualinvoke $r98.<java.util.HashSet: int size()>();

        if $i47 <= 0 goto label11;

        $r122 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        r135 = virtualinvoke $r122.<java.util.HashSet: java.util.Iterator iterator()>();

     label10:
        $z24 = interfaceinvoke r135.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label11;

        $r119 = <java.lang.System: java.io.PrintStream out>;

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r118 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":AllowPackage: ");

        $r121 = interfaceinvoke r135.<java.util.Iterator: java.lang.Object next()>();

        $r120 = (java.lang.String) $r121;

        $r117 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r116 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r119.<java.io.PrintStream: void println(java.lang.String)>($r116);

        goto label10;

     label11:
        $r93 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages>;

        $i44 = virtualinvoke $r93.<java.util.HashSet: int size()>();

        if $i44 <= 0 goto label13;

        $r112 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages>;

        r136 = virtualinvoke $r112.<java.util.HashSet: java.util.Iterator iterator()>();

     label12:
        $z22 = interfaceinvoke r136.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label13;

        $r101 = <java.lang.System: java.io.PrintStream out>;

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":DisallowPackage: ");

        $r106 = interfaceinvoke r136.<java.util.Iterator: java.lang.Object next()>();

        $r107 = (java.lang.String) $r106;

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r105);

        goto label12;

     label13:
        $r92 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $i43 = virtualinvoke $r92.<java.util.ArrayList: int size()>();

        if $i43 == 0 goto label15;

        $r95 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        r137 = virtualinvoke $r95.<java.util.ArrayList: java.util.Iterator iterator()>();

     label14:
        $z21 = interfaceinvoke r137.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label15;

        $r110 = <java.lang.System: java.io.PrintStream out>;

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":IncludeCategory: ");

        $r108 = interfaceinvoke r137.<java.util.Iterator: java.lang.Object next()>();

        $r109 = (java.lang.String) $r108;

        $r113 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r110.<java.io.PrintStream: void println(java.lang.String)>($r114);

        goto label14;

     label15:
        $z2 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkInternalConfiguration()>();

        if $z2 != 0 goto label16;

        return -2;

     label16:
        $z4 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>();

        if $z4 != 0 goto label17;

        return -3;

     label17:
        $z3 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean getMainApps()>();

        if $z3 != 0 goto label18;

        return -4;

     label18:
        $r7 = new java.util.Random;

        $l6 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        specialinvoke $r7.<java.util.Random: void <init>(long)>($l6);

        r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom> = $r7;

        $r9 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        if $r9 == null goto label19;

        $r87 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $i40 = virtualinvoke $r87.<java.util.ArrayList: int size()>();

        if $i40 != 1 goto label19;

        $r88 = new com.android.commands.monkey.MonkeySourceScript;

        $r90 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $r89 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $r91 = virtualinvoke $r89.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r82 = (java.lang.String) $r91;

        $l38 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z20 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $l42 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l41 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        specialinvoke $r88.<com.android.commands.monkey.MonkeySourceScript: void <init>(java.util.Random,java.lang.String,long,boolean,long,long)>($r90, $r82, $l38, $z20, $l42, $l41);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r88;

        $r83 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i39 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r83.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i39);

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 0;

        goto label32;

     label19:
        $r8 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        if $r8 == null goto label22;

        $r75 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $i30 = virtualinvoke $r75.<java.util.ArrayList: int size()>();

        if $i30 <= 1 goto label22;

        $r74 = r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName>;

        if $r74 == null goto label20;

        $r80 = new com.android.commands.monkey.MonkeySourceRandomScript;

        $r77 = r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName>;

        $r78 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $l32 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z17 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $r76 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $l31 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l37 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        $z19 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript>;

        specialinvoke $r80.<com.android.commands.monkey.MonkeySourceRandomScript: void <init>(java.lang.String,java.util.ArrayList,long,boolean,java.util.Random,long,long,boolean)>($r77, $r78, $l32, $z17, $r76, $l31, $l37, $z19);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r80;

        $i34 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i33 = $i34 + 1;

        r0.<com.android.commands.monkey.Monkey: int mCount> = $i33;

        goto label21;

     label20:
        $r73 = new com.android.commands.monkey.MonkeySourceRandomScript;

        $r79 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $l35 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z18 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        $r72 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $l28 = r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime>;

        $l29 = r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime>;

        $z16 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript>;

        specialinvoke $r73.<com.android.commands.monkey.MonkeySourceRandomScript: void <init>(java.util.ArrayList,long,boolean,java.util.Random,long,long,boolean)>($r79, $l35, $z18, $r72, $l28, $l29, $z16);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r73;

     label21:
        $r81 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i36 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r81.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i36);

        r0.<com.android.commands.monkey.Monkey: boolean mCountEvents> = 0;

        goto label32;

     label22:
        $i8 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        if $i8 == -1 goto label27;

     label23:
        $r66 = new com.android.commands.monkey.MonkeySourceNetwork;

        $i26 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        specialinvoke $r66.<com.android.commands.monkey.MonkeySourceNetwork: void <init>(int)>($i26);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r66;

     label24:
        goto label26;

     label25:
        $r129 := @caughtexception;

        $r124 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r124.<java.io.PrintStream: void println(java.lang.String)>("Error binding to network socket.");

        return -5;

     label26:
        r0.<com.android.commands.monkey.Monkey: int mCount> = 2147483647;

        goto label32;

     label27:
        $i7 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i7 < 2 goto label28;

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Seeded: ");

        $l27 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l27);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r67);

     label28:
        $r10 = new com.android.commands.monkey.MonkeySourceRandom;

        $r12 = r0.<com.android.commands.monkey.Monkey: java.util.Random mRandom>;

        $r11 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $l9 = r0.<com.android.commands.monkey.Monkey: long mThrottle>;

        $z5 = r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle>;

        specialinvoke $r10.<com.android.commands.monkey.MonkeySourceRandom: void <init>(java.util.Random,java.util.ArrayList,long,boolean)>($r12, $r11, $l9, $z5);

        r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource> = $r10;

        $r14 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $i10 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        interfaceinvoke $r14.<com.android.commands.monkey.MonkeyEventSource: void setVerbose(int)>($i10);

        i57 = 0;

     label29:
        if i57 >= 11 goto label31;

        $r65 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f1 = $r65[i57];

        $b25 = $f1 cmpg 0.0F;

        if $b25 > 0 goto label30;

        $r62 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r61 = (com.android.commands.monkey.MonkeySourceRandom) $r62;

        $r63 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $f0 = $r63[i57];

        virtualinvoke $r61.<com.android.commands.monkey.MonkeySourceRandom: void setFactors(int,float)>(i57, $f0);

     label30:
        i57 = i57 + 1;

        goto label29;

     label31:
        $r13 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $r15 = (com.android.commands.monkey.MonkeySourceRandom) $r13;

        virtualinvoke $r15.<com.android.commands.monkey.MonkeySourceRandom: void generateActivity()>();

     label32:
        $r16 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        $z6 = interfaceinvoke $r16.<com.android.commands.monkey.MonkeyEventSource: boolean validate()>();

        if $z6 != 0 goto label33;

        return -5;

     label33:
        $z7 = r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z7 == 0 goto label34;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

     label34:
        $r18 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r18.<com.android.commands.monkey.MonkeyNetworkMonitor: void start()>();

     label35:
        i58 = specialinvoke r0.<com.android.commands.monkey.Monkey: int runMonkeyCycles()>();

     label36:
        $r17 = new com.android.commands.monkey.MonkeyRotationEvent;

        specialinvoke $r17.<com.android.commands.monkey.MonkeyRotationEvent: void <init>(int,boolean)>(0, 0);

        $r21 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r20 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i11 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        virtualinvoke $r17.<com.android.commands.monkey.MonkeyRotationEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r21, $r20, $i11);

        goto label39;

     label37:
        $r130 := @caughtexception;

        r4 = $r130;

     label38:
        $r131 = new com.android.commands.monkey.MonkeyRotationEvent;

        specialinvoke $r131.<com.android.commands.monkey.MonkeyRotationEvent: void <init>(int,boolean)>(0, 0);

        $r128 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r127 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i53 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        virtualinvoke $r131.<com.android.commands.monkey.MonkeyRotationEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r128, $r127, $i53);

        throw r4;

     label39:
        $r19 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r19.<com.android.commands.monkey.MonkeyNetworkMonitor: void stop()>();

        r139 = r0;

        entermonitor r0;

     label40:
        $z10 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z10 == 0 goto label41;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

     label41:
        $z8 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport>;

        if $z8 == 0 goto label42;

        $r57 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("Print the anr report");

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anr_");

        $r56 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        $r53 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r64 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r64);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

     label42:
        $z9 = r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport>;

        if $z9 == 0 goto label43;

        $r60 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r60.<java.io.PrintStream: void println(java.lang.String)>("Print the watchdog report");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("anr_watchdog_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

     label43:
        $z14 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport>;

        if $z14 == 0 goto label44;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app_crash");

        $r46 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r59 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r59);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

     label44:
        $z13 = r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z13 == 0 goto label45;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

     label45:
        $z12 = r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport>;

        if $z12 == 0 goto label46;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("Bugreport_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

     label46:
        $z11 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        if $z11 == 0 goto label47;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label47:
        exitmonitor r139;

     label48:
        goto label51;

     label49:
        $r125 := @caughtexception;

        r5 = $r125;

        exitmonitor r139;

     label50:
        throw r5;

     label51:
        $z15 = r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof>;

        if $z15 == 0 goto label52;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void signalPersistentProcesses()>();

        $i24 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i24 <= 0 goto label52;

        $r52 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>("// Generated profiling reports in /data/misc");

     label52:
        $r24 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        interfaceinvoke $r24.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>(null);

        $r26 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        $r23 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        virtualinvoke $r26.<com.android.commands.monkey.MonkeyNetworkMonitor: void unregister(android.app.IActivityManager)>($r23);

     label53:
        goto label55;

     label54:
        $r126 := @caughtexception;

        $i55 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        if i58 < $i55 goto label55;

        $i54 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        i58 = $i54 - 1;

     label55:
        $i14 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i14 <= 0 goto label56;

        $r40 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r40.<java.io.PrintStream: void print(java.lang.String)>(":Dropped: keys=");

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $l20 = r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        virtualinvoke $r35.<java.io.PrintStream: void print(long)>($l20);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r36.<java.io.PrintStream: void print(java.lang.String)>(" pointers=");

        $r37 = <java.lang.System: java.io.PrintStream out>;

        $l19 = r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        virtualinvoke $r37.<java.io.PrintStream: void print(long)>($l19);

        $r43 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r43.<java.io.PrintStream: void print(java.lang.String)>(" trackballs=");

        $r45 = <java.lang.System: java.io.PrintStream out>;

        $l23 = r0.<com.android.commands.monkey.Monkey: long mDroppedTrackballEvents>;

        virtualinvoke $r45.<java.io.PrintStream: void print(long)>($l23);

        $r44 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r44.<java.io.PrintStream: void print(java.lang.String)>(" flips=");

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $l21 = r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        virtualinvoke $r41.<java.io.PrintStream: void print(long)>($l21);

        $r42 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r42.<java.io.PrintStream: void print(java.lang.String)>(" rotations=");

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $l22 = r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents>;

        virtualinvoke $r50.<java.io.PrintStream: void println(long)>($l22);

     label56:
        $r25 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        virtualinvoke $r25.<com.android.commands.monkey.MonkeyNetworkMonitor: void dump()>();

        $i13 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $i16 = $i13 - 1;

        if i58 >= $i16 goto label57;

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** System appears to have crashed at event ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i58);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $i17 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        $r29 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using seed ");

        $l18 = r0.<com.android.commands.monkey.Monkey: long mSeed>;

        $r38 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r39);

        return i58;

     label57:
        $i15 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i15 <= 0 goto label58;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>("// Monkey finished");

     label58:
        return 0;

        catch java.io.IOException from label23 to label24 with label25;
        catch java.lang.Throwable from label35 to label36 with label37;
        catch java.lang.Throwable from label37 to label38 with label37;
        catch java.lang.Throwable from label40 to label48 with label49;
        catch java.lang.Throwable from label49 to label50 with label49;
        catch android.os.RemoteException from label52 to label53 with label54;
    }

    private boolean processOptions()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r3, $r9, $r10, $r11, $r13, $r15, $r29, $r31, $r34, $r36, r40;
        byte b0, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44;
        java.lang.String[] $r2;
        int $i1, $i2, $i3, $i8, $i30, $i31;
        java.io.PrintStream $r4, $r7, $r32, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37;
        java.lang.StringBuilder $r5, $r6, $r8, $r27, $r35, $r37;
        long $l4, $l5, $l6, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l21, $l22, $l23, $l24, $l25, $l26, $l27, $l28, $l29, $l32, $l33, $l34;
        java.util.ArrayList $r12, $r25;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        float[] $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26;
        java.lang.RuntimeException $r28, r39;
        java.util.HashSet $r30;
        java.lang.NumberFormatException $r33;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i1 = lengthof $r2;

        if $i1 >= 1 goto label01;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label01:
        $r3 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOption()>();

        r1 = $r3;

        if $r3 == null goto label42;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-s");

        if $z0 == 0 goto label02;

        $l34 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Seed");

        r0.<com.android.commands.monkey.Monkey: long mSeed> = $l34;

        goto label01;

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-p");

        if $z1 == 0 goto label03;

        $r30 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $r29 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r30.<java.util.HashSet: boolean add(java.lang.Object)>($r29);

        goto label01;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z2 == 0 goto label04;

        $r25 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r31 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r25.<java.util.ArrayList: boolean add(java.lang.Object)>($r31);

        goto label01;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z3 == 0 goto label05;

        $i31 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        $i30 = $i31 + 1;

        r0.<com.android.commands.monkey.Monkey: int mVerbose> = $i30;

        goto label01;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-crashes");

        if $z4 == 0 goto label06;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes> = 1;

        goto label01;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-timeouts");

        if $z5 == 0 goto label07;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts> = 1;

        goto label01;

     label07:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-security-exceptions");

        if $z7 == 0 goto label08;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions> = 1;

        goto label01;

     label08:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--monitor-native-crashes");

        if $z6 == 0 goto label09;

        r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes> = 1;

        goto label01;

     label09:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--ignore-native-crashes");

        if $z9 == 0 goto label10;

        r0.<com.android.commands.monkey.Monkey: boolean mIgnoreNativeCrashes> = 1;

        goto label01;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--kill-process-after-error");

        if $z8 == 0 goto label11;

        r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError> = 1;

        goto label01;

     label11:
        $z11 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--hprof");

        if $z11 == 0 goto label12;

        r0.<com.android.commands.monkey.Monkey: boolean mGenerateHprof> = 1;

        goto label01;

     label12:
        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-touch");

        if $z10 == 0 goto label13;

        b0 = 0;

        $r26 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l32 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("touch events percentage");

        $l33 = neg $l32;

        $f9 = (float) $l33;

        $r26[b0] = $f9;

        goto label01;

     label13:
        $z13 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-motion");

        if $z13 == 0 goto label14;

        b35 = 1;

        $r23 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l26 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("motion events percentage");

        $l27 = neg $l26;

        $f10 = (float) $l27;

        $r23[b35] = $f10;

        goto label01;

     label14:
        $z12 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-trackball");

        if $z12 == 0 goto label15;

        b36 = 3;

        $r24 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l28 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("trackball events percentage");

        $l29 = neg $l28;

        $f7 = (float) $l29;

        $r24[b36] = $f7;

        goto label01;

     label15:
        $z15 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-rotation");

        if $z15 == 0 goto label16;

        b37 = 4;

        $r21 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l23 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("screen rotation events percentage");

        $l22 = neg $l23;

        $f8 = (float) $l22;

        $r21[b37] = $f8;

        goto label01;

     label16:
        $z14 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-syskeys");

        if $z14 == 0 goto label17;

        b38 = 7;

        $r22 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l25 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("system (key) operations percentage");

        $l24 = neg $l25;

        $f5 = (float) $l24;

        $r22[b38] = $f5;

        goto label01;

     label17:
        $z17 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-nav");

        if $z17 == 0 goto label18;

        b39 = 5;

        $r19 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l19 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("nav events percentage");

        $l18 = neg $l19;

        $f6 = (float) $l18;

        $r19[b39] = $f6;

        goto label01;

     label18:
        $z16 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-majornav");

        if $z16 == 0 goto label19;

        b40 = 6;

        $r20 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l21 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("major nav events percentage");

        $l20 = neg $l21;

        $f3 = (float) $l20;

        $r20[b40] = $f3;

        goto label01;

     label19:
        $z19 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-appswitch");

        if $z19 == 0 goto label20;

        b41 = 8;

        $r17 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l14 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("app switch events percentage");

        $l15 = neg $l14;

        $f4 = (float) $l15;

        $r17[b41] = $f4;

        goto label01;

     label20:
        $z18 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-flip");

        if $z18 == 0 goto label21;

        b42 = 9;

        $r18 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l16 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("keyboard flip percentage");

        $l17 = neg $l16;

        $f1 = (float) $l17;

        $r18[b42] = $f1;

        goto label01;

     label21:
        $z21 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-anyevent");

        if $z21 == 0 goto label22;

        b43 = 10;

        $r14 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l10 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("any events percentage");

        $l11 = neg $l10;

        $f2 = (float) $l11;

        $r14[b43] = $f2;

        goto label01;

     label22:
        $z20 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pct-pinchzoom");

        if $z20 == 0 goto label23;

        b44 = 2;

        $r16 = r0.<com.android.commands.monkey.Monkey: float[] mFactors>;

        $l12 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("pinch zoom events percentage");

        $l13 = neg $l12;

        $f0 = (float) $l13;

        $r16[b44] = $f0;

        goto label01;

     label23:
        $z24 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pkg-blacklist-file");

        if $z24 == 0 goto label24;

        $r15 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile> = $r15;

        goto label01;

     label24:
        $z25 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--pkg-whitelist-file");

        if $z25 == 0 goto label25;

        $r13 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile> = $r13;

        goto label01;

     label25:
        $z22 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--throttle");

        if $z22 == 0 goto label26;

        $l7 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("delay (in milliseconds) to wait between events");

        r0.<com.android.commands.monkey.Monkey: long mThrottle> = $l7;

        goto label01;

     label26:
        $z23 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--randomize-throttle");

        if $z23 == 0 goto label27;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeThrottle> = 1;

        goto label01;

     label27:
        $z28 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--wait-dbg");

        if $z28 == 0 goto label28;

        goto label01;

     label28:
        $z29 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--dbg-no-events");

        if $z29 == 0 goto label29;

        r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents> = 1;

        goto label01;

     label29:
        $z26 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--port");

        if $z26 == 0 goto label30;

        $l9 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Server port to listen on for commands");

        $i8 = (int) $l9;

        r0.<com.android.commands.monkey.Monkey: int mServerPort> = $i8;

        goto label01;

     label30:
        $z27 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--setup");

        if $z27 == 0 goto label31;

        $r10 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        r0.<com.android.commands.monkey.Monkey: java.lang.String mSetupFileName> = $r10;

        goto label01;

     label31:
        $z32 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-f");

        if $z32 == 0 goto label32;

        $r12 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mScriptFileNames>;

        $r11 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        goto label01;

     label32:
        $z33 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--profile-wait");

        if $z33 == 0 goto label33;

        $l4 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Profile delay (in milliseconds) to wait between user action");

        r0.<com.android.commands.monkey.Monkey: long mProfileWaitTime> = $l4;

        goto label01;

     label33:
        $z30 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--device-sleep-time");

        if $z30 == 0 goto label34;

        $l5 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Device sleep time(in milliseconds)");

        r0.<com.android.commands.monkey.Monkey: long mDeviceSleepTime> = $l5;

        goto label01;

     label34:
        $z31 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--randomize-script");

        if $z31 == 0 goto label35;

        r0.<com.android.commands.monkey.Monkey: boolean mRandomizeScript> = 1;

        goto label01;

     label35:
        $z36 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--script-log");

        if $z36 == 0 goto label36;

        r0.<com.android.commands.monkey.Monkey: boolean mScriptLog> = 1;

        goto label01;

     label36:
        $z37 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--bugreport");

        if $z37 == 0 goto label37;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport> = 1;

        goto label01;

     label37:
        $z34 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--periodic-bugreport");

        if $z34 == 0 goto label38;

        r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport> = 1;

        $l6 = specialinvoke r0.<com.android.commands.monkey.Monkey: long nextOptionLong(java.lang.String)>("Number of iterations");

        r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency> = $l6;

        goto label01;

     label38:
        $z35 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("-h");

        if $z35 == 0 goto label40;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label39:
        return 0;

     label40:
        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: Unknown option: ");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r9);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

     label41:
        return 0;

     label42:
        goto label44;

     label43:
        $r28 := @caughtexception;

        r39 = $r28;

        $r38 = <java.lang.System: java.io.PrintStream err>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        $r36 = virtualinvoke r39.<java.lang.RuntimeException: java.lang.String toString()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r34);

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label44:
        $i2 = r0.<com.android.commands.monkey.Monkey: int mServerPort>;

        if $i2 != -1 goto label48;

        r40 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextArg()>();

        if r40 != null goto label45;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("** Error: Count not specified");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label45:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r40);

        r0.<com.android.commands.monkey.Monkey: int mCount> = $i3;

     label46:
        goto label48;

     label47:
        $r33 := @caughtexception;

        $r32 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>("** Error: Count is not a number");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void showUsage()>();

        return 0;

     label48:
        return 1;

        catch java.lang.RuntimeException from label01 to label39 with label43;
        catch java.lang.RuntimeException from label40 to label41 with label43;
        catch java.lang.NumberFormatException from label45 to label46 with label47;
    }

    private static boolean loadPackageListFromFile(java.lang.String, java.util.HashSet)
    {
        java.lang.String r0, r3, $r9, r19;
        java.util.HashSet r1;
        java.io.BufferedReader r2, $r7;
        boolean z0, $z1;
        java.io.IOException r4, r6, $r10, $r11, $r13, $r15, r20, r21;
        java.lang.Throwable r5, $r17;
        java.io.FileReader $r8;
        int $i0;
        java.io.PrintStream $r12, $r14, $r16, $r18;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.HashSet;

        r2 = null;

     label01:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.FileReader;

        specialinvoke $r8.<java.io.FileReader: void <init>(java.lang.String)>(r0);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

        r2 = $r7;

     label02:
        $r9 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        r3 = $r9;

        if $r9 == null goto label03;

        r19 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i0 <= 0 goto label02;

        $z1 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 != 0 goto label02;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>(r19);

        goto label02;

     label03:
        if r2 == null goto label19;

     label04:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label05:
        goto label19;

     label06:
        $r15 := @caughtexception;

        r20 = $r15;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.Object)>(r20);

        goto label19;

     label07:
        $r11 := @caughtexception;

        r21 = $r11;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.Object)>(r21);

        z0 = 0;

     label08:
        if r2 == null goto label12;

     label09:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

        r4 = $r13;

        $r16 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.Object)>(r4);

     label12:
        return z0;

     label13:
        $r17 := @caughtexception;

        r5 = $r17;

     label14:
        if r2 == null goto label18;

     label15:
        virtualinvoke r2.<java.io.BufferedReader: void close()>();

     label16:
        goto label18;

     label17:
        $r10 := @caughtexception;

        r6 = $r10;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>(r6);

     label18:
        throw r5;

     label19:
        return 1;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label01 to label03 with label07;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label03 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private boolean loadPackageLists()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String $r1, $r2, $r3, $r4, $r6, $r8;
        java.util.HashSet $r5, $r7, $r10;
        boolean $z0, $z1;
        java.io.PrintStream $r9;
        int $i0;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r1 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile>;

        if $r1 != null goto label1;

        $r10 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $i0 = virtualinvoke $r10.<java.util.HashSet: int size()>();

        if $i0 <= 0 goto label2;

     label1:
        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile>;

        if $r2 == null goto label2;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("** Error: you can not specify a package blacklist together with a whitelist or individual packages (via -p).");

        return 0;

     label2:
        $r3 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile>;

        if $r3 == null goto label3;

        $r8 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgWhitelistFile>;

        $r7 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mValidPackages>;

        $z1 = staticinvoke <com.android.commands.monkey.Monkey: boolean loadPackageListFromFile(java.lang.String,java.util.HashSet)>($r8, $r7);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        $r4 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile>;

        if $r4 == null goto label4;

        $r6 = r0.<com.android.commands.monkey.Monkey: java.lang.String mPkgBlacklistFile>;

        $r5 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mInvalidPackages>;

        $z0 = staticinvoke <com.android.commands.monkey.Monkey: boolean loadPackageListFromFile(java.lang.String,java.util.HashSet)>($r6, $r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private boolean checkInternalConfiguration()
    {
        com.android.commands.monkey.Monkey r0;

        r0 := @this: com.android.commands.monkey.Monkey;

        return 1;
    }

    private boolean getSystemInterfaces()
    {
        com.android.commands.monkey.Monkey r0;
        android.app.IActivityManager $r2, $r3, $r11, $r12;
        android.os.IBinder $r4, $r7;
        android.view.IWindowManager $r5, $r6;
        android.content.pm.IPackageManager $r8, $r9;
        com.android.commands.monkey.Monkey$ActivityController $r10;
        com.android.commands.monkey.MonkeyNetworkMonitor $r13;
        java.io.PrintStream $r14, $r15, $r17, $r18;
        android.os.RemoteException $r16;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm> = $r2;

        $r3 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        if $r3 != null goto label1;

        $r17 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to activity manager; is the system running?");

        return 0;

     label1:
        $r4 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("window");

        $r5 = staticinvoke <android.view.IWindowManager$Stub: android.view.IWindowManager asInterface(android.os.IBinder)>($r4);

        r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm> = $r5;

        $r6 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        if $r6 != null goto label2;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to window manager; is the system running?");

        return 0;

     label2:
        $r7 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        $r8 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r7);

        r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm> = $r8;

        $r9 = r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        if $r9 != null goto label3;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("** Error: Unable to connect to package manager; is the system running?");

        return 0;

     label3:
        $r11 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $r10 = new com.android.commands.monkey.Monkey$ActivityController;

        specialinvoke $r10.<com.android.commands.monkey.Monkey$ActivityController: void <init>(com.android.commands.monkey.Monkey,com.android.commands.monkey.Monkey$1)>(r0, null);

        interfaceinvoke $r11.<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>($r10);

        $r13 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyNetworkMonitor mNetworkMonitor>;

        $r12 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        virtualinvoke $r13.<com.android.commands.monkey.MonkeyNetworkMonitor: void register(android.app.IActivityManager)>($r12);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        $r18 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with activity manager!");

        return 0;

     label6:
        return 1;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private boolean getMainApps()
    {
        com.android.commands.monkey.Monkey r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.content.Intent r1, $r9;
        java.lang.String r2, r5, $r17, $r27, $r28, $r32, $r40, $r43, $r52;
        java.util.List r3;
        android.content.pm.ResolveInfo r4;
        java.util.ArrayList $r6, $r7, $r11, $r31;
        java.io.PrintStream $r8, $r13, $r21, $r36, $r48, $r49;
        java.lang.Object $r10, $r19;
        android.content.pm.IPackageManager $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r22, $r23, $r24, $r25, $r29, $r30, $r35, $r37, $r38, $r39, $r42, $r44, $r45, $r50, $r51;
        android.content.pm.ApplicationInfo $r18;
        boolean $z0;
        android.content.pm.ActivityInfo $r20, $r26, $r33, $r41;
        android.content.ComponentName $r34;
        android.os.RemoteException $r47;

        r0 := @this: com.android.commands.monkey.Monkey;

     label01:
        $r6 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        i1 = 0;

     label02:
        if i1 >= i0 goto label12;

        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r1 = $r9;

        $r11 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainCategories>;

        $r10 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (java.lang.String) $r10;

        $i5 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i5 <= 0 goto label03;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(r2);

     label03:
        $r12 = r0.<com.android.commands.monkey.Monkey: android.content.pm.IPackageManager mPm>;

        $i6 = staticinvoke <android.os.UserHandle: int myUserId()>();

        r3 = interfaceinvoke $r12.<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>(r1, null, 0, $i6);

        if r3 == null goto label04;

        $i7 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i7 != 0 goto label05;

     label04:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Warning: no activities found for category ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label11;

     label05:
        $i8 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i8 < 2 goto label06;

        $r49 = <java.lang.System: java.io.PrintStream out>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("// Selecting main activities from category ");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r49.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label06:
        i2 = interfaceinvoke r3.<java.util.List: int size()>();

        i3 = 0;

     label07:
        if i3 >= i2 goto label11;

        $r19 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i3);

        r4 = (android.content.pm.ResolveInfo) $r19;

        $r20 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r18 = $r20.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r5 = $r18.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $z0 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkEnteringPackage(java.lang.String)>(r5);

        if $z0 == 0 goto label09;

        $i10 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i10 < 2 goto label08;

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   + Using main activity ");

        $r41 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r40 = $r41.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r39 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

        $r45 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r43);

     label08:
        $r31 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $r34 = new android.content.ComponentName;

        $r33 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r32 = $r33.<android.content.pm.ActivityInfo: java.lang.String name>;

        specialinvoke $r34.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r5, $r32);

        virtualinvoke $r31.<java.util.ArrayList: boolean add(java.lang.Object)>($r34);

        goto label10;

     label09:
        $i9 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i9 < 3 goto label10;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("//   - NOT USING main activity ");

        $r26 = r4.<android.content.pm.ResolveInfo: android.content.pm.ActivityInfo activityInfo>;

        $r27 = $r26.<android.content.pm.ActivityInfo: java.lang.String name>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (from package ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r28);

     label10:
        i3 = i3 + 1;

        goto label07;

     label11:
        i1 = i1 + 1;

        goto label02;

     label12:
        goto label14;

     label13:
        $r47 := @caughtexception;

        $r48 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r48.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with package manager!");

        return 0;

     label14:
        $r7 = r0.<com.android.commands.monkey.Monkey: java.util.ArrayList mMainApps>;

        $i4 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i4 != 0 goto label15;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("** No activities found to run, monkey aborted.");

        return 0;

     label15:
        return 1;

        catch android.os.RemoteException from label01 to label12 with label13;
    }

    private int runMonkeyCycles()
    {
        com.android.commands.monkey.Monkey r0, r1;
        int i0, i1, $i2, $i3, $i6, $i17, i20;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30;
        java.lang.Throwable r2, $r48;
        java.lang.StringBuilder $r3, $r5, $r6, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r25, $r27, $r29, $r31, $r34, $r36, $r37, $r38, $r39, $r40, $r43, $r44, $r45;
        java.io.PrintStream $r4, $r12, $r13, $r14, $r20, $r24, $r28, $r30, $r32, $r47;
        java.lang.String $r7, $r23, $r26, $r33, $r35, $r41, $r42, $r46, r49;
        com.android.commands.monkey.MonkeyEventSource $r9;
        long $l4, $l5, $l7, $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l18, l19;
        android.app.IActivityManager $r10;
        byte $b8;
        android.view.IWindowManager $r11;
        com.android.commands.monkey.MonkeyEvent r50;

        r0 := @this: com.android.commands.monkey.Monkey;

        i0 = 0;

        i1 = 0;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

     label01:
        if z3 != 0 goto label37;

        $i2 = r0.<com.android.commands.monkey.Monkey: int mCount>;

        if i1 >= $i2 goto label37;

        r1 = r0;

        entermonitor r0;

     label02:
        $z4 = r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank>;

        if $z4 == 0 goto label03;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportProcRank()>();

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = 0;

     label03:
        $z6 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces>;

        if $z6 == 0 goto label04;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = 0;

        z0 = 1;

     label04:
        $z5 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport>;

        if $z5 == 0 goto label05;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("anr_");

        $r42 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        $r43 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r40 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r41);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = 0;

     label05:
        $z8 = r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport>;

        if $z8 == 0 goto label06;

        $r47 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r47.<java.io.PrintStream: void println(java.lang.String)>("Print the watchdog report");

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("anr_watchdog_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = 0;

     label06:
        $z7 = r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport>;

        if $z7 == 0 goto label07;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("app_crash");

        $r35 = r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r46 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>($r46);

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = 0;

     label07:
        $z10 = r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport>;

        if $z10 == 0 goto label08;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("Bugreport_");

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 0;

     label08:
        $z9 = r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo>;

        if $z9 == 0 goto label09;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = 0;

        z1 = 1;

     label09:
        $z12 = r0.<com.android.commands.monkey.Monkey: boolean mMonitorNativeCrashes>;

        if $z12 == 0 goto label14;

        $z25 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkNativeCrashes()>();

        if $z25 == 0 goto label14;

        if i0 <= 0 goto label14;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("** New native crash detected.");

        $z27 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        if $z27 == 0 goto label10;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void getBugreport(java.lang.String)>("native_crash_");

     label10:
        $z26 = r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z26 != 0 goto label11;

        $z29 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreNativeCrashes>;

        if $z29 == 0 goto label11;

        $z28 = r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        if $z28 == 0 goto label12;

     label11:
        $z30 = 1;

        goto label13;

     label12:
        $z30 = 0;

     label13:
        r0.<com.android.commands.monkey.Monkey: boolean mAbort> = $z30;

     label14:
        $z11 = r0.<com.android.commands.monkey.Monkey: boolean mAbort>;

        if $z11 == 0 goto label15;

        z2 = 1;

     label15:
        $z13 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        if $z13 == 0 goto label16;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = 0;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label16:
        exitmonitor r1;

     label17:
        goto label20;

     label18:
        $r48 := @caughtexception;

        r2 = $r48;

        exitmonitor r1;

     label19:
        throw r2;

     label20:
        if z0 == 0 goto label21;

        z0 = 0;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportAnrTraces()>();

     label21:
        if z1 == 0 goto label22;

        z1 = 0;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void reportDumpsysMemInfo()>();

     label22:
        if z2 == 0 goto label23;

        $r24 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>("** Monkey aborted due to error.");

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events injected: ");

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r33);

        return i0;

     label23:
        $z14 = r0.<com.android.commands.monkey.Monkey: boolean mSendNoEvents>;

        if $z14 == 0 goto label24;

        i0 = i0 + 1;

        i1 = i1 + 1;

        goto label01;

     label24:
        $i3 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        if $i3 <= 0 goto label25;

        $i17 = i0 % 100;

        if $i17 != 0 goto label25;

        if i0 == 0 goto label25;

        $l16 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r49 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l16);

        l19 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    //[calendar_time:");

        $r15 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r49);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" system_uptime:");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l19);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r26);

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    // Sending event #");

        $r22 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r23);

     label25:
        $r9 = r0.<com.android.commands.monkey.Monkey: com.android.commands.monkey.MonkeyEventSource mEventSource>;

        r50 = interfaceinvoke $r9.<com.android.commands.monkey.MonkeyEventSource: com.android.commands.monkey.MonkeyEvent getNextEvent()>();

        if r50 == null goto label35;

        $r11 = r0.<com.android.commands.monkey.Monkey: android.view.IWindowManager mWm>;

        $r10 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        $i6 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        i20 = virtualinvoke r50.<com.android.commands.monkey.MonkeyEvent: int injectEvent(android.view.IWindowManager,android.app.IActivityManager,int)>($r11, $r10, $i6);

        if i20 != 0 goto label29;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("    // Injection Failed");

        $z23 = r50 instanceof com.android.commands.monkey.MonkeyKeyEvent;

        if $z23 == 0 goto label26;

        $l12 = r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents>;

        $l18 = $l12 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedKeyEvents> = $l18;

        goto label33;

     label26:
        $z22 = r50 instanceof com.android.commands.monkey.MonkeyMotionEvent;

        if $z22 == 0 goto label27;

        $l14 = r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents>;

        $l13 = $l14 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedPointerEvents> = $l13;

        goto label33;

     label27:
        $z21 = r50 instanceof com.android.commands.monkey.MonkeyFlipEvent;

        if $z21 == 0 goto label28;

        $l9 = r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents>;

        $l15 = $l9 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedFlipEvents> = $l15;

        goto label33;

     label28:
        $z24 = r50 instanceof com.android.commands.monkey.MonkeyRotationEvent;

        if $z24 == 0 goto label33;

        $l11 = r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents>;

        $l10 = $l11 + 1L;

        r0.<com.android.commands.monkey.Monkey: long mDroppedRotationEvents> = $l10;

        goto label33;

     label29:
        if i20 != -1 goto label30;

        z3 = 1;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("** Error: RemoteException while injecting event.");

        goto label33;

     label30:
        if i20 != -2 goto label33;

        $z20 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreSecurityExceptions>;

        if $z20 != 0 goto label31;

        $z19 = 1;

        goto label32;

     label31:
        $z19 = 0;

     label32:
        z3 = $z19;

        if z3 == 0 goto label33;

        $r13 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("** Error: SecurityException while injecting event.");

     label33:
        $z17 = r50 instanceof com.android.commands.monkey.MonkeyThrottleEvent;

        if $z17 != 0 goto label34;

        i0 = i0 + 1;

        $z18 = r0.<com.android.commands.monkey.Monkey: boolean mCountEvents>;

        if $z18 == 0 goto label34;

        i1 = i1 + 1;

     label34:
        goto label36;

     label35:
        $z15 = r0.<com.android.commands.monkey.Monkey: boolean mCountEvents>;

        if $z15 != 0 goto label37;

        i1 = i1 + 1;

        specialinvoke r0.<com.android.commands.monkey.Monkey: void writeScriptLog(int)>(i1);

        $z16 = r0.<com.android.commands.monkey.Monkey: boolean mGetPeriodicBugreport>;

        if $z16 == 0 goto label36;

        $l5 = (long) i1;

        $l4 = r0.<com.android.commands.monkey.Monkey: long mBugreportFrequency>;

        $l7 = $l5 % $l4;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label36;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestPeriodicBugreport> = 1;

     label36:
        goto label01;

     label37:
        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Events injected: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r7);

        return i0;

        catch java.lang.Throwable from label02 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    private void signalPersistentProcesses()
    {
        com.android.commands.monkey.Monkey r0, r1;
        java.lang.Throwable r2, $r5;
        android.app.IActivityManager $r3;
        java.lang.InterruptedException $r6;
        android.os.RemoteException $r7;
        java.io.PrintStream $r8;

        r0 := @this: com.android.commands.monkey.Monkey;

     label1:
        $r3 = r0.<com.android.commands.monkey.Monkey: android.app.IActivityManager mAm>;

        interfaceinvoke $r3.<android.app.IActivityManager: void signalPersistentProcesses(int)>(10);

        r1 = r0;

        entermonitor r0;

     label2:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(2000L);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        goto label9;

     label7:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("** Failed talking with activity manager!");

        goto label9;

     label8:
        $r6 := @caughtexception;

     label9:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch android.os.RemoteException from label1 to label6 with label7;
        catch java.lang.InterruptedException from label1 to label6 with label8;
    }

    private boolean checkNativeCrashes()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String[] r1, r3;
        java.util.HashSet r2, $r6, $r7, $r8;
        int i0, i1, $i2;
        java.lang.String r4;
        java.io.File $r5;
        boolean $z0, $z1, z3;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r5 = <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH>;

        r1 = virtualinvoke $r5.<java.io.File: java.lang.String[] list()>();

        if r1 == null goto label1;

        $i2 = lengthof r1;

        if $i2 != 0 goto label2;

     label1:
        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = null;

        return 0;

     label2:
        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r2 = $r6;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r7 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones>;

        if $r7 == null goto label5;

        $r8 = r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones>;

        $z0 = virtualinvoke $r8.<java.util.HashSet: boolean containsAll(java.util.Collection)>(r2);

        if $z0 != 0 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        z3 = $z1;

        r0.<com.android.commands.monkey.Monkey: java.util.HashSet mTombstones> = r2;

        return z3;
    }

    private java.lang.String nextOption()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r4, $r5;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        boolean $z0, $z1;
        char $c6;

        r0 := @this: com.android.commands.monkey.Monkey;

        $i1 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r1 = $r3[$i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z0 != 0 goto label2;

        return null;

     label2:
        $i3 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("--");

        if $z1 == 0 goto label3;

        return null;

     label3:
        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i5 <= 1 goto label5;

        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        if $c6 == 45 goto label5;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i7 <= 2 goto label4;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = $r4;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        return $r5;

     label4:
        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        return r1;

     label5:
        r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData> = null;

        return r1;
    }

    private java.lang.String nextOptionData()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r2, $r5;
        java.lang.String[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.commands.monkey.Monkey: java.lang.String mCurArgData>;

        return $r5;

     label1:
        $i1 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r3 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = lengthof $r3;

        if $i1 < $i0 goto label2;

        return null;

     label2:
        $r4 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r1 = $r4[$i2];

        $i3 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i4;

        return r1;
    }

    private long nextOptionLong(java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1, $r3, $r10;
        long l0;
        java.lang.NumberFormatException r2, $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        java.io.PrintStream $r6;

        r0 := @this: com.android.commands.monkey.Monkey;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<com.android.commands.monkey.Monkey: java.lang.String nextOptionData()>();

        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("** Error: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a number");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r10);

        throw r2;

     label4:
        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String nextArg()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.commands.monkey.Monkey;

        $i1 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $r2 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.commands.monkey.Monkey: java.lang.String[] mArgs>;

        $i2 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        r1 = $r3[$i2];

        $i3 = r0.<com.android.commands.monkey.Monkey: int mNextArg>;

        $i4 = $i3 + 1;

        r0.<com.android.commands.monkey.Monkey: int mNextArg> = $i4;

        return r1;
    }

    private void showUsage()
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.StringBuffer r1, $r2;
        java.lang.String $r28;
        java.io.PrintStream $r29;

        r0 := @this: com.android.commands.monkey.Monkey;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("usage: monkey [-p ALLOWED_PACKAGE [-p ALLOWED_PACKAGE] ...]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [-c MAIN_CATEGORY [-c MAIN_CATEGORY] ...]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--ignore-crashes] [--ignore-timeouts]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--ignore-security-exceptions]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--monitor-native-crashes] [--ignore-native-crashes]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--kill-process-after-error] [--hprof]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-touch PERCENT] [--pct-motion PERCENT]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-trackball PERCENT] [--pct-syskeys PERCENT]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-nav PERCENT] [--pct-majornav PERCENT]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-appswitch PERCENT] [--pct-flip PERCENT]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pct-anyevent PERCENT] [--pct-pinchzoom PERCENT]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pkg-blacklist-file PACKAGE_BLACKLIST_FILE]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--pkg-whitelist-file PACKAGE_WHITELIST_FILE]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--wait-dbg] [--dbg-no-events]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--setup scriptfile] [-f scriptfile [-f scriptfile] ...]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--port port]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [-s SEED] [-v [-v] ...]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--throttle MILLISEC] [--randomize-throttle]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--profile-wait MILLISEC]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--device-sleep-time MILLISEC]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--randomize-script]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--script-log]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--bugreport]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              [--periodic-bugreport]\n");

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("              COUNT\n");

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r28 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r28);

        return;
    }

    static boolean access$000(com.android.commands.monkey.Monkey, java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        r1 := @parameter1: java.lang.String;

        $z0 = specialinvoke r0.<com.android.commands.monkey.Monkey: boolean checkEnteringPackage(java.lang.String)>(r1);

        return $z0;
    }

    static int access$100(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        int $i0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $i0 = r0.<com.android.commands.monkey.Monkey: int mVerbose>;

        return $i0;
    }

    static boolean access$200(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreCrashes>;

        return $z0;
    }

    static boolean access$300(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mRequestBugreport>;

        return $z0;
    }

    static boolean access$402(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mAbort> = z0;

        return z0;
    }

    static boolean access$502(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAppCrashBugreport> = z0;

        return z0;
    }

    static java.lang.String access$602(com.android.commands.monkey.Monkey, java.lang.String)
    {
        com.android.commands.monkey.Monkey r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.commands.monkey.Monkey: java.lang.String mReportProcessName> = r1;

        return r1;
    }

    static boolean access$700(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mKillProcessAfterError>;

        return $z0;
    }

    static boolean access$802(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrTraces> = z0;

        return z0;
    }

    static boolean access$902(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestDumpsysMemInfo> = z0;

        return z0;
    }

    static boolean access$1002(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestProcRank> = z0;

        return z0;
    }

    static boolean access$1102(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestAnrBugreport> = z0;

        return z0;
    }

    static boolean access$1200(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mIgnoreTimeouts>;

        return $z0;
    }

    static boolean access$1302(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mRequestWatchdogBugreport> = z0;

        return z0;
    }

    static boolean access$1402(com.android.commands.monkey.Monkey, boolean)
    {
        com.android.commands.monkey.Monkey r0;
        boolean z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        z0 := @parameter1: boolean;

        r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting> = z0;

        return z0;
    }

    static boolean access$1400(com.android.commands.monkey.Monkey)
    {
        com.android.commands.monkey.Monkey r0;
        boolean $z0;

        r0 := @parameter0: com.android.commands.monkey.Monkey;

        $z0 = r0.<com.android.commands.monkey.Monkey: boolean mWatchdogWaiting>;

        return $z0;
    }

    static void <clinit>()
    {
        java.io.File $r0;

        <com.android.commands.monkey.Monkey: int DEBUG_ALLOW_ANY_RESTARTS> = 0;

        <com.android.commands.monkey.Monkey: int DEBUG_ALLOW_ANY_STARTS> = 0;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("/data/tombstones");

        <com.android.commands.monkey.Monkey: java.io.File TOMBSTONES_PATH> = $r0;

        return;
    }
}
