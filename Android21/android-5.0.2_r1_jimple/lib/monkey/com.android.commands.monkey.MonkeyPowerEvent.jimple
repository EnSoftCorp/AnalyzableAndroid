public class com.android.commands.monkey.MonkeyPowerEvent extends com.android.commands.monkey.MonkeyEvent
{
    private static final java.lang.String TAG;
    private static final java.lang.String LOG_FILE;
    private static java.util.ArrayList mLogEvents;
    private static final java.lang.String TEST_SEQ_BEGIN;
    private static final java.lang.String TEST_STARTED;
    private static final java.lang.String TEST_DELAY_STARTED;
    private static final java.lang.String TEST_ENDED;
    private static final java.lang.String TEST_IDLE_ENDED;
    private static long mTestStartTime;
    private java.lang.String mPowerLogTag;
    private java.lang.String mTestResult;
    private static final long USB_DELAY_TIME;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = r1;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = r1;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = null;

        return;
    }

    public void <init>()
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        specialinvoke r0.<com.android.commands.monkey.MonkeyEvent: void <init>(int)>(4);

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag> = null;

        r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult> = null;

        return;
    }

    private void bufferLogEvent(java.lang.String, java.lang.String)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        java.lang.String r1, r2;
        long l0, l1, $l5, $l6;
        int $i2, $i3, $i4;
        android.content.ContentValues $r3, r6;
        java.lang.Long $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i2 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_TEST_BEGIN");

        if $i2 != 0 goto label1;

        <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime> = l0;

        goto label3;

     label1:
        $i3 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_IDLE_SUCCESS");

        if $i3 != 0 goto label2;

        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        $l6 = <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime>;

        l0 = $l6 + l1;

        r1 = "AUTOTEST_TEST_SUCCESS";

        goto label3;

     label2:
        $i4 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_TEST_BEGIN_DELAY");

        if $i4 != 0 goto label3;

        $l5 = l0 + 10000L;

        <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime> = $l5;

        l0 = <com.android.commands.monkey.MonkeyPowerEvent: long mTestStartTime>;

        r1 = "AUTOTEST_TEST_BEGIN";

     label3:
        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r6 = $r3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date", $r4);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("tag", r1);

        if r2 == null goto label4;

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("value", r2);

     label4:
        $r5 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        return;
    }

    private void writeLogEvents()
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        android.content.ContentValues[] r1, $r8;
        java.io.FileWriter r2, $r13;
        java.lang.StringBuffer r3, $r12;
        int i0, $i1;
        android.content.ContentValues r4;
        java.lang.String r5, $r15, $r16, $r17, $r21;
        java.lang.Throwable r6, $r23;
        java.util.ArrayList $r9, $r11;
        java.lang.Object[] $r10;
        java.lang.Long $r14;
        long $l2;
        boolean $z0;
        java.io.IOException $r25, $r26, $r27, $r28, r30;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        $r9 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        $r8 = newarray (android.content.ContentValues)[0];

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r8);

        r1 = (android.content.ContentValues[]) $r10;

        $r11 = <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents>;

        virtualinvoke $r11.<java.util.ArrayList: void clear()>();

        r2 = null;

     label01:
        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        r3 = $r12;

        i0 = 0;

     label02:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label04;

        r4 = r1[i0];

        $r14 = virtualinvoke r4.<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>("date");

        $l2 = virtualinvoke $r14.<java.lang.Long: long longValue()>();

        $r16 = staticinvoke <com.android.commands.monkey.MonkeyUtils: java.lang.String toCalendarTime(long)>($l2);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = virtualinvoke r4.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("tag");

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $z0 = virtualinvoke r4.<android.content.ContentValues: boolean containsKey(java.lang.String)>("value");

        if $z0 == 0 goto label03;

        r5 = virtualinvoke r4.<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>("value");

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r21 = virtualinvoke r5.<java.lang.String: java.lang.String replace(char,char)>(10, 47);

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

     label03:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i0 = i0 + 1;

        goto label02;

     label04:
        $r13 = new java.io.FileWriter;

        specialinvoke $r13.<java.io.FileWriter: void <init>(java.lang.String,boolean)>("/sdcard/autotester.log", 1);

        r2 = $r13;

        $r15 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r2.<java.io.FileWriter: void write(java.lang.String)>($r15);

     label05:
        if r2 == null goto label06;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

     label06:
        goto label17;

     label07:
        $r27 := @caughtexception;

        goto label17;

     label08:
        $r25 := @caughtexception;

        r30 = $r25;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("PowerTester", "Can\'t write sdcard log file", r30);

     label09:
        if r2 == null goto label10;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

     label10:
        goto label17;

     label11:
        $r26 := @caughtexception;

        goto label17;

     label12:
        $r23 := @caughtexception;

        r6 = $r23;

     label13:
        if r2 == null goto label14;

        virtualinvoke r2.<java.io.FileWriter: void close()>();

     label14:
        goto label16;

     label15:
        $r28 := @caughtexception;

     label16:
        throw r6;

     label17:
        return;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label01 to label05 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public int injectEvent(android.view.IWindowManager, android.app.IActivityManager, int)
    {
        com.android.commands.monkey.MonkeyPowerEvent r0;
        android.view.IWindowManager r1;
        android.app.IActivityManager r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: com.android.commands.monkey.MonkeyPowerEvent;

        r1 := @parameter0: android.view.IWindowManager;

        r2 := @parameter1: android.app.IActivityManager;

        i0 := @parameter2: int;

        $r3 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        $i1 = virtualinvoke $r4.<java.lang.String: int compareTo(java.lang.String)>("AUTOTEST_SEQUENCE_BEGIN");

        if $i1 != 0 goto label1;

        $r9 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        $r8 = <android.os.Build: java.lang.String FINGERPRINT>;

        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void bufferLogEvent(java.lang.String,java.lang.String)>($r9, $r8);

        goto label3;

     label1:
        $r5 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult>;

        if $r5 == null goto label3;

        $r7 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mPowerLogTag>;

        $r6 = r0.<com.android.commands.monkey.MonkeyPowerEvent: java.lang.String mTestResult>;

        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void bufferLogEvent(java.lang.String,java.lang.String)>($r7, $r6);

        goto label3;

     label2:
        specialinvoke r0.<com.android.commands.monkey.MonkeyPowerEvent: void writeLogEvents()>();

     label3:
        return 1;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        <com.android.commands.monkey.MonkeyPowerEvent: long USB_DELAY_TIME> = 10000L;

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_IDLE_ENDED> = "AUTOTEST_IDLE_SUCCESS";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_ENDED> = "AUTOTEST_TEST_SUCCESS";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_DELAY_STARTED> = "AUTOTEST_TEST_BEGIN_DELAY";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_STARTED> = "AUTOTEST_TEST_BEGIN";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TEST_SEQ_BEGIN> = "AUTOTEST_SEQUENCE_BEGIN";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String LOG_FILE> = "/sdcard/autotester.log";

        <com.android.commands.monkey.MonkeyPowerEvent: java.lang.String TAG> = "PowerTester";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.android.commands.monkey.MonkeyPowerEvent: java.util.ArrayList mLogEvents> = $r0;

        return;
    }
}
