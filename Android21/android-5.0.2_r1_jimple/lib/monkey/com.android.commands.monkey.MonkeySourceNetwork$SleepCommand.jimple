class com.android.commands.monkey.MonkeySourceNetwork$SleepCommand extends java.lang.Object implements com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommand
{

    private void <init>()
    {
        com.android.commands.monkey.MonkeySourceNetwork$SleepCommand r0;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork$SleepCommand;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn translateCommand(java.util.List, com.android.commands.monkey.MonkeySourceNetwork$CommandQueue)
    {
        com.android.commands.monkey.MonkeySourceNetwork$SleepCommand r0;
        java.util.List r1;
        com.android.commands.monkey.MonkeySourceNetwork$CommandQueue r2;
        java.lang.String r3, $r13;
        java.lang.NumberFormatException r4, $r9;
        int $i1, i4;
        com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn $r5, $r8, $r14;
        java.lang.Object $r6;
        com.android.commands.monkey.MonkeyThrottleEvent $r7;
        long $l2;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork$SleepCommand;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.android.commands.monkey.MonkeySourceNetwork$CommandQueue;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 2 goto label5;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        r3 = (java.lang.String) $r6;

     label1:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a number: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MonkeyStub", $r13, r4);

        $r14 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn EARG>;

        return $r14;

     label4:
        $r7 = new com.android.commands.monkey.MonkeyThrottleEvent;

        $l2 = (long) i4;

        specialinvoke $r7.<com.android.commands.monkey.MonkeyThrottleEvent: void <init>(long)>($l2);

        interfaceinvoke r2.<com.android.commands.monkey.MonkeySourceNetwork$CommandQueue: void enqueueEvent(com.android.commands.monkey.MonkeyEvent)>($r7);

        $r8 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn OK>;

        return $r8;

     label5:
        $r5 = <com.android.commands.monkey.MonkeySourceNetwork: com.android.commands.monkey.MonkeySourceNetwork$MonkeyCommandReturn EARG>;

        return $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    void <init>(com.android.commands.monkey.MonkeySourceNetwork$1)
    {
        com.android.commands.monkey.MonkeySourceNetwork$SleepCommand r0;
        com.android.commands.monkey.MonkeySourceNetwork$1 r1;

        r0 := @this: com.android.commands.monkey.MonkeySourceNetwork$SleepCommand;

        r1 := @parameter0: com.android.commands.monkey.MonkeySourceNetwork$1;

        specialinvoke r0.<com.android.commands.monkey.MonkeySourceNetwork$SleepCommand: void <init>()>();

        return;
    }
}
