public class com.android.wallpaper.holospiral.HoloSpiralRS extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final float MAX_POINT_SIZE;
    private static final float NEAR_PLANE;
    private static final float FAR_PLANE;
    private static final int NUM_INNER_POINTS;
    private static final float INNER_SPIRAL_DEPTH;
    private static final float INNER_RADIUS;
    private static final float INNER_SEPARATION_DEG;
    private static final int NUM_OUTER_POINTS;
    private static final float OUTER_SPIRAL_DEPTH;
    private static final float OUTER_RADIUS;
    private static final float OUTER_SEPARATION_DEG;
    private static final int POINTS_COLOR_BLUE;
    private static final int POINTS_COLOR_GREEN;
    private static final int POINTS_COLOR_AQUA;
    private static final int BG_COLOR_BLACK;
    private static final int BG_COLOR_BLUE;
    private com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript;
    private android.renderscript.RenderScriptGL mRS;
    private android.content.res.Resources mResources;

    public void <init>(android.renderscript.RenderScriptGL, android.content.res.Resources)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.renderscript.RenderScriptGL r1;
        android.content.res.Resources r2;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        r1 := @parameter0: android.renderscript.RenderScriptGL;

        r2 := @parameter1: android.content.res.Resources;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS> = null;

        r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources> = null;

        virtualinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void init(android.renderscript.RenderScriptGL,android.content.res.Resources)>(r1, r2);

        return;
    }

    public void init(android.renderscript.RenderScriptGL, android.content.res.Resources)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.renderscript.RenderScriptGL r1;
        android.content.res.Resources r2;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        r1 := @parameter0: android.renderscript.RenderScriptGL;

        r2 := @parameter1: android.content.res.Resources;

        r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS> = r1;

        r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources> = r2;

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createScript()>();

        return;
    }

    public void setOffset(float, float, int, int)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        float f0, f1;
        int i0, i1;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r1;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r1.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gXOffset(float)>(f0);

        return;
    }

    public android.os.Bundle onCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        boolean z0;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        return null;
    }

    public void start()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r1;
        android.renderscript.RenderScriptGL $r2;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r2 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r1 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r2.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>($r1);

        return;
    }

    public void stop()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.renderscript.RenderScriptGL $r1;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r1 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        virtualinvoke $r1.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>(null);

        return;
    }

    public void resize(int, int)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        int i0, i1;
        float $f0, $f1;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r1;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        virtualinvoke $r1.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void invoke_resize(float,float)>($f1, $f0);

        return;
    }

    private void createScript()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r1, $r4, $r5;
        android.content.res.Resources $r2;
        android.renderscript.RenderScriptGL $r3;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r1 = new com.android.wallpaper.holospiral.ScriptC_holo_spiral;

        $r3 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r2 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        specialinvoke $r1.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>($r3, $r2, 2130968578);

        r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript> = $r1;

        $r4 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r4.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gNearPlane(float)>(1.0F);

        $r5 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r5.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gFarPlane(float)>(55.0F);

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createVertexPrograms()>();

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createFragmentPrograms()>();

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createStorePrograms()>();

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createPointGeometry()>();

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createBackgroundMesh()>();

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void createTextures()>();

        return;
    }

    private void createVertexPrograms()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s r1, $r6;
        android.renderscript.ProgramVertex$Builder r2, r4, $r9, $r18;
        android.renderscript.ProgramVertex r3, r5;
        android.renderscript.RenderScriptGL $r7, $r10, $r13, $r17, $r23;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r8, $r16, $r28;
        android.content.res.Resources $r11, $r20;
        android.renderscript.Element $r14, $r26;
        android.renderscript.Type $r21;
        android.renderscript.Allocation $r22, $r27;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r6 = new com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s;

        $r7 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r6.<com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s: void <init>(android.renderscript.RenderScript,int)>($r7, 1);

        r1 = $r6;

        $r8 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r8.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void bind_gVSConstants(com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s)>(r1);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s: void set_maxPointSize(int,float,boolean)>(0, 75.0F, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s: void copyAll()>();

        $r9 = new android.renderscript.ProgramVertex$Builder;

        $r10 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r9.<android.renderscript.ProgramVertex$Builder: void <init>(android.renderscript.RenderScript)>($r10);

        r2 = $r9;

        $r11 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        virtualinvoke r2.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r11, 2130968579);

        $r13 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r14 = staticinvoke <com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Element createElement(android.renderscript.RenderScript)>($r13);

        virtualinvoke r2.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex$Builder addInput(android.renderscript.Element)>($r14);

        r3 = virtualinvoke r2.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex create()>();

        $r16 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r16.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPVBackground(android.renderscript.ProgramVertex)>(r3);

        $r18 = new android.renderscript.ProgramVertex$Builder;

        $r17 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r18.<android.renderscript.ProgramVertex$Builder: void <init>(android.renderscript.RenderScript)>($r17);

        r4 = $r18;

        $r20 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        virtualinvoke r4.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r20, 2130968580);

        $r22 = virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s: android.renderscript.Allocation getAllocation()>();

        $r21 = virtualinvoke $r22.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        virtualinvoke r4.<android.renderscript.ProgramVertex$Builder: android.renderscript.Program$BaseProgramBuilder addConstant(android.renderscript.Type)>($r21);

        $r23 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r26 = staticinvoke <com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Element createElement(android.renderscript.RenderScript)>($r23);

        virtualinvoke r4.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex$Builder addInput(android.renderscript.Element)>($r26);

        r5 = virtualinvoke r4.<android.renderscript.ProgramVertex$Builder: android.renderscript.ProgramVertex create()>();

        $r27 = virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexShaderConstants_s: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r5.<android.renderscript.ProgramVertex: void bindConstants(android.renderscript.Allocation,int)>($r27, 0);

        $r28 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r28.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPVGeometry(android.renderscript.ProgramVertex)>(r5);

        return;
    }

    private void createFragmentPrograms()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.renderscript.ProgramFragment$Builder r1, r3, $r5, $r10;
        android.renderscript.ProgramFragment r2, r4;
        android.renderscript.RenderScriptGL $r6, $r11, $r17;
        android.content.res.Resources $r7, $r12;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r9, $r18;
        android.renderscript.Program$TextureType $r14;
        android.renderscript.Sampler $r16;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r5 = new android.renderscript.ProgramFragment$Builder;

        $r6 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r5.<android.renderscript.ProgramFragment$Builder: void <init>(android.renderscript.RenderScript)>($r6);

        r1 = $r5;

        $r7 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        virtualinvoke r1.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r7, 2130968576);

        r2 = virtualinvoke r1.<android.renderscript.ProgramFragment$Builder: android.renderscript.ProgramFragment create()>();

        $r9 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r9.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPFBackground(android.renderscript.ProgramFragment)>(r2);

        $r10 = new android.renderscript.ProgramFragment$Builder;

        $r11 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r10.<android.renderscript.ProgramFragment$Builder: void <init>(android.renderscript.RenderScript)>($r11);

        r3 = $r10;

        $r12 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder setShader(android.content.res.Resources,int)>($r12, 2130968577);

        $r14 = <android.renderscript.Program$TextureType: android.renderscript.Program$TextureType TEXTURE_2D>;

        virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.Program$BaseProgramBuilder addTexture(android.renderscript.Program$TextureType)>($r14);

        r4 = virtualinvoke r3.<android.renderscript.ProgramFragment$Builder: android.renderscript.ProgramFragment create()>();

        $r17 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r16 = staticinvoke <android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>($r17);

        virtualinvoke r4.<android.renderscript.ProgramFragment: void bindSampler(android.renderscript.Sampler,int)>($r16, 0);

        $r18 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r18.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPFGeometry(android.renderscript.ProgramFragment)>(r4);

        return;
    }

    private void createStorePrograms()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.renderscript.ProgramStore$Builder r1, $r2;
        android.renderscript.RenderScriptGL $r3;
        android.renderscript.ProgramStore$BlendDstFunc $r4, $r9;
        android.renderscript.ProgramStore$BlendSrcFunc $r5, $r10;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r7, $r13;
        android.renderscript.ProgramStore $r8, $r14;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r2 = new android.renderscript.ProgramStore$Builder;

        $r3 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r2.<android.renderscript.ProgramStore$Builder: void <init>(android.renderscript.RenderScript)>($r3);

        r1 = $r2;

        $r5 = <android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc SRC_ALPHA>;

        $r4 = <android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc ONE_MINUS_SRC_ALPHA>;

        virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setBlendFunc(android.renderscript.ProgramStore$BlendSrcFunc,android.renderscript.ProgramStore$BlendDstFunc)>($r5, $r4);

        $r7 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $r8 = virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()>();

        virtualinvoke $r7.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPSGeometry(android.renderscript.ProgramStore)>($r8);

        $r10 = <android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc ONE>;

        $r9 = <android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc ZERO>;

        virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setBlendFunc(android.renderscript.ProgramStore$BlendSrcFunc,android.renderscript.ProgramStore$BlendDstFunc)>($r10, $r9);

        virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDitherEnabled(boolean)>(1);

        $r13 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $r14 = virtualinvoke r1.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()>();

        virtualinvoke $r13.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPSBackground(android.renderscript.ProgramStore)>($r14);

        return;
    }

    private void createPointGeometry()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptField_VertexColor_s r1, r3, $r5, $r14;
        android.renderscript.Mesh$AllocationBuilder r2, r4, $r7, $r17;
        android.renderscript.RenderScriptGL $r6, $r8, $r16, $r19;
        int $i0, $i1, $i2, $i3;
        android.renderscript.Mesh$Primitive $r9, $r18;
        android.renderscript.Allocation $r11, $r20;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r13, $r22;
        android.renderscript.Mesh $r15, $r24;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r5 = new com.android.wallpaper.holospiral.ScriptField_VertexColor_s;

        $r6 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r5.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void <init>(android.renderscript.RenderScript,int)>($r6, 100);

        r1 = $r5;

        $i1 = <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_BLUE>;

        $i0 = <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_GREEN>;

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void generateSpiral(com.android.wallpaper.holospiral.ScriptField_VertexColor_s,float,float,float,int,int)>(r1, 50.0F, 5.0F, 23.0F, $i1, $i0);

        $r7 = new android.renderscript.Mesh$AllocationBuilder;

        $r8 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r7.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r8);

        r2 = $r7;

        $r9 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive POINT>;

        virtualinvoke r2.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r9);

        $r11 = virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r2.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r11);

        $r13 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $r15 = virtualinvoke r2.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        virtualinvoke $r13.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gInnerGeometry(android.renderscript.Mesh)>($r15);

        $r14 = new com.android.wallpaper.holospiral.ScriptField_VertexColor_s;

        $r16 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r14.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void <init>(android.renderscript.RenderScript,int)>($r16, 50);

        r3 = $r14;

        $i3 = <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_AQUA>;

        $i2 = <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_AQUA>;

        specialinvoke r0.<com.android.wallpaper.holospiral.HoloSpiralRS: void generateSpiral(com.android.wallpaper.holospiral.ScriptField_VertexColor_s,float,float,float,int,int)>(r3, 30.0F, 10.0F, 23.0F, $i3, $i2);

        $r17 = new android.renderscript.Mesh$AllocationBuilder;

        $r19 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r17.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r19);

        r4 = $r17;

        $r18 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive POINT>;

        virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r18);

        $r20 = virtualinvoke r3.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r20);

        $r22 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $r24 = virtualinvoke r4.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        virtualinvoke $r22.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gOuterGeometry(android.renderscript.Mesh)>($r24);

        return;
    }

    private void createTextures()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        android.graphics.Bitmap r1;
        android.renderscript.Allocation r2;
        android.content.res.Resources $r3;
        android.renderscript.Allocation$MipmapControl $r4;
        android.renderscript.RenderScriptGL $r5;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r6;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r3 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.content.res.Resources mResources>;

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options)>($r3, 2130837504, null);

        $r5 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        $r4 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        r2 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation$MipmapControl,int)>($r5, r1, $r4, 2);

        $r6 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        virtualinvoke $r6.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gPointTexture(android.renderscript.Allocation)>(r2);

        return;
    }

    private void createBackgroundMesh()
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptField_VertexColor_s r1, $r7;
        android.renderscript.Float3 r2, r3, r4, r5, $r9, $r10, $r11, $r12;
        android.renderscript.Mesh$AllocationBuilder r6, $r16;
        android.renderscript.RenderScriptGL $r8, $r19;
        int $i0, $i1, $i2, $i3;
        android.renderscript.Float4 $r13, $r14, $r15, $r17;
        android.renderscript.Mesh$Primitive $r18;
        android.renderscript.Allocation $r20;
        com.android.wallpaper.holospiral.ScriptC_holo_spiral $r22;
        android.renderscript.Mesh $r24;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        $r7 = new com.android.wallpaper.holospiral.ScriptField_VertexColor_s;

        $r8 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r7.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void <init>(android.renderscript.RenderScript,int)>($r8, 4);

        r1 = $r7;

        $r9 = new android.renderscript.Float3;

        specialinvoke $r9.<android.renderscript.Float3: void <init>(float,float,float)>(-1.0F, 1.0F, 0.0F);

        r2 = $r9;

        $r10 = new android.renderscript.Float3;

        specialinvoke $r10.<android.renderscript.Float3: void <init>(float,float,float)>(-1.0F, -1.0F, 0.0F);

        r3 = $r10;

        $r11 = new android.renderscript.Float3;

        specialinvoke $r11.<android.renderscript.Float3: void <init>(float,float,float)>(1.0F, 1.0F, 0.0F);

        r4 = $r11;

        $r12 = new android.renderscript.Float3;

        specialinvoke $r12.<android.renderscript.Float3: void <init>(float,float,float)>(1.0F, -1.0F, 0.0F);

        r5 = $r12;

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(0, r2, 0);

        $i0 = <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLUE>;

        $r13 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>($i0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(0, $r13, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(1, r3, 0);

        $i1 = <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLACK>;

        $r14 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>($i1);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(1, $r14, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(2, r4, 0);

        $i2 = <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLUE>;

        $r15 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>($i2);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(2, $r15, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(3, r5, 0);

        $i3 = <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLACK>;

        $r17 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>($i3);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(3, $r17, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void copyAll()>();

        $r16 = new android.renderscript.Mesh$AllocationBuilder;

        $r19 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r16.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r19);

        r6 = $r16;

        $r18 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE_STRIP>;

        virtualinvoke r6.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r18);

        $r20 = virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r6.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r20);

        $r22 = r0.<com.android.wallpaper.holospiral.HoloSpiralRS: com.android.wallpaper.holospiral.ScriptC_holo_spiral mScript>;

        $r24 = virtualinvoke r6.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        virtualinvoke $r22.<com.android.wallpaper.holospiral.ScriptC_holo_spiral: void set_gBackgroundMesh(android.renderscript.Mesh)>($r24);

        return;
    }

    private void generateSpiral(com.android.wallpaper.holospiral.ScriptField_VertexColor_s, float, float, float, int, int)
    {
        com.android.wallpaper.holospiral.HoloSpiralRS r0;
        com.android.wallpaper.holospiral.ScriptField_VertexColor_s r1;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, f47;
        int i0, i1, i2, i3, i4;
        android.renderscript.Float4 r2, r3, r5, $r9;
        android.renderscript.Float3 r4, $r8;
        android.renderscript.Allocation $r6;
        android.renderscript.Type $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.android.wallpaper.holospiral.HoloSpiralRS;

        r1 := @parameter0: com.android.wallpaper.holospiral.ScriptField_VertexColor_s;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $f8 = f2 / 360.0F;

        $f9 = $f8 * 2.0F;

        f3 = $f9 * 3.1415927F;

        $r6 = virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: android.renderscript.Allocation getAllocation()>();

        $r7 = virtualinvoke $r6.<android.renderscript.Allocation: android.renderscript.Type getType()>();

        i2 = virtualinvoke $r7.<android.renderscript.Type: int getX()>();

        f4 = f0 / 2.0F;

        f5 = 0.0F;

        r2 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>(i0);

        r3 = staticinvoke <com.android.wallpaper.holospiral.HoloSpiralRS: android.renderscript.Float4 convertColor(int)>(i1);

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        $f10 = (float) i3;

        $f11 = (float) i2;

        f6 = $f10 / $f11;

        $r8 = new android.renderscript.Float3;

        $d0 = (double) f5;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $f12 = (float) $d1;

        $f14 = f1 * $f12;

        $d3 = (double) f5;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $f13 = (float) $d2;

        $f15 = f1 * $f13;

        $f17 = f6 * f0;

        $f18 = $f17 - f4;

        specialinvoke $r8.<android.renderscript.Float3: void <init>(float,float,float)>($f14, $f15, $f18);

        r4 = $r8;

        $f16 = f5 / 2.0F;

        $d4 = (double) $f16;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        f7 = (float) $d5;

        $r9 = new android.renderscript.Float4;

        specialinvoke $r9.<android.renderscript.Float4: void <init>()>();

        r5 = $r9;

        $f21 = r2.<android.renderscript.Float4: float x>;

        $f22 = r3.<android.renderscript.Float4: float x>;

        $f19 = r2.<android.renderscript.Float4: float x>;

        $f23 = $f22 - $f19;

        $f20 = $f23 * f7;

        $f27 = $f21 + $f20;

        r5.<android.renderscript.Float4: float x> = $f27;

        $f30 = r2.<android.renderscript.Float4: float y>;

        $f25 = r3.<android.renderscript.Float4: float y>;

        $f26 = r2.<android.renderscript.Float4: float y>;

        $f24 = $f25 - $f26;

        $f31 = $f24 * f7;

        $f29 = $f30 + $f31;

        r5.<android.renderscript.Float4: float y> = $f29;

        $f32 = r2.<android.renderscript.Float4: float z>;

        $f35 = r3.<android.renderscript.Float4: float z>;

        $f28 = r2.<android.renderscript.Float4: float z>;

        $f34 = $f35 - $f28;

        $f33 = $f34 * f7;

        $f39 = $f32 + $f33;

        r5.<android.renderscript.Float4: float z> = $f39;

        $f44 = r2.<android.renderscript.Float4: float w>;

        $f37 = r3.<android.renderscript.Float4: float w>;

        $f38 = r2.<android.renderscript.Float4: float w>;

        $f36 = $f37 - $f38;

        $f43 = $f36 * f7;

        $f45 = $f44 + $f43;

        r5.<android.renderscript.Float4: float w> = $f45;

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_position(int,android.renderscript.Float3,boolean)>(i3, r4, 0);

        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void set_color(int,android.renderscript.Float4,boolean)>(i3, r5, 0);

        f47 = f5 + f3;

        $f46 = f47 / 6.2831855F;

        i4 = (int) $f46;

        $f40 = (float) i4;

        $f41 = $f40 * 2.0F;

        $f42 = $f41 * 3.1415927F;

        f5 = f47 - $f42;

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<com.android.wallpaper.holospiral.ScriptField_VertexColor_s: void copyAll()>();

        return;
    }

    private static android.renderscript.Float4 convertColor(int)
    {
        int i0, $i1, $i2, $i3, $i4;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        android.renderscript.Float4 $r0;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.graphics.Color: int red(int)>(i0);

        $f4 = (float) $i1;

        f0 = $f4 / 255.0F;

        $i2 = staticinvoke <android.graphics.Color: int green(int)>(i0);

        $f5 = (float) $i2;

        f1 = $f5 / 255.0F;

        $i3 = staticinvoke <android.graphics.Color: int blue(int)>(i0);

        $f6 = (float) $i3;

        f2 = $f6 / 255.0F;

        $i4 = staticinvoke <android.graphics.Color: int alpha(int)>(i0);

        $f7 = (float) $i4;

        f3 = $f7 / 255.0F;

        $r0 = new android.renderscript.Float4;

        specialinvoke $r0.<android.renderscript.Float4: void <init>(float,float,float,float)>(f0, f1, f2, f3);

        return $r0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float OUTER_SEPARATION_DEG> = 23.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float OUTER_RADIUS> = 10.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float OUTER_SPIRAL_DEPTH> = 30.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: int NUM_OUTER_POINTS> = 50;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float INNER_SEPARATION_DEG> = 23.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float INNER_RADIUS> = 5.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float INNER_SPIRAL_DEPTH> = 50.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: int NUM_INNER_POINTS> = 100;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float FAR_PLANE> = 55.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float NEAR_PLANE> = 1.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: float MAX_POINT_SIZE> = 75.0F;

        <com.android.wallpaper.holospiral.HoloSpiralRS: java.lang.String LOG_TAG> = "HoloSpiralRS";

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(179, 0, 0, 255);

        <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_BLUE> = $i0;

        $i1 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(210, 166, 51, 255);

        <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_GREEN> = $i1;

        $i2 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(220, 38, 120, 148);

        <com.android.wallpaper.holospiral.HoloSpiralRS: int POINTS_COLOR_AQUA> = $i2;

        $i3 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 26, 26, 83);

        <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLACK> = $i3;

        $i4 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(255, 8, 0, 26);

        <com.android.wallpaper.holospiral.HoloSpiralRS: int BG_COLOR_BLUE> = $i4;

        return;
    }
}
