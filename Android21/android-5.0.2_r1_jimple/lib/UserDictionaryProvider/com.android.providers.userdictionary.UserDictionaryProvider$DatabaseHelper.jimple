class com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{

    void <init>(android.content.Context)
    {
        com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper r0;
        android.content.Context r1;

        r0 := @this: com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, "user_dict.db", null, 2);

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE words (_id INTEGER PRIMARY KEY,word TEXT,frequency INTEGER,locale TEXT,appid INTEGER,shortcut TEXT);");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.String $r8, $r15;

        r0 := @this: com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != 1 goto label1;

        if i1 != 2 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading database from version ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to version 2: adding ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shortcut");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" column");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("UserDictionaryProvider", $r15);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("ALTER TABLE words ADD shortcut TEXT;");

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Upgrading database from version ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", which will destroy all old data");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("UserDictionaryProvider", $r8);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS words");

        virtualinvoke r0.<com.android.providers.userdictionary.UserDictionaryProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

     label2:
        return;
    }
}
