public class com.android.providers.userdictionary.DictionaryBackupAgent extends android.app.backup.BackupAgentHelper
{
    private static final java.lang.String KEY_DICTIONARY;
    private static final int STATE_DICTIONARY;
    private static final int STATE_SIZE;
    private static final java.lang.String SEPARATOR;
    private static final byte[] EMPTY_DATA;
    private static final java.lang.String TAG;
    private static final int COLUMN_WORD;
    private static final int COLUMN_FREQUENCY;
    private static final int COLUMN_LOCALE;
    private static final int COLUMN_APPID;
    private static final int COLUMN_SHORTCUT;
    private static final java.lang.String[] PROJECTION;

    public void <init>()
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        specialinvoke r0.<android.app.backup.BackupAgentHelper: void <init>()>();

        return;
    }

    public void onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        android.os.ParcelFileDescriptor r1, r3;
        android.app.backup.BackupDataOutput r2;
        byte[] r4;
        long[] r5;
        long $l0, $l1;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 := @parameter1: android.app.backup.BackupDataOutput;

        r3 := @parameter2: android.os.ParcelFileDescriptor;

        r4 = specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: byte[] getDictionary()>();

        r5 = specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: long[] readOldChecksums(android.os.ParcelFileDescriptor)>(r1);

        $l0 = r5[0];

        $l1 = specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: long writeIfChanged(long,java.lang.String,byte[],android.app.backup.BackupDataOutput)>($l0, "userdictionary", r4, r2);

        r5[0] = $l1;

        specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: void writeNewChecksums(long[],android.os.ParcelFileDescriptor)>(r5, r3);

        return;
    }

    public void onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        android.app.backup.BackupDataInput r1;
        int i0;
        android.os.ParcelFileDescriptor r2;
        java.lang.String r3, $r4;
        boolean $z0, $z1;
        android.net.Uri $r5;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ParcelFileDescriptor;

     label1:
        $z0 = virtualinvoke r1.<android.app.backup.BackupDataInput: boolean readNextHeader()>();

        if $z0 == 0 goto label4;

        r3 = virtualinvoke r1.<android.app.backup.BackupDataInput: java.lang.String getKey()>();

        virtualinvoke r1.<android.app.backup.BackupDataInput: int getDataSize()>();

        $r4 = "userdictionary";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $r5 = <android.provider.UserDictionary$Words: android.net.Uri CONTENT_URI>;

        specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: void restoreDictionary(android.app.backup.BackupDataInput,android.net.Uri)>(r1, $r5);

        goto label3;

     label2:
        virtualinvoke r1.<android.app.backup.BackupDataInput: void skipEntityData()>();

     label3:
        goto label1;

     label4:
        return;
    }

    private long[] readOldChecksums(android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        android.os.ParcelFileDescriptor r1;
        long[] r2;
        java.io.DataInputStream r3, $r5;
        int i0;
        java.io.FileInputStream $r6;
        java.io.FileDescriptor $r7;
        long $l1;
        java.io.EOFException $r8;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 = newarray (long)[1];

        $r5 = new java.io.DataInputStream;

        $r6 = new java.io.FileInputStream;

        $r7 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.FileDescriptor)>($r7);

        specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r6);

        r3 = $r5;

        i0 = 0;

     label1:
        if i0 >= 1 goto label6;

     label2:
        $l1 = virtualinvoke r3.<java.io.DataInputStream: long readLong()>();

        r2[i0] = $l1;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        goto label6;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        virtualinvoke r3.<java.io.DataInputStream: void close()>();

        return r2;

        catch java.io.EOFException from label2 to label3 with label4;
    }

    private void writeNewChecksums(long[], android.os.ParcelFileDescriptor) throws java.io.IOException
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        long[] r1;
        android.os.ParcelFileDescriptor r2;
        java.io.DataOutputStream r3, $r4;
        int i0;
        java.io.FileOutputStream $r5;
        java.io.FileDescriptor $r6;
        long $l1;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: long[];

        r2 := @parameter1: android.os.ParcelFileDescriptor;

        $r4 = new java.io.DataOutputStream;

        $r5 = new java.io.FileOutputStream;

        $r6 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.FileDescriptor)>($r6);

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r5);

        r3 = $r4;

        i0 = 0;

     label1:
        if i0 >= 1 goto label2;

        $l1 = r1[i0];

        virtualinvoke r3.<java.io.DataOutputStream: void writeLong(long)>($l1);

        i0 = i0 + 1;

        goto label1;

     label2:
        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

        return;
    }

    private long writeIfChanged(long, java.lang.String, byte[], android.app.backup.BackupDataOutput)
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        long l0, l1;
        java.lang.String r1;
        byte[] r2;
        android.app.backup.BackupDataOutput r3;
        java.util.zip.CRC32 r4, $r6;
        byte $b2;
        int $i3, $i5;
        java.io.IOException $r7;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: byte[];

        r3 := @parameter3: android.app.backup.BackupDataOutput;

        $r6 = new java.util.zip.CRC32;

        specialinvoke $r6.<java.util.zip.CRC32: void <init>()>();

        r4 = $r6;

        virtualinvoke r4.<java.util.zip.CRC32: void update(byte[])>(r2);

        l1 = virtualinvoke r4.<java.util.zip.CRC32: long getValue()>();

        $b2 = l0 cmp l1;

        if $b2 != 0 goto label1;

        return l0;

     label1:
        $i3 = lengthof r2;

        virtualinvoke r3.<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>(r1, $i3);

        $i5 = lengthof r2;

        virtualinvoke r3.<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>(r2, $i5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return l1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private byte[] getDictionary()
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        android.database.Cursor r1;
        byte[] r2, r9, $r16, $r27, $r28, r36;
        java.io.ByteArrayOutputStream r3, $r14;
        java.util.zip.GZIPOutputStream r4, $r15;
        java.lang.String r5, r6, r7, r8, $r33;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Throwable r10, $r32;
        android.content.ContentResolver $r11;
        java.lang.String[] $r12;
        android.net.Uri $r13;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r29, $r30, $r34;
        java.io.IOException $r31, r35;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        $r11 = virtualinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: android.content.ContentResolver getContentResolver()>();

        $r13 = <android.provider.UserDictionary$Words: android.net.Uri CONTENT_URI>;

        $r12 = <com.android.providers.userdictionary.DictionaryBackupAgent: java.lang.String[] PROJECTION>;

        r1 = virtualinvoke $r11.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r12, null, null, "word");

        if r1 != null goto label01;

        $r28 = <com.android.providers.userdictionary.DictionaryBackupAgent: byte[] EMPTY_DATA>;

        return $r28;

     label01:
        $z0 = interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", "Couldn\'t read from the cursor");

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        $r27 = <com.android.providers.userdictionary.DictionaryBackupAgent: byte[] EMPTY_DATA>;

        return $r27;

     label02:
        r2 = newarray (byte)[4];

        $r14 = new java.io.ByteArrayOutputStream;

        $i2 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        $i3 = $i2 * 10;

        specialinvoke $r14.<java.io.ByteArrayOutputStream: void <init>(int)>($i3);

        r3 = $r14;

        r4 = null;

     label03:
        $r15 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r15.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r3);

        r4 = $r15;

     label04:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 != 0 goto label06;

        r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(2);

        r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(3);

        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        r7 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(5);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z2 == 0 goto label05;

        r7 = "";

     label05:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = virtualinvoke r8.<java.lang.String: byte[] getBytes()>();

        $i4 = lengthof r9;

        specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: int writeInt(byte[],int,int)>(r2, 0, $i4);

        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void write(byte[])>(r2);

        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void write(byte[])>(r9);

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        goto label04;

     label06:
        virtualinvoke r4.<java.util.zip.GZIPOutputStream: void finish()>();

     label07:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        goto label12;

     label08:
        $r31 := @caughtexception;

        r35 = $r31;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t compress the dictionary:\n");

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", $r33);

        r36 = <com.android.providers.userdictionary.DictionaryBackupAgent: byte[] EMPTY_DATA>;

     label09:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        return r36;

     label10:
        $r32 := @caughtexception;

        r10 = $r32;

     label11:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        interfaceinvoke r1.<android.database.Cursor: void close()>();

        throw r10;

     label12:
        $r16 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r16;

        catch java.io.IOException from label03 to label07 with label08;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private void restoreDictionary(android.app.backup.BackupDataInput, android.net.Uri)
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        android.app.backup.BackupDataInput r1;
        android.net.Uri r2;
        android.content.ContentValues r3, $r13;
        byte[] r4, r7, r42;
        java.util.zip.GZIPInputStream r5, $r14;
        java.io.ByteArrayOutputStream r6, $r15;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.String r8, r9, r10, r11, r12, $r18, $r19, $r29, $r33, $r38, r44;
        java.io.ByteArrayInputStream $r16;
        java.util.StringTokenizer $r17, r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        android.content.ContentResolver $r20, $r23, $r26;
        java.lang.Integer $r21, $r22;
        java.lang.String[] $r24, $r25;
        java.lang.StringBuilder $r27, $r28, $r31, $r32, $r36, $r37, $r39, $r40, $r41;
        java.io.IOException $r30, r43;
        java.lang.NumberFormatException $r34, r47;
        java.util.NoSuchElementException $r35, r46;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: android.app.backup.BackupDataInput;

        r2 := @parameter1: android.net.Uri;

        $r13 = new android.content.ContentValues;

        specialinvoke $r13.<android.content.ContentValues: void <init>(int)>(2);

        r3 = $r13;

        $i4 = virtualinvoke r1.<android.app.backup.BackupDataInput: int getDataSize()>();

        r4 = newarray (byte)[$i4];

     label01:
        $i3 = lengthof r4;

        virtualinvoke r1.<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>(r4, 0, $i3);

        $r14 = new java.util.zip.GZIPInputStream;

        $r16 = new java.io.ByteArrayInputStream;

        specialinvoke $r16.<java.io.ByteArrayInputStream: void <init>(byte[])>(r4);

        specialinvoke $r14.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r16);

        r5 = $r14;

        $r15 = new java.io.ByteArrayOutputStream;

        specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>();

        r6 = $r15;

        r7 = newarray (byte)[1024];

     label02:
        $i5 = virtualinvoke r5.<java.util.zip.GZIPInputStream: int read(byte[])>(r7);

        i0 = $i5;

        if $i5 <= 0 goto label03;

        virtualinvoke r6.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r7, 0, i0);

        goto label02;

     label03:
        virtualinvoke r5.<java.util.zip.GZIPInputStream: void close()>();

        r42 = virtualinvoke r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label04:
        goto label06;

     label05:
        $r30 := @caughtexception;

        r43 = $r30;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Couldn\'t read and uncompress entity data:\n");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", $r29);

        return;

     label06:
        i11 = 0;

     label07:
        $i6 = i11 + 4;

        $i7 = lengthof r42;

        if $i6 >= $i7 goto label26;

        i12 = specialinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: int readInt(byte[],int)>(r42, i11);

        i13 = i11 + 4;

        $i9 = i13 + i12;

        $i8 = lengthof r42;

        if $i9 <= $i8 goto label08;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", "Insufficient data");

     label08:
        $r18 = new java.lang.String;

        specialinvoke $r18.<java.lang.String: void <init>(byte[],int,int)>(r42, i13, i12);

        r44 = $r18;

        i11 = i13 + i12;

        $r17 = new java.util.StringTokenizer;

        specialinvoke $r17.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r44, "|");

        r45 = $r17;

     label09:
        r8 = virtualinvoke r45.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r9 = virtualinvoke r45.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r10 = null;

        r11 = null;

        r12 = null;

        $z1 = virtualinvoke r45.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label10;

        r10 = virtualinvoke r45.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label10:
        $r19 = "null";

        $z0 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r10);

        if $z0 == 0 goto label11;

        r10 = null;

     label11:
        $z3 = virtualinvoke r45.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label12;

        r11 = virtualinvoke r45.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label12:
        $z4 = virtualinvoke r45.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label13;

        r12 = virtualinvoke r45.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label13:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r12);

        if $z2 == 0 goto label14;

        r12 = null;

     label14:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r9);

        if r11 == null goto label15;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r11);

        goto label16;

     label15:
        $i10 = 0;

     label16:
        i2 = $i10;

        $z6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r8, null);

        if $z6 == 0 goto label17;

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(r12, null);

        if $z8 != 0 goto label18;

     label17:
        $z7 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z7 != 0 goto label18;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r8);

        if $z5 == 0 goto label19;

     label18:
        goto label07;

     label19:
        virtualinvoke r3.<android.content.ContentValues: void clear()>();

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("word", r8);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("frequency", $r22);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("locale", r10);

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("appid", $r21);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("shortcut", r12);

        if null == r12 goto label20;

        $r26 = virtualinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: android.content.ContentResolver getContentResolver()>();

        $r25 = newarray (java.lang.String)[2];

        $r25[0] = r8;

        $r25[1] = r12;

        virtualinvoke $r26.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r2, "word=? and shortcut=?", $r25);

        goto label21;

     label20:
        $r20 = virtualinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: android.content.ContentResolver getContentResolver()>();

        $r24 = newarray (java.lang.String)[0];

        virtualinvoke $r20.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>(r2, "word=? and shortcut is null", $r24);

     label21:
        $r23 = virtualinvoke r0.<com.android.providers.userdictionary.DictionaryBackupAgent: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r23.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>(r2, r3);

     label22:
        goto label25;

     label23:
        $r35 := @caughtexception;

        r46 = $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Token format error\n");

        $r32 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r46);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", $r33);

        goto label25;

     label24:
        $r34 := @caughtexception;

        r47 = $r34;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Number format error\n");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r47);

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DictionaryBackupAgent", $r38);

     label25:
        goto label07;

     label26:
        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch java.util.NoSuchElementException from label09 to label18 with label23;
        catch java.util.NoSuchElementException from label19 to label22 with label23;
        catch java.lang.NumberFormatException from label09 to label18 with label24;
        catch java.lang.NumberFormatException from label19 to label22 with label24;
    }

    private int writeInt(byte[], int, int)
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        byte[] r1;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i18;
        byte $b4, $b8, $b12, $b17;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i5 = i0 + 0;

        $i2 = i1 >> 24;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r1[$i5] = $b4;

        $i9 = i0 + 1;

        $i6 = i1 >> 16;

        $i7 = $i6 & 255;

        $b8 = (byte) $i7;

        r1[$i9] = $b8;

        $i13 = i0 + 2;

        $i10 = i1 >> 8;

        $i11 = $i10 & 255;

        $b12 = (byte) $i11;

        r1[$i13] = $b12;

        $i16 = i0 + 3;

        $i15 = i1 >> 0;

        $i14 = $i15 & 255;

        $b17 = (byte) $i14;

        r1[$i16] = $b17;

        $i18 = i0 + 4;

        return $i18;
    }

    private int readInt(byte[], int)
    {
        com.android.providers.userdictionary.DictionaryBackupAgent r0;
        byte[] r1;
        int i0, i1, $i4, $i7, $i8, $i9, $i12, $i13, $i15, $i16, $i18;
        byte $b2, $b5, $b10, $b14;
        short $s3, $s6, $s11, $s17;

        r0 := @this: com.android.providers.userdictionary.DictionaryBackupAgent;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $b2 = r1[i0];

        $s3 = $b2 & 255;

        $i8 = $s3 << 24;

        $i4 = i0 + 1;

        $b5 = r1[$i4];

        $s6 = $b5 & 255;

        $i7 = $s6 << 16;

        $i13 = $i8 | $i7;

        $i9 = i0 + 2;

        $b10 = r1[$i9];

        $s11 = $b10 & 255;

        $i12 = $s11 << 8;

        $i18 = $i13 | $i12;

        $i15 = i0 + 3;

        $b14 = r1[$i15];

        $s17 = $b14 & 255;

        $i16 = $s17 << 0;

        i1 = $i18 | $i16;

        return i1;
    }

    static void <clinit>()
    {
        byte[] $r0;
        java.lang.String[] $r1;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int COLUMN_SHORTCUT> = 5;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int COLUMN_APPID> = 4;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int COLUMN_LOCALE> = 3;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int COLUMN_FREQUENCY> = 2;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int COLUMN_WORD> = 1;

        <com.android.providers.userdictionary.DictionaryBackupAgent: java.lang.String TAG> = "DictionaryBackupAgent";

        <com.android.providers.userdictionary.DictionaryBackupAgent: java.lang.String SEPARATOR> = "|";

        <com.android.providers.userdictionary.DictionaryBackupAgent: int STATE_SIZE> = 1;

        <com.android.providers.userdictionary.DictionaryBackupAgent: int STATE_DICTIONARY> = 0;

        <com.android.providers.userdictionary.DictionaryBackupAgent: java.lang.String KEY_DICTIONARY> = "userdictionary";

        $r0 = newarray (byte)[0];

        <com.android.providers.userdictionary.DictionaryBackupAgent: byte[] EMPTY_DATA> = $r0;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "_id";

        $r1[1] = "word";

        $r1[2] = "frequency";

        $r1[3] = "locale";

        $r1[4] = "appid";

        $r1[5] = "shortcut";

        <com.android.providers.userdictionary.DictionaryBackupAgent: java.lang.String[] PROJECTION> = $r1;

        return;
    }
}
