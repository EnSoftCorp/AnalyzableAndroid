public class com.android.org.chromium.net.RemoteAndroidKeyStore extends java.lang.Object implements com.android.org.chromium.net.AndroidKeyStore
{
    private static final java.lang.String TAG;
    private final com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager;
    static final boolean $assertionsDisabled;

    public void <init>(com.android.org.chromium.net.IRemoteAndroidKeyStore)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.IRemoteAndroidKeyStore r1;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.IRemoteAndroidKeyStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager> = r1;

        return;
    }

    public byte[] getRSAKeyModulus(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r2;
        android.os.RemoteException r3, $r6;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r4;
        int $i1;
        byte[] $r5;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "getRSAKeyModulus");

        $r4 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r2.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        $r5 = interfaceinvoke $r4.<com.android.org.chromium.net.IRemoteAndroidKeyStore: byte[] getRSAKeyModulus(int)>($i1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getDSAKeyParamQ(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r2;
        android.os.RemoteException r3, $r6;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r4;
        int $i1;
        byte[] $r5;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "getDSAKeyParamQ");

        $r4 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r2.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        $r5 = interfaceinvoke $r4.<com.android.org.chromium.net.IRemoteAndroidKeyStore: byte[] getDSAKeyParamQ(int)>($i1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getECKeyOrder(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r2;
        android.os.RemoteException r3, $r6;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r4;
        int $i1;
        byte[] $r5;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "getECKeyOrder");

        $r4 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r2.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        $r5 = interfaceinvoke $r4.<com.android.org.chromium.net.IRemoteAndroidKeyStore: byte[] getECKeyOrder(int)>($i1);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] rawSignDigestWithPrivateKey(com.android.org.chromium.net.AndroidPrivateKey, byte[])
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        byte[] r2, $r6;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r3;
        android.os.RemoteException r4, $r7;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r5;
        int $i1;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 := @parameter1: byte[];

        r3 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "rawSignDigestWithPrivateKey");

        $r5 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r3.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        $r6 = interfaceinvoke $r5.<com.android.org.chromium.net.IRemoteAndroidKeyStore: byte[] rawSignDigestWithPrivateKey(int,byte[])>($i1, r2);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        r4 = $r7;

        virtualinvoke r4.<android.os.RemoteException: void printStackTrace()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int getPrivateKeyType(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r2;
        android.os.RemoteException r3, $r5;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r4;
        int $i1, $i2;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "getPrivateKeyType");

        $r4 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r2.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        $i2 = interfaceinvoke $r4.<com.android.org.chromium.net.IRemoteAndroidKeyStore: int getPrivateKeyType(int)>($i1);

     label2:
        return $i2;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public byte[] getPrivateKeyEncodedBytes(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        $z0 = <com.android.org.chromium.net.RemoteAndroidKeyStore: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return null;
    }

    public long getOpenSSLHandleForPrivateKey(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        boolean $z0;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        $z0 = <com.android.org.chromium.net.RemoteAndroidKeyStore: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        return 0L;
    }

    public com.android.org.chromium.net.AndroidPrivateKey createKey(java.lang.String)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        java.lang.String r1;
        int i0;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r2;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey $r3;
        android.os.RemoteException $r4, r5;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        i0 = interfaceinvoke $r2.<com.android.org.chromium.net.IRemoteAndroidKeyStore: int getPrivateKeyHandle(java.lang.String)>(r1);

        $r3 = new com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey;

        specialinvoke $r3.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: void <init>(int,com.android.org.chromium.net.RemoteAndroidKeyStore)>(i0, r0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r5 = $r4;

        virtualinvoke r5.<android.os.RemoteException: void printStackTrace()>();

        return null;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void releaseKey(com.android.org.chromium.net.AndroidPrivateKey)
    {
        com.android.org.chromium.net.RemoteAndroidKeyStore r0;
        com.android.org.chromium.net.AndroidPrivateKey r1;
        com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey r2;
        android.os.RemoteException r3, $r5;
        com.android.org.chromium.net.IRemoteAndroidKeyStore $r4;
        int $i1;

        r0 := @this: com.android.org.chromium.net.RemoteAndroidKeyStore;

        r1 := @parameter0: com.android.org.chromium.net.AndroidPrivateKey;

        r2 = (com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey) r1;

     label1:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AndroidKeyStoreRemoteImpl", "releaseKey");

        $r4 = r0.<com.android.org.chromium.net.RemoteAndroidKeyStore: com.android.org.chromium.net.IRemoteAndroidKeyStore mRemoteManager>;

        $i1 = virtualinvoke r2.<com.android.org.chromium.net.RemoteAndroidKeyStore$RemotePrivateKey: int getHandle()>();

        interfaceinvoke $r4.<com.android.org.chromium.net.IRemoteAndroidKeyStore: void releaseKey(int)>($i1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        virtualinvoke r3.<android.os.RemoteException: void printStackTrace()>();

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.net.RemoteAndroidKeyStore: java.lang.String TAG> = "AndroidKeyStoreRemoteImpl";

        $r0 = class "com/android/org/chromium/net/RemoteAndroidKeyStore";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.net.RemoteAndroidKeyStore: boolean $assertionsDisabled> = $z1;

        return;
    }
}
