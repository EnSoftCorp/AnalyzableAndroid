public class com.android.org.chromium.android_webview.AwScrollOffsetManager extends java.lang.Object
{
    private static final int PAGE_SCROLL_OVERLAP;
    private static final int STD_SCROLL_ANIMATION_SPEED_PIX_PER_SEC;
    private static final int MAX_SCROLL_ANIMATION_DURATION_MILLISEC;
    private final com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate;
    private int mNativeScrollX;
    private int mNativeScrollY;
    private int mMaxHorizontalScrollOffset;
    private int mMaxVerticalScrollOffset;
    private int mContainerViewWidth;
    private int mContainerViewHeight;
    private boolean mProcessingTouchEvent;
    private boolean mWasFlinging;
    private boolean mApplyDeferredNativeScroll;
    private int mDeferredNativeScrollX;
    private int mDeferredNativeScrollY;
    private android.widget.OverScroller mScroller;
    static final boolean $assertionsDisabled;

    public void <init>(com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate, android.widget.OverScroller)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate r1;
        android.widget.OverScroller r2;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate;

        r2 := @parameter1: android.widget.OverScroller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate> = r1;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller> = r2;

        return;
    }

    public int computeHorizontalScrollRange()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $i1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewWidth>;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxHorizontalScrollOffset>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public int computeMaximumHorizontalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxHorizontalScrollOffset>;

        return $i0;
    }

    public int computeHorizontalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i0 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        return $i0;
    }

    public int computeVerticalScrollRange()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int $i0, $i1, $i2;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $i1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxVerticalScrollOffset>;

        $i2 = $i1 + $i0;

        return $i2;
    }

    public int computeMaximumVerticalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxVerticalScrollOffset>;

        return $i0;
    }

    public int computeVerticalScrollOffset()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i0 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        return $i0;
    }

    public int computeVerticalScrollExtent()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int $i0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        return $i0;
    }

    public void setMaxScrollOffset(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxHorizontalScrollOffset> = i0;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mMaxVerticalScrollOffset> = i1;

        return;
    }

    public void setContainerViewSize(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewWidth> = i0;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight> = i1;

        return;
    }

    public void syncScrollOffsetFromOnDraw()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i0 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i1 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void onContainerViewScrollChanged(int,int)>($i0, $i1);

        return;
    }

    public void setProcessingTouchEvent(boolean)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, $i1;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        z0 := @parameter0: boolean;

        $z1 = <com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z4 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent>;

        if $z4 != z0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent> = z0;

        $z2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent>;

        if $z2 != 0 goto label2;

        $z3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mApplyDeferredNativeScroll>;

        if $z3 == 0 goto label2;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mApplyDeferredNativeScroll> = 0;

        $i1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mDeferredNativeScrollX>;

        $i0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mDeferredNativeScrollY>;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollNativeTo(int,int)>($i1, $i0);

     label2:
        return;
    }

    public void scrollContainerViewTo(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollX> = i0;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollY> = i1;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i2 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i3 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        i4 = i0 - i2;

        i5 = i1 - i3;

        i6 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        i7 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $z0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent>;

        interfaceinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void overScrollContainerViewBy(int,int,int,int,int,int,boolean)>(i4, i5, i2, i3, i6, i7, $z0);

        return;
    }

    public boolean isFlingActive()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        boolean z0, $z1, $z2;
        android.widget.OverScroller $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        z0 = virtualinvoke $r1.<android.widget.OverScroller: boolean computeScrollOffset()>();

        $z1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mWasFlinging>;

        $z2 = $z1 | z0;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mWasFlinging> = $z2;

        return z0;
    }

    public void overScrollBy(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollBy(int,int)>(i0, i1);

        return;
    }

    private void scrollBy(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, i2, i3, i4, i5;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i2 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i3 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        i4 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        i5 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $z0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent>;

        interfaceinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void overScrollContainerViewBy(int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, $z0);

        return;
    }

    private int clampHorizontalScroll(int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, $i1, i2, i3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        $i1 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i2);

        return i3;
    }

    private int clampVerticalScroll(int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, $i1, i2, i3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i2 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        $i1 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i2);

        return i3;
    }

    public void onContainerViewOverScrolled(int, int, boolean, boolean)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, $i2, $i3, i4, i5;
        boolean z0, z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2, $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i4 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampHorizontalScroll(int)>(i0);

        i5 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampVerticalScroll(int)>(i1);

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void scrollContainerViewTo(int,int)>(i4, i5);

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i2 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        $i3 = interfaceinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollNativeTo(int,int)>($i2, $i3);

        return;
    }

    public void onContainerViewScrollChanged(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollNativeTo(int,int)>(i0, i1);

        return;
    }

    private void scrollNativeTo(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, $i2, $i3, i4, i5;
        boolean $z0;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampHorizontalScroll(int)>(i0);

        i5 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampVerticalScroll(int)>(i1);

        $z0 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mProcessingTouchEvent>;

        if $z0 == 0 goto label1;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mDeferredNativeScrollX> = i4;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mDeferredNativeScrollY> = i5;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mApplyDeferredNativeScroll> = 1;

        return;

     label1:
        $i2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollX>;

        if i4 != $i2 goto label2;

        $i3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollY>;

        if i5 != $i3 goto label2;

        return;

     label2:
        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollX> = i4;

        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mNativeScrollY> = i5;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void scrollNativeTo(int,int)>(i4, i5);

        return;
    }

    public void onFlingCancelGesture()
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        android.widget.OverScroller $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        virtualinvoke $r1.<android.widget.OverScroller: void forceFinished(boolean)>(1);

        return;
    }

    public void onUnhandledFlingStartEvent(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = neg i0;

        $i2 = neg i1;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void flingScroll(int,int)>($i3, $i2);

        return;
    }

    public void flingScroll(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, i2, i3, i4, i5;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2, $r4;
        android.widget.OverScroller $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i2 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i3 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        i4 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        i5 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        virtualinvoke $r3.<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>(i2, i3, i0, i1, 0, i4, 0, i5);

        $r4 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        interfaceinvoke $r4.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void invalidate()>();

        return;
    }

    public void computeScrollAndAbsorbGlow(com.android.org.chromium.android_webview.OverScrollGlow)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        com.android.org.chromium.android_webview.OverScrollGlow r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.widget.OverScroller $r2, $r5, $r6, $r7;
        boolean $z0, $z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r3, $r4, $r8;
        float $f0;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        r1 := @parameter0: com.android.org.chromium.android_webview.OverScrollGlow;

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        $z0 = virtualinvoke $r2.<android.widget.OverScroller: boolean computeScrollOffset()>();

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mWasFlinging>;

        if $z1 != 0 goto label1;

        return;

     label1:
        r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean mWasFlinging> = 0;

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i0 = interfaceinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r4 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i1 = interfaceinvoke $r4.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        $r5 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        i2 = virtualinvoke $r5.<android.widget.OverScroller: int getCurrX()>();

        $r6 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        i3 = virtualinvoke $r6.<android.widget.OverScroller: int getCurrY()>();

        i4 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumHorizontalScrollOffset()>();

        i5 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeMaximumVerticalScrollOffset()>();

        if r1 == null goto label2;

        $r7 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        $f0 = virtualinvoke $r7.<android.widget.OverScroller: float getCurrVelocity()>();

        virtualinvoke r1.<com.android.org.chromium.android_webview.OverScrollGlow: void absorbGlow(int,int,int,int,int,int,float)>(i2, i3, i0, i1, i4, i5, $f0);

     label2:
        $i6 = i2 - i0;

        $i7 = i3 - i1;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollBy(int,int)>($i6, $i7);

        $r8 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        interfaceinvoke $r8.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void invalidate()>();

        return;
    }

    private static int computeDurationInMilliSec(int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i5 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        i2 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i5);

        $i6 = i2 * 1000;

        i3 = $i6 / 480;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>(i3, 750);

        return $i7;
    }

    private boolean animateScrollTo(int, int)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2, $r4;
        android.widget.OverScroller $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i2 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i3 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        i7 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampHorizontalScroll(int)>(i0);

        i8 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int clampVerticalScroll(int)>(i1);

        i4 = i7 - i2;

        i5 = i8 - i3;

        if i4 != 0 goto label1;

        if i5 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: android.widget.OverScroller mScroller>;

        $i6 = staticinvoke <com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeDurationInMilliSec(int,int)>(i4, i5);

        virtualinvoke $r3.<android.widget.OverScroller: void startScroll(int,int,int,int,int)>(i2, i3, i4, i5, $i6);

        $r4 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        interfaceinvoke $r4.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: void invalidate()>();

        return 1;
    }

    public boolean pageUp(boolean)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i0 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i1 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        if z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean animateScrollTo(int,int)>(i0, 0);

        return $z2;

     label1:
        $i3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        $i4 = neg $i3;

        i2 = $i4 / 2;

        $i5 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        if $i5 <= 48 goto label2;

        $i7 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        $i8 = neg $i7;

        i2 = $i8 + 24;

     label2:
        $i6 = i1 + i2;

        $z1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean animateScrollTo(int,int)>(i0, $i6);

        return $z1;
    }

    public boolean pageDown(boolean)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i0 = interfaceinvoke $r1.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i1 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        if z0 == 0 goto label1;

        $i7 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int computeVerticalScrollRange()>();

        $z2 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean animateScrollTo(int,int)>(i0, $i7);

        return $z2;

     label1:
        $i3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        i2 = $i3 / 2;

        $i4 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        if $i4 <= 48 goto label2;

        $i6 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        i2 = $i6 - 24;

     label2:
        $i5 = i1 + i2;

        $z1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean animateScrollTo(int,int)>(i0, $i5);

        return $z1;
    }

    public boolean requestChildRectangleOnScreen(int, int, android.graphics.Rect, boolean)
    {
        com.android.org.chromium.android_webview.AwScrollOffsetManager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34;
        android.graphics.Rect r1;
        boolean z0, $z1;
        com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate $r2, $r3;

        r0 := @this: com.android.org.chromium.android_webview.AwScrollOffsetManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        z0 := @parameter3: boolean;

        $r2 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i2 = interfaceinvoke $r2.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollX()>();

        $r3 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate mDelegate>;

        i3 = interfaceinvoke $r3.<com.android.org.chromium.android_webview.AwScrollOffsetManager$Delegate: int getContainerViewScrollY()>();

        virtualinvoke r1.<android.graphics.Rect: void offset(int,int)>(i0, i1);

        i4 = i3;

        $i10 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        i5 = i3 + $i10;

        i6 = 0;

        $i12 = r1.<android.graphics.Rect: int bottom>;

        if $i12 <= i5 goto label3;

        $i30 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewHeight>;

        i7 = $i30 / 3;

        $i31 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i28 = 2 * i7;

        if $i31 <= $i28 goto label1;

        $i33 = r1.<android.graphics.Rect: int top>;

        i6 = $i33 - i4;

        goto label2;

     label1:
        $i32 = r1.<android.graphics.Rect: int top>;

        $i29 = i4 + i7;

        i6 = $i32 - $i29;

     label2:
        goto label4;

     label3:
        $i11 = r1.<android.graphics.Rect: int top>;

        if $i11 >= i4 goto label4;

        $i25 = r1.<android.graphics.Rect: int top>;

        i6 = $i25 - i4;

     label4:
        i34 = i2;

        $i14 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewWidth>;

        i8 = i2 + $i14;

        i9 = 0;

        $i13 = r1.<android.graphics.Rect: int right>;

        if $i13 <= i8 goto label6;

        $i21 = r1.<android.graphics.Rect: int left>;

        if $i21 <= i34 goto label6;

        $i20 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i23 = r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: int mContainerViewWidth>;

        if $i20 <= $i23 goto label5;

        $i27 = r1.<android.graphics.Rect: int left>;

        $i24 = $i27 - i34;

        i9 = i9 + $i24;

        goto label7;

     label5:
        $i22 = r1.<android.graphics.Rect: int right>;

        $i26 = $i22 - i8;

        i9 = i9 + $i26;

        goto label7;

     label6:
        $i16 = r1.<android.graphics.Rect: int left>;

        if $i16 >= i34 goto label7;

        $i19 = r1.<android.graphics.Rect: int left>;

        $i18 = i34 - $i19;

        i9 = i9 - $i18;

     label7:
        if i6 != 0 goto label8;

        if i9 != 0 goto label8;

        return 0;

     label8:
        if z0 == 0 goto label9;

        specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: void scrollBy(int,int)>(i9, i6);

        return 1;

     label9:
        $i17 = i2 + i9;

        $i15 = i3 + i6;

        $z1 = specialinvoke r0.<com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean animateScrollTo(int,int)>($i17, $i15);

        return $z1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.android_webview.AwScrollOffsetManager: int MAX_SCROLL_ANIMATION_DURATION_MILLISEC> = 750;

        <com.android.org.chromium.android_webview.AwScrollOffsetManager: int STD_SCROLL_ANIMATION_SPEED_PIX_PER_SEC> = 480;

        <com.android.org.chromium.android_webview.AwScrollOffsetManager: int PAGE_SCROLL_OVERLAP> = 24;

        $r0 = class "com/android/org/chromium/android_webview/AwScrollOffsetManager";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.android_webview.AwScrollOffsetManager: boolean $assertionsDisabled> = $z1;

        return;
    }
}
