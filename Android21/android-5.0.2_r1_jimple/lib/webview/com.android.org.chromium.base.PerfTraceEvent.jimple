public class com.android.org.chromium.base.PerfTraceEvent extends java.lang.Object
{
    private static final int MAX_NAME_LENGTH;
    private static final java.lang.String MEMORY_TRACE_NAME_SUFFIX;
    private static java.io.File sOutputFile;
    private static boolean sEnabled;
    private static boolean sTrackTiming;
    private static boolean sTrackMemory;
    private static org.json.JSONArray sPerfTraceStrings;
    private static java.util.List sFilter;
    private static long sBeginNanoTime;

    public void <init>()
    {
        com.android.org.chromium.base.PerfTraceEvent r0;

        r0 := @this: com.android.org.chromium.base.PerfTraceEvent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized void setFilter(java.util.List)
    {
        java.util.List r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: java.util.List;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>(java.util.Collection)>(r0);

        <com.android.org.chromium.base.PerfTraceEvent: java.util.List sFilter> = $r1;

        return;
    }

    public static synchronized void setEnabled(boolean)
    {
        boolean z0, $z1;
        long $l0;
        org.json.JSONArray $r0;

        z0 := @parameter0: boolean;

        $z1 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z1 != z0 goto label1;

        return;

     label1:
        if z0 == 0 goto label2;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        <com.android.org.chromium.base.PerfTraceEvent: long sBeginNanoTime> = $l0;

        $r0 = new org.json.JSONArray;

        specialinvoke $r0.<org.json.JSONArray: void <init>()>();

        <com.android.org.chromium.base.PerfTraceEvent: org.json.JSONArray sPerfTraceStrings> = $r0;

        goto label3;

     label2:
        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void dumpPerf()>();

        <com.android.org.chromium.base.PerfTraceEvent: org.json.JSONArray sPerfTraceStrings> = null;

        <com.android.org.chromium.base.PerfTraceEvent: java.util.List sFilter> = null;

     label3:
        <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled> = z0;

        return;
    }

    public static synchronized void setMemoryTrackingEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackMemory> = z0;

        return;
    }

    public static synchronized void setTimingTrackingEnabled(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming> = z0;

        return;
    }

    public static synchronized boolean enabled()
    {
        boolean $z0;

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        return $z0;
    }

    public static synchronized void instant(java.lang.String)
    {
        java.lang.String r0;
        long l0;
        int $i1;
        boolean $z0, $z1;
        com.android.org.chromium.base.PerfTraceEvent$EventType $r1;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        l0 = (long) $i1;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void instant(java.lang.String)>(r0);

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: boolean matchesFilter(java.lang.String)>(r0);

        if $z1 == 0 goto label1;

        $r1 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType INSTANT>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>(r0, l0, $r1, 0);

     label1:
        return;
    }

    public static synchronized void begin(java.lang.String)
    {
        java.lang.String r0, $r2;
        long l0;
        int $i1;
        boolean $z0, $z1, $z2, $z3;
        com.android.org.chromium.base.PerfTraceEvent$EventType $r1, $r3;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        l0 = (long) $i1;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void startAsync(java.lang.String,long)>(r0, l0);

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: boolean matchesFilter(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $z2 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackMemory>;

        if $z2 == 0 goto label1;

        $r2 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: java.lang.String makeMemoryTraceNameFromTimingName(java.lang.String)>(r0);

        $r3 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType START>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>($r2, l0, $r3, 1);

     label1:
        $z3 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming>;

        if $z3 == 0 goto label2;

        $r1 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType START>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>(r0, l0, $r1, 0);

     label2:
        return;
    }

    public static synchronized void end(java.lang.String)
    {
        java.lang.String r0, $r1;
        long l0;
        int $i1;
        boolean $z0, $z1, $z2, $z3;
        com.android.org.chromium.base.PerfTraceEvent$EventType $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        l0 = (long) $i1;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void finishAsync(java.lang.String,long)>(r0, l0);

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: boolean matchesFilter(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $z2 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming>;

        if $z2 == 0 goto label1;

        $r3 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType FINISH>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>(r0, l0, $r3, 0);

     label1:
        $z3 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackMemory>;

        if $z3 == 0 goto label2;

        $r1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: java.lang.String makeMemoryTraceNameFromTimingName(java.lang.String)>(r0);

        $r2 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType FINISH>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>($r1, l0, $r2, 1);

     label2:
        return;
    }

    public static synchronized void begin(java.lang.String, android.os.Debug$MemoryInfo)
    {
        java.lang.String r0, $r2;
        android.os.Debug$MemoryInfo r1;
        long l0, l1, $l3, $l4, $l5;
        int $i2;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.base.PerfTraceEvent$EventType $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        $i2 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        l0 = (long) $i2;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void startAsync(java.lang.String,long)>(r0, l0);

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: boolean matchesFilter(java.lang.String)>(r0);

        if $z1 == 0 goto label1;

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l4 = <com.android.org.chromium.base.PerfTraceEvent: long sBeginNanoTime>;

        $l5 = $l3 - $l4;

        l1 = $l5 / 1000L;

        $r2 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: java.lang.String makeMemoryTraceNameFromTimingName(java.lang.String)>(r0);

        $r3 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType START>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,long,android.os.Debug$MemoryInfo)>($r2, l0, $r3, l1, r1);

        $z2 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming>;

        if $z2 == 0 goto label1;

        $r4 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType START>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>(r0, l0, $r4, 0);

     label1:
        return;
    }

    public static synchronized void end(java.lang.String, android.os.Debug$MemoryInfo)
    {
        java.lang.String r0, $r2;
        android.os.Debug$MemoryInfo r1;
        long l0, l1, $l3, $l4, $l5;
        int $i2;
        boolean $z0, $z1, $z2;
        com.android.org.chromium.base.PerfTraceEvent$EventType $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.os.Debug$MemoryInfo;

        $i2 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        l0 = (long) $i2;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void finishAsync(java.lang.String,long)>(r0, l0);

        $z0 = <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: boolean matchesFilter(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $z2 = <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming>;

        if $z2 == 0 goto label1;

        $r4 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType FINISH>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,boolean)>(r0, l0, $r4, 0);

     label1:
        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l4 = <com.android.org.chromium.base.PerfTraceEvent: long sBeginNanoTime>;

        $l5 = $l3 - $l4;

        l1 = $l5 / 1000L;

        $r2 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: java.lang.String makeMemoryTraceNameFromTimingName(java.lang.String)>(r0);

        $r3 = <com.android.org.chromium.base.PerfTraceEvent$EventType: com.android.org.chromium.base.PerfTraceEvent$EventType FINISH>;

        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,long,android.os.Debug$MemoryInfo)>($r2, l0, $r3, l1, r1);

     label2:
        return;
    }

    private static boolean matchesFilter(java.lang.String)
    {
        java.lang.String r0;
        java.util.List $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.org.chromium.base.PerfTraceEvent: java.util.List sFilter>;

        if $r1 == null goto label1;

        $r2 = <com.android.org.chromium.base.PerfTraceEvent: java.util.List sFilter>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static void savePerfString(java.lang.String, long, com.android.org.chromium.base.PerfTraceEvent$EventType, boolean)
    {
        java.lang.String r0;
        long l0, l1, $l2, $l3, $l4;
        com.android.org.chromium.base.PerfTraceEvent$EventType r1;
        boolean z0;
        android.os.Debug$MemoryInfo r2, $r3;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.org.chromium.base.PerfTraceEvent$EventType;

        z0 := @parameter3: boolean;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $l3 = <com.android.org.chromium.base.PerfTraceEvent: long sBeginNanoTime>;

        $l4 = $l2 - $l3;

        l1 = $l4 / 1000L;

        r2 = null;

        if z0 == 0 goto label1;

        $r3 = new android.os.Debug$MemoryInfo;

        specialinvoke $r3.<android.os.Debug$MemoryInfo: void <init>()>();

        r2 = $r3;

        staticinvoke <android.os.Debug: void getMemoryInfo(android.os.Debug$MemoryInfo)>(r2);

     label1:
        staticinvoke <com.android.org.chromium.base.PerfTraceEvent: void savePerfString(java.lang.String,long,com.android.org.chromium.base.PerfTraceEvent$EventType,long,android.os.Debug$MemoryInfo)>(r0, l0, r1, l1, r2);

        return;
    }

    private static void savePerfString(java.lang.String, long, com.android.org.chromium.base.PerfTraceEvent$EventType, long, android.os.Debug$MemoryInfo)
    {
        java.lang.String r0;
        long l0, l1;
        com.android.org.chromium.base.PerfTraceEvent$EventType r1;
        android.os.Debug$MemoryInfo r2;
        org.json.JSONObject r3, $r4;
        int i2, $i3, $i4, $i5, $i6;
        org.json.JSONArray $r10;
        java.lang.RuntimeException $r13;
        org.json.JSONException $r14, r15;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: com.android.org.chromium.base.PerfTraceEvent$EventType;

        l1 := @parameter3: long;

        r2 := @parameter4: android.os.Debug$MemoryInfo;

     label1:
        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        r3 = $r4;

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("cat", "Java");

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("ts", l1);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("ph", r1);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("name", r0);

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("id", l0);

        if r2 == null goto label2;

        $i5 = r2.<android.os.Debug$MemoryInfo: int nativePss>;

        $i3 = r2.<android.os.Debug$MemoryInfo: int dalvikPss>;

        $i6 = $i5 + $i3;

        $i4 = r2.<android.os.Debug$MemoryInfo: int otherPss>;

        i2 = $i6 + $i4;

        virtualinvoke r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("mem", i2);

     label2:
        $r10 = <com.android.org.chromium.base.PerfTraceEvent: org.json.JSONArray sPerfTraceStrings>;

        virtualinvoke $r10.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>(r3);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        r15 = $r14;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r13;

     label5:
        return;

        catch org.json.JSONException from label1 to label3 with label4;
    }

    public static java.lang.String makeMemoryTraceNameFromTimingName(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.org.chromium.base.PerfTraceEvent: java.lang.String makeSafeTraceName(java.lang.String,java.lang.String)>(r0, "_BZR_PSS");

        return $r1;
    }

    public static java.lang.String makeSafeTraceName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = $i1 + i0;

        if $i2 <= 40 goto label1;

        $i3 = 40 - i0;

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static synchronized void setOutputFile(java.io.File)
    {
        java.io.File r0;

        r0 := @parameter0: java.io.File;

        <com.android.org.chromium.base.PerfTraceEvent: java.io.File sOutputFile> = r0;

        return;
    }

    private static void dumpPerf()
    {
        java.lang.String r0;
        java.io.PrintStream r1, $r7, $r10;
        java.lang.Throwable r3, $r12;
        org.json.JSONArray $r5;
        java.io.File $r6, $r9;
        java.io.FileOutputStream $r8;
        java.lang.Exception $r11, $r13;
        java.io.FileNotFoundException $r14;

        $r5 = <com.android.org.chromium.base.PerfTraceEvent: org.json.JSONArray sPerfTraceStrings>;

        r0 = virtualinvoke $r5.<org.json.JSONArray: java.lang.String toString()>();

        $r6 = <com.android.org.chromium.base.PerfTraceEvent: java.io.File sOutputFile>;

        if $r6 != null goto label01;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(r0);

        goto label13;

     label01:
        $r7 = new java.io.PrintStream;

        $r8 = new java.io.FileOutputStream;

        $r9 = <com.android.org.chromium.base.PerfTraceEvent: java.io.File sOutputFile>;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r9, 1);

        specialinvoke $r7.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r8);

        r1 = $r7;

     label02:
        virtualinvoke r1.<java.io.PrintStream: void print(java.lang.String)>(r0);

     label03:
        virtualinvoke r1.<java.io.PrintStream: void close()>();

     label04:
        goto label11;

     label05:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfTraceEvent", "Unable to close perf trace output file.");

        goto label11;

     label06:
        $r12 := @caughtexception;

        r3 = $r12;

     label07:
        virtualinvoke r1.<java.io.PrintStream: void close()>();

     label08:
        goto label10;

     label09:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfTraceEvent", "Unable to close perf trace output file.");

     label10:
        throw r3;

     label11:
        goto label13;

     label12:
        $r14 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PerfTraceEvent", "Unable to dump perf trace data to output file.");

     label13:
        return;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.io.FileNotFoundException from label01 to label11 with label12;
    }

    static void <clinit>()
    {
        <com.android.org.chromium.base.PerfTraceEvent: java.lang.String MEMORY_TRACE_NAME_SUFFIX> = "_BZR_PSS";

        <com.android.org.chromium.base.PerfTraceEvent: int MAX_NAME_LENGTH> = 40;

        <com.android.org.chromium.base.PerfTraceEvent: java.io.File sOutputFile> = null;

        <com.android.org.chromium.base.PerfTraceEvent: boolean sEnabled> = 0;

        <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackTiming> = 1;

        <com.android.org.chromium.base.PerfTraceEvent: boolean sTrackMemory> = 0;

        return;
    }
}
