class com.android.org.chromium.media.WebAudioMediaCodecBridge extends java.lang.Object
{
    static final java.lang.String LOG_TAG;
    static final long TIMEOUT_MICROSECONDS;

    void <init>()
    {
        com.android.org.chromium.media.WebAudioMediaCodecBridge r0;

        r0 := @this: com.android.org.chromium.media.WebAudioMediaCodecBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String CreateTempFile(android.content.Context) throws java.io.IOException
    {
        android.content.Context r0;
        java.io.File r1, r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: java.io.File getCacheDir()>();

        r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("webaudio", ".dat", r1);

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r3;
    }

    private static boolean decodeAudioFile(android.content.Context, long, int, long)
    {
        android.content.Context r0;
        long l0, l2, l6, l9;
        int i1, i3, i4, i5, i7, i8, $i12, $i14, $i15, $i16, $i17, $i18, i20;
        android.media.MediaExtractor r1, $r7;
        android.os.ParcelFileDescriptor r2;
        java.lang.Exception r3, $r34, $r36, $r37;
        java.lang.String r4, $r14, $r19, $r26, $r32;
        java.nio.ByteBuffer[] r5, r40;
        boolean z0, z1, z2, $z3;
        java.nio.ByteBuffer r6, r42;
        byte $b10, $b11, $b13, $b19;
        java.io.FileDescriptor $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r33, $r35;
        android.media.MediaCodec$BufferInfo $r15, r41;
        android.media.MediaFormat r38, r43;
        android.media.MediaCodec r39;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        l2 := @parameter3: long;

        $b11 = l2 cmp 0L;

        if $b11 < 0 goto label01;

        $b10 = l2 cmp 2147483647L;

        if $b10 <= 0 goto label02;

     label01:
        return 0;

     label02:
        $r7 = new android.media.MediaExtractor;

        specialinvoke $r7.<android.media.MediaExtractor: void <init>()>();

        r1 = $r7;

        r2 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i1);

     label03:
        $r8 = virtualinvoke r2.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r1.<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>($r8, 0L, l2);

     label04:
        goto label06;

     label05:
        $r37 := @caughtexception;

        r3 = $r37;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label06:
        $i12 = virtualinvoke r1.<android.media.MediaExtractor: int getTrackCount()>();

        if $i12 > 0 goto label07;

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label07:
        r38 = virtualinvoke r1.<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>(0);

        i3 = virtualinvoke r38.<android.media.MediaFormat: int getInteger(java.lang.String)>("channel-count");

        i4 = i3;

        i5 = virtualinvoke r38.<android.media.MediaFormat: int getInteger(java.lang.String)>("sample-rate");

        r4 = virtualinvoke r38.<android.media.MediaFormat: java.lang.String getString(java.lang.String)>("mime");

        l6 = 0L;

        $z3 = virtualinvoke r38.<android.media.MediaFormat: boolean containsKey(java.lang.String)>("durationUs");

        if $z3 == 0 goto label11;

     label08:
        l6 = virtualinvoke r38.<android.media.MediaFormat: long getLong(java.lang.String)>("durationUs");

     label09:
        goto label11;

     label10:
        $r34 := @caughtexception;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", "Cannot get duration");

     label11:
        $b13 = l6 cmp 2147483647L;

        if $b13 <= 0 goto label12;

        l6 = 0L;

     label12:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Initial: Tracks: ");

        $i14 = virtualinvoke r1.<android.media.MediaExtractor: int getTrackCount()>();

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Format: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r14);

     label13:
        r39 = staticinvoke <android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>(r4);

     label14:
        goto label16;

     label15:
        $r36 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create MediaCodec for mime type: ");

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r32);

        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        return 0;

     label16:
        virtualinvoke r39.<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>(r38, null, null, 0);

        virtualinvoke r39.<android.media.MediaCodec: void start()>();

        r40 = virtualinvoke r39.<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>();

        r5 = virtualinvoke r39.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        virtualinvoke r1.<android.media.MediaExtractor: void selectTrack(int)>(0);

        z1 = 0;

        z0 = 0;

        z2 = 0;

     label17:
        if z0 != 0 goto label29;

        if z1 != 0 goto label22;

        i7 = virtualinvoke r39.<android.media.MediaCodec: int dequeueInputBuffer(long)>(500L);

        if i7 < 0 goto label22;

        r6 = r40[i7];

        i8 = virtualinvoke r1.<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>(r6, 0);

        l9 = 0L;

        if i8 >= 0 goto label18;

        z1 = 1;

        i8 = 0;

        goto label19;

     label18:
        l9 = virtualinvoke r1.<android.media.MediaExtractor: long getSampleTime()>();

     label19:
        if z1 == 0 goto label20;

        $b19 = 4;

        goto label21;

     label20:
        $b19 = 0;

     label21:
        virtualinvoke r39.<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>(i7, 0, i8, l9, $b19);

        if z1 != 0 goto label22;

        virtualinvoke r1.<android.media.MediaExtractor: boolean advance()>();

     label22:
        $r15 = new android.media.MediaCodec$BufferInfo;

        specialinvoke $r15.<android.media.MediaCodec$BufferInfo: void <init>()>();

        r41 = $r15;

        i20 = virtualinvoke r39.<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec$BufferInfo,long)>(r41, 500L);

        if i20 < 0 goto label26;

        r42 = r5[i20];

        if z2 != 0 goto label23;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Final:  Rate: ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Channels: ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mime: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r23 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Duration: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l6);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" microsec");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r26);

        staticinvoke <com.android.org.chromium.media.WebAudioMediaCodecBridge: void nativeInitializeDestination(long,int,int,long)>(l0, i3, i5, l6);

        z2 = 1;

     label23:
        if z2 == 0 goto label24;

        $i17 = r41.<android.media.MediaCodec$BufferInfo: int size>;

        if $i17 <= 0 goto label24;

        $i18 = r41.<android.media.MediaCodec$BufferInfo: int size>;

        staticinvoke <com.android.org.chromium.media.WebAudioMediaCodecBridge: void nativeOnChunkDecoded(long,java.nio.ByteBuffer,int,int,int)>(l0, r42, $i18, i3, i4);

     label24:
        virtualinvoke r42.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        virtualinvoke r39.<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>(i20, 0);

        $i15 = r41.<android.media.MediaCodec$BufferInfo: int flags>;

        $i16 = $i15 & 4;

        if $i16 == 0 goto label25;

        z0 = 1;

     label25:
        goto label28;

     label26:
        if i20 != -3 goto label27;

        r5 = virtualinvoke r39.<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>();

        goto label28;

     label27:
        if i20 != -2 goto label28;

        r43 = virtualinvoke r39.<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>();

        i4 = virtualinvoke r43.<android.media.MediaFormat: int getInteger(java.lang.String)>("channel-count");

        i5 = virtualinvoke r43.<android.media.MediaFormat: int getInteger(java.lang.String)>("sample-rate");

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("output format changed to ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r43);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("WebAudioMediaCodec", $r19);

     label28:
        goto label17;

     label29:
        virtualinvoke r2.<android.os.ParcelFileDescriptor: int detachFd()>();

        virtualinvoke r39.<android.media.MediaCodec: void stop()>();

        virtualinvoke r39.<android.media.MediaCodec: void release()>();

        return 1;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    private static native void nativeOnChunkDecoded(long, java.nio.ByteBuffer, int, int, int);

    private static native void nativeInitializeDestination(long, int, int, long);

    public static void <clinit>()
    {
        <com.android.org.chromium.media.WebAudioMediaCodecBridge: long TIMEOUT_MICROSECONDS> = 500L;

        <com.android.org.chromium.media.WebAudioMediaCodecBridge: java.lang.String LOG_TAG> = "WebAudioMediaCodec";

        return;
    }
}
