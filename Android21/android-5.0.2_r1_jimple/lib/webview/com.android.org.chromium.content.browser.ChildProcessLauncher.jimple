public class com.android.org.chromium.content.browser.ChildProcessLauncher extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final int CALLBACK_FOR_UNKNOWN_PROCESS;
    static final int CALLBACK_FOR_GPU_PROCESS;
    static final int CALLBACK_FOR_RENDERER_PROCESS;
    private static final java.lang.String SWITCH_PROCESS_TYPE;
    private static final java.lang.String SWITCH_PPAPI_BROKER_PROCESS;
    private static final java.lang.String SWITCH_RENDERER_PROCESS;
    private static final java.lang.String SWITCH_GPU_PROCESS;
    static final int MAX_REGISTERED_SANDBOXED_SERVICES;
    static final int MAX_REGISTERED_PRIVILEGED_SERVICES;
    private static final com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sSandboxedChildConnectionAllocator;
    private static final com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sPrivilegedChildConnectionAllocator;
    private static boolean sConnectionAllocated;
    private static boolean sLinkerInitialized;
    private static long sLinkerLoadAddress;
    private static final int NULL_PROCESS_HANDLE;
    private static java.util.Map sServiceMap;
    private static com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection;
    private static com.android.org.chromium.content.browser.BindingManager sBindingManager;
    private static java.util.Map sViewSurfaceMap;
    private static java.util.Map sSurfaceTextureSurfaceMap;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher r0;

        r0 := @this: com.android.org.chromium.content.browser.ChildProcessLauncher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void setChildProcessClass(java.lang.Class, java.lang.Class)
    {
        java.lang.Class r0, r1;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r2, $r3;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.Class;

        $z0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sConnectionAllocated>;

        if $z1 == 0 goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r2 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sSandboxedChildConnectionAllocator>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: void setServiceClass(java.lang.Class)>(r0);

        $r3 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sPrivilegedChildConnectionAllocator>;

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: void setServiceClass(java.lang.Class)>(r1);

        return;
    }

    private static com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator getConnectionAllocator(boolean)
    {
        boolean z0;
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sSandboxedChildConnectionAllocator>;

        goto label2;

     label1:
        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sPrivilegedChildConnectionAllocator>;

     label2:
        return $r0;
    }

    private static com.android.org.chromium.content.browser.ChildProcessConnection allocateConnection(android.content.Context, boolean, com.android.org.chromium.content.app.ChromiumLinkerParams)
    {
        android.content.Context r0;
        boolean z0;
        com.android.org.chromium.content.app.ChromiumLinkerParams r1;
        com.android.org.chromium.content.browser.ChildProcessLauncher$1 r2, $r3;
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r4;
        com.android.org.chromium.content.browser.ChildProcessConnection $r5;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r1 := @parameter2: com.android.org.chromium.content.app.ChromiumLinkerParams;

        $r3 = new com.android.org.chromium.content.browser.ChildProcessLauncher$1;

        specialinvoke $r3.<com.android.org.chromium.content.browser.ChildProcessLauncher$1: void <init>()>();

        r2 = $r3;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sConnectionAllocated> = 1;

        $r4 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator getConnectionAllocator(boolean)>(z0);

        $r5 = virtualinvoke $r4.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: com.android.org.chromium.content.browser.ChildProcessConnection allocate(android.content.Context,com.android.org.chromium.content.browser.ChildProcessConnection$DeathCallback,com.android.org.chromium.content.app.ChromiumLinkerParams)>(r0, r2, r1);

        return $r5;
    }

    private static com.android.org.chromium.content.app.ChromiumLinkerParams getLinkerParamsForNewConnection()
    {
        boolean $z1, $z2;
        long $l0, $l2, $l3, $l4;
        byte $b1, $b5;
        com.android.org.chromium.content.app.ChromiumLinkerParams $r0;
        java.lang.String $r1;

        $z1 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sLinkerInitialized>;

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <com.android.org.chromium.base.library_loader.Linker: boolean isUsed()>();

        if $z2 == 0 goto label1;

        $l3 = staticinvoke <com.android.org.chromium.base.library_loader.Linker: long getBaseLoadAddress()>();

        <com.android.org.chromium.content.browser.ChildProcessLauncher: long sLinkerLoadAddress> = $l3;

        $l4 = <com.android.org.chromium.content.browser.ChildProcessLauncher: long sLinkerLoadAddress>;

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label1;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Shared RELRO support disabled!");

     label1:
        <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sLinkerInitialized> = 1;

     label2:
        $l0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: long sLinkerLoadAddress>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label3;

        return null;

     label3:
        $r0 = new com.android.org.chromium.content.app.ChromiumLinkerParams;

        $l2 = <com.android.org.chromium.content.browser.ChildProcessLauncher: long sLinkerLoadAddress>;

        $r1 = staticinvoke <com.android.org.chromium.base.library_loader.Linker: java.lang.String getTestRunnerClassName()>();

        specialinvoke $r0.<com.android.org.chromium.content.app.ChromiumLinkerParams: void <init>(long,boolean,java.lang.String)>($l2, 1, $r1);

        return $r0;
    }

    private static com.android.org.chromium.content.browser.ChildProcessConnection allocateBoundConnection(android.content.Context, java.lang.String[], boolean)
    {
        android.content.Context r0;
        java.lang.String[] r1;
        boolean z0;
        com.android.org.chromium.content.app.ChromiumLinkerParams r2;
        com.android.org.chromium.content.browser.ChildProcessConnection r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String[];

        z0 := @parameter2: boolean;

        r2 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.app.ChromiumLinkerParams getLinkerParamsForNewConnection()>();

        r3 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection allocateConnection(android.content.Context,boolean,com.android.org.chromium.content.app.ChromiumLinkerParams)>(r0, z0, r2);

        if r3 == null goto label1;

        interfaceinvoke r3.<com.android.org.chromium.content.browser.ChildProcessConnection: void start(java.lang.String[])>(r1);

     label1:
        return r3;
    }

    private static void freeConnection(com.android.org.chromium.content.browser.ChildProcessConnection)
    {
        com.android.org.chromium.content.browser.ChildProcessConnection r0;
        boolean $z0;
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ChildProcessConnection;

        $z0 = interfaceinvoke r0.<com.android.org.chromium.content.browser.ChildProcessConnection: boolean isInSandbox()>();

        $r1 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator getConnectionAllocator(boolean)>($z0);

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: void free(com.android.org.chromium.content.browser.ChildProcessConnection)>(r0);

        return;
    }

    public static void setBindingManagerForTesting(com.android.org.chromium.content.browser.BindingManager)
    {
        com.android.org.chromium.content.browser.BindingManager r0;

        r0 := @parameter0: com.android.org.chromium.content.browser.BindingManager;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager> = r0;

        return;
    }

    private static boolean isOomProtected(int)
    {
        int i0;
        com.android.org.chromium.content.browser.BindingManager $r0;
        boolean $z0;

        i0 := @parameter0: int;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        $z0 = interfaceinvoke $r0.<com.android.org.chromium.content.browser.BindingManager: boolean isOomProtected(int)>(i0);

        return $z0;
    }

    private static void registerViewSurface(int, android.view.Surface)
    {
        int i0;
        android.view.Surface r0;
        java.util.Map $r1;
        java.lang.Integer $r2;

        i0 := @parameter0: int;

        r0 := @parameter1: android.view.Surface;

        $r1 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sViewSurfaceMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, r0);

        return;
    }

    private static void unregisterViewSurface(int)
    {
        int i0;
        java.util.Map $r0;
        java.lang.Integer $r1;

        i0 := @parameter0: int;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sViewSurfaceMap>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        return;
    }

    private static void registerSurfaceTexture(int, int, android.graphics.SurfaceTexture)
    {
        int i0, i1;
        android.graphics.SurfaceTexture r0;
        android.util.Pair r1, $r2;
        java.lang.Integer $r3, $r4;
        android.view.Surface $r5;
        java.util.Map $r6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: android.graphics.SurfaceTexture;

        $r2 = new android.util.Pair;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r2.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r4);

        r1 = $r2;

        $r6 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sSurfaceTextureSurfaceMap>;

        $r5 = new android.view.Surface;

        specialinvoke $r5.<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>(r0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

        return;
    }

    private static void unregisterSurfaceTexture(int, int)
    {
        int i0, i1;
        android.util.Pair r0, $r1;
        java.lang.Integer $r2, $r3;
        java.util.Map $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new android.util.Pair;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r1.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        r0 = $r1;

        $r4 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sSurfaceTextureSurfaceMap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r0);

        return;
    }

    public static void setInForeground(int, boolean)
    {
        int i0;
        boolean z0;
        com.android.org.chromium.content.browser.BindingManager $r0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        interfaceinvoke $r0.<com.android.org.chromium.content.browser.BindingManager: void setInForeground(int,boolean)>(i0, z0);

        return;
    }

    public static void onSentToBackground()
    {
        com.android.org.chromium.content.browser.BindingManager $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        interfaceinvoke $r0.<com.android.org.chromium.content.browser.BindingManager: void onSentToBackground()>();

        return;
    }

    public static void onBroughtToForeground()
    {
        com.android.org.chromium.content.browser.BindingManager $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        interfaceinvoke $r0.<com.android.org.chromium.content.browser.BindingManager: void onBroughtToForeground()>();

        return;
    }

    public static void warmUp(android.content.Context)
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r6;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ChildProcessConnection $r3, $r4;
        java.lang.AssertionError $r5;

        r0 := @parameter0: android.content.Context;

        r1 = class "com/android/org/chromium/content/browser/ChildProcessLauncher";

        entermonitor class "com/android/org/chromium/content/browser/ChildProcessLauncher";

     label1:
        $z0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <com.android.org.chromium.base.ThreadUtils: boolean runningOnUiThread()>();

        if $z1 == 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r3 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection>;

        if $r3 != null goto label3;

        $r4 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection allocateBoundConnection(android.content.Context,java.lang.String[],boolean)>(r0, null, 1);

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection> = $r4;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static java.lang.String getSwitchValue(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0, r3;
        java.lang.String r1, r2, r4, $r9;
        int i0, i1, $i2;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r3 = r0;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        if r4 == null goto label4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(r2);

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r9;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    static void start(android.content.Context, java.lang.String[], int, int[], int[], boolean[], long)
    {
        android.content.Context r0;
        java.lang.String[] r1;
        int i0, i2, $i3, $i4, $i5, $i9, $i10, $i11, $i12, $i13, $i14;
        int[] r2, r3;
        boolean[] r4;
        long l1;
        com.android.org.chromium.content.browser.FileDescriptorInfo[] r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.String r6, $r10, $r11, $r12, $r16;
        com.android.org.chromium.content.browser.ChildProcessConnection r7;
        java.lang.Class r8;
        java.lang.Throwable r9, $r19;
        java.lang.StringBuilder $r13, $r14, $r15;
        com.android.org.chromium.content.browser.FileDescriptorInfo $r17;
        byte $b8, b15;
        java.lang.AssertionError $r18, $r20;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        r2 := @parameter3: int[];

        r3 := @parameter4: int[];

        r4 := @parameter5: boolean[];

        l1 := @parameter6: long;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void begin()>();

        $z1 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $i10 = lengthof r2;

        $i9 = lengthof r3;

        if $i10 != $i9 goto label01;

        $i13 = lengthof r3;

        $i14 = lengthof r4;

        if $i13 == $i14 goto label02;

     label01:
        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label02:
        $i4 = lengthof r3;

        r5 = newarray (com.android.org.chromium.content.browser.FileDescriptorInfo)[$i4];

        i2 = 0;

     label03:
        $i3 = lengthof r3;

        if i2 >= $i3 goto label04;

        $r17 = new com.android.org.chromium.content.browser.FileDescriptorInfo;

        $i12 = r2[i2];

        $i11 = r3[i2];

        $z6 = r4[i2];

        specialinvoke $r17.<com.android.org.chromium.content.browser.FileDescriptorInfo: void <init>(int,int,boolean)>($i12, $i11, $z6);

        r5[i2] = $r17;

        i2 = i2 + 1;

        goto label03;

     label04:
        $z2 = <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean $assertionsDisabled>;

        if $z2 != 0 goto label05;

        $b8 = l1 cmp 0L;

        if $b8 != 0 goto label05;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label05:
        b15 = 0;

        z0 = 1;

        r6 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String getSwitchValue(java.lang.String[],java.lang.String)>(r1, "type");

        $r10 = "renderer";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z3 == 0 goto label06;

        b15 = 2;

        goto label08;

     label06:
        $r11 = "gpu-process";

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z4 == 0 goto label07;

        b15 = 1;

        goto label08;

     label07:
        $r12 = "ppapi-broker";

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z5 == 0 goto label08;

        z0 = 0;

     label08:
        r7 = null;

        r8 = class "com/android/org/chromium/content/browser/ChildProcessLauncher";

        entermonitor class "com/android/org/chromium/content/browser/ChildProcessLauncher";

     label09:
        if z0 == 0 goto label10;

        r7 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection>;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection> = null;

     label10:
        exitmonitor r8;

     label11:
        goto label14;

     label12:
        $r19 := @caughtexception;

        r9 = $r19;

        exitmonitor r8;

     label13:
        throw r9;

     label14:
        if r7 != null goto label15;

        r7 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection allocateBoundConnection(android.content.Context,java.lang.String[],boolean)>(r0, r1, z0);

        if r7 != null goto label15;

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void nativeOnChildProcessStarted(long,int)>(l1, 0);

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Allocation of new service failed.");

        staticinvoke <com.android.org.chromium.base.TraceEvent: void end()>();

        return;

     label15:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting up connection to process: slot=");

        $i5 = interfaceinvoke r7.<com.android.org.chromium.content.browser.ChildProcessConnection: int getServiceNumber()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ChildProcessLauncher", $r16);

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void triggerConnectionSetup(com.android.org.chromium.content.browser.ChildProcessConnection,java.lang.String[],int,com.android.org.chromium.content.browser.FileDescriptorInfo[],int,long)>(r7, r1, i0, r5, b15, l1);

        staticinvoke <com.android.org.chromium.base.TraceEvent: void end()>();

        return;

        catch java.lang.Throwable from label09 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    static void triggerConnectionSetup(com.android.org.chromium.content.browser.ChildProcessConnection, java.lang.String[], int, com.android.org.chromium.content.browser.FileDescriptorInfo[], int, long)
    {
        com.android.org.chromium.content.browser.ChildProcessConnection r0;
        java.lang.String[] r1;
        int i0, i1;
        com.android.org.chromium.content.browser.FileDescriptorInfo[] r2;
        long l2;
        com.android.org.chromium.content.browser.ChildProcessLauncher$2 r3, $r4;
        com.android.org.chromium.content.common.IChildProcessCallback $r5;
        android.os.Bundle $r6;

        r0 := @parameter0: com.android.org.chromium.content.browser.ChildProcessConnection;

        r1 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        r2 := @parameter3: com.android.org.chromium.content.browser.FileDescriptorInfo[];

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        $r4 = new com.android.org.chromium.content.browser.ChildProcessLauncher$2;

        specialinvoke $r4.<com.android.org.chromium.content.browser.ChildProcessLauncher$2: void <init>(long,com.android.org.chromium.content.browser.ChildProcessConnection)>(l2, r0);

        r3 = $r4;

        $r5 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.common.IChildProcessCallback createCallback(int,int)>(i0, i1);

        $r6 = staticinvoke <com.android.org.chromium.base.library_loader.Linker: android.os.Bundle getSharedRelros()>();

        interfaceinvoke r0.<com.android.org.chromium.content.browser.ChildProcessConnection: void setupConnection(java.lang.String[],com.android.org.chromium.content.browser.FileDescriptorInfo[],com.android.org.chromium.content.common.IChildProcessCallback,com.android.org.chromium.content.browser.ChildProcessConnection$ConnectionCallback,android.os.Bundle)>(r1, r2, $r5, r3, $r6);

        return;
    }

    static void stop(int)
    {
        int i0;
        com.android.org.chromium.content.browser.ChildProcessConnection r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        java.util.Map $r5;
        java.lang.Integer $r6;
        java.lang.Object $r7;
        com.android.org.chromium.content.browser.BindingManager $r8;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stopping child connection: pid=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ChildProcessLauncher", $r4);

        $r5 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sServiceMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        r0 = (com.android.org.chromium.content.browser.ChildProcessConnection) $r7;

        if r0 != null goto label1;

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void logPidWarning(int,java.lang.String)>(i0, "Tried to stop non-existent connection");

        return;

     label1:
        $r8 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        interfaceinvoke $r8.<com.android.org.chromium.content.browser.BindingManager: void clearConnection(int)>(i0);

        interfaceinvoke r0.<com.android.org.chromium.content.browser.ChildProcessConnection: void stop()>();

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void freeConnection(com.android.org.chromium.content.browser.ChildProcessConnection)>(r0);

        return;
    }

    private static com.android.org.chromium.content.common.IChildProcessCallback createCallback(int, int)
    {
        int i0, i1;
        com.android.org.chromium.content.browser.ChildProcessLauncher$3 $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new com.android.org.chromium.content.browser.ChildProcessLauncher$3;

        specialinvoke $r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: void <init>(int,int)>(i1, i0);

        return $r0;
    }

    static void logPidWarning(int, java.lang.String)
    {
        int i0;
        java.lang.String r0, $r5;
        boolean $z0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if i0 <= 0 goto label1;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean nativeIsSingleProcess()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", pid=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ChildProcessLauncher", $r5);

     label1:
        return;
    }

    static com.android.org.chromium.content.browser.ChildProcessConnection allocateBoundConnectionForTesting(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.content.browser.ChildProcessConnection $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection allocateBoundConnection(android.content.Context,java.lang.String[],boolean)>(r0, null, 1);

        return $r1;
    }

    static int allocatedConnectionsCountForTesting()
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r0;
        int $i0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sSandboxedChildConnectionAllocator>;

        $i0 = virtualinvoke $r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: int allocatedConnectionsCountForTesting()>();

        return $i0;
    }

    static int connectedServicesCountForTesting()
    {
        java.util.Map $r0;
        int $i0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sServiceMap>;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        return $i0;
    }

    private static native void nativeOnChildProcessStarted(long, int);

    private static native void nativeEstablishSurfacePeer(int, android.view.Surface, int, int);

    private static native boolean nativeIsSingleProcess();

    static void access$000(com.android.org.chromium.content.browser.ChildProcessConnection)
    {
        com.android.org.chromium.content.browser.ChildProcessConnection r0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ChildProcessConnection;

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void freeConnection(com.android.org.chromium.content.browser.ChildProcessConnection)>(r0);

        return;
    }

    static com.android.org.chromium.content.browser.BindingManager access$100()
    {
        com.android.org.chromium.content.browser.BindingManager $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager>;

        return $r0;
    }

    static java.util.Map access$200()
    {
        java.util.Map $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sServiceMap>;

        return $r0;
    }

    static void access$300(long, int)
    {
        long l0;
        int i1;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void nativeOnChildProcessStarted(long,int)>(l0, i1);

        return;
    }

    static void access$400(int, android.view.Surface, int, int)
    {
        int i0, i1, i2;
        android.view.Surface r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.view.Surface;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void nativeEstablishSurfacePeer(int,android.view.Surface,int,int)>(i0, r0, i1, i2);

        return;
    }

    static java.util.Map access$500()
    {
        java.util.Map $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sViewSurfaceMap>;

        return $r0;
    }

    static java.util.Map access$600()
    {
        java.util.Map $r0;

        $r0 = <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sSurfaceTextureSurfaceMap>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator $r1, $r2;
        java.util.concurrent.ConcurrentHashMap $r3, $r5, $r6;
        com.android.org.chromium.content.browser.BindingManagerImpl $r4;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int NULL_PROCESS_HANDLE> = 0;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int MAX_REGISTERED_PRIVILEGED_SERVICES> = 3;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int MAX_REGISTERED_SANDBOXED_SERVICES> = 13;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String SWITCH_GPU_PROCESS> = "gpu-process";

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String SWITCH_RENDERER_PROCESS> = "renderer";

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String SWITCH_PPAPI_BROKER_PROCESS> = "ppapi-broker";

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String SWITCH_PROCESS_TYPE> = "type";

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int CALLBACK_FOR_RENDERER_PROCESS> = 2;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int CALLBACK_FOR_GPU_PROCESS> = 1;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: int CALLBACK_FOR_UNKNOWN_PROCESS> = 0;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.lang.String TAG> = "ChildProcessLauncher";

        $r0 = class "com/android/org/chromium/content/browser/ChildProcessLauncher";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean $assertionsDisabled> = $z1;

        $r1 = new com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator;

        specialinvoke $r1.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: void <init>(boolean)>(1);

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sSandboxedChildConnectionAllocator> = $r1;

        $r2 = new com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator;

        specialinvoke $r2.<com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator: void <init>(boolean)>(0);

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessLauncher$ChildConnectionAllocator sPrivilegedChildConnectionAllocator> = $r2;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sConnectionAllocated> = 0;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: boolean sLinkerInitialized> = 0;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: long sLinkerLoadAddress> = 0L;

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sServiceMap> = $r3;

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.ChildProcessConnection sSpareSandboxedConnection> = null;

        $r4 = staticinvoke <com.android.org.chromium.content.browser.BindingManagerImpl: com.android.org.chromium.content.browser.BindingManagerImpl createBindingManager()>();

        <com.android.org.chromium.content.browser.ChildProcessLauncher: com.android.org.chromium.content.browser.BindingManager sBindingManager> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sViewSurfaceMap> = $r5;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map sSurfaceTextureSurfaceMap> = $r6;

        return;
    }
}
