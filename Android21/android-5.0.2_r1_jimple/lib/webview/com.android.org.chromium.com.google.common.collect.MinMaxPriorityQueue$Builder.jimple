public final class com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder extends java.lang.Object
{
    private static final int UNSET_EXPECTED_SIZE;
    private final java.util.Comparator comparator;
    private int expectedSize;
    private int maximumSize;

    private void <init>(java.util.Comparator)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        java.util.Comparator r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        r1 := @parameter0: java.util.Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int expectedSize> = -1;

        r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int maximumSize> = 2147483647;

        $r2 = staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.Comparator) $r2;

        r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: java.util.Comparator comparator> = $r3;

        return;
    }

    public com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int expectedSize> = i0;

        return r0;
    }

    public com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int maximumSize> = i0;

        return r0;
    }

    public com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue create()
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        java.util.Set $r1;
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        $r1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        $r2 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable)>($r1);

        return $r2;
    }

    public com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        java.lang.Iterable r1;
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue r2, $r5;
        java.util.Iterator r3;
        java.lang.Object r4;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        r1 := @parameter0: java.lang.Iterable;

        $r5 = new com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue;

        $i1 = r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int expectedSize>;

        $i0 = r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int maximumSize>;

        $i2 = staticinvoke <com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue: int initialQueueSize(int,int,java.lang.Iterable)>($i1, $i0, r1);

        specialinvoke $r5.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue: void <init>(com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder,int,com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$1)>(r0, $i2, null);

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r2.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue: boolean offer(java.lang.Object)>(r4);

        goto label1;

     label2:
        return r2;
    }

    private com.android.org.chromium.com.google.common.collect.Ordering ordering()
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        java.util.Comparator $r1;
        com.android.org.chromium.com.google.common.collect.Ordering $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        $r1 = r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: java.util.Comparator comparator>;

        $r2 = staticinvoke <com.android.org.chromium.com.google.common.collect.Ordering: com.android.org.chromium.com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r1);

        return $r2;
    }

    void <init>(java.util.Comparator, com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$1)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        java.util.Comparator r1;
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$1 r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        r1 := @parameter0: java.util.Comparator;

        r2 := @parameter1: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$1;

        specialinvoke r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: void <init>(java.util.Comparator)>(r1);

        return;
    }

    static com.android.org.chromium.com.google.common.collect.Ordering access$200(com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        com.android.org.chromium.com.google.common.collect.Ordering $r1;

        r0 := @parameter0: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        $r1 = specialinvoke r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: com.android.org.chromium.com.google.common.collect.Ordering ordering()>();

        return $r1;
    }

    static int access$300(com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder)
    {
        com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder r0;
        int $i0;

        r0 := @parameter0: com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder;

        $i0 = r0.<com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int maximumSize>;

        return $i0;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.com.google.common.collect.MinMaxPriorityQueue$Builder: int UNSET_EXPECTED_SIZE> = -1;

        return;
    }
}
