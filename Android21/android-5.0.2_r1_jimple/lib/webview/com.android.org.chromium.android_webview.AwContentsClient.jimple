public abstract class com.android.org.chromium.android_webview.AwContentsClient extends java.lang.Object
{
    private final com.android.org.chromium.android_webview.AwContentsClientCallbackHelper mCallbackHelper;
    private com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver mWebContentsObserver;
    private int mCachedRendererBackgroundColor;
    private static final int INVALID_COLOR;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        android.os.Looper $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        specialinvoke r0.<com.android.org.chromium.android_webview.AwContentsClient: void <init>(android.os.Looper)>($r1);

        return;
    }

    public void <init>(android.os.Looper)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        android.os.Looper r1;
        com.android.org.chromium.android_webview.AwContentsClientCallbackHelper $r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.android_webview.AwContentsClient: int mCachedRendererBackgroundColor> = 0;

        $r2 = new com.android.org.chromium.android_webview.AwContentsClientCallbackHelper;

        specialinvoke $r2.<com.android.org.chromium.android_webview.AwContentsClientCallbackHelper: void <init>(android.os.Looper,com.android.org.chromium.android_webview.AwContentsClient)>(r1, r0);

        r0.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClientCallbackHelper mCallbackHelper> = $r2;

        return;
    }

    final void installWebContentsObserver(com.android.org.chromium.content.browser.ContentViewCore)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        com.android.org.chromium.content.browser.ContentViewCore r1;
        com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver $r2, $r3, $r4;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        $r2 = r0.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver mWebContentsObserver>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver mWebContentsObserver>;

        virtualinvoke $r4.<com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver: void detachFromWebContents()>();

     label1:
        $r3 = new com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver;

        specialinvoke $r3.<com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver: void <init>(com.android.org.chromium.android_webview.AwContentsClient,com.android.org.chromium.content.browser.ContentViewCore)>(r0, r1);

        r0.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClient$AwWebContentsObserver mWebContentsObserver> = $r3;

        return;
    }

    final com.android.org.chromium.android_webview.AwContentsClientCallbackHelper getCallbackHelper()
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        com.android.org.chromium.android_webview.AwContentsClientCallbackHelper $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        $r1 = r0.<com.android.org.chromium.android_webview.AwContentsClient: com.android.org.chromium.android_webview.AwContentsClientCallbackHelper mCallbackHelper>;

        return $r1;
    }

    final int getCachedRendererBackgroundColor()
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        boolean $z0, $z1;
        int $i0;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        $z0 = <com.android.org.chromium.android_webview.AwContentsClient: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.org.chromium.android_webview.AwContentsClient: boolean isCachedRendererBackgroundColorValid()>();

        if $z1 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        $i0 = r0.<com.android.org.chromium.android_webview.AwContentsClient: int mCachedRendererBackgroundColor>;

        return $i0;
    }

    final boolean isCachedRendererBackgroundColorValid()
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        $i0 = r0.<com.android.org.chromium.android_webview.AwContentsClient: int mCachedRendererBackgroundColor>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    final void onBackgroundColorChanged(int)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        int i0, $i1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i1 = 1;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        r0.<com.android.org.chromium.android_webview.AwContentsClient: int mCachedRendererBackgroundColor> = $i1;

        return;
    }

    public abstract void getVisitedHistory(android.webkit.ValueCallback);

    public abstract void doUpdateVisitedHistory(java.lang.String, boolean);

    public abstract void onProgressChanged(int);

    public abstract com.android.org.chromium.android_webview.AwWebResourceResponse shouldInterceptRequest(com.android.org.chromium.android_webview.AwContentsClient$ShouldInterceptRequestParams);

    public abstract boolean shouldOverrideKeyEvent(android.view.KeyEvent);

    public abstract boolean shouldOverrideUrlLoading(java.lang.String);

    public abstract void onLoadResource(java.lang.String);

    public abstract void onUnhandledKeyEvent(android.view.KeyEvent);

    public abstract boolean onConsoleMessage(android.webkit.ConsoleMessage);

    public abstract void onReceivedHttpAuthRequest(com.android.org.chromium.android_webview.AwHttpAuthHandler, java.lang.String, java.lang.String);

    public abstract void onReceivedSslError(android.webkit.ValueCallback, android.net.http.SslError);

    public void onReceivedClientCertRequest(com.android.org.chromium.android_webview.AwContentsClientBridge$ClientCertificateRequestCallback, java.lang.String[], java.security.Principal[], java.lang.String, int)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        com.android.org.chromium.android_webview.AwContentsClientBridge$ClientCertificateRequestCallback r1;
        java.lang.String[] r2;
        java.security.Principal[] r3;
        java.lang.String r4;
        int i0;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwContentsClientBridge$ClientCertificateRequestCallback;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.security.Principal[];

        r4 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        return;
    }

    public abstract void onReceivedLoginRequest(java.lang.String, java.lang.String, java.lang.String);

    public abstract void onFormResubmission(android.os.Message, android.os.Message);

    public abstract void onDownloadStart(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long);

    public void showFileChooser(android.webkit.ValueCallback, com.android.org.chromium.android_webview.AwContentsClient$FileChooserParams)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        android.webkit.ValueCallback r1;
        com.android.org.chromium.android_webview.AwContentsClient$FileChooserParams r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: android.webkit.ValueCallback;

        r2 := @parameter1: com.android.org.chromium.android_webview.AwContentsClient$FileChooserParams;

        return;
    }

    public abstract void onGeolocationPermissionsShowPrompt(java.lang.String, android.webkit.GeolocationPermissions$Callback);

    public abstract void onGeolocationPermissionsHidePrompt();

    public void onPermissionRequest(com.android.org.chromium.android_webview.permission.AwPermissionRequest)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        return;
    }

    public void onPermissionRequestCanceled(com.android.org.chromium.android_webview.permission.AwPermissionRequest)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r1;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        return;
    }

    public abstract void onScaleChangedScaled(float, float);

    protected abstract void handleJsAlert(java.lang.String, java.lang.String, com.android.org.chromium.android_webview.JsResultReceiver);

    protected abstract void handleJsBeforeUnload(java.lang.String, java.lang.String, com.android.org.chromium.android_webview.JsResultReceiver);

    protected abstract void handleJsConfirm(java.lang.String, java.lang.String, com.android.org.chromium.android_webview.JsResultReceiver);

    protected abstract void handleJsPrompt(java.lang.String, java.lang.String, java.lang.String, com.android.org.chromium.android_webview.JsPromptResultReceiver);

    protected abstract boolean onCreateWindow(boolean, boolean);

    protected abstract void onCloseWindow();

    public abstract void onReceivedTouchIconUrl(java.lang.String, boolean);

    public abstract void onReceivedIcon(android.graphics.Bitmap);

    public abstract void onReceivedTitle(java.lang.String);

    protected abstract void onRequestFocus();

    protected abstract android.view.View getVideoLoadingProgressView();

    public abstract void onPageStarted(java.lang.String);

    public abstract void onPageFinished(java.lang.String);

    public abstract void onReceivedError(int, java.lang.String, java.lang.String);

    public void onShowCustomView(android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        android.view.View r1;
        int i0;
        android.webkit.WebChromeClient$CustomViewCallback r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.webkit.WebChromeClient$CustomViewCallback;

        return;
    }

    public void onShowCustomView(android.view.View, android.webkit.WebChromeClient$CustomViewCallback)
    {
        com.android.org.chromium.android_webview.AwContentsClient r0;
        android.view.View r1;
        android.webkit.WebChromeClient$CustomViewCallback r2;

        r0 := @this: com.android.org.chromium.android_webview.AwContentsClient;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.webkit.WebChromeClient$CustomViewCallback;

        virtualinvoke r0.<com.android.org.chromium.android_webview.AwContentsClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback)>(r1, -1, r2);

        return;
    }

    public abstract void onHideCustomView();

    public abstract android.graphics.Bitmap getDefaultVideoPoster();

    public abstract void onFindResultReceived(int, int, boolean);

    public abstract void onNewPicture(android.graphics.Picture);

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.android_webview.AwContentsClient: int INVALID_COLOR> = 0;

        $r0 = class "com/android/org/chromium/android_webview/AwContentsClient";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.android_webview.AwContentsClient: boolean $assertionsDisabled> = $z1;

        return;
    }
}
