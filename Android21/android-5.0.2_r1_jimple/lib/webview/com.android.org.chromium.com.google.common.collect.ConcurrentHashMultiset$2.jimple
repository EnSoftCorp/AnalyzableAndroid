class com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2 extends com.android.org.chromium.com.google.common.collect.AbstractIterator
{
    private java.util.Iterator mapEntries;
    final com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0;

    void <init>(com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset)
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2 r0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset r1, $r2;
        java.util.concurrent.ConcurrentMap $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2;

        r1 := @parameter0: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset;

        r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0> = r1;

        specialinvoke r0.<com.android.org.chromium.com.google.common.collect.AbstractIterator: void <init>()>();

        $r2 = r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0>;

        $r3 = staticinvoke <com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset: java.util.concurrent.ConcurrentMap access$100(com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: java.util.Iterator mapEntries> = $r5;

        return;
    }

    protected com.android.org.chromium.com.google.common.collect.Multiset$Entry computeNext()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2 r0;
        java.util.Map$Entry r1;
        int i0;
        java.util.Iterator $r2, $r3;
        boolean $z0;
        java.lang.Object $r4, $r5, $r7, $r9;
        java.util.concurrent.atomic.AtomicInteger $r6;
        com.android.org.chromium.com.google.common.collect.Multiset$Entry $r8, $r10;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2;

     label1:
        $r2 = r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: java.util.Iterator mapEntries>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r9 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: java.lang.Object endOfData()>();

        $r10 = (com.android.org.chromium.com.google.common.collect.Multiset$Entry) $r9;

        return $r10;

     label2:
        $r3 = r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: java.util.Iterator mapEntries>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r4;

        $r5 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.util.concurrent.atomic.AtomicInteger) $r5;

        i0 = virtualinvoke $r6.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if i0 == 0 goto label3;

        $r7 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = staticinvoke <com.android.org.chromium.com.google.common.collect.Multisets: com.android.org.chromium.com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>($r7, i0);

        return $r8;

     label3:
        goto label1;
    }

    protected volatile java.lang.Object computeNext()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2 r0;
        com.android.org.chromium.com.google.common.collect.Multiset$Entry $r1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2;

        $r1 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$2: com.android.org.chromium.com.google.common.collect.Multiset$Entry computeNext()>();

        return $r1;
    }
}
