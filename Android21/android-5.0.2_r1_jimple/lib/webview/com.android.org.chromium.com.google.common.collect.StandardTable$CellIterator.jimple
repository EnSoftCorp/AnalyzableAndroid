class com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator rowIterator;
    java.util.Map$Entry rowEntry;
    java.util.Iterator columnIterator;
    final com.android.org.chromium.com.google.common.collect.StandardTable this$0;

    private void <init>(com.android.org.chromium.com.google.common.collect.StandardTable)
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        com.android.org.chromium.com.google.common.collect.StandardTable r1, $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5, $r6;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        r1 := @parameter0: com.android.org.chromium.com.google.common.collect.StandardTable;

        r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: com.android.org.chromium.com.google.common.collect.StandardTable this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: com.android.org.chromium.com.google.common.collect.StandardTable this$0>;

        $r3 = $r2.<com.android.org.chromium.com.google.common.collect.StandardTable: java.util.Map backingMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator rowIterator> = $r5;

        $r6 = staticinvoke <com.android.org.chromium.com.google.common.collect.Iterators: java.util.Iterator emptyModifiableIterator()>();

        r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator> = $r6;

        return;
    }

    public boolean hasNext()
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        java.util.Iterator $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        $r1 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator rowIterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator>;

        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public com.android.org.chromium.com.google.common.collect.Table$Cell next()
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        java.util.Map$Entry r1, $r5, $r12, $r13;
        java.util.Iterator $r2, $r3, $r10, $r17;
        boolean $z0;
        java.lang.Object $r4, $r6, $r7, $r8, $r11, $r14;
        com.android.org.chromium.com.google.common.collect.Table$Cell $r9;
        java.util.Set $r15;
        java.util.Map $r16;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        $r2 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator>;

        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r10 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator rowIterator>;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Map$Entry rowEntry> = $r12;

        $r13 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Map$Entry rowEntry>;

        $r14 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.util.Map) $r14;

        $r15 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

        r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator> = $r17;

     label1:
        $r3 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r4;

        $r5 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Map$Entry rowEntry>;

        $r6 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = interfaceinvoke r1.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = staticinvoke <com.android.org.chromium.com.google.common.collect.Tables: com.android.org.chromium.com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r7, $r8);

        return $r9;
    }

    public void remove()
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        java.util.Iterator $r1, $r5;
        java.util.Map$Entry $r2;
        java.lang.Object $r3;
        java.util.Map $r4;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        $r1 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator columnIterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Map$Entry rowEntry>;

        $r3 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r4 = (java.util.Map) $r3;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: java.util.Iterator rowIterator>;

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label1:
        return;
    }

    public volatile java.lang.Object next()
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        com.android.org.chromium.com.google.common.collect.Table$Cell $r1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        $r1 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: com.android.org.chromium.com.google.common.collect.Table$Cell next()>();

        return $r1;
    }

    void <init>(com.android.org.chromium.com.google.common.collect.StandardTable, com.android.org.chromium.com.google.common.collect.StandardTable$1)
    {
        com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator r0;
        com.android.org.chromium.com.google.common.collect.StandardTable r1;
        com.android.org.chromium.com.google.common.collect.StandardTable$1 r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator;

        r1 := @parameter0: com.android.org.chromium.com.google.common.collect.StandardTable;

        r2 := @parameter1: com.android.org.chromium.com.google.common.collect.StandardTable$1;

        specialinvoke r0.<com.android.org.chromium.com.google.common.collect.StandardTable$CellIterator: void <init>(com.android.org.chromium.com.google.common.collect.StandardTable)>(r1);

        return;
    }
}
