public class com.android.org.chromium.android_webview.permission.AwPermissionRequest extends java.lang.Object
{
    private static java.lang.String TAG;
    private android.net.Uri mOrigin;
    private long mResources;
    private boolean mProcessed;
    private long mNativeAwPermissionRequest;

    private static com.android.org.chromium.android_webview.permission.AwPermissionRequest create(long, java.lang.String, long)
    {
        long l0, l1;
        java.lang.String r0;
        android.net.Uri r1;
        byte $b2;
        com.android.org.chromium.android_webview.permission.AwPermissionRequest $r2;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        l1 := @parameter2: long;

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        return null;

     label1:
        r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r0);

        $r2 = new com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        specialinvoke $r2.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void <init>(long,android.net.Uri,long)>(l0, r1, l1);

        return $r2;
    }

    private void <init>(long, android.net.Uri, long)
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        long l0, l1;
        android.net.Uri r1;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        l0 := @parameter0: long;

        r1 := @parameter1: android.net.Uri;

        l1 := @parameter2: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest> = l0;

        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: android.net.Uri mOrigin> = r1;

        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mResources> = l1;

        return;
    }

    public android.net.Uri getOrigin()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        android.net.Uri $r1;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        $r1 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: android.net.Uri mOrigin>;

        return $r1;
    }

    public long getResources()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        long $l0;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        $l0 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mResources>;

        return $l0;
    }

    public void grant()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        specialinvoke r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void validate()>();

        $l0 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest>;

        specialinvoke r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void nativeOnAccept(long,boolean)>($l2, 1);

     label1:
        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: boolean mProcessed> = 1;

        return;
    }

    public void deny()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        specialinvoke r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void validate()>();

        $l0 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest>;

        specialinvoke r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void nativeOnAccept(long,boolean)>($l2, 0);

     label1:
        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: boolean mProcessed> = 1;

        return;
    }

    private void detachNativeInstance()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest> = 0L;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        long $l0;
        byte $b1;
        java.lang.String $r1;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        $l0 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: long mNativeAwPermissionRequest>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return;

     label1:
        $r1 = <com.android.org.chromium.android_webview.permission.AwPermissionRequest: java.lang.String TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, "Neither grant() nor deny() has been called, the permission request is denied by default.");

        virtualinvoke r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: void deny()>();

        return;
    }

    private void validate()
    {
        com.android.org.chromium.android_webview.permission.AwPermissionRequest r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1, $r2;

        r0 := @this: com.android.org.chromium.android_webview.permission.AwPermissionRequest;

        $z0 = staticinvoke <com.android.org.chromium.base.ThreadUtils: boolean runningOnUiThread()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Either grant() or deny() should be called on UI thread");

        throw $r2;

     label1:
        $z1 = r0.<com.android.org.chromium.android_webview.permission.AwPermissionRequest: boolean mProcessed>;

        if $z1 == 0 goto label2;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Either grant() or deny() has been already called.");

        throw $r1;

     label2:
        return;
    }

    private native void nativeOnAccept(long, boolean);

    static void <clinit>()
    {
        <com.android.org.chromium.android_webview.permission.AwPermissionRequest: java.lang.String TAG> = "AwPermissionRequest";

        return;
    }
}
