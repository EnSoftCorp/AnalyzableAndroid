class com.android.org.chromium.content.browser.input.DateDialogNormalizer extends java.lang.Object
{

    void <init>()
    {
        com.android.org.chromium.content.browser.input.DateDialogNormalizer r0;

        r0 := @this: com.android.org.chromium.content.browser.input.DateDialogNormalizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void setLimits(android.widget.DatePicker, long, long)
    {
        android.widget.DatePicker r0;
        long l0, l1, $l8, $l12;
        java.util.Calendar r1, r2;
        int i2, i3, i4, $i6, $i7, $i9, $i10, $i11, $i13;
        byte $b5;

        r0 := @parameter0: android.widget.DatePicker;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        $b5 = l1 cmp l0;

        if $b5 > 0 goto label1;

        return;

     label1:
        r1 = staticinvoke <com.android.org.chromium.content.browser.input.DateDialogNormalizer: java.util.Calendar trimToDate(long)>(l0);

        r2 = staticinvoke <com.android.org.chromium.content.browser.input.DateDialogNormalizer: java.util.Calendar trimToDate(long)>(l1);

        i2 = virtualinvoke r0.<android.widget.DatePicker: int getYear()>();

        i3 = virtualinvoke r0.<android.widget.DatePicker: int getMonth()>();

        i4 = virtualinvoke r0.<android.widget.DatePicker: int getDayOfMonth()>();

        $i7 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);

        $i6 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        $i9 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r0.<android.widget.DatePicker: void updateDate(int,int,int)>($i7, $i6, $i9);

        $l8 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r0.<android.widget.DatePicker: void setMinDate(long)>($l8);

        $i11 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);

        $i10 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);

        $i13 = virtualinvoke r1.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r0.<android.widget.DatePicker: void updateDate(int,int,int)>($i11, $i10, $i13);

        $l12 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r0.<android.widget.DatePicker: void setMaxDate(long)>($l12);

        virtualinvoke r0.<android.widget.DatePicker: void updateDate(int,int,int)>(i2, i3, i4);

        return;
    }

    private static java.util.Calendar trimToDate(long)
    {
        long l0;
        java.util.Calendar r0, r1;
        java.util.TimeZone $r2, $r3;
        int $i1, $i2, $i3;

        l0 := @parameter0: long;

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r2);

        virtualinvoke r0.<java.util.Calendar: void clear()>();

        virtualinvoke r0.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r3);

        virtualinvoke r1.<java.util.Calendar: void clear()>();

        $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(1);

        $i2 = virtualinvoke r0.<java.util.Calendar: int get(int)>(2);

        $i3 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r1.<java.util.Calendar: void set(int,int,int,int,int,int)>($i1, $i2, $i3, 0, 0, 0);

        return r1;
    }

    static void normalize(android.widget.DatePicker, android.widget.DatePicker$OnDateChangedListener, int, int, int, int, int, long, long)
    {
        android.widget.DatePicker r0;
        android.widget.DatePicker$OnDateChangedListener r1;
        int i0, i1, i2, i3, i4, $i11, $i12, $i13;
        long l5, l6, $l7, $l10;
        java.util.Calendar r2;
        java.util.TimeZone $r3;
        byte $b8, $b9;

        r0 := @parameter0: android.widget.DatePicker;

        r1 := @parameter1: android.widget.DatePicker$OnDateChangedListener;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        i4 := @parameter6: int;

        l5 := @parameter7: long;

        l6 := @parameter8: long;

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r3);

        virtualinvoke r2.<java.util.Calendar: void clear()>();

        virtualinvoke r2.<java.util.Calendar: void set(int,int,int,int,int,int)>(i0, i1, i2, i3, i4, 0);

        $l7 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $b8 = $l7 cmp l5;

        if $b8 >= 0 goto label1;

        virtualinvoke r2.<java.util.Calendar: void clear()>();

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>(l5);

        goto label2;

     label1:
        $l10 = virtualinvoke r2.<java.util.Calendar: long getTimeInMillis()>();

        $b9 = $l10 cmp l6;

        if $b9 <= 0 goto label2;

        virtualinvoke r2.<java.util.Calendar: void clear()>();

        virtualinvoke r2.<java.util.Calendar: void setTimeInMillis(long)>(l6);

     label2:
        $i12 = virtualinvoke r2.<java.util.Calendar: int get(int)>(1);

        $i11 = virtualinvoke r2.<java.util.Calendar: int get(int)>(2);

        $i13 = virtualinvoke r2.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r0.<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>($i12, $i11, $i13, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.DateDialogNormalizer: void setLimits(android.widget.DatePicker,long,long)>(r0, l5, l6);

        return;
    }
}
