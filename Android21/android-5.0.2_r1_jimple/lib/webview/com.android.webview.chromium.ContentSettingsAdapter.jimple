public class com.android.webview.chromium.ContentSettingsAdapter extends android.webkit.WebSettings
{
    private static final java.lang.String LOGTAG;
    private com.android.org.chromium.android_webview.AwSettings mAwSettings;

    public void <init>(com.android.org.chromium.android_webview.AwSettings)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: com.android.org.chromium.android_webview.AwSettings;

        specialinvoke r0.<android.webkit.WebSettings: void <init>()>();

        r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings> = r1;

        return;
    }

    com.android.org.chromium.android_webview.AwSettings getAwSettings()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        return $r1;
    }

    public void setNavDump(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getNavDump()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return 0;
    }

    public void setSupportZoom(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setSupportZoom(boolean)>(z0);

        return;
    }

    public boolean supportZoom()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean supportZoom()>();

        return $z0;
    }

    public void setBuiltInZoomControls(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setBuiltInZoomControls(boolean)>(z0);

        return;
    }

    public boolean getBuiltInZoomControls()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getBuiltInZoomControls()>();

        return $z0;
    }

    public void setDisplayZoomControls(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setDisplayZoomControls(boolean)>(z0);

        return;
    }

    public boolean getDisplayZoomControls()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getDisplayZoomControls()>();

        return $z0;
    }

    public void setAllowFileAccess(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAllowFileAccess(boolean)>(z0);

        return;
    }

    public boolean getAllowFileAccess()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getAllowFileAccess()>();

        return $z0;
    }

    public void setAllowContentAccess(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAllowContentAccess(boolean)>(z0);

        return;
    }

    public boolean getAllowContentAccess()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getAllowContentAccess()>();

        return $z0;
    }

    public void setLoadWithOverviewMode(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setLoadWithOverviewMode(boolean)>(z0);

        return;
    }

    public boolean getLoadWithOverviewMode()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getLoadWithOverviewMode()>();

        return $z0;
    }

    public void setAcceptThirdPartyCookies(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAcceptThirdPartyCookies(boolean)>(z0);

        return;
    }

    public boolean getAcceptThirdPartyCookies()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getAcceptThirdPartyCookies()>();

        return $z0;
    }

    public void setEnableSmoothTransition(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean enableSmoothTransition()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return 0;
    }

    public void setUseWebViewBackgroundForOverscrollBackground(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getUseWebViewBackgroundForOverscrollBackground()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return 0;
    }

    public void setSaveFormData(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setSaveFormData(boolean)>(z0);

        return;
    }

    public boolean getSaveFormData()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getSaveFormData()>();

        return $z0;
    }

    public void setSavePassword(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getSavePassword()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return 0;
    }

    public synchronized void setTextZoom(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setTextZoom(int)>(i0);

        return;
    }

    public synchronized int getTextZoom()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getTextZoom()>();

        return $i0;
    }

    public void setDefaultZoom(android.webkit.WebSettings$ZoomDensity)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$ZoomDensity r1, $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String $r4, $r7;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: android.webkit.WebSettings$ZoomDensity;

        $r2 = <android.webkit.WebSettings$ZoomDensity: android.webkit.WebSettings$ZoomDensity MEDIUM>;

        if r1 == $r2 goto label1;

        $r4 = <com.android.webview.chromium.ContentSettingsAdapter: java.lang.String LOGTAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDefaultZoom not supported, zoom=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, $r7);

     label1:
        return;
    }

    public android.webkit.WebSettings$ZoomDensity getDefaultZoom()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$ZoomDensity $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = <android.webkit.WebSettings$ZoomDensity: android.webkit.WebSettings$ZoomDensity MEDIUM>;

        return $r1;
    }

    public void setLightTouchEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        return;
    }

    public boolean getLightTouchEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return 0;
    }

    public synchronized void setUserAgent(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        virtualinvoke r0.<com.android.webview.chromium.ContentSettingsAdapter: void setUserAgentString(java.lang.String)>(null);

        goto label2;

     label1:
        $r2 = <com.android.webview.chromium.ContentSettingsAdapter: java.lang.String LOGTAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setUserAgent not supported, ua=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r2, $r5);

     label2:
        return;
    }

    public synchronized int getUserAgent()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        byte $b0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = staticinvoke <com.android.org.chromium.android_webview.AwSettings: java.lang.String getDefaultUserAgent()>();

        $r2 = virtualinvoke r0.<com.android.webview.chromium.ContentSettingsAdapter: java.lang.String getUserAgentString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = -1;

     label2:
        return $b0;
    }

    public synchronized void setUseWideViewPort(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setUseWideViewPort(boolean)>(z0);

        return;
    }

    public synchronized boolean getUseWideViewPort()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getUseWideViewPort()>();

        return $z0;
    }

    public synchronized void setSupportMultipleWindows(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setSupportMultipleWindows(boolean)>(z0);

        return;
    }

    public synchronized boolean supportMultipleWindows()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean supportMultipleWindows()>();

        return $z0;
    }

    public synchronized void setLayoutAlgorithm(android.webkit.WebSettings$LayoutAlgorithm)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$LayoutAlgorithm r1;
        com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm[] r2, $r3;
        com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm $r4, $r5, $r6, $r7, $r9;
        com.android.org.chromium.android_webview.AwSettings $r8;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: android.webkit.WebSettings$LayoutAlgorithm;

        $r3 = newarray (com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm)[4];

        $r4 = <com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm: com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm NORMAL>;

        $r3[0] = $r4;

        $r5 = <com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm: com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm SINGLE_COLUMN>;

        $r3[1] = $r5;

        $r6 = <com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm: com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm NARROW_COLUMNS>;

        $r3[2] = $r6;

        $r7 = <com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm: com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm TEXT_AUTOSIZING>;

        $r3[3] = $r7;

        r2 = $r3;

        $r8 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke r1.<android.webkit.WebSettings$LayoutAlgorithm: int ordinal()>();

        $r9 = r2[$i0];

        virtualinvoke $r8.<com.android.org.chromium.android_webview.AwSettings: void setLayoutAlgorithm(com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm)>($r9);

        return;
    }

    public synchronized android.webkit.WebSettings$LayoutAlgorithm getLayoutAlgorithm()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$LayoutAlgorithm[] r1, $r2;
        android.webkit.WebSettings$LayoutAlgorithm $r3, $r4, $r5, $r6, $r9;
        com.android.org.chromium.android_webview.AwSettings $r7;
        com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm $r8;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r2 = newarray (android.webkit.WebSettings$LayoutAlgorithm)[4];

        $r3 = <android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm NORMAL>;

        $r2[0] = $r3;

        $r4 = <android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm SINGLE_COLUMN>;

        $r2[1] = $r4;

        $r5 = <android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm NARROW_COLUMNS>;

        $r2[2] = $r5;

        $r6 = <android.webkit.WebSettings$LayoutAlgorithm: android.webkit.WebSettings$LayoutAlgorithm TEXT_AUTOSIZING>;

        $r2[3] = $r6;

        r1 = $r2;

        $r7 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r8 = virtualinvoke $r7.<com.android.org.chromium.android_webview.AwSettings: com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm getLayoutAlgorithm()>();

        $i0 = virtualinvoke $r8.<com.android.org.chromium.android_webview.AwSettings$LayoutAlgorithm: int ordinal()>();

        $r9 = r1[$i0];

        return $r9;
    }

    public synchronized void setStandardFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setStandardFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getStandardFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getStandardFontFamily()>();

        return $r2;
    }

    public synchronized void setFixedFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setFixedFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getFixedFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getFixedFontFamily()>();

        return $r2;
    }

    public synchronized void setSansSerifFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setSansSerifFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getSansSerifFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getSansSerifFontFamily()>();

        return $r2;
    }

    public synchronized void setSerifFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setSerifFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getSerifFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getSerifFontFamily()>();

        return $r2;
    }

    public synchronized void setCursiveFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setCursiveFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getCursiveFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getCursiveFontFamily()>();

        return $r2;
    }

    public synchronized void setFantasyFontFamily(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setFantasyFontFamily(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getFantasyFontFamily()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getFantasyFontFamily()>();

        return $r2;
    }

    public synchronized void setMinimumFontSize(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setMinimumFontSize(int)>(i0);

        return;
    }

    public synchronized int getMinimumFontSize()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getMinimumFontSize()>();

        return $i0;
    }

    public synchronized void setMinimumLogicalFontSize(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setMinimumLogicalFontSize(int)>(i0);

        return;
    }

    public synchronized int getMinimumLogicalFontSize()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getMinimumLogicalFontSize()>();

        return $i0;
    }

    public synchronized void setDefaultFontSize(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setDefaultFontSize(int)>(i0);

        return;
    }

    public synchronized int getDefaultFontSize()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getDefaultFontSize()>();

        return $i0;
    }

    public synchronized void setDefaultFixedFontSize(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setDefaultFixedFontSize(int)>(i0);

        return;
    }

    public synchronized int getDefaultFixedFontSize()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getDefaultFixedFontSize()>();

        return $i0;
    }

    public synchronized void setLoadsImagesAutomatically(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setLoadsImagesAutomatically(boolean)>(z0);

        return;
    }

    public synchronized boolean getLoadsImagesAutomatically()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getLoadsImagesAutomatically()>();

        return $z0;
    }

    public synchronized void setBlockNetworkImage(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0, $z1;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setImagesEnabled(boolean)>($z1);

        return;
    }

    public synchronized boolean getBlockNetworkImage()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getImagesEnabled()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public synchronized void setBlockNetworkLoads(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setBlockNetworkLoads(boolean)>(z0);

        return;
    }

    public synchronized boolean getBlockNetworkLoads()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getBlockNetworkLoads()>();

        return $z0;
    }

    public synchronized void setJavaScriptEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setJavaScriptEnabled(boolean)>(z0);

        return;
    }

    public void setAllowUniversalAccessFromFileURLs(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAllowUniversalAccessFromFileURLs(boolean)>(z0);

        return;
    }

    public void setAllowFileAccessFromFileURLs(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAllowFileAccessFromFileURLs(boolean)>(z0);

        return;
    }

    public synchronized void setPluginsEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setPluginsEnabled(boolean)>(z0);

        return;
    }

    public synchronized void setPluginState(android.webkit.WebSettings$PluginState)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$PluginState r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: android.webkit.WebSettings$PluginState;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setPluginState(android.webkit.WebSettings$PluginState)>(r1);

        return;
    }

    public synchronized void setDatabasePath(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public synchronized void setGeolocationDatabasePath(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public synchronized void setAppCacheEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setAppCacheEnabled(boolean)>(z0);

        return;
    }

    public synchronized void setAppCachePath(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setAppCachePath(java.lang.String)>(r1);

        return;
    }

    public synchronized void setAppCacheMaxSize(long)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        long l0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        l0 := @parameter0: long;

        return;
    }

    public synchronized void setDatabaseEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setDatabaseEnabled(boolean)>(z0);

        return;
    }

    public synchronized void setDomStorageEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setDomStorageEnabled(boolean)>(z0);

        return;
    }

    public synchronized boolean getDomStorageEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getDomStorageEnabled()>();

        return $z0;
    }

    public synchronized java.lang.String getDatabasePath()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        return "";
    }

    public synchronized boolean getDatabaseEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getDatabaseEnabled()>();

        return $z0;
    }

    public synchronized void setGeolocationEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setGeolocationEnabled(boolean)>(z0);

        return;
    }

    public synchronized boolean getJavaScriptEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getJavaScriptEnabled()>();

        return $z0;
    }

    public boolean getAllowUniversalAccessFromFileURLs()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getAllowUniversalAccessFromFileURLs()>();

        return $z0;
    }

    public boolean getAllowFileAccessFromFileURLs()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getAllowFileAccessFromFileURLs()>();

        return $z0;
    }

    public synchronized boolean getPluginsEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getPluginsEnabled()>();

        return $z0;
    }

    public synchronized android.webkit.WebSettings$PluginState getPluginState()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        android.webkit.WebSettings$PluginState $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: android.webkit.WebSettings$PluginState getPluginState()>();

        return $r2;
    }

    public synchronized void setJavaScriptCanOpenWindowsAutomatically(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>(z0);

        return;
    }

    public synchronized boolean getJavaScriptCanOpenWindowsAutomatically()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>();

        return $z0;
    }

    public synchronized void setDefaultTextEncodingName(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setDefaultTextEncodingName(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getDefaultTextEncodingName()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getDefaultTextEncodingName()>();

        return $r2;
    }

    public synchronized void setUserAgentString(java.lang.String)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        java.lang.String r1;
        com.android.org.chromium.android_webview.AwSettings $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r2.<com.android.org.chromium.android_webview.AwSettings: void setUserAgentString(java.lang.String)>(r1);

        return;
    }

    public synchronized java.lang.String getUserAgentString()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        java.lang.String $r2;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: java.lang.String getUserAgentString()>();

        return $r2;
    }

    public void setNeedInitialFocus(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setShouldFocusFirstNode(boolean)>(z0);

        return;
    }

    public synchronized void setRenderPriority(android.webkit.WebSettings$RenderPriority)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        android.webkit.WebSettings$RenderPriority r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        r1 := @parameter0: android.webkit.WebSettings$RenderPriority;

        return;
    }

    public void setCacheMode(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setCacheMode(int)>(i0);

        return;
    }

    public int getCacheMode()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getCacheMode()>();

        return $i0;
    }

    public void setMediaPlaybackRequiresUserGesture(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setMediaPlaybackRequiresUserGesture(boolean)>(z0);

        return;
    }

    public boolean getMediaPlaybackRequiresUserGesture()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getMediaPlaybackRequiresUserGesture()>();

        return $z0;
    }

    public void setMixedContentMode(int)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        int i0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setMixedContentMode(int)>(i0);

        return;
    }

    public int getMixedContentMode()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        int $i0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: int getMixedContentMode()>();

        return $i0;
    }

    public void setVideoOverlayForEmbeddedEncryptedVideoEnabled(boolean)
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        boolean z0;
        com.android.org.chromium.android_webview.AwSettings $r1;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: void setVideoOverlayForEmbeddedVideoEnabled(boolean)>(z0);

        return;
    }

    public boolean getVideoOverlayForEmbeddedEncryptedVideoEnabled()
    {
        com.android.webview.chromium.ContentSettingsAdapter r0;
        com.android.org.chromium.android_webview.AwSettings $r1;
        boolean $z0;

        r0 := @this: com.android.webview.chromium.ContentSettingsAdapter;

        $r1 = r0.<com.android.webview.chromium.ContentSettingsAdapter: com.android.org.chromium.android_webview.AwSettings mAwSettings>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.android_webview.AwSettings: boolean getVideoOverlayForEmbeddedVideoEnabled()>();

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "com/android/webview/chromium/ContentSettingsAdapter";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.webview.chromium.ContentSettingsAdapter: java.lang.String LOGTAG> = $r1;

        return;
    }
}
