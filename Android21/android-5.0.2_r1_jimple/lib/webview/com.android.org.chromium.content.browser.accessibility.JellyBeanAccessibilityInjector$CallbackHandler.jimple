class com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler extends java.lang.Object
{
    private static final java.lang.String JAVASCRIPT_ACTION_TEMPLATE;
    private static final long RESULT_TIMEOUT;
    private final java.util.concurrent.atomic.AtomicInteger mResultIdCounter;
    private final java.lang.Object mResultLock;
    private final java.lang.String mInterfaceName;
    private boolean mResult;
    private long mResultId;

    private void <init>(java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1;
        java.util.concurrent.atomic.AtomicInteger $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mResultIdCounter> = $r2;

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock> = $r3;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = 0;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = -1L;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.String mInterfaceName> = r1;

        return;
    }

    private boolean performAction(com.android.org.chromium.content.browser.ContentViewCore, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        com.android.org.chromium.content.browser.ContentViewCore r1;
        java.lang.String r2, r3, $r6;
        int i0;
        java.util.concurrent.atomic.AtomicInteger $r4;
        java.lang.Object[] $r5;
        java.util.Locale $r7;
        java.lang.Integer $r8;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.util.concurrent.atomic.AtomicInteger mResultIdCounter>;

        i0 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = r2;

        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.String mInterfaceName>;

        $r5[1] = $r6;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[2] = $r8;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, "(function() {  retVal = false;  try {    retVal = %s;  } catch (e) {    retVal = false;  }  %s.onResult(%d, retVal);})()", $r5);

        virtualinvoke r1.<com.android.org.chromium.content.browser.ContentViewCore: void evaluateJavaScript(java.lang.String,com.android.org.chromium.content.browser.ContentViewCore$JavaScriptCallback)>(r3, null);

        $z0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean getResultAndClear(int)>(i0);

        return $z0;
    }

    private boolean getResultAndClear(int)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        int i0;
        java.lang.Object r1, $r3;
        boolean z0, z1, $z2;
        java.lang.Throwable r2, $r4;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        z0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean waitForResultTimedLocked(int)>(i0);

        if z0 == 0 goto label2;

        $z2 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult>;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z1 = $z2;

        specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: void clearResultLocked()>();

        exitmonitor r1;

     label4:
        return z1;

     label5:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void clearResultLocked()
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = -1L;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = 0;

        return;
    }

    private boolean waitForResultTimedLocked(int)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        int i0;
        long l2, l3, $l4, $l5, $l7, $l8, $l11, l12;
        byte $b6, $b9, $b10;
        java.lang.InterruptedException $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        i0 := @parameter0: int;

        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label1:
        $l5 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $l4 = (long) i0;

        $b6 = $l5 cmp $l4;

        if $b6 != 0 goto label3;

     label2:
        return 1;

     label3:
        $l8 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $l7 = (long) i0;

        $b9 = $l8 cmp $l7;

        if $b9 <= 0 goto label5;

     label4:
        return 0;

     label5:
        $l11 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l3 = $l11 - l2;

        l12 = 5000L - l3;

        $b10 = l12 cmp 0L;

        if $b10 > 0 goto label7;

     label6:
        return 0;

     label7:
        $r3 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        virtualinvoke $r3.<java.lang.Object: void wait(long)>(l12);

     label8:
        goto label1;

     label9:
        $r2 := @caughtexception;

        goto label1;

        catch java.lang.InterruptedException from label1 to label2 with label9;
        catch java.lang.InterruptedException from label3 to label4 with label9;
        catch java.lang.InterruptedException from label5 to label6 with label9;
        catch java.lang.InterruptedException from label7 to label8 with label9;
    }

    public void onResult(java.lang.String, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1, r2;
        long l0, $l1;
        java.lang.Throwable r4, $r8;
        java.lang.Object $r5, $r6, r9;
        byte $b2;
        boolean $z0;
        java.lang.NumberFormatException $r7;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label01:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r7 := @caughtexception;

        return;

     label04:
        $r5 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        r9 = $r5;

        entermonitor $r5;

     label05:
        $l1 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId>;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label06;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r2);

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean mResult> = $z0;

        r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long mResultId> = l0;

     label06:
        $r6 = r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.Object mResultLock>;

        virtualinvoke $r6.<java.lang.Object: void notifyAll()>();

        exitmonitor r9;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r9;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void <init>(java.lang.String, com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        java.lang.String r1;
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1 r2;

        r0 := @this: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$1;

        specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: void <init>(java.lang.String)>(r1);

        return;
    }

    static boolean access$100(com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler, com.android.org.chromium.content.browser.ContentViewCore, java.lang.String)
    {
        com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler r0;
        com.android.org.chromium.content.browser.ContentViewCore r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler;

        r1 := @parameter1: com.android.org.chromium.content.browser.ContentViewCore;

        r2 := @parameter2: java.lang.String;

        $z0 = specialinvoke r0.<com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: boolean performAction(com.android.org.chromium.content.browser.ContentViewCore,java.lang.String)>(r1, r2);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: long RESULT_TIMEOUT> = 5000L;

        <com.android.org.chromium.content.browser.accessibility.JellyBeanAccessibilityInjector$CallbackHandler: java.lang.String JAVASCRIPT_ACTION_TEMPLATE> = "(function() {  retVal = false;  try {    retVal = %s;  } catch (e) {    retVal = false;  }  %s.onResult(%d, retVal);})()";

        return;
    }
}
