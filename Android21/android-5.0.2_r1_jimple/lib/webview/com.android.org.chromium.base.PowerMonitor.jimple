public class com.android.org.chromium.base.PowerMonitor extends java.lang.Object implements com.android.org.chromium.base.ApplicationStatus$ApplicationStateListener
{
    private static final long SUSPEND_DELAY_MS;
    private static com.android.org.chromium.base.PowerMonitor sInstance;
    private boolean mIsBatteryPower;
    private final android.os.Handler mHandler;
    private static final java.lang.Runnable sSuspendTask;

    public static void createForTests(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.base.PowerMonitor $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.android.org.chromium.base.PowerMonitor$LazyHolder: com.android.org.chromium.base.PowerMonitor access$200()>();

        <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance> = $r1;

        return;
    }

    public static void create(android.content.Context)
    {
        android.content.Context r0, r7;
        android.content.IntentFilter r1, $r6;
        android.content.Intent r2;
        com.android.org.chromium.base.PowerMonitor $r3, $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r7 = virtualinvoke r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance>;

        if $r3 != null goto label1;

        $r4 = staticinvoke <com.android.org.chromium.base.PowerMonitor$LazyHolder: com.android.org.chromium.base.PowerMonitor access$200()>();

        <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance> = $r4;

        $r5 = <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance>;

        staticinvoke <com.android.org.chromium.base.ApplicationStatus: void registerApplicationStateListener(com.android.org.chromium.base.ApplicationStatus$ApplicationStateListener)>($r5);

        $r6 = new android.content.IntentFilter;

        specialinvoke $r6.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.BATTERY_CHANGED");

        r1 = $r6;

        r2 = virtualinvoke r7.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(null, r1);

        staticinvoke <com.android.org.chromium.base.PowerMonitor: void onBatteryChargingChanged(android.content.Intent)>(r2);

     label1:
        return;
    }

    private void <init>()
    {
        com.android.org.chromium.base.PowerMonitor r0;
        android.os.Handler $r1;
        android.os.Looper $r2;

        r0 := @this: com.android.org.chromium.base.PowerMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        r0.<com.android.org.chromium.base.PowerMonitor: android.os.Handler mHandler> = $r1;

        return;
    }

    public static void onBatteryChargingChanged(android.content.Intent)
    {
        android.content.Intent r0;
        int i0;
        com.android.org.chromium.base.PowerMonitor $r1, $r2;
        boolean $z0;

        r0 := @parameter0: android.content.Intent;

        $r1 = <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance>;

        if $r1 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r0.<android.content.Intent: int getIntExtra(java.lang.String,int)>("plugged", -1);

        $r2 = <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance>;

        if i0 == 2 goto label2;

        if i0 == 1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r2.<com.android.org.chromium.base.PowerMonitor: boolean mIsBatteryPower> = $z0;

        staticinvoke <com.android.org.chromium.base.PowerMonitor: void nativeOnBatteryChargingChanged()>();

        return;
    }

    public void onApplicationStateChange(int)
    {
        com.android.org.chromium.base.PowerMonitor r0;
        int i0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;

        r0 := @this: com.android.org.chromium.base.PowerMonitor;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $r4 = r0.<com.android.org.chromium.base.PowerMonitor: android.os.Handler mHandler>;

        $r3 = <com.android.org.chromium.base.PowerMonitor: java.lang.Runnable sSuspendTask>;

        virtualinvoke $r4.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        staticinvoke <com.android.org.chromium.base.PowerMonitor: void nativeOnMainActivityResumed()>();

        goto label2;

     label1:
        if i0 != 2 goto label2;

        $r2 = r0.<com.android.org.chromium.base.PowerMonitor: android.os.Handler mHandler>;

        $r1 = <com.android.org.chromium.base.PowerMonitor: java.lang.Runnable sSuspendTask>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 60000L);

     label2:
        return;
    }

    private static boolean isBatteryPower()
    {
        com.android.org.chromium.base.PowerMonitor $r0;
        boolean $z0;

        $r0 = <com.android.org.chromium.base.PowerMonitor: com.android.org.chromium.base.PowerMonitor sInstance>;

        $z0 = $r0.<com.android.org.chromium.base.PowerMonitor: boolean mIsBatteryPower>;

        return $z0;
    }

    private static native void nativeOnBatteryChargingChanged();

    private static native void nativeOnMainActivitySuspended();

    private static native void nativeOnMainActivityResumed();

    void <init>(com.android.org.chromium.base.PowerMonitor$1)
    {
        com.android.org.chromium.base.PowerMonitor r0;
        com.android.org.chromium.base.PowerMonitor$1 r1;

        r0 := @this: com.android.org.chromium.base.PowerMonitor;

        r1 := @parameter0: com.android.org.chromium.base.PowerMonitor$1;

        specialinvoke r0.<com.android.org.chromium.base.PowerMonitor: void <init>()>();

        return;
    }

    static void access$100()
    {
        staticinvoke <com.android.org.chromium.base.PowerMonitor: void nativeOnMainActivitySuspended()>();

        return;
    }

    static void <clinit>()
    {
        com.android.org.chromium.base.PowerMonitor$1 $r0;

        <com.android.org.chromium.base.PowerMonitor: long SUSPEND_DELAY_MS> = 60000L;

        $r0 = new com.android.org.chromium.base.PowerMonitor$1;

        specialinvoke $r0.<com.android.org.chromium.base.PowerMonitor$1: void <init>()>();

        <com.android.org.chromium.base.PowerMonitor: java.lang.Runnable sSuspendTask> = $r0;

        return;
    }
}
