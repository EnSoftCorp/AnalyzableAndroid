public final class com.android.org.chromium.com.google.common.collect.Queues extends java.lang.Object
{

    private void <init>()
    {
        com.android.org.chromium.com.google.common.collect.Queues r0;

        r0 := @this: com.android.org.chromium.com.google.common.collect.Queues;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.concurrent.ArrayBlockingQueue newArrayBlockingQueue(int)
    {
        int i0;
        java.util.concurrent.ArrayBlockingQueue $r0;

        i0 := @parameter0: int;

        $r0 = new java.util.concurrent.ArrayBlockingQueue;

        specialinvoke $r0.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(i0);

        return $r0;
    }

    public static java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue()
    {
        java.util.concurrent.ConcurrentLinkedQueue $r0;

        $r0 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r0.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        return $r0;
    }

    public static java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.concurrent.ConcurrentLinkedQueue r1, $r2, $r3;
        boolean $z0;
        java.util.Collection $r4;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.concurrent.ConcurrentLinkedQueue;

        $r4 = staticinvoke <com.android.org.chromium.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: void <init>(java.util.Collection)>($r4);

        return $r3;

     label1:
        $r2 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r2.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r1 = $r2;

        staticinvoke <com.android.org.chromium.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue()
    {
        java.util.concurrent.LinkedBlockingQueue $r0;

        $r0 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r0.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        return $r0;
    }

    public static java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(int)
    {
        int i0;
        java.util.concurrent.LinkedBlockingQueue $r0;

        i0 := @parameter0: int;

        $r0 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r0.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(i0);

        return $r0;
    }

    public static java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.concurrent.LinkedBlockingQueue r1, $r2, $r3;
        boolean $z0;
        java.util.Collection $r4;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        $r4 = staticinvoke <com.android.org.chromium.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>(java.util.Collection)>($r4);

        return $r3;

     label1:
        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();

        r1 = $r2;

        staticinvoke <com.android.org.chromium.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue()
    {
        java.util.concurrent.PriorityBlockingQueue $r0;

        $r0 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r0.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        return $r0;
    }

    public static java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.concurrent.PriorityBlockingQueue r1, $r2, $r3;
        boolean $z0;
        java.util.Collection $r4;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.concurrent.PriorityBlockingQueue;

        $r4 = staticinvoke <com.android.org.chromium.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r3.<java.util.concurrent.PriorityBlockingQueue: void <init>(java.util.Collection)>($r4);

        return $r3;

     label1:
        $r2 = new java.util.concurrent.PriorityBlockingQueue;

        specialinvoke $r2.<java.util.concurrent.PriorityBlockingQueue: void <init>()>();

        r1 = $r2;

        staticinvoke <com.android.org.chromium.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.PriorityQueue newPriorityQueue()
    {
        java.util.PriorityQueue $r0;

        $r0 = new java.util.PriorityQueue;

        specialinvoke $r0.<java.util.PriorityQueue: void <init>()>();

        return $r0;
    }

    public static java.util.PriorityQueue newPriorityQueue(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.PriorityQueue r1, $r2, $r3;
        boolean $z0;
        java.util.Collection $r4;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 == 0 goto label1;

        $r3 = new java.util.PriorityQueue;

        $r4 = staticinvoke <com.android.org.chromium.com.google.common.collect.Collections2: java.util.Collection cast(java.lang.Iterable)>(r0);

        specialinvoke $r3.<java.util.PriorityQueue: void <init>(java.util.Collection)>($r4);

        return $r3;

     label1:
        $r2 = new java.util.PriorityQueue;

        specialinvoke $r2.<java.util.PriorityQueue: void <init>()>();

        r1 = $r2;

        staticinvoke <com.android.org.chromium.com.google.common.collect.Iterables: boolean addAll(java.util.Collection,java.lang.Iterable)>(r1, r0);

        return r1;
    }

    public static java.util.concurrent.SynchronousQueue newSynchronousQueue()
    {
        java.util.concurrent.SynchronousQueue $r0;

        $r0 = new java.util.concurrent.SynchronousQueue;

        specialinvoke $r0.<java.util.concurrent.SynchronousQueue: void <init>()>();

        return $r0;
    }

    public static int drain(java.util.concurrent.BlockingQueue, java.util.Collection, int, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        java.util.concurrent.BlockingQueue r0;
        java.util.Collection r1;
        int i0, i3, $i6, $i7;
        long l1, l2, $l4, $l5, $l8, $l9;
        java.util.concurrent.TimeUnit r2, $r5;
        java.lang.Object r3;

        r0 := @parameter0: java.util.concurrent.BlockingQueue;

        r1 := @parameter1: java.util.Collection;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r2 := @parameter4: java.util.concurrent.TimeUnit;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        $l5 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l1);

        l2 = $l4 + $l5;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $i6 = i0 - i3;

        $i7 = interfaceinvoke r0.<java.util.concurrent.BlockingQueue: int drainTo(java.util.Collection,int)>(r1, $i6);

        i3 = i3 + $i7;

        if i3 >= i0 goto label1;

        $l8 = staticinvoke <java.lang.System: long nanoTime()>();

        $l9 = l2 - $l8;

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        r3 = interfaceinvoke r0.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>($l9, $r5);

        if r3 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        i3 = i3 + 1;

        goto label1;

     label3:
        return i3;
    }

    public static int drainUninterruptibly(java.util.concurrent.BlockingQueue, java.util.Collection, int, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.BlockingQueue r0;
        java.util.Collection r1;
        int i0, i3, $i6, $i8;
        long l1, l2, $l4, $l5, $l7, $l9;
        java.util.concurrent.TimeUnit r2, $r8;
        boolean z0;
        java.lang.Object r3;
        java.lang.Throwable r5, $r9;
        java.lang.Thread $r7, $r11;
        java.lang.InterruptedException $r10;

        r0 := @parameter0: java.util.concurrent.BlockingQueue;

        r1 := @parameter1: java.util.Collection;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        r2 := @parameter4: java.util.concurrent.TimeUnit;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $l4 = staticinvoke <java.lang.System: long nanoTime()>();

        $l5 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l1);

        l2 = $l4 + $l5;

        i3 = 0;

        z0 = 0;

     label01:
        if i3 >= i0 goto label07;

        $i6 = i0 - i3;

        $i8 = interfaceinvoke r0.<java.util.concurrent.BlockingQueue: int drainTo(java.util.Collection,int)>(r1, $i6);

        i3 = i3 + $i8;

        if i3 >= i0 goto label01;

     label02:
        $l7 = staticinvoke <java.lang.System: long nanoTime()>();

        $l9 = l2 - $l7;

        $r8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        r3 = interfaceinvoke r0.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>($l9, $r8);

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        z0 = 1;

        goto label02;

     label05:
        if r3 != null goto label06;

        goto label07;

     label06:
        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r3);

        i3 = i3 + 1;

        goto label01;

     label07:
        if z0 == 0 goto label11;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        goto label11;

     label08:
        $r9 := @caughtexception;

        r5 = $r9;

     label09:
        if z0 == 0 goto label10;

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r11.<java.lang.Thread: void interrupt()>();

     label10:
        throw r5;

     label11:
        return i3;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }
}
