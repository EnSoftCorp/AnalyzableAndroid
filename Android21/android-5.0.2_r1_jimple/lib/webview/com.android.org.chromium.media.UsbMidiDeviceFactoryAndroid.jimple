class com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid extends java.lang.Object
{
    private android.hardware.usb.UsbManager mUsbManager;
    private android.content.BroadcastReceiver mReceiver;
    private final java.util.List mDevices;
    private java.util.Set mRequestedDevices;
    private long mNativePointer;
    private static final java.lang.String ACTION_USB_PERMISSION;

    void <init>(long)
    {
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid r0;
        long l0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.List mDevices> = $r1;

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: long mNativePointer> = l0;

        return;
    }

    static com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid create(long)
    {
        long l0;
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid $r0;

        l0 := @parameter0: long;

        $r0 = new com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        specialinvoke $r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: void <init>(long)>(l0);

        return $r0;
    }

    boolean enumerateDevices(android.content.Context)
    {
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid r0;
        android.content.Context r1;
        java.util.HashMap r2;
        android.app.PendingIntent r3;
        java.util.Iterator r4;
        android.hardware.usb.UsbDevice r5;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3;
        android.hardware.usb.UsbInterface r6;
        java.lang.Object $r7, $r18;
        android.hardware.usb.UsbManager $r8, $r9, $r20;
        android.content.Intent $r10;
        java.util.Collection $r11;
        java.util.HashSet $r12;
        java.util.Set $r13, $r19;
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid$1 $r14;
        android.content.IntentFilter $r15, r21;
        android.content.BroadcastReceiver $r17;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        r1 := @parameter0: android.content.Context;

        $r7 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("usb");

        $r8 = (android.hardware.usb.UsbManager) $r7;

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.hardware.usb.UsbManager mUsbManager> = $r8;

        $r9 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.hardware.usb.UsbManager mUsbManager>;

        r2 = virtualinvoke $r9.<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>();

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("com.android.org.chromium.media.USB_PERMISSION");

        r3 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r1, 0, $r10, 0);

        $r12 = new java.util.HashSet;

        specialinvoke $r12.<java.util.HashSet: void <init>()>();

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices> = $r12;

        $r11 = interfaceinvoke r2.<java.util.Map: java.util.Collection values()>();

        r4 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r18 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.usb.UsbDevice) $r18;

        z0 = 0;

        i0 = 0;

     label2:
        $i1 = virtualinvoke r5.<android.hardware.usb.UsbDevice: int getInterfaceCount()>();

        if i0 >= $i1 goto label4;

        if z0 != 0 goto label4;

        r6 = virtualinvoke r5.<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>(i0);

        $i2 = virtualinvoke r6.<android.hardware.usb.UsbInterface: int getInterfaceClass()>();

        if $i2 != 1 goto label3;

        $i3 = virtualinvoke r6.<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>();

        if $i3 != 3 goto label3;

        z0 = 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        if z0 == 0 goto label5;

        $r20 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.hardware.usb.UsbManager mUsbManager>;

        virtualinvoke $r20.<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>(r5, r3);

        $r19 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label5:
        goto label1;

     label6:
        $r13 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices>;

        $z2 = interfaceinvoke $r13.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label7;

        return 0;

     label7:
        $r15 = new android.content.IntentFilter;

        specialinvoke $r15.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.org.chromium.media.USB_PERMISSION");

        r21 = $r15;

        $r14 = new com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid$1;

        specialinvoke $r14.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid$1: void <init>(com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid)>(r0);

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.content.BroadcastReceiver mReceiver> = $r14;

        $r17 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r17, r21);

        return 1;
    }

    private void onRequestDone(android.content.Context, android.content.Intent)
    {
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid r0;
        android.content.Context r1;
        android.content.Intent r2;
        android.hardware.usb.UsbDevice r3;
        android.os.Parcelable $r4;
        java.util.Set $r5, $r6, $r7;
        boolean $z0, $z2, $z3;
        android.content.BroadcastReceiver $r8;
        long $l0, $l2;
        byte $b1;
        java.util.List $r9, $r13;
        java.lang.Object[] $r10;
        android.hardware.usb.UsbManager $r11;
        com.android.org.chromium.media.UsbMidiDeviceAndroid $r12;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r4 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("device");

        r3 = (android.hardware.usb.UsbDevice) $r4;

        $r5 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices>;

        interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r3);

        $z2 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("permission", 0);

        if $z2 != 0 goto label2;

        r3 = null;

     label2:
        if r3 == null goto label3;

        $r13 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.List mDevices>;

        $r12 = new com.android.org.chromium.media.UsbMidiDeviceAndroid;

        $r11 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.hardware.usb.UsbManager mUsbManager>;

        specialinvoke $r12.<com.android.org.chromium.media.UsbMidiDeviceAndroid: void <init>(android.hardware.usb.UsbManager,android.hardware.usb.UsbDevice)>($r11, r3);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

     label3:
        $r7 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.Set mRequestedDevices>;

        $z3 = interfaceinvoke $r7.<java.util.Set: boolean isEmpty()>();

        if $z3 == 0 goto label4;

        $r8 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: android.content.BroadcastReceiver mReceiver>;

        virtualinvoke r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r8);

        $l0 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: long mNativePointer>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label4;

        $l2 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: long mNativePointer>;

        $r9 = r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.util.List mDevices>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object[] toArray()>();

        staticinvoke <com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: void nativeOnUsbMidiDeviceRequestDone(long,java.lang.Object[])>($l2, $r10);

     label4:
        return;
    }

    void close()
    {
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid r0;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: long mNativePointer> = 0L;

        return;
    }

    private static native void nativeOnUsbMidiDeviceRequestDone(long, java.lang.Object[]);

    static void access$000(com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid, android.content.Context, android.content.Intent)
    {
        com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid r0;
        android.content.Context r1;
        android.content.Intent r2;

        r0 := @parameter0: com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: android.content.Intent;

        specialinvoke r0.<com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: void onRequestDone(android.content.Context,android.content.Intent)>(r1, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.media.UsbMidiDeviceFactoryAndroid: java.lang.String ACTION_USB_PERMISSION> = "com.android.org.chromium.media.USB_PERMISSION";

        return;
    }
}
