class com.android.org.chromium.media.UsbMidiDeviceAndroid$1 extends java.lang.Thread
{
    final java.util.Map val$bufferForEndpoints;
    final com.android.org.chromium.media.UsbMidiDeviceAndroid this$0;

    void <init>(com.android.org.chromium.media.UsbMidiDeviceAndroid, java.util.Map)
    {
        com.android.org.chromium.media.UsbMidiDeviceAndroid$1 r0;
        com.android.org.chromium.media.UsbMidiDeviceAndroid r1;
        java.util.Map r2;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceAndroid$1;

        r1 := @parameter0: com.android.org.chromium.media.UsbMidiDeviceAndroid;

        r2 := @parameter1: java.util.Map;

        r0.<com.android.org.chromium.media.UsbMidiDeviceAndroid$1: com.android.org.chromium.media.UsbMidiDeviceAndroid this$0> = r1;

        r0.<com.android.org.chromium.media.UsbMidiDeviceAndroid$1: java.util.Map val$bufferForEndpoints> = r2;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.org.chromium.media.UsbMidiDeviceAndroid$1 r0;
        android.hardware.usb.UsbRequest r1;
        android.hardware.usb.UsbEndpoint r2;
        java.nio.ByteBuffer r3;
        int i0, $i1, $i2, $i3;
        byte[] r4;
        com.android.org.chromium.media.UsbMidiDeviceAndroid $r5, $r11;
        android.hardware.usb.UsbDeviceConnection $r6;
        java.util.Map $r7;
        java.lang.Object $r8;

        r0 := @this: com.android.org.chromium.media.UsbMidiDeviceAndroid$1;

     label1:
        $r5 = r0.<com.android.org.chromium.media.UsbMidiDeviceAndroid$1: com.android.org.chromium.media.UsbMidiDeviceAndroid this$0>;

        $r6 = staticinvoke <com.android.org.chromium.media.UsbMidiDeviceAndroid: android.hardware.usb.UsbDeviceConnection access$000(com.android.org.chromium.media.UsbMidiDeviceAndroid)>($r5);

        r1 = virtualinvoke $r6.<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>();

        if r1 != null goto label2;

        goto label5;

     label2:
        r2 = virtualinvoke r1.<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>();

        $i1 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getDirection()>();

        if $i1 == 128 goto label3;

        goto label1;

     label3:
        $r7 = r0.<com.android.org.chromium.media.UsbMidiDeviceAndroid$1: java.util.Map val$bufferForEndpoints>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.nio.ByteBuffer) $r8;

        i0 = staticinvoke <com.android.org.chromium.media.UsbMidiDeviceAndroid: int access$100(java.nio.ByteBuffer)>(r3);

        if i0 <= 0 goto label4;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        r4 = newarray (byte)[i0];

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r4, 0, i0);

        $r11 = r0.<com.android.org.chromium.media.UsbMidiDeviceAndroid$1: com.android.org.chromium.media.UsbMidiDeviceAndroid this$0>;

        $i3 = virtualinvoke r2.<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>();

        staticinvoke <com.android.org.chromium.media.UsbMidiDeviceAndroid: void access$200(com.android.org.chromium.media.UsbMidiDeviceAndroid,int,byte[])>($r11, $i3, r4);

     label4:
        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $i2 = virtualinvoke r3.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke r1.<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>(r3, $i2);

        goto label1;

     label5:
        return;
    }
}
