final class com.android.org.chromium.content.browser.ChildProcessLauncher$3 extends com.android.org.chromium.content.common.IChildProcessCallback$Stub
{
    static final boolean $assertionsDisabled;
    final int val$callbackType;
    final int val$childProcessId;

    void <init>(int, int)
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher$3 r0;
        int i0, i1;

        r0 := @this: com.android.org.chromium.content.browser.ChildProcessLauncher$3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$callbackType> = i0;

        r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$childProcessId> = i1;

        specialinvoke r0.<com.android.org.chromium.content.common.IChildProcessCallback$Stub: void <init>()>();

        return;
    }

    public void establishSurfacePeer(int, android.view.Surface, int, int)
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher$3 r0;
        int i0, i1, i2, $i3;
        android.view.Surface r1;

        r0 := @this: com.android.org.chromium.content.browser.ChildProcessLauncher$3;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Surface;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$callbackType>;

        if $i3 == 1 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Illegal callback for non-GPU process.");

        return;

     label1:
        staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: void access$400(int,android.view.Surface,int,int)>(i0, r1, i1, i2);

        return;
    }

    public com.android.org.chromium.content.common.SurfaceWrapper getViewSurface(int)
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher$3 r0;
        int i0, $i1;
        android.view.Surface r1;
        java.util.Map $r2;
        java.lang.Integer $r3;
        java.lang.Object $r4;
        boolean $z0, $z1;
        com.android.org.chromium.content.common.SurfaceWrapper $r5;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.content.browser.ChildProcessLauncher$3;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$callbackType>;

        if $i1 == 1 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Illegal callback for non-GPU process.");

        return null;

     label1:
        $r2 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map access$500()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r1 = (android.view.Surface) $r4;

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Invalid surfaceId.");

        return null;

     label2:
        $z0 = <com.android.org.chromium.content.browser.ChildProcessLauncher$3: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r1.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        $r5 = new com.android.org.chromium.content.common.SurfaceWrapper;

        specialinvoke $r5.<com.android.org.chromium.content.common.SurfaceWrapper: void <init>(android.view.Surface)>(r1);

        return $r5;
    }

    public com.android.org.chromium.content.common.SurfaceWrapper getSurfaceTextureSurface(int, int)
    {
        com.android.org.chromium.content.browser.ChildProcessLauncher$3 r0;
        int i0, i1, $i2, $i3;
        android.util.Pair r1, $r3;
        android.view.Surface r2;
        java.lang.Integer $r4, $r5;
        java.util.Map $r6;
        java.lang.Object $r7;
        boolean $z0, $z1;
        com.android.org.chromium.content.common.SurfaceWrapper $r8;
        java.lang.AssertionError $r9;

        r0 := @this: com.android.org.chromium.content.browser.ChildProcessLauncher$3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$callbackType>;

        if $i2 == 2 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Illegal callback for non-renderer process.");

        return null;

     label1:
        $i3 = r0.<com.android.org.chromium.content.browser.ChildProcessLauncher$3: int val$childProcessId>;

        if i1 == $i3 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Illegal secondaryId for renderer process.");

        return null;

     label2:
        $r3 = new android.util.Pair;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        specialinvoke $r3.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r5);

        r1 = $r3;

        $r6 = staticinvoke <com.android.org.chromium.content.browser.ChildProcessLauncher: java.util.Map access$600()>();

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r2 = (android.view.Surface) $r7;

        if r2 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ChildProcessLauncher", "Invalid Id for surface texture.");

        return null;

     label3:
        $z0 = <com.android.org.chromium.content.browser.ChildProcessLauncher$3: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r2.<android.view.Surface: boolean isValid()>();

        if $z1 != 0 goto label4;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label4:
        $r8 = new com.android.org.chromium.content.common.SurfaceWrapper;

        specialinvoke $r8.<com.android.org.chromium.content.common.SurfaceWrapper: void <init>(android.view.Surface)>(r2);

        return $r8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/content/browser/ChildProcessLauncher";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.ChildProcessLauncher$3: boolean $assertionsDisabled> = $z1;

        return;
    }
}
