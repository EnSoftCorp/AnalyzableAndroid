class com.android.org.chromium.net.AndroidNetworkLibrary extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        com.android.org.chromium.net.AndroidNetworkLibrary r0;

        r0 := @this: com.android.org.chromium.net.AndroidNetworkLibrary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean storeKeyPair(android.content.Context, byte[], byte[])
    {
        android.content.Context r0;
        byte[] r1, r2;
        android.content.Intent r3;
        android.content.ActivityNotFoundException $r7, r12;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: byte[];

        r2 := @parameter2: byte[];

     label1:
        r3 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("PKEY", r2);

        virtualinvoke r3.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("KEY", r1);

        virtualinvoke r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r3);

     label2:
        return 1;

     label3:
        $r7 := @caughtexception;

        r12 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not store key pair: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r11);

        return 0;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public static boolean storeCertificate(android.content.Context, int, byte[])
    {
        android.content.Context r0;
        int i0;
        byte[] r1;
        android.content.Intent r2;
        java.lang.StringBuilder $r6, $r7, $r8, $r11, $r12, $r14;
        java.lang.String $r9, $r13;
        android.content.ActivityNotFoundException $r10, r15;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 := @parameter2: byte[];

     label1:
        r2 = staticinvoke <android.security.KeyChain: android.content.Intent createInstallIntent()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label2:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("CERT", r1);

        goto label6;

     label3:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>("PKCS12", r1);

        goto label6;

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid certificate type: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r9);

     label5:
        return 0;

     label6:
        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r2);

     label7:
        return 1;

     label8:
        $r10 := @caughtexception;

        r15 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not store crypto file: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r13);

        return 0;

        catch android.content.ActivityNotFoundException from label1 to label5 with label8;
        catch android.content.ActivityNotFoundException from label6 to label7 with label8;
    }

    public static java.lang.String getMimeTypeFromExtension(java.lang.String)
    {
        java.lang.String r0, $r4, $r5;
        java.lang.StringBuilder $r1, $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("foo.");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>($r4);

        return $r5;
    }

    public static boolean haveOnlyLoopbackAddresses()
    {
        java.lang.Exception r0, $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r1;
        java.net.SocketException $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        java.util.Enumeration r8;
        java.net.NetworkInterface r9;

     label01:
        r8 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

        if r8 != null goto label03;

     label02:
        return 0;

     label03:
        goto label05;

     label04:
        $r3 := @caughtexception;

        r0 = $r3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not get network interfaces: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r7);

        return 0;

     label05:
        $z0 = interfaceinvoke r8.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

        $r1 = interfaceinvoke r8.<java.util.Enumeration: java.lang.Object nextElement()>();

        r9 = (java.net.NetworkInterface) $r1;

     label06:
        $z1 = virtualinvoke r9.<java.net.NetworkInterface: boolean isUp()>();

        if $z1 == 0 goto label08;

        $z2 = virtualinvoke r9.<java.net.NetworkInterface: boolean isLoopback()>();

        if $z2 != 0 goto label08;

     label07:
        return 0;

     label08:
        goto label10;

     label09:
        $r2 := @caughtexception;

        goto label05;

     label10:
        goto label05;

     label11:
        return 1;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.net.SocketException from label06 to label07 with label09;
    }

    public static java.lang.String getNetworkList()
    {
        java.net.SocketException r0, $r16, $r20;
        java.net.NetworkInterface r1;
        java.util.Iterator r2;
        java.net.InterfaceAddress r3;
        java.net.InetAddress r4;
        java.lang.StringBuilder r5, $r7, $r12, $r15, $r18, $r19, r22;
        java.lang.String r6, $r8, $r13, $r14, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r9, $r11;
        java.util.List $r10;
        short $s0;
        int $i1, $i2;
        java.util.Enumeration r21;

     label01:
        r21 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

        if r21 != null goto label03;

     label02:
        return "";

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

        r0 = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get network interfaces: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AndroidNetworkLibrary", $r17);

        return "";

     label05:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r22 = $r7;

     label06:
        $z0 = interfaceinvoke r21.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label17;

        $r9 = interfaceinvoke r21.<java.util.Enumeration: java.lang.Object nextElement()>();

        r1 = (java.net.NetworkInterface) $r9;

     label07:
        $z1 = virtualinvoke r1.<java.net.NetworkInterface: boolean isUp()>();

        if $z1 == 0 goto label08;

        $z2 = virtualinvoke r1.<java.net.NetworkInterface: boolean isLoopback()>();

        if $z2 == 0 goto label09;

     label08:
        goto label06;

     label09:
        $r10 = virtualinvoke r1.<java.net.NetworkInterface: java.util.List getInterfaceAddresses()>();

        r2 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.net.InterfaceAddress) $r11;

        r4 = virtualinvoke r3.<java.net.InterfaceAddress: java.net.InetAddress getAddress()>();

        $z4 = virtualinvoke r4.<java.net.InetAddress: boolean isLoopbackAddress()>();

        if $z4 == 0 goto label11;

        goto label10;

     label11:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r5 = $r12;

        $r13 = virtualinvoke r1.<java.net.NetworkInterface: java.lang.String getName()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        r6 = virtualinvoke r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z5 = r4 instanceof java.net.Inet6Address;

        if $z5 == 0 goto label12;

        $z6 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z6 == 0 goto label12;

        $i2 = virtualinvoke r6.<java.lang.String: int lastIndexOf(java.lang.String)>("%");

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label12:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $s0 = virtualinvoke r3.<java.net.InterfaceAddress: short getNetworkPrefixLength()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s0);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $i1 = virtualinvoke r22.<java.lang.StringBuilder: int length()>();

        if $i1 == 0 goto label13;

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label13:
        $r14 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        goto label10;

     label14:
        goto label16;

     label15:
        $r20 := @caughtexception;

        goto label06;

     label16:
        goto label06;

     label17:
        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;

        catch java.net.SocketException from label01 to label02 with label04;
        catch java.net.SocketException from label07 to label08 with label15;
        catch java.net.SocketException from label09 to label14 with label15;
    }

    public static com.android.org.chromium.net.AndroidCertVerifyResult verifyServerCertificates(byte[][], java.lang.String, java.lang.String)
    {
        byte[][] r0;
        java.lang.String r1, r2;
        com.android.org.chromium.net.AndroidCertVerifyResult $r4, $r6, $r8;
        java.security.KeyStoreException $r5;
        java.security.NoSuchAlgorithmException $r7;

        r0 := @parameter0: byte[][];

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

     label1:
        $r4 = staticinvoke <com.android.org.chromium.net.X509Util: com.android.org.chromium.net.AndroidCertVerifyResult verifyServerCertificates(byte[][],java.lang.String,java.lang.String)>(r0, r1, r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.android.org.chromium.net.AndroidCertVerifyResult;

        specialinvoke $r6.<com.android.org.chromium.net.AndroidCertVerifyResult: void <init>(int)>(-1);

        return $r6;

     label4:
        $r7 := @caughtexception;

        $r8 = new com.android.org.chromium.net.AndroidCertVerifyResult;

        specialinvoke $r8.<com.android.org.chromium.net.AndroidCertVerifyResult: void <init>(int)>(-1);

        return $r8;

        catch java.security.KeyStoreException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    public static void addTestRootCertificate(byte[]) throws java.security.cert.CertificateException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException
    {
        byte[] r0;

        r0 := @parameter0: byte[];

        staticinvoke <com.android.org.chromium.net.X509Util: void addTestRootCertificate(byte[])>(r0);

        return;
    }

    public static void clearTestRootCertificates() throws java.security.NoSuchAlgorithmException, java.security.cert.CertificateException, java.security.KeyStoreException
    {
        staticinvoke <com.android.org.chromium.net.X509Util: void clearTestRootCertificates()>();

        return;
    }

    private static java.lang.String getNetworkCountryIso(android.content.Context)
    {
        android.content.Context r0;
        android.telephony.TelephonyManager r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r2;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>();

        return $r3;

     label1:
        return "";
    }

    private static java.lang.String getNetworkOperator(android.content.Context)
    {
        android.content.Context r0;
        android.telephony.TelephonyManager r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r2;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>();

        return $r3;

     label1:
        return "";
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.net.AndroidNetworkLibrary: java.lang.String TAG> = "AndroidNetworkLibrary";

        return;
    }
}
