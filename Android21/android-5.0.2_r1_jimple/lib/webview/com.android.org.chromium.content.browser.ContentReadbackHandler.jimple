public abstract class com.android.org.chromium.content.browser.ContentReadbackHandler extends java.lang.Object
{
    private int mNextReadbackId;
    private android.util.SparseArray mGetBitmapRequests;
    private long mNativeContentReadbackHandler;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: int mNextReadbackId> = 1;

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: android.util.SparseArray mGetBitmapRequests> = $r1;

        return;
    }

    public void initNativeContentReadbackHandler()
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        long $l0;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        $l0 = specialinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long nativeInit()>();

        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler> = $l0;

        return;
    }

    public void destroy()
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        $l0 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler>;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: void nativeDestroy(long)>($l2);

     label1:
        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler> = 0L;

        return;
    }

    private void notifyGetBitmapFinished(int, boolean, android.graphics.Bitmap)
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        int i0;
        boolean z0, $z1;
        android.graphics.Bitmap r1;
        com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback r2;
        android.util.SparseArray $r3, $r10;
        java.lang.Object $r4;
        java.lang.AssertionError $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: android.graphics.Bitmap;

        $r3 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: android.util.SparseArray mGetBitmapRequests>;

        $r4 = virtualinvoke $r3.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback) $r4;

        if r2 == null goto label1;

        $r10 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: android.util.SparseArray mGetBitmapRequests>;

        virtualinvoke $r10.<android.util.SparseArray: void delete(int)>(i0);

        interfaceinvoke r2.<com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback: void onFinishGetBitmap(boolean,android.graphics.Bitmap)>(z0, r1);

        goto label2;

     label1:
        $z1 = <com.android.org.chromium.content.browser.ContentReadbackHandler: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r5 = new java.lang.AssertionError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Readback finished for unregistered Id: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r5;

     label2:
        return;
    }

    public void getContentBitmapAsync(float, android.graphics.Rect, com.android.org.chromium.content.browser.ContentViewCore, com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback)
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        float f0, $f1, $f2, $f3, $f4;
        android.graphics.Rect r1;
        com.android.org.chromium.content.browser.ContentViewCore r2;
        com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback r3;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7;
        boolean $z0;
        android.util.SparseArray $r4;
        long $l5;
        android.graphics.Bitmap$Config $r5;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: android.graphics.Rect;

        r2 := @parameter2: com.android.org.chromium.content.browser.ContentViewCore;

        r3 := @parameter3: com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: boolean readyForReadback()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r3.<com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback: void onFinishGetBitmap(boolean,android.graphics.Bitmap)>(0, null);

        return;

     label1:
        staticinvoke <com.android.org.chromium.base.ThreadUtils: void assertOnUiThread()>();

        $i1 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: int mNextReadbackId>;

        $i2 = $i1 + 1;

        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: int mNextReadbackId> = $i2;

        i0 = $i1;

        $r4 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: android.util.SparseArray mGetBitmapRequests>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r3);

        $l5 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler>;

        $r5 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $i3 = r1.<android.graphics.Rect: int top>;

        $f1 = (float) $i3;

        $i4 = r1.<android.graphics.Rect: int left>;

        $f2 = (float) $i4;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f3 = (float) $i6;

        $i7 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f4 = (float) $i7;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: void nativeGetContentBitmap(long,int,float,android.graphics.Bitmap$Config,float,float,float,float,java.lang.Object)>($l5, i0, f0, $r5, $f1, $f2, $f3, $f4, r2);

        return;
    }

    public void getCompositorBitmapAsync(com.android.org.chromium.ui.base.WindowAndroid, com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback)
    {
        com.android.org.chromium.content.browser.ContentReadbackHandler r0;
        com.android.org.chromium.ui.base.WindowAndroid r1;
        com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback r2;
        int i0, $i1, $i2;
        boolean $z0;
        android.util.SparseArray $r3;
        long $l3, $l4;

        r0 := @this: com.android.org.chromium.content.browser.ContentReadbackHandler;

        r1 := @parameter0: com.android.org.chromium.ui.base.WindowAndroid;

        r2 := @parameter1: com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: boolean readyForReadback()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r2.<com.android.org.chromium.content.browser.ContentReadbackHandler$GetBitmapCallback: void onFinishGetBitmap(boolean,android.graphics.Bitmap)>(0, null);

        return;

     label1:
        staticinvoke <com.android.org.chromium.base.ThreadUtils: void assertOnUiThread()>();

        $i1 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: int mNextReadbackId>;

        $i2 = $i1 + 1;

        r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: int mNextReadbackId> = $i2;

        i0 = $i1;

        $r3 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: android.util.SparseArray mGetBitmapRequests>;

        virtualinvoke $r3.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r2);

        $l3 = r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: long mNativeContentReadbackHandler>;

        $l4 = virtualinvoke r1.<com.android.org.chromium.ui.base.WindowAndroid: long getNativePointer()>();

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentReadbackHandler: void nativeGetCompositorBitmap(long,int,long)>($l3, i0, $l4);

        return;
    }

    protected abstract boolean readyForReadback();

    private native long nativeInit();

    private native void nativeDestroy(long);

    private native void nativeGetContentBitmap(long, int, float, android.graphics.Bitmap$Config, float, float, float, float, java.lang.Object);

    private native void nativeGetCompositorBitmap(long, int, long);

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/content/browser/ContentReadbackHandler";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.ContentReadbackHandler: boolean $assertionsDisabled> = $z1;

        return;
    }
}
