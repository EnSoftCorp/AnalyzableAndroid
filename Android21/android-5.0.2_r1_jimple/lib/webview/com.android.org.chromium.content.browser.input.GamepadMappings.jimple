class com.android.org.chromium.content.browser.input.GamepadMappings extends java.lang.Object
{
    private static final java.lang.String NVIDIA_SHIELD_DEVICE_NAME_PREFIX;
    private static final java.lang.String MICROSOFT_XBOX_PAD_DEVICE_NAME;
    private static final java.lang.String PS3_SIXAXIS_DEVICE_NAME;
    private static final java.lang.String SAMSUNG_EI_GP20_DEVICE_NAME;

    void <init>()
    {
        com.android.org.chromium.content.browser.input.GamepadMappings r0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadMappings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean mapToStandardGamepad(float[], float[], float[], float[], java.lang.String)
    {
        float[] r0, r1, r2, r3;
        java.lang.String r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        r4 := @parameter4: java.lang.String;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("NVIDIA Corporation NVIDIA Controller");

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapShieldGamepad(float[],float[],float[],float[])>(r1, r3, r0, r2);

        return 1;

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Microsoft X-Box 360 pad");

        if $z1 == 0 goto label2;

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapXBox360Gamepad(float[],float[],float[],float[])>(r1, r3, r0, r2);

        return 1;

     label2:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Sony PLAYSTATION(R)3 Controller");

        if $z2 == 0 goto label3;

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapPS3SixAxisGamepad(float[],float[],float[],float[])>(r1, r3, r0, r2);

        return 1;

     label3:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("Samsung Game Pad EI-GP20");

        if $z3 == 0 goto label4;

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapSamsungEIGP20Gamepad(float[],float[],float[],float[])>(r1, r3, r0, r2);

        return 1;

     label4:
        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapUnknownGamepad(float[],float[],float[],float[])>(r1, r3, r0, r2);

        return 0;
    }

    private static void mapCommonXYABButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, f2, f3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[96];

        f1 = r1[97];

        f2 = r1[99];

        f3 = r1[100];

        r0[0] = f0;

        r0[1] = f1;

        r0[2] = f2;

        r0[3] = f3;

        return;
    }

    private static void mapCommonStartSelectMetaButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, f2;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[108];

        f1 = r1[109];

        f2 = r1[110];

        r0[9] = f0;

        r0[8] = f1;

        r0[16] = f2;

        return;
    }

    private static void mapCommonThumbstickButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[106];

        f1 = r1[107];

        r0[10] = f0;

        r0[11] = f1;

        return;
    }

    private static void mapCommonTriggerButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[102];

        f1 = r1[103];

        r0[6] = f0;

        r0[7] = f1;

        return;
    }

    private static void mapCommonDpadButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, f2, f3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[20];

        f1 = r1[19];

        f2 = r1[21];

        f3 = r1[22];

        r0[13] = f0;

        r0[12] = f1;

        r0[14] = f2;

        r0[15] = f3;

        return;
    }

    private static void mapXYAxes(float[], float[])
    {
        float[] r0, r1;
        float $f0, $f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $f0 = r1[0];

        r0[0] = $f0;

        $f1 = r1[1];

        r0[1] = $f1;

        return;
    }

    private static void mapRXAndRYAxesToRightStick(float[], float[])
    {
        float[] r0, r1;
        float $f0, $f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $f0 = r1[12];

        r0[2] = $f0;

        $f1 = r1[13];

        r0[3] = $f1;

        return;
    }

    private static void mapZAndRZAxesToRightStick(float[], float[])
    {
        float[] r0, r1;
        float $f0, $f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $f0 = r1[11];

        r0[2] = $f0;

        $f1 = r1[14];

        r0[3] = $f1;

        return;
    }

    private static void mapTriggerAxexToShoulderButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[17];

        f1 = r1[18];

        r0[4] = f0;

        r0[5] = f1;

        return;
    }

    private static float negativeAxisValueAsButton(float)
    {
        float f0, $f1;
        byte $b0;

        f0 := @parameter0: float;

        $b0 = f0 cmpg -0.5F;

        if $b0 >= 0 goto label1;

        $f1 = 1.0F;

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        return $f1;
    }

    private static float positiveAxisValueAsButton(float)
    {
        float f0, $f1;
        byte $b0;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.5F;

        if $b0 <= 0 goto label1;

        $f1 = 1.0F;

        goto label2;

     label1:
        $f1 = 0.0F;

     label2:
        return $f1;
    }

    private static void mapHatAxisToDpadButtons(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = r1[15];

        f1 = r1[16];

        $f2 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: float negativeAxisValueAsButton(float)>(f0);

        r0[14] = $f2;

        $f3 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: float positiveAxisValueAsButton(float)>(f0);

        r0[15] = $f3;

        $f4 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: float negativeAxisValueAsButton(float)>(f1);

        r0[12] = $f4;

        $f5 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: float positiveAxisValueAsButton(float)>(f1);

        r0[13] = $f5;

        return;
    }

    private static void mapShieldGamepad(float[], float[], float[], float[])
    {
        float[] r0, r1, r2, r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonXYABButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonTriggerButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonThumbstickButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonStartSelectMetaButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapTriggerAxexToShoulderButtons(float[],float[])>(r0, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapHatAxisToDpadButtons(float[],float[])>(r0, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapXYAxes(float[],float[])>(r2, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapZAndRZAxesToRightStick(float[],float[])>(r2, r3);

        return;
    }

    private static void mapXBox360Gamepad(float[], float[], float[], float[])
    {
        float[] r0, r1, r2, r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapShieldGamepad(float[],float[],float[],float[])>(r0, r1, r2, r3);

        return;
    }

    private static void mapPS3SixAxisGamepad(float[], float[], float[], float[])
    {
        float[] r0, r1, r2, r3;
        float f0, f1, f2, f3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        f0 = r1[96];

        f1 = r1[97];

        f2 = r1[99];

        f3 = r1[100];

        r0[0] = f2;

        r0[1] = f3;

        r0[2] = f0;

        r0[3] = f1;

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonTriggerButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonThumbstickButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonDpadButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonStartSelectMetaButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapTriggerAxexToShoulderButtons(float[],float[])>(r0, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapXYAxes(float[],float[])>(r2, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapZAndRZAxesToRightStick(float[],float[])>(r2, r3);

        return;
    }

    private static void mapSamsungEIGP20Gamepad(float[], float[], float[], float[])
    {
        float[] r0, r1, r2, r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonXYABButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonTriggerButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonThumbstickButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonStartSelectMetaButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapHatAxisToDpadButtons(float[],float[])>(r0, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapXYAxes(float[],float[])>(r2, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapRXAndRYAxesToRightStick(float[],float[])>(r2, r3);

        return;
    }

    private static void mapUnknownGamepad(float[], float[], float[], float[])
    {
        float[] r0, r1, r2, r3;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        r2 := @parameter2: float[];

        r3 := @parameter3: float[];

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonXYABButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonTriggerButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonThumbstickButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonStartSelectMetaButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapTriggerAxexToShoulderButtons(float[],float[])>(r0, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapCommonDpadButtons(float[],float[])>(r0, r1);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapXYAxes(float[],float[])>(r2, r3);

        staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: void mapRXAndRYAxesToRightStick(float[],float[])>(r2, r3);

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.input.GamepadMappings: java.lang.String SAMSUNG_EI_GP20_DEVICE_NAME> = "Samsung Game Pad EI-GP20";

        <com.android.org.chromium.content.browser.input.GamepadMappings: java.lang.String PS3_SIXAXIS_DEVICE_NAME> = "Sony PLAYSTATION(R)3 Controller";

        <com.android.org.chromium.content.browser.input.GamepadMappings: java.lang.String MICROSOFT_XBOX_PAD_DEVICE_NAME> = "Microsoft X-Box 360 pad";

        <com.android.org.chromium.content.browser.input.GamepadMappings: java.lang.String NVIDIA_SHIELD_DEVICE_NAME_PREFIX> = "NVIDIA Corporation NVIDIA Controller";

        return;
    }
}
