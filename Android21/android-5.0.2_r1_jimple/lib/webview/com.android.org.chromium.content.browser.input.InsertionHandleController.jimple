public abstract class com.android.org.chromium.content.browser.input.InsertionHandleController extends java.lang.Object implements com.android.org.chromium.content.browser.input.CursorController
{
    private com.android.org.chromium.content.browser.input.HandleView mHandle;
    private final android.view.View mParent;
    private boolean mIsShowing;
    private boolean mAllowAutomaticShowing;
    private final android.content.Context mContext;
    private final com.android.org.chromium.content.browser.PositionObserver mPositionObserver;

    public void <init>(android.view.View, com.android.org.chromium.content.browser.PositionObserver)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        android.view.View r1;
        com.android.org.chromium.content.browser.PositionObserver r2;
        android.content.Context $r3;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: com.android.org.chromium.content.browser.PositionObserver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.view.View mParent> = r1;

        $r3 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.content.Context mContext> = $r3;

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.PositionObserver mPositionObserver> = r2;

        return;
    }

    public void allowAutomaticShowing()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mAllowAutomaticShowing> = 1;

        return;
    }

    public void hideAndDisallowAutomaticShowing()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void hide()>();

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mAllowAutomaticShowing> = 0;

        return;
    }

    public void showHandle()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        specialinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void createHandleIfNeeded()>();

        specialinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void showHandleIfNeeded()>();

        return;
    }

    void showPastePopup()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean $z0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void showPastePopupWindow()>();

     label1:
        return;
    }

    public void showHandleWithPastePopup()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void showHandle()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void showPastePopup()>();

        return;
    }

    public boolean isDragging()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        $z0 = virtualinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: boolean isDragging()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void onCursorPositionChanged()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mAllowAutomaticShowing>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void showHandle()>();

     label1:
        return;
    }

    public void setHandlePosition(float, float)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        float f0, f1;
        int $i0, $i1;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        $i1 = (int) f0;

        $i0 = (int) f1;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void positionAt(int,int)>($i1, $i0);

        return;
    }

    public void beginHandleFadeIn()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void beginFadeIn()>();

        return;
    }

    public void setHandleVisibility(int)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        int i0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void setVisibility(int)>(i0);

        return;
    }

    int getHandleX()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: int getAdjustedPositionX()>();

        return $i0;
    }

    int getHandleY()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        $i0 = virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: int getAdjustedPositionY()>();

        return $i0;
    }

    public com.android.org.chromium.content.browser.input.HandleView getHandleViewForTest()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        return $r1;
    }

    public void onTouchModeChanged(boolean)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void hide()>();

     label1:
        return;
    }

    public void hide()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean $z0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing>;

        if $z0 == 0 goto label2;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: void hide()>();

     label1:
        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing> = 0;

     label2:
        return;
    }

    public boolean isShowing()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing>;

        return $z0;
    }

    public void beforeStartUpdatingPosition(com.android.org.chromium.content.browser.input.HandleView)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        r1 := @parameter0: com.android.org.chromium.content.browser.input.HandleView;

        return;
    }

    public void updatePosition(com.android.org.chromium.content.browser.input.HandleView, int, int)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView r1;
        int i0, i1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        r1 := @parameter0: com.android.org.chromium.content.browser.input.HandleView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void setCursorPosition(int,int)>(i0, i1);

        return;
    }

    protected abstract void setCursorPosition(int, int);

    protected abstract void paste();

    protected abstract int getLineHeight();

    public void onDetached()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        return;
    }

    boolean canPaste()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.content.ClipboardManager $r3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r3 = (android.content.ClipboardManager) $r2;

        $z0 = virtualinvoke $r3.<android.content.ClipboardManager: boolean hasPrimaryClip()>();

        return $z0;
    }

    private void createHandleIfNeeded()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1, $r2;
        com.android.org.chromium.content.browser.PositionObserver $r3;
        android.view.View $r4;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        if $r1 != null goto label1;

        $r2 = new com.android.org.chromium.content.browser.input.HandleView;

        $r4 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.view.View mParent>;

        $r3 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.PositionObserver mPositionObserver>;

        specialinvoke $r2.<com.android.org.chromium.content.browser.input.HandleView: void <init>(com.android.org.chromium.content.browser.input.CursorController,int,android.view.View,com.android.org.chromium.content.browser.PositionObserver)>(r0, 1, $r4, $r3);

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle> = $r2;

     label1:
        return;
    }

    private void showHandleIfNeeded()
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        boolean $z0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $z0 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing>;

        if $z0 != 0 goto label1;

        r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: boolean mIsShowing> = 1;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.input.HandleView: void show()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: void setHandleVisibility(int)>(0);

     label1:
        return;
    }

    static android.content.Context access$000(com.android.org.chromium.content.browser.input.InsertionHandleController)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.content.Context mContext>;

        return $r1;
    }

    static com.android.org.chromium.content.browser.input.HandleView access$100(com.android.org.chromium.content.browser.input.InsertionHandleController)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        com.android.org.chromium.content.browser.input.HandleView $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: com.android.org.chromium.content.browser.input.HandleView mHandle>;

        return $r1;
    }

    static android.view.View access$200(com.android.org.chromium.content.browser.input.InsertionHandleController)
    {
        com.android.org.chromium.content.browser.input.InsertionHandleController r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.input.InsertionHandleController;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InsertionHandleController: android.view.View mParent>;

        return $r1;
    }
}
