public final class com.android.org.chromium.com.google.common.net.HostAndPort extends java.lang.Object
{
    private static final int NO_PORT;
    private final java.lang.String host;
    private final int port;
    private final boolean hasBracketlessColons;
    private static final java.util.regex.Pattern BRACKET_PATTERN;

    private void <init>(java.lang.String, int, boolean)
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        java.lang.String r1;
        int i0;
        boolean z0;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host> = r1;

        r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port> = i0;

        r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons> = z0;

        return;
    }

    public java.lang.String getHostText()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $r1 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        return $r1;
    }

    public boolean hasPort()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $i0 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getPort()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $z0 = virtualinvoke r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasPort()>();

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $i0 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        return $i0;
    }

    public int getPortOrDefault(int)
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z0 == 0 goto label1;

        $i1 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public static com.android.org.chromium.com.google.common.net.HostAndPort fromParts(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0;
        com.android.org.chromium.com.google.common.net.HostAndPort r1, $r2;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.org.chromium.com.google.common.net.HostAndPort: boolean isValidPort(int)>(i0);

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        r1 = staticinvoke <com.android.org.chromium.com.google.common.net.HostAndPort: com.android.org.chromium.com.google.common.net.HostAndPort fromString(java.lang.String)>(r0);

        $z1 = virtualinvoke r1.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z1 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean)>($z3);

        $r2 = new com.android.org.chromium.com.google.common.net.HostAndPort;

        $r3 = r1.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $z2 = r1.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        specialinvoke $r2.<com.android.org.chromium.com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>($r3, i0, $z2);

        return $r2;
    }

    public static com.android.org.chromium.com.google.common.net.HostAndPort fromString(java.lang.String)
    {
        java.lang.String r0, r1, r3, $r16;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.regex.Matcher r2;
        com.android.org.chromium.com.google.common.net.HostAndPort $r6;
        java.lang.Object[] $r7, $r8, $r10;
        int $i0, $i1, $i2, i3, i4;
        java.util.regex.Pattern $r9;
        java.lang.IllegalArgumentException $r11;
        java.lang.NumberFormatException $r12;
        java.lang.StringBuilder $r13, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        r1 = null;

        z0 = 0;

        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z1 == 0 goto label01;

        $r9 = <com.android.org.chromium.com.google.common.net.HostAndPort: java.util.regex.Pattern BRACKET_PATTERN>;

        r2 = virtualinvoke $r9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z6 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();

        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = r0;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z6, "Invalid bracketed host/port: %s", $r10);

        r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r1 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        goto label05;

     label01:
        i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        if i3 < 0 goto label02;

        $i0 = i3 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(58, $i0);

        if $i1 != -1 goto label02;

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $i2 = i3 + 1;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label05;

     label02:
        r3 = r0;

        if i3 < 0 goto label03;

        $z5 = 1;

        goto label04;

     label03:
        $z5 = 0;

     label04:
        z0 = $z5;

     label05:
        i4 = -1;

        if r1 == null goto label12;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z2 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z4, "Unparseable port number: %s", $r7);

     label08:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        $r11 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unparseable port number: ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label11:
        $z3 = staticinvoke <com.android.org.chromium.com.google.common.net.HostAndPort: boolean isValidPort(int)>(i4);

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r0;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z3, "Port number out of range: %s", $r8);

     label12:
        $r6 = new com.android.org.chromium.com.google.common.net.HostAndPort;

        specialinvoke $r6.<com.android.org.chromium.com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>(r3, i4, z0);

        return $r6;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    public com.android.org.chromium.com.google.common.net.HostAndPort withDefaultPort(int)
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0, $r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.org.chromium.com.google.common.net.HostAndPort: boolean isValidPort(int)>(i0);

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean)>($z0);

        $z1 = virtualinvoke r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z1 != 0 goto label1;

        $i1 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        if $i1 != i0 goto label2;

     label1:
        return r0;

     label2:
        $r1 = new com.android.org.chromium.com.google.common.net.HostAndPort;

        $r2 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $z2 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        specialinvoke $r1.<com.android.org.chromium.com.google.common.net.HostAndPort: void <init>(java.lang.String,int,boolean)>($r2, i0, $z2);

        return $r1;
    }

    public com.android.org.chromium.com.google.common.net.HostAndPort requireBracketsForIPv6()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        boolean $z0, $z1;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $z0 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $r1[0] = $r2;

        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z1, "Possible bracketless IPv6 literal: %s", $r1);

        return r0;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof com.android.org.chromium.com.google.common.net.HostAndPort;

        if $z0 == 0 goto label4;

        r2 = (com.android.org.chromium.com.google.common.net.HostAndPort) r1;

        $r4 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $r3 = r2.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $z1 = staticinvoke <com.android.org.chromium.com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label2;

        $i1 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        $i0 = r2.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        if $i1 != $i0 goto label2;

        $z3 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        $z2 = r2.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        if $z3 != $z2 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        return 0;
    }

    public int hashCode()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.lang.Integer $r3;
        boolean $z0;
        java.lang.Boolean $r4;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $r1[0] = $r2;

        $i0 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r3;

        $z0 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasBracketlessColons>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[2] = $r4;

        $i1 = staticinvoke <com.android.org.chromium.com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i1;
    }

    public java.lang.String toString()
    {
        com.android.org.chromium.com.google.common.net.HostAndPort r0;
        java.lang.StringBuilder r1, $r2, $r8, $r10, $r11;
        java.lang.String $r3, $r4, $r5, $r7, $r12;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.net.HostAndPort;

        $r2 = new java.lang.StringBuilder;

        $r3 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i0 + 7;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i1);

        r1 = $r2;

        $r4 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $i2 = virtualinvoke $r4.<java.lang.String: int indexOf(int)>(58);

        if $i2 < 0 goto label1;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r12 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label2;

     label1:
        $r5 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: java.lang.String host>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label2:
        $z0 = virtualinvoke r0.<com.android.org.chromium.com.google.common.net.HostAndPort: boolean hasPort()>();

        if $z0 == 0 goto label3;

        $r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i3 = r0.<com.android.org.chromium.com.google.common.net.HostAndPort: int port>;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

     label3:
        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static boolean isValidPort(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 65535 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.android.org.chromium.com.google.common.net.HostAndPort: int NO_PORT> = -1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\[(.*:.*)\\](?::(\\d*))?$");

        <com.android.org.chromium.com.google.common.net.HostAndPort: java.util.regex.Pattern BRACKET_PATTERN> = $r0;

        return;
    }
}
