public class com.android.org.chromium.base.library_loader.LibraryLoaderHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String LIB_DIR;
    private static boolean sLibrariesWereUnpacked;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        com.android.org.chromium.base.library_loader.LibraryLoaderHelper r0;

        r0 := @this: com.android.org.chromium.base.library_loader.LibraryLoaderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean loadNativeLibrariesUsingWorkaroundForTesting(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 = <com.android.org.chromium.base.library_loader.NativeLibraries: java.lang.String[] LIBRARIES>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $z0 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean tryLoadLibraryUsingWorkaround(android.content.Context,java.lang.String)>(r0, r2);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    static boolean tryLoadLibraryUsingWorkaround(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, $r4;
        java.io.File r2;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r5;
        java.lang.UnsatisfiedLinkError $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $z0 = <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r0 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        r2 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String)>(r0, r1);

        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $z2 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean unpackLibrariesOnce(android.content.Context)>(r0);

        if $z2 != 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <java.lang.System: void load(java.lang.String)>($r4);

     label3:
        return 1;

     label4:
        $r6 := @caughtexception;

        return 0;

        catch java.lang.UnsatisfiedLinkError from label2 to label3 with label4;
    }

    public static java.io.File getWorkaroundLibDir(android.content.Context)
    {
        android.content.Context r0;
        java.io.File $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: java.io.File getDir(java.lang.String,int)>("lib", 0);

        return $r1;
    }

    private static java.io.File getWorkaroundLibFile(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        java.io.File $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>(r1);

        $r3 = new java.io.File;

        $r4 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.io.File getWorkaroundLibDir(android.content.Context)>(r0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r2);

        return $r3;
    }

    private static boolean unpackLibrariesOnce(android.content.Context)
    {
        android.content.Context r0;
        java.io.File r1, r8, $r17;
        android.content.pm.ApplicationInfo r2;
        java.util.zip.ZipFile r3, $r15;
        java.lang.String[] r4;
        int i0, i1, $i3, i7;
        java.lang.String r5, r6, $r16, $r21, $r22, $r27, $r29, $r34, $r36, $r42, $r44;
        java.util.zip.ZipEntry r7;
        java.io.InputStream r9;
        java.io.FileOutputStream r10, $r30;
        byte[] r11;
        java.lang.Throwable r12, r13, r14, $r40, $r41, $r48;
        boolean $z1, $z2, $z3, $z6, $z8, $z9;
        java.lang.StringBuilder $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r28, $r33, $r35, $r37, $r38, $r43, $r45, $r46;
        java.lang.AssertionError $r31;
        java.io.IOException $r32, $r39, $r47, r49, r50;

        r0 := @parameter0: android.content.Context;

        $z1 = <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean sLibrariesWereUnpacked>;

        if $z1 == 0 goto label01;

        return 0;

     label01:
        <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean sLibrariesWereUnpacked> = 1;

        r1 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.io.File getWorkaroundLibDir(android.content.Context)>(r0);

        staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: void deleteDirectorySync(java.io.File)>(r1);

     label02:
        r2 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r15 = new java.util.zip.ZipFile;

        $r17 = new java.io.File;

        $r16 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        specialinvoke $r17.<java.io.File: void <init>(java.lang.String)>($r16);

        specialinvoke $r15.<java.util.zip.ZipFile: void <init>(java.io.File,int)>($r17, 1);

        r3 = $r15;

        r4 = <com.android.org.chromium.base.library_loader.NativeLibraries: java.lang.String[] LIBRARIES>;

        i0 = lengthof r4;

        i1 = 0;

     label03:
        if i1 >= i0 goto label28;

        r5 = r4[i1];

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lib/");

        $r21 = <android.os.Build: java.lang.String CPU_ABI>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r22 = staticinvoke <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>(r5);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r6 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r3.<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>(r6);

        if r7 != null goto label05;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = r2.<android.content.pm.ApplicationInfo: java.lang.String sourceDir>;

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t have file ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LibraryLoaderHelper", $r36);

        virtualinvoke r3.<java.util.zip.ZipFile: void close()>();

        staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: void deleteDirectorySync(java.io.File)>(r1);

     label04:
        return 0;

     label05:
        r8 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String)>(r0, r5);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Extracting native libraries into ");

        $r29 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("LibraryLoaderHelper", $r27);

        $z3 = <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean $assertionsDisabled>;

        if $z3 != 0 goto label06;

        $z6 = virtualinvoke r8.<java.io.File: boolean exists()>();

        if $z6 == 0 goto label06;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label06:
        $z2 = virtualinvoke r8.<java.io.File: boolean createNewFile()>();

        if $z2 != 0 goto label07;

        $r32 = new java.io.IOException;

        specialinvoke $r32.<java.io.IOException: void <init>()>();

        throw $r32;

     label07:
        r9 = null;

        r10 = null;

     label08:
        r9 = virtualinvoke r3.<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>(r7);

        $r30 = new java.io.FileOutputStream;

        specialinvoke $r30.<java.io.FileOutputStream: void <init>(java.io.File)>(r8);

        r10 = $r30;

        r11 = newarray (byte)[16384];

     label09:
        $i3 = virtualinvoke r9.<java.io.InputStream: int read(byte[])>(r11);

        i7 = $i3;

        if $i3 <= 0 goto label10;

        virtualinvoke r10.<java.io.FileOutputStream: void write(byte[],int,int)>(r11, 0, i7);

        goto label09;

     label10:
        if r9 == null goto label11;

        virtualinvoke r9.<java.io.InputStream: void close()>();

     label11:
        if r10 == null goto label15;

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

        goto label15;

     label12:
        $r40 := @caughtexception;

        r12 = $r40;

     label13:
        if r10 == null goto label14;

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label14:
        throw r12;

     label15:
        goto label23;

     label16:
        $r41 := @caughtexception;

        r14 = $r41;

     label17:
        if r9 == null goto label18;

        virtualinvoke r9.<java.io.InputStream: void close()>();

     label18:
        if r10 == null goto label22;

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

        goto label22;

     label19:
        $r48 := @caughtexception;

        r13 = $r48;

     label20:
        if r10 == null goto label21;

        virtualinvoke r10.<java.io.FileOutputStream: void close()>();

     label21:
        throw r13;

     label22:
        throw r14;

     label23:
        virtualinvoke r8.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        virtualinvoke r8.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 0);

        virtualinvoke r8.<java.io.File: boolean setWritable(boolean)>(1);

     label24:
        goto label27;

     label25:
        $r39 := @caughtexception;

        r49 = $r39;

        $z8 = virtualinvoke r8.<java.io.File: boolean exists()>();

        if $z8 == 0 goto label26;

        $z9 = virtualinvoke r8.<java.io.File: boolean delete()>();

        if $z9 != 0 goto label26;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to delete ");

        $r42 = virtualinvoke r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r43 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LibraryLoaderHelper", $r44);

     label26:
        virtualinvoke r3.<java.util.zip.ZipFile: void close()>();

        throw r49;

     label27:
        i1 = i1 + 1;

        goto label03;

     label28:
        virtualinvoke r3.<java.util.zip.ZipFile: void close()>();

     label29:
        return 1;

     label30:
        $r47 := @caughtexception;

        r50 = $r47;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LibraryLoaderHelper", "Failed to unpack native libraries", r50);

        staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: void deleteDirectorySync(java.io.File)>(r1);

        return 0;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label08 to label10 with label16;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.io.IOException from label06 to label24 with label25;
        catch java.io.IOException from label02 to label04 with label30;
        catch java.io.IOException from label05 to label29 with label30;
    }

    static void deleteWorkaroundLibrariesAsynchronously(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.base.library_loader.LibraryLoaderHelper$1 $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.org.chromium.base.library_loader.LibraryLoaderHelper$1;

        specialinvoke $r1.<com.android.org.chromium.base.library_loader.LibraryLoaderHelper$1: void <init>(android.content.Context)>(r0);

        virtualinvoke $r1.<com.android.org.chromium.base.library_loader.LibraryLoaderHelper$1: void start()>();

        return;
    }

    public static void deleteWorkaroundLibrariesSynchronously(android.content.Context)
    {
        android.content.Context r0;
        java.io.File r1;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.io.File getWorkaroundLibDir(android.content.Context)>(r0);

        staticinvoke <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: void deleteDirectorySync(java.io.File)>(r1);

        return;
    }

    private static void deleteDirectorySync(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r12, $r14;
        java.lang.String $r7, $r9, $r11, $r13;
        java.lang.Exception $r15, r16;

        r0 := @parameter0: java.io.File;

     label1:
        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label4;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove ");

        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LibraryLoaderHelper", $r13);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $z0 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to remove ");

        $r7 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("LibraryLoaderHelper", $r9);

     label5:
        return;

     label6:
        $r15 := @caughtexception;

        r16 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("LibraryLoaderHelper", "Failed to remove old libs, ", r16);

        return;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.lang.String LIB_DIR> = "lib";

        <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: java.lang.String TAG> = "LibraryLoaderHelper";

        $r0 = class "com/android/org/chromium/base/library_loader/LibraryLoaderHelper";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean $assertionsDisabled> = $z1;

        <com.android.org.chromium.base.library_loader.LibraryLoaderHelper: boolean sLibrariesWereUnpacked> = 0;

        return;
    }
}
