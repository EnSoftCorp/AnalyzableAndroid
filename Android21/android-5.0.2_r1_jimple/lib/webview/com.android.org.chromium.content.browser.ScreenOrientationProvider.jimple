class com.android.org.chromium.content.browser.ScreenOrientationProvider extends java.lang.Object
{
    private static final java.lang.String TAG;

    private int getOrientationFromWebScreenOrientations(byte)
    {
        com.android.org.chromium.content.browser.ScreenOrientationProvider r0;
        byte b0;

        r0 := @this: com.android.org.chromium.content.browser.ScreenOrientationProvider;

        b0 := @parameter0: byte;

        tableswitch(b0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label8;
            case 6: goto label7;
            case 7: goto label6;
            default: goto label9;
        };

     label1:
        return -1;

     label2:
        return 1;

     label3:
        return 9;

     label4:
        return 0;

     label5:
        return 8;

     label6:
        return 7;

     label7:
        return 6;

     label8:
        return 10;

     label9:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ScreenOrientationProvider", "Trying to lock to unsupported orientation!");

        return -1;
    }

    static com.android.org.chromium.content.browser.ScreenOrientationProvider create()
    {
        com.android.org.chromium.content.browser.ScreenOrientationProvider $r0;

        $r0 = new com.android.org.chromium.content.browser.ScreenOrientationProvider;

        specialinvoke $r0.<com.android.org.chromium.content.browser.ScreenOrientationProvider: void <init>()>();

        return $r0;
    }

    void lockOrientation(byte)
    {
        com.android.org.chromium.content.browser.ScreenOrientationProvider r0;
        byte b0;
        android.app.Activity r1;
        int i1;

        r0 := @this: com.android.org.chromium.content.browser.ScreenOrientationProvider;

        b0 := @parameter0: byte;

        r1 = staticinvoke <com.android.org.chromium.base.ApplicationStatus: android.app.Activity getLastTrackedFocusedActivity()>();

        if r1 != null goto label1;

        return;

     label1:
        i1 = specialinvoke r0.<com.android.org.chromium.content.browser.ScreenOrientationProvider: int getOrientationFromWebScreenOrientations(byte)>(b0);

        if i1 != -1 goto label2;

        return;

     label2:
        virtualinvoke r1.<android.app.Activity: void setRequestedOrientation(int)>(i1);

        return;
    }

    void unlockOrientation()
    {
        com.android.org.chromium.content.browser.ScreenOrientationProvider r0;
        android.app.Activity r1;

        r0 := @this: com.android.org.chromium.content.browser.ScreenOrientationProvider;

        r1 = staticinvoke <com.android.org.chromium.base.ApplicationStatus: android.app.Activity getLastTrackedFocusedActivity()>();

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<android.app.Activity: void setRequestedOrientation(int)>(-1);

        return;
    }

    private void <init>()
    {
        com.android.org.chromium.content.browser.ScreenOrientationProvider r0;

        r0 := @this: com.android.org.chromium.content.browser.ScreenOrientationProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.ScreenOrientationProvider: java.lang.String TAG> = "ScreenOrientationProvider";

        return;
    }
}
