public class com.android.org.chromium.content.browser.ContentViewRenderView extends android.widget.FrameLayout
{
    private long mNativeContentViewRenderView;
    private android.view.SurfaceHolder$Callback mSurfaceCallback;
    private final android.view.SurfaceView mSurfaceView;
    protected com.android.org.chromium.content.browser.ContentViewCore mContentViewCore;
    private com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler;
    static final boolean $assertionsDisabled;

    public void <init>(android.content.Context)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        android.content.Context r1, $r2;
        android.view.SurfaceView $r3, $r4, $r6, $r7;
        android.widget.FrameLayout$LayoutParams $r5;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.content.Context getContext()>();

        $r3 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView createSurfaceView(android.content.Context)>($r2);

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView> = $r3;

        $r4 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r4.<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>(1);

        virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void setSurfaceViewBackgroundColor(int)>(-1);

        $r6 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r5 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r5.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r6, $r5);

        $r7 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r7.<android.view.SurfaceView: void setVisibility(int)>(8);

        return;
    }

    public void onNativeLibraryLoaded(com.android.org.chromium.ui.base.WindowAndroid)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        com.android.org.chromium.ui.base.WindowAndroid r1;
        boolean $z0, $z1, $z2, $z3;
        long $l0, $l1, $l2;
        com.android.org.chromium.content.browser.ContentViewRenderView$1 $r2;
        android.view.SurfaceView $r3, $r6, $r12;
        android.view.SurfaceHolder $r4, $r11;
        android.view.SurfaceHolder$Callback $r5;
        com.android.org.chromium.content.browser.ContentViewRenderView$2 $r7;
        com.android.org.chromium.content.browser.ContentReadbackHandler $r8;
        byte $b3;
        java.lang.AssertionError $r9, $r10, $r14;
        android.view.Surface $r13;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        r1 := @parameter0: com.android.org.chromium.ui.base.WindowAndroid;

        $z0 = <com.android.org.chromium.content.browser.ContentViewRenderView: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r12 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r11 = virtualinvoke $r12.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r13 = interfaceinvoke $r11.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        $z3 = virtualinvoke $r13.<android.view.Surface: boolean isValid()>();

        if $z3 == 0 goto label1;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>("Surface created before native library loaded.");

        throw $r14;

     label1:
        $z1 = <com.android.org.chromium.content.browser.ContentViewRenderView: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r1 != null goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        $l0 = virtualinvoke r1.<com.android.org.chromium.ui.base.WindowAndroid: long getNativePointer()>();

        $l1 = specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long nativeInit(long)>($l0);

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView> = $l1;

        $z2 = <com.android.org.chromium.content.browser.ContentViewRenderView: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $l2 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        $r2 = new com.android.org.chromium.content.browser.ContentViewRenderView$1;

        specialinvoke $r2.<com.android.org.chromium.content.browser.ContentViewRenderView$1: void <init>(com.android.org.chromium.content.browser.ContentViewRenderView)>(r0);

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceHolder$Callback mSurfaceCallback> = $r2;

        $r3 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r4 = virtualinvoke $r3.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r5 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceHolder$Callback mSurfaceCallback>;

        interfaceinvoke $r4.<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder$Callback)>($r5);

        $r6 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r6.<android.view.SurfaceView: void setVisibility(int)>(0);

        $r7 = new com.android.org.chromium.content.browser.ContentViewRenderView$2;

        specialinvoke $r7.<com.android.org.chromium.content.browser.ContentViewRenderView$2: void <init>(com.android.org.chromium.content.browser.ContentViewRenderView)>(r0);

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler> = $r7;

        $r8 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler>;

        virtualinvoke $r8.<com.android.org.chromium.content.browser.ContentReadbackHandler: void initNativeContentReadbackHandler()>();

        return;
    }

    public com.android.org.chromium.content.browser.ContentReadbackHandler getContentReadbackHandler()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        com.android.org.chromium.content.browser.ContentReadbackHandler $r1;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler>;

        return $r1;
    }

    public void setSurfaceViewBackgroundColor(int)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        int i0;
        android.view.SurfaceView $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        virtualinvoke $r2.<android.view.SurfaceView: void setBackgroundColor(int)>(i0);

     label1:
        return;
    }

    public void destroy()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        com.android.org.chromium.content.browser.ContentReadbackHandler $r1;
        android.view.SurfaceView $r2;
        android.view.SurfaceHolder $r3;
        android.view.SurfaceHolder$Callback $r4;
        long $l0;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler>;

        virtualinvoke $r1.<com.android.org.chromium.content.browser.ContentReadbackHandler: void destroy()>();

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentReadbackHandler mContentReadbackHandler> = null;

        $r2 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r3 = virtualinvoke $r2.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r4 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceHolder$Callback mSurfaceCallback>;

        interfaceinvoke $r3.<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder$Callback)>($r4);

        $l0 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeDestroy(long)>($l0);

        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView> = 0L;

        return;
    }

    public void setCurrentContentViewCore(com.android.org.chromium.content.browser.ContentViewCore)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        com.android.org.chromium.content.browser.ContentViewCore r1, $r2, $r3, $r4;
        boolean $z0;
        long $l0, $l3, $l4, $l5;
        int $i1, $i2;
        byte $b6;
        java.lang.AssertionError $r5;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        r1 := @parameter0: com.android.org.chromium.content.browser.ContentViewCore;

        $z0 = <com.android.org.chromium.content.browser.ContentViewRenderView: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $l5 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore> = r1;

        $r2 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $i1 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: int getWidth()>();

        $i2 = virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: int getHeight()>();

        virtualinvoke $r3.<com.android.org.chromium.content.browser.ContentViewCore: void onPhysicalBackingSizeChanged(int,int)>($i1, $i2);

        $l3 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        $r4 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: com.android.org.chromium.content.browser.ContentViewCore mContentViewCore>;

        $l4 = virtualinvoke $r4.<com.android.org.chromium.content.browser.ContentViewCore: long getNativeContentViewCore()>();

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSetCurrentContentViewCore(long,long)>($l3, $l4);

        goto label3;

     label2:
        $l0 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSetCurrentContentViewCore(long,long)>($l0, 0L);

     label3:
        return;
    }

    protected void onReadyToRender()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        return;
    }

    protected android.view.SurfaceView createSurfaceView(android.content.Context)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        android.content.Context r1;
        android.view.SurfaceView $r2;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        r1 := @parameter0: android.content.Context;

        $r2 = new android.view.SurfaceView;

        specialinvoke $r2.<android.view.SurfaceView: void <init>(android.content.Context)>(r1);

        return $r2;
    }

    public boolean isInitialized()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        android.view.SurfaceView $r1;
        android.view.SurfaceHolder $r2;
        android.view.Surface $r3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r2 = virtualinvoke $r1.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        $r3 = interfaceinvoke $r2.<android.view.SurfaceHolder: android.view.Surface getSurface()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setOverlayVideoMode(boolean)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        boolean z0;
        byte b0, $b2;
        android.view.SurfaceView $r1;
        android.view.SurfaceHolder $r2;
        long $l1;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b2 = -3;

        goto label2;

     label1:
        $b2 = -1;

     label2:
        b0 = $b2;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r2 = virtualinvoke $r1.<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>();

        interfaceinvoke $r2.<android.view.SurfaceHolder: void setFormat(int)>(b0);

        $l1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSetOverlayVideoMode(long,boolean)>($l1, z0);

        return;
    }

    public void setLayerTreeBuildHelper(long)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        long l0, $l1;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSetLayerTreeBuildHelper(long,long)>($l1, l0);

        return;
    }

    protected void onCompositorLayout()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        return;
    }

    private void onSwapBuffersCompleted()
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        android.view.SurfaceView $r1;
        android.graphics.drawable.Drawable $r2;
        com.android.org.chromium.content.browser.ContentViewRenderView$3 $r3;

        r0 := @this: com.android.org.chromium.content.browser.ContentViewRenderView;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        $r2 = virtualinvoke $r1.<android.view.SurfaceView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == null goto label1;

        $r3 = new com.android.org.chromium.content.browser.ContentViewRenderView$3;

        specialinvoke $r3.<com.android.org.chromium.content.browser.ContentViewRenderView$3: void <init>(com.android.org.chromium.content.browser.ContentViewRenderView)>(r0);

        virtualinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: boolean post(java.lang.Runnable)>($r3);

     label1:
        return;
    }

    private native long nativeInit(long);

    private native void nativeDestroy(long);

    private native void nativeSetCurrentContentViewCore(long, long);

    private native void nativeSetLayerTreeBuildHelper(long, long);

    private native void nativeSurfaceCreated(long);

    private native void nativeSurfaceDestroyed(long);

    private native void nativeSurfaceChanged(long, int, int, int, android.view.Surface);

    private native void nativeSetOverlayVideoMode(long, boolean);

    static long access$000(com.android.org.chromium.content.browser.ContentViewRenderView)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewRenderView;

        $l0 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: long mNativeContentViewRenderView>;

        return $l0;
    }

    static void access$100(com.android.org.chromium.content.browser.ContentViewRenderView, long, int, int, int, android.view.Surface)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        long l0;
        int i1, i2, i3;
        android.view.Surface r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewRenderView;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: android.view.Surface;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSurfaceChanged(long,int,int,int,android.view.Surface)>(l0, i1, i2, i3, r1);

        return;
    }

    static void access$200(com.android.org.chromium.content.browser.ContentViewRenderView, long)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        long l0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewRenderView;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSurfaceCreated(long)>(l0);

        return;
    }

    static void access$300(com.android.org.chromium.content.browser.ContentViewRenderView, long)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        long l0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewRenderView;

        l0 := @parameter1: long;

        specialinvoke r0.<com.android.org.chromium.content.browser.ContentViewRenderView: void nativeSurfaceDestroyed(long)>(l0);

        return;
    }

    static android.view.SurfaceView access$400(com.android.org.chromium.content.browser.ContentViewRenderView)
    {
        com.android.org.chromium.content.browser.ContentViewRenderView r0;
        android.view.SurfaceView $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ContentViewRenderView;

        $r1 = r0.<com.android.org.chromium.content.browser.ContentViewRenderView: android.view.SurfaceView mSurfaceView>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/content/browser/ContentViewRenderView";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.ContentViewRenderView: boolean $assertionsDisabled> = $z1;

        return;
    }
}
