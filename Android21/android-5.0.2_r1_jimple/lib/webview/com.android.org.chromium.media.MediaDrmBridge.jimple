public class com.android.org.chromium.media.MediaDrmBridge extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String SECURITY_LEVEL;
    private static final java.lang.String PRIVACY_MODE;
    private static final java.lang.String SESSION_SHARING;
    private static final java.lang.String ENABLE;
    private static final int INVALID_SESSION_ID;
    private android.media.MediaDrm mMediaDrm;
    private long mNativeMediaDrmBridge;
    private java.util.UUID mSchemeUUID;
    private android.os.Handler mHandler;
    private boolean mSingleSessionMode;
    private java.nio.ByteBuffer mMediaCryptoSession;
    private android.media.MediaCrypto mMediaCrypto;
    private java.util.HashMap mSessionIds;
    private java.util.HashMap mSessionMimeTypes;
    private java.util.ArrayDeque mPendingCreateSessionDataQueue;
    private boolean mResetDeviceCredentialsPending;
    private boolean mProvisioningPending;
    static final boolean $assertionsDisabled;

    private static java.util.UUID getUUIDFromBytes(byte[])
    {
        byte[] r0;
        long l0, l1, $l6, $l7, $l10, $l11;
        int i2, $i3, i12;
        java.util.UUID $r1;
        byte $b4, $b8;
        short $s5, $s9;

        r0 := @parameter0: byte[];

        $i3 = lengthof r0;

        if $i3 == 16 goto label1;

        return null;

     label1:
        l0 = 0L;

        l1 = 0L;

        i2 = 0;

     label2:
        if i2 >= 8 goto label3;

        $l11 = l0 << 8;

        $b8 = r0[i2];

        $s9 = $b8 & 255;

        $l10 = (long) $s9;

        l0 = $l11 | $l10;

        i2 = i2 + 1;

        goto label2;

     label3:
        i12 = 8;

     label4:
        if i12 >= 16 goto label5;

        $l7 = l1 << 8;

        $b4 = r0[i12];

        $s5 = $b4 & 255;

        $l6 = (long) $s5;

        l1 = $l7 | $l6;

        i12 = i12 + 1;

        goto label4;

     label5:
        $r1 = new java.util.UUID;

        specialinvoke $r1.<java.util.UUID: void <init>(long,long)>(l0, l1);

        return $r1;
    }

    private java.nio.ByteBuffer getSession(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0, $i1;
        java.util.Iterator r1;
        java.nio.ByteBuffer r2;
        java.util.HashMap $r3, $r6;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r7;
        java.lang.Integer $r8;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.nio.ByteBuffer) $r5;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (java.lang.Integer) $r7;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private void <init>(java.util.UUID, long, boolean) throws android.media.UnsupportedSchemeException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.UUID r1;
        long l0;
        boolean z0, $z1;
        android.media.MediaDrm $r2, $r8, $r9, $r10;
        android.os.Handler $r3;
        java.util.HashMap $r4, $r5;
        java.util.ArrayDeque $r6;
        com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener $r7;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.util.UUID;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID> = r1;

        $r2 = new android.media.MediaDrm;

        specialinvoke $r2.<android.media.MediaDrm: void <init>(java.util.UUID)>(r1);

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm> = $r2;

        r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge> = l0;

        $r3 = new android.os.Handler;

        specialinvoke $r3.<android.os.Handler: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler> = $r3;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode> = z0;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes> = $r5;

        $r6 = new java.util.ArrayDeque;

        specialinvoke $r6.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue> = $r6;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 0;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 0;

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r7 = new com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener;

        specialinvoke $r7.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: void <init>(com.android.org.chromium.media.MediaDrmBridge,com.android.org.chromium.media.MediaDrmBridge$1)>(r0, null);

        virtualinvoke $r8.<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm$OnEventListener)>($r7);

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r9.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("privacyMode", "enable");

        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z1 != 0 goto label1;

        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r10.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("sessionSharing", "enable");

     label1:
        return;
    }

    private boolean createMediaCrypto() throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;
        android.media.MediaDrm $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.nio.ByteBuffer $r3, $r4, $r7, $r11, $r14, $r20;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;
        java.util.UUID $r10, $r12;
        android.media.MediaCrypto $r13, $r18, $r22;
        java.util.HashMap $r15;
        java.lang.Integer $r17;
        long $l3;
        java.lang.AssertionError $r19, $r21, $r23, $r25;
        android.media.MediaCryptoException $r24, r26;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r2 != null goto label01;

        return 0;

     label01:
        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $z5 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z5 == 0 goto label02;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label02:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r20 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r20 == null goto label03;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

     label03:
        $z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z2 != 0 goto label04;

        $r22 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r22 == null goto label04;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label04:
        $r3 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer openSession()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession> = $r3;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r4 != null goto label05;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot create MediaCrypto Session.");

        return 0;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaCrypto Session created: ");

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r9);

     label06:
        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID>;

        $z3 = staticinvoke <android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>($r10);

        if $z3 == 0 goto label09;

        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        r1 = virtualinvoke $r11.<java.nio.ByteBuffer: byte[] array()>();

        $r13 = new android.media.MediaCrypto;

        $r12 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.UUID mSchemeUUID>;

        specialinvoke $r13.<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>($r12, r1);

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto> = $r13;

        $z4 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z4 != 0 goto label07;

        $r18 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r18 != null goto label07;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaCrypto successfully created!");

        $r15 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r14 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r17);

        $l3 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnMediaCryptoReady(long)>($l3);

     label08:
        return 1;

     label09:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot create MediaCrypto for unsupported scheme.");

     label10:
        goto label12;

     label11:
        $r24 := @caughtexception;

        r26 = $r24;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Cannot create MediaCrypto", r26);

     label12:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return 0;

        catch android.media.MediaCryptoException from label06 to label08 with label11;
        catch android.media.MediaCryptoException from label09 to label10 with label11;
    }

    private java.nio.ByteBuffer openSession() throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1, $r4;
        boolean $z0;
        android.media.MediaDrm $r2, $r6;
        java.lang.Object $r3;
        java.nio.ByteBuffer $r5;
        java.lang.AssertionError $r7;
        java.lang.RuntimeException $r8, r11;
        android.media.MediaDrmException $r9, r13;
        android.media.NotProvisionedException $r10, r12;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r6 != null goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r1 = virtualinvoke $r2.<android.media.MediaDrm: byte[] openSession()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r4 = (byte[]) $r3;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r4);

     label2:
        return $r5;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Cannot open a new session", r11);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return null;

     label4:
        $r10 := @caughtexception;

        r12 = $r10;

        throw r12;

     label5:
        $r9 := @caughtexception;

        r13 = $r9;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Cannot open a new session", r13);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch android.media.NotProvisionedException from label1 to label2 with label4;
        catch android.media.MediaDrmException from label1 to label2 with label5;
    }

    private void closeSession(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        boolean $z0;
        android.media.MediaDrm $r2, $r4;
        byte[] $r3;
        java.lang.AssertionError $r5;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r3 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r2.<android.media.MediaDrm: void closeSession(byte[])>($r3);

        return;
    }

    private static boolean isCryptoSchemeSupported(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1;
        java.util.UUID r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.UUID getUUIDFromBytes(byte[])>(r0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z2 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>(r2);

        return $z2;

     label1:
        $z1 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID,java.lang.String)>(r2, r1);

        return $z1;
    }

    private static com.android.org.chromium.media.MediaDrmBridge create(byte[], long)
    {
        byte[] r0;
        long l0;
        java.util.UUID r1;
        boolean z0, $z1, $z2;
        com.android.org.chromium.media.MediaDrmBridge r2, $r11;
        android.media.UnsupportedSchemeException r3, $r12;
        java.lang.String $r4, $r10, $r13;
        java.lang.StringBuilder $r5, $r7, $r8, $r9;
        java.lang.IllegalArgumentException $r14, r16;
        java.lang.IllegalStateException $r15, r17;

        r0 := @parameter0: byte[];

        l0 := @parameter1: long;

        r1 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.UUID getUUIDFromBytes(byte[])>(r0);

        if r1 == null goto label01;

        $z1 = staticinvoke <android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>(r1);

        if $z1 != 0 goto label02;

     label01:
        return null;

     label02:
        z0 = 0;

        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("4.4");

        if $z2 == 0 goto label03;

        z0 = 1;

     label03:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaDrmBridge uses ");

        if z0 == 0 goto label04;

        $r13 = "single";

        goto label05;

     label04:
        $r13 = "multiple";

     label05:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-session mode.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r10);

        r2 = null;

     label06:
        $r11 = new com.android.org.chromium.media.MediaDrmBridge;

        specialinvoke $r11.<com.android.org.chromium.media.MediaDrmBridge: void <init>(java.util.UUID,long,boolean)>(r1, l0, z0);

        r2 = $r11;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrmBridge successfully created.");

     label07:
        goto label11;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Unsupported DRM scheme", r3);

        goto label11;

     label09:
        $r14 := @caughtexception;

        r16 = $r14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Failed to create MediaDrmBridge", r16);

        goto label11;

     label10:
        $r15 := @caughtexception;

        r17 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Failed to create MediaDrmBridge", r17);

     label11:
        return r2;

        catch android.media.UnsupportedSchemeException from label06 to label07 with label08;
        catch java.lang.IllegalArgumentException from label06 to label07 with label09;
        catch java.lang.IllegalStateException from label06 to label07 with label10;
    }

    private boolean setSecurityLevel(java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.lang.String r1, r2, $r12, $r17, $r23, $r28;
        java.lang.IllegalArgumentException r3, $r15;
        android.media.MediaDrm $r4, $r6, $r13;
        android.media.MediaCrypto $r5;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r14, $r16, $r18, $r19, $r20, $r21, $r22, $r24, $r26, $r27;
        boolean $z0;
        java.lang.IllegalStateException $r25, r29;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r4 == null goto label1;

        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r5 == null goto label2;

     label1:
        return 0;

     label2:
        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r2 = virtualinvoke $r6.<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>("securityLevel");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Security level: current ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", new ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", $r12);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $r13 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r13.<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>("securityLevel", r1);

     label4:
        return 1;

     label5:
        $r15 := @caughtexception;

        r3 = $r15;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set security level ");

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", $r17, r3);

        goto label7;

     label6:
        $r25 := @caughtexception;

        r29 = $r25;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set security level ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", $r28, r29);

     label7:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Security level ");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported!");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", $r23);

        return 0;

        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalStateException from label3 to label4 with label6;
    }

    private android.media.MediaCrypto getMediaCrypto()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaCrypto $r1;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        return $r1;
    }

    private void resetDeviceCredentials()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm$ProvisionRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$PostRequestTask r2, $r4;
        android.media.MediaDrm $r3;
        byte[] $r5;
        java.lang.String[] $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 1;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r1 = virtualinvoke $r3.<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>();

        $r4 = new com.android.org.chromium.media.MediaDrmBridge$PostRequestTask;

        $r5 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: byte[] getData()>();

        specialinvoke $r4.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: void <init>(com.android.org.chromium.media.MediaDrmBridge,byte[])>(r0, $r5);

        r2 = $r4;

        $r6 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        $r6[0] = $r7;

        virtualinvoke r2.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: android.os.AsyncTask execute(java.lang.Object[])>($r6);

        return;
    }

    private void release()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.Iterator r1;
        java.nio.ByteBuffer r2;
        java.util.ArrayDeque $r3;
        java.util.HashMap $r4, $r6, $r7;
        java.util.Set $r5;
        boolean $z0;
        android.media.MediaCrypto $r8, $r11;
        android.media.MediaDrm $r9, $r10;
        java.lang.Object $r12;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        virtualinvoke $r3.<java.util.ArrayDeque: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue> = null;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.util.Set keySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.nio.ByteBuffer) $r12;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r2);

        goto label1;

     label2:
        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        virtualinvoke $r6.<java.util.HashMap: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds> = null;

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        virtualinvoke $r7.<java.util.HashMap: void clear()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes> = null;

        r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession> = null;

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r8 == null goto label3;

        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        virtualinvoke $r11.<android.media.MediaCrypto: void release()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto> = null;

     label3:
        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r9 == null goto label4;

        $r10 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r10.<android.media.MediaDrm: void release()>();

        r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm> = null;

     label4:
        return;
    }

    private android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer, byte[], java.lang.String) throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        byte[] r2, $r9;
        java.lang.String r3, r6, $r13, $r15;
        java.util.HashMap r4, $r7;
        android.media.MediaDrm$KeyRequest r5;
        boolean $z0, $z1, $z2, $z3;
        android.media.MediaDrm $r8, $r20;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.AssertionError $r16, $r17, $r19;
        android.media.MediaCrypto $r18;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.lang.String;

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r20 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r20 != null goto label1;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label1:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r18 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r18 != null goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        $z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $z3 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z3 == 0 goto label3;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label3:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r4 = $r7;

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r9 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        r5 = virtualinvoke $r8.<android.media.MediaDrm: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>($r9, r2, r3, 1, r4);

        if r5 == null goto label4;

        $r15 = "successed";

        goto label5;

     label4:
        $r15 = "failed";

     label5:
        r6 = $r15;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getKeyRequest ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r13);

        return r5;
    }

    private void savePendingCreateSessionData(int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1;
        java.lang.String r2;
        com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData $r3;
        java.util.ArrayDeque $r4;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "savePendingCreateSessionData()");

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $r3 = new com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData;

        specialinvoke $r3.<com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: void <init>(int,byte[],java.lang.String,com.android.org.chromium.media.MediaDrmBridge$1)>(i0, r1, r2, null);

        virtualinvoke $r4.<java.util.ArrayDeque: boolean offer(java.lang.Object)>($r3);

        return;
    }

    private void processPendingCreateSessionData()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData r1;
        int i0;
        byte[] r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2;
        android.media.MediaDrm $r4, $r9;
        java.util.ArrayDeque $r5, $r6;
        java.lang.Object $r7;
        java.lang.AssertionError $r8;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "processPendingCreateSessionData()");

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r9 != null goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r4 == null goto label2;

        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $z2 = virtualinvoke $r5.<java.util.ArrayDeque: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.ArrayDeque mPendingCreateSessionDataQueue>;

        $r7 = virtualinvoke $r6.<java.util.ArrayDeque: java.lang.Object poll()>();

        r1 = (com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData) $r7;

        i0 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: int access$200(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        r2 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: byte[] access$300(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        r3 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData: java.lang.String access$400(com.android.org.chromium.media.MediaDrmBridge$PendingCreateSessionData)>(r1);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void createSession(int,byte[],java.lang.String)>(i0, r2, r3);

        goto label1;

     label2:
        return;
    }

    private void resumePendingOperations()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        com.android.org.chromium.media.MediaDrmBridge$1 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$1;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$1: void <init>(com.android.org.chromium.media.MediaDrmBridge)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void createSession(int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1;
        java.lang.String r2, $r6, $r13, $r16, $r24;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.nio.ByteBuffer r3, $r26;
        android.media.MediaDrm $r4;
        android.media.MediaCrypto $r5, $r29, $r32;
        java.lang.Integer $r7;
        java.util.HashMap $r8, $r9, $r19, $r21, $r22, $r27;
        java.lang.StringBuilder $r10, $r11, $r12, $r14, $r15, $r17;
        java.lang.AssertionError $r18, $r25, $r28, $r31;
        java.lang.Object $r20, $r23;
        android.media.NotProvisionedException $r30, r34;
        android.media.MediaDrm$KeyRequest r33;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        r2 := @parameter2: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "createSession()");

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r4 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "createSession() called when MediaDrm is null.");

        return;

     label01:
        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z1 == 0 goto label03;

        $z9 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z9 != 0 goto label02;

        $r32 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r32 == null goto label02;

        $r31 = new java.lang.AssertionError;

        specialinvoke $r31.<java.lang.AssertionError: void <init>()>();

        throw $r31;

     label02:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void savePendingCreateSessionData(int,byte[],java.lang.String)>(i0, r1, r2);

        return;

     label03:
        z0 = 0;

        r3 = null;

     label04:
        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r5 != null goto label06;

        $z10 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean createMediaCrypto()>();

        if $z10 != 0 goto label06;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label05:
        return;

     label06:
        $z2 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z2 != 0 goto label07;

        $r29 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaCrypto mMediaCrypto>;

        if $r29 != null goto label07;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label07:
        $z3 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z3 != 0 goto label08;

        $r27 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r26 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z8 = virtualinvoke $r27.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r26);

        if $z8 != 0 goto label08;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label08:
        $z4 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z4 == 0 goto label10;

        r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $r22 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        $r20 = virtualinvoke $r22.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        if $r20 == null goto label13;

        $r21 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        $r23 = virtualinvoke $r21.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        $r24 = (java.lang.String) $r23;

        $z7 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z7 != 0 goto label13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Only one mime type is supported in single session mode.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label09:
        return;

     label10:
        r3 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer openSession()>();

        if r3 != null goto label12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Cannot open session in createSession().");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label11:
        return;

     label12:
        z0 = 1;

        $z5 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z5 != 0 goto label13;

        $r19 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z6 = virtualinvoke $r19.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r3);

        if $z6 == 0 goto label13;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label13:
        r33 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer,byte[],java.lang.String)>(r3, r1, r2);

        if r33 != null goto label16;

        if z0 == 0 goto label14;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r3);

     label14:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

     label15:
        return;

     label16:
        $r6 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.lang.String getWebSessionId(java.nio.ByteBuffer)>(r3);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionCreated(int,java.lang.String)>(i0, $r6);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionMessage(int,android.media.MediaDrm$KeyRequest)>(i0, r33);

        if z0 == 0 goto label17;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createSession(): Session ");

        $r13 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.lang.String getWebSessionId(java.nio.ByteBuffer)>(r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") created.");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r16);

     label17:
        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

     label18:
        goto label21;

     label19:
        $r30 := @caughtexception;

        r34 = $r30;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Device not provisioned", r34);

        if z0 == 0 goto label20;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r3);

     label20:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void savePendingCreateSessionData(int,byte[],java.lang.String)>(i0, r1, r2);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void startProvisioning()>();

     label21:
        return;

        catch android.media.NotProvisionedException from label04 to label05 with label19;
        catch android.media.NotProvisionedException from label06 to label09 with label19;
        catch android.media.NotProvisionedException from label10 to label11 with label19;
        catch android.media.NotProvisionedException from label12 to label15 with label19;
        catch android.media.NotProvisionedException from label16 to label18 with label19;
    }

    private boolean sessionExists(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1, $r2, $r3, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.HashMap $r4, $r7, $r9;
        java.lang.AssertionError $r8, $r10;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        if $r2 != null goto label2;

        $z7 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z7 != 0 goto label1;

        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z8 = virtualinvoke $r9.<java.util.HashMap: boolean isEmpty()>();

        if $z8 != 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Session doesn\'t exist because media crypto session is not created.");

        return 0;

     label2:
        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z6 = virtualinvoke $r7.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r6);

        if $z6 != 0 goto label3;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label3:
        $z1 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z1 == 0 goto label4;

        $r5 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z5 = virtualinvoke $r5.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>(r1);

        return $z5;

     label4:
        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer mMediaCryptoSession>;

        $z2 = virtualinvoke r1.<java.nio.ByteBuffer: boolean equals(java.lang.Object)>($r3);

        if $z2 != 0 goto label5;

        $r4 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        $z3 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        if $z3 == 0 goto label5;

        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    private void releaseSession(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        java.nio.ByteBuffer r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r9, $r10, $r11, $r13;
        java.lang.String $r5, $r12;
        android.media.MediaDrm $r6, $r7;
        byte[] $r8;
        boolean $z0;
        java.util.HashMap $r14;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseSession(): ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r5);

        $r6 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r6 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "releaseSession() called when MediaDrm is null.");

        return;

     label1:
        r1 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer getSession(int)>(i0);

        if r1 != null goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid sessionId in releaseSession.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;

     label2:
        $r7 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r8 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r7.<android.media.MediaDrm: void removeKeys(byte[])>($r8);

        $z0 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mSingleSessionMode>;

        if $z0 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("closed.");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r12);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void closeSession(java.nio.ByteBuffer)>(r1);

        $r14 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionClosed(int)>(i0);

     label3:
        return;
    }

    private void updateSession(int, byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        byte[] r1, $r10;
        java.nio.ByteBuffer r2;
        java.lang.IllegalStateException r3, $r16;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r13, $r15;
        java.lang.String $r7, $r14;
        android.media.MediaDrm $r8, $r9;
        boolean $z0;
        android.media.DeniedByServerException $r17, r20;
        android.media.NotProvisionedException $r18, r19;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateSession(): ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r7);

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r8 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "updateSession() called when MediaDrm is null.");

        return;

     label1:
        r2 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: java.nio.ByteBuffer getSession(int)>(i0);

        $z0 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean sessionExists(java.nio.ByteBuffer)>(r2);

        if $z0 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid session in updateSession.");

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;

     label2:
        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r10 = virtualinvoke r2.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r9.<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>($r10, r1);

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r3 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Exception intentionally caught when calling provideKeyResponse()", r3);

     label5:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionReady(int)>(i0);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key successfully added for session ");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", $r14);

     label6:
        return;

     label7:
        $r18 := @caughtexception;

        r19 = $r18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide key response", r19);

        goto label9;

     label8:
        $r17 := @caughtexception;

        r20 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide key response", r20);

     label9:
        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void release()>();

        return;

        catch java.lang.IllegalStateException from label2 to label3 with label4;
        catch android.media.NotProvisionedException from label2 to label6 with label7;
        catch android.media.DeniedByServerException from label2 to label6 with label8;
    }

    private java.lang.String getSecurityLevel()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "getSecurityLevel() called when MediaDrm is null.");

        return null;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        $r3 = virtualinvoke $r2.<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>("securityLevel");

        return $r3;
    }

    private void startProvisioning()
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        android.media.MediaDrm$ProvisionRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$PostRequestTask r2, $r4;
        boolean $z0, $z1, $z2;
        android.media.MediaDrm $r3, $r11;
        byte[] $r5;
        java.lang.String[] $r6;
        java.lang.String $r7;
        java.lang.AssertionError $r9, $r10;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "startProvisioning");

        $z0 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r11 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r11 != null goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z2 == 0 goto label2;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label2:
        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 1;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        r1 = virtualinvoke $r3.<android.media.MediaDrm: android.media.MediaDrm$ProvisionRequest getProvisionRequest()>();

        $r4 = new com.android.org.chromium.media.MediaDrmBridge$PostRequestTask;

        $r5 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: byte[] getData()>();

        specialinvoke $r4.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: void <init>(com.android.org.chromium.media.MediaDrmBridge,byte[])>(r0, $r5);

        r2 = $r4;

        $r6 = newarray (java.lang.String)[1];

        $r7 = virtualinvoke r1.<android.media.MediaDrm$ProvisionRequest: java.lang.String getDefaultUrl()>();

        $r6[0] = $r7;

        virtualinvoke r2.<com.android.org.chromium.media.MediaDrmBridge$PostRequestTask: android.os.AsyncTask execute(java.lang.Object[])>($r6);

        return;
    }

    private void onProvisionResponse(byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;
        boolean z0, $z1, $z2, $z3;
        android.media.MediaDrm $r2;
        long $l1;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: byte[];

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "onProvisionResponse()");

        $z1 = <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z3 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        if $z3 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending> = 0;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        if $r2 != null goto label2;

        return;

     label2:
        z0 = virtualinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean provideProvisionResponse(byte[])>(r1);

        $z2 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending>;

        if $z2 == 0 goto label3;

        $l1 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnResetDeviceCredentialsCompleted(long,boolean)>($l1, z0);

        r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mResetDeviceCredentialsPending> = 0;

     label3:
        if z0 == 0 goto label4;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void resumePendingOperations()>();

     label4:
        return;
    }

    boolean provideProvisionResponse(byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;
        android.media.DeniedByServerException r2, $r5;
        int $i1;
        android.media.MediaDrm $r3;
        java.lang.IllegalStateException $r4, r6;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: byte[];

        if r1 == null goto label1;

        $i1 = lengthof r1;

        if $i1 != 0 goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "Invalid provision response.");

        return 0;

     label2:
        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm mMediaDrm>;

        virtualinvoke $r3.<android.media.MediaDrm: void provideProvisionResponse(byte[])>(r1);

     label3:
        return 1;

     label4:
        $r5 := @caughtexception;

        r2 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide provision response", r2);

        goto label6;

     label5:
        $r4 := @caughtexception;

        r6 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "failed to provide provision response", r6);

     label6:
        return 0;

        catch android.media.DeniedByServerException from label2 to label3 with label4;
        catch java.lang.IllegalStateException from label2 to label3 with label5;
    }

    private void onSessionCreated(int, java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        java.lang.String r1;
        com.android.org.chromium.media.MediaDrmBridge$2 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r2 = new com.android.org.chromium.media.MediaDrmBridge$2;

        specialinvoke $r2.<com.android.org.chromium.media.MediaDrmBridge$2: void <init>(com.android.org.chromium.media.MediaDrmBridge,int,java.lang.String)>(r0, i0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void onSessionMessage(int, android.media.MediaDrm$KeyRequest)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        android.media.MediaDrm$KeyRequest r1;
        com.android.org.chromium.media.MediaDrmBridge$3 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.MediaDrm$KeyRequest;

        $r3 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r2 = new com.android.org.chromium.media.MediaDrmBridge$3;

        specialinvoke $r2.<com.android.org.chromium.media.MediaDrmBridge$3: void <init>(com.android.org.chromium.media.MediaDrmBridge,int,android.media.MediaDrm$KeyRequest)>(r0, i0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void onSessionReady(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$4 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$4;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$4: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void onSessionClosed(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$5 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$5;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$5: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private void onSessionError(int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        com.android.org.chromium.media.MediaDrmBridge$6 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.org.chromium.media.MediaDrmBridge: android.os.Handler mHandler>;

        $r1 = new com.android.org.chromium.media.MediaDrmBridge$6;

        specialinvoke $r1.<com.android.org.chromium.media.MediaDrmBridge$6: void <init>(com.android.org.chromium.media.MediaDrmBridge,int)>(r0, i0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    private java.lang.String getWebSessionId(java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        java.lang.String r2, $r4;
        java.io.UnsupportedEncodingException r3, $r7;
        byte[] $r5;
        java.lang.NullPointerException $r6, r8;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter0: java.nio.ByteBuffer;

        r2 = null;

     label1:
        $r4 = new java.lang.String;

        $r5 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, "UTF-8");

        r2 = $r4;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "getWebSessionId failed", r3);

        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = $r6;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "getWebSessionId failed", r8);

     label5:
        return r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
    }

    public static void addKeySystemUuidMapping(java.lang.String, java.util.UUID)
    {
        java.lang.String r0;
        java.util.UUID r1;
        java.nio.ByteBuffer r2;
        java.nio.ByteOrder $r3;
        long $l0, $l1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.UUID;

        r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(16);

        $r3 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r3);

        $l0 = virtualinvoke r1.<java.util.UUID: long getMostSignificantBits()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l0);

        $l1 = virtualinvoke r1.<java.util.UUID: long getLeastSignificantBits()>();

        virtualinvoke r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>($l1);

        staticinvoke <com.android.org.chromium.media.MediaDrmBridge: void nativeAddKeySystemUuidMapping(java.lang.String,java.nio.ByteBuffer)>(r0, r2);

        return;
    }

    private native void nativeOnMediaCryptoReady(long);

    private native void nativeOnSessionCreated(long, int, java.lang.String);

    private native void nativeOnSessionMessage(long, int, byte[], java.lang.String);

    private native void nativeOnSessionReady(long, int);

    private native void nativeOnSessionClosed(long, int);

    private native void nativeOnSessionError(long, int);

    private native void nativeOnResetDeviceCredentialsCompleted(long, boolean);

    private static native void nativeAddKeySystemUuidMapping(java.lang.String, java.nio.ByteBuffer);

    static void access$500(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void processPendingCreateSessionData()>();

        return;
    }

    static long access$600(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $l0 = r0.<com.android.org.chromium.media.MediaDrmBridge: long mNativeMediaDrmBridge>;

        return $l0;
    }

    static void access$700(com.android.org.chromium.media.MediaDrmBridge, long, int, java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;
        java.lang.String r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionCreated(long,int,java.lang.String)>(l0, i1, r1);

        return;
    }

    static void access$800(com.android.org.chromium.media.MediaDrmBridge, long, int, byte[], java.lang.String)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;
        byte[] r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        r1 := @parameter3: byte[];

        r2 := @parameter4: java.lang.String;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionMessage(long,int,byte[],java.lang.String)>(l0, i1, r1, r2);

        return;
    }

    static void access$900(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionReady(long,int)>(l0, i1);

        return;
    }

    static void access$1000(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionClosed(long,int)>(l0, i1);

        return;
    }

    static void access$1100(com.android.org.chromium.media.MediaDrmBridge, long, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        long l0;
        int i1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        l0 := @parameter1: long;

        i1 := @parameter2: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void nativeOnSessionError(long,int)>(l0, i1);

        return;
    }

    static boolean access$1200(com.android.org.chromium.media.MediaDrmBridge, java.nio.ByteBuffer)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: java.nio.ByteBuffer;

        $z0 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: boolean sessionExists(java.nio.ByteBuffer)>(r1);

        return $z0;
    }

    static java.util.HashMap access$1300(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionIds>;

        return $r1;
    }

    static boolean access$1400(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        boolean $z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $z0 = r0.<com.android.org.chromium.media.MediaDrmBridge: boolean mProvisioningPending>;

        return $z0;
    }

    static java.util.HashMap access$1500(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap mSessionMimeTypes>;

        return $r1;
    }

    static android.media.MediaDrm$KeyRequest access$1600(com.android.org.chromium.media.MediaDrmBridge, java.nio.ByteBuffer, byte[], java.lang.String) throws android.media.NotProvisionedException
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        java.nio.ByteBuffer r1;
        byte[] r2;
        java.lang.String r3;
        android.media.MediaDrm$KeyRequest $r4;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: java.nio.ByteBuffer;

        r2 := @parameter2: byte[];

        r3 := @parameter3: java.lang.String;

        $r4 = specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm$KeyRequest getKeyRequest(java.nio.ByteBuffer,byte[],java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    static void access$1700(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void startProvisioning()>();

        return;
    }

    static void access$1800(com.android.org.chromium.media.MediaDrmBridge, int, android.media.MediaDrm$KeyRequest)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;
        android.media.MediaDrm$KeyRequest r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter1: int;

        r1 := @parameter2: android.media.MediaDrm$KeyRequest;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionMessage(int,android.media.MediaDrm$KeyRequest)>(i0, r1);

        return;
    }

    static void access$1900(com.android.org.chromium.media.MediaDrmBridge, int)
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        int i0;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onSessionError(int)>(i0);

        return;
    }

    static void access$2000(com.android.org.chromium.media.MediaDrmBridge, byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge r0;
        byte[] r1;

        r0 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r1 := @parameter1: byte[];

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge: void onProvisionResponse(byte[])>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.media.MediaDrmBridge: int INVALID_SESSION_ID> = 0;

        <com.android.org.chromium.media.MediaDrmBridge: java.lang.String ENABLE> = "enable";

        <com.android.org.chromium.media.MediaDrmBridge: java.lang.String SESSION_SHARING> = "sessionSharing";

        <com.android.org.chromium.media.MediaDrmBridge: java.lang.String PRIVACY_MODE> = "privacyMode";

        <com.android.org.chromium.media.MediaDrmBridge: java.lang.String SECURITY_LEVEL> = "securityLevel";

        <com.android.org.chromium.media.MediaDrmBridge: java.lang.String TAG> = "MediaDrmBridge";

        $r0 = class "com/android/org/chromium/media/MediaDrmBridge";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.media.MediaDrmBridge: boolean $assertionsDisabled> = $z1;

        return;
    }
}
