public class com.android.org.chromium.content.browser.TracingControllerAndroid extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String ACTION_START;
    private static final java.lang.String ACTION_STOP;
    private static final java.lang.String ACTION_LIST_CATEGORIES;
    private static final java.lang.String FILE_EXTRA;
    private static final java.lang.String CATEGORIES_EXTRA;
    private static final java.lang.String RECORD_CONTINUOUSLY_EXTRA;
    private static final java.lang.String DEFAULT_CHROME_CATEGORIES_PLACE_HOLDER;
    private static final java.lang.String PROFILER_STARTED_FMT;
    private static final java.lang.String PROFILER_FINISHED_FMT;
    private final android.content.Context mContext;
    private final com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver mBroadcastReceiver;
    private final com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter mIntentFilter;
    private boolean mIsTracing;
    private boolean mShowToasts;
    private java.lang.String mFilename;
    private long mNativeTracingControllerAndroid;

    public void <init>(android.content.Context)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        android.content.Context r1;
        com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver $r2;
        com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts> = 1;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext> = r1;

        $r2 = new com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver;

        specialinvoke $r2.<com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver: void <init>(com.android.org.chromium.content.browser.TracingControllerAndroid)>(r0);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver mBroadcastReceiver> = $r2;

        $r3 = new com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter;

        specialinvoke $r3.<com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter: void <init>(android.content.Context)>(r1);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter mIntentFilter> = $r3;

        return;
    }

    public android.content.BroadcastReceiver getBroadcastReceiver()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver $r1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $r1 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: com.android.org.chromium.content.browser.TracingControllerAndroid$TracingBroadcastReceiver mBroadcastReceiver>;

        return $r1;
    }

    public android.content.IntentFilter getIntentFilter()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter $r1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $r1 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: com.android.org.chromium.content.browser.TracingControllerAndroid$TracingIntentFilter mIntentFilter>;

        return $r1;
    }

    public void registerReceiver(android.content.Context)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        android.content.Context r1;
        android.content.BroadcastReceiver $r2;
        android.content.IntentFilter $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.BroadcastReceiver getBroadcastReceiver()>();

        $r3 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.IntentFilter getIntentFilter()>();

        virtualinvoke r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r2, $r3);

        return;
    }

    public void unregisterReceiver(android.content.Context)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        android.content.Context r1;
        android.content.BroadcastReceiver $r2;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.BroadcastReceiver getBroadcastReceiver()>();

        virtualinvoke r1.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r2);

        return;
    }

    public boolean isTracing()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $z0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mIsTracing>;

        return $z0;
    }

    public java.lang.String getOutputPath()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $r1 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename>;

        return $r1;
    }

    private static java.lang.String generateTracingFilePath()
    {
        java.lang.String r0, $r4, $r8, $r14, $r15, $r16;
        java.text.SimpleDateFormat r1, $r5;
        java.io.File r2, r3, $r9;
        boolean $z0;
        java.util.Locale $r6;
        java.util.TimeZone $r7;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.util.Date $r12;

        r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r4 = "mounted";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = new java.text.SimpleDateFormat;

        $r6 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd-HHmmss", $r6);

        r1 = $r5;

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r7);

        $r8 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        r2 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r8);

        $r9 = new java.io.File;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chrome-profile-results-");

        $r12 = new java.util.Date;

        specialinvoke $r12.<java.util.Date: void <init>()>();

        $r14 = virtualinvoke r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r16);

        r3 = $r9;

        $r15 = virtualinvoke r3.<java.io.File: java.lang.String getPath()>();

        return $r15;
    }

    public boolean startTracing(boolean, java.lang.String, boolean)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        boolean z0, z1, $z2;
        java.lang.String r1, r2, $r4;
        int $i0;
        android.content.Context $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts> = z0;

        r2 = staticinvoke <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String generateTracingFilePath()>();

        if r2 != null goto label1;

        $r3 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $i0 = <com.android.org.chromium.content.R$string: int profiler_no_storage_toast>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>($i0);

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void logAndToastError(java.lang.String)>($r4);

     label1:
        $z2 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean startTracing(java.lang.String,boolean,java.lang.String,boolean)>(r2, z0, r1, z1);

        return $z2;
    }

    private void initializeNativeControllerIfNeeded()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l2 = specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long nativeInit()>();

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid> = $l2;

     label1:
        return;
    }

    public boolean startTracing(java.lang.String, boolean, java.lang.String, boolean)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String r1, r2, $r4, $r7, $r10, $r13;
        boolean z0, z1, $z2, $z3;
        long $l0;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r5, $r8, $r9, $r11;
        int $i1, $i2;
        android.content.Context $r6, $r12;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        z1 := @parameter3: boolean;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts> = z0;

        $z2 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean isTracing()>();

        if $z2 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TracingControllerAndroid", "Received startTracing, but we\'re already tracing");

        return 0;

     label1:
        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void initializeNativeControllerIfNeeded()>();

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $z3 = specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean nativeStartTracing(long,java.lang.String,boolean)>($l0, r2, z1);

        if $z3 != 0 goto label2;

        $r12 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $i2 = <com.android.org.chromium.content.R$string: int profiler_error_toast>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.String getString(int)>($i2);

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void logAndToastError(java.lang.String)>($r13);

        return 0;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r2;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Profiler started: %s", $r3);

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void logForProfiler(java.lang.String)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $i1 = <com.android.org.chromium.content.R$string: int profiler_started_toast>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int)>($i1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void showToast(java.lang.String)>($r10);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename> = r1;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mIsTracing> = 1;

        return 1;
    }

    public void stopTracing()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        boolean $z0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean isTracing()>();

        if $z0 == 0 goto label1;

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $r1 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename>;

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void nativeStopTracing(long,java.lang.String)>($l0, $r1);

     label1:
        return;
    }

    protected void onTracingStopped()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        boolean $z0;
        java.lang.Object[] $r1, $r4;
        java.lang.String $r2, $r3, $r5, $r7;
        int $i0;
        android.content.Context $r6;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $z0 = virtualinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean isTracing()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TracingControllerAndroid", "Received onTracingStopped, but we aren\'t tracing");

        return;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Profiler finished. Results are in %s.", $r1);

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void logForProfiler(java.lang.String)>($r3);

        $r6 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $i0 = <com.android.org.chromium.content.R$string: int profiler_stopped_toast>;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename>;

        $r4[0] = $r5;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>($i0, $r4);

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void showToast(java.lang.String)>($r7);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mIsTracing> = 0;

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String mFilename> = null;

        return;
    }

    public void getCategoryGroups()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        long $l0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void initializeNativeControllerIfNeeded()>();

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $z0 = specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean nativeGetKnownCategoryGroupsAsync(long)>($l0);

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TracingControllerAndroid", "Unable to fetch tracing record groups list.");

     label1:
        return;
    }

    protected void finalize()
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $l0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid>;

        specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: void nativeDestroy(long)>($l2);

        r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: long mNativeTracingControllerAndroid> = 0L;

     label1:
        return;
    }

    private void logAndToastError(java.lang.String)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String r1;
        boolean $z0;
        android.content.Context $r2;
        android.widget.Toast $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TracingControllerAndroid", r1);

        $z0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, r1, 0);

        virtualinvoke $r3.<android.widget.Toast: void show()>();

     label1:
        return;
    }

    private void logForProfiler(java.lang.String)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String r1;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TracingControllerAndroid", r1);

        return;
    }

    private void showToast(java.lang.String)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String r1;
        boolean $z0;
        android.content.Context $r2;
        android.widget.Toast $r3;

        r0 := @this: com.android.org.chromium.content.browser.TracingControllerAndroid;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: boolean mShowToasts>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: android.content.Context mContext>;

        $r3 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r2, r1, 0);

        virtualinvoke $r3.<android.widget.Toast: void show()>();

     label1:
        return;
    }

    private native long nativeInit();

    private native void nativeDestroy(long);

    private native boolean nativeStartTracing(long, java.lang.String, boolean);

    private native void nativeStopTracing(long, java.lang.String);

    private native boolean nativeGetKnownCategoryGroupsAsync(long);

    private native java.lang.String nativeGetDefaultCategories();

    static java.lang.String access$000(com.android.org.chromium.content.browser.TracingControllerAndroid)
    {
        com.android.org.chromium.content.browser.TracingControllerAndroid r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.TracingControllerAndroid;

        $r1 = specialinvoke r0.<com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String nativeGetDefaultCategories()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String PROFILER_FINISHED_FMT> = "Profiler finished. Results are in %s.";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String PROFILER_STARTED_FMT> = "Profiler started: %s";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String DEFAULT_CHROME_CATEGORIES_PLACE_HOLDER> = "_DEFAULT_CHROME_CATEGORIES";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String RECORD_CONTINUOUSLY_EXTRA> = "continuous";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String CATEGORIES_EXTRA> = "categories";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String FILE_EXTRA> = "file";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String ACTION_LIST_CATEGORIES> = "GPU_PROFILER_LIST_CATEGORIES";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String ACTION_STOP> = "GPU_PROFILER_STOP";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String ACTION_START> = "GPU_PROFILER_START";

        <com.android.org.chromium.content.browser.TracingControllerAndroid: java.lang.String TAG> = "TracingControllerAndroid";

        return;
    }
}
