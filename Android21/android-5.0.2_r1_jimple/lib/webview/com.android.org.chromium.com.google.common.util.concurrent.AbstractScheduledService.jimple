public abstract class com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService extends java.lang.Object implements com.android.org.chromium.com.google.common.util.concurrent.Service
{
    private static final java.util.logging.Logger logger;
    private final com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate;

    public void <init>()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService$1 $r1;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService$1;

        specialinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService$1: void <init>(com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService)>(r0);

        r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate> = $r1;

        return;
    }

    protected abstract void runOneIteration() throws java.lang.Exception;

    protected abstract void startUp() throws java.lang.Exception;

    protected abstract void shutDown() throws java.lang.Exception;

    protected abstract com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler();

    protected java.util.concurrent.ScheduledExecutorService executor()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        java.util.concurrent.ScheduledExecutorService $r1;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>();

        return $r1;
    }

    public java.lang.String toString()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;
        com.android.org.chromium.com.google.common.util.concurrent.Service$State $r6;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r6 = virtualinvoke r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.Service$State state()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture start()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture start()>();

        return $r2;
    }

    public final com.android.org.chromium.com.google.common.util.concurrent.Service$State startAndWait()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        com.android.org.chromium.com.google.common.util.concurrent.Service$State $r2;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: com.android.org.chromium.com.google.common.util.concurrent.Service$State startAndWait()>();

        return $r2;
    }

    public final boolean isRunning()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $z0 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: boolean isRunning()>();

        return $z0;
    }

    public final com.android.org.chromium.com.google.common.util.concurrent.Service$State state()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        com.android.org.chromium.com.google.common.util.concurrent.Service$State $r2;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: com.android.org.chromium.com.google.common.util.concurrent.Service$State state()>();

        return $r2;
    }

    public final com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture stop()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: com.android.org.chromium.com.google.common.util.concurrent.ListenableFuture stop()>();

        return $r2;
    }

    public final com.android.org.chromium.com.google.common.util.concurrent.Service$State stopAndWait()
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;
        com.android.org.chromium.com.google.common.util.concurrent.Service$State $r2;

        r0 := @this: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        $r2 = virtualinvoke $r1.<com.android.org.chromium.com.google.common.util.concurrent.AbstractService: com.android.org.chromium.com.google.common.util.concurrent.Service$State stopAndWait()>();

        return $r2;
    }

    static java.util.logging.Logger access$200()
    {
        java.util.logging.Logger $r0;

        $r0 = <com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: java.util.logging.Logger logger>;

        return $r0;
    }

    static com.android.org.chromium.com.google.common.util.concurrent.AbstractService access$400(com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService)
    {
        com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService r0;
        com.android.org.chromium.com.google.common.util.concurrent.AbstractService $r1;

        r0 := @parameter0: com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService;

        $r1 = r0.<com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: com.android.org.chromium.com.google.common.util.concurrent.AbstractService delegate>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/android/org/chromium/com/google/common/util/concurrent/AbstractScheduledService";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.android.org.chromium.com.google.common.util.concurrent.AbstractScheduledService: java.util.logging.Logger logger> = $r2;

        return;
    }
}
