class com.android.org.chromium.content.browser.MediaResourceGetter extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA;
    private final android.media.MediaMetadataRetriever mRetriever;

    void <init>()
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r1;
        android.media.MediaMetadataRetriever $r2;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata;

        specialinvoke $r1.<com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata: void <init>(int,int,int,boolean)>(0, 0, 0, 0);

        r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA> = $r1;

        $r2 = new android.media.MediaMetadataRetriever;

        specialinvoke $r2.<android.media.MediaMetadataRetriever: void <init>()>();

        r0.<com.android.org.chromium.content.browser.MediaResourceGetter: android.media.MediaMetadataRetriever mRetriever> = $r2;

        return;
    }

    private static com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extractMediaMetadata(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, r3;
        com.android.org.chromium.content.browser.MediaResourceGetter $r4;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = new com.android.org.chromium.content.browser.MediaResourceGetter;

        specialinvoke $r4.<com.android.org.chromium.content.browser.MediaResourceGetter: void <init>()>();

        $r5 = virtualinvoke $r4.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extract(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>(r0, r1, r2, r3);

        return $r5;
    }

    private static com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extractMediaMetadataFromFd(int, long, long)
    {
        int i0;
        long l1, l2;
        com.android.org.chromium.content.browser.MediaResourceGetter $r0;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r0 = new com.android.org.chromium.content.browser.MediaResourceGetter;

        specialinvoke $r0.<com.android.org.chromium.content.browser.MediaResourceGetter: void <init>()>();

        $r1 = virtualinvoke $r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extract(int,long,long)>(i0, l1, l2);

        return $r1;
    }

    com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extract(int, long, long)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        int i0, $i3;
        long l1, l2;
        java.lang.String $r1;
        boolean $z0;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r2, $r3;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $i3 = <android.os.Build$VERSION: int SDK_INT>;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.MediaResourceGetter: boolean androidDeviceOk(java.lang.String,int)>($r1, $i3);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

        return $r3;

     label1:
        virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: void configure(int,long,long)>(i0, l1, l2);

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata doExtractMetadata()>();

        return $r2;
    }

    com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata extract(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        android.content.Context r1;
        java.lang.String r2, r3, r4, $r5;
        int $i0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r6, $r7, $r8;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = <android.os.Build: java.lang.String MODEL>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.MediaResourceGetter: boolean androidDeviceOk(java.lang.String,int)>($r5, $i0);

        if $z0 != 0 goto label1;

        $r8 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

        return $r8;

     label1:
        $z1 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: boolean configure(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        if $z1 != 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaResourceGetter", "Unable to configure metadata extractor");

        $r7 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

        return $r7;

     label2:
        $r6 = specialinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata doExtractMetadata()>();

        return $r6;
    }

    private com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata doExtractMetadata()
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String r1, r3, $r6, $r7, $r10, $r12, $r15, $r22, $r28, $r34, r38;
        int i0, i10, i11;
        boolean z1;
        com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata $r8, $r14, $r16, $r18, $r20, $r26, $r33, $r37, r39;
        java.lang.StringBuilder $r9, $r11, $r13, $r19, $r23, $r24, $r25, $r29, $r30, $r31, $r35, $r36;
        java.lang.RuntimeException $r17, r40;
        java.lang.NumberFormatException $r21, $r27, $r32;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

     label01:
        r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String extractMetadata(int)>(9);

        if r1 != null goto label03;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "missing duration metadata");

        $r18 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label02:
        return $r18;

     label03:
        i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label04:
        goto label07;

     label05:
        $r27 := @caughtexception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("non-numeric duration: ");

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", $r28);

        $r33 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label06:
        return $r33;

     label07:
        i11 = 0;

        i0 = 0;

        $r6 = "yes";

        $r7 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String extractMetadata(int)>(17);

        z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if z1 == 0 goto label08;

        $r15 = "resource has video";

        goto label09;

     label08:
        $r15 = "resource doesn\'t have video";

     label09:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", $r15);

        if z1 == 0 goto label21;

        r3 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String extractMetadata(int)>(18);

        if r3 != null goto label11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "missing video width metadata");

        $r16 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label10:
        return $r16;

     label11:
        i11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

     label12:
        goto label15;

     label13:
        $r32 := @caughtexception;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("non-numeric width: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", $r34);

        $r37 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label14:
        return $r37;

     label15:
        r38 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String extractMetadata(int)>(19);

        if r38 != null goto label17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "missing video height metadata");

        $r14 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label16:
        return $r14;

     label17:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r38);

     label18:
        goto label21;

     label19:
        $r21 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("non-numeric height: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r38);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", $r22);

        $r26 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

     label20:
        return $r26;

     label21:
        $r8 = new com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata;

        specialinvoke $r8.<com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata: void <init>(int,int,int,boolean)>(i10, i11, i0, 1);

        r39 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("extracted valid metadata: ");

        $r10 = virtualinvoke r39.<com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", $r12);

     label22:
        return r39;

     label23:
        $r17 := @caughtexception;

        r40 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaResourceGetter", "Unable to extract medata", r40);

        $r20 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: com.android.org.chromium.content.browser.MediaResourceGetter$MediaMetadata EMPTY_METADATA>;

        return $r20;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch java.lang.NumberFormatException from label17 to label18 with label19;
        catch java.lang.RuntimeException from label01 to label02 with label23;
        catch java.lang.RuntimeException from label03 to label06 with label23;
        catch java.lang.RuntimeException from label07 to label10 with label23;
        catch java.lang.RuntimeException from label11 to label14 with label23;
        catch java.lang.RuntimeException from label15 to label16 with label23;
        catch java.lang.RuntimeException from label17 to label20 with label23;
        catch java.lang.RuntimeException from label21 to label22 with label23;
    }

    boolean configure(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        android.content.Context r1;
        java.lang.String r2, r3, r4, $r10, $r11, r18, r19;
        java.net.URI r5;
        java.lang.IllegalArgumentException r6, $r15;
        java.io.File r7;
        java.lang.RuntimeException r8, r9, $r16, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.HashMap $r12, r20;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

     label01:
        r5 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r2);

     label02:
        goto label04;

     label03:
        $r15 := @caughtexception;

        r6 = $r15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaResourceGetter", "Cannot parse uri.", r6);

        return 0;

     label04:
        r18 = virtualinvoke r5.<java.net.URI: java.lang.String getScheme()>();

        if r18 == null goto label05;

        $z2 = virtualinvoke r18.<java.lang.String: boolean equals(java.lang.Object)>("file");

        if $z2 == 0 goto label10;

     label05:
        $r10 = virtualinvoke r5.<java.net.URI: java.lang.String getPath()>();

        r7 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.io.File uriToFile(java.lang.String)>($r10);

        $z0 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label06;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaResourceGetter", "File does not exist.");

        return 0;

     label06:
        $z1 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: boolean filePathAcceptable(java.io.File)>(r7);

        if $z1 != 0 goto label07;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaResourceGetter", "Refusing to read from unsafe file location.");

        return 0;

     label07:
        $r11 = virtualinvoke r7.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: void configure(java.lang.String)>($r11);

     label08:
        return 1;

     label09:
        $r16 := @caughtexception;

        r8 = $r16;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaResourceGetter", "Error configuring data source", r8);

        return 0;

     label10:
        r19 = virtualinvoke r5.<java.net.URI: java.lang.String getHost()>();

        $z3 = specialinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: boolean isLoopbackAddress(java.lang.String)>(r19);

        if $z3 != 0 goto label11;

        $z6 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: boolean isNetworkReliable(android.content.Context)>(r1);

        if $z6 != 0 goto label11;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "non-file URI can\'t be read due to unsuitable network conditions");

        return 0;

     label11:
        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        r20 = $r12;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z4 != 0 goto label12;

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", r3);

     label12:
        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z5 != 0 goto label13;

        interfaceinvoke r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", r4);

     label13:
        virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: void configure(java.lang.String,java.util.Map)>(r2, r20);

     label14:
        return 1;

     label15:
        $r17 := @caughtexception;

        r9 = $r17;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaResourceGetter", "Error configuring data source", r9);

        return 0;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.RuntimeException from label07 to label08 with label09;
        catch java.lang.RuntimeException from label13 to label14 with label15;
    }

    boolean isNetworkReliable(android.content.Context)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        android.content.Context r1;
        java.lang.Integer r2;
        int $i0, $i1;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: android.content.Context;

        $i0 = virtualinvoke r1.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_NETWORK_STATE");

        if $i0 == 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "permission denied to access network state");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.Integer getNetworkType(android.content.Context)>(r1);

        if r2 != null goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        tableswitch($i1)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label3;
            default: goto label4;
        };

     label3:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", "ethernet/wifi connection detected");

        return 1;

     label4:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", "no ethernet/wifi connection detected");

        return 0;
    }

    private boolean isLoopbackAddress(java.lang.String)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("localhost");

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("127.0.0.1");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("[::1]");

        if $z3 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    boolean filePathAcceptable(java.io.File)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.io.File r1;
        java.lang.String r2, r5, $r7, $r11;
        java.util.Iterator r4;
        java.util.List $r6, r14;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.Object $r12;
        boolean $z1, $z2;
        java.io.IOException $r13;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.io.File;

     label1:
        r2 = virtualinvoke r1.<java.io.File: java.lang.String getCanonicalPath()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "canonicalization of file path failed");

        return 0;

     label4:
        $r6 = specialinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.util.List getRawAcceptableDirectories()>();

        r14 = specialinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.util.List canonicalize(java.util.List)>($r6);

        $r7 = virtualinvoke r0.<com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String getExternalStorageDirectory()>();

        interfaceinvoke r14.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("canonicalized file path: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", $r11);

        r4 = interfaceinvoke r14.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r12 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r12;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r5);

        if $z2 == 0 goto label6;

        return 1;

     label6:
        goto label5;

     label7:
        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static boolean androidDeviceOk(java.lang.String, int)
    {
        java.lang.String r0, $r1;
        int i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = "GT-I9100";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contentEquals(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        if i0 < 16 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    java.io.File uriToFile(java.lang.String)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.Integer getNetworkType(android.content.Context)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        android.content.Context r1;
        android.net.ConnectivityManager r2;
        android.net.NetworkInfo r3;
        java.lang.Object $r4;
        int $i0;
        java.lang.Integer $r5;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        r2 = (android.net.ConnectivityManager) $r4;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "no connectivity manager available");

        return null;

     label1:
        r3 = virtualinvoke r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if r3 != null goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaResourceGetter", "no active network");

        return null;

     label2:
        $i0 = virtualinvoke r3.<android.net.NetworkInfo: int getType()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r5;
    }

    private java.util.List getRawAcceptableDirectories()
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.util.ArrayList r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("/mnt/sdcard/");

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>("/sdcard/");

        return r1;
    }

    private java.util.List canonicalize(java.util.List)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.util.List r1;
        java.util.ArrayList r2, $r5;
        java.util.Iterator r3;
        java.lang.String r4, $r8;
        int $i0;
        boolean $z0;
        java.lang.Object $r6;
        java.io.File $r7;
        java.io.IOException $r9;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.util.List;

        $r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r5;

     label1:
        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.io.File: java.lang.String getCanonicalPath()>();

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return r2;

     label4:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaResourceGetter", "canonicalization of file path failed");

        return r2;

        catch java.io.IOException from label1 to label3 with label4;
    }

    java.lang.String getExternalStorageDirectory()
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        $r1 = staticinvoke <com.android.org.chromium.base.PathUtils: java.lang.String getExternalStorageDirectory()>();

        return $r1;
    }

    void configure(int, long, long)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        int i0;
        long l1, l2;
        android.os.ParcelFileDescriptor r1;
        java.io.IOException r2, r4, $r8, $r13;
        java.lang.Throwable r3, $r7;
        android.media.MediaMetadataRetriever $r5;
        java.io.FileDescriptor $r6;
        java.lang.StringBuilder $r9, $r10, $r12, $r14, $r15, $r16;
        java.lang.String $r11, $r17;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

     label01:
        $r5 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: android.media.MediaMetadataRetriever mRetriever>;

        $r6 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r5.<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>($r6, l1, l2);

     label02:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label03:
        goto label10;

     label04:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close file descriptor: ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaResourceGetter", $r11);

        goto label10;

     label05:
        $r7 := @caughtexception;

        r3 = $r7;

     label06:
        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label07:
        goto label09;

     label08:
        $r13 := @caughtexception;

        r4 = $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to close file descriptor: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaResourceGetter", $r17);

     label09:
        throw r3;

     label10:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    void configure(java.lang.String, java.util.Map)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String r1;
        java.util.Map r2;
        android.media.MediaMetadataRetriever $r3;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        $r3 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: android.media.MediaMetadataRetriever mRetriever>;

        virtualinvoke $r3.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>(r1, r2);

        return;
    }

    void configure(java.lang.String)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        java.lang.String r1;
        android.media.MediaMetadataRetriever $r2;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: android.media.MediaMetadataRetriever mRetriever>;

        virtualinvoke $r2.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>(r1);

        return;
    }

    java.lang.String extractMetadata(int)
    {
        com.android.org.chromium.content.browser.MediaResourceGetter r0;
        int i0;
        android.media.MediaMetadataRetriever $r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.chromium.content.browser.MediaResourceGetter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.org.chromium.content.browser.MediaResourceGetter: android.media.MediaMetadataRetriever mRetriever>;

        $r2 = virtualinvoke $r1.<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>(i0);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.MediaResourceGetter: java.lang.String TAG> = "MediaResourceGetter";

        return;
    }
}
