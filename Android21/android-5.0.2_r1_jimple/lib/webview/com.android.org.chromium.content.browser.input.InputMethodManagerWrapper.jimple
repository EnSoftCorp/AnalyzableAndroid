public class com.android.org.chromium.content.browser.input.InputMethodManagerWrapper extends java.lang.Object
{
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.content.Context r1;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.content.Context mContext> = r1;

        return;
    }

    private android.view.inputmethod.InputMethodManager getInputMethodManager()
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        $r1 = r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        return $r3;
    }

    public void restartInput(android.view.View)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>(r1);

        return;
    }

    public void showSoftInput(android.view.View, int, android.os.ResultReceiver)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        int i0;
        android.os.ResultReceiver r2;
        android.view.inputmethod.InputMethodManager $r3;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        $r3 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>(r1, i0, r2);

        return;
    }

    public boolean isActive(android.view.View)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        $z0 = virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>(r1);

        return $z0;
    }

    public boolean hideSoftInputFromWindow(android.os.IBinder, int, android.os.ResultReceiver)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.os.IBinder r1;
        int i0;
        android.os.ResultReceiver r2;
        android.view.inputmethod.InputMethodManager $r3;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        $r3 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        $z0 = virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>(r1, i0, r2);

        return $z0;
    }

    public void updateSelection(android.view.View, int, int, int, int)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        int i0, i1, i2, i3;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }

    public boolean isWatchingCursor(android.view.View)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        $z0 = virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>(r1);

        return $z0;
    }

    public void updateCursor(android.view.View, int, int, int, int)
    {
        com.android.org.chromium.content.browser.input.InputMethodManagerWrapper r0;
        android.view.View r1;
        int i0, i1, i2, i3;
        android.view.inputmethod.InputMethodManager $r2;

        r0 := @this: com.android.org.chromium.content.browser.input.InputMethodManagerWrapper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.input.InputMethodManagerWrapper: android.view.inputmethod.InputMethodManager getInputMethodManager()>();

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>(r1, i0, i1, i2, i3);

        return;
    }
}
