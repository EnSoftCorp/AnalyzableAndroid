public class com.android.org.chromium.android_webview.ClientCertLookupTable extends java.lang.Object
{
    private final java.util.Map mCerts;
    private final java.util.Set mDenieds;

    public void clear()
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        $r1 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Map mCerts>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        $r2 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Set mDenieds>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        return;
    }

    public void <init>()
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.util.HashMap $r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Map mCerts> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Set mDenieds> = $r2;

        return;
    }

    public void allow(java.lang.String, int, com.android.org.chromium.net.AndroidPrivateKey, byte[][])
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.lang.String r1, r4;
        int i0;
        com.android.org.chromium.net.AndroidPrivateKey r2;
        byte[][] r3;
        com.android.org.chromium.android_webview.ClientCertLookupTable$Cert $r5;
        java.util.Map $r6;
        java.util.Set $r8;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.org.chromium.net.AndroidPrivateKey;

        r3 := @parameter3: byte[][];

        r4 = staticinvoke <com.android.org.chromium.android_webview.ClientCertLookupTable: java.lang.String hostAndPort(java.lang.String,int)>(r1, i0);

        $r6 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Map mCerts>;

        $r5 = new com.android.org.chromium.android_webview.ClientCertLookupTable$Cert;

        specialinvoke $r5.<com.android.org.chromium.android_webview.ClientCertLookupTable$Cert: void <init>(com.android.org.chromium.net.AndroidPrivateKey,byte[][])>(r2, r3);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, $r5);

        $r8 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Set mDenieds>;

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r4);

        return;
    }

    public void deny(java.lang.String, int)
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.lang.String r1, r2;
        int i0;
        java.util.Map $r3;
        java.util.Set $r5;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <com.android.org.chromium.android_webview.ClientCertLookupTable: java.lang.String hostAndPort(java.lang.String,int)>(r1, i0);

        $r3 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Map mCerts>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r5 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Set mDenieds>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return;
    }

    public com.android.org.chromium.android_webview.ClientCertLookupTable$Cert getCertData(java.lang.String, int)
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.lang.String r1, $r3;
        int i0;
        java.util.Map $r2;
        java.lang.Object $r4;
        com.android.org.chromium.android_webview.ClientCertLookupTable$Cert $r5;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Map mCerts>;

        $r3 = staticinvoke <com.android.org.chromium.android_webview.ClientCertLookupTable: java.lang.String hostAndPort(java.lang.String,int)>(r1, i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.android.org.chromium.android_webview.ClientCertLookupTable$Cert) $r4;

        return $r5;
    }

    public boolean isDenied(java.lang.String, int)
    {
        com.android.org.chromium.android_webview.ClientCertLookupTable r0;
        java.lang.String r1, $r3;
        int i0;
        java.util.Set $r2;
        boolean $z0;

        r0 := @this: com.android.org.chromium.android_webview.ClientCertLookupTable;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.org.chromium.android_webview.ClientCertLookupTable: java.util.Set mDenieds>;

        $r3 = staticinvoke <com.android.org.chromium.android_webview.ClientCertLookupTable: java.lang.String hostAndPort(java.lang.String,int)>(r1, i0);

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

        return $z0;
    }

    private static java.lang.String hostAndPort(java.lang.String, int)
    {
        java.lang.String r0, $r5;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
