public class com.android.org.chromium.content.browser.ResourceExtractor extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static final java.lang.String LAST_LANGUAGE;
    private static final java.lang.String PAK_FILENAMES;
    private static final java.lang.String ICU_DATA_FILENAME;
    private static java.lang.String[] sMandatoryPaks;
    private static boolean sExtractImplicitLocalePak;
    private final android.content.Context mContext;
    private com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask;
    private static com.android.org.chromium.content.browser.ResourceExtractor sInstance;
    static final boolean $assertionsDisabled;

    public static com.android.org.chromium.content.browser.ResourceExtractor get(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.content.browser.ResourceExtractor $r1, $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        if $r1 != null goto label1;

        $r3 = new com.android.org.chromium.content.browser.ResourceExtractor;

        specialinvoke $r3.<com.android.org.chromium.content.browser.ResourceExtractor: void <init>(android.content.Context)>(r0);

        <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance> = $r3;

     label1:
        $r2 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        return $r2;
    }

    public static transient void setMandatoryPaksToExtract(java.lang.String[])
    {
        java.lang.String[] r0;
        boolean $z0;
        com.android.org.chromium.content.browser.ResourceExtractor $r1, $r2;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r3;
        java.lang.AssertionError $r4;

        r0 := @parameter0: java.lang.String[];

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        if $r1 == null goto label1;

        $r2 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        $r3 = $r2.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r3 == null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must be called before startExtractingResources is called");

        throw $r4;

     label1:
        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks> = r0;

        return;
    }

    public static void setExtractImplicitLocaleForTesting(boolean)
    {
        boolean z0, $z1;
        com.android.org.chromium.content.browser.ResourceExtractor $r0, $r1;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r2;
        java.lang.AssertionError $r3;

        z0 := @parameter0: boolean;

        $z1 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r0 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        if $r0 == null goto label1;

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor sInstance>;

        $r2 = $r1.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r2 == null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("Must be called before startExtractingResources is called");

        throw $r3;

     label1:
        <com.android.org.chromium.content.browser.ResourceExtractor: boolean sExtractImplicitLocalePak> = z0;

        return;
    }

    private void <init>(android.content.Context)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        android.content.Context r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext> = $r2;

        return;
    }

    public void waitForCompletion()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        boolean $z0, $z1;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r2, $r4;
        java.lang.AssertionError $r5;
        java.util.concurrent.CancellationException $r6;
        java.lang.InterruptedException $r7;
        java.util.concurrent.ExecutionException $r8;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: boolean shouldSkipPakExtraction()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r4 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r4 != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r2 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        virtualinvoke $r2.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: java.lang.Object get()>();

     label3:
        goto label7;

     label4:
        $r6 := @caughtexception;

        specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles()>();

        goto label7;

     label6:
        $r7 := @caughtexception;

        specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles()>();

     label7:
        return;

        catch java.util.concurrent.CancellationException from label2 to label3 with label4;
        catch java.util.concurrent.ExecutionException from label2 to label3 with label5;
        catch java.lang.InterruptedException from label2 to label3 with label6;
    }

    public void startExtractingResources()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask $r1, $r2, $r5;
        boolean $z0;
        java.lang.Void[] $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        if $r1 == null goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.android.org.chromium.content.browser.ResourceExtractor: boolean shouldSkipPakExtraction()>();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = new com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask;

        specialinvoke $r2.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: void <init>(com.android.org.chromium.content.browser.ResourceExtractor)>(r0);

        r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask> = $r2;

        $r5 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask mExtractTask>;

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r5.<com.android.org.chromium.content.browser.ResourceExtractor$ExtractTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

        return;
    }

    private java.io.File getAppDataDir()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File $r1;
        android.content.Context $r2;
        java.lang.String $r3;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = new java.io.File;

        $r2 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        $r3 = staticinvoke <com.android.org.chromium.base.PathUtils: java.lang.String getDataDirectory(android.content.Context)>($r2);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        return $r1;
    }

    private java.io.File getOutputDir()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File $r1, $r2;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = new java.io.File;

        $r2 = specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getAppDataDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "paks");

        return $r1;
    }

    private void deleteFiles()
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File r1, r2, r5, $r6, $r7;
        java.io.File[] r3, r4;
        int i0, i1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15;
        java.lang.String $r11, $r12, $r16, $r17;

        r0 := @this: com.android.org.chromium.content.browser.ResourceExtractor;

        $r6 = new java.io.File;

        $r7 = specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getAppDataDir()>();

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "icudtl.dat");

        r1 = $r6;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z3 != 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove the icudata ");

        $r16 = virtualinvoke r1.<java.io.File: java.lang.String getName()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourceExtractor", $r17);

     label1:
        r2 = specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getOutputDir()>();

        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

        r3 = virtualinvoke r2.<java.io.File: java.io.File[] listFiles()>();

        r4 = r3;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r5 = r4[i1];

        $z2 = virtualinvoke r5.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to remove existing resource ");

        $r11 = virtualinvoke r5.<java.io.File: java.lang.String getName()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ResourceExtractor", $r12);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    private static boolean shouldSkipPakExtraction()
    {
        boolean $z0, $z1, $z2;
        java.lang.String[] $r0, $r1, $r4;
        int $i0;
        java.lang.String $r2, $r3;
        java.lang.AssertionError $r5;

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r0 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        $i0 = lengthof $r0;

        if $i0 != 1 goto label2;

        $r3 = "";

        $r1 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        $r2 = $r1[0];

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    static java.io.File access$000(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getOutputDir()>();

        return $r1;
    }

    static void access$100(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: void deleteFiles()>();

        return;
    }

    static android.content.Context access$200(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = r0.<com.android.org.chromium.content.browser.ResourceExtractor: android.content.Context mContext>;

        return $r1;
    }

    static java.lang.String[] access$300()
    {
        java.lang.String[] $r0;

        $r0 = <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks>;

        return $r0;
    }

    static boolean access$400()
    {
        boolean $z0;

        $z0 = <com.android.org.chromium.content.browser.ResourceExtractor: boolean sExtractImplicitLocalePak>;

        return $z0;
    }

    static java.io.File access$500(com.android.org.chromium.content.browser.ResourceExtractor)
    {
        com.android.org.chromium.content.browser.ResourceExtractor r0;
        java.io.File $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.ResourceExtractor;

        $r1 = specialinvoke r0.<com.android.org.chromium.content.browser.ResourceExtractor: java.io.File getAppDataDir()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String ICU_DATA_FILENAME> = "icudtl.dat";

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String PAK_FILENAMES> = "Pak filenames";

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String LAST_LANGUAGE> = "Last language";

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String LOGTAG> = "ResourceExtractor";

        $r0 = class "com/android/org/chromium/content/browser/ResourceExtractor";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.ResourceExtractor: boolean $assertionsDisabled> = $z1;

        <com.android.org.chromium.content.browser.ResourceExtractor: java.lang.String[] sMandatoryPaks> = null;

        <com.android.org.chromium.content.browser.ResourceExtractor: boolean sExtractImplicitLocalePak> = 1;

        return;
    }
}
