class com.android.org.chromium.base.TraceEvent$BasicLooperMonitor extends java.lang.Object implements android.util.Printer
{
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        com.android.org.chromium.base.TraceEvent$BasicLooperMonitor r0;

        r0 := @this: com.android.org.chromium.base.TraceEvent$BasicLooperMonitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void println(java.lang.String)
    {
        com.android.org.chromium.base.TraceEvent$BasicLooperMonitor r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.org.chromium.base.TraceEvent$BasicLooperMonitor;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(">");

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.org.chromium.base.TraceEvent$BasicLooperMonitor: void beginHandling(java.lang.String)>(r1);

        goto label3;

     label1:
        $z1 = <com.android.org.chromium.base.TraceEvent$BasicLooperMonitor: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("<");

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        virtualinvoke r0.<com.android.org.chromium.base.TraceEvent$BasicLooperMonitor: void endHandling(java.lang.String)>(r1);

     label3:
        return;
    }

    void beginHandling(java.lang.String)
    {
        com.android.org.chromium.base.TraceEvent$BasicLooperMonitor r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.base.TraceEvent$BasicLooperMonitor;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.org.chromium.base.TraceEvent: boolean access$000()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void access$100()>();

     label1:
        return;
    }

    void endHandling(java.lang.String)
    {
        com.android.org.chromium.base.TraceEvent$BasicLooperMonitor r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.base.TraceEvent$BasicLooperMonitor;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.org.chromium.base.TraceEvent: boolean access$000()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.android.org.chromium.base.TraceEvent: void access$200()>();

     label1:
        return;
    }

    void <init>(com.android.org.chromium.base.TraceEvent$1)
    {
        com.android.org.chromium.base.TraceEvent$BasicLooperMonitor r0;
        com.android.org.chromium.base.TraceEvent$1 r1;

        r0 := @this: com.android.org.chromium.base.TraceEvent$BasicLooperMonitor;

        r1 := @parameter0: com.android.org.chromium.base.TraceEvent$1;

        specialinvoke r0.<com.android.org.chromium.base.TraceEvent$BasicLooperMonitor: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/base/TraceEvent";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.base.TraceEvent$BasicLooperMonitor: boolean $assertionsDisabled> = $z1;

        return;
    }
}
