public class com.android.org.chromium.content.browser.crypto.ByteArrayGenerator extends java.lang.Object
{

    public void <init>()
    {
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator r0;

        r0 := @this: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] getBytes(int) throws java.io.IOException, java.security.GeneralSecurityException
    {
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator r0;
        int i0, $i1, $i2;
        java.io.FileInputStream r1, $r5;
        byte[] r2, r3;
        java.lang.Throwable r4, $r7;
        java.security.GeneralSecurityException $r6;

        r0 := @this: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator;

        i0 := @parameter0: int;

        r1 = null;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>("/dev/urandom");

        r1 = $r5;

        r2 = newarray (byte)[i0];

        $i1 = lengthof r2;

        $i2 = virtualinvoke r1.<java.io.FileInputStream: int read(byte[])>(r2);

        if $i1 == $i2 goto label2;

        $r6 = new java.security.GeneralSecurityException;

        specialinvoke $r6.<java.security.GeneralSecurityException: void <init>(java.lang.String)>("Not enough random data available");

        throw $r6;

     label2:
        r3 = r2;

     label3:
        if r1 == null goto label4;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label4:
        return r3;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        if r1 == null goto label7;

        virtualinvoke r1.<java.io.FileInputStream: void close()>();

     label7:
        throw r4;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
