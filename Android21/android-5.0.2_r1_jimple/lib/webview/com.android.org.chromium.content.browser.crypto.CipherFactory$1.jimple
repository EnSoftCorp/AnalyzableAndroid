class com.android.org.chromium.content.browser.crypto.CipherFactory$1 extends java.lang.Object implements java.util.concurrent.Callable
{
    final com.android.org.chromium.content.browser.crypto.CipherFactory this$0;

    void <init>(com.android.org.chromium.content.browser.crypto.CipherFactory)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory$1 r0;
        com.android.org.chromium.content.browser.crypto.CipherFactory r1;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory$1;

        r1 := @parameter0: com.android.org.chromium.content.browser.crypto.CipherFactory;

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory$1: com.android.org.chromium.content.browser.crypto.CipherFactory this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData call()
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory$1 r0;
        byte[] r1, r2;
        javax.crypto.KeyGenerator r4;
        com.android.org.chromium.content.browser.crypto.CipherFactory $r5, $r7;
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator $r6, $r8;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData $r9;
        javax.crypto.SecretKey $r10;
        java.lang.Exception $r11;
        java.security.GeneralSecurityException $r12;
        java.security.SecureRandom r13;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory$1;

     label1:
        $r5 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory$1: com.android.org.chromium.content.browser.crypto.CipherFactory this$0>;

        $r6 = staticinvoke <com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator access$200(com.android.org.chromium.content.browser.crypto.CipherFactory)>($r5);

        r1 = virtualinvoke $r6.<com.android.org.chromium.content.browser.crypto.ByteArrayGenerator: byte[] getBytes(int)>(16);

        $r7 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory$1: com.android.org.chromium.content.browser.crypto.CipherFactory this$0>;

        $r8 = staticinvoke <com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator access$200(com.android.org.chromium.content.browser.crypto.CipherFactory)>($r7);

        r2 = virtualinvoke $r8.<com.android.org.chromium.content.browser.crypto.ByteArrayGenerator: byte[] getBytes(int)>(16);

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CipherFactory", "Couldn\'t get generator data.");

        return null;

     label4:
        r13 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>("SHA1PRNG");

        virtualinvoke r13.<java.security.SecureRandom: void setSeed(byte[])>(r1);

        r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(128, r13);

        $r9 = new com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData;

        $r10 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        specialinvoke $r9.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: void <init>(java.security.Key,byte[])>($r10, r2);

     label5:
        return $r9;

     label6:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CipherFactory", "Couldn\'t get generator instances.");

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory$1 r0;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData $r1;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory$1;

        $r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory$1: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData call()>();

        return $r1;
    }
}
