public class com.android.org.chromium.ui.gfx.ViewConfigurationHelper extends java.lang.Object
{
    private static final float MIN_SCALING_SPAN_MM;
    private static final float MIN_SCALING_TOUCH_MAJOR_DIP;
    private final android.content.Context mAppContext;
    private android.view.ViewConfiguration mViewConfiguration;
    static final boolean $assertionsDisabled;

    private void <init>(android.content.Context)
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.content.Context r1, $r2, $r3;
        android.view.ViewConfiguration $r4;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext> = $r2;

        $r3 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext>;

        $r4 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r3);

        r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration> = $r4;

        return;
    }

    private void registerListener()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper$1 $r1;
        android.content.Context $r2;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r2 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext>;

        $r1 = new com.android.org.chromium.ui.gfx.ViewConfigurationHelper$1;

        specialinvoke $r1.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper$1: void <init>(com.android.org.chromium.ui.gfx.ViewConfigurationHelper)>(r0);

        virtualinvoke $r2.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>($r1);

        return;
    }

    private void updateNativeViewConfigurationIfNecessary()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.view.ViewConfiguration r1, $r3;
        android.content.Context $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r2 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext>;

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $r3 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration>;

        if $r3 != r1 goto label1;

        return;

     label1:
        r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration> = r1;

        $i0 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledMaximumFlingVelocity()>();

        $i1 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledMinimumFlingVelocity()>();

        $i2 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledTouchSlop()>();

        $i3 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledDoubleTapSlop()>();

        $i4 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledMinScalingSpan()>();

        $i5 = specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: int getScaledMinScalingTouchMajor()>();

        specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: void nativeUpdateSharedViewConfiguration(int,int,int,int,int,int)>($i0, $i1, $i2, $i3, $i4, $i5);

        return;
    }

    private static int getDoubleTapTimeout()
    {
        int $i0;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getDoubleTapTimeout()>();

        return $i0;
    }

    private static int getLongPressTimeout()
    {
        int $i0;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        return $i0;
    }

    private static int getTapTimeout()
    {
        int $i0;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        return $i0;
    }

    private static float getScrollFriction()
    {
        float $f0;

        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

        return $f0;
    }

    private int getScaledMaximumFlingVelocity()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.view.ViewConfiguration $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r1 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration>;

        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        return $i0;
    }

    private int getScaledMinimumFlingVelocity()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.view.ViewConfiguration $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r1 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration>;

        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        return $i0;
    }

    private int getScaledTouchSlop()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.view.ViewConfiguration $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r1 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration>;

        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        return $i0;
    }

    private int getScaledDoubleTapSlop()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.view.ViewConfiguration $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r1 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.view.ViewConfiguration mViewConfiguration>;

        $i0 = virtualinvoke $r1.<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>();

        return $i0;
    }

    private int getScaledMinScalingSpan()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.content.res.Resources r1;
        int i0, $i1, $i2;
        android.content.Context $r3;
        android.content.res.Resources$NotFoundException $r4;
        boolean $z0;
        android.util.DisplayMetrics $r5;
        float $f0;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r3 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_minScalingSpan", "dimen", "android");

        if i0 != 0 goto label1;

        i0 = <com.android.org.chromium.ui.R$dimen: int config_min_scaling_span>;

     label1:
        $i1 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(i0);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        $z0 = <com.android.org.chromium.ui.gfx.ViewConfigurationHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("MinScalingSpan resource lookup failed.");

        throw $r6;

     label4:
        $r5 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(5, 27.0F, $r5);

        $i2 = (int) $f0;

        return $i2;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private int getScaledMinScalingTouchMajor()
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;
        android.content.res.Resources r1;
        int i0, $i1, $i2;
        android.content.Context $r3;
        android.content.res.Resources$NotFoundException $r4;
        boolean $z0;
        android.util.DisplayMetrics $r5;
        float $f0;
        java.lang.AssertionError $r6;

        r0 := @this: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        $r3 = r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: android.content.Context mAppContext>;

        r1 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke r1.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>("config_minScalingTouchMajor", "dimen", "android");

        if i0 != 0 goto label1;

        i0 = <com.android.org.chromium.ui.R$dimen: int config_min_scaling_touch_major>;

     label1:
        $i1 = virtualinvoke r1.<android.content.res.Resources: int getDimensionPixelSize(int)>(i0);

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        $z0 = <com.android.org.chromium.ui.gfx.ViewConfigurationHelper: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("MinScalingTouchMajor resource lookup failed.");

        throw $r6;

     label4:
        $r5 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 48.0F, $r5);

        $i2 = (int) $f0;

        return $i2;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private static com.android.org.chromium.ui.gfx.ViewConfigurationHelper createWithListener(android.content.Context)
    {
        android.content.Context r0;
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        specialinvoke $r2.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: void <init>(android.content.Context)>(r0);

        r1 = $r2;

        specialinvoke r1.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: void registerListener()>();

        return r1;
    }

    private native void nativeUpdateSharedViewConfiguration(int, int, int, int, int, int);

    static void access$000(com.android.org.chromium.ui.gfx.ViewConfigurationHelper)
    {
        com.android.org.chromium.ui.gfx.ViewConfigurationHelper r0;

        r0 := @parameter0: com.android.org.chromium.ui.gfx.ViewConfigurationHelper;

        specialinvoke r0.<com.android.org.chromium.ui.gfx.ViewConfigurationHelper: void updateNativeViewConfigurationIfNecessary()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.org.chromium.ui.gfx.ViewConfigurationHelper: float MIN_SCALING_TOUCH_MAJOR_DIP> = 48.0F;

        <com.android.org.chromium.ui.gfx.ViewConfigurationHelper: float MIN_SCALING_SPAN_MM> = 27.0F;

        $r0 = class "com/android/org/chromium/ui/gfx/ViewConfigurationHelper";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.ui.gfx.ViewConfigurationHelper: boolean $assertionsDisabled> = $z1;

        return;
    }
}
