class com.android.org.chromium.content.browser.input.GamepadDevice extends java.lang.Object
{
    private int mDeviceId;
    private int mDeviceIndex;
    private long mTimestamp;
    private boolean mIsStandardGamepad;
    private final float[] mAxisValues;
    private final float[] mButtonsValues;
    private final float[] mRawButtons;
    private final float[] mRawAxes;
    private java.lang.String mDeviceName;
    private int[] mAxes;
    static final boolean $assertionsDisabled;

    void <init>(int, android.view.InputDevice)
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8;
        android.view.InputDevice r1;
        java.util.List r2;
        java.util.Iterator r3;
        android.view.InputDevice$MotionRange r4;
        float[] $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        long $l4;
        int[] $r10, $r13;
        boolean $z0, $z1;
        java.lang.Object $r11;
        java.lang.AssertionError $r12;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.InputDevice;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = newarray (float)[4];

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mAxisValues> = $r5;

        $r6 = newarray (float)[17];

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mButtonsValues> = $r6;

        $r7 = newarray (float)[256];

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawButtons> = $r7;

        $r8 = newarray (float)[256];

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawAxes> = $r8;

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int mDeviceIndex> = i0;

        $i3 = virtualinvoke r1.<android.view.InputDevice: int getId()>();

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int mDeviceId> = $i3;

        $r9 = virtualinvoke r1.<android.view.InputDevice: java.lang.String getName()>();

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: java.lang.String mDeviceName> = $r9;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: long mTimestamp> = $l4;

        r2 = virtualinvoke r1.<android.view.InputDevice: java.util.List getMotionRanges()>();

        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        $r10 = newarray (int)[$i5];

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int[] mAxes> = $r10;

        i1 = 0;

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.view.InputDevice$MotionRange) $r11;

        $i6 = virtualinvoke r4.<android.view.InputDevice$MotionRange: int getSource()>();

        $i7 = $i6 & 16;

        if $i7 == 0 goto label3;

        i2 = virtualinvoke r4.<android.view.InputDevice$MotionRange: int getAxis()>();

        $z1 = <com.android.org.chromium.content.browser.input.GamepadDevice: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i2 < 256 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $r13 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int[] mAxes>;

        $i8 = i1;

        i1 = i1 + 1;

        $r13[$i8] = i2;

     label3:
        goto label1;

     label4:
        return;
    }

    public void updateButtonsAndAxesMapping()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        java.lang.String $r1;
        float[] $r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $r5 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mAxisValues>;

        $r4 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mButtonsValues>;

        $r3 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawAxes>;

        $r2 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawButtons>;

        $r1 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: java.lang.String mDeviceName>;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadMappings: boolean mapToStandardGamepad(float[],float[],float[],float[],java.lang.String)>($r5, $r4, $r3, $r2, $r1);

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: boolean mIsStandardGamepad> = $z0;

        return;
    }

    public int getId()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $i0 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int mDeviceId>;

        return $i0;
    }

    public boolean isStandardGamepad()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        boolean $z0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $z0 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: boolean mIsStandardGamepad>;

        return $z0;
    }

    public java.lang.String getName()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $r1 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: java.lang.String mDeviceName>;

        return $r1;
    }

    public int getIndex()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        int $i0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $i0 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int mDeviceIndex>;

        return $i0;
    }

    public long getTimestamp()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        long $l0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $l0 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: long mTimestamp>;

        return $l0;
    }

    public float[] getAxes()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        float[] $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $r1 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mAxisValues>;

        return $r1;
    }

    public float[] getButtons()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        float[] $r1;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $r1 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mButtonsValues>;

        return $r1;
    }

    public void clearData()
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        float[] $r1, $r2, $r3, $r4;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        $r1 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mAxisValues>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r1, 0.0F);

        $r2 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawAxes>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r2, 0.0F);

        $r3 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mButtonsValues>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r3, 0.0F);

        $r4 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawButtons>;

        staticinvoke <java.util.Arrays: void fill(float[],float)>($r4, 0.0F);

        return;
    }

    public boolean handleKeyEvent(android.view.KeyEvent)
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        android.view.KeyEvent r1;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        long $l3;
        float[] $r2, $r3;
        java.lang.AssertionError $r4;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadList: boolean isGamepadEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = <com.android.org.chromium.content.browser.input.GamepadDevice: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if i0 < 256 goto label2;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label2:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i1 != 0 goto label3;

        $r3 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawButtons>;

        $r3[i0] = 1.0F;

        goto label4;

     label3:
        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i2 != 1 goto label4;

        $r2 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawButtons>;

        $r2[i0] = 0.0F;

     label4:
        $l3 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: long mTimestamp> = $l3;

        return 1;
    }

    public boolean handleMotionEvent(android.view.MotionEvent)
    {
        com.android.org.chromium.content.browser.input.GamepadDevice r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2;
        boolean $z0;
        int[] $r2, $r3;
        long $l3;
        float[] $r4;
        float $f0;

        r0 := @this: com.android.org.chromium.content.browser.input.GamepadDevice;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = staticinvoke <com.android.org.chromium.content.browser.input.GamepadList: boolean isGamepadEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        $r2 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int[] mAxes>;

        $i2 = lengthof $r2;

        if i0 >= $i2 goto label3;

        $r3 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: int[] mAxes>;

        i1 = $r3[i0];

        $r4 = r0.<com.android.org.chromium.content.browser.input.GamepadDevice: float[] mRawAxes>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(i1);

        $r4[i1] = $f0;

        i0 = i0 + 1;

        goto label2;

     label3:
        $l3 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        r0.<com.android.org.chromium.content.browser.input.GamepadDevice: long mTimestamp> = $l3;

        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/content/browser/input/GamepadDevice";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.content.browser.input.GamepadDevice: boolean $assertionsDisabled> = $z1;

        return;
    }
}
