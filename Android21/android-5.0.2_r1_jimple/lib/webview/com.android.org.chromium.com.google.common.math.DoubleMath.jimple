public final class com.android.org.chromium.com.google.common.math.DoubleMath extends java.lang.Object
{
    private static final double MIN_INT_AS_DOUBLE;
    private static final double MAX_INT_AS_DOUBLE;
    private static final double MIN_LONG_AS_DOUBLE;
    private static final double MAX_LONG_AS_DOUBLE_PLUS_ONE;
    private static final double LN_2;
    static final int MAX_FACTORIAL;
    static final double[] EVERY_SIXTEENTH_FACTORIAL;

    public void <init>()
    {
        com.android.org.chromium.com.google.common.math.DoubleMath r0;

        r0 := @this: com.android.org.chromium.com.google.common.math.DoubleMath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static double roundIntermediate(double, java.math.RoundingMode)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9;
        java.math.RoundingMode r0;
        boolean $z0, $z1, $z2, $z3;
        int[] $r1;
        int $i0, $i1;
        byte $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.lang.AssertionError $r2;
        java.lang.ArithmeticException $r3;

        d0 := @parameter0: double;

        r0 := @parameter1: java.math.RoundingMode;

        $z0 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: boolean isFinite(double)>(d0);

        if $z0 != 0 goto label01;

        $r3 = new java.lang.ArithmeticException;

        specialinvoke $r3.<java.lang.ArithmeticException: void <init>(java.lang.String)>("input is infinite or NaN");

        throw $r3;

     label01:
        $r1 = <com.android.org.chromium.com.google.common.math.DoubleMath$1: int[] $SwitchMap$java$math$RoundingMode>;

        $i0 = virtualinvoke r0.<java.math.RoundingMode: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label10;
            case 6: goto label13;
            case 7: goto label14;
            case 8: goto label18;
            default: goto label25;
        };

     label02:
        $z1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isMathematicalInteger(double)>(d0);

        staticinvoke <com.android.org.chromium.com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>($z1);

        return d0;

     label03:
        $b8 = d0 cmpl 0.0;

        if $b8 < 0 goto label04;

        $d8 = d0;

        goto label05;

     label04:
        $d8 = staticinvoke <java.lang.Math: double floor(double)>(d0);

     label05:
        return $d8;

     label06:
        $b7 = d0 cmpl 0.0;

        if $b7 < 0 goto label07;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        goto label08;

     label07:
        $d7 = d0;

     label08:
        return $d7;

     label09:
        return d0;

     label10:
        $b6 = d0 cmpl 0.0;

        if $b6 < 0 goto label11;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        goto label12;

     label11:
        $d6 = staticinvoke <java.lang.Math: double floor(double)>(d0);

     label12:
        return $d6;

     label13:
        $d4 = staticinvoke <java.lang.Math: double rint(double)>(d0);

        return $d4;

     label14:
        $z3 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isMathematicalInteger(double)>(d0);

        if $z3 == 0 goto label15;

        return d0;

     label15:
        $b5 = d0 cmpl 0.0;

        if $b5 < 0 goto label16;

        $d5 = d0 + 0.5;

        goto label17;

     label16:
        $d5 = d0 - 0.5;

     label17:
        return $d5;

     label18:
        $z2 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isMathematicalInteger(double)>(d0);

        if $z2 == 0 goto label19;

        return d0;

     label19:
        $b2 = d0 cmpl 0.0;

        if $b2 < 0 goto label22;

        d1 = d0 + 0.5;

        $b4 = d1 cmpl d0;

        if $b4 != 0 goto label20;

        $d3 = d0;

        goto label21;

     label20:
        $d3 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: double next(double,boolean)>(d1, 0);

     label21:
        return $d3;

     label22:
        d9 = d0 - 0.5;

        $b3 = d9 cmpl d0;

        if $b3 != 0 goto label23;

        $d2 = d0;

        goto label24;

     label23:
        $d2 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: double next(double,boolean)>(d9, 1);

     label24:
        return $d2;

     label25:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;
    }

    public static int roundToInt(double, java.math.RoundingMode)
    {
        double d0, d1;
        java.math.RoundingMode r0;
        byte $b0, $b1;
        boolean $z0, $z1, $z2;
        int $i2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.math.RoundingMode;

        d1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: double roundIntermediate(double,java.math.RoundingMode)>(d0, r0);

        $b0 = d1 cmpl -2.147483649E9;

        if $b0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $b1 = d1 cmpg 2.147483648E9;

        if $b1 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z0 = $z2 & $z1;

        staticinvoke <com.android.org.chromium.com.google.common.math.MathPreconditions: void checkInRange(boolean)>($z0);

        $i2 = (int) d1;

        return $i2;
    }

    public static long roundToLong(double, java.math.RoundingMode)
    {
        double d0, d1, $d2;
        java.math.RoundingMode r0;
        byte $b0, $b1;
        boolean $z0, $z1, $z2;
        long $l2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.math.RoundingMode;

        d1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: double roundIntermediate(double,java.math.RoundingMode)>(d0, r0);

        $d2 = -9.223372036854776E18 - d1;

        $b0 = $d2 cmpg 1.0;

        if $b0 >= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        $b1 = d1 cmpg 9.223372036854776E18;

        if $b1 >= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $z0 = $z2 & $z1;

        staticinvoke <com.android.org.chromium.com.google.common.math.MathPreconditions: void checkInRange(boolean)>($z0);

        $l2 = (long) d1;

        return $l2;
    }

    public static java.math.BigInteger roundToBigInteger(double, java.math.RoundingMode)
    {
        double d0, $d1, d2;
        java.math.RoundingMode r0;
        int i0, $i4;
        long l1, $l6;
        java.math.BigInteger r1, $r2, $r3, $r4, $r5;
        byte $b2, $b3, $b5;
        boolean $z0, $z1, $z2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.math.RoundingMode;

        d2 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: double roundIntermediate(double,java.math.RoundingMode)>(d0, r0);

        $d1 = -9.223372036854776E18 - d2;

        $b2 = $d1 cmpg 1.0;

        if $b2 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $b3 = d2 cmpg 9.223372036854776E18;

        if $b3 >= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        $z0 = $z1 & $z2;

        if $z0 == 0 goto label5;

        $l6 = (long) d2;

        $r5 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l6);

        return $r5;

     label5:
        i0 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: int getExponent(double)>(d2);

        if i0 >= 0 goto label6;

        $r3 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        return $r3;

     label6:
        l1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: long getSignificand(double)>(d2);

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);

        $i4 = i0 - 52;

        r1 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger shiftLeft(int)>($i4);

        $b5 = d2 cmpg 0.0;

        if $b5 >= 0 goto label7;

        $r4 = virtualinvoke r1.<java.math.BigInteger: java.math.BigInteger negate()>();

        goto label8;

     label7:
        $r4 = r1;

     label8:
        return $r4;
    }

    public static boolean isPowerOfTwo(double)
    {
        double d0;
        byte $b0;
        boolean $z0, $z1, $z2;
        long $l1;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: boolean isFinite(double)>(d0);

        if $z0 == 0 goto label1;

        $l1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: long getSignificand(double)>(d0);

        $z1 = staticinvoke <com.android.org.chromium.com.google.common.math.LongMath: boolean isPowerOfTwo(long)>($l1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static double log2(double)
    {
        double d0, $d1, $d2, $d3;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double log(double)>(d0);

        $d2 = <com.android.org.chromium.com.google.common.math.DoubleMath: double LN_2>;

        $d3 = $d1 / $d2;

        return $d3;
    }

    public static int log2(double, java.math.RoundingMode)
    {
        double d0, d1, $d2, $d3;
        java.math.RoundingMode r0;
        int i0, $i2, $i3, $i4, $i6, $i7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        byte $b1, $b5;
        int[] $r1;
        java.lang.AssertionError $r2;

        d0 := @parameter0: double;

        r0 := @parameter1: java.math.RoundingMode;

        $b1 = d0 cmpl 0.0;

        if $b1 <= 0 goto label01;

        $z13 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: boolean isFinite(double)>(d0);

        if $z13 == 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        staticinvoke <com.android.org.chromium.com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.Object)>($z12, "x must be positive and finite");

        i0 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: int getExponent(double)>(d0);

        $z1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: boolean isNormal(double)>(d0);

        if $z1 != 0 goto label03;

        $d3 = d0 * 4.503599627370496E15;

        $i6 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: int log2(double,java.math.RoundingMode)>($d3, r0);

        $i7 = $i6 - 52;

        return $i7;

     label03:
        $r1 = <com.android.org.chromium.com.google.common.math.DoubleMath$1: int[] $SwitchMap$java$math$RoundingMode>;

        $i2 = virtualinvoke r0.<java.math.RoundingMode: int ordinal()>();

        $i3 = $r1[$i2];

        tableswitch($i3)
        {
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            case 4: goto label09;
            case 5: goto label14;
            case 6: goto label19;
            case 7: goto label19;
            case 8: goto label19;
            default: goto label22;
        };

     label04:
        $z2 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isPowerOfTwo(double)>(d0);

        staticinvoke <com.android.org.chromium.com.google.common.math.MathPreconditions: void checkRoundingUnnecessary(boolean)>($z2);

     label05:
        z0 = 0;

        goto label23;

     label06:
        $z10 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isPowerOfTwo(double)>(d0);

        if $z10 != 0 goto label07;

        $z11 = 1;

        goto label08;

     label07:
        $z11 = 0;

     label08:
        z0 = $z11;

        goto label23;

     label09:
        if i0 >= 0 goto label10;

        $z7 = 1;

        goto label11;

     label10:
        $z7 = 0;

     label11:
        $z9 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isPowerOfTwo(double)>(d0);

        if $z9 != 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z0 = $z7 & $z8;

        goto label23;

     label14:
        if i0 < 0 goto label15;

        $z3 = 1;

        goto label16;

     label15:
        $z3 = 0;

     label16:
        $z6 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleMath: boolean isPowerOfTwo(double)>(d0);

        if $z6 != 0 goto label17;

        $z5 = 1;

        goto label18;

     label17:
        $z5 = 0;

     label18:
        z0 = $z3 & $z5;

        goto label23;

     label19:
        d1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: double scaleNormalize(double)>(d0);

        $d2 = d1 * d1;

        $b5 = $d2 cmpl 2.0;

        if $b5 <= 0 goto label20;

        $z4 = 1;

        goto label21;

     label20:
        $z4 = 0;

     label21:
        z0 = $z4;

        goto label23;

     label22:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label23:
        if z0 == 0 goto label24;

        $i4 = i0 + 1;

        goto label25;

     label24:
        $i4 = i0;

     label25:
        return $i4;
    }

    public static boolean isMathematicalInteger(double)
    {
        double d0;
        boolean $z0, $z1;
        byte $b0;
        long $l1;
        int $i2, $i3, $i4;

        d0 := @parameter0: double;

        $z0 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: boolean isFinite(double)>(d0);

        if $z0 == 0 goto label2;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $l1 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: long getSignificand(double)>(d0);

        $i2 = staticinvoke <java.lang.Long: int numberOfTrailingZeros(long)>($l1);

        $i3 = 52 - $i2;

        $i4 = staticinvoke <com.android.org.chromium.com.google.common.math.DoubleUtils: int getExponent(double)>(d0);

        if $i3 > $i4 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static double factorial(int)
    {
        int i0, i1, $i3, $i4;
        double d0, $d1, $d2, $d3;
        double[] $r0;

        i0 := @parameter0: int;

        staticinvoke <com.android.org.chromium.com.google.common.math.MathPreconditions: int checkNonNegative(java.lang.String,int)>("n", i0);

        if i0 <= 170 goto label1;

        return #Infinity;

     label1:
        d0 = 1.0;

        $i3 = i0 & -16;

        i1 = 1 + $i3;

     label2:
        if i1 > i0 goto label3;

        $d3 = (double) i1;

        d0 = d0 * $d3;

        i1 = i1 + 1;

        goto label2;

     label3:
        $r0 = <com.android.org.chromium.com.google.common.math.DoubleMath: double[] EVERY_SIXTEENTH_FACTORIAL>;

        $i4 = i0 >> 4;

        $d1 = $r0[$i4];

        $d2 = d0 * $d1;

        return $d2;
    }

    static void <clinit>()
    {
        double $d0;
        double[] $r0;

        <com.android.org.chromium.com.google.common.math.DoubleMath: int MAX_FACTORIAL> = 170;

        <com.android.org.chromium.com.google.common.math.DoubleMath: double MAX_LONG_AS_DOUBLE_PLUS_ONE> = 9.223372036854776E18;

        <com.android.org.chromium.com.google.common.math.DoubleMath: double MIN_LONG_AS_DOUBLE> = -9.223372036854776E18;

        <com.android.org.chromium.com.google.common.math.DoubleMath: double MAX_INT_AS_DOUBLE> = 2.147483647E9;

        <com.android.org.chromium.com.google.common.math.DoubleMath: double MIN_INT_AS_DOUBLE> = -2.147483648E9;

        $d0 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        <com.android.org.chromium.com.google.common.math.DoubleMath: double LN_2> = $d0;

        $r0 = newarray (double)[11];

        $r0[0] = 1.0;

        $r0[1] = 2.0922789888E13;

        $r0[2] = 2.631308369336935E35;

        $r0[3] = 1.2413915592536073E61;

        $r0[4] = 1.2688693218588417E89;

        $r0[5] = 7.156945704626381E118;

        $r0[6] = 9.916779348709496E149;

        $r0[7] = 1.974506857221074E182;

        $r0[8] = 3.856204823625804E215;

        $r0[9] = 5.5502938327393044E249;

        $r0[10] = 4.7147236359920616E284;

        <com.android.org.chromium.com.google.common.math.DoubleMath: double[] EVERY_SIXTEENTH_FACTORIAL> = $r0;

        return;
    }
}
