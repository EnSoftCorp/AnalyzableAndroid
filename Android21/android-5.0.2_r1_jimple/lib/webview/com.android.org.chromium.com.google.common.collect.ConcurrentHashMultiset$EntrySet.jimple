class com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet extends com.android.org.chromium.com.google.common.collect.AbstractMultiset$EntrySet
{
    final com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0;

    private void <init>(com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset)
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset r1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        r1 := @parameter0: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset;

        r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0> = r1;

        specialinvoke r0.<com.android.org.chromium.com.google.common.collect.AbstractMultiset$EntrySet: void <init>(com.android.org.chromium.com.google.common.collect.AbstractMultiset)>(r1);

        return;
    }

    com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset multiset()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset $r1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        $r1 = r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset this$0>;

        return $r1;
    }

    public java.lang.Object[] toArray()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        java.util.List $r1;
        java.lang.Object[] $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        $r1 = specialinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: java.util.List snapshot()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        java.lang.Object[] r1, $r3;
        java.util.List $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        r1 := @parameter0: java.lang.Object[];

        $r2 = specialinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: java.util.List snapshot()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r1);

        return $r3;
    }

    private java.util.List snapshot()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        java.util.ArrayList r1;
        int $i0;
        java.util.Iterator $r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        $i0 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: int size()>();

        r1 = staticinvoke <com.android.org.chromium.com.google.common.collect.Lists: java.util.ArrayList newArrayListWithExpectedSize(int)>($i0);

        $r2 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: java.util.Iterator iterator()>();

        staticinvoke <com.android.org.chromium.com.google.common.collect.Iterators: boolean addAll(java.util.Collection,java.util.Iterator)>(r1, $r2);

        return r1;
    }

    public boolean remove(java.lang.Object)
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        java.lang.Object r1, r3;
        com.android.org.chromium.com.google.common.collect.Multiset$Entry r2;
        int i0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset r4;
        boolean $z0, $z1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.org.chromium.com.google.common.collect.Multiset$Entry;

        if $z0 == 0 goto label1;

        r2 = (com.android.org.chromium.com.google.common.collect.Multiset$Entry) r1;

        r3 = interfaceinvoke r2.<com.android.org.chromium.com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        i0 = interfaceinvoke r2.<com.android.org.chromium.com.google.common.collect.Multiset$Entry: int getCount()>();

        if i0 == 0 goto label1;

        r4 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset multiset()>();

        $z1 = interfaceinvoke r4.<com.android.org.chromium.com.google.common.collect.Multiset: boolean setCount(java.lang.Object,int,int)>(r3, i0, 0);

        return $z1;

     label1:
        return 0;
    }

    volatile com.android.org.chromium.com.google.common.collect.Multiset multiset()
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset $r1;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        $r1 = virtualinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset multiset()>();

        return $r1;
    }

    void <init>(com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset, com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$1)
    {
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet r0;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset r1;
        com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$1 r2;

        r0 := @this: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet;

        r1 := @parameter0: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset;

        r2 := @parameter1: com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$1;

        specialinvoke r0.<com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset$EntrySet: void <init>(com.android.org.chromium.com.google.common.collect.ConcurrentHashMultiset)>(r1);

        return;
    }
}
