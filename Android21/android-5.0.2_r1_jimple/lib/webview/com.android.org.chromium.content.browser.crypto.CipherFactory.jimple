public class com.android.org.chromium.content.browser.crypto.CipherFactory extends java.lang.Object
{
    private static final java.lang.String TAG;
    static final int NUM_BYTES;
    static final java.lang.String BUNDLE_IV;
    static final java.lang.String BUNDLE_KEY;
    private final java.lang.Object mDataLock;
    private java.util.concurrent.FutureTask mDataGenerator;
    private com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData;
    private com.android.org.chromium.content.browser.crypto.ByteArrayGenerator mRandomNumberProvider;

    public static com.android.org.chromium.content.browser.crypto.CipherFactory getInstance()
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory $r0;

        $r0 = staticinvoke <com.android.org.chromium.content.browser.crypto.CipherFactory$LazyHolder: com.android.org.chromium.content.browser.crypto.CipherFactory access$100()>();

        return $r0;
    }

    public javax.crypto.Cipher getCipher(int)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        int i0;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData r1;
        javax.crypto.Cipher r2;
        javax.crypto.spec.IvParameterSpec $r3;
        byte[] $r4;
        java.security.Key $r5;
        java.security.GeneralSecurityException $r6;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData getCipherData(boolean)>(1);

        if r1 == null goto label4;

     label1:
        r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r5 = r1.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: java.security.Key key>;

        $r3 = new javax.crypto.spec.IvParameterSpec;

        $r4 = r1.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: byte[] iv>;

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, $r5, $r3);

     label2:
        return r2;

     label3:
        $r6 := @caughtexception;

     label4:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CipherFactory", "Error in creating cipher instance.");

        return null;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
    }

    com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData getCipherData(boolean)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        boolean z0;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData r1, $r4, $r5, $r9;
        java.lang.InterruptedException r2, $r14;
        java.lang.Throwable r3, $r10;
        java.util.concurrent.FutureTask $r6;
        java.lang.Object $r7, $r8, r16;
        java.util.concurrent.ExecutionException $r11, r15;
        java.lang.RuntimeException $r12, $r13;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        if $r4 != null goto label11;

        if z0 == 0 goto label11;

        virtualinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: void triggerKeyGeneration()>();

     label01:
        $r6 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.util.concurrent.FutureTask mDataGenerator>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.FutureTask: java.lang.Object get()>();

        r1 = (com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData) $r7;

     label02:
        goto label05;

     label03:
        $r14 := @caughtexception;

        r2 = $r14;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r13;

     label04:
        $r11 := @caughtexception;

        r15 = $r11;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r12;

     label05:
        $r8 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.Object mDataLock>;

        r16 = $r8;

        entermonitor $r8;

     label06:
        $r9 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        if $r9 != null goto label07;

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData> = r1;

     label07:
        exitmonitor r16;

     label08:
        goto label11;

     label09:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r16;

     label10:
        throw r3;

     label11:
        $r5 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        return $r5;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.util.concurrent.ExecutionException from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private java.util.concurrent.Callable createGeneratorCallable()
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        com.android.org.chromium.content.browser.crypto.CipherFactory$1 $r1;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        $r1 = new com.android.org.chromium.content.browser.crypto.CipherFactory$1;

        specialinvoke $r1.<com.android.org.chromium.content.browser.crypto.CipherFactory$1: void <init>(com.android.org.chromium.content.browser.crypto.CipherFactory)>(r0);

        return $r1;
    }

    public void triggerKeyGeneration()
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        java.lang.Object r1, $r4;
        java.lang.Throwable r2, $r10;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData $r3;
        java.util.concurrent.FutureTask $r5, $r6, $r8;
        java.util.concurrent.Callable $r7;
        java.util.concurrent.Executor $r9;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        $r3 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.Object mDataLock>;

        r1 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.util.concurrent.FutureTask mDataGenerator>;

        if $r5 != null goto label3;

        $r6 = new java.util.concurrent.FutureTask;

        $r7 = specialinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.util.concurrent.Callable createGeneratorCallable()>();

        specialinvoke $r6.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>($r7);

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.util.concurrent.FutureTask mDataGenerator> = $r6;

        $r9 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r8 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.util.concurrent.FutureTask mDataGenerator>;

        interfaceinvoke $r9.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r8);

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void saveToBundle(android.os.Bundle)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        android.os.Bundle r1;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData r2;
        byte[] r3, $r5, $r6;
        java.security.Key $r4;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData getCipherData(boolean)>(0);

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r2.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: java.security.Key key>;

        r3 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>();

        if r3 == null goto label2;

        $r5 = r2.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: byte[] iv>;

        if $r5 == null goto label2;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("com.android.org.chromium.content.browser.crypto.CipherFactory.KEY", r3);

        $r6 = r2.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: byte[] iv>;

        virtualinvoke r1.<android.os.Bundle: void putByteArray(java.lang.String,byte[])>("com.android.org.chromium.content.browser.crypto.CipherFactory.IV", $r6);

     label2:
        return;
    }

    public boolean restoreFromBundle(android.os.Bundle)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        android.os.Bundle r1;
        byte[] r2, r3, $r13;
        javax.crypto.spec.SecretKeySpec r4, $r7;
        java.lang.Object r5, $r8;
        java.lang.Throwable r6, $r16;
        com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData $r9, $r10, $r12, $r14;
        java.security.Key $r11;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        r1 := @parameter0: android.os.Bundle;

        if r1 != null goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("com.android.org.chromium.content.browser.crypto.CipherFactory.KEY");

        r3 = virtualinvoke r1.<android.os.Bundle: byte[] getByteArray(java.lang.String)>("com.android.org.chromium.content.browser.crypto.CipherFactory.IV");

        if r2 == null goto label02;

        if r3 != null goto label03;

     label02:
        return 0;

     label03:
        $r7 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, "AES");

        r4 = $r7;

        $r8 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.Object mDataLock>;

        r5 = $r8;

        entermonitor $r8;

     label04:
        $r9 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        if $r9 != null goto label06;

        $r14 = new com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData;

        specialinvoke $r14.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: void <init>(java.security.Key,byte[])>(r4, r3);

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData> = $r14;

        exitmonitor r5;

     label05:
        return 1;

     label06:
        $r10 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        $r11 = $r10.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: java.security.Key key>;

        $z0 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label08;

        $r12 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData mData>;

        $r13 = $r12.<com.android.org.chromium.content.browser.crypto.CipherFactory$CipherData: byte[] iv>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, r3);

        if $z1 == 0 goto label08;

        exitmonitor r5;

     label07:
        return 1;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CipherFactory", "Attempted to restore different cipher data.");

        exitmonitor r5;

     label09:
        goto label12;

     label10:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r5;

     label11:
        throw r6;

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CipherFactory", "Error in restoring the key from the bundle.");

     label14:
        return 0;

        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.IllegalArgumentException from label03 to label05 with label13;
        catch java.lang.IllegalArgumentException from label06 to label07 with label13;
        catch java.lang.IllegalArgumentException from label08 to label12 with label13;
    }

    void setRandomNumberProviderForTests(com.android.org.chromium.content.browser.crypto.ByteArrayGenerator)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator r1;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        r1 := @parameter0: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator;

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator mRandomNumberProvider> = r1;

        return;
    }

    private void <init>()
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        java.lang.Object $r1;
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator $r2;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.Object mDataLock> = $r1;

        $r2 = new com.android.org.chromium.content.browser.crypto.ByteArrayGenerator;

        specialinvoke $r2.<com.android.org.chromium.content.browser.crypto.ByteArrayGenerator: void <init>()>();

        r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator mRandomNumberProvider> = $r2;

        return;
    }

    void <init>(com.android.org.chromium.content.browser.crypto.CipherFactory$1)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        com.android.org.chromium.content.browser.crypto.CipherFactory$1 r1;

        r0 := @this: com.android.org.chromium.content.browser.crypto.CipherFactory;

        r1 := @parameter0: com.android.org.chromium.content.browser.crypto.CipherFactory$1;

        specialinvoke r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: void <init>()>();

        return;
    }

    static com.android.org.chromium.content.browser.crypto.ByteArrayGenerator access$200(com.android.org.chromium.content.browser.crypto.CipherFactory)
    {
        com.android.org.chromium.content.browser.crypto.CipherFactory r0;
        com.android.org.chromium.content.browser.crypto.ByteArrayGenerator $r1;

        r0 := @parameter0: com.android.org.chromium.content.browser.crypto.CipherFactory;

        $r1 = r0.<com.android.org.chromium.content.browser.crypto.CipherFactory: com.android.org.chromium.content.browser.crypto.ByteArrayGenerator mRandomNumberProvider>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.String BUNDLE_KEY> = "com.android.org.chromium.content.browser.crypto.CipherFactory.KEY";

        <com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.String BUNDLE_IV> = "com.android.org.chromium.content.browser.crypto.CipherFactory.IV";

        <com.android.org.chromium.content.browser.crypto.CipherFactory: int NUM_BYTES> = 16;

        <com.android.org.chromium.content.browser.crypto.CipherFactory: java.lang.String TAG> = "CipherFactory";

        return;
    }
}
