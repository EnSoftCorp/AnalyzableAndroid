class com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener extends java.lang.Object implements android.media.MediaDrm$OnEventListener
{
    static final boolean $assertionsDisabled;
    final com.android.org.chromium.media.MediaDrmBridge this$0;

    private void <init>(com.android.org.chromium.media.MediaDrmBridge)
    {
        com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener r0;
        com.android.org.chromium.media.MediaDrmBridge r1;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener;

        r1 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onEvent(android.media.MediaDrm, byte[], int, int, byte[])
    {
        com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener r0;
        android.media.MediaDrm r1;
        byte[] r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.nio.ByteBuffer r4;
        java.lang.Integer r5;
        java.lang.String r6, $r22;
        android.media.NotProvisionedException r7, $r25;
        com.android.org.chromium.media.MediaDrmBridge $r8, $r9, $r13, $r14, $r15, $r18, $r19, $r21, $r26;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r10, $r17;
        java.lang.Object $r11, $r16;
        java.lang.AssertionError $r12;
        java.lang.StringBuilder $r20, $r23, $r24;
        android.media.MediaDrm$KeyRequest r27;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener;

        r1 := @parameter0: android.media.MediaDrm;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: byte[];

        if r2 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrmListener: Null session.");

        return;

     label01:
        r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r8 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $z0 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: boolean access$1200(com.android.org.chromium.media.MediaDrmBridge,java.nio.ByteBuffer)>($r8, r4);

        if $z0 != 0 goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrmListener: Invalid session.");

        return;

     label02:
        $r9 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $r10 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap access$1300(com.android.org.chromium.media.MediaDrmBridge)>($r9);

        $r11 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r5 = (java.lang.Integer) $r11;

        if r5 == null goto label03;

        $i2 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        if $i2 != 0 goto label04;

     label03:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrmListener: Invalid session ID.");

        return;

     label04:
        tableswitch(i0)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label15;
        };

     label05:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrm.EVENT_PROVISION_REQUIRED");

        goto label16;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrm.EVENT_KEY_REQUIRED");

        $r14 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $z2 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: boolean access$1400(com.android.org.chromium.media.MediaDrmBridge)>($r14);

        if $z2 == 0 goto label07;

        return;

     label07:
        $r15 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $r17 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: java.util.HashMap access$1500(com.android.org.chromium.media.MediaDrmBridge)>($r15);

        $r16 = virtualinvoke $r17.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (java.lang.String) $r16;

     label08:
        $r19 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        r27 = staticinvoke <com.android.org.chromium.media.MediaDrmBridge: android.media.MediaDrm$KeyRequest access$1600(com.android.org.chromium.media.MediaDrmBridge,java.nio.ByteBuffer,byte[],java.lang.String)>($r19, r4, r3, r6);

     label09:
        goto label11;

     label10:
        $r25 := @caughtexception;

        r7 = $r25;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaDrmBridge", "Device not provisioned", r7);

        $r26 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        staticinvoke <com.android.org.chromium.media.MediaDrmBridge: void access$1700(com.android.org.chromium.media.MediaDrmBridge)>($r26);

        return;

     label11:
        if r27 == null goto label12;

        $r21 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $i5 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        staticinvoke <com.android.org.chromium.media.MediaDrmBridge: void access$1800(com.android.org.chromium.media.MediaDrmBridge,int,android.media.MediaDrm$KeyRequest)>($r21, $i5, r27);

        goto label16;

     label12:
        $r18 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $i4 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        staticinvoke <com.android.org.chromium.media.MediaDrmBridge: void access$1900(com.android.org.chromium.media.MediaDrmBridge,int)>($r18, $i4);

        goto label16;

     label13:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrm.EVENT_KEY_EXPIRED");

        $r13 = r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: com.android.org.chromium.media.MediaDrmBridge this$0>;

        $i3 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        staticinvoke <com.android.org.chromium.media.MediaDrmBridge: void access$1900(com.android.org.chromium.media.MediaDrmBridge,int)>($r13, $i3);

        goto label16;

     label14:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MediaDrmBridge", "MediaDrm.EVENT_VENDOR_DEFINED");

        $z1 = <com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: boolean $assertionsDisabled>;

        if $z1 != 0 goto label16;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label15:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid DRM event ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaDrmBridge", $r22);

        return;

     label16:
        return;

        catch android.media.NotProvisionedException from label08 to label09 with label10;
    }

    void <init>(com.android.org.chromium.media.MediaDrmBridge, com.android.org.chromium.media.MediaDrmBridge$1)
    {
        com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener r0;
        com.android.org.chromium.media.MediaDrmBridge r1;
        com.android.org.chromium.media.MediaDrmBridge$1 r2;

        r0 := @this: com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener;

        r1 := @parameter0: com.android.org.chromium.media.MediaDrmBridge;

        r2 := @parameter1: com.android.org.chromium.media.MediaDrmBridge$1;

        specialinvoke r0.<com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: void <init>(com.android.org.chromium.media.MediaDrmBridge)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/org/chromium/media/MediaDrmBridge";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.org.chromium.media.MediaDrmBridge$MediaDrmListener: boolean $assertionsDisabled> = $z1;

        return;
    }
}
