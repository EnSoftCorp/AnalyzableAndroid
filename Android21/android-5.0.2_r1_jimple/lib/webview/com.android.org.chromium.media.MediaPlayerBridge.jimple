public class com.android.org.chromium.media.MediaPlayerBridge extends java.lang.Object
{
    private static final java.lang.String TAG;
    private com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask;
    private android.media.MediaPlayer mPlayer;
    private long mNativeMediaPlayerBridge;

    private static com.android.org.chromium.media.MediaPlayerBridge create(long)
    {
        long l0;
        com.android.org.chromium.media.MediaPlayerBridge $r0;

        l0 := @parameter0: long;

        $r0 = new com.android.org.chromium.media.MediaPlayerBridge;

        specialinvoke $r0.<com.android.org.chromium.media.MediaPlayerBridge: void <init>(long)>(l0);

        return $r0;
    }

    protected void <init>(long)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long l0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge> = l0;

        return;
    }

    protected void <init>()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected void destroy()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask $r1, $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        virtualinvoke $r2.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean cancel(boolean)>(1);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = null;

     label1:
        r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge> = 0L;

        return;
    }

    protected android.media.MediaPlayer getLocalPlayer()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1, $r2, $r3;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer>;

        if $r1 != null goto label1;

        $r3 = new android.media.MediaPlayer;

        specialinvoke $r3.<android.media.MediaPlayer: void <init>()>();

        r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer> = $r3;

     label1:
        $r2 = r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer mPlayer>;

        return $r2;
    }

    protected void setSurface(android.view.Surface)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.view.Surface r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.view.Surface;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setSurface(android.view.Surface)>(r1);

        return;
    }

    protected boolean prepareAsync()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        java.lang.IllegalStateException r1, $r3;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

     label1:
        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void prepareAsync()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaPlayerBridge", "Unable to prepare MediaPlayer.", r1);

        return 0;

     label4:
        return 1;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    protected boolean isPlaying()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        boolean $z0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $z0 = virtualinvoke $r1.<android.media.MediaPlayer: boolean isPlaying()>();

        return $z0;
    }

    protected int getVideoWidth()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getVideoWidth()>();

        return $i0;
    }

    protected int getVideoHeight()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getVideoHeight()>();

        return $i0;
    }

    protected int getCurrentPosition()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getCurrentPosition()>();

        return $i0;
    }

    protected int getDuration()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;
        int $i0;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $i0 = virtualinvoke $r1.<android.media.MediaPlayer: int getDuration()>();

        return $i0;
    }

    protected void release()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void release()>();

        return;
    }

    protected void setVolume(double)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        double d0;
        android.media.MediaPlayer $r1;
        float $f0, $f1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $f1 = (float) d0;

        $f0 = (float) d0;

        virtualinvoke $r1.<android.media.MediaPlayer: void setVolume(float,float)>($f1, $f0);

        return;
    }

    protected void start()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void start()>();

        return;
    }

    protected void pause()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void pause()>();

        return;
    }

    protected void seekTo(int) throws java.lang.IllegalStateException
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        int i0;
        android.media.MediaPlayer $r1;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r1.<android.media.MediaPlayer: void seekTo(int)>(i0);

        return;
    }

    protected boolean setDataSource(android.content.Context, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.content.Context r1;
        java.lang.String r2, r3, r4;
        boolean z0, $z1, $z2;
        android.net.Uri r5;
        java.util.HashMap r6, $r8;
        int $i0;
        android.media.MediaPlayer $r9;
        java.lang.Exception $r13;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r6 = $r8;

        if z0 == 0 goto label1;

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("x-hide-urls-from-log", "true");

     label1:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("Cookie", r3);

     label2:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z2 != 0 goto label3;

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("User-Agent", r4);

     label3:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 19 goto label4;

        virtualinvoke r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("allow-cross-domain-redirect", "false");

     label4:
        $r9 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r9.<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>(r1, r5, r6);

     label5:
        return 1;

     label6:
        $r13 := @caughtexception;

        return 0;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected boolean setDataSourceFromFd(int, long, long)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        int i0;
        long l1, l2;
        android.os.ParcelFileDescriptor r1;
        android.media.MediaPlayer $r2;
        java.io.FileDescriptor $r3;
        java.io.IOException $r4, r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

     label1:
        r1 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i0);

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        $r3 = virtualinvoke r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>($r3, l1, l2);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void close()>();

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        r9 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to set data source from file descriptor: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r8);

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected boolean setDataUriDataSource(android.content.Context, java.lang.String)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.content.Context r1;
        java.lang.String r2, r3, r4, r5, $r8, $r9;
        int i0, $i1, $i2;
        java.lang.String[] r6;
        com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask $r7, $r11, $r13, $r14;
        boolean $z0, $z1;
        java.lang.Void[] $r10;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.String;

        $r7 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        if $r7 == null goto label1;

        $r14 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        virtualinvoke $r14.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: boolean cancel(boolean)>(1);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = null;

     label1:
        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("data:");

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(44);

        if i0 != -1 goto label3;

        return 0;

     label3:
        r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(5);

        r6 = virtualinvoke r5.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i2 = lengthof r6;

        if $i2 == 2 goto label4;

        return 0;

     label4:
        $r9 = "base64";

        $r8 = r6[1];

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        $r11 = new com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask;

        specialinvoke $r11.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: void <init>(com.android.org.chromium.media.MediaPlayerBridge,android.content.Context,java.lang.String)>(r0, r1, r4);

        r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask> = $r11;

        $r13 = r0.<com.android.org.chromium.media.MediaPlayerBridge: com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask mLoadDataUriTask>;

        $r10 = newarray (java.lang.Void)[0];

        virtualinvoke $r13.<com.android.org.chromium.media.MediaPlayerBridge$LoadDataUriTask: android.os.AsyncTask execute(java.lang.Object[])>($r10);

        return 1;
    }

    protected void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnBufferingUpdateListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnBufferingUpdateListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer$OnBufferingUpdateListener)>(r1);

        return;
    }

    protected void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnCompletionListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnCompletionListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>(r1);

        return;
    }

    protected void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnErrorListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnErrorListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer$OnErrorListener)>(r1);

        return;
    }

    protected void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnPreparedListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnPreparedListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener)>(r1);

        return;
    }

    protected void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnSeekCompleteListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnSeekCompleteListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer$OnSeekCompleteListener)>(r1);

        return;
    }

    protected void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer$OnVideoSizeChangedListener r1;
        android.media.MediaPlayer $r2;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 := @parameter0: android.media.MediaPlayer$OnVideoSizeChangedListener;

        $r2 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        virtualinvoke $r2.<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer$OnVideoSizeChangedListener)>(r1);

        return;
    }

    protected com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations getAllowedOperations()
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        android.media.MediaPlayer r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.reflect.Method r2, r5, r6;
        java.lang.Object r3, $r19, $r22, $r25, $r32, $r34, $r40, $r43, $r48, $r54;
        java.lang.Class r4, $r7, $r9, $r10, $r16, $r17;
        int i0, i1, i2;
        java.lang.Class[] $r8, $r15, $r18;
        java.lang.Object[] $r11, $r29, $r30, $r37, $r38, $r41, $r45;
        java.lang.Boolean $r12, $r13, $r31, $r33, $r39, $r44, $r49, $r53;
        com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations $r14;
        java.lang.Integer $r20, $r23, $r26, $r28, $r35, $r36, $r42, $r46, $r47;
        java.lang.reflect.Field $r21, $r24, $r27;
        java.lang.StringBuilder $r50, $r52, $r55, $r56, $r57, $r59, $r61, $r63, $r65, $r68, $r69, $r70;
        java.lang.IllegalAccessException $r51, r74;
        java.lang.String $r58, $r62, $r66, $r67;
        java.lang.reflect.InvocationTargetException $r60, r73;
        java.lang.NoSuchFieldException $r64, r75;
        java.lang.NoSuchMethodException $r71, r72;

        r0 := @this: com.android.org.chromium.media.MediaPlayerBridge;

        r1 = virtualinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: android.media.MediaPlayer getLocalPlayer()>();

        z0 = 1;

        z1 = 1;

        z2 = 1;

     label01:
        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = newarray (java.lang.Class)[2];

        $r10 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r8[0] = $r10;

        $r9 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r8[1] = $r9;

        r2 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getMetadata", $r8);

        virtualinvoke r2.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r11 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r11[0] = $r12;

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r11[1] = $r13;

        r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r11);

        if r3 == null goto label11;

        r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = newarray (java.lang.Class)[1];

        $r16 = <java.lang.Integer: java.lang.Class TYPE>;

        $r15[0] = $r16;

        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("has", $r15);

        $r18 = newarray (java.lang.Class)[1];

        $r17 = <java.lang.Integer: java.lang.Class TYPE>;

        $r18[0] = $r17;

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getBoolean", $r18);

        $r21 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("PAUSE_AVAILABLE");

        $r19 = virtualinvoke $r21.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r20 = (java.lang.Integer) $r19;

        i0 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $r24 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("SEEK_FORWARD_AVAILABLE");

        $r22 = virtualinvoke $r24.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r23 = (java.lang.Integer) $r22;

        i1 = virtualinvoke $r23.<java.lang.Integer: int intValue()>();

        $r27 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("SEEK_BACKWARD_AVAILABLE");

        $r25 = virtualinvoke $r27.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $r26 = (java.lang.Integer) $r25;

        i2 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        virtualinvoke r5.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        virtualinvoke r6.<java.lang.reflect.Method: void setAccessible(boolean)>(1);

        $r29 = newarray (java.lang.Object)[1];

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r29[0] = $r28;

        $r32 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r29);

        $r31 = (java.lang.Boolean) $r32;

        $z3 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label02;

        $r45 = newarray (java.lang.Object)[1];

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r45[0] = $r46;

        $r54 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r45);

        $r53 = (java.lang.Boolean) $r54;

        $z11 = virtualinvoke $r53.<java.lang.Boolean: boolean booleanValue()>();

        if $z11 == 0 goto label03;

     label02:
        $z10 = 1;

        goto label04;

     label03:
        $z10 = 0;

     label04:
        z0 = $z10;

        $r30 = newarray (java.lang.Object)[1];

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r30[0] = $r35;

        $r34 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r30);

        $r33 = (java.lang.Boolean) $r34;

        $z4 = virtualinvoke $r33.<java.lang.Boolean: boolean booleanValue()>();

        if $z4 == 0 goto label05;

        $r41 = newarray (java.lang.Object)[1];

        $r47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r41[0] = $r47;

        $r48 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r41);

        $r49 = (java.lang.Boolean) $r48;

        $z9 = virtualinvoke $r49.<java.lang.Boolean: boolean booleanValue()>();

        if $z9 == 0 goto label06;

     label05:
        $z8 = 1;

        goto label07;

     label06:
        $z8 = 0;

     label07:
        z1 = $z8;

        $r37 = newarray (java.lang.Object)[1];

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r37[0] = $r36;

        $r40 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r37);

        $r39 = (java.lang.Boolean) $r40;

        $z5 = virtualinvoke $r39.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label08;

        $r38 = newarray (java.lang.Object)[1];

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r38[0] = $r42;

        $r43 = virtualinvoke r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, $r38);

        $r44 = (java.lang.Boolean) $r43;

        $z6 = virtualinvoke $r44.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label09;

     label08:
        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        z2 = $z7;

     label11:
        goto label16;

     label12:
        $r71 := @caughtexception;

        r72 = $r71;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find getMetadata() method: ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);

        $r67 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r67);

        goto label16;

     label13:
        $r60 := @caughtexception;

        r73 = $r60;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot invoke MediaPlayer.getMetadata() method: ");

        $r56 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r66 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r66);

        goto label16;

     label14:
        $r51 := @caughtexception;

        r74 = $r51;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot access metadata: ");

        $r59 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r58);

        goto label16;

     label15:
        $r64 := @caughtexception;

        r75 = $r64;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find matching fields in Metadata class: ");

        $r61 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MediaPlayerBridge", $r62);

     label16:
        $r14 = new com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations;

        specialinvoke $r14.<com.android.org.chromium.media.MediaPlayerBridge$AllowedOperations: void <init>(boolean,boolean,boolean)>(z0, z1, z2);

        return $r14;

        catch java.lang.NoSuchMethodException from label01 to label11 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label11 with label13;
        catch java.lang.IllegalAccessException from label01 to label11 with label14;
        catch java.lang.NoSuchFieldException from label01 to label11 with label15;
    }

    private native void nativeOnDidSetDataUriDataSource(long, boolean);

    static long access$000(com.android.org.chromium.media.MediaPlayerBridge)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long $l0;

        r0 := @parameter0: com.android.org.chromium.media.MediaPlayerBridge;

        $l0 = r0.<com.android.org.chromium.media.MediaPlayerBridge: long mNativeMediaPlayerBridge>;

        return $l0;
    }

    static void access$100(com.android.org.chromium.media.MediaPlayerBridge, long, boolean)
    {
        com.android.org.chromium.media.MediaPlayerBridge r0;
        long l0;
        boolean z0;

        r0 := @parameter0: com.android.org.chromium.media.MediaPlayerBridge;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.org.chromium.media.MediaPlayerBridge: void nativeOnDidSetDataUriDataSource(long,boolean)>(l0, z0);

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.chromium.media.MediaPlayerBridge: java.lang.String TAG> = "MediaPlayerBridge";

        return;
    }
}
