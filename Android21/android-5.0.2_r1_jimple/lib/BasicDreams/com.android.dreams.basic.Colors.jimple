public class com.android.dreams.basic.Colors extends android.service.dreams.DreamService implements android.view.TextureView$SurfaceTextureListener
{
    static final java.lang.String TAG;
    static final boolean DEBUG;
    private android.view.TextureView mTextureView;
    private android.os.HandlerThread mRendererHandlerThread;
    private android.os.Handler mRendererHandler;
    private com.android.dreams.basic.ColorsGLRenderer mRenderer;

    public void <init>()
    {
        com.android.dreams.basic.Colors r0;

        r0 := @this: com.android.dreams.basic.Colors;

        specialinvoke r0.<android.service.dreams.DreamService: void <init>()>();

        return;
    }

    public static transient void LOG(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        return;
    }

    public void onCreate()
    {
        com.android.dreams.basic.Colors r0;
        android.view.TextureView $r1, $r2;
        android.os.HandlerThread $r3, $r4, $r6, $r8;
        java.lang.String $r5;
        android.os.Handler $r7;
        android.os.Looper $r9;

        r0 := @this: com.android.dreams.basic.Colors;

        specialinvoke r0.<android.service.dreams.DreamService: void onCreate()>();

        virtualinvoke r0.<com.android.dreams.basic.Colors: void setInteractive(boolean)>(0);

        $r1 = new android.view.TextureView;

        specialinvoke $r1.<android.view.TextureView: void <init>(android.content.Context)>(r0);

        r0.<com.android.dreams.basic.Colors: android.view.TextureView mTextureView> = $r1;

        $r2 = r0.<com.android.dreams.basic.Colors: android.view.TextureView mTextureView>;

        virtualinvoke $r2.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>(r0);

        $r3 = r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread>;

        if $r3 != null goto label1;

        $r4 = new android.os.HandlerThread;

        $r5 = <com.android.dreams.basic.Colors: java.lang.String TAG>;

        specialinvoke $r4.<android.os.HandlerThread: void <init>(java.lang.String)>($r5);

        r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread> = $r4;

        $r6 = r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread>;

        virtualinvoke $r6.<android.os.HandlerThread: void start()>();

        $r7 = new android.os.Handler;

        $r8 = r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread>;

        $r9 = virtualinvoke $r8.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Looper)>($r9);

        r0.<com.android.dreams.basic.Colors: android.os.Handler mRendererHandler> = $r7;

     label1:
        return;
    }

    public void onAttachedToWindow()
    {
        com.android.dreams.basic.Colors r0;
        android.view.TextureView $r1;

        r0 := @this: com.android.dreams.basic.Colors;

        specialinvoke r0.<android.service.dreams.DreamService: void onAttachedToWindow()>();

        virtualinvoke r0.<com.android.dreams.basic.Colors: void setInteractive(boolean)>(0);

        virtualinvoke r0.<com.android.dreams.basic.Colors: void setLowProfile(boolean)>(1);

        virtualinvoke r0.<com.android.dreams.basic.Colors: void setFullscreen(boolean)>(1);

        $r1 = r0.<com.android.dreams.basic.Colors: android.view.TextureView mTextureView>;

        virtualinvoke r0.<com.android.dreams.basic.Colors: void setContentView(android.view.View)>($r1);

        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        com.android.dreams.basic.Colors r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        com.android.dreams.basic.Colors$1 $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.dreams.basic.Colors;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[2] = $r4;

        staticinvoke <com.android.dreams.basic.Colors: void LOG(java.lang.String,java.lang.Object[])>("onSurfaceTextureAvailable(%s, %d, %d)", $r2);

        $r6 = r0.<com.android.dreams.basic.Colors: android.os.Handler mRendererHandler>;

        $r5 = new com.android.dreams.basic.Colors$1;

        specialinvoke $r5.<com.android.dreams.basic.Colors$1: void <init>(com.android.dreams.basic.Colors,android.graphics.SurfaceTexture,int,int)>(r0, r1, i0, i1);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        com.android.dreams.basic.Colors r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        com.android.dreams.basic.Colors$2 $r5;
        android.os.Handler $r6;

        r0 := @this: com.android.dreams.basic.Colors;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r1;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[2] = $r4;

        staticinvoke <com.android.dreams.basic.Colors: void LOG(java.lang.String,java.lang.Object[])>("onSurfaceTextureSizeChanged(%s, %d, %d)", $r2);

        $r6 = r0.<com.android.dreams.basic.Colors: android.os.Handler mRendererHandler>;

        $r5 = new com.android.dreams.basic.Colors$2;

        specialinvoke $r5.<com.android.dreams.basic.Colors$2: void <init>(com.android.dreams.basic.Colors,int,int)>(r0, i0, i1);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        com.android.dreams.basic.Colors r0;
        android.graphics.SurfaceTexture r1;
        java.lang.InterruptedException r2, $r7;
        java.lang.Object[] $r3, $r8;
        com.android.dreams.basic.Colors$3 $r4;
        android.os.Handler $r5;
        android.os.HandlerThread $r6;

        r0 := @this: com.android.dreams.basic.Colors;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <com.android.dreams.basic.Colors: void LOG(java.lang.String,java.lang.Object[])>("onSurfaceTextureDestroyed(%s)", $r3);

        $r5 = r0.<com.android.dreams.basic.Colors: android.os.Handler mRendererHandler>;

        $r4 = new com.android.dreams.basic.Colors$3;

        specialinvoke $r4.<com.android.dreams.basic.Colors$3: void <init>(com.android.dreams.basic.Colors)>(r0);

        virtualinvoke $r5.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        $r6 = r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread>;

        virtualinvoke $r6.<android.os.HandlerThread: void join()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r2;

        staticinvoke <com.android.dreams.basic.Colors: void LOG(java.lang.String,java.lang.Object[])>("Error while waiting for renderer", $r8);

     label4:
        return 1;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        com.android.dreams.basic.Colors r0;
        android.graphics.SurfaceTexture r1;
        java.lang.Object[] $r2;

        r0 := @this: com.android.dreams.basic.Colors;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r1;

        staticinvoke <com.android.dreams.basic.Colors: void LOG(java.lang.String,java.lang.Object[])>("onSurfaceTextureUpdated(%s)", $r2);

        return;
    }

    static com.android.dreams.basic.ColorsGLRenderer access$000(com.android.dreams.basic.Colors)
    {
        com.android.dreams.basic.Colors r0;
        com.android.dreams.basic.ColorsGLRenderer $r1;

        r0 := @parameter0: com.android.dreams.basic.Colors;

        $r1 = r0.<com.android.dreams.basic.Colors: com.android.dreams.basic.ColorsGLRenderer mRenderer>;

        return $r1;
    }

    static com.android.dreams.basic.ColorsGLRenderer access$002(com.android.dreams.basic.Colors, com.android.dreams.basic.ColorsGLRenderer)
    {
        com.android.dreams.basic.Colors r0;
        com.android.dreams.basic.ColorsGLRenderer r1;

        r0 := @parameter0: com.android.dreams.basic.Colors;

        r1 := @parameter1: com.android.dreams.basic.ColorsGLRenderer;

        r0.<com.android.dreams.basic.Colors: com.android.dreams.basic.ColorsGLRenderer mRenderer> = r1;

        return r1;
    }

    static android.os.HandlerThread access$100(com.android.dreams.basic.Colors)
    {
        com.android.dreams.basic.Colors r0;
        android.os.HandlerThread $r1;

        r0 := @parameter0: com.android.dreams.basic.Colors;

        $r1 = r0.<com.android.dreams.basic.Colors: android.os.HandlerThread mRendererHandlerThread>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.android.dreams.basic.Colors: boolean DEBUG> = 0;

        $r0 = class "com/android/dreams/basic/Colors";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.dreams.basic.Colors: java.lang.String TAG> = $r1;

        return;
    }
}
